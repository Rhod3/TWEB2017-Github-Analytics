{
  "torvalds": {
    "user": "torvalds",
    "statsGlobal": {
      "nbCommits": 3511,
      "nbWordsMessage": 421340,
      "messages": "Improve on the timing logic a bit more\n\nTime the warmup run to make a better estimate of how long to run the\nreal runs.  We want to balance getting timely results with still\nactually having the time to actually traverse the full list a few times.\n\nThis basically aims for the real run to traverse the list at least five\ntimes, but to also run for at least a fifth of a second.  Because five\nis obviously a holy random number, and is also how many times we run the\ntest to try to de-noise the final number.\n\nThis also changes \"make run\" to actuall test the 256M case like the\nREADME says (rather than stop at 128M).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve on map re-allocation strategy\n\nDon't bother reallocating hugepage mappings, the cache associativity\nissues are hopefully not all that noticeable with big pages to begin\nwith, and with fewer big pages to go around it's likely less effective\nto try to change the mapping anyway.\n\nFor the regular page case, force any remapping to over-map the old\nmapping, which will free the old pages.  That might cause the new\nmapping to have similar allocation patterns as the old one, but not\nusing excessive amounts of memory still makes this the better option.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Try to increase result stability by running multiple rounds\n\nThis runs things five times, randomizing the list in between each run,\nand then picks the minimum cycle time of the five.  That makes the\nresults more stable.\n\nThere's a few downsides to this:\n\n (a) to avoid taking five times as long, each run only runs for half a\n     second. Which might not actually be enough to go around for big\n     memory areas.\n\n (b) is minimum cycle time actually good? It's _usually_ the right thing\n     to do for latency benchmarks, but it might also end up showing the\n     \"good case\", ie when the mapping happened to cause the fewest\n     associativity misses etc.\n\n (c) the code is currently intentionally stupid and doesn't even free\n     the old mappings, which is good to make sure that we don't get the\n     same virtual memory pattern, but might cause problems when you want\n     to test under low-memory conditions (just to pick one example).\n\nI'll have to think about this some more, but let's try it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add README and LICENSE.txt file\n\n... and a .gitignore file.\n\nAll prepping for putting it on github or something\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Allow odd stride values\n\nThey are actually quite useful for testing unaligned behavior: does it\nslow down every access, or does it slow down only some accesses?\n\nFor example, on my i7-6700K, I get\n\n\t[torvalds@i7 test-tlb]$ ./test-tlb 16k 12\n\t  1.29ns (~5.0 cycles)\n\n\t[torvalds@i7 test-tlb]$ ./test-tlb 16k 11\n\t  1.36ns (~5.3 cycles)\n\nwhich means that the unaligned load case is actually very low in pointer\nchasing situations.  With a stride of 11, 75% of all the memory accesses\nwill be unaligned, but it only costs an additional 0.3 cycles on average.\n\nThe reason is that unaligned loads are basically free, except when they\ncross some other boundary (*).  To test what the cost of that is, I'd\nneed to add a \"offset\" parameter and allow people to force every access\nto be a bank crosser.\n\nSome day.\n\n(*) There may be other costs, like just resource use costs.  But the\nkinds of boundaries that tend to matter are L1 D$ boundaries (that need\nto access two lines), but also obviously page-crossers (that need two\nTLB entries), and also sub-banks in the L1 (depending on width of the L1\ninterface).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Work even in the presense of transparent hugepage  \"always\".\n\nChristian Borntraeger tested on an s390, and had transparent hugepages\nset to \"always\", which meant that the small-page case never triggered at\nall.\n\nSo when not testing the hugepage case, explicitly do a\n\n\tmadvise(MADV_NOHUGEPAGE)\n\non the memory allocation.\n\nReported-by: Christian Borntraeger <christian@borntraeger.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use gettimeofday for start/end\n\nIn case your \"alarm(1)\" isn't entirely precise. Improve the tester some more, remove the old TLB-only code Try to create test of truly random list walker\n\n.. with hugetlb and without.\n\nIt may be broken. Very hacky TLB timing tester Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer: USB HID fixes.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Make the initialization thread-safe\n  Initialize the usb library only once Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer:\n\n - workarounds for Windows libusb and hidapi issues\n\n - misc random cleanups/noise\n\n - rename DiveSystem to Ratio\n\n - make Cochran with better with FTDI\n\n - new support for: Suunto D4f, Ratio idive tank pressure, and Sherwood\n   Insight temperature and Oceanic ndl/deco sample.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Workaround for a Windows libusb issue\n  Use a fixed size packet for sending\n  Replace the size macro with the sizeof operator\n  Use the correct printf format for the size_t type\n  Move platform specific macros to a common header file\n  Use the correct data type for the return value\n  Rename the DiveSystem vendor to Ratio\n  Fix the Sherwood Insight temperature\n  Implement the ndl/deco sample\n  Change communication parameter to work better with FTDI\n  Retry read operations on failure\n  Add support for the Suunto D4f\n  Implement the tank pressure Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer:\n\n - uwatec cleanups and fixes (G2/trimix parsing etc)\n\n - event and bookmark fixes for Oceanic, iDive/iX3M and Aqualung i300\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Use more descriptive names\n  Use two passes to parse the profile data\n  Fix the Uwatec trimix data format\n  Implement the ndl/deco, rbt and bookmark samples\n  Implement the setpoint sample for the iDive and iX3M\n  Implement the ndl/deco sample for the Aqualung i300\n  Update the msvc project file Scubapro G2: add zero report type to USBHID packet write\n\nJef reports that this is required for HIDAPI, and while I would really\nlike to just make the report type part of the custom packet_io interface\ninstead of making it visible here, this is the minimal fix for now.\n\nSee commit d251b373becc (\"Add a zero report ID to the commands\"), which\ndoes the same thing, except for the fact that we now need to treat BLE\nand USB HID differently.\n\nI may still end up teaching the USB HID custom-IO layer to add the\nreport ID byte, and just specify it at dc_usbhid_custom_io() time\ninstead.  That would make the G2 code not have to care about the\ntransfer protocol again.\n\n(But the other user of USB HID - the Suunto EON Steel - has much bigger\nprotocol differences between USB HID and BLE, so the whole \"try to be\nprotocol-agnostic\" hope may be just a pipe dream anyway, and it's just\nthe Scubapro G2 that _could_ work that way).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add EON Steel time sync capability\n\nThe EON Steel can use the new 'timesync' interface to set the time\nautomatically from the computer it is connected to.\n\nThis also regularizes the EON Steel command names a bit, and adds a few\nnew commands (you can also read the time etc, which this doesn't\nactually use).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer from Jef:\n\n - more Cochran work from John Van Ostrand\n\n - new 'timesync' interface to synchronize the clock on a dive computer\n\n - support for Aqualung i200\n\n - misc updates (Cressi Leonardo fix, OSTC 3+ renaming, fix surface pressure on iX3M, idive salinity parsing)\n\n - HIDAPI work.\n\nIt turns out that HIDAPI is not compatible with libusb in the actual\npacket sending path, so this will need some more cleanups - Jef doesn't\nsee the issue because he doesn't have a generic packet IO layer and\ndoesn't share packets with the BLE code.\n\n* git://git.libdivecomputer.org/libdivecomputer: (25 commits)\n  Add basic timezone support\n  Add time synchronization to the example application\n  Implement the new api for the HW devices\n  Add support for synchronizing the device clock\n  Use hidapi as the default USB HID library\n  Workaround for a Windows hidapi issue\n  Reset the number of bytes to zero on error\n  Add a zero report ID to the commands\n  Fix compatibility issue with hidapi\n  Implement the salinity field\n  Fix the atmospheric pressure for the iX3M\n  Rename the OSTC 3+ to OSTC Plus\n  Locate the most recent dive using the logbook pointers\n  Add support for the Aqualung i200\n  Add event handling to TM model\n  Fix profile buffer size and address size\n  Add three event codes\n  Add support for the Commander TM\n  Dump function no longer assumes reads begin at byte 0\n  Remove unneeded function\n  ... Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer from Jef:\n\n - Jef merged my Scubapro G2 work, but renamed everything, and didn't\n   get the newer IO model code. Very annoying.\n\n   I went along with changing the G2 model family name to\n   DC_FAMILY_UWATEC_G2 just to keep some of the basic infrastructure\n   more easily mergeable.  But his uwatec_g2 version is not usable.\n\n - Cochran updates from John Van Ostrand\n\n - Misc improvements from Jef:\n    * divesystems idive improvements\n    * Oceanic OCS freedive mode\n    * ppO2 callback cleanup\n\n - Some transport type work:\n    * changes to IRDA configuration\n    * basic bluetooth rfcomm transport mode\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer: (35 commits)\n  Removed unused code\n  Fixed duplicate gasmix event reports\n  Added decompression event handling for the Commander\n  Fix bad profiles when profile ringbuffer wraps around\n  Changed cochran_comander_profile_size function parameters\n  Fixed location and encoding of Commander II pointers\n  Use a local variable for the layout pointer\n  Add new EMC device model string\n  Add support for Pre-21000 s/n Commander dive computers\n  Fix problems with wrapped logbook ringbuffer\n  Retry read operations on failure\n  Change profile download to be incremental\n  Fix the id string offset\n  Fix the progress events\n  Use the trimix data format\n  Use the correct model number\n  Enable more fine grained progress events\n  Abort with an error if the buffer is too small\n  Use the standard libdivecomputer error codes\n  Scubapro G2: add missed command packet logging\n  ... Clean up Shearwater string handling\n\nAnd remove the nasty and disgusting transmitter data handling code that\nDirk added to work around his misunderstanding of the parsing code.\n\nThis code now collects the various states of the transmitter batteries\nthroughout a dive and reports the most meaningful summary in the end. It\nalso rewrites the rest of the string handling code to be architecturally\ncleaner.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix incorrect placement of -lz (zlib) in autotools build\n\nWhen I added support for the new Suunto EON Steel bluetooth download, I\nneeded crc32(), and instead of cooking my own (libdivecomputer does do\nits own versions of the simpler crc functions), I made libdivecomputer\njust depend on zlib instead, which provides a convenient crc32() function.\n\nBut I didn't add the new linker flag (-lz) in the right place in the\nautomake.  It worked fine for me on Linux, but apparently not so well on\nmacos.\n\nThis fixes it.\n\nReported-and-tested-by: Benjamin <nystire@gmail.com>\nTested-by: Axel Richter <Axel.Richter@freenet.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add missed command packet logging\n\nI did the packet logging for the received data side, but forgot to do\nthe same thing on the command transfer side, which makes the debug logs\na bit less useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add back the initial handshake code\n\nWhen doing the G2 downloader, I dropped the initial handshake as I tried\nto keep the code minimal, and the handshake didn't seem to make any\ndifference what-so-ever to me.\n\nAnd it probably doesn't matter for anybody else either.  But the code\nisn't working for some people, and maybe it does actually matter.\n\nMore importantly, Scubapro's own LogTRAK application does send those two\ninitial commands, and it's probably a good idea to minimize the\ndifferences between the different downloaders anyway, so add the\nhandshake sequence back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: clean up unused field\n\nJef Driesen correctly points out that the 'address' field is just\nleftover from the IrDA code, and is meaningless for the USB HID\ntransport version of the Scubapro G2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add initial Scubapro G2 frontend\n\nThe back-end parser seems to be the same as for the Uwatec Smart (aka\nGalileo Sol).  At least that's the assumption right now.\n\nThe downloader just uses USB HID (very similar to EON Steel) rather than\nthe horrible IrDA thing.\n\nThere's also eventually a BLE thing, but that's for the future.\n\nThis is an unholy mixture of the Uwatec Smart downloader logic and the\nEON Steel usbhid transfer code.  The back-end is pure Uwatec Smart\n(model 0x11, same as Galileo Sol).\n\nI'm not at all sure this gets everything right, but it downloads\n*something*.\n\n[Jef Driesen: Renamed the backend to uwatec, and made some smaller\n              cosmetic changes to match the existing coding style.]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the operations in 'custom_io' to consistent calling conventions\n\nThe serial ops used a legacy calling convention that passed in just the\npointer to the userdata pointer (ie the first argument to the functions\nwas \"void **userdata\").\n\nThat's actually very inconvenient, because the custom IO data can not\nonly contain other interesting information that was filled in by the\ncustom IO provider, it also made it harder to chain these things\ntogether, as exemplified by the core to emulate serial over the packet\ninterface in the subsurface bluetooth code.\n\nThis also adds the 'dc_context_t' field that is passed to the packet\nroutine open.  That can allow the open routine to override the\n'custom_io' details of the context at open time (to allow nested\ncustom_io operation).\n\nNote that callers of the open function need to be aware that the\n'custom_io' can be changed by the act of opening a custom_io, and the\nvalue shouldn't be cached in some local variable.\n\nFinally, this adds a new user-supplied opaque pointer\n\n\tdc_user_device_t *user_device;\n\nto the custom_io descriptor.\n\nThe 'user_device' data is filled in when registering the custom_io with\ndata that the custom IO open() routines can use.  This is different from\nthe existing 'userdata' in that the 'user_device' is filled in before\ndc_open_device() is called (and \"open\" can then use it to limit what\nkinds of devices it looks for, for example).\n\nIn contrast, the existing 'userdata' field is filled in by the\n\"xyz_open()\" routines, and contains the data necessary for the IO\nitself.\n\nThe SSRF_CUSTOM_IO define is updated to v2 to indicate the new\ninterfaces.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'BLE-downloaders' into Subsurface-branch\n\nThis merges the Suunto EON Steel and Scubapro G2 BLE downloading updates\ninto the main Subsurface branch.\n\nThe basic infrastructure had been done earlier, this is just the tweaks\nto actually take advantage of the BLE GATT back-end in Subsurface for\nthose two dive computers.\n\nThe actual subsurface code that exposes BLE GATT interfaces has not been\nmade public yet, it's too ugly, and will probably make small children go\nblind.  But I'll try to clean it up a bit and get it out for wider\ntesting asap.\n\n* BLE-downloaders:\n  Scubapro G2: update for BLE downloading\n  Complete the EON Steel HDLC encoding/decoding work\n  Teach the EON Steel about HDLC encoding of the command packets Scubapro G2: update for BLE downloading\n\nThe code actually almost worked as-is, but for a tiny detail: the USBHID\npacket reception code always receives a full 64-byte packet, while BLE\nGATT will return how much it actually received.\n\nThe other difference is that USB HID is so fast that it didn't make any\ndifference where the progress was updated, it took about a second to\ndownload everything.\n\nBLE GATT is not fast to begin with, and the G2 may be particularly slow.\n\nSo with the BLE backend, you really do want progress updates for each\npacket received, because the dump is going to take a while...\n\nBut with the trivial packet verification change, and with the progress\nreport updates, everything \"JustWorks(tm)\" over BLE.\n\nOf course, I haven't committed the actual Subsurface BLE transfer parts\nyet, because they are some incredibly ugly stuff with fragile bits and\npieces.  But the fact that I can now download from two different dive\ncomputers does mean that I think it's getting to the point where I will\njust submit even my ugly code to Dirk.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Complete the EON Steel HDLC encoding/decoding work\n\nThe previous patch did the HDLC encoding on packet send, this does the\nHDLC decoding on the receive side.\n\nIn order to properly check the data integrity, the HDLC-encoded packet\nneeds to be fully received before it can be processed.  So while the HID\ndownloading continues to work packet-by-packet, the HDLC encoded BLE\nGATT stream needs a temporary buffer for the data that gets filled as we\nask for the reply header.\n\nRight now only the old USB HID path is actually tested, because I\nhaven't flushed out the packet receiving side in subsurface yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the EON Steel about HDLC encoding of the command packets\n\nThe BLE GATT transport ends up using HDLC for the stream encoding,\nunlike the USB HID side.  The EON Steel BLE GATT protocol actually does\nthat for both the commands and for the replies, but this converts only\nthe command side, because that's the simpler one.\n\nThe reply side code will need to be re-architected a bit, because right\nnow it is very much oriented towards beign able to do everything one\nsingle packet at a time (which is true for USB HID) rather than treating\nthe packets as a stream of data (as is necessary for the CRC32\nverification and to handle the escaping of the 0x7e/0x7d bytes in the\nstream).\n\nSo with this change, you can't actually do a download over BLE, but I\nwas able to verify that the first command transfers correctly, and the\nEON Steel replies to it over Bluetooth LE GATT.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Convert Suunto EON Steel and Scubapro G2 to dc_usbhid_custom_io helper\n\nThis means that they still default to their respective USB devices, but\nyou can now set custom IO structure to pass in your own data.\n\nNot only will we hopefully have some kind of BLE support, you could also\nuse this to simply emulate packets from a log-file by having a packet\nreplay (or by actually emulating a device).  Of course, you can already\ndo this by actually emulating the device in a virtual environment, but\nit might be useful for some kind of libdivecomputer testing environment.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> usbhid: add helper function to create a usbhid 'custom_io_t'\n\nBasically, this alows us to hide the usbhid code behind the custom_io\nabstraction, so that a dive computer could either be given a supplied\ncustom_io structure, of if none is given, would create one for a USBHID\ndevice.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename 'custom_serial' as 'custom_io' across the board\n\nThe custom IO handlers will be extended to not just do serial line\nemulation (generally over Bluetooth rfcomm), but do BLE too.\n\nBLE does not look like a serial protocol at all, it's packet-based, and\nwe may have to add specific routines to indicate which GATT endpoints to\nuse etc.  But like the traditional custom serial code, we want to do the\nactual IO not from within libdivecomputer, but from the user of the\nlibrary (because the BLE support will require things like the Qt\nConnectivity layer - and we do not want libdivecomputer to have to link\nagainst something like Qt).\n\nSo this renames 'custom_serial' to 'custom_io', and instead names the\nindividual member function pointers 'serial_*' to make it clear that\nthose members are for serial communication.\n\nIt also adds new placeholders for packet_open/close/read/write.  Note\nthat while these may look similar to the serial counter-parts, they are\nnot the same or even necessarily mutually exclusive.  It is possible the\nthe caller fills in one or the other (or both), and they would be used\nindependently.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: make the backend_table_t contain the right values for the G2\n\nNot that anybody should ever use that old-style family/model thing\nanyway, so I considered just removing the g2 entry instead.  But dctool\nstill uses this deprecated interfsce to pick a dive computer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add missed command packet logging\n\nI did the packet logging for the received data side, but forgot to do\nthe same thing on the command transfer side, which makes the debug logs\na bit less useful.\n\nOf course, it turns out that a bug in subsurface means that the logging\nnever gets enabled anyway even when you ask for it, so right now this\nparticular misfeature didn't matter.  I'm hoping Tomaz/Dirk can fix the\nUI widget problem.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add back the initial handshake code\n\nWhen doing the G2 downloader, I dropped the initial handshake as I tried\nto keep the code minimal, and the handshake didn't seem to make any\ndifference what-so-ever to me.\n\nAnd it probably doesn't matter for anybody else either.  But the code\nisn't working for some people, and maybe it does actually matter.\n\nMore importantly, Scubapro's own LogTRAK application does send those two\ninitial commands, and it's probably a good idea to minimize the\ndifferences between the different downloaders anyway, so add the\nhandshake sequence back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: clean up unused field\n\nJef Driesen correctly points out that the 'address' field is just\nleftover from the IrDA code, and is meaningless for the USB HID\ntransport version of the Scubapro G2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add initial Scubapro G2 frontend\n\nThe back-end parser seems to be the same as for the Uwatec Smart (aka\nGalileo Sol).  At least that's the assumption right now.\n\nThe downloader just uses USB HID (very similar to EON Steel) rather than\nthe horrible IrDA thing.\n\nThere's also eventually a BLE thing, but that's for the future.\n\nThis is an unholy mixture of the Uwatec Smart downloader logic and the\nEON Steel usbhid transfer code.  The back-end is pure Uwatec Smart\n(model 0x11, same as Galileo Sol).\n\nI'm not at all sure this gets everything right, but it downloads\n*something*.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes as requested by Jan Mulder.\n \"DiveSystem iX3M:\n   - Add support for new iX3M models\n   - Add support for new iX3M APOS4 firmware\n   - Add iX3M firmware version to the devinfo event (ix3m)\n\n  Shearwater:\n   - Report the ppO2 in external O2 sensor mode only (Shearwater)\n   - Replace the constant offset with a scaling factor (Shearwater)\n   - Apply the calibration correction only for the Predator\n   - Report individual sensor values\n   - Predator: don't report PPO2 unless in CC mode\n\n  Misc:\n   - Fix Sherwood Wisdom 3 memory layout\n   - Implement read and write functions for OSTC3\n   - Add support for Mares Quad\n   - Fix uwatec handshaking error handling\"\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  Add support for the new models\n  Add support for the new iX3M APOS4 firmware\n  Add the firmware version to the devinfo event\n  Report the ppO2 in external O2 sensor mode only\n  Replace the constant offset with a scaling factor\n  Apply the calibration correction only for the Predator\n  shearwater: Report individual sensor values\n  Predator: don't report PPO2 unless in CC mode\n  Fix the Sherwood Wisdom 3 memory layout\n  Implement the read and write functions for the OSTC3\n  Don't ignore handshaking errors\n  Add support for the Mares Quad Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nThe most noticeable part is Jen Mulder's OSTC3 initial setpoint\naddition, which fixes the OSTC3 data in CCR3 mode.\n\nBut also various cleanups and fixups from Jef.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  OSTC3: set initial setpoint in profile data\n  Remove unused parameters\n  Cleanup the extract dives functions\n  Remove unnecessary helper functions\n  Remove deprecated functions from the public api\n  Remove unnecessary include statements\n  Fix the firmware version and serial number\n  Add support for the Uwatec Aladin Tec 3G Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nNo major changes and no conflicts except for a trivial one where Jef had\nmarked a couple of private functions 'static' and our versions had\nextended the argument lists of those functions.\n\nThis just updates to the current upstream state of libdivecomputer,\nwhere the bulk of the changes come mainly from the new ringbuffer helper\ncode, but there are various other small misc fixes and cleanups.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Disable the deco events\n  Replace the deco events with a deco sample\n  Report errors from the close function\n  Mark the private function as static\n  Fix a bug in the tank pressure samples\n  Disable freedive mode for the Uwatec Aladin Tec 2G\n  Mark the private function as static\n  Fix some compiler warnings\n  Fix some more null pointer dereferences\n  Use a more efficient download algorithm\n  Use the new ringbuffer stream\n  Add a common ringbuffer reading algorithm\n  Improve the robustness of the IrDA I/O code\n  Fix a few null pointer dereferences\n  Fix the number of gas mixes\n  Always use the sample timestamp as the base value Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into sync-with-upstream\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nThe most notable one is how libdivecomputer no longer sends the\nGASCHANGE events, but uses DC_SAMPLE_GASMIX instead.\n\nWe still turn it into a SAMPLE_EVENT_GASCHANGE2 event internally in\nsubsurface, since we want all the normal event handling to trigger.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer: (21 commits)\n  Document the date/time functions\n  Document the public api with man pages\n  Add support for the Cressi Drake\n  Detect overwritten dive profiles\n  Ignore tank pressure if no sensor is attached\n  Add support for the tank field\n  Add support for the salinity field\n  Use the sample interval from the settings\n  Update the Aqualung i750TC parser\n  Toggle the DTR line during setup\n  Implement the read function\n  Add doxygen documentation to the build system\n  Add support for the Aqualung i750TC\n  Fix the Windows version resource build\n  Force the dive mode to gauge\n  Add support for the dive mode\n  Report the initial gas mix on the first sample\n  Remove the deprecated gas change events\n  Add support for the Hollis DG02.\n  Add support for the Oceanic F10.\n  ... Merge tag 'v0.5.0' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream version 0.5.0.\n\nSome small updates from Jef Driesen since the last sync, but let's sync\nwith the real 0.5.0 release.\n\n* tag 'v0.5.0' of git://git.libdivecomputer.org/libdivecomputer:\n  Release version 0.5.0.\n  Include the public header in the implementation file.\n  Add explicit casts for the msvc C++ compiler.\n  Add some workarounds for the msvc compiler.\n  Update the msvc project file.\n  Add missing header files to the Makefiles.\n  Add support for the Subgear XP-Air Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with Jef Driesen's upstream.\n\nJef has updated his branch with about half of the EON Steel fixes, but\nstill refuses to admit that the string model is much superior to his\ncrazy \"random numbers that can't actually describe anything properly\"\nmodel, and left out all those parts.\n\nBut Jef also made a generic HID layer thing that cleans things up (but\ncauses a spurious warning about a failed usb hid read due to the \"clean\nout old data\" code that *expects& the failure), and fixed his version of\nthe HW Frog firmware, so this cleans up that issue.\n\nWe also now have that gas mix parsing fix for the Aladin Tec 2G properly\nmerged, so that our cherry-pick won't cause merge issues later.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  Fix the firmware version for the HW Frog.\n  Use the new USB HID backend for the Eon Steel.\n  Add a dummy backend for systems without USB HID support.\n  Use the hidapi library on Mac OS X.\n  Add a new USB HID communication backend.\n  Add a configure option to build without libusb.\n  Restore the sample events.\n  Suunto EON Steel: initialize the tank 'gasmix' index\n  Suunto EON Steel: do the proper enum lookup for a few more cases\n  Suunto EON Steel: fix the event begin/end flag\n  Suunto EON Steel: split out gas info parsing\n  EON Steel: look up enum descriptor strings\n  EON Steel: pass in the type descriptor to samples that need it\n  EON Steel: mark tank cache initialized when filling it in\n  EON Steel: fix uninitialized field cache entries\n  Initial Suunto EON Steel CCR support\n  Suunto EON Steel: add descriptor debugging output\n  Add tank size reporting for Suunto EON Steel\n  Fix the gas mix parsing for the Aladin Tec 2G. Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nThis is a rough merge of the upstream libdivecomputer changes.\n\nI say \"rough\", because this disables the custom serial code as it\nclashes very badly with Jef's new dc_serial_t abstraction.\n\nAnton Lundin has patches on top of this to re-introduce the custom code\nin a way that integrates better with the upstream libdivecomputer state.\n\n* git://git.libdivecomputer.org/libdivecomputer: (42 commits)\n  Add support for the Sherwood Vision.\n  Fix the decoding of the maximum depth.\n  Improve the default layout detection.\n  Add a warning for unsupported devices.\n  Fix the temperature for the Tusa Zen Air.\n  Add support for the Aqualung i550T.\n  Use the new settings field for the salinity.\n  Fix the parsing of freedives.\n  Detect the gauge and freedive mode correctly.\n  Add the salinity field for the Aladin Tec.\n  Add support for the Scubapro Mantis 2.\n  Fix the decoding of the dive time.\n  Add support for the Scubapro Mantis.\n  Fix the Aeris 500AI serial number.\n  Add the serial number encoding to the layout.\n  Add salinity and timezone fields to Aladin Tec 2G\n  Add NDL and RBT for the ATOM31 and I450T\n  Add support for the new extended hardware descriptor.\n  Update the OSTC device descriptors.\n  Add a workaround for an OSTC4 firmware bug.\n  ... Suunto EON Steel: initialize the tank 'gasmix' index\n\nThe gasmix query interface considers cylinders and gas mixes independent\nthings, so the tank data structure has a pointer to the gasmix index.\n\nBut the EON Steel treats cylinders as just having a gasmix (and so does\nsubsurface, for that matter), so the gasmix index for the tank is just\nthe same as the tank index.\n\nBut we never filled it in, so you'd always see a \"gas index\" of zero,\nand subsurface would end up warning each time about how the gasmix index\ndoesn't match the cylinder index (but because subsurface actually agreed\nwith EON Steel, it worked despite the warning).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: do the proper enum lookup for a few more cases\n\nInstead of hardcoding the enum values for setpoint type and gas type,\nuse \"lookup_enum()\" to actually parse the enum data and use that.\n\nI don't think this matters right now, since the numeric translations\nhaven't changed, but it is the RigthThing(tm) to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: fix the event begin/end flag\n\nThis fixes a bug where the begin/end marker was mistakenly added as the\nvalue instead of as flag.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: split out gas info parsing\n\nThe dive gas parsing cases can be split out into a helper function to\nkeep things more manageable.  Especially since there will be a couple\nmore cases coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: look up enum descriptor strings\n\nIt turns out you can't hardcode the enum numbers either, since they\nchange from dive to dive (or possibly firmware version to firmware\nversion).\n\nSo do it right, and actually parse the string descriptor for the enum.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: pass in the type descriptor to samples that need it\n\nThe samples that take 'enum' types need the type descriptor to parse\nwhat the enum type means.\n\nThis doesn't actually use the data yet, I need to add parsing of the\nenum descriptor string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: mark tank cache initialized when filling it in\n\nThe previous commit fixed the cache initialization testing, and\nuncovered the fact that the tank size cache initialization didn't set\nthe initialized bit correctly.  That oversight had been hidden by the\nfact that we then tested the bit wrongly, so not setting it right didn't\nuse to matter as long as there were other higher cache bits that were\nset.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix uninitialized field cache entries\n\nThe check for whether we had initialized a field in the EON Steel cache\ndata structure was wrong, causing some entries to be returned\nsuccessfully even if their field had never been initialized.\n\nIn most cases, it didn't matter, since the cache data was initialized to\nzero (which is a fine default for uninitialized data), so most of the\ntime it didn't matter.\n\nBut for the recently added dive mode field, this caused OC dives to be\nreturned as freedives, for example.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial Suunto EON Steel CCR support\n\nThis does the basic divemode and setpoint parsing for the EON Steel, and\ngets the CCR download right in the big picture.\n\nThe cylinder information is still confusing and incorrect, but this is a\nbig step in the right direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add descriptor debugging output\n\n.. every time I look for a new feature I add debug code to print out all\nthe descriptors.  So let's just do it once and for all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: extend our string space\n\nWe only used to save 16 extended strings per dive from the EON Steel\ndownload, which is _plenty_: it's not like we actually generate that\nmany strings.  Firmware version, battery status, transmitter info -\nthere's just not that many strings.\n\nOops.\n\nExcept if you have lots of transmitters.  Then each wireless transmitter\nwill have three strings each, for transmitter ID and beginning/ending\nbattery status.\n\nI only have one, but Andreas Klein has four.  And it took me\nembarrassingly long to realize that he really did have them on the\ndives, because after the first two transmitter IDs got recorded, the\nstring space filled up and we silently dropped the rest.\n\nBut I have learnt my lesson.  Future generations will talk about how I\nsaid \"32 strings will be enough for anybody\".\n\nBut at least it should be enough for a few more transmitters.  Somebody\nshould extend this some better way, but I'm still chasing other issues.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: initialize the tank 'gasmix' index\n\nThe gasmix query interface considers cylinders and gas mixes independent\nthings, so the tank data structure has a pointer to the gasmix index.\n\nBut the EON Steel treats cylinders as just having a gasmix (and so does\nsubsurface, for that matter), so the gasmix index for the tank is just\nthe same as the tank index.\n\nBut we never filled it in, so you'd always see a \"gas index\" of zero,\nand subsurface would end up warning each time about how the gasmix index\ndoesn't match the cylinder index (but because subsurface actually agreed\nwith EON Steel, it worked despite the warning).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: do the proper enum lookup for a few more cases\n\nInstead of hardcoding the enum values for setpoint type and gas type,\nuse \"lookup_enum()\" to actually parse the enum data and use that.\n\nI don't think this matters right now, since the numeric translations\nhaven't changed, but it is the RigthThing(tm) to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add severity indication to the event flags for the Suunto EON Steel\n\nThis way Subsurface can show different icons depending on what kind of\nevent we report.\n\nThis also fixes a bug where the begin/end marker was mistakenly added as\nthe value instead of as flag.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add transmitter battery state reporting\n\nI'm not sure how reliable it is, and older wireless tank pods had a bug\nin the reporting (looks like the battery voltage range calibration was\ndone incorrectly, and it reports 0% battery for new batteries).\n\nBut depending on how well it actually works when the batteries start\ngetting weak, the transmitter battery reporting is potentially *very*\nuseful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add surface time reporting\n\nFor some reason I hadn't reported surface time.  It's trivial to do\nespecially now that we have the varargs string adding function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: split out gas info parsing\n\nThe dive gas parsing cases can be split out into a helper function to\nkeep things more manageable.  Especially since there will be a couple\nmore cases coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add 'varargs' version of 'add_string()' function\n\n.. and use it for the cases that used to do this by hand (Personal\nAdjustment and Desaturation Time).\n\nThere will be more users coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add desaturation time reporting\n\nThe EON Steel reports it in seconds remaining after the dive.  That's a\nbit excessive, but I guess SI units is where it's at.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add dive state event reporting\n\nNow that we support string events and don't need to try to figure out\nsome libdivecomputer event number that doesn't exist, it's easy to add\nthe proper support for the dive state reporting that the EON Steel has.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: look up enum descriptor strings\n\nIt turns out you can't hardcode the enum numbers either, since they\nchange from dive to dive (or possibly firmware version to firmware\nversion).\n\nSo do it right, and actually parse the string descriptor for the enum.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: pass in the type descriptor to samples that need it\n\nThe samples that take 'enum' types need the type descriptor to parse\nwhat the enum type means.\n\nThis doesn't actually use the data yet, I need to add parsing of the\nenum descriptor string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add 'string' event type\n\nThe event numbers are an indecipherable mess, and Suunto EON Steel has\nnotifications, events and warnings that just don't fit.  Plus they\nreally come as strings from the EON Steel anyway.\n\nSo add a \"SAMPLE_EVENT_STRING\" type, and for that type the event has a\n\"const char *name\" instead of the odd and meaningless flags/value pair.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the tank \"type\" field more useful\n\nRight now it only has an indication of whether the cylinder size is\nimperial or metric, which is frankly quite useless.\n\nTurn it into a bitmask instead, where we keep the imperial/metric data\nfor compatibility, but add another two bits that say that it's a CC\ncylinder, and whether it's the oxygen or diluent cylinder.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: mark tank cache initialized when filling it in\n\nThe previous commit fixed the cache initialization testing, and\nuncovered the fact that the tank size cache initialization didn't set\nthe initialized bit correctly.  That oversight had been hidden by the\nfact that we then tested the bit wrongly, so not setting it right didn't\nuse to matter as long as there were other higher cache bits that were\nset.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix uninitialized field cache entries\n\nThe check for whether we had initialized a field in the EON Steel cache\ndata structure was wrong, causing some entries to be returned\nsuccessfully even if their field had never been initialized.\n\nIn most cases, it didn't matter, since the cache data was initialized to\nzero (which is a fine default for uninitialized data), so most of the\ntime it didn't matter.\n\nBut for the recently added dive mode field, this caused OC dives to be\nreturned as freedives, for example.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial Suunto EON Steel CCR support\n\nThis does the basic divemode and setpoint parsing for the EON Steel, and\ngets the CCR download right in the big picture.\n\nThe cylinder information is still confusing and incorrect, but this is a\nbig step in the right direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add descriptor debugging output\n\n.. every time I look for a new feature I add debug code to print out all\nthe descriptors.  So let's just do it once and for all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: expose the gas switch cylinder in the \"flags\" field\n\nThis seems to be the simplest extension to the SAMPLE_EVENT_GASCHANGE2\nformat: the \"value\" remains the oddly encoded gas mix, but the \"flags\"\nvalue (if non-zero) now contains the actual cylinder number we switch\nto.\n\nThis will need a trivial patch to subsurface to take advantage of the\nnew data too.  But then we can actually distinguish between cylinders\nthat have the same gas mix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel personal adjustment parsing\n\nSuunto calls it \"Conservatism\" in the dump, but \"Personal adjustment\" in\nat least some of the documentation. That's what we expose it as.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel dive mode and transmitter ID information\n\nThis adds the divemode name (Nitrox, Trimix, Gauge, or whatever custon\nname) and the transmitter ID as extra string information when\ndownloading from the EON Steel.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: populate various string data\n\nThe EON Steel saves the dive computer firmware versions etc per dive,\nwhich is really nice for upgrades: old dives done with older firmware\nstill show the firmware at the time of the dive.  That, in turn, is nice\nbecause we can use it for a reliable dive ID - dive time with serial\nnumber etc.\n\nThis uses the new DC_FIELD_STRING model to feed the hw/sw information to\nthe application, since we need the parser to access it.  It also returns\nbattery state and deco model information.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix suunto serial numbers\n\nlibdivecomputer has already done the \"byte to decimal\" conversion.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parser: add DC_FIELD_STRING field type for parse-time information\n\nThis can be used to return almost arbitrary information to the dive log\napplication at dive parse time, by returning a number of strings (with a\ndescriptor) for dive state.\n\nNOTE! The strings are supposed to be human-readable, so that the dive\nlog application can just show them unedited - and without understanding\nthem - to the user, together with the description.  So if your dive\ncomputer supports returning a battery voltage, for example, you can\nreturn it as a\n\n  { \"Voltage\", \"4.449V\" }\n\ndescriptor/value string pair, and the application could then put these\nstring pairs together and show (somewhere) an informational line like\n\"Voltage: 4.449V\" along with the other information you return.\n\nSome dive log applications migth recognize particular descriptor strings\nand use them specially to fill in other information (ie serial numbers,\nweight and suit information etc), but in general the interface is very\nmuch meant to be informational free-form for a human user.\n\nSo do *not* use this interface to encode things that are not human-\nreadable.  Serial numbers or version information that is meaningful to\nhumans are fine. But random encoded data structures are not.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: don't report airtime remaining as a libdivecomputer event\n\nIt looks like the SAMPLE_EVENT_AIRTIME is actually meant for just\nairtime warnings (as in the dive computer warning about low air).\n\nIf we ever care, I think we'd need to add a new interface for this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix up missing gastime/ventilation parsing\n\nNow that I actually have dives with the new format and with air\nintegration, I could test it all out and noticed some missing pieces.\n\nThis adds parsing for gastime and ventilation events (although we don't\n*do* anything with the ventilation data, I have no idea what the number\nmeans).\n\nAlso, this fixes an annoying warning message problem, which caused these\nmissing events to cause a SIGSEGV rather than just a bening warning.\nStupid bug, and only went unnoticed because libdivecomputer isn't built\nwith format string warnings.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: convert to dynamic sample parsing\n\nThis gets rid of the fixed sample indexes and the hardcoded grouping\ncode, and replaces them with proper parsing of the type descriptions.\n\nThis should mean that the new Suunto firmware v1.1.15 is now fully\nsupported by libdivecomputer.\n\nThere are still parts of the event description that we should really\nparse better, notably the 'enum' descriptions of what the different\nenumerated types mean, because it looks like those will change too.  But\nthat is not nearly as important as getting the basic infrastructure done\nfor the core sample types.\n\nAlmost accidentally, this also ends up now parsing the compass heading\nevent.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> EON Steel: start moving away from \"fixed\" fields\n\nI was initially fooled into thinking that the field type numbers have\nsome meaning: the types didn't change if the upper byte of the type\nnumber was zero.  So I assumed that meant \"fixed\".\n\nBut the most recent firmware update made clear that no, they aren't\nfixed, and the upper byte of the type must be some other thing.\n\nThis moves some more of the parsing over to comparing the strings,\nrather than looking at the type index.  It still leaves the sample data\nalone, and I really want to do something more efficient than comparing\nthe type descriptor string for that, but at least the dive header fields\nare now just comparing strings.\n\nThe actual marshalling that Suunto uses also describes the encoding, and\nit's all ignoring that for now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> EON Steel: empty descriptor lines are ok\n\nSuunto's new v1.1.15 firmware ends up terminating some final descriptor\nlines with a newline, rather than just using newlines as separators.  So\nthe last newline may not be followed by further data, but simple be the\nend of the string.  Accept that case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto EON Steel: populate dive surface pressure\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: clean up size limits and error reporting\n\nThis is some small cleanup after the whole reply size rewrite.  It\nfurther improves on the error log reporting a bit, and it undoes the\n\"read exact size\" thing introduced in \"suunto eon steel: fix file\nreading special case\", because it is no longer necessary.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: be more explicit about transfer sizes\n\nWhen reading data from the EON Steel, we'd generally continue reading\nuntil we saw that a response was done by seeing a packet that wasn't\nfull.\n\nThat broke for the case of the data boundary matching the packet\nboundary, fixed by the commit \"suunto eon steel: fix file reading\nspecial case\".\n\nHowever, that commit only fixed it for the case of reading a file, where\nthe result has a size that is known up-front.  And most other situations\nreally don't matter, because the result size is fixed and fits in a\nsingle packet, so it all works.\n\nHowever, there are still a few cases that could trigger the problem,\nnotably reading the directory contents.\n\nSo change the send_receive() logic to actually read the expected size\nfrom the receive header in the first packet of the reply.  This means\nthat we need to re-organize the packet reception code a bit, but the end\nresult is that we are much more careful about data sizes,\n\nThis also changes the packet logging to be much more readable, by\nlogging just the actual data, and not the (uninteresting) per-packet\nheader, or the stale data at the end of the packet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: fix file reading special case\n\nThe \"receive_data()\" function would continue to try to read packets as\nlong as the previous packet was full-sized, but with just the right size\nof file and the right chunking, the file might end at a packet boundary.\nThen receive_data() would try to read more data, which fails - there are\nno more packets, despite the last packet being full.\n\nThis never triggered for me, but Robert Helling forwarded a data dump of\na filure to read a dive due to this.\n\nSince I don't trigger this case, I can't really test it, but I did check\nthat the new \"stop early\" logic works for me (ie never triggers ;).\n\nReported-by: Robert C. Helling <helling@atdotde.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel bookmarks, warnings and alarm events\n\nI'd missed these because I'm blind. But mostly because they aren't as\ncommon.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse EON Steel notification and state changes\n\nThe EON Steel notifications and states match the libdivecomputer ones\nvery badly, but this tries to make sense of the ones that match.  And\nputs the infrastructure in to do others in the future.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-fouindation.org> Add EON Steel gas change event parsing\n\nThe really sad part is that the EON Steel handles gas change events\ncorrectly, by actually saying which cylinder it switches to.  But the\nlibdivecomputer interfaces are broken, and only contain the gas *mix*\nyou switch to, which is ambiguous since you could have the same mix in\nmultiple cylinders.\n\nMaybe we could put the one-based cylinder index into the \"flags\" field?\nWith zero meaning \"unknown\". That would be a straightforward extension.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto EON Steel: support downloading of core dive profile data\n\nBasic Suunto EON Steel downloading copied from my test application.\nThis parses all the core dive data, including sample data (time, depth,\ncylinder pressure, deco information etc).\n\nThe deco information returns ceiling and TTS rather than ceiling and\n\"time at ceiling\", because that's what the dive computer has, and I\ndon't see any other way to return the information.\n\nWe don't report any events yet, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer: USB HID fixes.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Make the initialization thread-safe\n  Initialize the usb library only once Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer:\n\n - workarounds for Windows libusb and hidapi issues\n\n - misc random cleanups/noise\n\n - rename DiveSystem to Ratio\n\n - make Cochran with better with FTDI\n\n - new support for: Suunto D4f, Ratio idive tank pressure, and Sherwood\n   Insight temperature and Oceanic ndl/deco sample.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Workaround for a Windows libusb issue\n  Use a fixed size packet for sending\n  Replace the size macro with the sizeof operator\n  Use the correct printf format for the size_t type\n  Move platform specific macros to a common header file\n  Use the correct data type for the return value\n  Rename the DiveSystem vendor to Ratio\n  Fix the Sherwood Insight temperature\n  Implement the ndl/deco sample\n  Change communication parameter to work better with FTDI\n  Retry read operations on failure\n  Add support for the Suunto D4f\n  Implement the tank pressure Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer:\n\n - uwatec cleanups and fixes (G2/trimix parsing etc)\n\n - event and bookmark fixes for Oceanic, iDive/iX3M and Aqualung i300\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Use more descriptive names\n  Use two passes to parse the profile data\n  Fix the Uwatec trimix data format\n  Implement the ndl/deco, rbt and bookmark samples\n  Implement the setpoint sample for the iDive and iX3M\n  Implement the ndl/deco sample for the Aqualung i300\n  Update the msvc project file Scubapro G2: add zero report type to USBHID packet write\n\nJef reports that this is required for HIDAPI, and while I would really\nlike to just make the report type part of the custom packet_io interface\ninstead of making it visible here, this is the minimal fix for now.\n\nSee commit d251b373becc (\"Add a zero report ID to the commands\"), which\ndoes the same thing, except for the fact that we now need to treat BLE\nand USB HID differently.\n\nI may still end up teaching the USB HID custom-IO layer to add the\nreport ID byte, and just specify it at dc_usbhid_custom_io() time\ninstead.  That would make the G2 code not have to care about the\ntransfer protocol again.\n\n(But the other user of USB HID - the Suunto EON Steel - has much bigger\nprotocol differences between USB HID and BLE, so the whole \"try to be\nprotocol-agnostic\" hope may be just a pipe dream anyway, and it's just\nthe Scubapro G2 that _could_ work that way).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add EON Steel time sync capability\n\nThe EON Steel can use the new 'timesync' interface to set the time\nautomatically from the computer it is connected to.\n\nThis also regularizes the EON Steel command names a bit, and adds a few\nnew commands (you can also read the time etc, which this doesn't\nactually use).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer from Jef:\n\n - more Cochran work from John Van Ostrand\n\n - new 'timesync' interface to synchronize the clock on a dive computer\n\n - support for Aqualung i200\n\n - misc updates (Cressi Leonardo fix, OSTC 3+ renaming, fix surface pressure on iX3M, idive salinity parsing)\n\n - HIDAPI work.\n\nIt turns out that HIDAPI is not compatible with libusb in the actual\npacket sending path, so this will need some more cleanups - Jef doesn't\nsee the issue because he doesn't have a generic packet IO layer and\ndoesn't share packets with the BLE code.\n\n* git://git.libdivecomputer.org/libdivecomputer: (25 commits)\n  Add basic timezone support\n  Add time synchronization to the example application\n  Implement the new api for the HW devices\n  Add support for synchronizing the device clock\n  Use hidapi as the default USB HID library\n  Workaround for a Windows hidapi issue\n  Reset the number of bytes to zero on error\n  Add a zero report ID to the commands\n  Fix compatibility issue with hidapi\n  Implement the salinity field\n  Fix the atmospheric pressure for the iX3M\n  Rename the OSTC 3+ to OSTC Plus\n  Locate the most recent dive using the logbook pointers\n  Add support for the Aqualung i200\n  Add event handling to TM model\n  Fix profile buffer size and address size\n  Add three event codes\n  Add support for the Commander TM\n  Dump function no longer assumes reads begin at byte 0\n  Remove unneeded function\n  ... Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with upstream libdivecomputer from Jef:\n\n - Jef merged my Scubapro G2 work, but renamed everything, and didn't\n   get the newer IO model code. Very annoying.\n\n   I went along with changing the G2 model family name to\n   DC_FAMILY_UWATEC_G2 just to keep some of the basic infrastructure\n   more easily mergeable.  But his uwatec_g2 version is not usable.\n\n - Cochran updates from John Van Ostrand\n\n - Misc improvements from Jef:\n    * divesystems idive improvements\n    * Oceanic OCS freedive mode\n    * ppO2 callback cleanup\n\n - Some transport type work:\n    * changes to IRDA configuration\n    * basic bluetooth rfcomm transport mode\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer: (35 commits)\n  Removed unused code\n  Fixed duplicate gasmix event reports\n  Added decompression event handling for the Commander\n  Fix bad profiles when profile ringbuffer wraps around\n  Changed cochran_comander_profile_size function parameters\n  Fixed location and encoding of Commander II pointers\n  Use a local variable for the layout pointer\n  Add new EMC device model string\n  Add support for Pre-21000 s/n Commander dive computers\n  Fix problems with wrapped logbook ringbuffer\n  Retry read operations on failure\n  Change profile download to be incremental\n  Fix the id string offset\n  Fix the progress events\n  Use the trimix data format\n  Use the correct model number\n  Enable more fine grained progress events\n  Abort with an error if the buffer is too small\n  Use the standard libdivecomputer error codes\n  Scubapro G2: add missed command packet logging\n  ... Clean up Shearwater string handling\n\nAnd remove the nasty and disgusting transmitter data handling code that\nDirk added to work around his misunderstanding of the parsing code.\n\nThis code now collects the various states of the transmitter batteries\nthroughout a dive and reports the most meaningful summary in the end. It\nalso rewrites the rest of the string handling code to be architecturally\ncleaner.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix incorrect placement of -lz (zlib) in autotools build\n\nWhen I added support for the new Suunto EON Steel bluetooth download, I\nneeded crc32(), and instead of cooking my own (libdivecomputer does do\nits own versions of the simpler crc functions), I made libdivecomputer\njust depend on zlib instead, which provides a convenient crc32() function.\n\nBut I didn't add the new linker flag (-lz) in the right place in the\nautomake.  It worked fine for me on Linux, but apparently not so well on\nmacos.\n\nThis fixes it.\n\nReported-and-tested-by: Benjamin <nystire@gmail.com>\nTested-by: Axel Richter <Axel.Richter@freenet.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add missed command packet logging\n\nI did the packet logging for the received data side, but forgot to do\nthe same thing on the command transfer side, which makes the debug logs\na bit less useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add back the initial handshake code\n\nWhen doing the G2 downloader, I dropped the initial handshake as I tried\nto keep the code minimal, and the handshake didn't seem to make any\ndifference what-so-ever to me.\n\nAnd it probably doesn't matter for anybody else either.  But the code\nisn't working for some people, and maybe it does actually matter.\n\nMore importantly, Scubapro's own LogTRAK application does send those two\ninitial commands, and it's probably a good idea to minimize the\ndifferences between the different downloaders anyway, so add the\nhandshake sequence back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: clean up unused field\n\nJef Driesen correctly points out that the 'address' field is just\nleftover from the IrDA code, and is meaningless for the USB HID\ntransport version of the Scubapro G2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add initial Scubapro G2 frontend\n\nThe back-end parser seems to be the same as for the Uwatec Smart (aka\nGalileo Sol).  At least that's the assumption right now.\n\nThe downloader just uses USB HID (very similar to EON Steel) rather than\nthe horrible IrDA thing.\n\nThere's also eventually a BLE thing, but that's for the future.\n\nThis is an unholy mixture of the Uwatec Smart downloader logic and the\nEON Steel usbhid transfer code.  The back-end is pure Uwatec Smart\n(model 0x11, same as Galileo Sol).\n\nI'm not at all sure this gets everything right, but it downloads\n*something*.\n\n[Jef Driesen: Renamed the backend to uwatec, and made some smaller\n              cosmetic changes to match the existing coding style.]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the operations in 'custom_io' to consistent calling conventions\n\nThe serial ops used a legacy calling convention that passed in just the\npointer to the userdata pointer (ie the first argument to the functions\nwas \"void **userdata\").\n\nThat's actually very inconvenient, because the custom IO data can not\nonly contain other interesting information that was filled in by the\ncustom IO provider, it also made it harder to chain these things\ntogether, as exemplified by the core to emulate serial over the packet\ninterface in the subsurface bluetooth code.\n\nThis also adds the 'dc_context_t' field that is passed to the packet\nroutine open.  That can allow the open routine to override the\n'custom_io' details of the context at open time (to allow nested\ncustom_io operation).\n\nNote that callers of the open function need to be aware that the\n'custom_io' can be changed by the act of opening a custom_io, and the\nvalue shouldn't be cached in some local variable.\n\nFinally, this adds a new user-supplied opaque pointer\n\n\tdc_user_device_t *user_device;\n\nto the custom_io descriptor.\n\nThe 'user_device' data is filled in when registering the custom_io with\ndata that the custom IO open() routines can use.  This is different from\nthe existing 'userdata' in that the 'user_device' is filled in before\ndc_open_device() is called (and \"open\" can then use it to limit what\nkinds of devices it looks for, for example).\n\nIn contrast, the existing 'userdata' field is filled in by the\n\"xyz_open()\" routines, and contains the data necessary for the IO\nitself.\n\nThe SSRF_CUSTOM_IO define is updated to v2 to indicate the new\ninterfaces.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'BLE-downloaders' into Subsurface-branch\n\nThis merges the Suunto EON Steel and Scubapro G2 BLE downloading updates\ninto the main Subsurface branch.\n\nThe basic infrastructure had been done earlier, this is just the tweaks\nto actually take advantage of the BLE GATT back-end in Subsurface for\nthose two dive computers.\n\nThe actual subsurface code that exposes BLE GATT interfaces has not been\nmade public yet, it's too ugly, and will probably make small children go\nblind.  But I'll try to clean it up a bit and get it out for wider\ntesting asap.\n\n* BLE-downloaders:\n  Scubapro G2: update for BLE downloading\n  Complete the EON Steel HDLC encoding/decoding work\n  Teach the EON Steel about HDLC encoding of the command packets Scubapro G2: update for BLE downloading\n\nThe code actually almost worked as-is, but for a tiny detail: the USBHID\npacket reception code always receives a full 64-byte packet, while BLE\nGATT will return how much it actually received.\n\nThe other difference is that USB HID is so fast that it didn't make any\ndifference where the progress was updated, it took about a second to\ndownload everything.\n\nBLE GATT is not fast to begin with, and the G2 may be particularly slow.\n\nSo with the BLE backend, you really do want progress updates for each\npacket received, because the dump is going to take a while...\n\nBut with the trivial packet verification change, and with the progress\nreport updates, everything \"JustWorks(tm)\" over BLE.\n\nOf course, I haven't committed the actual Subsurface BLE transfer parts\nyet, because they are some incredibly ugly stuff with fragile bits and\npieces.  But the fact that I can now download from two different dive\ncomputers does mean that I think it's getting to the point where I will\njust submit even my ugly code to Dirk.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Complete the EON Steel HDLC encoding/decoding work\n\nThe previous patch did the HDLC encoding on packet send, this does the\nHDLC decoding on the receive side.\n\nIn order to properly check the data integrity, the HDLC-encoded packet\nneeds to be fully received before it can be processed.  So while the HID\ndownloading continues to work packet-by-packet, the HDLC encoded BLE\nGATT stream needs a temporary buffer for the data that gets filled as we\nask for the reply header.\n\nRight now only the old USB HID path is actually tested, because I\nhaven't flushed out the packet receiving side in subsurface yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the EON Steel about HDLC encoding of the command packets\n\nThe BLE GATT transport ends up using HDLC for the stream encoding,\nunlike the USB HID side.  The EON Steel BLE GATT protocol actually does\nthat for both the commands and for the replies, but this converts only\nthe command side, because that's the simpler one.\n\nThe reply side code will need to be re-architected a bit, because right\nnow it is very much oriented towards beign able to do everything one\nsingle packet at a time (which is true for USB HID) rather than treating\nthe packets as a stream of data (as is necessary for the CRC32\nverification and to handle the escaping of the 0x7e/0x7d bytes in the\nstream).\n\nSo with this change, you can't actually do a download over BLE, but I\nwas able to verify that the first command transfers correctly, and the\nEON Steel replies to it over Bluetooth LE GATT.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Convert Suunto EON Steel and Scubapro G2 to dc_usbhid_custom_io helper\n\nThis means that they still default to their respective USB devices, but\nyou can now set custom IO structure to pass in your own data.\n\nNot only will we hopefully have some kind of BLE support, you could also\nuse this to simply emulate packets from a log-file by having a packet\nreplay (or by actually emulating a device).  Of course, you can already\ndo this by actually emulating the device in a virtual environment, but\nit might be useful for some kind of libdivecomputer testing environment.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> usbhid: add helper function to create a usbhid 'custom_io_t'\n\nBasically, this alows us to hide the usbhid code behind the custom_io\nabstraction, so that a dive computer could either be given a supplied\ncustom_io structure, of if none is given, would create one for a USBHID\ndevice.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename 'custom_serial' as 'custom_io' across the board\n\nThe custom IO handlers will be extended to not just do serial line\nemulation (generally over Bluetooth rfcomm), but do BLE too.\n\nBLE does not look like a serial protocol at all, it's packet-based, and\nwe may have to add specific routines to indicate which GATT endpoints to\nuse etc.  But like the traditional custom serial code, we want to do the\nactual IO not from within libdivecomputer, but from the user of the\nlibrary (because the BLE support will require things like the Qt\nConnectivity layer - and we do not want libdivecomputer to have to link\nagainst something like Qt).\n\nSo this renames 'custom_serial' to 'custom_io', and instead names the\nindividual member function pointers 'serial_*' to make it clear that\nthose members are for serial communication.\n\nIt also adds new placeholders for packet_open/close/read/write.  Note\nthat while these may look similar to the serial counter-parts, they are\nnot the same or even necessarily mutually exclusive.  It is possible the\nthe caller fills in one or the other (or both), and they would be used\nindependently.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: make the backend_table_t contain the right values for the G2\n\nNot that anybody should ever use that old-style family/model thing\nanyway, so I considered just removing the g2 entry instead.  But dctool\nstill uses this deprecated interfsce to pick a dive computer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add missed command packet logging\n\nI did the packet logging for the received data side, but forgot to do\nthe same thing on the command transfer side, which makes the debug logs\na bit less useful.\n\nOf course, it turns out that a bug in subsurface means that the logging\nnever gets enabled anyway even when you ask for it, so right now this\nparticular misfeature didn't matter.  I'm hoping Tomaz/Dirk can fix the\nUI widget problem.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: add back the initial handshake code\n\nWhen doing the G2 downloader, I dropped the initial handshake as I tried\nto keep the code minimal, and the handshake didn't seem to make any\ndifference what-so-ever to me.\n\nAnd it probably doesn't matter for anybody else either.  But the code\nisn't working for some people, and maybe it does actually matter.\n\nMore importantly, Scubapro's own LogTRAK application does send those two\ninitial commands, and it's probably a good idea to minimize the\ndifferences between the different downloaders anyway, so add the\nhandshake sequence back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Scubapro G2: clean up unused field\n\nJef Driesen correctly points out that the 'address' field is just\nleftover from the IrDA code, and is meaningless for the USB HID\ntransport version of the Scubapro G2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add initial Scubapro G2 frontend\n\nThe back-end parser seems to be the same as for the Uwatec Smart (aka\nGalileo Sol).  At least that's the assumption right now.\n\nThe downloader just uses USB HID (very similar to EON Steel) rather than\nthe horrible IrDA thing.\n\nThere's also eventually a BLE thing, but that's for the future.\n\nThis is an unholy mixture of the Uwatec Smart downloader logic and the\nEON Steel usbhid transfer code.  The back-end is pure Uwatec Smart\n(model 0x11, same as Galileo Sol).\n\nI'm not at all sure this gets everything right, but it downloads\n*something*.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes as requested by Jan Mulder.\n \"DiveSystem iX3M:\n   - Add support for new iX3M models\n   - Add support for new iX3M APOS4 firmware\n   - Add iX3M firmware version to the devinfo event (ix3m)\n\n  Shearwater:\n   - Report the ppO2 in external O2 sensor mode only (Shearwater)\n   - Replace the constant offset with a scaling factor (Shearwater)\n   - Apply the calibration correction only for the Predator\n   - Report individual sensor values\n   - Predator: don't report PPO2 unless in CC mode\n\n  Misc:\n   - Fix Sherwood Wisdom 3 memory layout\n   - Implement read and write functions for OSTC3\n   - Add support for Mares Quad\n   - Fix uwatec handshaking error handling\"\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  Add support for the new models\n  Add support for the new iX3M APOS4 firmware\n  Add the firmware version to the devinfo event\n  Report the ppO2 in external O2 sensor mode only\n  Replace the constant offset with a scaling factor\n  Apply the calibration correction only for the Predator\n  shearwater: Report individual sensor values\n  Predator: don't report PPO2 unless in CC mode\n  Fix the Sherwood Wisdom 3 memory layout\n  Implement the read and write functions for the OSTC3\n  Don't ignore handshaking errors\n  Add support for the Mares Quad Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nThe most noticeable part is Jen Mulder's OSTC3 initial setpoint\naddition, which fixes the OSTC3 data in CCR3 mode.\n\nBut also various cleanups and fixups from Jef.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  OSTC3: set initial setpoint in profile data\n  Remove unused parameters\n  Cleanup the extract dives functions\n  Remove unnecessary helper functions\n  Remove deprecated functions from the public api\n  Remove unnecessary include statements\n  Fix the firmware version and serial number\n  Add support for the Uwatec Aladin Tec 3G Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nNo major changes and no conflicts except for a trivial one where Jef had\nmarked a couple of private functions 'static' and our versions had\nextended the argument lists of those functions.\n\nThis just updates to the current upstream state of libdivecomputer,\nwhere the bulk of the changes come mainly from the new ringbuffer helper\ncode, but there are various other small misc fixes and cleanups.\n\n* git://git.libdivecomputer.org/libdivecomputer:\n  Disable the deco events\n  Replace the deco events with a deco sample\n  Report errors from the close function\n  Mark the private function as static\n  Fix a bug in the tank pressure samples\n  Disable freedive mode for the Uwatec Aladin Tec 2G\n  Mark the private function as static\n  Fix some compiler warnings\n  Fix some more null pointer dereferences\n  Use a more efficient download algorithm\n  Use the new ringbuffer stream\n  Add a common ringbuffer reading algorithm\n  Improve the robustness of the IrDA I/O code\n  Fix a few null pointer dereferences\n  Fix the number of gas mixes\n  Always use the sample timestamp as the base value Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into sync-with-upstream\n\nMerge upstream libdivecomputer changes from Jef Driesen.\n\nThe most notable one is how libdivecomputer no longer sends the\nGASCHANGE events, but uses DC_SAMPLE_GASMIX instead.\n\nWe still turn it into a SAMPLE_EVENT_GASCHANGE2 event internally in\nsubsurface, since we want all the normal event handling to trigger.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer: (21 commits)\n  Document the date/time functions\n  Document the public api with man pages\n  Add support for the Cressi Drake\n  Detect overwritten dive profiles\n  Ignore tank pressure if no sensor is attached\n  Add support for the tank field\n  Add support for the salinity field\n  Use the sample interval from the settings\n  Update the Aqualung i750TC parser\n  Toggle the DTR line during setup\n  Implement the read function\n  Add doxygen documentation to the build system\n  Add support for the Aqualung i750TC\n  Fix the Windows version resource build\n  Force the dive mode to gauge\n  Add support for the dive mode\n  Report the initial gas mix on the first sample\n  Remove the deprecated gas change events\n  Add support for the Hollis DG02.\n  Add support for the Oceanic F10.\n  ... Merge tag 'v0.5.0' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge upstream version 0.5.0.\n\nSome small updates from Jef Driesen since the last sync, but let's sync\nwith the real 0.5.0 release.\n\n* tag 'v0.5.0' of git://git.libdivecomputer.org/libdivecomputer:\n  Release version 0.5.0.\n  Include the public header in the implementation file.\n  Add explicit casts for the msvc C++ compiler.\n  Add some workarounds for the msvc compiler.\n  Update the msvc project file.\n  Add missing header files to the Makefiles.\n  Add support for the Subgear XP-Air Merge branch 'master' of git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nMerge with Jef Driesen's upstream.\n\nJef has updated his branch with about half of the EON Steel fixes, but\nstill refuses to admit that the string model is much superior to his\ncrazy \"random numbers that can't actually describe anything properly\"\nmodel, and left out all those parts.\n\nBut Jef also made a generic HID layer thing that cleans things up (but\ncauses a spurious warning about a failed usb hid read due to the \"clean\nout old data\" code that *expects& the failure), and fixed his version of\nthe HW Frog firmware, so this cleans up that issue.\n\nWe also now have that gas mix parsing fix for the Aladin Tec 2G properly\nmerged, so that our cherry-pick won't cause merge issues later.\n\n* 'master' of git://git.libdivecomputer.org/libdivecomputer:\n  Fix the firmware version for the HW Frog.\n  Use the new USB HID backend for the Eon Steel.\n  Add a dummy backend for systems without USB HID support.\n  Use the hidapi library on Mac OS X.\n  Add a new USB HID communication backend.\n  Add a configure option to build without libusb.\n  Restore the sample events.\n  Suunto EON Steel: initialize the tank 'gasmix' index\n  Suunto EON Steel: do the proper enum lookup for a few more cases\n  Suunto EON Steel: fix the event begin/end flag\n  Suunto EON Steel: split out gas info parsing\n  EON Steel: look up enum descriptor strings\n  EON Steel: pass in the type descriptor to samples that need it\n  EON Steel: mark tank cache initialized when filling it in\n  EON Steel: fix uninitialized field cache entries\n  Initial Suunto EON Steel CCR support\n  Suunto EON Steel: add descriptor debugging output\n  Add tank size reporting for Suunto EON Steel\n  Fix the gas mix parsing for the Aladin Tec 2G. Merge git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch\n\nThis is a rough merge of the upstream libdivecomputer changes.\n\nI say \"rough\", because this disables the custom serial code as it\nclashes very badly with Jef's new dc_serial_t abstraction.\n\nAnton Lundin has patches on top of this to re-introduce the custom code\nin a way that integrates better with the upstream libdivecomputer state.\n\n* git://git.libdivecomputer.org/libdivecomputer: (42 commits)\n  Add support for the Sherwood Vision.\n  Fix the decoding of the maximum depth.\n  Improve the default layout detection.\n  Add a warning for unsupported devices.\n  Fix the temperature for the Tusa Zen Air.\n  Add support for the Aqualung i550T.\n  Use the new settings field for the salinity.\n  Fix the parsing of freedives.\n  Detect the gauge and freedive mode correctly.\n  Add the salinity field for the Aladin Tec.\n  Add support for the Scubapro Mantis 2.\n  Fix the decoding of the dive time.\n  Add support for the Scubapro Mantis.\n  Fix the Aeris 500AI serial number.\n  Add the serial number encoding to the layout.\n  Add salinity and timezone fields to Aladin Tec 2G\n  Add NDL and RBT for the ATOM31 and I450T\n  Add support for the new extended hardware descriptor.\n  Update the OSTC device descriptors.\n  Add a workaround for an OSTC4 firmware bug.\n  ... Suunto EON Steel: initialize the tank 'gasmix' index\n\nThe gasmix query interface considers cylinders and gas mixes independent\nthings, so the tank data structure has a pointer to the gasmix index.\n\nBut the EON Steel treats cylinders as just having a gasmix (and so does\nsubsurface, for that matter), so the gasmix index for the tank is just\nthe same as the tank index.\n\nBut we never filled it in, so you'd always see a \"gas index\" of zero,\nand subsurface would end up warning each time about how the gasmix index\ndoesn't match the cylinder index (but because subsurface actually agreed\nwith EON Steel, it worked despite the warning).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: do the proper enum lookup for a few more cases\n\nInstead of hardcoding the enum values for setpoint type and gas type,\nuse \"lookup_enum()\" to actually parse the enum data and use that.\n\nI don't think this matters right now, since the numeric translations\nhaven't changed, but it is the RigthThing(tm) to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: fix the event begin/end flag\n\nThis fixes a bug where the begin/end marker was mistakenly added as the\nvalue instead of as flag.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: split out gas info parsing\n\nThe dive gas parsing cases can be split out into a helper function to\nkeep things more manageable.  Especially since there will be a couple\nmore cases coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: look up enum descriptor strings\n\nIt turns out you can't hardcode the enum numbers either, since they\nchange from dive to dive (or possibly firmware version to firmware\nversion).\n\nSo do it right, and actually parse the string descriptor for the enum.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: pass in the type descriptor to samples that need it\n\nThe samples that take 'enum' types need the type descriptor to parse\nwhat the enum type means.\n\nThis doesn't actually use the data yet, I need to add parsing of the\nenum descriptor string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: mark tank cache initialized when filling it in\n\nThe previous commit fixed the cache initialization testing, and\nuncovered the fact that the tank size cache initialization didn't set\nthe initialized bit correctly.  That oversight had been hidden by the\nfact that we then tested the bit wrongly, so not setting it right didn't\nuse to matter as long as there were other higher cache bits that were\nset.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix uninitialized field cache entries\n\nThe check for whether we had initialized a field in the EON Steel cache\ndata structure was wrong, causing some entries to be returned\nsuccessfully even if their field had never been initialized.\n\nIn most cases, it didn't matter, since the cache data was initialized to\nzero (which is a fine default for uninitialized data), so most of the\ntime it didn't matter.\n\nBut for the recently added dive mode field, this caused OC dives to be\nreturned as freedives, for example.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial Suunto EON Steel CCR support\n\nThis does the basic divemode and setpoint parsing for the EON Steel, and\ngets the CCR download right in the big picture.\n\nThe cylinder information is still confusing and incorrect, but this is a\nbig step in the right direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add descriptor debugging output\n\n.. every time I look for a new feature I add debug code to print out all\nthe descriptors.  So let's just do it once and for all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: extend our string space\n\nWe only used to save 16 extended strings per dive from the EON Steel\ndownload, which is _plenty_: it's not like we actually generate that\nmany strings.  Firmware version, battery status, transmitter info -\nthere's just not that many strings.\n\nOops.\n\nExcept if you have lots of transmitters.  Then each wireless transmitter\nwill have three strings each, for transmitter ID and beginning/ending\nbattery status.\n\nI only have one, but Andreas Klein has four.  And it took me\nembarrassingly long to realize that he really did have them on the\ndives, because after the first two transmitter IDs got recorded, the\nstring space filled up and we silently dropped the rest.\n\nBut I have learnt my lesson.  Future generations will talk about how I\nsaid \"32 strings will be enough for anybody\".\n\nBut at least it should be enough for a few more transmitters.  Somebody\nshould extend this some better way, but I'm still chasing other issues.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: initialize the tank 'gasmix' index\n\nThe gasmix query interface considers cylinders and gas mixes independent\nthings, so the tank data structure has a pointer to the gasmix index.\n\nBut the EON Steel treats cylinders as just having a gasmix (and so does\nsubsurface, for that matter), so the gasmix index for the tank is just\nthe same as the tank index.\n\nBut we never filled it in, so you'd always see a \"gas index\" of zero,\nand subsurface would end up warning each time about how the gasmix index\ndoesn't match the cylinder index (but because subsurface actually agreed\nwith EON Steel, it worked despite the warning).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: do the proper enum lookup for a few more cases\n\nInstead of hardcoding the enum values for setpoint type and gas type,\nuse \"lookup_enum()\" to actually parse the enum data and use that.\n\nI don't think this matters right now, since the numeric translations\nhaven't changed, but it is the RigthThing(tm) to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add severity indication to the event flags for the Suunto EON Steel\n\nThis way Subsurface can show different icons depending on what kind of\nevent we report.\n\nThis also fixes a bug where the begin/end marker was mistakenly added as\nthe value instead of as flag.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add transmitter battery state reporting\n\nI'm not sure how reliable it is, and older wireless tank pods had a bug\nin the reporting (looks like the battery voltage range calibration was\ndone incorrectly, and it reports 0% battery for new batteries).\n\nBut depending on how well it actually works when the batteries start\ngetting weak, the transmitter battery reporting is potentially *very*\nuseful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add surface time reporting\n\nFor some reason I hadn't reported surface time.  It's trivial to do\nespecially now that we have the varargs string adding function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: split out gas info parsing\n\nThe dive gas parsing cases can be split out into a helper function to\nkeep things more manageable.  Especially since there will be a couple\nmore cases coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add 'varargs' version of 'add_string()' function\n\n.. and use it for the cases that used to do this by hand (Personal\nAdjustment and Desaturation Time).\n\nThere will be more users coming up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add desaturation time reporting\n\nThe EON Steel reports it in seconds remaining after the dive.  That's a\nbit excessive, but I guess SI units is where it's at.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add dive state event reporting\n\nNow that we support string events and don't need to try to figure out\nsome libdivecomputer event number that doesn't exist, it's easy to add\nthe proper support for the dive state reporting that the EON Steel has.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: look up enum descriptor strings\n\nIt turns out you can't hardcode the enum numbers either, since they\nchange from dive to dive (or possibly firmware version to firmware\nversion).\n\nSo do it right, and actually parse the string descriptor for the enum.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: pass in the type descriptor to samples that need it\n\nThe samples that take 'enum' types need the type descriptor to parse\nwhat the enum type means.\n\nThis doesn't actually use the data yet, I need to add parsing of the\nenum descriptor string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add 'string' event type\n\nThe event numbers are an indecipherable mess, and Suunto EON Steel has\nnotifications, events and warnings that just don't fit.  Plus they\nreally come as strings from the EON Steel anyway.\n\nSo add a \"SAMPLE_EVENT_STRING\" type, and for that type the event has a\n\"const char *name\" instead of the odd and meaningless flags/value pair.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the tank \"type\" field more useful\n\nRight now it only has an indication of whether the cylinder size is\nimperial or metric, which is frankly quite useless.\n\nTurn it into a bitmask instead, where we keep the imperial/metric data\nfor compatibility, but add another two bits that say that it's a CC\ncylinder, and whether it's the oxygen or diluent cylinder.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: mark tank cache initialized when filling it in\n\nThe previous commit fixed the cache initialization testing, and\nuncovered the fact that the tank size cache initialization didn't set\nthe initialized bit correctly.  That oversight had been hidden by the\nfact that we then tested the bit wrongly, so not setting it right didn't\nuse to matter as long as there were other higher cache bits that were\nset.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix uninitialized field cache entries\n\nThe check for whether we had initialized a field in the EON Steel cache\ndata structure was wrong, causing some entries to be returned\nsuccessfully even if their field had never been initialized.\n\nIn most cases, it didn't matter, since the cache data was initialized to\nzero (which is a fine default for uninitialized data), so most of the\ntime it didn't matter.\n\nBut for the recently added dive mode field, this caused OC dives to be\nreturned as freedives, for example.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial Suunto EON Steel CCR support\n\nThis does the basic divemode and setpoint parsing for the EON Steel, and\ngets the CCR download right in the big picture.\n\nThe cylinder information is still confusing and incorrect, but this is a\nbig step in the right direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: add descriptor debugging output\n\n.. every time I look for a new feature I add debug code to print out all\nthe descriptors.  So let's just do it once and for all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: expose the gas switch cylinder in the \"flags\" field\n\nThis seems to be the simplest extension to the SAMPLE_EVENT_GASCHANGE2\nformat: the \"value\" remains the oddly encoded gas mix, but the \"flags\"\nvalue (if non-zero) now contains the actual cylinder number we switch\nto.\n\nThis will need a trivial patch to subsurface to take advantage of the\nnew data too.  But then we can actually distinguish between cylinders\nthat have the same gas mix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel personal adjustment parsing\n\nSuunto calls it \"Conservatism\" in the dump, but \"Personal adjustment\" in\nat least some of the documentation. That's what we expose it as.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel dive mode and transmitter ID information\n\nThis adds the divemode name (Nitrox, Trimix, Gauge, or whatever custon\nname) and the transmitter ID as extra string information when\ndownloading from the EON Steel.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Suunto EON Steel: populate various string data\n\nThe EON Steel saves the dive computer firmware versions etc per dive,\nwhich is really nice for upgrades: old dives done with older firmware\nstill show the firmware at the time of the dive.  That, in turn, is nice\nbecause we can use it for a reliable dive ID - dive time with serial\nnumber etc.\n\nThis uses the new DC_FIELD_STRING model to feed the hw/sw information to\nthe application, since we need the parser to access it.  It also returns\nbattery state and deco model information.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix suunto serial numbers\n\nlibdivecomputer has already done the \"byte to decimal\" conversion.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parser: add DC_FIELD_STRING field type for parse-time information\n\nThis can be used to return almost arbitrary information to the dive log\napplication at dive parse time, by returning a number of strings (with a\ndescriptor) for dive state.\n\nNOTE! The strings are supposed to be human-readable, so that the dive\nlog application can just show them unedited - and without understanding\nthem - to the user, together with the description.  So if your dive\ncomputer supports returning a battery voltage, for example, you can\nreturn it as a\n\n  { \"Voltage\", \"4.449V\" }\n\ndescriptor/value string pair, and the application could then put these\nstring pairs together and show (somewhere) an informational line like\n\"Voltage: 4.449V\" along with the other information you return.\n\nSome dive log applications migth recognize particular descriptor strings\nand use them specially to fill in other information (ie serial numbers,\nweight and suit information etc), but in general the interface is very\nmuch meant to be informational free-form for a human user.\n\nSo do *not* use this interface to encode things that are not human-\nreadable.  Serial numbers or version information that is meaningful to\nhumans are fine. But random encoded data structures are not.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: don't report airtime remaining as a libdivecomputer event\n\nIt looks like the SAMPLE_EVENT_AIRTIME is actually meant for just\nairtime warnings (as in the dive computer warning about low air).\n\nIf we ever care, I think we'd need to add a new interface for this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: fix up missing gastime/ventilation parsing\n\nNow that I actually have dives with the new format and with air\nintegration, I could test it all out and noticed some missing pieces.\n\nThis adds parsing for gastime and ventilation events (although we don't\n*do* anything with the ventilation data, I have no idea what the number\nmeans).\n\nAlso, this fixes an annoying warning message problem, which caused these\nmissing events to cause a SIGSEGV rather than just a bening warning.\nStupid bug, and only went unnoticed because libdivecomputer isn't built\nwith format string warnings.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> EON Steel: convert to dynamic sample parsing\n\nThis gets rid of the fixed sample indexes and the hardcoded grouping\ncode, and replaces them with proper parsing of the type descriptions.\n\nThis should mean that the new Suunto firmware v1.1.15 is now fully\nsupported by libdivecomputer.\n\nThere are still parts of the event description that we should really\nparse better, notably the 'enum' descriptions of what the different\nenumerated types mean, because it looks like those will change too.  But\nthat is not nearly as important as getting the basic infrastructure done\nfor the core sample types.\n\nAlmost accidentally, this also ends up now parsing the compass heading\nevent.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> EON Steel: start moving away from \"fixed\" fields\n\nI was initially fooled into thinking that the field type numbers have\nsome meaning: the types didn't change if the upper byte of the type\nnumber was zero.  So I assumed that meant \"fixed\".\n\nBut the most recent firmware update made clear that no, they aren't\nfixed, and the upper byte of the type must be some other thing.\n\nThis moves some more of the parsing over to comparing the strings,\nrather than looking at the type index.  It still leaves the sample data\nalone, and I really want to do something more efficient than comparing\nthe type descriptor string for that, but at least the dive header fields\nare now just comparing strings.\n\nThe actual marshalling that Suunto uses also describes the encoding, and\nit's all ignoring that for now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> EON Steel: empty descriptor lines are ok\n\nSuunto's new v1.1.15 firmware ends up terminating some final descriptor\nlines with a newline, rather than just using newlines as separators.  So\nthe last newline may not be followed by further data, but simple be the\nend of the string.  Accept that case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto EON Steel: populate dive surface pressure\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: clean up size limits and error reporting\n\nThis is some small cleanup after the whole reply size rewrite.  It\nfurther improves on the error log reporting a bit, and it undoes the\n\"read exact size\" thing introduced in \"suunto eon steel: fix file\nreading special case\", because it is no longer necessary.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: be more explicit about transfer sizes\n\nWhen reading data from the EON Steel, we'd generally continue reading\nuntil we saw that a response was done by seeing a packet that wasn't\nfull.\n\nThat broke for the case of the data boundary matching the packet\nboundary, fixed by the commit \"suunto eon steel: fix file reading\nspecial case\".\n\nHowever, that commit only fixed it for the case of reading a file, where\nthe result has a size that is known up-front.  And most other situations\nreally don't matter, because the result size is fixed and fits in a\nsingle packet, so it all works.\n\nHowever, there are still a few cases that could trigger the problem,\nnotably reading the directory contents.\n\nSo change the send_receive() logic to actually read the expected size\nfrom the receive header in the first packet of the reply.  This means\nthat we need to re-organize the packet reception code a bit, but the end\nresult is that we are much more careful about data sizes,\n\nThis also changes the packet logging to be much more readable, by\nlogging just the actual data, and not the (uninteresting) per-packet\nheader, or the stale data at the end of the packet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> suunto eon steel: fix file reading special case\n\nThe \"receive_data()\" function would continue to try to read packets as\nlong as the previous packet was full-sized, but with just the right size\nof file and the right chunking, the file might end at a packet boundary.\nThen receive_data() would try to read more data, which fails - there are\nno more packets, despite the last packet being full.\n\nThis never triggered for me, but Robert Helling forwarded a data dump of\na filure to read a dive due to this.\n\nSince I don't trigger this case, I can't really test it, but I did check\nthat the new \"stop early\" logic works for me (ie never triggers ;).\n\nReported-by: Robert C. Helling <helling@atdotde.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add EON Steel bookmarks, warnings and alarm events\n\nI'd missed these because I'm blind. But mostly because they aren't as\ncommon.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse EON Steel notification and state changes\n\nThe EON Steel notifications and states match the libdivecomputer ones\nvery badly, but this tries to make sense of the ones that match.  And\nputs the infrastructure in to do others in the future.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-fouindation.org> Add EON Steel gas change event parsing\n\nThe really sad part is that the EON Steel handles gas change events\ncorrectly, by actually saying which cylinder it switches to.  But the\nlibdivecomputer interfaces are broken, and only contain the gas *mix*\nyou switch to, which is ambiguous since you could have the same mix in\nmultiple cylinders.\n\nMaybe we could put the one-based cylinder index into the \"flags\" field?\nWith zero meaning \"unknown\". That would be a straightforward extension.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto EON Steel: support downloading of core dive profile data\n\nBasic Suunto EON Steel downloading copied from my test application.\nThis parses all the core dive data, including sample data (time, depth,\ncylinder pressure, deco information etc).\n\nThe deco information returns ceiling and TTS rather than ceiling and\n\"time at ceiling\", because that's what the dive computer has, and I\ndon't see any other way to return the information.\n\nWe don't report any events yet, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix divinglog import temperature truncation\n\nThe code incorrectly divided the temperature by 10 as an integer,\ncausing unnecessary precision loss due to truncation.\n\nFix it, and update the test results for the now improved temperature\nimport.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix divinglog import limit checking\n\nThe divinglog import did horrible things with the strings returned from\nthe sqlite queries, and ended up using uninitialized values at the end\nof the secondary profile data strings.\n\nThis rewrites the import logic to track the length of the strings\nproperly when importing the divinglog data.\n\nWe should run 'valgrind' a whole lot more than we do, I suspect.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly clear sensor pressure data for synthetic plotinfo entries\n\nWe only cleared the first sensor data when we created new synthetic plot\ninfo entries, because we only used to have one (well, we had the o2\ndata, but apparently nobody ever noticed that it didn't get properly\ninterpolated, probably because people who have CCR dives with o2\npressures are few, and the pressure drops are gradual anyway).\n\nClear all the pressure data, so that the interpolation code doesn't\nthink we have some existing real sensor data for the plot info entries\nin between proper sample entries.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> xml: save the right sensor pressure when we have multiple sensor readings\n\nThe XML saving code got the multi-sensor case completely wrong, because\nit still had one place where it would always save the first pressure,\nrather than the pressure from the right sensor.\n\nThis was hidden by the fact that old data would be saved using the\nlegacy model that only ever used the first sensor slot.  Only if you\nactually had multiple sensor slots used would the bug trigger.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the info window show all the pressures we have\n\nWe used to only show the first pressure we had, from back when we only\nsupported a single sensor.\n\nReported-by: Stefan Fuchs <sfuchs@gmx.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update the OSTC dive computer configuration to use the generic 'timesync' interface\n\nJef made the OSTC interface be a generic 'dc_device_timesync()' and so\nthe old OSTC-specific code doesn't exist any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the overprinting of gas name and pressure value on the profile\n\nWhen I massaged the code to do multiple gas pressures in commit e1b880f4\n(\"Profile support for multiple concurrent pressure sensors\") some of the\nY offsetting code got cut out as being too specific to the old\no2pressure code.\n\nBut I removed a bit too much, leaving the label (gas name) and number\n(gas pressure) overlapping.\n\nThis should fix it.\n\nIf we really care about multiple gas pressure labels overlapping each\nother, we'll have to revisit this code, but the old two-gas case didn't\ndo a very good job either (both that old code - and this new version -\ncan look very good in particular cases, but there are cases where it\nwon't work so well).\n\nSo we may need to revisit this eventually, but this gets it looking fine\nfor the normal cases.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix Poseidon MkVI txt file import sensor pressures\n\nWhen I unified the sample pressures in commit 11a0c0cc7018 (\"Unify\nsample pressure and o2pressure as pressure[2] array\") I did all the\nobvious conversions, including the conversion of the Poseidon txt file\nimport:\n\n        case POSEIDON_PRESSURE:\n-               sample->cylinderpressure.mbar = lrint(val * 1000);\n+               sample->pressure[0].mbar = lrint(val * 1000);\n                break;\n        case POSEIDON_O2CYLINDER:\n-               sample->o2cylinderpressure.mbar = lrint(val * 1000);\n+               sample->pressure[1].mbar = lrint(val * 1000);\n                break;\n\nwhich was ObviouslyCorrect(tm).\n\nBut as so often is the case, obvious doesn't actually exist.  The old\n\"o2cylinderpressure[]\" model had an implicit sensor associated with it,\nand that implicit sensor mapping wasn't obvious, and didn't get fixed.\n\nIt turns out that the way the Poseidon sensor mapping works, the O2\ncylinder is cylinder 0, and the diluent cylinder is cylinder 1, so just\nuse the add_sample_pressure() helper to set both sensor index and\npressure value.\n\nAnd since we now do all the sensor indexing right, we can also get rid\nof some manual cylinder sample pressure code, because the generic dive\nfixup will just DTRT.  It used to screw up because the diluent sensor\nnumber was wrong before, and the import code tried to work around that\nby hand.\n\nReported-by: Anton Lundin <glance@acc.umu.se>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Tweak the \"display_unused_tanks\" preferences logic\n\nThis is really unrelated to my recent \"multiple gas pressures\" work, but\nthe test case from Gaetan Bisson showed that the logic for which\ncylinders to show in the equipment tab was less than optimal.\n\nWe basically used to show only cylinders that were actively used, unless\nyou had the \"display_unused_tanks\" preference option set.  That comes\nfrom some dive computers reporting a *lot* of cylinders that the diver\nreally doesn't even have with him on the dive.  And showing those extra\ndummy cylinders gets pretty annoying after a time, which is why we\ndefault to not showing unused tanks.\n\nHowever, in Gaetan's case, he had a total of four cylinders on the dive:\nthe O2 and diluent bottle for the rebreather dive, and then bailout\nbottles (both air and deco).  And while the bailout bottles weren't\nactually used, Gaetan had actually filled in all the pressure details\netc for them, and so you'd really expect them to show up.  These were\n*not* just some extraneous default cylinder filled in by an over-eager\ndive computer.\n\nBut because the bailout wasn't used, the manual pressures at the end\nwere the same as at the beginning, and the \"unused cylinder\" logic\ntriggered anyway.\n\nSo tweak the logic a bit, and say that you show cylinder equipment not\nonly if it has been used on the dive, but also if it has any pressure\ninformation for it.\n\nSo the o nly cylinders we don't show are the ones that really have no\ninteresting information at all, except for possibly the cylinder tank\ntype itself (which is exactly what the over-eager dive computer case\nmight fill in, usually in the form of a default cylinder type).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> For more manual gas pressure details\n\nSo the manual gas pressure case keeps showing issues, and in many ways it\nreally is a fairly complex thing, since it needs interpolation of the\nintermediate pressures - possibly over several gas changes.\n\nSo you might have beginning and ending pressures for one cylinder, but\nthen use another cylinder in between.\n\nWe've historically got all the code to do this, but the big rewrite for\nmultiple cylinder pressures didn't get all the details right, and so\nhere's a few more fixes for the case that was shown by a dive by Robert\nHelling.  Hopefully we're approaching the old code situation, except now\nwith concurrent gas pressure handling support.\n\nReported-by: Robert Helling <helling@atdotde.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix another cylinder pressure plotting special case\n\nThe core to plot manually entered pressures without any sample data did\nthe obvious thing: it ended the pressures at the end of the dive as\nindicated by the last sample.\n\nHowever, that obvious thing didn't actually work, because sometimes the\nlast sample is long long after the dive has actually ended, and we have\nno plot_info data for that.\n\nThis depends on the dive computer used: most dive computers will not\nreport samples after the end (even if they may internally remember them\nin case the diver just came up to the surface temporarily), but some\ndefinitely do. The OSTC3 is a prime example of that.\n\nAnyway, the code was fragile and wrong - even if passed a time past the\nend of the plot_info data, \"add_plot_pressure()\" should just have\nassociated that with the last entry instead.  Which also allows us to\nsimplify the whole endtime logic entirely, and just use INT_MAX for it.\n\nGaetan Bisson's test-case also showed another oddity: we would plot the\ngas pressure even for cylinders that had no has use (ie beginning and\nending pressures were the same).  That's kind of pointless in so many\nways.  So limit the manual pressure population to cylinders that\nactually have seen use.\n\nReported-by: Gaetan Bisson <bisson@archlinux.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Import all pressure sensors from Liquivision logs\n\nThe other pressure sensors were disabled on import because we didn't use\nto handle multiple sensors well at all.\n\nNow it \"JustWorks(tm)\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix manual pressures for cylinders with no gas switches\n\n\"If it hasn't been tested, it doesn't work\".\n\nAll my testing of the multiple sensor pressures have been with some\nreasonably \"interesting\" dives: they actually *have* sensor pressures.\n\nBut that test coverage means that I missed the truly trivial case of\njust having manual pressures for a single cylinder.\n\nBecause there's only a single cylinder, it doesn't have any cylinder\nchanges, and because there were no cylinder changes, it never filled in\nthe use range for that cylinder.\n\nSo then it never showed the pressure profile at all.\n\nDuh.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Calculate momentary SAC rates with the right gases\n\nThe momentary SAC rate got broken by the multiple ressure handling too,\nand always used just the first cylinder.\n\nThis uses the new \"get_gasmix()\" helper to see what you're breathing,\nand will do the SAC rate over all the cylinders that contain that gas.\nSo it should now DTRT even for sidemount diving (assuming you had the\nsame gas in the sidemount cylinders).\n\nNOTE! We could just do the SAC rate over *all* the gases you have\npressures for, and maybe that's the right thing to do.  The ones you are\nnot breating from shouldn't have their pressure change.  But maybe some\npeople add their drysuit argon gas to the gas list?\n\nSo this may need more work, but it's a step in the right direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the right gasmix for deco calculations\n\nIn commit e1b880f4 \"Profile support for multiple concurrent pressure\nsensors\" I had mindlessly hacked away at some of the sensor lookups from\nthe plot entries to make it all build, and forgotten about my butchery.\n\nThankfully Jan and Davide noticed in their multi-cylinder deco dives\nthat the deco calculations were no longer correct.\n\nThis uses the newly introduced \"get_gasmix()\" helper to look up the\ncurrently breathing gasmix, and fixes the deco calculations.\n\nReported-and-tested-by: Jan Mulder <jlmulder@xs4all.nl>\nReported-by: Davide DB <dbdavide@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add \"get_gasmix()\" helper function to iterate over gas changes\n\nWe have a few places that used to get the gasmix by looking at the\nsensor index in the plot data, which really doesn't work any more.\n\nTo make it easier for those users to convert to the new world order,\nthis adds a \"get_gasmix()\" function.  The gasmix function takes as its\nargument the dive, the dive computer, and the time.\n\nIn addition, for good performance (to avoid looping over the event list\nover and over and over again) it maintains a pointer to the next gas\nswitch event, and the previous gas.  Those need to be initialized to\nNULL by the caller, so the standard use-case pattern basically looks\nlike this:\n\n\tstruct gasmix *gasmix = NULL;\n\tstruct event *ev = NULL;\n\n\tloop over samples or plot events in increasing time order: {\n\t\t...\n\t\tgasmix = get_gasmix(dive, dc, time, &ev, gasmix);\n\t\t...\n\t}\n\nand then you can see what the currently breathing gas is at that time.\n\nIf for some reason you need to walk backwards in time, you can just pass\nin a NULL gasmix again, which will reset the event iterator (at the cost\nof now having to walk all the events again).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Profile support for multiple concurrent pressure sensors\n\nThis finally handles multiple cylinder pressures, both overlapping and\nconsecutive, and it seems to work on the nasty cases I've thrown at it.\n\nWant to just track five different cylinders all at once, without any\npesky gas switch events? Sure, you can do that.  It will show five\ndifferent gas pressures for your five cylinders, and they will go down\nas you breathe down the cylinders.\n\nI obviously don't have any real data for that case, but I do have a test\nfile with five actual cylinders that all have samples over the whole\ncourse of the dive.  The end result looks messy as hell, but what did\nyou expect?\n\nHOWEVER.\n\nThe only way to do this sanely was\n\n - actually make the \"struct plot_info\" have all the cylinder pressures\n   (so no \"sensor index and pressure\" - every cylinder has a pressure for\n   every plot info entry)\n\n   This obviously makes the plot_info much bigger. We used to have\n   MAX_CYLINDERS be a fairly generous 8, which seems sane. The planning\n   code made that 8 be 20. That seems questionable. But whatever.\n\n   The good news is that the plot-info should hopefully get freed, and\n   only be allocated one dive at a time, so the fact that it is big and\n   nasty shouldn't be a scaling issue, though.\n\n - the \"populate_pressure_information()\" function had to be rewritten\n   quite a bit. The good news is that it's actually simpler now, although\n   I would not go so far as to really call it simple. It's still\n   complicated and suble, but now it explicitly just does one cylinder at\n   a time.\n\n   It *used* to have this insanely complicated \"keep track of the pressure\n   ranges for every cylinder at once\". I just couldn't stand that model\n   and keep my sanity, so it now just tracks one cylinder at a time, and\n   doesn't have an array of live data, instead the caller will just call\n   it for each cylinder.\n\n - get rid of some of our hackier stuff, like the code that populates the\n   plot_info data code with the currently selected cylinder number, and\n   clears out any other pressures. That obviously does *not* work when you\n   may not have a single primary cylinder any more.\n\nNow, the above sounds like all good things. Yeah, it mostly is.\n\nBUT.\n\nThere's a few big downsides from the above:\n\n - there's no sane way to do this as a series of small changes.\n\n   The change to make the plot_info take an array of cylinder pressures\n   rather than the sensor+pressure model really isn't amenable to \"fix up\n   one use at a time\". When you switch over to the new data structure\n   model, you have to switch over to the new way of populating the\n   pressure ranges. The two just go hand in hand.\n\n - Some of our code *depended* on the \"sensor+pressure\" model. I fixed all\n   the ones I could sanely fix. There was one particular case that I just\n   couldn't sanely fix, and I didn't care enough about it to do something\n   insane.\n\n   So the only _known_ breakage is the \"TankItem\" profile widget. That's\n   the bar at the bottom of the profile that shows which cylinder is in\n   use right now. You'd think that would be trivial to fix up, and yes it\n   would be - I could just use the regular model of\n\n     firstcyl = explicit_first_cylinder(dive, dc)\n     .. then iterate over the gas change events to see the others ..\n\n   but the problem with the \"TankItem\" widget is that it does its own\n   model, and it has thrown away the dive and the dive computer\n   information. It just doesn't even know. It only knows what cylinders\n   there are, and the plot_info. And it just used to look at the sensor\n   number in the plot_info, and be done with that. That number no longer\n   exists.\n\n - I have tested it, and I think the code is better, but hey, it's a\n   fairly large patch to some of the more complex code in our code base.\n   That \"interpolate missing pressure fields\" code really isn't pretty. It\n   may be prettier, but..\n\nAnyway, without further ado, here's the patch. No sign-off yet, because I\ndo think people should look and comment. But I think the patch is fine,\nand I'll fix anythign that anybody can find, *except* for that TankItem\nthing that I will refuse to touch. That class is ugly. It needs to have\naccess to the actual dive.\n\nNote how it actually does remove more lines than it adds, and that's\ndespite added comments etc. The code really is simpler, but there may be\ncases in there that need more work.\n\nKnown missing pieces that don't currently take advantage of concurrent\ncylinder pressure data:\n\n - the momentary SAC rate coloring for dives will need more work\n\n - dive merging (but we expect to generally normally not merge dive\n   computers, which is the main source of sensor data)\n\n - actually taking advantage of different sensor data from different\n   dive computers\n\nBut most of all: Testing.  Lots and lots of testing to find all the\ncorner cases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for loading and saving multiple pressure samples\n\nThis does both the XML and the git save format, because the changes\nreally are the same, even if the actual format differs in some details.\nSee how the two \"save_samples()\" routines both do the same basic setup,\nfor example.\n\nThis is fairly straightforward, with the possible exception of the odd\n\n     sensor = sample->sensor[0];\n\ndefault in the git pressure loading code.\n\nThat line just means that if we do *not* have an explicit cylinder index\nfor the pressure reading, we will always end up filling in the new\npressure as the first pressure (because the cylinder index will match the\nfirst sensor slot).\n\nSo that makes the \"add_sample_pressure()\" case always do the same thing it\nused to do for the legacy case: fill in the first slot. The actual sensor\nindex may later change, since the legacy format has a \"sensor=X\" key value\npair that sets the sensor, but it will also use the first sensor slot,\nmaking it all do exactly what it used to do.\n\nAnd on the other hand, if we're loading new-style data with cylinder\npressure and sensor index together, we just end up using the new semantics\nfor add_sample_pressure(), which tries to keep the same slot for the same\nsensor, but does the right thing if we already have other pressure values.\n\nThe XML code has no such issues at all, since it can't share the cases\nanyway, and we need to have different node names for the different sensor\nvalues and cannot just have multiple \"pressure\" entries. Have I mentioned\nhow much I despise XML lately?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sample pressure helper functions available to everybody\n\nWe had a \"add_sample_pressure()\" helper functions that was local to just\nthe libdivecomputer downloading code, but it really is applicable to\npretty much any code that adds cylinder pressure data to a sample.\n\nAlso add another helper: \"legacy_format_o2pressures()\" which checks the\nsample data to see if we can use the legacy format, and returns the o2\npressure sensor to use for that legacy format.\n\nBecause both the XML and the git save format will need a way to save the\ncompatible old-style information, when possible, but save an extended\nformat for when we have data from multiple concurrent sensors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Try to sanely download multiple concurrent cylinder pressures\n\nThis tries to sanely handle the case of a dive computer reporting\nmultiple cylinder pressures concurrently.\n\nNOTE! There are various \"interesting\" situations that this whole issue\nbrings up:\n\n - some dive computers may report more cylinder pressures than we have\n   slots for.\n\n   Currently we will drop such pressures on the floor if they come for\n   the same sample, but if they end up being spread across multiple\n   samples we will end up re-using the slots with different sensor\n   indexes.\n\n   That kind of slot re-use may or may not end up confusing other\n   subsurface logic - for example, make things believe there was a\n   cylidner change event.\n\n - some dive computers might send only one sample at a time, but switch\n   *which* sample they send on a gas switch event.  If they also report\n   the correct sensor number, we'll now start reporting that pressure in\n   the second slot.\n\n   This should all be fine, and is the RightThing(tm) to do, but is\n   different from what we used to do when we only ever used a single\n   slot.\n\n - When people actually use multiple sensors, our old save format will\n   start to need fixing.  Right now our save format comes from the CCR\n   model where the second sensor was always the Oxygen sensor.\n\n   We save that pressure fine (except we save it as \"o2pressure\" - just\n   an odd historical naming artifact), but we do *not* save the actual\n   sensor index, because in our traditional format that was always\n   implicit in the data (\"it's the oxygen cylinder\").\n\nso while this code hopefully makes our libdivecomputer download do the\nright thing, there *will* be further fallout from having multiple\ncylinder pressure sensors.  We're not done yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Show multiple gas pressures in the profile even if the dive isn't CCR\n\nNow that the cylinder pressures are more generalized, we should show\nthem even for non-CCR dives if we have them.  The most notable example\nwould be having separate pressure transmitters for both cylinders in a\nsidemount setup. The code no longer really depends on any CCR logic.\n\nNOTE! This is still preparatory work, in that this is one part of\nsupporting multiple simulataneous cylinder pressures, but we are still\nlacking in other departments (eg properly filling those fields in when a\ndive computer exports multiple pressure sensors etc).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse-xml: use the right dc for filling in extra data\n\n\"cur_dc\" may be NULL when the XML source isn't a subsurface XML file,\nand xml parsing is supposed to use \"get_dc()\" to pick a dive computer\nwhen the nesting of the XML may not be proper.\n\nNow, XML sources that don't have the proper dive computer nesting\nmarkers generally also do not end up having the extra-data string\ninformation, but one example of this is the simple XML that the\nlibdivecomputer 'dctool' program generates.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Gas usage statistics: don't require gas switch events\n\nOur \"get_has_used()\" helper only filled in gas usage for cylinders that\nhad a gas change event associated with them.  That works really badly\nfor things like CCR, but also simply for cases where the dive computer\nwasn't necessarily explicitly notified about usage, like sidemount\ndiving etc.\n\nJust remove the logic.  If some use ends up particularly wanting to\nignore some cylinder, they can always do it in the caller instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix up o2 pressure sensor handling at load time\n\nBecause of how we traditionally did things, the \"o2pressure\" parsing\ndepends on implicitly setting the sensor index to the last cylinder that\nwas marked as being used for oxygen.\n\nWe also always defaulted the primary sensor (which is used for the\ndiluent tank for CCR) to cylinder 0, but that doesn't work when the\noxygen tank is cylinder 0.\n\nThis gets that right at file loading time, and unifies the xml and git\nsample parsing to make them match. The new defaults are:\n\n - unless anything else is explicitly specified, the primary sensor is\n   associated with the first tank, and the secondary sensor is\n   associated with the second tank\n\n - if we're a CCR dive, and have an explicit oxygen tank, we associate\n   the secondary sensor with that oxygen cylinder.  The primary sensor\n   will be switched over to the second cylinder if the oxygen cylinder\n   is the first one.\n\n   This may sound backwards, but matches our traditional behavior where\n   the O2 pressure was the secondary pressure.\n\nThis is definitely not pretty, but it gets our historical files working\nright, and is at least reasonably sensible.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save format: don't save redundant sample information\n\nWhen we load sample data from a git save-file, we always default to\nusing the state from the previous sample (except for the special case of\ncylinder pressure where an empty value does not mean \"same\", but\n\"interpolate\", see core/load-git.c: new_sample()).\n\nBut the corollary to that is that it's always redundant to save sample\ndata that hasn't changed since the previous sample.\n\nFor some reason, the rbt, bearing and heartrate sample data didn't\nfollow that rule, and instead saved with lots of extra reduncancy.\n\n(The alternative would be to clear those samples at load time, and make\nthem act like the pressure data, but it would appear that all these\nthree values may as well just have the normal \"if no change, don't save\nthem\" semantics).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start cleaning up sensor indexing for multiple sensors\n\nThis is a very timid start at making us actually use multiple sensors\nwithout the magical special case for just CCR oxygen tracking.\n\nIt mainly does:\n\n - turn the \"sample->sensor\" index into an array of two indexes, to\n   match the pressures themselves.\n\n - get rid of dive->{oxygen_cylinder_index,diluent_cylinder_index},\n   since a CCR dive should now simply set the sample->sensor[] indices\n   correctly instead.\n\n - in a couple of places, start actually looping over the sensors rather\n   than special-case the O2 case (although often the small \"loops\" are\n   just unrolled, since it's just two cases.\n\nbut in many cases we still end up only covering the zero sensor case,\nbecause the CCR O2 sensor code coverage was fairly limited.\n\nIt's entirely possible (even likely) that this migth break some existing\ncase: it tries to be a fairly direct (\"stupid\") translation of the old\ncode, but unlike the preparatory patch this does actually does change\nsome semantics.\n\nFor example, right now the git loader code assumes that if the git save\ndata contains a o2pressure entry, it just hardcodes the O2 sensor index\nto 1.\n\nIn fact, one issue is going to simply be that our file formats do not\nhave that multiple sensor format, but instead had very clearly encoded\nthings as being the CCR O2 pressure sensor.\n\nBut this is hopefully close to usable, and I will need feedback (and\nmaybe test cases) from people who have existing CCR dives with pressure\ndata.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Unify sample pressure and o2pressure as pressure[2] array\n\nWe currently carry two pressures around for all the samples and plot\ninfo, but the second pressure is reserved for CCR dives as the O2\ncylinder pressure.\n\nThat's kind of annoying when we *could* use it for regular sidemount\ndives as the secondary pressure.\n\nSo start prepping for that instead: don't make it \"pressure\" and\n\"o2pressure\", make it just be an array of two pressure values.\n\nNOTE! This is purely mindless prepwork.  It literally just does a\nsearch-and-replace, keeping the exact same semantics, so \"pressure[1]\"\nis still just O2 pressure.\n\nBut at some future date, we can now start using it for a second sensor\nvalue for sidemount instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use SSRF_CUSTOM_IO v2 to implement device data quirks for BLE GATT\n\nRight now we have a quirk for Shearwater devices to set the random\naddress flag, but also to handle the differences at read/write time.\n\nWith this, I can finally download from both the Suunto EON Steel and the\nShearwater Perdix AI with the same binary.\n\nIt's not *pretty*, but it works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Switch over to SSRF_CUSTOM_IO v2\n\nI hate changing the IO interfaces this often, but when I converted the\ncustom serial interface to the more generic custom IO interface, I\nintentionally left the legacy serial operations alone, because I didn't\nwant to change something I didn't care about.\n\nBut it turns out that leaving them with the old calling convention\ncaused extra problems when converting the bluetooth serial code to have\nthe BLE GATT packet fall-back, which requires mixing two kinds of\noperations.\n\nAlso, the packet_open() routine was passed a copy of the 'dc_context_t',\nwhich makes it possible to update the 'dc_custom_io_t' field on the fly\nat open time.  That makes a lot of chaining operations much simpler,\nsince now you can chain the 'custom_io_t' at open time and then\nlibdivecomputer will automatically call the new routines instead of the\nold ones.\n\nThat dc_context_t availability gets rid of all the\n\n\tif (device && device->ops)\n\t\treturn device->ops->serial_xyz(..);\n\nhackery inside the rfcomm routines - now we can just at open time do a simple\n\n\tdc_context_set_custom_io(context, &ble_serial_ops);\n\nto switch things over to the BLE version of the serial code instead.\n\nFinally, SSRF_CUSTOM_IO v2 added an opaque \"dc_user_device_t\" pointer\nargument to the custom_io descriptor, which gets filled in as the\ncustom_io is registered with the download context.  Note that unlike\nmost opaque pointers, this one is opaque to *libdivecomputer*, and the\ntype is supposed to be supplied by the user.\n\nWe define the \"dc_user_device_t\" as our old \"struct device_data_t\",\nmaking it \"struct user_device_t\" instead.  That means that the IO\nroutines now get passed the device info showing what device they are\nsupposed to download for.\n\nThat, in turn, means that now our BLE GATT open code can take the device\ntype it opens for into account if it wants to.  And it will want to,\nsince the rules for Shearwater are different from the rules for Suunto,\nfor example.\n\nNOTE! Because of the interface change with libdivecomputer, this will\nneed a flag-day again where libdivecomputer and subsurface are updated\ntogether. It may not be the last time, either.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> BT serial: recognize LE-only devices, and fall back to emulated serial\n\nThis is somewhat hacky, but it allows at least the Shearwater\nlibdivecomputer backend to continue to treat even the BLE GATT model as\njust a serial protocol.\n\nWhat it does is create a special \"emulate serial behavior over the\npacketized BLE protocol\" helper layer, that qtserialbluetooth falls back\non when rfcomm is not available.\n\nNOTE! This still requires some BLE packet code changes to work with the\nodd way that Shearwater sets up their BLE GATT communication.  So note\nthat no further patches are necessary to *libdivecomputer*, but some\nupdates are needed for the subsurface qt-ble.cpp code.\n\nI have those updates in my tree, and this code is all tested on my\nPerdix AI, but those patches are currently too ugly to commit as-is.\nI've cleaned up this \"fake serial\" code sufficiently, that cleanup comes\nnext.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Bluetooth: make LE-only devices add \"LE:\" as an address prefix\n\nThis seems a bit odd, but it actually has three different reasons for it:\n\n - It's a visual indication of BT LE mode for users\n\n - the rfcomm code only works with legacy BT support, and if we scan a\n   device that only does LE, we want the custom serial code to instead\n   automatically fall back on a \"emulate serial over LE packets\" model.\n\n - we want rfcomm to remain the default for devices that do both legacy\n   BT _and_ LE, but we want people to have the ability to override the\n   choice manually.  They can now do so by just editing the address\n   field and adding the \"LE:\" prefix manually, and it automatically gets\n   saved for next time.\n\nSo while a bit hacky, it's actually a very convenient model that not\nonly works automatically, but allows the manual override.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Very early and likely quite broken BLE GATT code\n\nThis is some very early and hacky code to be able to access BLE-enabled\ndive computers that use the GATT protocol to send packets back and forth\n(which seems to be pretty much all of them: a vendor-specific GATT\nservice with a write characteristic and a notification characteristic\nfor reading).\n\nFor testing only.  But it does successfully let me download dives from\nmy EON Steel and my Scubapro G2.\n\nNOTE! There are several very hacky pieces in here, including just\n\"knowing\" that the write characteristic is the first one, and the\nnotification characteristic is second.  The code should actually check\nthe properties rather than have those kinds of hardcoded assumptions.\n\nIt also checks \"vendor specific\" by looking at the UUID string\nrepresentation, and knowing that the standard ones start with zero.\nCrazily, there doesn't seem to be any normal way to test for this,\nalthough I guess that maybe the uuid.minimumSize() function could be\nused.\n\nThere are other nasty corners. Don't complain, send me patches.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Convert to new libdivecomputer custom IO model\n\nInstead of being \"custom serial\", it's a IO model that allows serial or\npacket modes, independently of each other (ie you can have a bluetooth\ndevice that does serial over BT rfcomm and packet-based communication\nover BLE GATT with the same serial operations that describe both cases).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix event merging when interleaving dives\n\nThe core to avoid adding redundant gas switch events was completely\nbuggered, and caused the result list to be corrupted if it ever\ntriggered.  This should fix it.\n\nFixes: b5de08b7 (\"No gas change event on merging dives with same gas\")\nReported-by: Jan Mulder <jlmulder@xs4all.nl>\nCc: Miika Turkia <miika.turkia@gmail.com>\nCc: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive site string merging\n\nIf the second dive site doesn't have a particular string, but the first\none does, we did the wrong thing and created a result string like\n\n   (first dive site string) or ((null))\n\nwhich is not useful.  We should just use the first dive site string\nas-is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly handle dive sites loaded from XML\n\nWe used to always create a new dive site structure when loading dive\nsite data from XML.\n\nThat is completely bogus, because it can (and does) create duplicate\ndive sites with the same UUID.  Which makes the whole UUID pointless.\n\nSo instead, look up the existing dive site associated with the UUID\nloaded from the XML, and try to merge the data properly if we already\nhad dive site information for that UUID.\n\nReported-by: Alessandro Volpi <volpial@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive merging: merge water temperature too, not just air temperature\n\nI have no idea why we only merged air temperatures.  But it was very\nexplicit (even the function doing the merging was named\n\"merge_airtemp()\"), and water temperatures were left alone.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Handle negative dates (before the epoch) better\n\nThe Qt model sorting for the dive date was using a unsigned number,\nwhich doesn't work for dates before 1970.\n\nAlso, the dive date parsing got the year 1900 wrong.  Not that we really\ncare, because other parts of date handling will screw up with any date\nbefore the year 1904.  So if you claim to be diving before 1904, you get\nbasically random behavior.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix crash when merging dives with a missing dive computer model\n\nThe test for the dive being a planned dive was completely bogus:\n\n - it should use \"same_string()\" which correctly checks for NULL\n\n - the string it checks for is obviously spelled wrong anyway.\n\nReported-by: Alessandro Volpi <volpial@gmail.com>\nFixes: a031dbbbd (\"When merging planned dives keep all cylinders\")\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cylinder merging a bit more careful\n\nThis makes some further updates to the new cylinder merging code:\n\n - avoid re-using the cylinder if the usage type (OC/diluent/O2) is\n   different between the two dives, even if the gasmix might be the\n   same.\n\n - avoid re-using a cylinder if the user has manually added pressure\n   data for it (and the pressures don't match)\n\n - when deciding to reuse a cylinder, make sure that we merge as much of\n   the type information as makes sense.\n\nThis will potentially result in more cylinders that might need manual\ncleanup, but at least we won't be throwing out user data.  And in most\ncases where merging happens, none of this is an issue (because the data\ncomes fresh from a dive computer, and won't have been manually edited to\ntrigger the new rules).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rewrite cylinder merging code from scratch\n\nThe old cylinder merging code depended on the preferred dive having all\nthe cylinders, and the newly merged dive was just forced to pick from\nthat existing set of cylinders.\n\nThat worked ok if you have a \"main\" dive computer that you have all the\ngases programmed for, and you download that first, and then you download\nany secondary data later.\n\nBut it completely messed up if the second dive computer had gases that\nthe first one didn't know about, and just basically ended up doing\nrandom things.\n\nThis rewrites the whole thing to actually try to create a union of the\ntwo sets of cylinders when merging, with sane matching so that if the\ncylinders match you won't get duplicates.\n\nMiika Turkia hit this when he only used one gas, but had several gases\ndefined in his OSTC that he downloaded after his Vyper (with had just\nthe single gas defined).\n\nThis should fix that case (at least it does for my xml merging test-case\nthat showed the same problem after some munging).\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make event string translation when downloading from libdivecomputer more obvious\n\nWe had hardcoded the exact translation of the event numbers.  They\nhaven't changed (although we did have what appears to be a spurious\nentry for \"non stop time\" at the end that libdivecomputer doesn't have\nan enum for).\n\nInstead, use an explicit array index initializer array, so that it's\nobvious that the two match up (and if the sample event numbers ever\nchange, we should cope with it gracefully).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add support for libdivecomputer using DC_SAMPLE_GASMIX\n\nNew libdivecomputer versions use DC_SAMPLE_GASMIX to indicate a gas\nchange (which contains the cylinder index we're changing to) rather than\nSAMPLE_EVENT_GASCHANGE*.\n\nUnlike the old GASCHANGE model, and despite the name, DC_SAMPLE_GASMIX\ndoes not actually say what the mix is, it only specifies a cylinder\nindex.  We had already extended SAMPLE_EVENT_GASCHANGE2 to have the\ncylinder index in the otherwise unused \"flags\" field, so this is not all\nthat different from what we used to do.\n\nAnd subsurface internally already had the logic that \"if we know what\nthe cylinder index is, take the gas mix from the cylinder data\", so\nwe've already been able to transparently use _either_ the actual gas mix\nor the cylinder index to show the event.\n\nBut we do want to make it an event rather than some sample data, because\nwe want to show it as such in the profile.  But because we are happy\nwith just the cylinder index, we'll just translate the DC_SAMPLE_GASMIX\nthing to the SAMPLE_EVENT_GASCHANGE2 event, and nothing really changes\nfor subsurface.\n\nlibdivecomputer has made other changes, like indicating the initial\ncylinder index with an early DC_SAMPLE_GASMIX report, but we've seen\nthat before too (in the form of early SAMPLE_EVENT_GASCHANGE events), so\nthat doesn't really end up changing anything for us either.\n\nHOWEVER, one thing that is worth noticing: do *not* apply this patch and\nthen use an old libdivecomputer library that sends both the\nDC_SAMPLE_GASMIX samples _and_ the deprecated SAMPLE_EVENT_GASCHANGE\nevents.  It will all *work*, but since subsurface will take either,\nyou'll then get duplicate gas mix events.\n\nIt's not like that is in any way fatal, but it might be a bit confusing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak cylinder equipment tooltips\n\nWhile playing around with the current subsurface, I realized that while we\ngive the gas volume and Z factor for the beginning/end pressures in the\nnewly added tooltips, there is no way to actually see that same\ninformation for the working pressure.\n\nSo if you have filled in cylinder type information, but don't have any\nactual gas usage information, there will be no cylinder tooltips at all.\nBut you might still want to know what the actual volume for a particular\ncylinder is, and what the Z value for that working pressure is.\n\nSo this tweaks the tool-tips a bit.\n\nWhen mousing over the pressure fields (ie \"working pressure\", \"start\" and\n\"end\"), it now always gives the cylinder gas volume and Z factor for that\npressure, so for example on an AL72 that has a working pressure of 3000\npsi and that contains air the tooltip will say:\n\n   69 cuft, Z=1.040\n\nwhen you mouse over the working pressure field (that's obviously with\nimperial units, in metric you'll see liters of gas).\n\nWhen mousing over the type/size field, it gives the used gas amounts, ie\nsomething like this:\n\n   37 cuft (82 cuft -> 45 cuft)\n\nbut if the cylinder doesn't have starting/ending pressures (and thus no\nused gas information), this patch will make subsurface show the working\npressure data instead, so that you at least get something.\n\nThis all seems more useful than what my first version gave.\n\nNOTE! This makes commit adaeb506b7a1 (\"Show both the nominal and \"real\"\nsize for an imperial cylinder\") kind of pointless. You now see the real\nsize in the tooltip when you mouse over the size, and now it actually\nworks both for imperial and metric people, so the tooltip is in many ways\nthe better model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add cylinder equipment tooltips with gas volume\n\nThis adds tooltips for the equipment tab for each cylinder, showing the\namount of gas used.\n\nWhen you mouse over the size and working pressure fields, the tooltip will\nshow the amount of gas used (along with start and end gas volumes). And\nwhen you mouse over the start and end pressures, it will show the start\nand end gas volumes, and the Z factor used.\n\nI started doing this because of the gas volume questions in the last day\nor two (and a few from a few weeks ago). When even Robert Helling starts\nwondering about the effects of compressibility on the SAC calculation, our\nnumbers are clearly too opaque.\n\nWith these tooltips, at least you can see what went into the used gas\ncalculations, instead of having to add debugging options to print out Z\nfactors.\n\n[ This patch also adds a \"rint()\" to get the rounding right in the\n  gas_volume() function.  Although rounding to the nearst milliliter\n  really doesn't matter, it's the right thing to do after doing FP\n  calculations ;^]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Stop trying to fix up pressure sensor indexes\n\nThis removes 'fixup_dc_cylinder_index()', which was added to fix up the\npressure sensor indexes from the Atomic Cobalt dive computer.\n\nEven for the Cobalt it really shouldn't matter, because the\nlibdivecomputer backend for the Cobalt actually tries to do the right\nthing.  See for example commit 8853a1ccd422 (\"Associate the pressure\nsamples with the primary tank.\") in libdivecomputer.\n\nSome historical digging shows that the subsurface sample pressure index\ncode came in from commit e32ba4d6d811 (\"Improve tank handling for\nCobalt\"), dated Tue Oct 28 13:48:15 2014.\n\nAnd the libdivecomputer \"use the right cylinder\" code was around the\nsame time (Fri Oct 10 20:29:17 2014 +0200).\n\nSo I suspect that subsurface needed the fixup based on an older version\nof libdivecomputer.  Jef's patch is a couple of weeks before, but we may\nnot have tracked libdivecomputer religiously.\n\nThe reason to remove this code is because it can (and does) mess up the\nsensor index when it is actually reliable, like in the multi-sensor case\nof the Suunto EON Steel.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Teach 'interpolate()' about zero-sized ranges\n\nNo, they don't make sense.  We should normally not have multiple samples\nthat are on the same second.  But they seem to happen on the EON Steel\nunder some circumstances, and instead of dividing by zero when trying to\ninterpolate across such a sample, do something sane.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure DC_FIELD_TANK starts from a clean slate for each cylinder\n\nWe used to clear the 'dc_tank_t' for each dive, but then only clear the\nvolume field in between each cylinder.  That means that if the\nlibdivecomputer back-end does not touch a field, it might contain the\nstale value from the previous tank information.\n\nI'm not sure this is actually much of an issue, since I'd expect\nback-ends do seem to initialize the fields fully (at least the EON Steel\nback-end does).  But it's inconsistent.\n\nAlso, the code was actually buggy because of the odd indentation: it\nwould only ask for new tank information up to 'ntanks' tanks, but\nbecause of the final fixup that was done outside of the conditional, it\nwould actually update the cylinder begin/end pressure data *beyond*\n'ntanks', and just re-use the last libdivecomputer data for the rest of\nthe cylinders.\n\nAgain, in practice, that probably never really happened, but it is a\nreal bug.\n\nThe fixed-up code actually looks better too, imho, and is one line\nshorter because of the initialization now being done in one place rather\nthan two.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Hacky workaround for multiple gas pressures per sample\n\nIn subsurface, we only have one cylinder pressure per sample (well,\ntechnically two: we have a separate o2 pressure for rebreather diving).\n\nWhich makes things \"interesting\" if the dive computer can actually have\nmultiple pressure sensors, and can report them all concurrently.  Like\nthe Suunto EON Steel.\n\nWe used to just take the last one (each sensor reading would just\noverwrite any previous ones), and this quick hack just changes the logic\nto prefer the \"current\" cylinder instead.\n\nIt's wrong, and it's stupid, but it's the best we can do without major\nsurgery.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fill in divecomputer serial number and firmware version on loading\n\nWe have the serial number and firmware version fields in \"struct\ndivecomputer\", but we don't actually fill them in when loading the data\nfrom git or xml, because we save all that information in the separate\ndevice table instead.\n\nBut in order to always have the serial number associated with a device,\nlet's make sure to fill those fields in.  It won't hurt, and this way we\nhave the information available whether we just loaded the dive from a\nfile, or imported it from the dive computer.  One less semantic\ndifference to worry about.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cloud storage authentication attempt counting\n\nThe authentication count was a static counter in the authentication\ncallback, which gets incremented until we consider the authentication to\nhave failed.\n\nThe problem with that is that it doesn't get incremented for just _one_\nauthentication operation, it gets incremented each time you try to load\nor save, so eventually the code considers authentication to have failed\neven if nothing ever went wrong.\n\nThis fixes it by making it static to the whole git-access file, and have\neach operation clear it before starting a new remote access.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Event flags should be checked as bits, not values\n\nThis becomes obvious with the new severity bits introduced in the Suunto\nEON Steel parser.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for SAMPLE_EVENT_STRING event type\n\nInstead of having fixed numbers and trying to translate them into\nstrings, a dive computer could just give us the string directly.  Like\nthe new EON Steel backend does.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly pick cylinder use when merging dives\n\nThe cylinder use field was not merged when dives were merged.  This is\nnormally not noticeable, since hopefully the cylinder use should be the\nsame anyway, but when re-downloading the dives from the EON Steel after\nupdating it to also get cylinder use data, the dive merging threw the\ndata away again since the original dive lacked it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get the cylinder use data from libdivecomputer if provided\n\nThis uses the extended tank type information to fill in the cylinder use\n(OC gas, CC Diluent or CC O2) from libdivecomputer when available.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add proper line ending for unit line in git save format\n\nThe imperial and metric unit formats already had this, but the\npersonalized one missed the newline at the end.\n\nIt shouldn't really matter, since it's the last line of the file, but it\nis not right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Preferentially use existing device ID when setting serial number\n\nWe have two different models for setting the deviceid associated with a\ndive computer: either take the value from the libdivecomputer 'devinfo'\nfield (from the DC_EVENT_DEVINFO event), or generate the device ID by\njust hashing the serial number string.\n\nThe one thing we do *not* want to have, is to use both methods, so that\nthe same device generates different device IDs.  Because then we'll\nthink we have two different dive computers even though they are one and\nthe same.\n\nUsually, this is not an issue, because libdivecomputer either sends the\nDEVINFO event or gives us the serial number string, and we'll always\njust pick one or the other.\n\nHowever, in the case of at least the Suunto EON Steel, I intentionally\ndid *not* send the DC_EVENT_DEVINFO event, because it gives no useful\ninformation.  We used the serial number string to generate a device ID,\nand everything was fine.\n\nHowever, in commit d40cdb4755ee (\"Add the devinfo event\") in the\nlibdivecomputer tree, Jeff started generating those DC_EVENT_DEVINFO\nevents for the EON Steel too, and suddenly subsurface would start using\na device ID based on that instead.\n\nThe situation is inherently ambiguous - for the EON Steel, we want to\nuse the hash of the serial number (because that is what we've\nhistorically done), but other dive computers might want to use the\nDEVINFO data (because that is what _those_ backends have historically\ndone, even if they might also implement the new serial string model).\n\nThis commit makes subsurface resolve this ambiguity by simply preferring\nwhatever previous device ID it has associated with that particular\nserial number string.  If you have no previous device IDs, it doesn't\nmatter which one you pick.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure dive computer model is proper malloc'ed allocation\n\nReported-and-tested-by: Rick Walsh <rickmwalsh@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure all dive computer events are represented in the plot_info data\n\nWe could create a plot_info data that didn't contain all the time slots\nfor the events fromt he dive computer, which would terminally confuse\nthe plotting of the event profile widgets because it couldn't match up\nthe event with the dive plot data model.\n\nSo for example, in DiveEventItem::recalculatePos(), when the code tries\nto figure out the spot in the data model, it could fail, and then try to\nhide the event (because without the data model information it doesn't\nknow where it should go).  But that hiding would then not match the\nlogic in DiveEventItem::shouldBeHidden(), and the event would end up\nbeing shown in the upper left-hand corner of the profile after all.\n\nThe reason the plot_info data wouldn't contain the time slots is that\nthe slots are allocated primarily for the sample data, and then the\nevents would be added in between sample data in populate_plot_entries().\n\nBut since we'd only add the event pointer *between* samples, that would\nmean that events after the last samples would not get plot-info points\nallocated to them.\n\nThat issue was exacerbated by how we also truncate uninteresting samples\nat the end when some dive computers end up giving a long stream\n(possibly several minutes) of \"at the surface\" events before they\nfinally turn off logging.\n\nThis makes sure that we take the event timestamps into account for the\n\"maxtime\" calculation, and also that we finish populating the plot_info\ndata with any final event timestamps.\n\nNow all the events will have a matching plot_info entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show surface events at the beginning or end of the dive\n\nThat's just annoying and pointless.  So we arbitrarily say that surface\nevents within the first and last 30s of the dive are suppressed.\n\nBut we now do show them in the middle, in case the sampling rate is too\nlow, and the profile itself doesn't show that we got to the surface.\n\nThese heuristics still needs tweaking - if the profile already shows\nthat we're at the surface, then we should probably suppress the event\ntriangle.\n\nBut in the meantime this at least gets rid of the truly pointless cases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't ignore surface events in xml parsing\n\nI missed the fact that not only did we skip importing surface events\nfrom the dive computer, we had also made our xml parser ignore them when\nloading an xml file.  All part of our historical \"let's ignore surface\nevents because dive computers are being very annoying about it\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundtion.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't ignore surface events from libdivecomputer\n\nThere are cases where we actually want to keep them, as exemplified by\nthis situation from Richard Yorke:\n\n  \"I have just come across a situation when ignoring the surface marker\n   is a disadvantage.  I have just had a problem with my BC feed\n   seeping, slowly filling my BC and as I control my buoyancy on the\n   bottom using the air in my drysuit, I did not notice, so that when I\n   came to ascend the expanding air in my BC caused a loss of control.\n\n   Fortunately not from a great depth and no untoward consequences.\n   However, the Subsurface profile only shows me rising to 4m and\n   descending to 5.5m for my safety stop.  However I actually broke the\n   surface and descented to 5.5 but the frequency of recording depth was\n   not fast enough to show this as it was so brief\"\n\nso remove the code that ignores the surface events entirely.\n\nI think we'll have to come up with some smarter filtering model for\nshowing them, but that is predicated on getting these events to come\nthrough in the first place.\n\nReported-by: Richard Yorke <yorke.richard@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'clear_dive()' free the primary dive computer data properly\n\nOur primary dive computer really is special, not just because it's the\nfirst one: it's directly embedded in the \"struct dive\", and so if you\njust walk the divecomputer list, you'll miss it, because it's not _on_\nthe list, it is the very head _of_ the list.\n\nWe had that bug in copy_dive(), and it turns out we have it in\nclear_dive() too: clear_dive() would free all the dive computers on the\nlist, but not the actual primary one.\n\nThis is a minor memory leak, no more, so it's not exactly critial, but\nlet's just do it right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix Qt date interfaces for times before 1970\n\nThis seems to work around the crazy QDateTime::fromTime_t() problem in Qt.\n\nIt is *very* lightly tested. In fact, the only test is that \"test0.xml\"\nchange that is part of this patch.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Extend time parsing to before 1970\n\nIt turns out that we are starting to have users that have logs that go\nback that far. It won't be common, but let's get it right anyway.\n\nNOTE! With us now supporting dates earlier in 1900, this also makes\n\"utc_mktime()\" always add the \"1900\" to the year field.  That way we\navoid ever using the fairly ambiguous two-digit shorthand.\n\nIt didn't use to be all that ambiguous when we knew that any two-digit\nnumber less than 70 had to be 2000+.  Now that we support going back to\nearlier in the last centiry, that certainty is eroding.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix 3-, 6- and 9-minute min/max calculations\n\nMake them use indices into the plot-info, fix calculation of average\ndepth, and fix and add comments.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix seabear import sample overrun bug\n\nThe Seabear import fixed up the NDL and TTS in the samples from minutes\n(in the import) to seconds (our internal format for all time).  But it\ndid it with a loop that overran the end of the samples array by one:\n\n\tfor(int s_nr = 0 ; s_nr <= dive->dc.samples ; s_nr++) {\n\nFix it to use the proper \"<\" instead of \"<=\".\n\nReported-by: Stuart Vernon <stuartv@force2.net>\nTested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix per-cylinder SAC rate calculations when cylinder use isn't known\n\nJohn Van Ostrand reports that when he dives using two cylinders using\nsidemounts, the per-cylinder SAC rate display is very misleading.\n\nWhat happens is that since the two cylinders are used together (but\nwithout a manifold), John is alternating between the two but not\nactually adding gas switches in the profile.  As a result, the profile\nlooks like only one cylinder is used, even though clearly the other\ncylinder gets breathed down too.\n\nThe per-cylinder SAC rate calculations would entirely ignore the\ncylinder that didn't have gas switch events to it, and looking at the\ninfo window it would look like John had a truly exceptional SAC rate.\n\nBut then in the general statistics panel that actually takes the whole\ngas use into account, the very different real SAC rate would show up.\n\nThe basic issue is that if we don't have full use information for the\ndifferent cylinders, we would account the whole dive to just a partial\nset.  We did have a special case for this, but that special case only\nreally worked if the first cylinder truly was the only cylinder used.\n\nThis patch makes us see the difference between \"only one cylinder was\nused, and I can use the overall mean depth for it\" and \"more than one\ncylinder was used, but I don't know what the mean depths might be\".\n\nReported-by: John Van Ostrand <john@vanostrand.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove unused and buggy get_cylinder_used_gas_string() function\n\nIt's good that this is unused, because it does the calculations wrong.\n\nDue to the gas compressibility the gas use calculations should subtract\nthe gas_volume() values at the differing pressures, not the pressures\nthemselves.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix include paths\n\nAs expected, commit 7be962bfc287 (\"Move subsurface-core to core and qt-mobile\nto mobile-widgets\") caused some breakage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start using the actual cylinder data for gas switch events\n\nNow that gas switch events always have indices into the cylinder table,\nstart using that to look up the gas mix from the cylinders rather than\nfrom the gas switch event itself.  In other words, the cylinder index is\nnow the primary data for gas switch events.\n\nThis means that now as you change the cylinder information, the gas\nswitch events will automatically update to reflect those changes.\n\nNote that on loading data from the outside (either from a xml file, from\na git/cloud account, or from a dive computer), we may or may not\ninitially have an index for the gas change event.  The external data may\nbe from an older version of subsurface, or it may be from a\nlibdivecomputer download that just doesn't give index data at all.\n\nIn that case, we will do:\n\n - if there is no index, but there is explicit gas mix information, we\n   will look up the index based on that gas mix, picking the cylinder\n   that has the closest mix.\n\n - if there isn't even explicit gas mix data, so we only have the event\n   value from libdivecomputer, we will turn that value into a gasmix,\n   and use that to look up the cylinder index as above.\n\n - if no valid cylinder information is available at all, gas switch\n   events will just be dropped.\n\nWhen saving the data, we now always save the cylinder index, and the gas\nmix associated with that cylinder (that gas mix will be ignored on load,\nsince the index is the primary, but it makes the event much easier to\nread).\n\nIt is worth noting we do not modify the libdivecomputer value, even if\nthe gasmix has changed, so that remains as a record of the original\ndownload.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make gas change events always have a cylinder index\n\nIn commit df4e26c8757a (\"Start sanitizing gaschange event information\")\nback about a year and a half ago, I started sanitizing the gas switch\nevent data, allowing gas switches to be associated with a particular\ncylinder index rather than just the gas mix that is switched to.\n\nBut that initial step only _allowed_ a gas switch event to be associated\nwith a particular cylinder, the primary model was still to just specify\nthe mix.\n\nThis finally takes the next step, and *always* associates a gas switch\nevent with a particular cylinder.  Instead of then looking up the\ncylinder by trying to match gas mixes at runtime, subsurface now looks\nit up when loading the dive initially as part of the dive fixup code.\n\nThe switch event still has an a separate gas mix associated with it, but\nthis patch also starts preparing for entirely relying on the gas mix in\nthe cylinder itself, by starting to pass in not just the event but also\nthe dive pointer to the routines that look up gas mix details.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make cylinder_nodata() take a const cylinder pointer\n\nSome of the gas mix cleanups I'm doing are in code that uses const\npointers, and wants to use this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make \"is_gasmix_redundant()\" more robust\n\nThe gas switch event handling is somewhat fragile, mostly because the\nlegacy event encoding for gas switches is odd.  It's also limited to\nwhole percentages, unlike our internal gas mix model.\n\nIn addition, it also ends up comparing the values to the raw permille\nvalues, which is wrong for air, and wouldn't match our O2_IN_AIR which\nis 209 permille (closest approximation to 20.946%).\n\nSo handle air separately, since \"21\" really is a valid oxygen value for\nair, and should match 20.9%.  And use the proper accessor functions to\nget the gasmix values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove linear pressure interpolation detection code\n\nDirk says that divinglog hasn't been doing the linear pressure\ninterpolation for a long while, so we're doing extra dive fixups that\nreally aren't needed any more.\n\nAlso, the code is actually buggy: it only ever worked on the first\ncylinder anyway (because only the first cylinder pressure_delta[] would\nbe initialized).  That was probably perfectly fine in practice, since\nit's unlikely that many tech divers used old versions of divinglog\nanyway, so the bug per se isn't a reason to remove it - but it is a sign\nthat the code was a bit hard to read, so let's get rid of it if there is\nno reason to maintain it or fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't write back dive data that hasn't changed in git\n\nThis caches the git ID for the dive on load, and avoids building the\ndive directory and hashing it on save as long as nothing has invalidated\nthe git ID cache.\n\nThat should make it much faster to write back data to the git\nrepository, since the dive tree structure and the divecomputer blobs in\nparticular are the bulk of it (due to all the sample data).  It's not\nactually the git operations that are all that expensive, it's literally\ngenerating the big blob with all the snprintf() calls for the data.\n\nThe git save used to be a fairly expensive with large data sets,\nespecially noticeable on mobile with much weaker CPU's.  This should\nspeed things up by at least a factor of two.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder end pressure fixup from samples\n\nThis bug admittedly hits almost nobody, but if you had multiple cylinder\npressure sensors on the same cylinder (attached to multiple dive\ncomputers, of course), we would take the beginning pressure from the\nfirst dive computer, and the ending pressure from the last dive\ncomputer.\n\nThat came about because we'd just walk all the dive computer samples in\norder, and the first time we see a relevant sample and we don't have a\nbeginning pressure, we'd take that pressure.  So the beginning pressure\nwas from the first dive computer, and once we'd seen a valid beginning\npressure, that would never change.\n\nBut as we're walking along, we'd continue to update the ending pressure\nfrom the last relevant sample we see, which means that as we go on to\nlook at the other dive computers, we'd continue to update the ending\npressure with data from them.\n\nAnd mixing beginning/ending pressures from two different sensors just\ndoes not make sense.\n\nThis changes the logic to be the same for beginning and ending\npressures: we only update it once, with the first relevant sample we\nsee.  But we walk the samples twice: forwards from the beginning to\nfind the first beginning pressure, and backwards from the end to find\nthe ending pressure.\n\nThat means that as we move on to the second dive computer, we've now\nfilled in the ending pressure from the first one, and will no longer\nupdate it any more.\n\nNOTE! We don't stop scanning the samples (or the dive computers) just\nbecause we've found a valid pressure value.  We'll always walk all the\nsamples because there might be multiple different cylinders that get\npressure data from different samples (and different dive computers).\n\nWe could have some early-out logic when we've filled in all relevant\ncylinders, but since this just runs once per dive it's not worth it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up fixup_dive_dc() into multiple smaller independent functions\n\nfixup_dive_dc() is called for each dive computer when we add a new dive.\nIt does various housekeeping functions, cleaning up the sample data, and\nfixing up dive details as a result of the sample data.\n\nThe function has grown to be a monster over time, and particularly the\ncentral \"walk every sample\" loop has become an unreadable mess.\n\nAnd the thing is, this isn't even all that performance-critical: it's\nonly done once per dive and dc, and there is no reason to have a single\nillegible and complex loop.\n\nSo split up that loop into several smaller pieces that each will loop\nindividually over the sample data, and do just one thing.  So now we\nhave separate functions for\n\n - fixing up the depth samples with interpolation\n - fixing up dive temperature data\n - correcting the cylinder pressure sensor index\n - cleaning up the actual sample pressures\n\nYes, this way we walk the samples multiple times, but the end result is\nthat the code is much easier to understand.  There should be no actual\nbehavioral differences from this cleanup, except for the fact that since\nthe code is much more understandable, this cleanup also fixed a bug:\n\nIn the temperature fixup, we would fix up the overall dive temperatures\nbased on the dive computer temperatures.  But we would then fix up the\noverall dive computer temperature based on the sample temperature\n*afterwards*, which wouldn't then be reflected in the overall dive\ntemperatures.\n\nThere was another non-symptomatic bug that became obvious when doing\nthis cleanup: the code used to calculate a 'depthtime' over the dive\nthat was never actually used.  That's a historical artifact of old code\nthat had become dead when the average depth calculations were moved to a\nfunction of their own earlier.\n\nThis is preparatory for fixing the overall cylinder pressure stats,\nwhich are currently wrong for dives with multiple dive computers: we\ncurrently take the starting cylinder pressure from the *first* dive\ncomputer that has cylinder pressure information, but we take the ending\ncylinder pressure from the *last* dive computer with cylinder pressure\ninformation.\n\nThis does not fix that bug, but without this cleanup fixing that would\nbe a nightmare due to the previous complicated \"do everything in one\nsingle loop\" model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be smarter about dive renumbering when merging dives\n\nWe really have two different cases for merging dives:\n\n (a) downloading a new dive from a dive computer, and merging it with an\n     existing dive that we had already created using a different dive\n     computer.  This is the \"try_to_merge()\" case, called from\n     \"process_dives()\n\n (b) merging two different dives into one longer dive.  This is the\n     \"merge_two_dives()\" case when you explicitly merge dives using the\n     divelist.\n\nWhile a lot of the issues are the same, many details differ, and one of\nthe details is how dive numbering should be handled.\n\nIn particular, when you download from a dive computer and merge with an\nexisting dive, you want too take the *maximum* dive number, because the\ndive computer notion of which dive it is may well not match what the\nuser dive number is.\n\nOn the other hand, when you explicitly merge in the dive list, you end\nup renumbering not just the dive you are merging, but also all\nsubsequent dives, since you now have one fewer dives overall.  So that\ncase already has to be handled by the caller.\n\nNow, the simpler \"download from dive computer\" case was broken by commit\nce3a78efcac2 (\"Assign lower number to a merged dive instead of higher\none\").  It fixed the numbering for the divelist case, but broke the\ndownload case.\n\nSo this commit reverts commit ce3a78efcac2, and instead extends and\nclarifies the dive renumbering that \"merge_two_dives()\" already did.  It\nnow explicitly renumbers not just the following dives, but also\nrenumbers the merged dive itself, so now we can go back to the old \"take\nthe bigger dive number\" for the core merging, which fixes the download\ncase.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: update to new coefficients, and simplify expressions\n\nThis updates the gas model to use the new virial coefficients from the R\nscript, and simplifies the expression a tiny bit by avoiding the\ndivision by 1000 for the gas fractions, and replacing it with a multiply\nby 0.001 at the end.\n\nThe virial coefficients for Oxygen and Nitrogen changed in the last\ndigits due to the use of a different tool for the least-square fitting.\nThat also accounts for the change in format (the coefficients are not\nusing scientific notation).\n\nThe coefficients for Helium changed noticeably more, since they are now\nbased on the new least-squares fit from the raw data.\n\nBut the actual end result does not change appreciably, the main\nadvantage is that now the numbers are easily reproducible.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: add proper He compressibility data and do a least-squares fit\n\nLubomir pointed to exactly where he got his data from, so I added that\nraw Helium data to the R script, and let the least-squares fit just take\ncare of the interpolation between 273K and 323K.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas-model: add R compressibility script\n\nIt annoyed me that we hand-waved a bit about how the virial factors were\nactually computed in the gas-model.c file, so here's an actual R script\nthat computes them and plots the results.\n\nYou can run it with (for example):\n\n    R --vanilla < compressibility.r\n\nand it will generate a Rplots.pdf of the plots, and the coefficients\nwill be shown on stdout.\n\nThe result actually differs in insignificant ways from the values that\nLubomir computed, which is likely just due to tools.  I used R, Lubomir\nseems to have used\n\n    http://polynomialregression.drque.net/online.php\n\nbut the actual curve is pretty much the same.\n\nNOTE! R is not entirely happy about the non-linear fit of the Helium\ncurve: the fit is *so* precise that it failes the R relative-offset\nconvergence criterion.  That is apparently generally a sign of\nartificial data.\n\nThat is probably because Lubomir generated them from the linear mix of\ntwo polynomial fits, rather than a linear mix of the original data.  But\nmaybe the original data was artificial?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: use virial cubic polynomial form\n\nThe \"virial\" form of the Z compression factor is of the form\n\n   Z = 1.0 + A*p + B*p^2 + C*p^3 + ..\n\nand it's considered the \"right\" polynomial form to use.  It happens to\nalso make for one constant less per gas (since the 1.0 can be added\nlater), and can be used to simplify the expression and avoid a few\nfloating point operations.\n\nHowever, in order for that kind of expression simplification to make\nsense, we need to make sure that we don't calculate the powers of the\npressure multiple times either, and that means we have to inline all the\nactual calculations.\n\nOur compiler options still mean that the generated code isn't optimal,\nbut that's a separate issue. And it is a lot better than it used to be.\n\nBeing clever about this does potentially make the code a tiny bit less\nlegible, but maybe that's not too bad for something that we'd expect to\nnot ever touch once we get it right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: simplify and improve our Z factor calculations\n\nLubomir found better compressibility data for the pure gases that we\nneed for scuba, making the air table superfluous: we get good values\nfrom just regular linear mixing of the Oxygen, Nitrogen and Helium\ncalculations.\n\nAlso, rather than using a quintic polynomial, a cubic one does\nsufficiently well, making for smaller code and fewer coefficients.\n\nAnd judging by the reactions from people on G+ (as well as just looking\nat how good the fit is with the air data), this is all the right way to\ndo this, and this thus removes the Redlich-Kwong equation.\n\nAll-credit-goes-to: Lubomir I. Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: add polynomials for Z factors of oxygen/nitrogen/helium\n\n.. and use a linear mix of them for arbitrary gas mixes.\n\nFor the special case of air, we continue to use the air-specific\npolynomial.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: replace Redlich-Kwong with least-square quintic\n\nThis goes back to just doing air compressibility, but using the\nleast-squares quintic polynomial equation that Lubomir generated based\non the Wikipedia table for air at 300K in the 1-500 bar range.\n\nWe might be able to do similar things for mixed gases..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: split up gas compressibility into a file of its own\n\nThe gas compressibility is such a specialized thing that I really prefer\nhaving it separate.\n\nThis keeps Robert's Redlich-Kwong equation as-is, but let's experiment\nwith other models soon...\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: use an actual compressibility table for air\n\nWe could in theory make this dependent on the gasmix, but for now let's\njust assume (incorrectly) that everything we breathe acts like air.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Show both the nominal and \"real\" size for an imperial cylinder\n\nThis is questionable, but perhaps useful.\n\nWhen showing imperial cylinder sizes, show both the nominal value (with\nno compensation for compressibility of the gas) and the \"actual\" amount\nof gas the cylinder contains.\n\nSo an AL80 will show as a size of \"80 (77)cuft\", because while 80 is the\nnominal size, the actual amount of gas that will fit is just 77 cuft.\n\n[Dirk Hohndel: adjusted to take translation of the unit into account]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use \"get_volume_string()\" for cylinder size string\n\nWe had two totally different usage cases for \"get_volume_string()\": one\nthat did the obvious \"show this volume as a string\", and one that tried\nto show a cylinder size.\n\nThe function used a magic third argument (the working pressure of the\ncylinder) to distinguish between the two cases, but it still got it\nwrong.\n\nA metric cylinder doesn't necessarily have a working pressure at all,\nand the size is a wet size in liters.  We'd pass in zero as the working\npressure, and if the volume units were set to cubic feet, the logic in\n\"get_volume_string()\" would happily convert the metric wet size into the\nwet size in cubic feet.\n\nBut that's completely wrong.  An imperial cylinder size simply isn't a\nwet size.  If you don't have a working pressure, you cannot convert the\ncylinder size to cubic feet.  End of story.\n\nSo instead of having \"get_volume_string()\" have magical behavior\ndepending on working pressure, and getting it wrong anyway, just make\nget_volume_string do a pure volume conversion, and create a whole new\nfunction for showing the size of a cylinder.\n\nNow, if the cylinder doesn't have a working pressure, we just show the\nmetric size, even if the user had asked for cubic feet.\n\n[Dirk Hohndel: added call to translation functions for the units]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: do not use gas compressibility for cylinder naming\n\nThis actually didn't make a difference for the common case, since our\nsimplified gas compressibility model had a compressibility factor of 1.0\nup to 200 bar, and increased smoothly from there.  As a result, the\ncommon 2400 and 3000 psi workpressures didn't really see an effect from\nthis.\n\nNot taking compressibility into account does kind of make sense for\ncylinder naming, since the cylinder may be used for different gases with\nvery different compressibility characteristics.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: do some initial cleanup\n\nThis marks \"surface_volume_multiplier()\" static in preparation for\nchanging it to use an actual honest-to-goodness compressibility\nestimation.  Without that, it wasn't obvious that the function wasn't\nused in other random places.\n\nAlso, remove the \"wet_volume()\" function.  It was unused, but more\nimportantly, it was wrong.  Yes, it was the inverse of \"gas_volume()\",\nbut when you calculate wet volumes from the imperial sizes, you don't\nactually use the \"real\" gas volume, you use the idealized one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: incrementally update interpolation data\n\nInstead of re-calculating all the interpolation data for each plot entry\n(which means that we have a quadratic algorithm that walks over all the\nplot-info points for each plot-info point), we can just update it\nincrementally within any particular interpolation segment.\n\nThe previous cleanups made the code sane enough to understand, and makes\nit trivial to see how you don't have to recalculate the full thing.\n\nThis gets rid of the O(n**2) algorithm, and it instead becomes O(n*m)\nwhere 'n' is the number of plot entries, and 'm' is the number of gas\nsegments (which is usually a much smaller numer, typically \"1\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: further code simplification\n\nWith the two bigger simplications, this just re-organizes the code to do\nthe \"interpolate.pressure_time\" update that is shared among all the\n\"after segment start\" cases in just one place.\n\nThat leaves the get_pr_interpolate_data() much simpler, and makes it\nmuch clearer what it actually does.\n\nIn particular, it becomes very obvious that \"interpolate.pressure_time\"\nis constant for one particular segment (it's the total pressure time),\nand that \"interpolate.acc_pressure_time\" is the one that gets updated\nfor every entry.\n\nThe next step is to only call this for the first entry, and then update\njust the \"acc_pressure_time\" in the caller.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: simplify code\n\nGetting rid of the pointless always-zero pressure now makes it obvious\nhow some of the remaining code can just be removed too: there is no\npoint in re-initializing the pressure_time entries to zero at the\nsegment start, because they started out zero and we just checked that we\ndon't do anything to them before we hit the segment start.\n\nSimilarly, now that the silly pressure testing is gone, it is obvious\nthat the code for \"i < cur\" and \"i == curr\" cases is identical, and the\ntwo cases can just be collapsed.\n\nSigned-off-by: Linus Torvalds <torvalds@ linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: get rid of pointless and confusing code\n\nIn the function fill_missing_tank_pressures(), we only ever call\nget_pr_interpolate_data() if \"pressure\" is zero.  So passing it in as an\nargument, and then testing whether it is zero or not, is just totally\npointless, and only obfuscates things.\n\nThis whole thing seems to be due to people editing the code over time,\nwith the tests becoming superfluous as the code around it changed, and\nnobody looking at whether it actually made sense any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't overflow cylinder array in xml parsing\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Interpolate depth for samples that have no depth\n\nWhen downloading from libdivecomputer, we used to initialize the depth\nof a sample to the previous depth.  However, at least for the Suunto EON\nSteel, you can get sample times without any actual depth reading - the\ntime might be associated with some ranbdom event rather than a new depth\nsample.\n\nRather than initialize these samples to have the same depth as the\nprevious one (and then perhaps getting a very sudden jump when the\n*real* depth event comes in a second later), initialize the depth\nsamples to -1, and if that sample doesn't get a real depth, we'll create\nan interpolated depth.\n\nIt is possible that we should just carry the sample around as not\nactually having a depth, and instead just interpolate in the plot_info\ngeneration, but at least right now we have a ton of code that \"knows\"\nthat every sample has a depth.  Not the least of which is our own save\nformat.\n\nSo generating an interpolated depth seems the path of least resistance,\nand at least makes the graph look correct - no odd staircase effect from\nother events that happen in between depth samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the momentary SAC calculation for the profile coloring\n\nThere was tons wrong with the code.  You can't just average the SAC rate\nover different plot entries, since they may not be the same duration.\nAnd it got the beginning and end conditions wrong etc etc.\n\nThis should at least get much closer.  And it's structured to be a lot\nmore understandable, I hope, even if the math is a bit more involved (ie\ndoing the proper time-pressure integration etc).  It may still have\nbugs, but at least it now gets the right coloration at the beginning of\na dive, and just eye-balling the slope vs color it seems to do the right\nthing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Robert C. Helling <helling@atdotde.de> Clean up Divesoft Freedome time parsing\n\nSo Anton Lundin says that the 32-bit timestamp for the Divesoft Freedom\nis indeed a signed offset from Jan 1, 2000.\n\nThis does that, but also extracts the whole thing into a helper function\nand makes sure that there are no overflows at any point by using\n\"timestamp_t\" in the whole series, and all the operations are \"obviously\nsafe\" in their types (ie no \"unsigned char gets widened to 'int' and\nthen we shift it left by 24 bits\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-fundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use SSRF_CUSTOM_IO v2 to implement device data quirks for BLE GATT\n\nRight now we have a quirk for Shearwater devices to set the random\naddress flag, but also to handle the differences at read/write time.\n\nWith this, I can finally download from both the Suunto EON Steel and the\nShearwater Perdix AI with the same binary.\n\nIt's not *pretty*, but it works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Switch over to SSRF_CUSTOM_IO v2\n\nI hate changing the IO interfaces this often, but when I converted the\ncustom serial interface to the more generic custom IO interface, I\nintentionally left the legacy serial operations alone, because I didn't\nwant to change something I didn't care about.\n\nBut it turns out that leaving them with the old calling convention\ncaused extra problems when converting the bluetooth serial code to have\nthe BLE GATT packet fall-back, which requires mixing two kinds of\noperations.\n\nAlso, the packet_open() routine was passed a copy of the 'dc_context_t',\nwhich makes it possible to update the 'dc_custom_io_t' field on the fly\nat open time.  That makes a lot of chaining operations much simpler,\nsince now you can chain the 'custom_io_t' at open time and then\nlibdivecomputer will automatically call the new routines instead of the\nold ones.\n\nThat dc_context_t availability gets rid of all the\n\n\tif (device && device->ops)\n\t\treturn device->ops->serial_xyz(..);\n\nhackery inside the rfcomm routines - now we can just at open time do a simple\n\n\tdc_context_set_custom_io(context, &ble_serial_ops);\n\nto switch things over to the BLE version of the serial code instead.\n\nFinally, SSRF_CUSTOM_IO v2 added an opaque \"dc_user_device_t\" pointer\nargument to the custom_io descriptor, which gets filled in as the\ncustom_io is registered with the download context.  Note that unlike\nmost opaque pointers, this one is opaque to *libdivecomputer*, and the\ntype is supposed to be supplied by the user.\n\nWe define the \"dc_user_device_t\" as our old \"struct device_data_t\",\nmaking it \"struct user_device_t\" instead.  That means that the IO\nroutines now get passed the device info showing what device they are\nsupposed to download for.\n\nThat, in turn, means that now our BLE GATT open code can take the device\ntype it opens for into account if it wants to.  And it will want to,\nsince the rules for Shearwater are different from the rules for Suunto,\nfor example.\n\nNOTE! Because of the interface change with libdivecomputer, this will\nneed a flag-day again where libdivecomputer and subsurface are updated\ntogether. It may not be the last time, either.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> BT serial: recognize LE-only devices, and fall back to emulated serial\n\nThis is somewhat hacky, but it allows at least the Shearwater\nlibdivecomputer backend to continue to treat even the BLE GATT model as\njust a serial protocol.\n\nWhat it does is create a special \"emulate serial behavior over the\npacketized BLE protocol\" helper layer, that qtserialbluetooth falls back\non when rfcomm is not available.\n\nNOTE! This still requires some BLE packet code changes to work with the\nodd way that Shearwater sets up their BLE GATT communication.  So note\nthat no further patches are necessary to *libdivecomputer*, but some\nupdates are needed for the subsurface qt-ble.cpp code.\n\nI have those updates in my tree, and this code is all tested on my\nPerdix AI, but those patches are currently too ugly to commit as-is.\nI've cleaned up this \"fake serial\" code sufficiently, that cleanup comes\nnext.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Bluetooth: make LE-only devices add \"LE:\" as an address prefix\n\nThis seems a bit odd, but it actually has three different reasons for it:\n\n - It's a visual indication of BT LE mode for users\n\n - the rfcomm code only works with legacy BT support, and if we scan a\n   device that only does LE, we want the custom serial code to instead\n   automatically fall back on a \"emulate serial over LE packets\" model.\n\n - we want rfcomm to remain the default for devices that do both legacy\n   BT _and_ LE, but we want people to have the ability to override the\n   choice manually.  They can now do so by just editing the address\n   field and adding the \"LE:\" prefix manually, and it automatically gets\n   saved for next time.\n\nSo while a bit hacky, it's actually a very convenient model that not\nonly works automatically, but allows the manual override.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Very early and likely quite broken BLE GATT code\n\nThis is some very early and hacky code to be able to access BLE-enabled\ndive computers that use the GATT protocol to send packets back and forth\n(which seems to be pretty much all of them: a vendor-specific GATT\nservice with a write characteristic and a notification characteristic\nfor reading).\n\nFor testing only.  But it does successfully let me download dives from\nmy EON Steel and my Scubapro G2.\n\nNOTE! There are several very hacky pieces in here, including just\n\"knowing\" that the write characteristic is the first one, and the\nnotification characteristic is second.  The code should actually check\nthe properties rather than have those kinds of hardcoded assumptions.\n\nIt also checks \"vendor specific\" by looking at the UUID string\nrepresentation, and knowing that the standard ones start with zero.\nCrazily, there doesn't seem to be any normal way to test for this,\nalthough I guess that maybe the uuid.minimumSize() function could be\nused.\n\nThere are other nasty corners. Don't complain, send me patches.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Convert to new libdivecomputer custom IO model\n\nInstead of being \"custom serial\", it's a IO model that allows serial or\npacket modes, independently of each other (ie you can have a bluetooth\ndevice that does serial over BT rfcomm and packet-based communication\nover BLE GATT with the same serial operations that describe both cases).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix event merging when interleaving dives\n\nThe core to avoid adding redundant gas switch events was completely\nbuggered, and caused the result list to be corrupted if it ever\ntriggered.  This should fix it.\n\nFixes: b5de08b7 (\"No gas change event on merging dives with same gas\")\nReported-by: Jan Mulder <jlmulder@xs4all.nl>\nCc: Miika Turkia <miika.turkia@gmail.com>\nCc: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive site string merging\n\nIf the second dive site doesn't have a particular string, but the first\none does, we did the wrong thing and created a result string like\n\n   (first dive site string) or ((null))\n\nwhich is not useful.  We should just use the first dive site string\nas-is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly handle dive sites loaded from XML\n\nWe used to always create a new dive site structure when loading dive\nsite data from XML.\n\nThat is completely bogus, because it can (and does) create duplicate\ndive sites with the same UUID.  Which makes the whole UUID pointless.\n\nSo instead, look up the existing dive site associated with the UUID\nloaded from the XML, and try to merge the data properly if we already\nhad dive site information for that UUID.\n\nReported-by: Alessandro Volpi <volpial@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive merging: merge water temperature too, not just air temperature\n\nI have no idea why we only merged air temperatures.  But it was very\nexplicit (even the function doing the merging was named\n\"merge_airtemp()\"), and water temperatures were left alone.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Handle negative dates (before the epoch) better\n\nThe Qt model sorting for the dive date was using a unsigned number,\nwhich doesn't work for dates before 1970.\n\nAlso, the dive date parsing got the year 1900 wrong.  Not that we really\ncare, because other parts of date handling will screw up with any date\nbefore the year 1904.  So if you claim to be diving before 1904, you get\nbasically random behavior.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix crash when merging dives with a missing dive computer model\n\nThe test for the dive being a planned dive was completely bogus:\n\n - it should use \"same_string()\" which correctly checks for NULL\n\n - the string it checks for is obviously spelled wrong anyway.\n\nReported-by: Alessandro Volpi <volpial@gmail.com>\nFixes: a031dbbbd (\"When merging planned dives keep all cylinders\")\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cylinder merging a bit more careful\n\nThis makes some further updates to the new cylinder merging code:\n\n - avoid re-using the cylinder if the usage type (OC/diluent/O2) is\n   different between the two dives, even if the gasmix might be the\n   same.\n\n - avoid re-using a cylinder if the user has manually added pressure\n   data for it (and the pressures don't match)\n\n - when deciding to reuse a cylinder, make sure that we merge as much of\n   the type information as makes sense.\n\nThis will potentially result in more cylinders that might need manual\ncleanup, but at least we won't be throwing out user data.  And in most\ncases where merging happens, none of this is an issue (because the data\ncomes fresh from a dive computer, and won't have been manually edited to\ntrigger the new rules).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rewrite cylinder merging code from scratch\n\nThe old cylinder merging code depended on the preferred dive having all\nthe cylinders, and the newly merged dive was just forced to pick from\nthat existing set of cylinders.\n\nThat worked ok if you have a \"main\" dive computer that you have all the\ngases programmed for, and you download that first, and then you download\nany secondary data later.\n\nBut it completely messed up if the second dive computer had gases that\nthe first one didn't know about, and just basically ended up doing\nrandom things.\n\nThis rewrites the whole thing to actually try to create a union of the\ntwo sets of cylinders when merging, with sane matching so that if the\ncylinders match you won't get duplicates.\n\nMiika Turkia hit this when he only used one gas, but had several gases\ndefined in his OSTC that he downloaded after his Vyper (with had just\nthe single gas defined).\n\nThis should fix that case (at least it does for my xml merging test-case\nthat showed the same problem after some munging).\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make event string translation when downloading from libdivecomputer more obvious\n\nWe had hardcoded the exact translation of the event numbers.  They\nhaven't changed (although we did have what appears to be a spurious\nentry for \"non stop time\" at the end that libdivecomputer doesn't have\nan enum for).\n\nInstead, use an explicit array index initializer array, so that it's\nobvious that the two match up (and if the sample event numbers ever\nchange, we should cope with it gracefully).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add support for libdivecomputer using DC_SAMPLE_GASMIX\n\nNew libdivecomputer versions use DC_SAMPLE_GASMIX to indicate a gas\nchange (which contains the cylinder index we're changing to) rather than\nSAMPLE_EVENT_GASCHANGE*.\n\nUnlike the old GASCHANGE model, and despite the name, DC_SAMPLE_GASMIX\ndoes not actually say what the mix is, it only specifies a cylinder\nindex.  We had already extended SAMPLE_EVENT_GASCHANGE2 to have the\ncylinder index in the otherwise unused \"flags\" field, so this is not all\nthat different from what we used to do.\n\nAnd subsurface internally already had the logic that \"if we know what\nthe cylinder index is, take the gas mix from the cylinder data\", so\nwe've already been able to transparently use _either_ the actual gas mix\nor the cylinder index to show the event.\n\nBut we do want to make it an event rather than some sample data, because\nwe want to show it as such in the profile.  But because we are happy\nwith just the cylinder index, we'll just translate the DC_SAMPLE_GASMIX\nthing to the SAMPLE_EVENT_GASCHANGE2 event, and nothing really changes\nfor subsurface.\n\nlibdivecomputer has made other changes, like indicating the initial\ncylinder index with an early DC_SAMPLE_GASMIX report, but we've seen\nthat before too (in the form of early SAMPLE_EVENT_GASCHANGE events), so\nthat doesn't really end up changing anything for us either.\n\nHOWEVER, one thing that is worth noticing: do *not* apply this patch and\nthen use an old libdivecomputer library that sends both the\nDC_SAMPLE_GASMIX samples _and_ the deprecated SAMPLE_EVENT_GASCHANGE\nevents.  It will all *work*, but since subsurface will take either,\nyou'll then get duplicate gas mix events.\n\nIt's not like that is in any way fatal, but it might be a bit confusing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak cylinder equipment tooltips\n\nWhile playing around with the current subsurface, I realized that while we\ngive the gas volume and Z factor for the beginning/end pressures in the\nnewly added tooltips, there is no way to actually see that same\ninformation for the working pressure.\n\nSo if you have filled in cylinder type information, but don't have any\nactual gas usage information, there will be no cylinder tooltips at all.\nBut you might still want to know what the actual volume for a particular\ncylinder is, and what the Z value for that working pressure is.\n\nSo this tweaks the tool-tips a bit.\n\nWhen mousing over the pressure fields (ie \"working pressure\", \"start\" and\n\"end\"), it now always gives the cylinder gas volume and Z factor for that\npressure, so for example on an AL72 that has a working pressure of 3000\npsi and that contains air the tooltip will say:\n\n   69 cuft, Z=1.040\n\nwhen you mouse over the working pressure field (that's obviously with\nimperial units, in metric you'll see liters of gas).\n\nWhen mousing over the type/size field, it gives the used gas amounts, ie\nsomething like this:\n\n   37 cuft (82 cuft -> 45 cuft)\n\nbut if the cylinder doesn't have starting/ending pressures (and thus no\nused gas information), this patch will make subsurface show the working\npressure data instead, so that you at least get something.\n\nThis all seems more useful than what my first version gave.\n\nNOTE! This makes commit adaeb506b7a1 (\"Show both the nominal and \"real\"\nsize for an imperial cylinder\") kind of pointless. You now see the real\nsize in the tooltip when you mouse over the size, and now it actually\nworks both for imperial and metric people, so the tooltip is in many ways\nthe better model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add cylinder equipment tooltips with gas volume\n\nThis adds tooltips for the equipment tab for each cylinder, showing the\namount of gas used.\n\nWhen you mouse over the size and working pressure fields, the tooltip will\nshow the amount of gas used (along with start and end gas volumes). And\nwhen you mouse over the start and end pressures, it will show the start\nand end gas volumes, and the Z factor used.\n\nI started doing this because of the gas volume questions in the last day\nor two (and a few from a few weeks ago). When even Robert Helling starts\nwondering about the effects of compressibility on the SAC calculation, our\nnumbers are clearly too opaque.\n\nWith these tooltips, at least you can see what went into the used gas\ncalculations, instead of having to add debugging options to print out Z\nfactors.\n\n[ This patch also adds a \"rint()\" to get the rounding right in the\n  gas_volume() function.  Although rounding to the nearst milliliter\n  really doesn't matter, it's the right thing to do after doing FP\n  calculations ;^]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Stop trying to fix up pressure sensor indexes\n\nThis removes 'fixup_dc_cylinder_index()', which was added to fix up the\npressure sensor indexes from the Atomic Cobalt dive computer.\n\nEven for the Cobalt it really shouldn't matter, because the\nlibdivecomputer backend for the Cobalt actually tries to do the right\nthing.  See for example commit 8853a1ccd422 (\"Associate the pressure\nsamples with the primary tank.\") in libdivecomputer.\n\nSome historical digging shows that the subsurface sample pressure index\ncode came in from commit e32ba4d6d811 (\"Improve tank handling for\nCobalt\"), dated Tue Oct 28 13:48:15 2014.\n\nAnd the libdivecomputer \"use the right cylinder\" code was around the\nsame time (Fri Oct 10 20:29:17 2014 +0200).\n\nSo I suspect that subsurface needed the fixup based on an older version\nof libdivecomputer.  Jef's patch is a couple of weeks before, but we may\nnot have tracked libdivecomputer religiously.\n\nThe reason to remove this code is because it can (and does) mess up the\nsensor index when it is actually reliable, like in the multi-sensor case\nof the Suunto EON Steel.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Teach 'interpolate()' about zero-sized ranges\n\nNo, they don't make sense.  We should normally not have multiple samples\nthat are on the same second.  But they seem to happen on the EON Steel\nunder some circumstances, and instead of dividing by zero when trying to\ninterpolate across such a sample, do something sane.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure DC_FIELD_TANK starts from a clean slate for each cylinder\n\nWe used to clear the 'dc_tank_t' for each dive, but then only clear the\nvolume field in between each cylinder.  That means that if the\nlibdivecomputer back-end does not touch a field, it might contain the\nstale value from the previous tank information.\n\nI'm not sure this is actually much of an issue, since I'd expect\nback-ends do seem to initialize the fields fully (at least the EON Steel\nback-end does).  But it's inconsistent.\n\nAlso, the code was actually buggy because of the odd indentation: it\nwould only ask for new tank information up to 'ntanks' tanks, but\nbecause of the final fixup that was done outside of the conditional, it\nwould actually update the cylinder begin/end pressure data *beyond*\n'ntanks', and just re-use the last libdivecomputer data for the rest of\nthe cylinders.\n\nAgain, in practice, that probably never really happened, but it is a\nreal bug.\n\nThe fixed-up code actually looks better too, imho, and is one line\nshorter because of the initialization now being done in one place rather\nthan two.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Hacky workaround for multiple gas pressures per sample\n\nIn subsurface, we only have one cylinder pressure per sample (well,\ntechnically two: we have a separate o2 pressure for rebreather diving).\n\nWhich makes things \"interesting\" if the dive computer can actually have\nmultiple pressure sensors, and can report them all concurrently.  Like\nthe Suunto EON Steel.\n\nWe used to just take the last one (each sensor reading would just\noverwrite any previous ones), and this quick hack just changes the logic\nto prefer the \"current\" cylinder instead.\n\nIt's wrong, and it's stupid, but it's the best we can do without major\nsurgery.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fill in divecomputer serial number and firmware version on loading\n\nWe have the serial number and firmware version fields in \"struct\ndivecomputer\", but we don't actually fill them in when loading the data\nfrom git or xml, because we save all that information in the separate\ndevice table instead.\n\nBut in order to always have the serial number associated with a device,\nlet's make sure to fill those fields in.  It won't hurt, and this way we\nhave the information available whether we just loaded the dive from a\nfile, or imported it from the dive computer.  One less semantic\ndifference to worry about.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cloud storage authentication attempt counting\n\nThe authentication count was a static counter in the authentication\ncallback, which gets incremented until we consider the authentication to\nhave failed.\n\nThe problem with that is that it doesn't get incremented for just _one_\nauthentication operation, it gets incremented each time you try to load\nor save, so eventually the code considers authentication to have failed\neven if nothing ever went wrong.\n\nThis fixes it by making it static to the whole git-access file, and have\neach operation clear it before starting a new remote access.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Event flags should be checked as bits, not values\n\nThis becomes obvious with the new severity bits introduced in the Suunto\nEON Steel parser.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for SAMPLE_EVENT_STRING event type\n\nInstead of having fixed numbers and trying to translate them into\nstrings, a dive computer could just give us the string directly.  Like\nthe new EON Steel backend does.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly pick cylinder use when merging dives\n\nThe cylinder use field was not merged when dives were merged.  This is\nnormally not noticeable, since hopefully the cylinder use should be the\nsame anyway, but when re-downloading the dives from the EON Steel after\nupdating it to also get cylinder use data, the dive merging threw the\ndata away again since the original dive lacked it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get the cylinder use data from libdivecomputer if provided\n\nThis uses the extended tank type information to fill in the cylinder use\n(OC gas, CC Diluent or CC O2) from libdivecomputer when available.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add proper line ending for unit line in git save format\n\nThe imperial and metric unit formats already had this, but the\npersonalized one missed the newline at the end.\n\nIt shouldn't really matter, since it's the last line of the file, but it\nis not right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Preferentially use existing device ID when setting serial number\n\nWe have two different models for setting the deviceid associated with a\ndive computer: either take the value from the libdivecomputer 'devinfo'\nfield (from the DC_EVENT_DEVINFO event), or generate the device ID by\njust hashing the serial number string.\n\nThe one thing we do *not* want to have, is to use both methods, so that\nthe same device generates different device IDs.  Because then we'll\nthink we have two different dive computers even though they are one and\nthe same.\n\nUsually, this is not an issue, because libdivecomputer either sends the\nDEVINFO event or gives us the serial number string, and we'll always\njust pick one or the other.\n\nHowever, in the case of at least the Suunto EON Steel, I intentionally\ndid *not* send the DC_EVENT_DEVINFO event, because it gives no useful\ninformation.  We used the serial number string to generate a device ID,\nand everything was fine.\n\nHowever, in commit d40cdb4755ee (\"Add the devinfo event\") in the\nlibdivecomputer tree, Jeff started generating those DC_EVENT_DEVINFO\nevents for the EON Steel too, and suddenly subsurface would start using\na device ID based on that instead.\n\nThe situation is inherently ambiguous - for the EON Steel, we want to\nuse the hash of the serial number (because that is what we've\nhistorically done), but other dive computers might want to use the\nDEVINFO data (because that is what _those_ backends have historically\ndone, even if they might also implement the new serial string model).\n\nThis commit makes subsurface resolve this ambiguity by simply preferring\nwhatever previous device ID it has associated with that particular\nserial number string.  If you have no previous device IDs, it doesn't\nmatter which one you pick.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure dive computer model is proper malloc'ed allocation\n\nReported-and-tested-by: Rick Walsh <rickmwalsh@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make sure all dive computer events are represented in the plot_info data\n\nWe could create a plot_info data that didn't contain all the time slots\nfor the events fromt he dive computer, which would terminally confuse\nthe plotting of the event profile widgets because it couldn't match up\nthe event with the dive plot data model.\n\nSo for example, in DiveEventItem::recalculatePos(), when the code tries\nto figure out the spot in the data model, it could fail, and then try to\nhide the event (because without the data model information it doesn't\nknow where it should go).  But that hiding would then not match the\nlogic in DiveEventItem::shouldBeHidden(), and the event would end up\nbeing shown in the upper left-hand corner of the profile after all.\n\nThe reason the plot_info data wouldn't contain the time slots is that\nthe slots are allocated primarily for the sample data, and then the\nevents would be added in between sample data in populate_plot_entries().\n\nBut since we'd only add the event pointer *between* samples, that would\nmean that events after the last samples would not get plot-info points\nallocated to them.\n\nThat issue was exacerbated by how we also truncate uninteresting samples\nat the end when some dive computers end up giving a long stream\n(possibly several minutes) of \"at the surface\" events before they\nfinally turn off logging.\n\nThis makes sure that we take the event timestamps into account for the\n\"maxtime\" calculation, and also that we finish populating the plot_info\ndata with any final event timestamps.\n\nNow all the events will have a matching plot_info entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show surface events at the beginning or end of the dive\n\nThat's just annoying and pointless.  So we arbitrarily say that surface\nevents within the first and last 30s of the dive are suppressed.\n\nBut we now do show them in the middle, in case the sampling rate is too\nlow, and the profile itself doesn't show that we got to the surface.\n\nThese heuristics still needs tweaking - if the profile already shows\nthat we're at the surface, then we should probably suppress the event\ntriangle.\n\nBut in the meantime this at least gets rid of the truly pointless cases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't ignore surface events in xml parsing\n\nI missed the fact that not only did we skip importing surface events\nfrom the dive computer, we had also made our xml parser ignore them when\nloading an xml file.  All part of our historical \"let's ignore surface\nevents because dive computers are being very annoying about it\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundtion.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't ignore surface events from libdivecomputer\n\nThere are cases where we actually want to keep them, as exemplified by\nthis situation from Richard Yorke:\n\n  \"I have just come across a situation when ignoring the surface marker\n   is a disadvantage.  I have just had a problem with my BC feed\n   seeping, slowly filling my BC and as I control my buoyancy on the\n   bottom using the air in my drysuit, I did not notice, so that when I\n   came to ascend the expanding air in my BC caused a loss of control.\n\n   Fortunately not from a great depth and no untoward consequences.\n   However, the Subsurface profile only shows me rising to 4m and\n   descending to 5.5m for my safety stop.  However I actually broke the\n   surface and descented to 5.5 but the frequency of recording depth was\n   not fast enough to show this as it was so brief\"\n\nso remove the code that ignores the surface events entirely.\n\nI think we'll have to come up with some smarter filtering model for\nshowing them, but that is predicated on getting these events to come\nthrough in the first place.\n\nReported-by: Richard Yorke <yorke.richard@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'clear_dive()' free the primary dive computer data properly\n\nOur primary dive computer really is special, not just because it's the\nfirst one: it's directly embedded in the \"struct dive\", and so if you\njust walk the divecomputer list, you'll miss it, because it's not _on_\nthe list, it is the very head _of_ the list.\n\nWe had that bug in copy_dive(), and it turns out we have it in\nclear_dive() too: clear_dive() would free all the dive computers on the\nlist, but not the actual primary one.\n\nThis is a minor memory leak, no more, so it's not exactly critial, but\nlet's just do it right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix Qt date interfaces for times before 1970\n\nThis seems to work around the crazy QDateTime::fromTime_t() problem in Qt.\n\nIt is *very* lightly tested. In fact, the only test is that \"test0.xml\"\nchange that is part of this patch.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Extend time parsing to before 1970\n\nIt turns out that we are starting to have users that have logs that go\nback that far. It won't be common, but let's get it right anyway.\n\nNOTE! With us now supporting dates earlier in 1900, this also makes\n\"utc_mktime()\" always add the \"1900\" to the year field.  That way we\navoid ever using the fairly ambiguous two-digit shorthand.\n\nIt didn't use to be all that ambiguous when we knew that any two-digit\nnumber less than 70 had to be 2000+.  Now that we support going back to\nearlier in the last centiry, that certainty is eroding.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix 3-, 6- and 9-minute min/max calculations\n\nMake them use indices into the plot-info, fix calculation of average\ndepth, and fix and add comments.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix seabear import sample overrun bug\n\nThe Seabear import fixed up the NDL and TTS in the samples from minutes\n(in the import) to seconds (our internal format for all time).  But it\ndid it with a loop that overran the end of the samples array by one:\n\n\tfor(int s_nr = 0 ; s_nr <= dive->dc.samples ; s_nr++) {\n\nFix it to use the proper \"<\" instead of \"<=\".\n\nReported-by: Stuart Vernon <stuartv@force2.net>\nTested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix per-cylinder SAC rate calculations when cylinder use isn't known\n\nJohn Van Ostrand reports that when he dives using two cylinders using\nsidemounts, the per-cylinder SAC rate display is very misleading.\n\nWhat happens is that since the two cylinders are used together (but\nwithout a manifold), John is alternating between the two but not\nactually adding gas switches in the profile.  As a result, the profile\nlooks like only one cylinder is used, even though clearly the other\ncylinder gets breathed down too.\n\nThe per-cylinder SAC rate calculations would entirely ignore the\ncylinder that didn't have gas switch events to it, and looking at the\ninfo window it would look like John had a truly exceptional SAC rate.\n\nBut then in the general statistics panel that actually takes the whole\ngas use into account, the very different real SAC rate would show up.\n\nThe basic issue is that if we don't have full use information for the\ndifferent cylinders, we would account the whole dive to just a partial\nset.  We did have a special case for this, but that special case only\nreally worked if the first cylinder truly was the only cylinder used.\n\nThis patch makes us see the difference between \"only one cylinder was\nused, and I can use the overall mean depth for it\" and \"more than one\ncylinder was used, but I don't know what the mean depths might be\".\n\nReported-by: John Van Ostrand <john@vanostrand.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove unused and buggy get_cylinder_used_gas_string() function\n\nIt's good that this is unused, because it does the calculations wrong.\n\nDue to the gas compressibility the gas use calculations should subtract\nthe gas_volume() values at the differing pressures, not the pressures\nthemselves.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix include paths\n\nAs expected, commit 7be962bfc287 (\"Move subsurface-core to core and qt-mobile\nto mobile-widgets\") caused some breakage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start using the actual cylinder data for gas switch events\n\nNow that gas switch events always have indices into the cylinder table,\nstart using that to look up the gas mix from the cylinders rather than\nfrom the gas switch event itself.  In other words, the cylinder index is\nnow the primary data for gas switch events.\n\nThis means that now as you change the cylinder information, the gas\nswitch events will automatically update to reflect those changes.\n\nNote that on loading data from the outside (either from a xml file, from\na git/cloud account, or from a dive computer), we may or may not\ninitially have an index for the gas change event.  The external data may\nbe from an older version of subsurface, or it may be from a\nlibdivecomputer download that just doesn't give index data at all.\n\nIn that case, we will do:\n\n - if there is no index, but there is explicit gas mix information, we\n   will look up the index based on that gas mix, picking the cylinder\n   that has the closest mix.\n\n - if there isn't even explicit gas mix data, so we only have the event\n   value from libdivecomputer, we will turn that value into a gasmix,\n   and use that to look up the cylinder index as above.\n\n - if no valid cylinder information is available at all, gas switch\n   events will just be dropped.\n\nWhen saving the data, we now always save the cylinder index, and the gas\nmix associated with that cylinder (that gas mix will be ignored on load,\nsince the index is the primary, but it makes the event much easier to\nread).\n\nIt is worth noting we do not modify the libdivecomputer value, even if\nthe gasmix has changed, so that remains as a record of the original\ndownload.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make gas change events always have a cylinder index\n\nIn commit df4e26c8757a (\"Start sanitizing gaschange event information\")\nback about a year and a half ago, I started sanitizing the gas switch\nevent data, allowing gas switches to be associated with a particular\ncylinder index rather than just the gas mix that is switched to.\n\nBut that initial step only _allowed_ a gas switch event to be associated\nwith a particular cylinder, the primary model was still to just specify\nthe mix.\n\nThis finally takes the next step, and *always* associates a gas switch\nevent with a particular cylinder.  Instead of then looking up the\ncylinder by trying to match gas mixes at runtime, subsurface now looks\nit up when loading the dive initially as part of the dive fixup code.\n\nThe switch event still has an a separate gas mix associated with it, but\nthis patch also starts preparing for entirely relying on the gas mix in\nthe cylinder itself, by starting to pass in not just the event but also\nthe dive pointer to the routines that look up gas mix details.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make cylinder_nodata() take a const cylinder pointer\n\nSome of the gas mix cleanups I'm doing are in code that uses const\npointers, and wants to use this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make \"is_gasmix_redundant()\" more robust\n\nThe gas switch event handling is somewhat fragile, mostly because the\nlegacy event encoding for gas switches is odd.  It's also limited to\nwhole percentages, unlike our internal gas mix model.\n\nIn addition, it also ends up comparing the values to the raw permille\nvalues, which is wrong for air, and wouldn't match our O2_IN_AIR which\nis 209 permille (closest approximation to 20.946%).\n\nSo handle air separately, since \"21\" really is a valid oxygen value for\nair, and should match 20.9%.  And use the proper accessor functions to\nget the gasmix values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove linear pressure interpolation detection code\n\nDirk says that divinglog hasn't been doing the linear pressure\ninterpolation for a long while, so we're doing extra dive fixups that\nreally aren't needed any more.\n\nAlso, the code is actually buggy: it only ever worked on the first\ncylinder anyway (because only the first cylinder pressure_delta[] would\nbe initialized).  That was probably perfectly fine in practice, since\nit's unlikely that many tech divers used old versions of divinglog\nanyway, so the bug per se isn't a reason to remove it - but it is a sign\nthat the code was a bit hard to read, so let's get rid of it if there is\nno reason to maintain it or fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't write back dive data that hasn't changed in git\n\nThis caches the git ID for the dive on load, and avoids building the\ndive directory and hashing it on save as long as nothing has invalidated\nthe git ID cache.\n\nThat should make it much faster to write back data to the git\nrepository, since the dive tree structure and the divecomputer blobs in\nparticular are the bulk of it (due to all the sample data).  It's not\nactually the git operations that are all that expensive, it's literally\ngenerating the big blob with all the snprintf() calls for the data.\n\nThe git save used to be a fairly expensive with large data sets,\nespecially noticeable on mobile with much weaker CPU's.  This should\nspeed things up by at least a factor of two.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder end pressure fixup from samples\n\nThis bug admittedly hits almost nobody, but if you had multiple cylinder\npressure sensors on the same cylinder (attached to multiple dive\ncomputers, of course), we would take the beginning pressure from the\nfirst dive computer, and the ending pressure from the last dive\ncomputer.\n\nThat came about because we'd just walk all the dive computer samples in\norder, and the first time we see a relevant sample and we don't have a\nbeginning pressure, we'd take that pressure.  So the beginning pressure\nwas from the first dive computer, and once we'd seen a valid beginning\npressure, that would never change.\n\nBut as we're walking along, we'd continue to update the ending pressure\nfrom the last relevant sample we see, which means that as we go on to\nlook at the other dive computers, we'd continue to update the ending\npressure with data from them.\n\nAnd mixing beginning/ending pressures from two different sensors just\ndoes not make sense.\n\nThis changes the logic to be the same for beginning and ending\npressures: we only update it once, with the first relevant sample we\nsee.  But we walk the samples twice: forwards from the beginning to\nfind the first beginning pressure, and backwards from the end to find\nthe ending pressure.\n\nThat means that as we move on to the second dive computer, we've now\nfilled in the ending pressure from the first one, and will no longer\nupdate it any more.\n\nNOTE! We don't stop scanning the samples (or the dive computers) just\nbecause we've found a valid pressure value.  We'll always walk all the\nsamples because there might be multiple different cylinders that get\npressure data from different samples (and different dive computers).\n\nWe could have some early-out logic when we've filled in all relevant\ncylinders, but since this just runs once per dive it's not worth it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up fixup_dive_dc() into multiple smaller independent functions\n\nfixup_dive_dc() is called for each dive computer when we add a new dive.\nIt does various housekeeping functions, cleaning up the sample data, and\nfixing up dive details as a result of the sample data.\n\nThe function has grown to be a monster over time, and particularly the\ncentral \"walk every sample\" loop has become an unreadable mess.\n\nAnd the thing is, this isn't even all that performance-critical: it's\nonly done once per dive and dc, and there is no reason to have a single\nillegible and complex loop.\n\nSo split up that loop into several smaller pieces that each will loop\nindividually over the sample data, and do just one thing.  So now we\nhave separate functions for\n\n - fixing up the depth samples with interpolation\n - fixing up dive temperature data\n - correcting the cylinder pressure sensor index\n - cleaning up the actual sample pressures\n\nYes, this way we walk the samples multiple times, but the end result is\nthat the code is much easier to understand.  There should be no actual\nbehavioral differences from this cleanup, except for the fact that since\nthe code is much more understandable, this cleanup also fixed a bug:\n\nIn the temperature fixup, we would fix up the overall dive temperatures\nbased on the dive computer temperatures.  But we would then fix up the\noverall dive computer temperature based on the sample temperature\n*afterwards*, which wouldn't then be reflected in the overall dive\ntemperatures.\n\nThere was another non-symptomatic bug that became obvious when doing\nthis cleanup: the code used to calculate a 'depthtime' over the dive\nthat was never actually used.  That's a historical artifact of old code\nthat had become dead when the average depth calculations were moved to a\nfunction of their own earlier.\n\nThis is preparatory for fixing the overall cylinder pressure stats,\nwhich are currently wrong for dives with multiple dive computers: we\ncurrently take the starting cylinder pressure from the *first* dive\ncomputer that has cylinder pressure information, but we take the ending\ncylinder pressure from the *last* dive computer with cylinder pressure\ninformation.\n\nThis does not fix that bug, but without this cleanup fixing that would\nbe a nightmare due to the previous complicated \"do everything in one\nsingle loop\" model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be smarter about dive renumbering when merging dives\n\nWe really have two different cases for merging dives:\n\n (a) downloading a new dive from a dive computer, and merging it with an\n     existing dive that we had already created using a different dive\n     computer.  This is the \"try_to_merge()\" case, called from\n     \"process_dives()\n\n (b) merging two different dives into one longer dive.  This is the\n     \"merge_two_dives()\" case when you explicitly merge dives using the\n     divelist.\n\nWhile a lot of the issues are the same, many details differ, and one of\nthe details is how dive numbering should be handled.\n\nIn particular, when you download from a dive computer and merge with an\nexisting dive, you want too take the *maximum* dive number, because the\ndive computer notion of which dive it is may well not match what the\nuser dive number is.\n\nOn the other hand, when you explicitly merge in the dive list, you end\nup renumbering not just the dive you are merging, but also all\nsubsequent dives, since you now have one fewer dives overall.  So that\ncase already has to be handled by the caller.\n\nNow, the simpler \"download from dive computer\" case was broken by commit\nce3a78efcac2 (\"Assign lower number to a merged dive instead of higher\none\").  It fixed the numbering for the divelist case, but broke the\ndownload case.\n\nSo this commit reverts commit ce3a78efcac2, and instead extends and\nclarifies the dive renumbering that \"merge_two_dives()\" already did.  It\nnow explicitly renumbers not just the following dives, but also\nrenumbers the merged dive itself, so now we can go back to the old \"take\nthe bigger dive number\" for the core merging, which fixes the download\ncase.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: update to new coefficients, and simplify expressions\n\nThis updates the gas model to use the new virial coefficients from the R\nscript, and simplifies the expression a tiny bit by avoiding the\ndivision by 1000 for the gas fractions, and replacing it with a multiply\nby 0.001 at the end.\n\nThe virial coefficients for Oxygen and Nitrogen changed in the last\ndigits due to the use of a different tool for the least-square fitting.\nThat also accounts for the change in format (the coefficients are not\nusing scientific notation).\n\nThe coefficients for Helium changed noticeably more, since they are now\nbased on the new least-squares fit from the raw data.\n\nBut the actual end result does not change appreciably, the main\nadvantage is that now the numbers are easily reproducible.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: add proper He compressibility data and do a least-squares fit\n\nLubomir pointed to exactly where he got his data from, so I added that\nraw Helium data to the R script, and let the least-squares fit just take\ncare of the interpolation between 273K and 323K.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas-model: add R compressibility script\n\nIt annoyed me that we hand-waved a bit about how the virial factors were\nactually computed in the gas-model.c file, so here's an actual R script\nthat computes them and plots the results.\n\nYou can run it with (for example):\n\n    R --vanilla < compressibility.r\n\nand it will generate a Rplots.pdf of the plots, and the coefficients\nwill be shown on stdout.\n\nThe result actually differs in insignificant ways from the values that\nLubomir computed, which is likely just due to tools.  I used R, Lubomir\nseems to have used\n\n    http://polynomialregression.drque.net/online.php\n\nbut the actual curve is pretty much the same.\n\nNOTE! R is not entirely happy about the non-linear fit of the Helium\ncurve: the fit is *so* precise that it failes the R relative-offset\nconvergence criterion.  That is apparently generally a sign of\nartificial data.\n\nThat is probably because Lubomir generated them from the linear mix of\ntwo polynomial fits, rather than a linear mix of the original data.  But\nmaybe the original data was artificial?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: use virial cubic polynomial form\n\nThe \"virial\" form of the Z compression factor is of the form\n\n   Z = 1.0 + A*p + B*p^2 + C*p^3 + ..\n\nand it's considered the \"right\" polynomial form to use.  It happens to\nalso make for one constant less per gas (since the 1.0 can be added\nlater), and can be used to simplify the expression and avoid a few\nfloating point operations.\n\nHowever, in order for that kind of expression simplification to make\nsense, we need to make sure that we don't calculate the powers of the\npressure multiple times either, and that means we have to inline all the\nactual calculations.\n\nOur compiler options still mean that the generated code isn't optimal,\nbut that's a separate issue. And it is a lot better than it used to be.\n\nBeing clever about this does potentially make the code a tiny bit less\nlegible, but maybe that's not too bad for something that we'd expect to\nnot ever touch once we get it right.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: simplify and improve our Z factor calculations\n\nLubomir found better compressibility data for the pure gases that we\nneed for scuba, making the air table superfluous: we get good values\nfrom just regular linear mixing of the Oxygen, Nitrogen and Helium\ncalculations.\n\nAlso, rather than using a quintic polynomial, a cubic one does\nsufficiently well, making for smaller code and fewer coefficients.\n\nAnd judging by the reactions from people on G+ (as well as just looking\nat how good the fit is with the air data), this is all the right way to\ndo this, and this thus removes the Redlich-Kwong equation.\n\nAll-credit-goes-to: Lubomir I. Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: add polynomials for Z factors of oxygen/nitrogen/helium\n\n.. and use a linear mix of them for arbitrary gas mixes.\n\nFor the special case of air, we continue to use the air-specific\npolynomial.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: replace Redlich-Kwong with least-square quintic\n\nThis goes back to just doing air compressibility, but using the\nleast-squares quintic polynomial equation that Lubomir generated based\non the Wikipedia table for air at 300K in the 1-500 bar range.\n\nWe might be able to do similar things for mixed gases..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas model: split up gas compressibility into a file of its own\n\nThe gas compressibility is such a specialized thing that I really prefer\nhaving it separate.\n\nThis keeps Robert's Redlich-Kwong equation as-is, but let's experiment\nwith other models soon...\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: use an actual compressibility table for air\n\nWe could in theory make this dependent on the gasmix, but for now let's\njust assume (incorrectly) that everything we breathe acts like air.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Show both the nominal and \"real\" size for an imperial cylinder\n\nThis is questionable, but perhaps useful.\n\nWhen showing imperial cylinder sizes, show both the nominal value (with\nno compensation for compressibility of the gas) and the \"actual\" amount\nof gas the cylinder contains.\n\nSo an AL80 will show as a size of \"80 (77)cuft\", because while 80 is the\nnominal size, the actual amount of gas that will fit is just 77 cuft.\n\n[Dirk Hohndel: adjusted to take translation of the unit into account]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use \"get_volume_string()\" for cylinder size string\n\nWe had two totally different usage cases for \"get_volume_string()\": one\nthat did the obvious \"show this volume as a string\", and one that tried\nto show a cylinder size.\n\nThe function used a magic third argument (the working pressure of the\ncylinder) to distinguish between the two cases, but it still got it\nwrong.\n\nA metric cylinder doesn't necessarily have a working pressure at all,\nand the size is a wet size in liters.  We'd pass in zero as the working\npressure, and if the volume units were set to cubic feet, the logic in\n\"get_volume_string()\" would happily convert the metric wet size into the\nwet size in cubic feet.\n\nBut that's completely wrong.  An imperial cylinder size simply isn't a\nwet size.  If you don't have a working pressure, you cannot convert the\ncylinder size to cubic feet.  End of story.\n\nSo instead of having \"get_volume_string()\" have magical behavior\ndepending on working pressure, and getting it wrong anyway, just make\nget_volume_string do a pure volume conversion, and create a whole new\nfunction for showing the size of a cylinder.\n\nNow, if the cylinder doesn't have a working pressure, we just show the\nmetric size, even if the user had asked for cubic feet.\n\n[Dirk Hohndel: added call to translation functions for the units]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: do not use gas compressibility for cylinder naming\n\nThis actually didn't make a difference for the common case, since our\nsimplified gas compressibility model had a compressibility factor of 1.0\nup to 200 bar, and increased smoothly from there.  As a result, the\ncommon 2400 and 3000 psi workpressures didn't really see an effect from\nthis.\n\nNot taking compressibility into account does kind of make sense for\ncylinder naming, since the cylinder may be used for different gases with\nvery different compressibility characteristics.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gas pressures: do some initial cleanup\n\nThis marks \"surface_volume_multiplier()\" static in preparation for\nchanging it to use an actual honest-to-goodness compressibility\nestimation.  Without that, it wasn't obvious that the function wasn't\nused in other random places.\n\nAlso, remove the \"wet_volume()\" function.  It was unused, but more\nimportantly, it was wrong.  Yes, it was the inverse of \"gas_volume()\",\nbut when you calculate wet volumes from the imperial sizes, you don't\nactually use the \"real\" gas volume, you use the idealized one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: incrementally update interpolation data\n\nInstead of re-calculating all the interpolation data for each plot entry\n(which means that we have a quadratic algorithm that walks over all the\nplot-info points for each plot-info point), we can just update it\nincrementally within any particular interpolation segment.\n\nThe previous cleanups made the code sane enough to understand, and makes\nit trivial to see how you don't have to recalculate the full thing.\n\nThis gets rid of the O(n**2) algorithm, and it instead becomes O(n*m)\nwhere 'n' is the number of plot entries, and 'm' is the number of gas\nsegments (which is usually a much smaller numer, typically \"1\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: further code simplification\n\nWith the two bigger simplications, this just re-organizes the code to do\nthe \"interpolate.pressure_time\" update that is shared among all the\n\"after segment start\" cases in just one place.\n\nThat leaves the get_pr_interpolate_data() much simpler, and makes it\nmuch clearer what it actually does.\n\nIn particular, it becomes very obvious that \"interpolate.pressure_time\"\nis constant for one particular segment (it's the total pressure time),\nand that \"interpolate.acc_pressure_time\" is the one that gets updated\nfor every entry.\n\nThe next step is to only call this for the first entry, and then update\njust the \"acc_pressure_time\" in the caller.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: simplify code\n\nGetting rid of the pointless always-zero pressure now makes it obvious\nhow some of the remaining code can just be removed too: there is no\npoint in re-initializing the pressure_time entries to zero at the\nsegment start, because they started out zero and we just checked that we\ndon't do anything to them before we hit the segment start.\n\nSimilarly, now that the silly pressure testing is gone, it is obvious\nthat the code for \"i < cur\" and \"i == curr\" cases is identical, and the\ntwo cases can just be collapsed.\n\nSigned-off-by: Linus Torvalds <torvalds@ linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> pressure interpolation: get rid of pointless and confusing code\n\nIn the function fill_missing_tank_pressures(), we only ever call\nget_pr_interpolate_data() if \"pressure\" is zero.  So passing it in as an\nargument, and then testing whether it is zero or not, is just totally\npointless, and only obfuscates things.\n\nThis whole thing seems to be due to people editing the code over time,\nwith the tests becoming superfluous as the code around it changed, and\nnobody looking at whether it actually made sense any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't overflow cylinder array in xml parsing\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Interpolate depth for samples that have no depth\n\nWhen downloading from libdivecomputer, we used to initialize the depth\nof a sample to the previous depth.  However, at least for the Suunto EON\nSteel, you can get sample times without any actual depth reading - the\ntime might be associated with some ranbdom event rather than a new depth\nsample.\n\nRather than initialize these samples to have the same depth as the\nprevious one (and then perhaps getting a very sudden jump when the\n*real* depth event comes in a second later), initialize the depth\nsamples to -1, and if that sample doesn't get a real depth, we'll create\nan interpolated depth.\n\nIt is possible that we should just carry the sample around as not\nactually having a depth, and instead just interpolate in the plot_info\ngeneration, but at least right now we have a ton of code that \"knows\"\nthat every sample has a depth.  Not the least of which is our own save\nformat.\n\nSo generating an interpolated depth seems the path of least resistance,\nand at least makes the graph look correct - no odd staircase effect from\nother events that happen in between depth samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the momentary SAC calculation for the profile coloring\n\nThere was tons wrong with the code.  You can't just average the SAC rate\nover different plot entries, since they may not be the same duration.\nAnd it got the beginning and end conditions wrong etc etc.\n\nThis should at least get much closer.  And it's structured to be a lot\nmore understandable, I hope, even if the math is a bit more involved (ie\ndoing the proper time-pressure integration etc).  It may still have\nbugs, but at least it now gets the right coloration at the beginning of\na dive, and just eye-balling the slope vs color it seems to do the right\nthing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Robert C. Helling <helling@atdotde.de> Clean up Divesoft Freedome time parsing\n\nSo Anton Lundin says that the 32-bit timestamp for the Divesoft Freedom\nis indeed a signed offset from Jan 1, 2000.\n\nThis does that, but also extracts the whole thing into a helper function\nand makes sure that there are no overflows at any point by using\n\"timestamp_t\" in the whole series, and all the operations are \"obviously\nsafe\" in their types (ie no \"unsigned char gets widened to 'int' and\nthen we shift it left by 24 bits\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-fundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix 32-bit overflow in Divesoft Freedom time handling\n\nCommit 31fb2e4c62ab (\"Avoid possible sign extension\") handled the\nproblem when a \"unsigned char\" is shifted 24 bits left, and becomes a\n\"signed int\".  By casting the result to uint32_t, that signed case won't\nhappen.\n\nHowever, there were two bugs in that fix.\n\nThe first is the comment.  It's not that \"timestamp_t\" is signed that is\nthe problem.  No, the problem is inherent in the C expression\n\n    (ptr[11] << 24)\n\nwhere \"ptr[11]\" is an unsigned char.  In C arithmetic, unsigned char is\nimplicitly type-expanded to \"int\", so while it has a value between\n0..255, when you shift it left by 24, you can get a *negative* \"int\" as\na result.\n\nSo it's actually \"ptr[11]\" that should have been cast to \"unsigned\", but\nit so happens that you can do all the shifting and adding in \"int\", and\nthen cast the end result to \"uint32_t\" and you'll get the same value.\nBut at no point did \"timestamp_t\" matter.\n\nThe other bug was pre-existing and just not fixed.  When the code does\nthe \"+ 946684800\" (to turn the timestamp to be seconds from the start of\n2000, into seconds since the \"unix epoch\", ie 1970) that arithmetic is\nnow done in that \"uint32_t\" (and used to be done in \"int\").\n\nWhich means that the addition can overflow in 32 bits *before* it is\ncast to timestamp_t (which is 64 bits).\n\nAdmittedly that 32-bit overflow happens a bit later than the sign bit\ngets set, but if we're worried aboout overflows, let's just do this\nright.\n\nIn other words, we have a 32-bit unsigned offset since Jan 1, 2000, and\nfor the full range we need to do the epoch correction in 32 bits.\nBecause otherwise you fail in the year 2106 (32-bit unsigned unix epoch\ntime limit), even though the 32-bit seconds *should* work all the way\nuntil the year 2136.\n\nOf course, I'll be rather surprised if people still use the Divesoft\nFreedom in the year 2106.  Or rather, I won't be surprised, because I'll\nbe dead.\n\nBut if we think that the signed problem matters (in the year 2068), then\ndammit, we can extend it another 30 years.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support to \"split\" a dive with surface time in the middle\n\nRight now this requires that\n\n (a) the dive have only one divecomputer associated with it.\n\n     Trying to split a dive with multiple dive computers would be *much*\n     harder to do, since you'd have to try to line up the surface\n     interval between computers etc.  So just don't do it after\n     downloading multiple dive computers for the same dive.\n\n (b) there must be at least one minute between the sample that came up\n     to the surface and the sample that goes down again.\n\n     If you just peeked your head above the surface, don't try to split\n     things into two dives.  Maybe we can relax this for freediving or\n     something.\n\nalso note that the split dive will only get new numbering if the dive\nthat was split was the very last dive in the divelist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make add_single_dive() grow the divelist allocation if necessary\n\nWe only made sure the divelist allocation was big enough in\n\"record_dive_to_table()\", but add_single_dive() can add entries too.\n\nNow, in practice that never bit anybody, since\n\n (a) we allocate extra entries anyway, and it would be very unusual that\n     the divelist table was exactly full\n\n (b) most \"malloc()\" implementations end up having their own slop on top\n     of that\n\n (c) add_single_dive() was only used for merging dives, which actually\n     ends up removing more divex than it adds (but it does add one first)\n\nbut when I'm starting to split dives, this will be a bigger issue in\npractice.  And it was wrong.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use surface sample data for cylinder beginning/end\n\npressure\n\nAt the beginning of the dive, let the cylinder cool down if the diver\nstarts off at the surface.  And at the end of the dive, there may be\nsurface pressures where the diver has already turned off the air supply\n(especially for computers like the Uemis Zurich that end up saving quite\na bit of samples after the dive has ended).\n\nSo just don't use surface samples to populate the beginning/ending\ncylinder pressure data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be much more careful about merging dives\n\nThis patch changes the dive merging to be much more careful about\nthings, because it turns out that we had several small oddities that\ncaused big merge issues.\n\nThe oddities are:\n\n - the dive \"duration\" is actually how long we spend under water.\n\n   But that means that when we do \"dive->when + dive.duration.seconds\"\n   to calculate the end of the dive, that is nonsensical if you came up\n   to the surface in the middle of a dive.\n\n   Now, normally you don't see profiles like that, but once you start\n   merging dives together, it can go from \"small detail\" to \"dominant\n   factor\".\n\n - We have two different cases of merging: the automatic \"merge new dive\n   computer download if it looks like the same dive\" (which always has a\n   merge offset of 0, since we merge it as a new dive computer) and the\n   \"merge two different dives into one longer dive.\n\n   The code assumed that it could look at the \"downloaded\" flag for the\n   dive to check one or the other, but that doesn't really work.\n   Reading a dive from an XML file isn't any different from downloading\n   it.\n\n   So we need to change the logic to determine what kind of merge it is\n   to actually check the passed-in time offset.\n\nWith this, Stuart Vernon's test-case of eight dives with short surface\nintervals in between end up merging correctly into one dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nReported-by: Stuart Vernon <stuartv@force2.net>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix plot entry creation\n\nThis was originally triggered by an odd merge of two dives that should\nhave been the same, but that showed a corner case where the plot entry\ncreation could create broken results that violated our assumptions about\ntime stamps being monotonous.\n\nWhen setting up the plot entries we create surface entries at the\nbeginning and end. We then fill in the plot entries between them based on\nthe samples from the dive computer plus our own interpolation (so we have\none entry at least every ten seconds). The loop ends when we are out of\nspace - which in this instance caused us to exit before updating the\nmaxtime and therefore the final plot entries having time stamps that were\nsmaller than the last entry filled in by the inner loop.\n\nThis patch makes sure we have enough space in the plot entry structure and\nmoves the exit from the inner loop until after we have updated the\nmaxtime.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Uemis downloader: start downloading using the correct dive ID\n\nThe logic to pick the initial dive ID for the uemis downloader was very\nconfused, and did not work at all when restarting a download when the\nUemis filled up, and the \"Force download all dives\" flag was set.  It\nalso required a rather odd Uemis-specific callback from the download UI\nbecause of how it picked the initial ID.\n\nThis changes the logic to just look at the list of downloaded dives when\nrestarting, which simplifies the logic a lot, gets rid of the odd\nspecial callback, and also means that the whole \"Force download\" issue\njust goes away.  It seems to work now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Uemis downloader: avoid NULL pointer dereference\n\nThe Uemis downloader blindly just did a strstr on 'nds->name', even if\nthere wasn't necessarily a dive location at all.\n\nAdd the proper NULL pointer checks.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix divecomputer nickname handling\n\nDon't overwrite existing data.\n\n[Dirk Hohndel: rewrote this a litte, but the logic is the same]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: fix crash with no remote\n\nCommit e21cae2d46db (\"Cloud storage: sync the remote after save\") broke\nregular git saving without any remotes: it would never initialize the\n\"remote\" pointer, and then use that uninitialized remote pointer to see\nif it was a cloud storage remote that it should try to sync.\n\nFix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: actually update the remote repository if the local cache is more recent\n\nAgain, note that this currently only happens when you initially open the repository.\n\nSo if you do\n\n    subsurface https://.../repo[myubranch]\n\nit will start up by fetching the remote information, and updating the\nlocal cache.  If you then download new dives, and do a save-and-exit, it\nwill save to the local cache, but it doesn't do the fetch at this point,\nso the remote is now begind.\n\nThe *next* time you start subsurface, and load that git branch again, it\nwill fetch the remote, and now notice that the local cache is ahead of\nit (because you downloaded new dives and saved them locally), and *then*\nit will try to update the remote with the new information.\n\nThis is obviously bogus, but we will need to decide exactly how we want\nto sync with the remote repository.  But now the core functionality is\nthere, it's just that we need some interface to say \"sync now\".\nEspecially in the face of spotty (or non-working) internet, you want a\nGUI etc for this whole remote sync, rather than doing it unconditionally\nand silently whenever you load the local cache initially.\n\nWith that caveat:\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: re-organize code to make 'origin' remote more widely available\n\nI'm going to try to update the remote if the local cache is more recent\nwhen we fetch the data, which requires access to the remote over a wider\nrange of code.  This re-organizes the code so that we can free the\nremote later without having to have nasty error handling.\n\nWe avoid the whole \"if an error happened, free the remote and return\" by\ncreating helper functions and freeing the remote in the caller, so that\nall paths end up freeing it naturally.\n\nNOTE! We want to try to update the remote when we save the local cache\ntoo, so this whole \"update remote when opening it\" is incomplete. But\n (a) we do want to do it here as well\nand\n (b) this is the easiest place to create the initial \"push to remote\"\n     code without any new \"sync with cloud\" interfaces.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: actually update cached copy from remote\n\nWe used to fetch the remote information but not actually do anything\nabout it, except report when it wasn't up-to-date.\n\nNow we actually update the local cached copy if the remote has changed.\n\nThe code does not try to actually merge things, so only fast-forward\nupdates are done, but that should be the normal case.  We might\neventually do some simple merging on our own, but I suspect manual\nmerging may be the safer option.\n\nWe don't currently ever update the remote repository, and only inform\nusers that our local repository is ahead of the remote.  Fixing that is\nthe next step.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix initial scrolling problem\n\nThe initial selection change signal seems to potentially be sent\nbefore the listview is even visible when we do the first \"scrollTo()\"\nto the currently selected dive.\n\nThat, in turn, seems to result in that when the listview is actually\nshown, it will be scroll the trip description off the visible area,\nand force the current dive to be shown at the very top of the\ndivelist. Which is not very nice: we do want to scroll to the current\ndive, but we don't want to hide the current trip in the process.\n\nIgnoring the selection change if the listview isn't even visible seems\nto fix things for me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove unnecessary use of non-portable 'mkdir()'\n\nThis fixes the problem with Windows being the usual non-POSIX PoS that it is..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start parsing remote git repository addresses\n\nThis doesn't really usefully work, but I'm committing it to have git\ndiff and history.  It also insanely hardcodes the git-repo cache\ndirectory, because right now it's purely useful for development.\n\nThe big missing pieces are:\n\n - progress information\n - credential callbacks not implemented\n\nwhere the first one makes the user interface horrible (long delays with\nnothing visibly going on), and the second one makes ssh logins etc not\nwork.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-access: use the new format_string helpers\n\nIt may be a bit less efficient to use a printf-style interface rather\nthan the explicit malloc and memcpy, but the code ends up simpler and\nmore readable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start splitting out git repo helper routines\n\nThis doesn't actually change any code, but it moves the 'is_git_repo()'\nfunction that is used by both loading and saving into a new git-access.c\nfile.\n\nThis is where I'll start doing remote repo syncing too. Knock wood.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add 'system_default_directory()' helper function\n\nThis is just a extern \"C\" wrapper around QStandardPaths::AppDataLocation,\nwhile also making sure the entry exists.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> membuffer: add helper functions to return regular C strings\n\nThe whole \"create a string using a printf-like interface\" thing is\npretty common, and most users then don't necessarily want to deal with\nthe membuffer interfaces around it.\n\nSo this just creates trivial wrappers to do this, so that you can do\n\n    s = format_string(\"%d: %s\\n\", i, str);\n\nor similar things.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Extend SAMPLE_EVENT_GASCHANGE2 to have cylinder index in 'flags' field\n\nA value of zero (which is the normal legacy one) remains \"unknown\", but\nthe divecomputer backend can now give both gasmix and cylinder number\nthis way.\n\nCurrently only the EON Steel backend does that, but it should be easy\nenough to extend others too.\n\nAlso, fix the user-visible cylinder numbering in the cylinder change\ntooltip to use a human-friendlier one-based numbering (ie first cylinder\nis \"cyl 1\", not \"cyl 0\")\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix gaschange tooltip information\n\nThe code tried to look up the cylinder index from the Qt data models,\nwhich was not only horribly confusing, but was also buggy.  I think the\nindex ends up being off by one when the first cylinder change is hidden\n(because it's at the beginning of the dive), but I can't make heads or\ntails of that crazy code, so there might be something else going on.\n\nJust remove all the crazy code, and use the event data directly.  Which\ngas the gasmix and the (potential) explicit cylinder index already.\nIt's much more straightforward, and it just automatically gets the right\nend result whether some other event is hidden or not.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save format: Don't save redunant temperature sample data\n\nThe git sample loader will fill in temperature data from the previous\nentry anyway, so saving repeated temperatures is just wasteful.\n\nIt turns out that commit 6cf3787a0ed1 (\"Remove code that zeroes out\nduplicate oxygen sensor and temperature values\") removed the explicit\nredundant temperature removal in the dive fixup, which had hidden this\nissue.\n\nCc: willem ferguson <willemferguson@zoology.up.ac.za>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the new DC_FIELD_STRING callback if it exists\n\nThis recognizes recognize some strigns (serial number and firmware\nversion), and the ones that it doesn't recognize it adds as extra data\nusing Dirk's new interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Display dive duration in dive list in whole minutes\n\nThe whole \"duration in seconds\" is being way too OCD about the\ninformation, and just makes it harder to read.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dc nickname helper function\n\nThis helper function is used to get a nickname for a dive computer, when\nthe model information on its own may be ambiguous (ie there may be\nmultiple dive computers of the same model, and we've nicknamed them by\nowner).\n\nHowever, the helper did completely the wrong thing if it didn't find a\ndive computer entry at all due to a missing device ID - it would just\nreturn empty.  Which is bogus: it should return the model name, the same\nway it does if the nickname is missing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make it possible to have samples without depth from libdivecomputer\n\nNormally, all samples have depths associated with them, and most dive\ncomputers likely don't even have the concept of a sample without a depth.\n\nHowever, the new Suunto EON Steel definitely has samples with just time\nupdates (and perhaps other data, like events) and no depth at all.  We\nget unhappy about that, and interpret it as having a zero depth.  Which\ndoesn't look very nice.\n\nThis just makes all samples default to the same depth as the previous\nsample.  For normal samples with a depth value, that will just override\nthat default.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> mm: remove gup_flags FOLL_WRITE games from __get_user_pages()\n\ncommit 19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619 upstream.\n\nThis is an ancient bug that was actually attempted to be fixed once\n(badly) by me eleven years ago in commit 4ceb5db9757a (\"Fix\nget_user_pages() race for write access\") but that was then undone due to\nproblems on s390 by commit f33ea7f404e5 (\"fix get_user_pages bug\").\n\nIn the meantime, the s390 situation has long been fixed, and we can now\nfix it by checking the pte_dirty() bit properly (and do it better).  The\ns390 dirty bit was implemented in abf09bed3cce (\"s390/mm: implement\nsoftware dirty bits\") which made it into v3.9.  Earlier kernels will\nhave to look at the page state itself.\n\nAlso, the VM has become more scalable, and what used a purely\ntheoretical race back then has become easier to trigger.\n\nTo fix it, we introduce a new internal FOLL_COW flag to mark the \"yes,\nwe already did a COW\" rather than play racy games with FOLL_WRITE that\nis very fundamental, and then use the pte dirty flag to validate that\nthe FOLL_COW flag is still valid.\n\nChange-Id: I83a08fd1f9c8928c0ed95286f737c27cc7811576\nReported-and-tested-by: Phil \"not Paul\" Oester <kernel@linuxace.com>\nAcked-by: Hugh Dickins <hughd@google.com>\nReviewed-by: Michal Hocko <mhocko@suse.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: Nick Piggin <npiggin@gmail.com>\nCc: Greg Thelen <gthelen@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n[wt: s/gup.c/memory.c; s/follow_page_pte/follow_page_mask;\n     s/faultin_page/__get_user_page]\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Paul Keith <javelinanddart@gmail.com> UPSTREAM: Fix broken audit tests for exec arg len\n\n(cherry picked from commit 45820c294fe1b1a9df495d57f40585ef2d069a39)\n\nThe \"fix\" in commit 0b08c5e5944 (\"audit: Fix check of return value of\nstrnlen_user()\") didn't fix anything, it broke things.  As reported by\nSteven Rostedt:\n\n \"Yes, strnlen_user() returns 0 on fault, but if you look at what len is\n  set to, than you would notice that on fault len would be -1\"\n\nbecause we just subtracted one from the return value.  So testing\nagainst 0 doesn't test for a fault condition, it tests against a\nperfectly valid empty string.\n\nAlso fix up the usual braindamage wrt using WARN_ON() inside a\nconditional - make it part of the conditional and remove the explicit\nunlikely() (which is already part of the WARN_ON*() logic, exactly so\nthat you don't have to write unreadable code.\n\nReported-and-tested-by: Steven Rostedt <rostedt@goodmis.org>\nCc: Jan Kara <jack@suse.cz>\nCc: Paul Moore <pmoore@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Sasha Levin <alexander.levin@verizon.com>\nChange-Id: I692542689180f825f1b35e7536a03d1a3278ce53 atomic: remove all traces of READ_ONCE_CTRL() and atomic*_read_ctrl()\n\nThis seems to be a mis-reading of how alpha memory ordering works, and\nis not backed up by the alpha architecture manual.  The helper functions\ndon't do anything special on any other architectures, and the arguments\nthat support them being safe on other architectures also argue that they\nare safe on alpha.\n\nBasically, the \"control dependency\" is between a previous read and a\nsubsequent write that is dependent on the value read.  Even if the\nsubsequent write is actually done speculatively, there is no way that\nsuch a speculative write could be made visible to other cpu's until it\nhas been committed, which requires validating the speculation.\n\nNote that most weakely ordered architectures (very much including alpha)\ndo not guarantee any ordering relationship between two loads that depend\non each other on a control dependency:\n\n    read A\n    if (val == 1)\n        read B\n\nbecause the conditional may be predicted, and the \"read B\" may be\nspeculatively moved up to before reading the value A.  So we require the\nuser to insert a smp_rmb() between the two accesses to be correct:\n\n    read A;\n    if (A == 1)\n        smp_rmb()\n        read B\n\nAlpha is further special in that it can break that ordering even if the\n*address* of B depends on the read of A, because the cacheline that is\nread later may be stale unless you have a memory barrier in between the\npointer read and the read of the value behind a pointer:\n\n    read ptr\n    read offset(ptr)\n\nwhereas all other weakly ordered architectures guarantee that the data\ndependency (as opposed to just a control dependency) will order the two\naccesses.  As a result, alpha needs a \"smp_read_barrier_depends()\" in\nbetween those two reads for them to be ordered.\n\nThe coontrol dependency that \"READ_ONCE_CTRL()\" and \"atomic_read_ctrl()\"\nhad was a control dependency to a subsequent *write*, however, and\nnobody can finalize such a subsequent write without having actually done\nthe read.  And were you to write such a value to a \"stale\" cacheline\n(the way the unordered reads came to be), that would seem to lose the\nwrite entirely.\n\nSo the things that make alpha able to re-order reads even more\naggressively than other weak architectures do not seem to be relevant\nfor a subsequent write.  Alpha memory ordering may be strange, but\nthere's no real indication that it is *that* strange.\n\nAlso, the alpha architecture reference manual very explicitly talks\nabout the definition of \"Dependence Constraints\" in section 5.6.1.7,\nwhere a preceding read dominates a subsequent write.\n\nSuch a dependence constraint admittedly does not impose a BEFORE (alpha\narchitecture term for globally visible ordering), but it does guarantee\nthat there can be no \"causal loop\".  I don't see how you could avoid\nsuch a loop if another cpu could see the stored value and then impact\nthe value of the first read.  Put another way: the read and the write\ncould not be seen as being out of order wrt other cpus.\n\nSo I do not see how these \"x_ctrl()\" functions can currently be necessary.\n\nI may have to eat my words at some point, but in the absense of clear\nproof that alpha actually needs this, or indeed even an explanation of\nhow alpha could _possibly_ need it, I do not believe these functions are\ncalled for.\n\nAnd if it turns out that alpha really _does_ need a barrier for this\ncase, that barrier still should not be \"smp_read_barrier_depends()\".\nWe'd have to make up some new speciality barrier just for alpha, along\nwith the documentation for why it really is necessary.\n\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: Paul E McKenney <paulmck@us.ibm.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Will Deacon <will.deacon@arm.com>\nCc: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> f2fs/crypto: fix xts_tweak initialization\n\nCommit 0b81d07790726 (\"fs crypto: move per-file encryption from f2fs\ntree to fs/crypto\") moved the f2fs crypto files to fs/crypto/ and\nrenamed the symbol prefixes from \"f2fs_\" to \"fscrypt_\" (and from \"F2FS_\"\nto just \"FS\" for preprocessor symbols).\n\nBecause of the symbol renaming, it's a bit hard to see it as a file\nmove: use\n\n    git show -M30 0b81d07790726\n\nto lower the rename detection to just 30% similarity and make git show\nthe files as renamed (the header file won't be shown as a rename even\nthen - since all it contains is symbol definitions, it looks almost\ncompletely different).\n\nEven with the renames showing as renames, the diffs are not all that\neasy to read, since so much is just the renames.  But Eric Biggers\nnoticed that it's not just all renames: the initialization of the\nxts_tweak had been broken too, using the inode number rather than the\npage offset.\n\nThat's not right - it makes the xfs_tweak the same for all pages of each\ninode.  It _might_ make sense to make the xfs_tweak contain both the\noffset _and_ the inode number, but not just the inode number.\n\nReported-by: Eric Biggers <ebiggers3@gmail.com>\nCc: Jaegeuk Kim <jaegeuk@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> module: fix missing module_mutex unlock\n\nCommit 1fb9341ac348 (\"module: put modules in list much earlier\") moved\nsome of the module initialization code around, and in the process\nchanged the exit paths too.  But for the duplicate export symbol error\ncase the change made the ddebug_cleanup path jump to after the module\nmutex unlock, even though it happens with the mutex held.\n\nRusty has some patches to split this function up into some helper\nfunctions, hopefully the mess of complex goto targets will go away\neventually.\n\nReported-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: Rusty Russell <rusty@rustcorp.com.au>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> kbuild: Fix module signature generation\n\nRusty had clearly not actually tested his module signing changes that I\n(trustingly) applied as commit e2a666d52b48 (\"kbuild: sign the modules\nat install time\"). That commit had multiple bugs:\n\n - using \"${#VARIABLE}\" to get the number of characters in a shell\n   variable may look clever, but it's locale-dependent: it returns the\n   number of *characters*, not bytes. And we do need bytes.\n\n   So don't use \"${#..}\" expansion, do the stupid \"wc -c\" thing instead\n   (where \"c\" stands for \"bytes\", not \"characters\", despite the letter.\n\n - Rusty had confused \"siglen\" and \"signerlen\", and his conversion\n   didn't set \"signerlen\" at all, and incorrectly set \"siglen\" to the\n   size of the signer, not the size of the signature.\n\nEnd result: the modified sign-file script did create something that\nsuperficially *looked* like a signature, but didn't actually work at\nall, and would fail the signature check. Oops.\n\nTssk, tssk, Rusty.\n\nBut Rusty was definitely right that this whole thing should be rewritten\nin perl by somebody who has the perl-fu to do so.  That is not me,\nthough - I'm just doing an emergency fix for the shell script.\n\nCc: Rusty Russell <rusty@rustcorp.com.au>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make wait_for_device_probe() also do scsi_complete_async_scans()\n\nCommit a7a20d103994 (\"sd: limit the scope of the async probe domain\")\nmake the SCSI device probing run device discovery in it's own async\ndomain.\n\nHowever, as a result, the partition detection was no longer synchronized\nby async_synchronize_full() (which, despite the name, only synchronizes\nthe global async space, not all of them).  Which in turn meant that\n\"wait_for_device_probe()\" would not wait for the SCSI partitions to be\nparsed.\n\nAnd \"wait_for_device_probe()\" was what the boot time init code relied on\nfor mounting the root filesystem.\n\nNow, most people never noticed this, because not only is it\ntiming-dependent, but modern distributions all use initrd.  So the root\nfilesystem isn't actually on a disk at all.  And then before they\nactually mount the final disk filesystem, they will have loaded the\nscsi-wait-scan module, which not only does the expected\nwait_for_device_probe(), but also does scsi_complete_async_scans().\n\n[ Side note: scsi_complete_async_scans() had also been partially broken,\n  but that was fixed in commit 43a8d39d0137 (\"fix async probe\n  regression\"), so that same commit a7a20d103994 had actually broken\n  setups even if you used scsi-wait-scan explicitly ]\n\nSolve this problem by just moving the scsi_complete_async_scans() call\ninto wait_for_device_probe().  Everybody who wants to wait for device\nprobing to finish really wants the SCSI probing to complete, so there's\nno reason not to do this.\n\nSo now \"wait_for_device_probe()\" really does what the name implies, and\nproperly waits for device probing to finish.  This also removes the now\nunnecessary extra calls to scsi_complete_async_scans().\n\nReported-and-tested-by: Artem S. Tashkinov <t.artem@mailcity.com>\nCc: Dan Williams <dan.j.williams@gmail.com>\nCc: Alan Stern <stern@rowland.harvard.edu>\nCc: James Bottomley <jbottomley@parallels.com>\nCc: Borislav Petkov <bp@amd64.org>\nCc: linux-scsi <linux-scsi@vger.kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> blk: avoid divide-by-zero with zero discard granularity\n\nCommit 8dd2cb7e880d (\"block: discard granularity might not be power of\n2\") changed a couple of 'binary and' operations into modulus operations.\nWhich turned the harmless case of a zero discard_granularity into a\npossible divide-by-zero.\n\nThe code also had a much more subtle bug: it was doing the modulus of a\nvalue in bytes using 'sector_t'.  That was always conceptually wrong,\nbut didn't actually matter back when the code assumed a power-of-two\ngranularity: we only looked at the low bits anyway.\n\nBut with potentially arbitrary sector numbers, using a 'sector_t' to\nexpress bytes is very very wrong: depending on configuration it limits\nthe starting offset of the device to just 32 bits, and any overflow\nwould result in a wrong value if the modulus wasn't a power-of-two.\n\nSo re-write the code to not only protect against the divide-by-zero, but\nto do the starting sector arithmetic in sectors, and using the proper\ntypes.\n\n[ For any mathematicians out there: it also looks monumentally stupid to\n  do the 'modulo granularity' operation *twice*, never mind having a \"+\n  granularity\" in the second modulus op.\n\n  But that's the easiest way to avoid negative values or overflow, and\n  it is how the original code was done. ]\n\nReported-by: Ingo Molnar <mingo@kernel.org>\nReported-by: Doug Anderson <dianders@chromium.org>\nCc: Neil Brown <neilb@suse.de>\nCc: Shaohua Li <shli@fusionio.com>\nAcked-by: Jens Axboe <axboe@kernel.dk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Revert \"block: add missing block_bio_complete() tracepoint\"\n\nThis reverts commit 3a366e614d0837d9fc23f78cdb1a1186ebc3387f.\n\nWanlong Gao reports that it causes a kernel panic on his machine several\nminutes after boot. Reverting it removes the panic.\n\nJens says:\n \"It's not quite clear why that is yet, so I think we should just revert\n  the commit for 3.9 final (which I'm assuming is pretty close).\n\n  The wifi is crap at the LSF hotel, so sending this email instead of\n  queueing up a revert and pull request.\"\n\nReported-by: Wanlong Gao <gaowanlong@cn.fujitsu.com>\nRequested-by: Jens Axboe <axboe@kernel.dk>\nCc: Tejun Heo <tj@kernel.org>\nCc: Steven Rostedt <rostedt@goodmis.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-next' of git://git.infradead.org/users/eparis/notify\n\nPull filesystem notification updates from Eric Paris:\n \"This pull mostly is about locking changes in the fsnotify system.  By\n  switching the group lock from a spin_lock() to a mutex() we can now\n  hold the lock across things like iput().  This fixes a problem\n  involving unmounting a fs and having inodes be busy, first pointed out\n  by FAT, but reproducible with tmpfs.\n\n  This also restores signal driven I/O for inotify, which has been\n  broken since about 2.6.32.\"\n\nUgh.  I *hate* the timing of this.  It was rebased after the merge\nwindow opened, and then left to sit with the pull request coming the day\nbefore the merge window closes.  That's just crap.  But apparently the\npatches themselves have been around for over a year, just gathering\ndust, so now it's suddenly critical.\n\nFixed up semantic conflict in fs/notify/fdinfo.c as per Stephen\nRothwell's fixes from -next.\n\n* 'for-next' of git://git.infradead.org/users/eparis/notify:\n  inotify: automatically restart syscalls\n  inotify: dont skip removal of watch descriptor if creation of ignored event failed\n  fanotify: dont merge permission events\n  fsnotify: make fasync generic for both inotify and fanotify\n  fsnotify: change locking order\n  fsnotify: dont put marks on temporary list when clearing marks by group\n  fsnotify: introduce locked versions of fsnotify_add_mark() and fsnotify_remove_mark()\n  fsnotify: pass group to fsnotify_destroy_mark()\n  fsnotify: use a mutex instead of a spinlock to protect a groups mark list\n  fanotify: add an extra flag to mark_remove_from_mask that indicates wheather a mark should be destroyed\n  fsnotify: take groups mark_lock before mark lock\n  fsnotify: use reference counting for groups\n  fsnotify: introduce fsnotify_get_group()\n  inotify, fanotify: replace fsnotify_put_group() with fsnotify_destroy_group() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs update from Al Viro:\n\n - big one - consolidation of descriptor-related logics; almost all of\n   that is moved to fs/file.c\n\n   (BTW, I'm seriously tempted to rename the result to fd.c.  As it is,\n   we have a situation when file_table.c is about handling of struct\n   file and file.c is about handling of descriptor tables; the reasons\n   are historical - file_table.c used to be about a static array of\n   struct file we used to have way back).\n\n   A lot of stray ends got cleaned up and converted to saner primitives,\n   disgusting mess in android/binder.c is still disgusting, but at least\n   doesn't poke so much in descriptor table guts anymore.  A bunch of\n   relatively minor races got fixed in process, plus an ext4 struct file\n   leak.\n\n - related thing - fget_light() partially unuglified; see fdget() in\n   there (and yes, it generates the code as good as we used to have).\n\n - also related - bits of Cyrill's procfs stuff that got entangled into\n   that work; _not_ all of it, just the initial move to fs/proc/fd.c and\n   switch of fdinfo to seq_file.\n\n - Alex's fs/coredump.c spiltoff - the same story, had been easier to\n   take that commit than mess with conflicts.  The rest is a separate\n   pile, this was just a mechanical code movement.\n\n - a few misc patches all over the place.  Not all for this cycle,\n   there'll be more (and quite a few currently sit in akpm's tree).\"\n\nFix up trivial conflicts in the android binder driver, and some fairly\nsimple conflicts due to two different changes to the sock_alloc_file()\ninterface (\"take descriptor handling from sock_alloc_file() to callers\"\nvs \"net: Providing protocol type via system.sockprotoname xattr of\n/proc/PID/fd entries\" adding a dentry name to the socket)\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs: (72 commits)\n  MAX_LFS_FILESIZE should be a loff_t\n  compat: fs: Generic compat_sys_sendfile implementation\n  fs: push rcu_barrier() from deactivate_locked_super() to filesystems\n  btrfs: reada_extent doesn't need kref for refcount\n  coredump: move core dump functionality into its own file\n  coredump: prevent double-free on an error path in core dumper\n  usb/gadget: fix misannotations\n  fcntl: fix misannotations\n  ceph: don't abuse d_delete() on failure exits\n  hypfs: ->d_parent is never NULL or negative\n  vfs: delete surplus inode NULL check\n  switch simple cases of fget_light to fdget\n  new helpers: fdget()/fdput()\n  switch o2hb_region_dev_write() to fget_light()\n  proc_map_files_readdir(): don't bother with grabbing files\n  make get_file() return its argument\n  vhost_set_vring(): turn pollstart/pollstop into bool\n  switch prctl_set_mm_exe_file() to fget_light()\n  switch xfs_find_handle() to fget_light()\n  switch xfs_swapext() to fget_light()\n  ... vfs: move inode stat information closer together\n\nThe comment above it says \"Stat data, not accessed from path walking\",\nbut in fact some of inode fields we use for the common stat data was way\ndown at the end of the inode, causing unnecessary cache misses for the\ncommon stat operations.\n\nThe inode structure is pretty big, and this can change padding depending\non field width, but at least on the common 64-bit configurations this\ndoesn't change the size.  Some of our inode layout has historically been\nto tro to avoid unnecessary padding fields, but cache locality is at\nleast as important for layout, if not more.\n\nNoticed by looking at kernel profiles, and noticing that the \"i_blkbits\"\naccess stood out like a sore thumb.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: allow O_PATH file descriptors for fstatfs()\n\ncommit 9d05746e7b16d8565dddbe3200faa1e669d23bbf upstream.\n\nOlga reported that file descriptors opened with O_PATH do not work with\nfstatfs(), found during further development of ksh93's thread support.\n\nThere is no reason to not allow O_PATH file descriptors here (fstatfs is\nvery much a path operation), so use \"fdget_raw()\".  See commit\n55815f70147d (\"vfs: make O_PATH file descriptors usable for 'fstat()'\")\nfor a very similar issue reported for fstat() by the same team.\n\nReported-and-tested-by: ольга крыжановская <olga.kryzhanovska@gmail.com>\nAcked-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> vfs: don't BUG_ON() if following a /proc fd pseudo-symlink results in a symlink\n\nIt's \"normal\" - it can happen if the file descriptor you followed was\nopened with O_NOFOLLOW.\n\nReported-by: Dave Jones <davej@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> VFS: don't do protected {sym,hard}links by default\n\nIn commit 800179c9b8a1 (\"This adds symlink and hardlink restrictions to\nthe Linux VFS\"), the new link protections were enabled by default, in\nthe hope that no actual application would care, despite it being\ntechnically against legacy UNIX (and documented POSIX) behavior.\n\nHowever, it does turn out to break some applications.  It's rare, and\nit's unfortunate, but it's unacceptable to break existing systems, so\nwe'll have to default to legacy behavior.\n\nIn particular, it has broken the way AFD distributes files, see\n\n  http://www.dwd.de/AFD/\n\nalong with some legacy scripts.\n\nDistributions can end up setting this at initrd time or in system\nscripts: if you have security problems due to link attacks during your\nearly boot sequence, you have bigger problems than some kernel sysctl\nsetting. Do:\n\n\techo 1 > /proc/sys/fs/protected_symlinks\n\techo 1 > /proc/sys/fs/protected_hardlinks\n\nto re-enable the link protections.\n\nAlternatively, we may at some point introduce a kernel config option\nthat sets these kinds of \"more secure but not traditional\" behavioural\noptions automatically.\n\nReported-by: Nick Bowler <nbowler@elliptictech.com>\nReported-by: Holger Kiehl <Holger.Kiehl@dwd.de>\nCc: Kees Cook <keescook@chromium.org>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Alan Cox <alan@lxorguk.ukuu.org.uk>\nCc: Theodore Ts'o <tytso@mit.edu>\nCc: stable@kernel.org # v3.6\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> VFS: clean up and simplify getname_flags()\n\nThis removes a number of silly games around strncpy_from_user() in\ndo_getname(), and removes that helper function entirely.  We instead\nmake getname_flags() just use strncpy_from_user() properly directly.\n\nRemoving the wrapper function simplifies things noticeably, mostly\nbecause we no longer play the unnecessary games with segments (x86\nstrncpy_from_user() no longer needs the hack), but also because the\nempty path handling is just much more obvious.  The return value of\n\"strncpy_to_user()\" is much more obvious than checking an odd error\nreturn case from do_getname().\n\n[ non-x86 architectures were notified of this change several weeks ago,\n  since it is possible that they have copied the old broken x86\n  strncpy_from_user. But nobody reacted, so .. See\n\n    http://www.spinics.net/lists/linux-arch/msg17313.html\n\n  for details ]\n\nCc: linux-arch@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: fix subtle use-after-free of pipe_inode_info\n\ncommit b0d8d2292160bb63de1972361ebed100c64b5b37 upstream.\n\nThe pipe code was trying (and failing) to be very careful about freeing\nthe pipe info only after the last access, with a pattern like:\n\n        spin_lock(&inode->i_lock);\n        if (!--pipe->files) {\n                inode->i_pipe = NULL;\n                kill = 1;\n        }\n        spin_unlock(&inode->i_lock);\n        __pipe_unlock(pipe);\n        if (kill)\n                free_pipe_info(pipe);\n\nwhere the final freeing is done last.\n\nHOWEVER.  The above is actually broken, because while the freeing is\ndone at the end, if we have two racing processes releasing the pipe\ninode info, the one that *doesn't* free it will decrement the ->files\ncount, and unlock the inode i_lock, but then still use the\n\"pipe_inode_info\" afterwards when it does the \"__pipe_unlock(pipe)\".\n\nThis is *very* hard to trigger in practice, since the race window is\nvery small, and adding debug options seems to just hide it by slowing\nthings down.\n\nSimon originally reported this way back in July as an Oops in\nkmem_cache_allocate due to a single bit corruption (due to the final\n\"spin_unlock(pipe->mutex.wait_lock)\" incrementing a field in a different\nallocation that had re-used the free'd pipe-info), it's taken this long\nto figure out.\n\nSince the 'pipe->files' accesses aren't even protected by the pipe lock\n(we very much use the inode lock for that), the simple solution is to\njust drop the pipe lock early.  And since there were two users of this\npattern, create a helper function for it.\n\nIntroduced commit ba5bb147330a (\"pipe: take allocation and freeing of\npipe_inode_info out of ->i_mutex\").\n\nCRs-Fixed: 678927\nChange-Id: I7e9ce7cebce7e600fb74228bca0e20dbc6cdc80c\nReported-by: Simon Kirby <sim@hostway.ca>\nReported-by: Ian Applegate <ia@cloudflare.com>\nAcked-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Matt Wagantall <mattw@codeaurora.org> direct-io: don't read inode->i_blkbits multiple times\n\nSince directio can work on a raw block device, and the block size of the\ndevice can change under it, we need to do the same thing that\nfs/buffer.c now does: read the block size a single time, using\nACCESS_ONCE().\n\nReading it multiple times can get different results, which will then\nconfuse the code because it actually encodes the i_blksize in\nrelationship to the underlying logical blocksize.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: add missing virtual cache flush after editing partial pages\n\nAndrew Morton pointed this out a month ago, and then I completely forgot\nabout it.\n\nIf we read a partial last page of a block device, we will zero out the\nend of the page, but since that page can then be mapped into user space,\nwe should also make sure to flush the cache on architectures that have\nvirtual caches.  We have the flush_dcache_page() function for this, so\nuse it.\n\nNow, in practice this really never matters, because nobody sane uses\nvirtual caches to begin with, and they largely exist on old broken RISC\narhitectures.\n\nAnd even if you did run on one of those obsolete CPU's, the whole \"mmap\nand access the last partial page of a block device\" behavior probably\ndoesn't actually exist.  The normal IO functions (read/write) will never\nsee the zeroed-out part of the page that migth not be coherent in the\ncache, because they honor the size of the device.\n\nSo I'm marking this for stable (3.7 only), but I'm not sure anybody will\never care.\n\nPointed-out-by: Andrew Morton <akpm@linux-foundation.org>\nCc: stable@vger.kernel.org  # 3.7\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: fix O_DIRECT read past end of block device\n\nThe direct-IO write path already had the i_size checks in mm/filemap.c,\nbut it turns out the read path did not, and removing the block size\nchecks in fs/block_dev.c (commit bbec0270bdd8: \"blkdev_max_block: make\nprivate to fs/buffer.c\") removed the magic \"shrink IO to past the end of\nthe device\" code there.\n\nFix it by truncating the IO to the size of the block device, like the\nwrite path already does.\n\nNOTE! I suspect the write path would be *much* better off doing it this\nway in fs/block_dev.c, rather than hidden deep in mm/filemap.c.  The\nmm/filemap.c code is extremely hard to follow, and has various\nconditionals on the target being a block device (ie the flag passed in\nto 'generic_write_checks()', along with a conditional update of the\ninode timestamp etc).\n\nIt is also quite possible that we should treat this whole block device\nsize as a \"s_maxbytes\" issue, and try to make the logic even more\ngeneric.  However, in the meantime this is the fairly minimal targeted\nfix.\n\nNoted by Milan Broz thanks to a regression test for the cryptsetup\nreencrypt tool.\n\nReported-and-tested-by: Milan Broz <mbroz@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> blkdev_max_block: make private to fs/buffer.c\n\nWe really don't want to look at the block size for the raw block device\naccesses in fs/block-dev.c, because it may be changing from under us.\nSo get rid of the max_block logic entirely, since the caller should\nalready have done it anyway.\n\nThat leaves the only user of this function in fs/buffer.c, so move the\nwhole function there and make it static.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> mm: don't pointlessly use BUG_ON() for sanity check\n\nBUG_ON() is a big hammer, and should be used _only_ if there is some\nmajor corruption that you cannot possibly recover from, making it\nimperative that the current process (and possibly the whole machine) be\nterminated with extreme prejudice.\n\nThe trivial sanity check in the vmacache code is *not* such a fatal\nerror.  Recovering from it is absolutely trivial, and using BUG_ON()\njust makes it harder to debug for no actual advantage.\n\nTo make matters worse, the placement of the BUG_ON() (only if the range\ncheck matched) actually makes it harder to hit the sanity check to begin\nwith, so _if_ there is a bug (and we just got a report from Srivatsa\nBhat that this can indeed trigger), it is harder to debug not just\nbecause the machine is possibly dead, but because we don't have better\ncoverage.\n\nBUG_ON() must *die*.  Maybe we should add a checkpatch warning for it,\nbecause it is simply just about the worst thing you can ever do if you\nhit some \"this cannot happen\" situation.\n\nReported-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>\nCc: Davidlohr Bueso <davidlohr@hp.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> Revert \"sched: Update_cfs_shares at period edge\"\n\nThis reverts commit f269ae0469fc882332bdfb5db15d3c1315fe2a10.\n\nIt turns out it causes a very noticeable interactivity regression with\nCONFIG_SCHED_AUTOGROUP (test-case: \"make -j32\" of the kernel in a\nterminal window, while scrolling in a browser - the autogrouping means\nthat the two end up in separate cgroups, and the browser should be\nsmooth as silk despite the high load).\n\nSays Paul Turner:\n \"It seems that the update-throttling on the wake-side is reducing the\n  interactive tasks' ability to preempt.  While I suspect the right\n  longer term answer here is force these updates only in the\n  cross-cgroup case; this is less trivial.  For this release I believe\n  the right answer is either going to be a revert or restore the updates\n  on the enqueue-side.\"\n\nReported-by: Linus Torvalds <torvalds@linux-foundation.org>\nBisected-by: Mike Galbraith <efault@gmx.de>\nAcked-by: Paul Turner <pjt@google.com>\nAcked-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: conditionally clear close-on-exec flag\n\nWe clear the close-on-exec flag when opening and closing files, and the\nbit was almost always already clear before.  Avoid dirtying the\ncacheline if the clearning isn't necessary.  That avoids unnecessary\ncacheline dirtying and bouncing in multi-socket environments.\n\nEric Dumazet has a file descriptor benchmark that goes 4% faster from\nthis on his two-socket machine.  It's probably partly superlinear\nimprovement due to getting slightly less spinlock contention on the\nfile_lock spinlock due to less work in the critical section.\n\nTested-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> vfs: Fix pathological performance case for __alloc_fd()\n\nAl Viro points out that:\n> >     * [Linux-specific aside] our __alloc_fd() can degrade quite badly\n> > with some use patterns.  The cacheline pingpong in the bitmap is probably\n> > inevitable, unless we accept considerably heavier memory footprint,\n> > but we also have a case when alloc_fd() takes O(n) and it's _not_ hard\n> > to trigger - close(3);open(...); will have the next open() after that\n> > scanning the entire in-use bitmap.\n\nAnd Eric Dumazet has a somewhat realistic multithreaded microbenchmark\nthat opens and closes a lot of sockets with minimal work per socket.\n\nThis patch largely fixes it.  We keep a 2nd-level bitmap of the open\nfile bitmaps, showing which words are already full.  So then we can\ntraverse that second-level bitmap to efficiently skip already allocated\nfile descriptors.\n\nOn his benchmark, this improves performance by up to an order of\nmagnitude, by avoiding the excessive open file bitmap scanning.\n\nTested-and-acked-by: Eric Dumazet <edumazet@google.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> mm: get rid of 'vmalloc_info' from /proc/meminfo\n\nIt turns out that at least some versions of glibc end up reading\n/proc/meminfo at every single startup, because glibc wants to know the\namount of memory the machine has.  And while that's arguably insane,\nit's just how things are.\n\nAnd it turns out that it's not all that expensive most of the time, but\nthe vmalloc information statistics (amount of virtual memory used in the\nvmalloc space, and the biggest remaining chunk) can be rather expensive\nto compute.\n\nThe 'get_vmalloc_info()' function actually showed up on my profiles as\n4% of the CPU usage of \"make test\" in the git source repository, because\nthe git tests are lots of very short-lived shell-scripts etc.\n\nIt turns out that apparently this same silly vmalloc info gathering\nshows up on the facebook servers too, according to Dave Jones.  So it's\nnot just \"make test\" for git.\n\nWe had two patches to just cache the information (one by me, one by\nIngo) to mitigate this issue, but the whole vmalloc information of of\nrather dubious value to begin with, and people who *actually* want to\nknow what the situation is wrt the vmalloc area should just look at the\nmuch more complete /proc/vmallocinfo instead.\n\nIn fact, according to my testing - and perhaps more importantly,\naccording to that big search engine in the sky: Google - there is\nnothing out there that actually cares about those two expensive fields:\nVmallocUsed and VmallocChunk.\n\nSo let's try to just remove them entirely.  Actually, this just removes\nthe computation and reports the numbers as zero for now, just to try to\nbe minimally intrusive.\n\nIf this breaks anything, we'll obviously have to re-introduce the code\nto compute this all and add the caching patches on top.  But if given\nthe option, I'd really prefer to just remove this bad idea entirely\nrather than add even more code to work around our historical mistake\nthat likely nobody really cares about.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> Initialize msg/shm IPC objects before doing ipc_addid()\n\n(cherry pick from commit b9a532277938798b53178d5a66af6e2915cb27cf)\n\nAs reported by Dmitry Vyukov, we really shouldn't do ipc_addid() before\nhaving initialized the IPC object state.  Yes, we initialize the IPC\nobject in a locked state, but with all the lockless RCU lookup work,\nthat IPC object lock no longer means that the state cannot be seen.\n\nWe already did this for the IPC semaphore code (see commit e8577d1f0329:\n\"ipc/sem.c: fully initialize sem_array before making it visible\") but we\nclearly forgot about msg and shm.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: Manfred Spraul <manfred@colorfullife.com>\nCc: Davidlohr Bueso <dbueso@suse.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Mark Salyzyn <salyzyn@google.com>\nBug: 24551430\nChange-Id: Ic7b980a6f2a79eb3c04fc43b6531c396645af1db ipc: simplify rcu_read_lock() in semctl_nolock()\n\nThis trivially combines two rcu_read_lock() calls in both sides of a\nif-statement into one single one in front of the if-statement.\n\nSplit out as an independent cleanup from the previous commit.\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: simplify semtimedop/semctl_main() common error path handling\n\nWith various straight RCU lock/unlock movements, one common exit path\npattern had become\n\n\trcu_read_unlock();\n\tgoto out_wakeup;\n\nand in fact there were no cases where we wanted to exit to out_wakeup\n_without_ releasing the RCU read lock.\n\nSo replace that pattern with \"goto out_rcu_wakeup\", and remove the old\nout_wakeup.\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: move sem_obtain_lock() rcu locking into the only caller\n\nsem_obtain_lock() was another of those functions that returned with the\nRCU lock held for reading in the success case.  Move the RCU locking to\nthe caller (semtimedop()), making it more obvious.  We already did RCU\nlocking elsewhere in that function.\n\nSide note: why does semtimedop() re-do the semphore lookup after the\nsleep, rather than just getting a reference to the semaphore it already\nlooked up originally?\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: fix double sem unlock in semctl error path\n\nFix another ipc locking buglet introduced by the scalability patches:\nwhen semctl_down() was changed to delay the semaphore locking, one error\npath for security_sem_semctl() went through the semaphore unlock logic\neven though the semaphore had never been locked.\n\nIntroduced by commit 16df3674efe3 (\"ipc,sem: do not hold ipc lock more\nthan necessary\")\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: move the rcu_read_lock() from sem_lock_and_putref() into callers\n\nThis is another ipc semaphore locking cleanup, trying to make the\nlocking more straightforward.  We move the rcu read locking into the\ncallers of sem_lock_and_putref(), which in general means that we now\nmostly do the rcu_read_lock() and rcu_read_unlock() in the same\nfunction.\n\nMostly.  We still have the ipc_addid/newary/freeary mess, and things\nlike ipcctl_pre_down_nolock().\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: sem_putref() does not need the semaphore lock any more\n\nipc_rcu_putref() uses atomics for the refcount, and the games to lock\nand unlock the semaphore just to try to keep the reference counting\nworking are no longer useful.\n\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> ipc: move rcu_read_unlock() out of sem_unlock() and into callers\n\nThe IPC locking is a mess, and sem_unlock() unlocks not only the\nsemaphore spinlock, it also drops the rcu read lock.  Unlike sem_lock(),\nwhich just gets the spin-lock, and expects the caller to get the rcu\nread lock.\n\nThis all makes things very hard to follow, and it's very confusing when\nyou take the rcu read lock in one function, and then release it in\nanother.  And it has caused actual bugs: the sem_obtain_lock() function\nended up dropping the RCU read lock twice in one error path, because it\nfirst did the sem_unlock(), and then did a rcu_read_unlock() to match\nthe rcu_read_lock() it had done.\n\nThis is just a totally mindless \"remove rcu_read_unlock() from\nsem_unlock() and add it immediately after each caller\" (except for the\naforementioned bug where we did too many rcu_read_unlock(), and in\nfind_alloc_undo() where we just got the rcu_read_lock() to correct for\nthe fact that sem_unlock would immediately drop it again).\n\nWe can (and should) clean things up further, but this fixes the bug with\nthe minimal amount of subtlety.\n\nReviewed-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix TLB gather virtual address range invalidation corner cases\n\ncommit 2b047252d087be7f2ba088b4933cd904f92e6fce upstream.\n\nBen Tebulin reported:\n\n \"Since v3.7.2 on two independent machines a very specific Git\n  repository fails in 9/10 cases on git-fsck due to an SHA1/memory\n  failures.  This only occurs on a very specific repository and can be\n  reproduced stably on two independent laptops.  Git mailing list ran\n  out of ideas and for me this looks like some very exotic kernel issue\"\n\nand bisected the failure to the backport of commit 53a59fc67f97 (\"mm:\nlimit mmu_gather batching to fix soft lockups on !CONFIG_PREEMPT\").\n\nThat commit itself is not actually buggy, but what it does is to make it\nmuch more likely to hit the partial TLB invalidation case, since it\nintroduces a new case in tlb_next_batch() that previously only ever\nhappened when running out of memory.\n\nThe real bug is that the TLB gather virtual memory range setup is subtly\nbuggered.  It was introduced in commit 597e1c3580b7 (\"mm/mmu_gather:\nenable tlb flush range in generic mmu_gather\"), and the range handling\nwas already fixed at least once in commit e6c495a96ce0 (\"mm: fix the TLB\nrange flushed when __tlb_remove_page() runs out of slots\"), but that fix\nwas not complete.\n\nThe problem with the TLB gather virtual address range is that it isn't\nset up by the initial tlb_gather_mmu() initialization (which didn't get\nthe TLB range information), but it is set up ad-hoc later by the\nfunctions that actually flush the TLB.  And so any such case that forgot\nto update the TLB range entries would potentially miss TLB invalidates.\n\nRather than try to figure out exactly which particular ad-hoc range\nsetup was missing (I personally suspect it's the hugetlb case in\nzap_huge_pmd(), which didn't have the same logic as zap_pte_range()\ndid), this patch just gets rid of the problem at the source: make the\nTLB range information available to tlb_gather_mmu(), and initialize it\nwhen initializing all the other tlb gather fields.\n\nThis makes the patch larger, but conceptually much simpler.  And the end\nresult is much more understandable; even if you want to play games with\npartial ranges when invalidating the TLB contents in chunks, now the\nrange information is always there, and anybody who doesn't want to\nbother with it won't introduce subtle bugs.\n\nBen verified that this fixes his problem.\n\nReported-bisected-and-tested-by: Ben Tebulin <tebulin@googlemail.com>\nBuild-testing-by: Stephen Rothwell <sfr@canb.auug.org.au>\nBuild-testing-by: Richard Weinberger <richard.weinberger@gmail.com>\nReviewed-by: Michal Hocko <mhocko@suse.cz>\nAcked-by: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Revert \"slub: do not put a slab to cpu partial list when cpu_partial is 0\"\n\nThis reverts commit 318df36e57c0ca9f2146660d41ff28e8650af423.\n\nThis commit caused Steven Rostedt's hackbench runs to run out of memory\ndue to a leak.  As noted by Joonsoo Kim, it is buggy in the following\nscenario:\n\n \"I guess, you may set 0 to all kmem caches's cpu_partial via sysfs,\n  doesn't it?\n\n  In this case, memory leak is possible in following case.  Code flow of\n  possible leak is follwing case.\n\n   * in __slab_free()\n   1. (!new.inuse || !prior) && !was_frozen\n   2. !kmem_cache_debug && !prior\n   3. new.frozen = 1\n   4. after cmpxchg_double_slab, run the (!n) case with new.frozen=1\n   5. with this patch, put_cpu_partial() doesn't do anything,\n      because this cache's cpu_partial is 0\n   6. return\n\n  In step 5, leak occur\"\n\nAnd Steven does indeed have cpu_partial set to 0 due to RT testing.\n\nJoonsoo is cooking up a patch, but everybody agrees that reverting this\nfor now is the right thing to do.\n\nReported-and-bisected-by: Steven Rostedt <rostedt@goodmis.org>\nAcked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nAcked-by: Pekka Enberg <penberg@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> remap_file_pages: correctly handle the case of a NULL vm_ops pointer\n\nIn commit 0b173bc4daa8 (\"mm: kill vma flag VM_CAN_NONLINEAR\") we\nreplaced the VM_CAN_NONLINEAR test with checking whether the mapping has\na '->remap_pages()' vm operation, but there is no guarantee that there\nit even has a vm_ops pointer at all.\n\nAdd the appropriate test for NULL vm_ops.\n\nReported-by: Sasha Levin <levinsasha928@gmail.com>\nCc: Konstantin Khlebnikov <khlebnikov@openvz.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> mm: remove node_start_pfn checking in new WARN_ON for now\n\nBorislav Petkov reports that the new warning added in commit\n88fdf75d1bb5 (\"mm: warn if pg_data_t isn't initialized with zero\")\ntriggers for him, and it is the node_start_pfn field that has already\nbeen initialized once.\n\nThe call trace looks like this:\n\n  x86_64_start_kernel ->\n    x86_64_start_reservations ->\n    start_kernel ->\n    setup_arch ->\n    paging_init ->\n    zone_sizes_init ->\n    free_area_init_nodes ->\n    free_area_init_node\n\nand (with the warning replaced by debug output), Borislav sees\n\n  On node 0 totalpages: 4193848\n    DMA zone: 64 pages used for memmap\n    DMA zone: 6 pages reserved\n    DMA zone: 3890 pages, LIFO batch:0\n    DMA32 zone: 16320 pages used for memmap\n    DMA32 zone: 798464 pages, LIFO batch:31\n    Normal zone: 52736 pages used for memmap\n    Normal zone: 3322368 pages, LIFO batch:31\n  free_area_init_node: pgdat->node_start_pfn: 4423680      <----\n  On node 1 totalpages: 4194304\n    Normal zone: 65536 pages used for memmap\n    Normal zone: 4128768 pages, LIFO batch:31\n  free_area_init_node: pgdat->node_start_pfn: 8617984      <----\n  On node 2 totalpages: 4194304\n    Normal zone: 65536 pages used for memmap\n    Normal zone: 4128768 pages, LIFO batch:31\n  free_area_init_node: pgdat->node_start_pfn: 12812288     <----\n  On node 3 totalpages: 4194304\n    Normal zone: 65536 pages used for memmap\n    Normal zone: 4128768 pages, LIFO batch:31\n\nso remove the bogus warning for now to avoid annoying people.  Minchan\nKim is looking at it.\n\nReported-by: Borislav Petkov <bp@amd64.org>\nCc: Minchan Kim <minchan@kernel.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't trigger congestion wait on dirty-but-not-writeout pages\n\nshrink_inactive_list() used to wait 0.1s to avoid congestion when all\nthe pages that were isolated from the inactive list were dirty but not\nunder active writeback.  That makes no real sense, and apparently causes\nmajor interactivity issues under some loads since 3.11.\n\nThe ostensible reason for it was to wait for kswapd to start writing\npages, but that seems questionable as well, since the congestion wait\ncode seems to trigger for kswapd itself as well.  Also, the logic behind\ndelaying anything when we haven't actually started writeback is not\nclear - it only delays actually starting that writeback.\n\nWe'll still trigger the congestion waiting if\n\n (a) the process is kswapd, and we hit pages flagged for immediate\n     reclaim\n\n (b) the process is not kswapd, and the zone backing dev writeback is\n     actually congested.\n\nThis probably needs to be revisited, but as it is this fixes a reported\nregression.\n\nReported-by: Felipe Contreras <felipe.contreras@gmail.com>\nPinpointed-by: Hillf Danton <dhillf@gmail.com>\nCc: Michal Hocko <mhocko@suse.cz>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Mel Gorman <mgorman@suse.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Vinayak Menon <vinmenon@codeaurora.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> vm: remove 'nr_accounted' calculations from the unmap_vmas() interfaces\n\nThe VM accounting makes no sense at this level, and half of the callers\ndidn't ever actually use the end result.  The only time we want to\nunaccount the memory is when we actually remove the vma, so do the\naccounting at that point instead.\n\nThis simplifies the interfaces (no need to pass down that silly page\ncounter to functions that really don't care), and also makes it much\nmore obvious what is actually going on: we do vm_[un]acct_memory() when\nadding or removing the vma, not on random page walking.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vm: simplify unmap_vmas() calling convention\n\nNone of the callers want to pass in 'zap_details', and it doesn't even\nmake sense for the case of actually unmapping vma's.  So remove the\nargument, and clean up the interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> kernel: make READ_ONCE() valid on const arguments\n\nThe use of READ_ONCE() causes lots of warnings witht he pending paravirt\nspinlock fixes, because those ends up having passing a member to a\n'const' structure to READ_ONCE().\n\nThere should certainly be nothing wrong with using READ_ONCE() with a\nconst source, but the helper function __read_once_size() would cause\nwarnings because it would drop the 'const' qualifier, but also because\nthe destination would be marked 'const' too due to the use of 'typeof'.\n\nUse a union of types in READ_ONCE() to avoid this issue.\n\nAlso make sure to use parenthesis around the macro arguments to avoid\npossible operator precedence issues.\n\nTested-by: Ingo Molnar <mingo@kernel.org>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix blocking allocations called very early during bootup\n\nDuring early boot, when the scheduler hasn't really been fully set up,\nwe really can't do blocking allocations because with certain (dubious)\nconfigurations the \"might_resched()\" calls can actually result in\nscheduling events.\n\nWe could just make such users always use GFP_ATOMIC, but quite often the\ncode that does the allocation isn't really aware of the fact that the\nscheduler isn't up yet, and forcing that kind of random knowledge on the\ninitialization code is just annoying and not good for anybody.\n\nAnd we actually have a the 'gfp_allowed_mask' exactly for this reason:\nit's just that the kernel init sequence happens to set it to allow\nblocking allocations much too early.\n\nSo move the 'gfp_allowed_mask' initialization from 'start_kernel()'\n(which is some of the earliest init code, and runs with preemption\ndisabled for good reasons) into 'kernel_init()'.  kernel_init() is run\nin the newly created thread that will become the 'init' process, as\nopposed to the early startup code that runs within the context of what\nwill be the first idle thread.\n\nSo by the time we reach 'kernel_init()', we know that the scheduler must\nbe at least limping along, because we've already scheduled from the idle\nthread into the init thread.\n\nReported-by: Steven Rostedt <rostedt@goodmis.org>\nCc: David Rientjes <rientjes@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> debugfs: fix u32_array race in format_array_alloc\n\nThe format_array_alloc() function is fundamentally racy, in that it\nprints the array twice: once to figure out how much space to allocate\nfor the buffer, and the second time to actually print out the data.\n\nIf any of the array contents changes in between, the allocation size may\nbe wrong, and the end result may be truncated in odd ways.\n\nJust don't do it.  Allocate a maximum-sized array up-front, and just\nformat the array contents once.  The only user of the u32_array\ninterfaces is the Xen spinlock statistics code, and it has 31 entries in\nthe arrays, so the maximum size really isn't that big, and the end\nresult is much simpler code without the bug.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: make it possible to access the dentry hash/len as one 64-bit entry\n\nThis allows comparing hash and len in one operation on 64-bit\narchitectures.  Right now only __d_lookup_rcu() takes advantage of this,\nsince that is the case we care most about.\n\nThe use of anonymous struct/unions hides the alternate 64-bit approach\nfrom most users, the exception being a few cases where we initialize a\n'struct qstr' with a static initializer.  This makes the problematic\ncases use a new QSTR_INIT() helper function for that (but initializing\njust the name pointer with a \"{ .name = xyzzy }\" initializer remains\nvalid, as does just copying another qstr structure).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: be even more careful about dentry RCU name lookups\n\nMiklos Szeredi points out that we need to also worry about memory\nodering when doing the dentry name comparison asynchronously with RCU.\n\nIn particular, doing a rename can do a memcpy() of one dentry name over\nanother, and we want to make sure that any unlocked reader will always\nsee the proper terminating NUL character, so that it won't ever run off\nthe allocation.\n\nRather than having to be extra careful with the name copy or at lookup\ntime for each character, this resolves the issue by making sure that all\nnames that are inlined in the dentry always have a NUL character at the\nend of the name allocation.  If we do that at dentry allocation time, we\nknow that no future name copy will ever change that final NUL to\nanything else, so there are no memory ordering issues.\n\nSo even if a concurrent rename ends up overwriting the NUL character\nthat terminates the original name, we always know that there is one\nfinal NUL at the end, and there is no worry about the lockless RCU\nlookup traversing the name too far.\n\nThe out-of-line allocations are never copied over, so we can just make\nsure that we write the name (with terminating NULL) and do a write\nbarrier before we expose the name to anything else by setting it in the\ndentry.\n\nReported-by: Miklos Szeredi <mszeredi@suse.cz>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Nick Piggin <npiggin@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: move dentry name length comparison from dentry_cmp() into callers\n\nAll callers do want to check the dentry length, but some of them can\ncheck the length and the hash together, so doing it in dentry_cmp() can\nbe counter-productive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: do the careful dentry name access for all dentry_cmp cases\n\nCommit 12f8ad4b0533 (\"vfs: clean up __d_lookup_rcu() and dentry_cmp()\ninterfaces\") did the careful ACCESS_ONCE() of the dentry name only for\nthe word-at-a-time case, even though the issue is generic.\n\nAdmittedly I don't really see gcc ever reloading the value in the middle\nof the loop, so the ACCESS_ONCE() protects us from a fairly theoretical\nissue. But better safe than sorry.\n\nAlso, this consolidates the common parts of the word-at-a-time and\nbytewise logic, which includes checking the length.  We'll be changing\nthat later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: clean up __d_lookup_rcu() and dentry_cmp() interfaces\n\nThe calling conventions for __d_lookup_rcu() and dentry_cmp() are\nannoying in different ways, and there is actually one single underlying\nreason for both of the annoyances.\n\nThe fundamental reason is that we do the returned dentry sequence number\ncheck inside __d_lookup_rcu() instead of doing it in the caller.  This\nresults in two annoyances:\n\n - __d_lookup_rcu() now not only needs to return the dentry and the\n   sequence number that goes along with the lookup, it also needs to\n   return the inode pointer that was validated by that sequence number\n   check.\n\n - and because we did the sequence number check early (to validate the\n   name pointer and length) we also couldn't just pass the dentry itself\n   to dentry_cmp(), we had to pass the counted string that contained the\n   name.\n\nSo that sequence number decision caused two separate ugly calling\nconventions.\n\nBoth of these problems would be solved if we just did the sequence\nnumber check in the caller instead.  There's only one caller, and that\ncaller already has to do the sequence number check for the parent\nanyway, so just do that.\n\nThat allows us to stop returning the dentry->d_inode in that in-out\nargument (pointer-to-pointer-to-inode), so we can make the inode\nargument just a regular input inode pointer.  The caller can just load\nthe inode from dentry->d_inode, and then do the sequence number check\nafter that to make sure that it's synchronized with the name we looked\nup.\n\nAnd it allows us to just pass in the dentry to dentry_cmp(), which is\nwhat all the callers really wanted.  Sure, dentry_cmp() has to be a bit\ncareful about the dentry (which is not stable during RCU lookup), but\nthat's actually very simple.\n\nAnd now that dentry_cmp() can clearly see that the first string argument\nis a dentry, we can use the direct word access for that, instead of the\ncareful unaligned zero-padding.  The dentry name is always properly\naligned, since it is a single path component that is either embedded\ninto the dentry itself, or was allocated with kmalloc() (see __d_alloc).\n\nFinally, this also uninlines the nasty slow-case for dentry comparisons:\nthat one *does* need to do a sequence number check, since it will call\nin to the low-level filesystems, and we want to give those a stable\ninode pointer and path component length/start arguments.  Doing an extra\nsequence check for that slow case is not a problem, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: avoid \"attempt to access beyond end of device\" warnings\n\nThe block device access simplification that avoided accessing the (racy)\nblock size information (commit bbec0270bdd8: \"blkdev_max_block: make\nprivate to fs/buffer.c\") no longer checks the maximum block size in the\nblock mapping path.\n\nThat was _almost_ as simple as just removing the code entirely, because\nthe readers and writers all check the size of the device anyway, so\nunder normal circumstances it \"just worked\".\n\nHowever, the block size may be such that the end of the device may\nstraddle one single buffer_head.  At which point we may still want to\naccess the end of the device, but the buffer we use to access it\npartially extends past the end.\n\nThe 'bd_set_size()' function intentionally sets the block size to avoid\nthis, but mounting the device - or setting the block size by hand to\nsome other value - can modify that block size.\n\nSo instead, teach 'submit_bh()' about the special case of the buffer\nhead straddling the end of the device, and turning such an access into a\nsmaller IO access, avoiding the problem.\n\nThis, btw, also means that unlike before, we can now access the whole\ndevice regardless of device block size setting.  So now, even if the\ndevice size is only 512-byte aligned, we can read and write even the\nlast sector even when having a much bigger block size for accessing the\nrest of the device.\n\nSo with this, we could now get rid of the 'bd_set_size()' block size\ncode entirely - resulting in faster IO for the common case - but that\nwould be a separate patch.\n\nReported-and-tested-by: Romain Francoise <romain@orebokech.com>\nReporeted-and-tested-by: Meelis Roos <mroos@linux.ee>\nReported-by: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> fs/buffer.c: make block-size be per-page and protected by the page lock\n\nThis makes the buffer size handling be a per-page thing, which allows us\nto not have to worry about locking too much when changing the buffer\nsize.  If a page doesn't have buffers, we still need to read the block\nsize from the inode, but we can do that with ACCESS_ONCE(), so that even\nif the size is changing, we get a consistent value.\n\nThis doesn't convert all functions - many of the buffer functions are\nused purely by filesystems, which in turn results in the buffer size\nbeing fixed at mount-time.  So they don't have the same consistency\nissues that the raw device access can have.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: make AIO use the proper rw_verify_area() area helpers\n\nWe had for some reason overlooked the AIO interface, and it didn't use\nthe proper rw_verify_area() helper function that checks (for example)\nmandatory locking on the file, and that the size of the access doesn't\ncause us to overflow the provided offset limits etc.\n\nInstead, AIO did just the security_file_permission() thing (that\nrw_verify_area() also does) directly.\n\nThis fixes it to do all the proper helper functions, which not only\nmeans that now mandatory file locking works with AIO too, we can\nactually remove lines of code.\n\nReported-by: Manish Honap <manish_honap_vit@yahoo.co.in>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: fix bad hashing of dentries\n\nJosef Bacik found a performance regression between 3.2 and 3.10 and\nnarrowed it down to commit bfcfaa77bdf0 (\"vfs: use 'unsigned long'\naccesses for dcache name comparison and hashing\"). He reports:\n\n \"The test case is essentially\n\n      for (i = 0; i < 1000000; i++)\n              mkdir(\"a$i\");\n\n  On xfs on a fio card this goes at about 20k dir/sec with 3.2, and 12k\n  dir/sec with 3.10.  This is because we spend waaaaay more time in\n  __d_lookup on 3.10 than in 3.2.\n\n  The new hashing function for strings is suboptimal for <\n  sizeof(unsigned long) string names (and hell even > sizeof(unsigned\n  long) string names that I've tested).  I broke out the old hashing\n  function and the new one into a userspace helper to get real numbers\n  and this is what I'm getting:\n\n      Old hash table had 1000000 entries, 0 dupes, 0 max dupes\n      New hash table had 12628 entries, 987372 dupes, 900 max dupes\n      We had 11400 buckets with a p50 of 30 dupes, p90 of 240 dupes, p99 of 567 dupes for the new hash\n\n  My test does the hash, and then does the d_hash into a integer pointer\n  array the same size as the dentry hash table on my system, and then\n  just increments the value at the address we got to see how many\n  entries we overlap with.\n\n  As you can see the old hash function ended up with all 1 million\n  entries in their own bucket, whereas the new one they are only\n  distributed among ~12.5k buckets, which is why we're using so much\n  more CPU in __d_lookup\".\n\nThe reason for this hash regression is two-fold:\n\n - On 64-bit architectures the down-mixing of the original 64-bit\n   word-at-a-time hash into the final 32-bit hash value is very\n   simplistic and suboptimal, and just adds the two 32-bit parts\n   together.\n\n   In particular, because there is no bit shuffling and the mixing\n   boundary is also a byte boundary, similar character patterns in the\n   low and high word easily end up just canceling each other out.\n\n - the old byte-at-a-time hash mixed each byte into the final hash as it\n   hashed the path component name, resulting in the low bits of the hash\n   generally being a good source of hash data.  That is not true for the\n   word-at-a-time case, and the hash data is distributed among all the\n   bits.\n\nThe fix is the same in both cases: do a better job of mixing the bits up\nand using as much of the hash data as possible.  We already have the\n\"hash_32|64()\" functions to do that.\n\nReported-by: Josef Bacik <jbacik@fb.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Christoph Hellwig <hch@infradead.org>\nCc: Chris Mason <clm@fb.com>\nCc: linux-fsdevel@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> vfs: make O_PATH file descriptors usable for 'fstat()'\n\nWe already use them for openat() and friends, but fstat() also wants to\nbe able to use O_PATH file descriptors.  This should make it more\ndirectly comparable to the O_SEARCH of Solaris.\n\nNote that you could already do the same thing with \"fstatat()\" and an\nempty path, but just doing \"fstat()\" directly is simpler and faster, so\nthere is no reason not to just allow it directly.\n\nSee also commit 332a2e1244bd, which did the same thing for fchdir, for\nthe same reasons.\n\nReported-by: ольга крыжановская <olga.kryzhanovska@gmail.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: stable@kernel.org    # O_PATH introduced in 3.0+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: don't force a big memset of stat data just to clear padding fields\n\nAdmittedly this is something that the compiler should be able to just do\nfor us, but gcc just isn't that smart.  And trying to use a structure\ninitializer (which would get us the right semantics) ends up resulting\nin gcc allocating stack space for _two_ 'struct stat', and then copying\none into the other.\n\nSo do it by hand - just have a per-architecture macro that initializes\nthe padding fields.  And if the architecture doesn't provide one, fall\nback to the old behavior of just doing the whole memset() first.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> vfs: de-crapify \"cp_new_stat()\" function\n\nIt's an unreadable mess of 32-bit vs 64-bit #ifdef's that mostly follow\na rather simple pattern.\n\nMake a helper #define to handle that pattern, in the process making the\ncode both shorter and more readable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> lib: add generic strnlen_user() function\n\nThis adds a new generic optimized strnlen_user() function that uses the\n<asm/word-at-a-time.h> infrastructure to portably do efficient string\nhandling.\n\nIn many ways, strnlen is much simpler than strncpy, and in particular we\ncan always pre-align the words we load from memory.  That means that all\nthe worries about alignment etc are a non-issue, so this one can easily\nbe used on any architecture.  You obviously do have to do the\nappropriate word-at-a-time.h macros.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n\nSigned-off-by: Paul Reioux <reioux@gmail.com> futex: move user address verification up to common code\n\nWhen debugging the read-only hugepage case, I was confused by the fact\nthat get_futex_key() did an access_ok() only for the non-shared futex\ncase, since the user address checking really isn't in any way specific\nto the private key handling.\n\nNow, it turns out that the shared key handling does effectively do the\nequivalent checks inside get_user_pages_fast() (it doesn't actually\ncheck the address range on x86, but does check the page protections for\nbeing a user page).  So it wasn't actually a bug, but the fact that we\ntreat the address differently for private and shared futexes threw me\nfor a loop.\n\nJust move the check up, so that it gets done for both cases.  Also, use\nthe 'rw' parameter for the type, even if it doesn't actually matter any\nmore (it's a historical artifact of the old racy i386 \"page faults from\nkernel space don't check write protections\").\n\nCc: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> futex: avoid race between requeue and wake\n\nJan Stancek reported:\n \"pthread_cond_broadcast/4-1.c testcase from openposix testsuite (LTP)\n  occasionally fails, because some threads fail to wake up.\n\n  Testcase creates 5 threads, which are all waiting on same condition.\n  Main thread then calls pthread_cond_broadcast() without holding mutex,\n  which calls:\n\n      futex(uaddr1, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, uaddr2, ..)\n\n  This immediately wakes up single thread A, which unlocks mutex and\n  tries to wake up another thread:\n\n      futex(uaddr2, FUTEX_WAKE_PRIVATE, 1)\n\n  If thread A manages to call futex_wake() before any waiters are\n  requeued for uaddr2, no other thread is woken up\"\n\nThe ordering constraints for the hash bucket waiter counting are that\nthe waiter counts have to be incremented _before_ getting the spinlock\n(because the spinlock acts as part of the memory barrier), but the\n\"requeue\" operation didn't honor those rules, and nobody had even\nthought about that case.\n\nThis fairly simple patch just increments the waiter count for the target\nhash bucket (hb2) when requeing a futex before taking the locks.  It\nthen decrements them again after releasing the lock - the code that\nactually moves the futex(es) between hash buckets will do the additional\nrequired waiter count housekeeping.\n\nReported-and-tested-by: Jan Stancek <jstancek@redhat.com>\nAcked-by: Davidlohr Bueso <davidlohr@hp.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@vger.kernel.org # 3.14\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> futex: revert back to the explicit waiter counting code\n\nSrikar Dronamraju reports that commit b0c29f79ecea (\"futexes: Avoid\ntaking the hb->lock if there's nothing to wake up\") causes java threads\ngetting stuck on futexes when runing specjbb on a power7 numa box.\n\nThe cause appears to be that the powerpc spinlocks aren't using the same\nticket lock model that we use on x86 (and other) architectures, which in\nturn result in the \"spin_is_locked()\" test in hb_waiters_pending()\noccasionally reporting an unlocked spinlock even when there are pending\nwaiters.\n\nSo this reinstates Davidlohr Bueso's original explicit waiter counting\ncode, which I had convinced Davidlohr to drop in favor of figuring out\nthe pending waiters by just using the existing state of the spinlock and\nthe wait queue.\n\nReported-and-tested-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>\nOriginal-code-by: Davidlohr Bueso <davidlohr@hp.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Pranav Vashi <neobuddy89@gmail.com> Merge tag 'dt-fixes-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull device tree fixes from Rob Herring:\n - fix microblaze compiling due to conflicting merge window changes\n - a fix in of_attach_node due to of_find_node_by_path changes\n - prevent format strings in DT kobject names\n\n* tag 'dt-fixes-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  OF: fix of_find_node_by_path() assumption that of_allnodes is root\n  of: avoid format string parsing in kobject names\n  of/platform: Fix microblaze build failure Merge tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random\n\nPull randomness bugfix from Ted Ts'o:\n \"random: fix entropy accounting bug introduced in v3.15\"\n\n* tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random:\n  random: fix nasty entropy accounting bug Merge tag 'regulator-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"A few small fixes:\n\n   - Fixes for bugs in Palmas and as3722 exposed by recent changes in\n     the core - the drivers weren't allowing the current configuration\n     to be read sometimes.\n   - Provide a stub for regulator_can_change_voltage() for !REGULATOR.\n   - Make sure ltc3589 only looks at its child nodes in the device tree\n     rather than searching the whole tree\"\n\n* tag 'regulator-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: ltc3589: Use of_get_child_by_name\n  regulator: palmas: Fix SMPS list for 0V\n  regulator: add regulator_can_change_voltage stub\n  regulator: as3722: Make 0 a valid selector Merge tag 'spi-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fix from Mark Brown:\n \"A single bugfix from the merge window, fixing an issue with DMA at\n  slow speeds on Intel hardware\"\n\n* tag 'spi-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi/pxa2xx: change default supported DMA burst size to 1 Linux 3.16-rc1 Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix checksumming regressions, from Tom Herbert.\n\n 2) Undo unintentional permissions changes for SCTP rto_alpha and\n    rto_beta sysfs knobs, from Denial Borkmann.\n\n 3) VXLAN, like other IP tunnels, should advertize it's encapsulation\n    size using dev->needed_headroom instead of dev->hard_header_len.\n    From Cong Wang.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net:\n  net: sctp: fix permissions for rto_alpha and rto_beta knobs\n  vxlan: Checksum fixes\n  net: add skb_pop_rcv_encapsulation\n  udp: call __skb_checksum_complete when doing full checksum\n  net: Fix save software checksum complete\n  net: Fix GSO constants to match NETIF flags\n  udp: ipv4: do not waste time in __udp4_lib_mcast_demux_lookup\n  vxlan: use dev->needed_headroom instead of dev->hard_header_len\n  MAINTAINERS: update cxgb4 maintainer Merge tag 'clk-for-linus-3.16-part2' of git://git.linaro.org/people/mike.turquette/linux\n\nPull more clock framework updates from Mike Turquette:\n \"This contains the second half the of the clk changes for 3.16.\n\n  They are simply fixes and code refactoring for the OMAP clock drivers.\n  The sunxi clock driver changes include splitting out the one\n  mega-driver into several smaller pieces and adding support for the A31\n  SoC clocks\"\n\n* tag 'clk-for-linus-3.16-part2' of git://git.linaro.org/people/mike.turquette/linux: (25 commits)\n  clk: sunxi: document PRCM clock compatible strings\n  clk: sunxi: add PRCM (Power/Reset/Clock Management) clks support\n  clk: sun6i: Protect SDRAM gating bit\n  clk: sun6i: Protect CPU clock\n  clk: sunxi: Rework clock protection code\n  clk: sunxi: Move the GMAC clock to a file of its own\n  clk: sunxi: Move the 24M oscillator to a file of its own\n  clk: sunxi: Remove calls to clk_put\n  clk: sunxi: document new A31 USB clock compatible\n  clk: sunxi: Implement A31 USB clock\n  ARM: dts: OMAP5/DRA7: use omap5-mpu-dpll-clock capable of dealing with higher frequencies\n  CLK: TI: dpll: support OMAP5 MPU DPLL that need special handling for higher frequencies\n  ARM: OMAP5+: dpll: support Duty Cycle Correction(DCC)\n  CLK: TI: clk-54xx: Set the rate for dpll_abe_m2x2_ck\n  CLK: TI: Driver for DRA7 ATL (Audio Tracking Logic)\n  dt:/bindings: DRA7 ATL (Audio Tracking Logic) clock bindings\n  ARM: dts: dra7xx-clocks: Correct name for atl clkin3 clock\n  CLK: TI: gate: add composite interface clock to OMAP2 only build\n  ARM: OMAP2: clock: add DT boot support for cpufreq_ck\n  CLK: TI: OMAP2: add clock init support\n  ... Merge git://git.infradead.org/users/willy/linux-nvme\n\nPull NVMe update from Matthew Wilcox:\n \"Mostly bugfixes again for the NVMe driver.  I'd like to call out the\n  exported tracepoint in the block layer; I believe Keith has cleared\n  this with Jens.\n\n  We've had a few reports from people who're really pounding on NVMe\n  devices at scale, hence the timeout changes (and new module\n  parameters), hotplug cpu deadlock, tracepoints, and minor performance\n  tweaks\"\n\n[ Jens hadn't seen that tracepoint thing, but is ok with it - it will\n  end up going away when mq conversion happens ]\n\n* git://git.infradead.org/users/willy/linux-nvme: (22 commits)\n  NVMe: Fix START_STOP_UNIT Scsi->NVMe translation.\n  NVMe: Use Log Page constants in SCSI emulation\n  NVMe: Define Log Page constants\n  NVMe: Fix hot cpu notification dead lock\n  NVMe: Rename io_timeout to nvme_io_timeout\n  NVMe: Use last bytes of f/w rev SCSI Inquiry\n  NVMe: Adhere to request queue block accounting enable/disable\n  NVMe: Fix nvme get/put queue semantics\n  NVMe: Delete NVME_GET_FEAT_TEMP_THRESH\n  NVMe: Make admin timeout a module parameter\n  NVMe: Make iod bio timeout a parameter\n  NVMe: Prevent possible NULL pointer dereference\n  NVMe: Fix the buffer size passed in GetLogPage(CDW10.NUMD)\n  NVMe: Update data structures for NVMe 1.2\n  NVMe: Enable BUILD_BUG_ON checks\n  NVMe: Update namespace and controller identify structures to the 1.1a spec\n  NVMe: Flush with data support\n  NVMe: Configure support for block flush\n  NVMe: Add tracepoints\n  NVMe: Protect against badly formatted CQEs\n  ... Merge tag 'scsi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull more SCSI updates from James Bottomley:\n \"This is just a couple of drivers (hpsa and lpfc) that got left out for\n  further testing in linux-next.  We also have one fix to a prior\n  submission (qla2xxx sparse)\"\n\n* tag 'scsi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (36 commits)\n  qla2xxx: fix sparse warnings introduced by previous target mode t10-dif patch\n  lpfc: Update lpfc version to driver version 10.2.8001.0\n  lpfc: Fix ExpressLane priority setup\n  lpfc: mark old devices as obsolete\n  lpfc: Fix for initializing RRQ bitmap\n  lpfc: Fix for cleaning up stale ring flag and sp_queue_event entries\n  lpfc: Update lpfc version to driver version 10.2.8000.0\n  lpfc: Update Copyright on changed files from 8.3.45 patches\n  lpfc: Update Copyright on changed files\n  lpfc: Fixed locking for scsi task management commands\n  lpfc: Convert runtime references to old xlane cfg param to fof cfg param\n  lpfc: Fix FW dump using sysfs\n  lpfc: Fix SLI4 s abort loop to process all FCP rings and under ring_lock\n  lpfc: Fixed kernel panic in lpfc_abort_handler\n  lpfc: Fix locking for postbufq when freeing\n  lpfc: Fix locking for lpfc_hba_down_post\n  lpfc: Fix dynamic transitions of FirstBurst from on to off\n  hpsa: fix handling of hpsa_volume_offline return value\n  hpsa: return -ENOMEM not -1 on kzalloc failure in hpsa_get_device_id\n  hpsa: remove messages about volume status VPD inquiry page not supported\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull more btrfs updates from Chris Mason:\n \"This has a few fixes since our last pull and a new ioctl for doing\n  btree searches from userland.  It's very similar to the existing\n  ioctl, but lets us return larger items back down to the app\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  btrfs: fix error handling in create_pending_snapshot\n  btrfs: fix use of uninit \"ret\" in end_extent_writepage()\n  btrfs: free ulist in qgroup_shared_accounting() error path\n  Btrfs: fix qgroups sanity test crash or hang\n  btrfs: prevent RCU warning when dereferencing radix tree slot\n  Btrfs: fix unfinished readahead thread for raid5/6 degraded mounting\n  btrfs: new ioctl TREE_SEARCH_V2\n  btrfs: tree_search, search_ioctl: direct copy to userspace\n  btrfs: new function read_extent_buffer_to_user\n  btrfs: tree_search, copy_to_sk: return needed size on EOVERFLOW\n  btrfs: tree_search, copy_to_sk: return EOVERFLOW for too small buffer\n  btrfs: tree_search, search_ioctl: accept varying buffer\n  btrfs: tree_search: eliminate redundant nr_items check Merge git://git.kvack.org/~bcrl/aio-next\n\nPull aio fix and cleanups from Ben LaHaise:\n \"This consists of a couple of code cleanups plus a minor bug fix\"\n\n* git://git.kvack.org/~bcrl/aio-next:\n  aio: cleanup: flatten kill_ioctx()\n  aio: report error from io_destroy() when threads race in io_destroy()\n  fs/aio.c: Remove ctx parameter in kiocb_cancel Merge tag 'hsi-for-3.16-fixes1' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-hsi\n\nPull HSI build fixes from Sebastian Reichel:\n - tighten dependency between ssi-protocol and omap-ssi to fix build\n   failures with randconfig.\n - use normal module refcounting in omap driver to fix build with\n   disabled module support\n\n* tag 'hsi-for-3.16-fixes1' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-hsi:\n  hsi: omap_ssi_port: use normal module refcounting\n  HSI: fix omap ssi driver dependency Merge tag 'gpio-v3.16-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fix from Linus Walleij:\n \"A first GPIO fix for the v3.16 series, this was serious since it\n  blocks the OMAP boot.\n\n  Sending you this vital fix before leaving for a short vacation so it\n  does not sit collecting dust in my tree for no good reason.\n\n  Apart from this, our v3.16 cycle looks like a good start\"\n\n* tag 'gpio-v3.16-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: of: Fix handling for deferred probe for -gpio suffix Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 vdso fixes from Peter Anvin:\n \"Fixes for x86/vdso.\n\n  One is a simple build fix for bigendian hosts, one is to make \"make\n  vdso_install\" work again, and the rest is about working around a bug\n  in Google's Go language -- two are documentation patches that improves\n  the sample code that the Go coders took, modified, and broke; the\n  other two implements a workaround that keeps existing Go binaries from\n  segfaulting at least\"\n\n* 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/vdso: Fix vdso_install\n  x86/vdso: Hack to keep 64-bit Go programs working\n  x86/vdso: Add PUT_LE to store little-endian values\n  x86/vdso/doc: Make vDSO examples more portable\n  x86/vdso/doc: Rename vdso_test.c to vdso_standalone_test_x86.c\n  x86, vdso: Remove one final use of htole16() Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon updates from Guenter Roeck:\n - new driver for Sensirion SHTC1 humidity / temperature sensor\n - convert ltc4151 and vexpress drivers to use devm functions\n - drop generic chip detection from lm85 driver\n - avoid forward declarations in atxp1 driver\n - fix sign extensions in ina2xx driver\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: vexpress: Use devm helper for hwmon device registration\n  hwmon: (atxp1) Avoid forward declaration\n  hwmon: add support for Sensirion SHTC1 sensor\n  hwmon: (ltc4151) Convert to devm_hwmon_device_register_with_groups\n  hwmon: (lm85) Drop generic detection\n  hwmon: (ina2xx) Cast to s16 on shunt and current regs Merge tag 'sound-fix-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Most of changes are small and easy cleanup or fixes:\n\n   - a few HD-audio Realtek codec fixes and quirks\n   - Intel HDMI audio fixes for Broadwell and Haswell / ValleyView\n   - FireWire sound stack cleanups\n   - a couple of sequencer core fixes\n   - compress ABI fix for 64bit\n   - conversion to modern ktime*() API\"\n\n* tag 'sound-fix-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (23 commits)\n  ALSA: hda/realtek - Add more entry for enable HP mute led\n  ALSA: hda - Add quirk for external mic on Lifebook U904\n  ALSA: hda - fix a fixup value for codec alc293 in the pin_quirk table\n  ALSA: intel8x0: Use ktime and ktime_get()\n  ALSA: core: Use ktime_get_ts()\n  ALSA: hda - verify pin:converter connection on unsol event for HSW and VLV\n  ALSA: compress: Cancel the optimization of compiler and fix the size of struct for all platform.\n  ALSA: hda - Add quirk for ABit AA8XE\n  Revert \"ALSA: hda - mask buggy stream DMA0 for Broadwell display controller\"\n  ALSA: hda - using POS_FIX_LPIB on Broadwell HDMI Audio\n  ALSA: hda/realtek - Add support of ALC667 codec\n  ALSA: hda/realtek - Add more codec rename\n  ALSA: hda/realtek - New vendor ID for ALC233\n  ALSA: hda - add two new pin tables\n  ALSA: hda/realtek - Add support of ALC891 codec\n  ALSA: seq: Continue broadcasting events to ports if one of them fails\n  ALSA: bebob: Remove unused function prototype\n  ALSA: fireworks: Remove meaningless mutex_destroy()\n  ALSA: fireworks: Remove a constant over width to which it's applied\n  ALSA: fireworks: Improve comments about Fireworks transaction\n  ... Merge tag 'dlm-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm\n\nPull dlm fix from David Teigland:\n \"This contains one small fix related to resending SCTP messages\"\n\n* tag 'dlm-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm:\n  dlm: keep listening connection alive with sctp mode Merge branch 'serge-next-2' of git://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux-security\n\nPull more security layer updates from Serge Hallyn:\n \"A few more commits had previously failed to make it through\n  security-next into linux-next but this week made it into linux-next.\n  At least commit \"ima: introduce ima_kernel_read()\" was deemed critical\n  by Mimi to make this merge window.\n\n  This is a temporary tree just for this request.  Mimi has pointed me\n  to some previous threads about keeping maintainer trees at the\n  previous release, which I'll certainly do for anything long-term,\n  after talking with James\"\n\n* 'serge-next-2' of git://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux-security:\n  ima: introduce ima_kernel_read()\n  evm: prohibit userspace writing 'security.evm' HMAC value\n  ima: check inode integrity cache in violation check\n  ima: prevent unnecessary policy checking\n  evm: provide option to protect additional SMACK xattrs\n  evm: replace HMAC version with attribute mask\n  ima: prevent new digsig xattr from being replaced Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull Ceph updates from Sage Weil:\n \"This has a mix of bug fixes and cleanups.\n\n  Alex's patch fixes a rare race in RBD.  Ilya's patches fix an ENOENT\n  check when a second rbd image is mapped and a couple memory leaks.\n  Zheng fixes several issues with fragmented directories and multiple\n  MDSs.  Josh fixes a spin/sleep issue, and Josh and Guangliang's\n  patches fix setting and unsetting RBD images read-only.\n\n  Naturally there are several other cleanups mixed in for good measure\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client: (23 commits)\n  rbd: only set disk to read-only once\n  rbd: move calls that may sleep out of spin lock range\n  rbd: add ioctl for rbd\n  ceph: use truncate_pagecache() instead of truncate_inode_pages()\n  ceph: include time stamp in every MDS request\n  rbd: fix ida/idr memory leak\n  rbd: use reference counts for image requests\n  rbd: fix osd_request memory leak in __rbd_dev_header_watch_sync()\n  rbd: make sure we have latest osdmap on 'rbd map'\n  libceph: add ceph_monc_wait_osdmap()\n  libceph: mon_get_version request infrastructure\n  libceph: recognize poolop requests in debugfs\n  ceph: refactor readpage_nounlock() to make the logic clearer\n  mds: check cap ID when handling cap export message\n  ceph: remember subtree root dirfrag's auth MDS\n  ceph: introduce ceph_fill_fragtree()\n  ceph: handle cap import atomically\n  ceph: pre-allocate ceph_cap struct for ceph_add_cap()\n  ceph: update inode fields according to issued caps\n  rbd: replace IS_ERR and PTR_ERR with PTR_ERR_OR_ZERO\n  ... Merge branch 'topic/omap3isp' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull OMAP3 updates from Mauro Carvalho Chehab:\n \"Some driver improvements on OMAP3.  This series depend on some iommu\n  patches already merged\"\n\n* 'topic/omap3isp' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (26 commits)\n  [media] omap3isp: Rename isp_buffer isp_addr field to dma\n  [media] omap3isp: Move to videobuf2\n  [media] v4l: vb2: Add a function to discard all DONE buffers\n  [media] omap3isp: Cancel all queued buffers when stopping the video stream\n  [media] omap3isp: Move buffer irqlist to isp_buffer structure\n  [media] omap3isp: Move queue irqlock to isp_video structure\n  [media] omap3isp: Move queue mutex to isp_video structure\n  [media] omap3isp: queue: Don't build scatterlist for kernel buffer\n  [media] omap3isp: Use the ARM DMA IOMMU-aware operations\n  [media] omap3isp: queue: Use sg_alloc_table_from_pages()\n  [media] omap3isp: queue: Map PFNMAP buffers to device\n  [media] omap3isp: queue: Fix the dma_map_sg() return value check\n  [media] omap3isp: queue: Allocate kernel buffers with dma_alloc_coherent\n  [media] omap3isp: queue: Inline the ispmmu_v(un)map functions\n  [media] omap3isp: queue: Merge the prepare and sglist functions\n  [media] omap3isp: queue: Use sg_table structure\n  [media] omap3isp: queue: Move IOMMU handling code to the queue\n  [media] omap3isp: video: Set the buffer bytesused field at completion time\n  [media] omap3isp: ccdc: Use the DMA API for FPC\n  [media] omap3isp: ccdc: Use the DMA API for LSC\n  ... Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target updates from Nicholas Bellinger:\n \"The highlights this round include:\n\n   - Add support for T10 PI pass-through between vhost-scsi +\n     virtio-scsi (MST + Paolo + MKP + nab)\n   - Add support for T10 PI in qla2xxx target mode (Quinn + MKP + hch +\n     nab, merged through scsi.git)\n   - Add support for percpu-ida pre-allocation in qla2xxx target code\n     (Quinn + nab)\n   - A number of iser-target fixes related to hardening the network\n     portal shutdown path (Sagi + Slava)\n   - Fix response length residual handling for a number of control CDBs\n     (Roland + Christophe V.)\n   - Various iscsi RFC conformance fixes in the CHAP authentication path\n     (Tejas and Calsoft folks + nab)\n   - Return TASK_SET_FULL status for tcm_fc(FCoE) DataIn + Response\n     failures (Vasu + Jun + nab)\n   - Fix long-standing ABORT_TASK + session reset hang (nab)\n   - Convert iser-initiator + iser-target to include T10 bytes into EDTL\n     (Sagi + Or + MKP + Mike Christie)\n   - Fix NULL pointer dereference regression related to XCOPY introduced\n     in v3.15 + CC'ed to v3.12.y (nab)\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (34 commits)\n  target: Fix NULL pointer dereference for XCOPY in target_put_sess_cmd\n  vhost-scsi: Include prot_bytes into expected data transfer length\n  TARGET/sbc,loopback: Adjust command data length in case pi exists on the wire\n  libiscsi, iser: Adjust data_length to include protection information\n  scsi_cmnd: Introduce scsi_transfer_length helper\n  target: Report correct response length for some commands\n  target/sbc: Check that the LBA and number of blocks are correct in VERIFY\n  target/sbc: Remove sbc_check_valid_sectors()\n  Target/iscsi: Fix sendtargets response pdu for iser transport\n  Target/iser: Fix a wrong dereference in case discovery session is over iser\n  iscsi-target: Fix ABORT_TASK + connection reset iscsi_queue_req memory leak\n  target: Use complete_all for se_cmd->t_transport_stop_comp\n  target: Set CMD_T_ACTIVE bit for Task Management Requests\n  target: cleanup some boolean tests\n  target/spc: Simplify INQUIRY EVPD=0x80\n  tcm_fc: Generate TASK_SET_FULL status for response failures\n  tcm_fc: Generate TASK_SET_FULL status for DataIN failures\n  iscsi-target: Reject mutual authentication with reflected CHAP_C\n  iscsi-target: Remove no-op from iscsit_tpg_del_portal_group\n  iscsi-target: Fix CHAP_A parameter list handling\n  ... Merge branch 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild\n\nPull kbuild misc updates from Michal Marek:\n \"This is the non-critical part of kbuild for v3.16-rc1:\n   - make deb-pkg can do s390x and arm64\n   - new patterns in scripts/tags.sh\n   - scripts/tags.sh skips userspace tools' sources (which sometimes\n     have copies of kernel structures) and symlinks\n   - improvements to the objdiff tool\n   - two new coccinelle patches\n   - other minor fixes\"\n\n* 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:\n  scripts: objdiff: support directories for the augument of record command\n  scripts: objdiff: fix a comment\n  scripts: objdiff: change the extension of disassembly from .o to .dis\n  scripts: objdiff: improve path flexibility for record command\n  scripts: objdiff: remove unnecessary code\n  scripts: objdiff: direct error messages to stderr\n  scripts: objdiff: get the path to .tmp_objdiff more simply\n  deb-pkg: Add automatic support for s390x architecture\n  coccicheck: Add unneeded return variable test\n  kbuild: Fix a typo in documentation\n  kbuild: trivial - use tabs for code indent where possible\n  kbuild: trivial - remove trailing empty lines\n  coccinelle: Check for missing NULL terminators in of_device_id tables\n  scripts/tags.sh: ignore symlink'ed source files\n  scripts/tags.sh: add regular expression replacement pattern for memcg\n  builddeb: add arm64 in the supported architectures\n  builddeb: use $OBJCOPY variable instead of objcopy\n  scripts/tags.sh: ignore code of user space tools\n  scripts/tags.sh: add pattern for DEFINE_HASHTABLE\n  .gitignore: ignore Module.symvers in all directories Merge branch 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild\n\nPull kbuild updates from Michal Marek:\n \"Kbuild changes for v3.16-rc1:\n\n   - cross-compilation fix so that cc-option is testing the right\n     compiler\n   - Fix for make defconfig all\n   - Using relative paths to the object and source directory where\n     possible, plus fixes for the fallout of the change\n   - several cleanups in the Makefiles and scripts\n\n  The powerpc fix is from today, because it was only discovered\n  recently.  The rest has been in linux-next for some time\"\n\n* 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:\n  powerpc: Avoid circular dependency with zImage.%\n  kbuild: create include/config directory in scripts/kconfig/Makefile\n  kbuild: do not create include/linux directory\n  Makefile: Fix unrecognized cross-compiler command line options\n  kbuild: do not add \"selinux\" to subdir- twice\n  um: Fix for relative objtree when generating x86 headers\n  kbuild: Use relative path when building in a subdir of the source tree\n  kbuild: Use relative path when building in the source tree\n  kbuild: Use relative path for $(objtree)\n  firmware: Use $(quote) in the Makefile\n  firmware: Simplify directory creation\n  kbuild: trivial - fix comment block indent\n  kbuild: trivial - remove trailing spaces\n  kbuild: support simultaneous \"make %config\" and \"make all\"\n  kbuild: move extra gcc checks to scripts/Makefile.extrawarn Merge tag 'trace-3.16-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing cleanups and bugfixes from Steven Rostedt:\n \"One bug fix that goes back to 3.10.  Accessing a non existent buffer\n  if \"possible cpus\" is greater than actual CPUs (including offline\n  CPUs).\n\n  Namhyung Kim did some reviews of the patches I sent this merge window\n  and found a memory leak and had a few clean ups\"\n\n* tag 'trace-3.16-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix check of ftrace_trace_arrays list_empty() check\n  tracing: Fix leak of per cpu max data in instances\n  tracing: Cleanup saved_cmdlines_size changes\n  ring-buffer: Check if buffer exists before polling Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull more powerpc updates from Ben Herrenschmidt:\n \"Here are the remaining bits I was mentioning earlier.  Mostly bug\n  fixes and new selftests from Michael (yay !).  He also removed the WSP\n  platform and A2 core support which were dead before release, so less\n  clutter.\n\n  One little \"feature\" I snuck in is the doorbell IPI support for\n  non-virtualized P8 which speeds up IPIs significantly between threads\n  of a core\"\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (34 commits)\n  powerpc/book3s: Fix some ABIv2 issues in machine check code\n  powerpc/book3s: Fix guest MC delivery mechanism to avoid soft lockups in guest.\n  powerpc/book3s: Increment the mce counter during machine_check_early call.\n  powerpc/book3s: Add stack overflow check in machine check handler.\n  powerpc/book3s: Fix machine check handling for unhandled errors\n  powerpc/eeh: Dump PE location code\n  powerpc/powernv: Enable POWER8 doorbell IPIs\n  powerpc/cpuidle: Only clear LPCR decrementer wakeup bit on fast sleep entry\n  powerpc/powernv: Fix killed EEH event\n  powerpc: fix typo 'CONFIG_PMAC'\n  powerpc: fix typo 'CONFIG_PPC_CPU'\n  powerpc/powernv: Don't escalate non-existing frozen PE\n  powerpc/eeh: Report frozen parent PE prior to child PE\n  powerpc/eeh: Clear frozen state for child PE\n  powerpc/powernv: Reduce panic timeout from 180s to 10s\n  powerpc/xmon: avoid format string leaking to printk\n  selftests/powerpc: Add tests of PMU EBBs\n  selftests/powerpc: Add support for skipping tests\n  selftests/powerpc: Put the test in a separate process group\n  selftests/powerpc: Fix instruction loop for ABIv2 (LE)\n  ... Merge tag 'blackfin-for-linus' of http://git.kernel.org/pub/scm/linux/kernel/git/realmz6/blackfin-linux\n\nPull blackfin updates from Steven Miao.\n\n* tag 'blackfin-for-linus' of http://git.kernel.org/pub/scm/linux/kernel/git/realmz6/blackfin-linux:\n  blackfin: defconfigs: add MTD_SPI_NOR (new dependency for M25P80)\n  Revert \"blackfin: dma: current count mmr is read only\"\n  bf533: fix build error: add linux/gpio.h Merge branch 'x86-irq-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 irq fixes from Ingo Molnar:\n \"Two changes: a cpu-hotplug/irq race fix, plus a HyperV related fix\"\n\n* 'x86-irq-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/irq: Fix fixup_irqs() error handling\n  x86, irq, pic: Probe for legacy PIC and set legacy_pic appropriately Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull more scheduler updates from Ingo Molnar:\n \"Second round of scheduler changes:\n   - try-to-wakeup and IPI reduction speedups, from Andy Lutomirski\n   - continued power scheduling cleanups and refactorings, from Nicolas\n     Pitre\n   - misc fixes and enhancements\"\n\n* 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/deadline: Delete extraneous extern for to_ratio()\n  sched/idle: Optimize try-to-wake-up IPI\n  sched/idle: Simplify wake_up_idle_cpu()\n  sched/idle: Clear polling before descheduling the idle thread\n  sched, trace: Add a tracepoint for IPI-less remote wakeups\n  cpuidle: Set polling in poll_idle\n  sched: Remove redundant assignment to \"rt_rq\" in update_curr_rt(...)\n  sched: Rename capacity related flags\n  sched: Final power vs. capacity cleanups\n  sched: Remove remaining dubious usage of \"power\"\n  sched: Let 'struct sched_group_power' care about CPU capacity\n  sched/fair: Disambiguate existing/remaining \"capacity\" usage\n  sched/fair: Change \"has_capacity\" to \"has_free_capacity\"\n  sched/fair: Remove \"power\" from 'struct numa_stats'\n  sched: Fix signedness bug in yield_to()\n  sched/fair: Use time_after() in record_wakee()\n  sched/balancing: Reduce the rate of needless idle load balancing\n  sched/fair: Fix unlocked reads of some cfs_b->quota/period Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull more perf updates from Ingo Molnar:\n \"A second round of perf updates:\n\n   - wide reaching kprobes sanitization and robustization, with the hope\n     of fixing all 'probe this function crashes the kernel' bugs, by\n     Masami Hiramatsu.\n\n   - uprobes updates from Oleg Nesterov: tmpfs support, corner case\n     fixes and robustization work.\n\n   - perf tooling updates and fixes from Jiri Olsa, Namhyung Ki, Arnaldo\n     et al:\n        * Add support to accumulate hist periods (Namhyung Kim)\n        * various fixes, refactorings and enhancements\"\n\n* 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (101 commits)\n  perf: Differentiate exec() and non-exec() comm events\n  perf: Fix perf_event_comm() vs. exec() assumption\n  uprobes/x86: Rename arch_uprobe->def to ->defparam, minor comment updates\n  perf/documentation: Add description for conditional branch filter\n  perf/x86: Add conditional branch filtering support\n  perf/tool: Add conditional branch filter 'cond' to perf record\n  perf: Add new conditional branch filter 'PERF_SAMPLE_BRANCH_COND'\n  uprobes: Teach copy_insn() to support tmpfs\n  uprobes: Shift ->readpage check from __copy_insn() to uprobe_register()\n  perf/x86: Use common PMU interrupt disabled code\n  perf/ARM: Use common PMU interrupt disabled code\n  perf: Disable sampled events if no PMU interrupt\n  perf: Fix use after free in perf_remove_from_context()\n  perf tools: Fix 'make help' message error\n  perf record: Fix poll return value propagation\n  perf tools: Move elide bool into perf_hpp_fmt struct\n  perf tools: Remove elide setup for SORT_MODE__MEMORY mode\n  perf tools: Fix \"==\" into \"=\" in ui_browser__warning assignment\n  perf tools: Allow overriding sysfs and proc finding with env var\n  perf tools: Consider header files outside perf directory in tags target\n  ... Merge branch 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull more locking changes from Ingo Molnar:\n \"This is the second round of locking tree updates for v3.16, offering\n  large system scalability improvements:\n\n - optimistic spinning for rwsems, from Davidlohr Bueso.\n\n - 'qrwlocks' core code and x86 enablement, from Waiman Long and PeterZ\"\n\n* 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, locking/rwlocks: Enable qrwlocks on x86\n  locking/rwlocks: Introduce 'qrwlocks' - fair, queued rwlocks\n  locking/mutexes: Documentation update/rewrite\n  locking/rwsem: Fix checkpatch.pl warnings\n  locking/rwsem: Fix warnings for CONFIG_RWSEM_GENERIC_SPINLOCK\n  locking/rwsem: Support optimistic spinning Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next\n\nPull networking updates from David Miller:\n\n 1) Seccomp BPF filters can now be JIT'd, from Alexei Starovoitov.\n\n 2) Multiqueue support in xen-netback and xen-netfront, from Andrew J\n    Benniston.\n\n 3) Allow tweaking of aggregation settings in cdc_ncm driver, from Bjørn\n    Mork.\n\n 4) BPF now has a \"random\" opcode, from Chema Gonzalez.\n\n 5) Add more BPF documentation and improve test framework, from Daniel\n    Borkmann.\n\n 6) Support TCP fastopen over ipv6, from Daniel Lee.\n\n 7) Add software TSO helper functions and use them to support software\n    TSO in mvneta and mv643xx_eth drivers.  From Ezequiel Garcia.\n\n 8) Support software TSO in fec driver too, from Nimrod Andy.\n\n 9) Add Broadcom SYSTEMPORT driver, from Florian Fainelli.\n\n10) Handle broadcasts more gracefully over macvlan when there are large\n    numbers of interfaces configured, from Herbert Xu.\n\n11) Allow more control over fwmark used for non-socket based responses,\n    from Lorenzo Colitti.\n\n12) Do TCP congestion window limiting based upon measurements, from Neal\n    Cardwell.\n\n13) Support busy polling in SCTP, from Neal Horman.\n\n14) Allow RSS key to be configured via ethtool, from Venkata Duvvuru.\n\n15) Bridge promisc mode handling improvements from Vlad Yasevich.\n\n16) Don't use inetpeer entries to implement ID generation any more, it\n    performs poorly, from Eric Dumazet.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next: (1522 commits)\n  rtnetlink: fix userspace API breakage for iproute2 < v3.9.0\n  tcp: fixing TLP's FIN recovery\n  net: fec: Add software TSO support\n  net: fec: Add Scatter/gather support\n  net: fec: Increase buffer descriptor entry number\n  net: fec: Factorize feature setting\n  net: fec: Enable IP header hardware checksum\n  net: fec: Factorize the .xmit transmit function\n  bridge: fix compile error when compiling without IPv6 support\n  bridge: fix smatch warning / potential null pointer dereference\n  via-rhine: fix full-duplex with autoneg disable\n  bnx2x: Enlarge the dorq threshold for VFs\n  bnx2x: Check for UNDI in uncommon branch\n  bnx2x: Fix 1G-baseT link\n  bnx2x: Fix link for KR with swapped polarity lane\n  sctp: Fix sk_ack_backlog wrap-around problem\n  net/core: Add VF link state control policy\n  net/fsl: xgmac_mdio is dependent on OF_MDIO\n  net/fsl: Make xgmac_mdio read error message useful\n  net_sched: drr: warn when qdisc is not work conserving\n  ... Merge tag 'dm-3.16-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper updates from Mike Snitzer:\n \"This pull request is later than I'd have liked because I was waiting\n  for some performance data to help finally justify sending the\n  long-standing dm-crypt cpu scalability improvements upstream.\n\n  Unfortunately we came up short, so those dm-crypt changes will\n  continue to wait, but it seems we're not far off.\n\n   . Add dm_accept_partial_bio interface to DM core to allow DM targets\n     to only process a portion of a bio, the remainder being sent in the\n     next bio.  This enables the old dm snapshot-origin target to only\n     split write bios on chunk boundaries, read bios are now sent to the\n     origin device unchanged.\n\n   . Add DM core support for disabling WRITE SAME if the underlying SCSI\n     layer disables it due to command failure.\n\n   . Reduce lock contention in DM's bio-prison.\n\n   . A few small cleanups and fixes to dm-thin and dm-era\"\n\n* tag 'dm-3.16-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm thin: update discard_granularity to reflect the thin-pool blocksize\n  dm bio prison: implement per bucket locking in the dm_bio_prison hash table\n  dm: remove symbol export for dm_set_device_limits\n  dm: disable WRITE SAME if it fails\n  dm era: check for a non-NULL metadata object before closing it\n  dm thin: return ENOSPC instead of EIO when error_if_no_space enabled\n  dm thin: cleanup noflush_work to use a proper completion\n  dm snapshot: do not split read bios sent to snapshot-origin target\n  dm snapshot: allocate a per-target structure for snapshot-origin target\n  dm: introduce dm_accept_partial_bio\n  dm: change sector_count member in clone_info from sector_t to unsigned Merge tag 'pci-v3.16-changes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull more PCI updates from Bjorn Helgaas:\n \"Here are some more things I'd like to see in v3.16-rc1:\n\n   - DMA alias iterator, part of some work to fix IOMMU issues\n   - MVEBU, Tegra, DesignWare changes that I forgot to include before\n   - Some whitespace code cleanup\n\n  Details:\n\n  IOMMU\n    - Add DMA alias iterator (Alex Williamson)\n    - Add DMA alias quirks for ASMedia, ITE, Tundra bridges (Alex Williamson)\n    - Add DMA alias quirks for Marvell, Ricoh devices (Alex Williamson)\n    - Add DMA alias quirk for HighPoint devices (Jérôme Carretero)\n\n  MSI\n    - Fix leak in free_msi_irqs() (Alexei Starovoitov)\n\n  Marvell MVEBU\n    - Remove unnecessary use of 'conf_lock' spinlock (Andrew Murray)\n    - Avoid setting an undefined window size (Jason Gunthorpe)\n    - Allow several windows with the same target/attribute (Thomas Petazzoni)\n    - Split PCIe BARs into multiple MBus windows when needed (Thomas Petazzoni)\n    - Fix off-by-one in the computed size of the mbus windows (Willy Tarreau)\n\n  NVIDIA Tegra\n    - Use new OF interrupt mapping when possible (Lucas Stach)\n\n  Synopsys DesignWare\n    - Remove unnecessary use of 'conf_lock' spinlock (Andrew Murray)\n    - Use new OF interrupt mapping when possible (Lucas Stach)\n    - Split Exynos and i.MX bindings (Lucas Stach)\n    - Fix comment for setting number of lanes (Mohit Kumar)\n    - Fix iATU programming for cfg1, io and mem viewport (Mohit Kumar)\n\n  Miscellaneous\n    - EXPORT_SYMBOL cleanup (Ryan Desfosses)\n    - Whitespace cleanup (Ryan Desfosses)\n    - Merge multi-line quoted strings (Ryan Desfosses)\"\n\n* tag 'pci-v3.16-changes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (21 commits)\n  PCI: Add function 1 DMA alias quirk for HighPoint RocketRaid 642L\n  PCI/MSI: Fix memory leak in free_msi_irqs()\n  PCI: Merge multi-line quoted strings\n  PCI: Whitespace cleanup\n  PCI: Move EXPORT_SYMBOL so it immediately follows function/variable\n  PCI: Add bridge DMA alias quirk for ITE bridge\n  PCI: designware: Split Exynos and i.MX bindings\n  PCI: Add bridge DMA alias quirk for ASMedia and Tundra bridges\n  PCI: Add support for PCIe-to-PCI bridge DMA alias quirks\n  PCI: Add function 1 DMA alias quirk for Marvell devices\n  PCI: Add function 0 DMA alias quirk for Ricoh devices\n  PCI: Add support for DMA alias quirks\n  PCI: Convert pci_dev_flags definitions to bit shifts\n  PCI: Add DMA alias iterator\n  PCI: mvebu: Use '%pa' for printing 'phys_addr_t' type\n  PCI: mvebu: Remove unnecessary use of 'conf_lock' spinlock\n  PCI: designware: Remove unnecessary use of 'conf_lock' spinlock\n  PCI: designware: Use new OF interrupt mapping when possible\n  PCI: designware: Fix iATU programming for cfg1, io and mem viewport\n  PCI: designware: Fix comment for setting number of lanes\n  ... Merge tag 'pm+acpi-3.16-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull more ACPI and power management updates from Rafael Wysocki:\n \"These are fixups on top of the previous PM+ACPI pull request,\n  regression fixes (ACPI hotplug, cpufreq ppc-corenet), other bug fixes\n  (ACPI reset, cpufreq), new PM trace points for system suspend\n  profiling and a copyright notice update.\n\n  Specifics:\n\n   - I didn't remember correctly that the Hans de Goede's ACPI video\n     patches actually didn't flip the video.use_native_backlight\n     default, although we had discussed that and decided to do that.\n     Since I said we would do that in the previous PM+ACPI pull request,\n     make that change for real now.\n\n   - ACPI bus check notifications for PCI host bridges don't cause the\n     bus below the host bridge to be checked for changes as they should\n     because of a mistake in the ACPI-based PCI hotplug (ACPIPHP)\n     subsystem that forgets to add hotplug contexts to PCI host bridge\n     ACPI device objects.  Create hotplug contexts for PCI host bridges\n     too as appropriate.\n\n   - Revert recent cpufreq commit related to the big.LITTLE cpufreq\n     driver that breaks arm64 builds.\n\n   - Fix for a regression in the ppc-corenet cpufreq driver introduced\n     during the 3.15 cycle and causing the driver to use the remainder\n     from do_div instead of the quotient.  From Ed Swarthout.\n\n   - Resets triggered by panic activate a BUG_ON() in vmalloc.c on\n     systems where the ACPI reset register is located in memory address\n     space.  Fix from Randy Wright.\n\n   - Fix for a problem with cpufreq governors that decisions made by\n     them may be suboptimal due to the fact that deferrable timers are\n     used by them for CPU load sampling.  From Srivatsa S Bhat.\n\n   - Fix for a problem with the Tegra cpufreq driver where the CPU\n     frequency is temporarily switched to a \"stable\" level that is\n     different from both the initial and target frequencies during\n     transitions which causes udelay() to expire earlier than it should\n     sometimes.  From Viresh Kumar.\n\n   - New trace points and rework of some existing trace points for\n     system suspend/resume profiling from Todd Brandt.\n\n   - Assorted cpufreq fixes and cleanups from Stratos Karafotis and\n     Viresh Kumar.\n\n   - Copyright notice update for suspend-and-cpuhotplug.txt from\n     Srivatsa S Bhat\"\n\n* tag 'pm+acpi-3.16-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / hotplug / PCI: Add hotplug contexts to PCI host bridges\n  PM / sleep: trace events for device PM callbacks\n  cpufreq: cpufreq-cpu0: remove dependency on THERMAL and REGULATOR\n  cpufreq: tegra: update comment for clarity\n  cpufreq: intel_pstate: Remove duplicate CPU ID check\n  cpufreq: Mark CPU0 driver with CPUFREQ_NEED_INITIAL_FREQ_CHECK flag\n  PM / Documentation: Update copyright in suspend-and-cpuhotplug.txt\n  cpufreq: governor: remove copy_prev_load from 'struct cpu_dbs_common_info'\n  cpufreq: governor: Be friendly towards latency-sensitive bursty workloads\n  PM / sleep: trace events for suspend/resume\n  cpufreq: ppc-corenet-cpu-freq: do_div use quotient\n  Revert \"cpufreq: Enable big.LITTLE cpufreq driver on arm64\"\n  cpufreq: Tegra: implement intermediate frequency callbacks\n  cpufreq: add support for intermediate (stable) frequencies\n  ACPI / video: Change the default for video.use_native_backlight to 1\n  ACPI: Fix bug when ACPI reset register is implemented in system memory Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/cooloney/linux-leds\n\nPull LED updates from Bryan Wu:\n \"I just found merge window is open and I'm quite busy and almost forget\n  to send out this pull request.  Thanks Russell and Alexandre ping me\n  about this.\n\n  So basically we got some clean up and leds-pwm fixing patches from\n  Russell\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/cooloney/linux-leds:\n  leds: Remove duplicated OOM message for individual driver\n  drivers/leds: Replace __get_cpu_var use through this_cpu_ptr\n  leds: lp55xx: add DT bindings for LP55231\n  leds: 88pm860x: Fix missing refcount decrement for parent of_node\n  leds: 88pm860x: Use of_get_child_by_name\n  leds: leds-pwm: add DT support for LEDs wired to supply\n  leds: leds-pwm: implement PWM inversion\n  leds: leds-pwm: convert OF parsing code to use led_pwm_add()\n  leds: leds-pwm: provide a common function to setup a single led-pwm device\n  leds: pca9685: Remove leds-pca9685 driver\n  dell-led: add mic mute led interface Merge tag 'backlight-for-linus-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight\n\nPull backlight fixes from Lee Jones:\n \"This merely contains some very basic build/run-time bug fixes\"\n\n* tag 'backlight-for-linus-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight:\n  backlight: gpio-backlight: Fix warning when the GPIO is on a I2C chip\n  video/backlight: s6e63m0: Fix string type mismatch\n  video/backlight: LP8788 needs PWM\n  video/backlight: LP855X needs PWM\n  video/pxa: LCD_CORGI needs BACKLIGHT_CLASS_DEVICE\n  video/backlight: LM3630A needs PWM Merge tag 'mfd-for-linus-3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull more MFD updates from Lee Jones:\n \"I missed collecting these patches due to a branch/tag naming\n  ambiguity.  Completely my own fault, as I mindlessly named a branch\n  and tag identically.  Sorry for the fuss.\n\n  This pull-request contains some misplaced patches from Tony Lindgren\n  that should have been part of the initial one\"\n\n* tag 'mfd-for-linus-3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd:\n  mfd: twl4030-power: Add a configuration to turn off oscillator during off-idle\n  mfd: twl4030-power: Add support for board specific configuration\n  mfd: twl4030-power: Add recommended idle configuration\n  mfd: twl4030-power: Add generic reset configuration\n  mfd: twl4030-power: Fix some defines for SW_EVENTS\n  mfd: twl4030-power: Fix hang on reboot if sleep configuration was loaded earlier Merge tag 'mmc-v3.16-2' of git://git.linaro.org/people/ulf.hansson/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"Here are some mmc fixes for 3.16.\n\n   - fix some various compiler warnings\n   - make atmel-mci compile again\n   - fix regression for sdhci-msm\"\n\n* tag 'mmc-v3.16-2' of git://git.linaro.org/people/ulf.hansson/mmc:\n  mmc: simplify SDHCI Kconfig dependencies\n  mmc: omap: don't select TPS65010\n  mmc: mvsdio: avoid compiler warning\n  mmc: atmel-mci: incude asm/cacheclush.h\n  mmc: sdhci-msm: Fix fallout from sdhci refactoring\n  mmc: usdhi6rol0: fix compiler warnings Merge branch 'drm-next' of git://people.freedesktop.org/~airlied/linux\n\nPull drm updates from Dave Airlie:\n \"This is the main drm merge window pull request, changes all over the\n  place, mostly normal levels of churn.\n\n  Highlights:\n\n  Core drm:\n     More cleanups, fix race on connector/encoder naming, docs updates,\n     object locking rework in prep for atomic modeset\n\n  i915:\n     mipi DSI support, valleyview power fixes, cursor size fixes,\n     execlist refactoring, vblank improvements, userptr support, OOM\n     handling improvements\n\n  radeon:\n     GPUVM tuning and large page size support, gart fixes, deep color\n     HDMI support, HDMI audio cleanups\n\n  nouveau:\n     - displayport rework should fix lots of issues\n     - initial gk20a support\n     - gk110b support\n     - gk208 fixes\n\n  exynos:\n     probe order fixes, HDMI changes, IPP consolidation\n\n  msm:\n     debugfs updates, misc fixes\n\n  ast:\n     ast2400 support, sync with UMS driver\n\n  tegra:\n     cleanups, hdmi + hw cursor for Tegra 124.\n\n  panel:\n     fixes existing panels add some new ones.\n\n  ipuv3:\n     moved from staging to drivers/gpu\"\n\n* 'drm-next' of git://people.freedesktop.org/~airlied/linux: (761 commits)\n  drm/nouveau/disp/dp: fix tmds passthrough on dp connector\n  drm/nouveau/dp: probe dpcd to determine connectedness\n  drm/nv50-: trigger update after all connectors disabled\n  drm/nv50-: prepare for attaching a SOR to multiple heads\n  drm/gf119-/disp: fix debug output on update failure\n  drm/nouveau/disp/dp: make use of postcursor when its available\n  drm/g94-/disp/dp: take max pullup value across all lanes\n  drm/nouveau/bios/dp: parse lane postcursor data\n  drm/nouveau/dp: fix support for dpms\n  drm/nouveau: register a drm_dp_aux channel for each dp connector\n  drm/g94-/disp: add method to power-off dp lanes\n  drm/nouveau/disp/dp: maintain link in response to hpd signal\n  drm/g94-/disp: bash and wait for something after changing lane power regs\n  drm/nouveau/disp/dp: split link config/power into two steps\n  drm/nv50/disp: train PIOR-attached DP from second supervisor\n  drm/nouveau/disp/dp: make use of existing output data for link training\n  drm/gf119/disp: start removing direct vbios parsing from supervisor\n  drm/nv50/disp: start removing direct vbios parsing from supervisor\n  drm/nouveau/disp/dp: maintain receiver caps in response to hpd signal\n  drm/nouveau/disp/dp: create subclass for dp outputs\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs updates from Al Viro:\n \"This the bunch that sat in -next + lock_parent() fix.  This is the\n  minimal set; there's more pending stuff.\n\n  In particular, I really hope to get acct.c fixes merged this cycle -\n  we need that to deal sanely with delayed-mntput stuff.  In the next\n  pile, hopefully - that series is fairly short and localized\n  (kernel/acct.c, fs/super.c and fs/namespace.c).  In this pile: more\n  iov_iter work.  Most of prereqs for ->splice_write with sane locking\n  order are there and Kent's dio rewrite would also fit nicely on top of\n  this pile\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs: (70 commits)\n  lock_parent: don't step on stale ->d_parent of all-but-freed one\n  kill generic_file_splice_write()\n  ceph: switch to iter_file_splice_write()\n  shmem: switch to iter_file_splice_write()\n  nfs: switch to iter_splice_write_file()\n  fs/splice.c: remove unneeded exports\n  ocfs2: switch to iter_file_splice_write()\n  ->splice_write() via ->write_iter()\n  bio_vec-backed iov_iter\n  optimize copy_page_{to,from}_iter()\n  bury generic_file_aio_{read,write}\n  lustre: get rid of messing with iovecs\n  ceph: switch to ->write_iter()\n  ceph_sync_direct_write: stop poking into iov_iter guts\n  ceph_sync_read: stop poking into iov_iter guts\n  new helper: copy_page_from_iter()\n  fuse: switch to ->write_iter()\n  btrfs: switch to ->write_iter()\n  ocfs2: switch to ->write_iter()\n  xfs: switch to ->write_iter()\n  ... Merge tag 'virtio-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux\n\nPull virtio updates from Rusty Russell:\n \"Main excitement is a virtio_scsi fix for alloc holding spinlock on the\n  abort path, which I refuse to CC stable since (1) I discovered it\n  myself, and (2) it's been there forever with no reports\"\n\n* tag 'virtio-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux:\n  virtio_scsi: don't call virtqueue_add_sgs(... GFP_NOIO) holding spinlock.\n  virtio-rng: fixes for device registration/unregistration\n  virtio-rng: fix boot with virtio-rng device\n  virtio-rng: support multiple virtio-rng devices\n  virtio_ccw: introduce device_lost in virtio_ccw_device\n  virtio: virtio_break_device() to mark all virtqueues broken. Merge tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost\n\nPull vhost infrastructure updates from Michael S. Tsirkin:\n \"This reworks vhost core dropping unnecessary RCU uses in favor of VQ\n  mutexes which are used on fast path anyway.  This fixes worst-case\n  latency for users which change the memory mappings a lot.  Memory\n  allocation for vhost-net now supports fallback on vmalloc (same as for\n  vhost-scsi) this makes it possible to create the device on systems\n  where memory is very fragmented, with slightly lower performance\"\n\n* tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:\n  vhost: move memory pointer to VQs\n  vhost: move acked_features to VQs\n  vhost: replace rcu with mutex\n  vhost-net: extend device allocation to vmalloc Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile\n\nPull arch/tile changes from Chris Metcalf:\n \"These mostly just address smaller issues reported to me\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:\n  arch: tile: kernel: unaligned.c: Cleaning up uninitialized variables\n  drivers/tty/hvc/hvc_tile.c: use PTR_ERR_OR_ZERO\n  replace strict_strto* call with kstrto*\n  tile: Update comments for generic idle conversion\n  tile: cleanup the comment in init_pgprot\n  tile: use BOOTMEM_DEFAULT instead of magic number 0 for reserve_bootmem flags Merge tag 'modules-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux\n\nPull module updates from Rusty Russell:\n \"Most of this is cleaning up various driver sysfs permissions so we can\n  re-add the perm check (we unified the module param and sysfs checks,\n  but the module ones were stronger so we weakened them temporarily).\n\n  Param parsing gets documented, and also \"--\" now forces args to be\n  handed to init (and ignored by the kernel).\n\n  Module NX/RO protections get tightened: we now set them before calling\n  parse_args()\"\n\n* tag 'modules-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux:\n  module: set nx before marking module MODULE_STATE_COMING.\n  samples/kobject/: avoid world-writable sysfs files.\n  drivers/hid/hid-picolcd_fb: avoid world-writable sysfs files.\n  drivers/staging/speakup/: avoid world-writable sysfs files.\n  drivers/regulator/virtual: avoid world-writable sysfs files.\n  drivers/scsi/pm8001/pm8001_ctl.c: avoid world-writable sysfs files.\n  drivers/hid/hid-lg4ff.c: avoid world-writable sysfs files.\n  drivers/video/fbdev/sm501fb.c: avoid world-writable sysfs files.\n  drivers/mtd/devices/docg3.c: avoid world-writable sysfs files.\n  speakup: fix incorrect perms on speakup_acntsa.c\n  cpumask.h: silence warning with -Wsign-compare\n  Documentation: Update kernel-parameters.tx\n  param: hand arguments after -- straight to init\n  modpost: Fix resource leak in read_dump() Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux\n\nPull thermal management update from Zhang Rui:\n \"Specifics:\n\n   - fix a bug in Exynos thermal driver, which overwrites the hardware\n     trip point threshold when updating software trigger levels and\n     results in emergency shutdown.  From: Tushar Behera.\n\n   - add thermal sensor support for Armada 375 and 38x SoCs.  From\n     Ezequiel Garcia.\n\n   - add TMU (Thermal Management Unit) support for Exynos5260 and\n     Exynos5420 SoCs.  From Naveen Krishna Chatradhi.\n\n   - add support for the additional digital temperature sensors in the\n     Intel SoCs like Bay Trail.  From: Srinivas Pandruvada.\n\n   - a couple of cleanups and small fixes from Jingoo Han, Bartlomiej\n     Zolnierkiewicz, Geert Uytterhoeven, Jacob Pan, Paul Walmsley and\n     Lan,Tianyu\"\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux: (21 commits)\n  thermal: spear: remove unnecessary OOM messages\n  thermal: exynos: remove unnecessary OOM messages\n  thermal: rcar: remove unnecessary OOM messages\n  thermal: armada: Support Armada 380 SoC\n  thermal: armada: Support Armada 375 SoC\n  thermal: armada: Allow to specify an 'inverted readout' sensor\n  thermal: armada: Pass the platform_device to init_sensor()\n  thermal: armada: Add generic infrastructure to handle the sensor\n  thermal: armada: Add infrastructure to support generic formulas\n  thermal: armada: Rename armada_thermal_ops struct\n  thermal/intel_powerclamp: add newer cpu ids\n  thermal: rcar: Use pm_runtime_put() i.s.o. pm_runtime_put_sync()\n  thermal: samsung: Only update available threshold limits\n  Thermal/int3403: Fix thermal hysteresis unit conversion\n  thermal: Intel SoC DTS thermal\n  thermal: samsung: Add TMU support for Exynos5260 SoCs\n  thermal: samsung: Add TMU support for Exynos5420 SoCs\n  thermal: samsung: change base_common to more meaningful base_second\n  thermal: samsung: replace inten_ bit fields with intclr_\n  thermal: offer Samsung thermal support only when ARCH_EXYNOS is defined\n  ... Merge tag 'pwm/for-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm\n\nPull pwm changes from Thierry Reding:\n \"The majority of these changes are cleanups and fixes across all\n  drivers.  Redundant error messages are removed and more PWM\n  controllers set the .can_sleep flag to signal that they can't be used\n  in atomic context.\n\n  Support is added for the Broadcom Kona family of SoCs and the Intel\n  LPSS driver can now probe PCI devices in addition to ACPI devices.\n  Upon shutdown, the pwm-backlight driver will now power off the\n  backlight.  It also uses the new descriptor-based GPIO API for more\n  concise GPIO handling.\n\n  A large chunk of these changes also converts platforms to use the\n  lookup mechanism rather than relying on the global number space to\n  reference PWM devices.  This is largely in preparation for more\n  unification and cleanups in future patches.  Eventually it will allow\n  the legacy PWM API to be removed\"\n\n* tag 'pwm/for-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm: (38 commits)\n  pwm: fsl-ftm: set pwm_chip can_sleep flag\n  pwm: ab8500: Fix wrong value shift for disable/enable PWM\n  pwm: samsung: do not set manual update bit in pwm_samsung_config\n  pwm: lp3943: Set pwm_chip can_sleep flag\n  pwm: atmel: set pwm_chip can_sleep flag\n  pwm: mxs: set pwm_chip can_sleep flag\n  pwm: tiehrpwm: inline accessor functions\n  pwm: tiehrpwm: don't build PM related functions when not needed\n  pwm-backlight: retrieve configured PWM period\n  leds: leds-pwm: retrieve configured PWM period\n  ARM: pxa: hx4700: use PWM_LOOKUP to initialize struct pwm_lookup\n  ARM: shmobile: armadillo: use PWM_LOOKUP to initialize struct pwm_lookup\n  ARM: OMAP3: Beagle: use PWM_LOOKUP to initialize struct pwm_lookup\n  pwm: modify PWM_LOOKUP to initialize all struct pwm_lookup members\n  ARM: pxa: hx4700: initialize all the struct pwm_lookup members\n  ARM: OMAP3: Beagle: initialize all the struct pwm_lookup members\n  pwm: renesas-tpu: remove unused struct tpu_pwm_platform_data\n  ARM: shmobile: armadillo: initialize all struct pwm_lookup members\n  pwm: add period and polarity to struct pwm_lookup\n  pwm: twl: Really disable twl6030 PWMs\n  ... Merge tag 'soc2-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull part two of ARM SoC updates from Arnd Bergmann:\n \"This is a small follow-up to the larger ARM SoC updates merged last\n  week, almost entirely for the keystone platform.\n\n  The main change here is to use the new dma-ranges parsing code that\n  came in through Russell's ARM tree.  This allows the keystone platform\n  to do cache-coherent DMA and to finally support all the available\n  physical memory when LPAE is enabled.\n\n  Aside from this, the keystone reset driver has been rewritten, and\n  there is a small bug fix to allow building the orion5x platform again\"\n\n* tag 'soc2-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: keystone: Drop use of meminfo since its not available anymore\n  ARM: orion5x: fix mvebu_mbus_dt_init call\n  ARM: configs: keystone: enable reset driver support\n  ARM: dts: keystone: update reset node to work with reset driver\n  ARM: keystone: remove redundant reset stuff\n  ARM: keystone: Update the dma offset for non-dt platform devices\n  ARM: keystone: Switch over to coherent memory address space\n  ARM: configs: keystone: add MTD_SPI_NOR (new dependency for M25P80)\n  ARM: configs: keystone: drop CONFIG_COMMON_CLK_DEBUG Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull reiserfs and ext3 changes from Jan Kara:\n \"Big reiserfs cleanup from Jeff, an ext3 deadlock fix, and some small\n  cleanups\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs: (34 commits)\n  reiserfs: Fix compilation breakage with CONFIG_REISERFS_CHECK\n  ext3: Fix deadlock in data=journal mode when fs is frozen\n  reiserfs: call truncate_setsize under tailpack mutex\n  fs/jbd/revoke.c: replace shift loop by ilog2\n  reiserfs: remove obsolete __constant_cpu_to_le32\n  reiserfs: balance_leaf refactor, split up balance_leaf_when_delete\n  reiserfs: balance_leaf refactor, format balance_leaf_finish_node\n  reiserfs: balance_leaf refactor, format balance_leaf_new_nodes_paste\n  reiserfs: balance_leaf refactor, format balance_leaf_paste_right\n  reiserfs: balance_leaf refactor, format balance_leaf_insert_right\n  reiserfs: balance_leaf refactor, format balance_leaf_paste_left\n  reiserfs: balance_leaf refactor, format balance_leaf_insert_left\n  reiserfs: balance_leaf refactor, pull out balance_leaf{left, right, new_nodes, finish_node}\n  reiserfs: balance_leaf refactor, pull out balance_leaf_finish_node_paste\n  reiserfs: balance_leaf refactor pull out balance_leaf_finish_node_insert\n  reiserfs: balance_leaf refactor, pull out balance_leaf_new_nodes_paste\n  reiserfs: balance_leaf refactor, pull out balance_leaf_new_nodes_insert\n  reiserfs: balance_leaf refactor, pull out balance_leaf_paste_right\n  reiserfs: balance_leaf refactor, pull out balance_leaf_insert_right\n  reiserfs: balance_leaf refactor, pull out balance_leaf_paste_left\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs updates from Chris Mason:\n \"The biggest change here is Josef's rework of the btrfs quota\n  accounting, which improves the in-memory tracking of delayed extent\n  operations.\n\n  I had been working on Btrfs stack usage for a while, mostly because it\n  had become impossible to do long stress runs with slab, lockdep and\n  pagealloc debugging turned on without blowing the stack.  Even though\n  you upgraded us to a nice king sized stack, I kept most of the\n  patches.\n\n  We also have some very hard to find corruption fixes, an awesome sysfs\n  use after free, and the usual assortment of optimizations, cleanups\n  and other fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs: (80 commits)\n  Btrfs: convert smp_mb__{before,after}_clear_bit\n  Btrfs: fix scrub_print_warning to handle skinny metadata extents\n  Btrfs: make fsync work after cloning into a file\n  Btrfs: use right type to get real comparison\n  Btrfs: don't check nodes for extent items\n  Btrfs: don't release invalid page in btrfs_page_exists_in_range()\n  Btrfs: make sure we retry if page is a retriable exception\n  Btrfs: make sure we retry if we couldn't get the page\n  btrfs: replace EINVAL with EOPNOTSUPP for dev_replace raid56\n  trivial: fs/btrfs/ioctl.c: fix typo s/substract/subtract/\n  Btrfs: fix leaf corruption after __btrfs_drop_extents\n  Btrfs: ensure btrfs_prev_leaf doesn't miss 1 item\n  Btrfs: fix clone to deal with holes when NO_HOLES feature is enabled\n  btrfs: free delayed node outside of root->inode_lock\n  btrfs: replace EINVAL with ERANGE for resize when ULLONG_MAX\n  Btrfs: fix transaction leak during fsync call\n  btrfs: Avoid trucating page or punching hole in a already existed hole.\n  Btrfs: update commit root on snapshot creation after orphan cleanup\n  Btrfs: ioctl, don't re-lock extent range when not necessary\n  Btrfs: avoid visiting all extent items when cloning a range\n  ... Merge tag 'xfs-for-linus-3.16-rc1' of git://oss.sgi.com/xfs/xfs\n\nPull xfs updates from Dave Chinner:\n \"This update contains:\n   - cleanup removing unused function args\n   - rework of the filestreams allocator to use dentry cache parent\n     lookups\n   - new on-disk free inode btree and optimised inode allocator\n   - various bug fixes\n   - rework of internal attribute API\n   - cleanup of superblock feature bit support to remove historic cruft\n   - more fixes and minor cleanups\n   - added a new directory/attribute geometry abstraction\n   - yet more fixes and minor cleanups\"\n\n* tag 'xfs-for-linus-3.16-rc1' of git://oss.sgi.com/xfs/xfs: (86 commits)\n  xfs: fix xfs_da_args sparse warning in xfs_readdir\n  xfs: Fix rounding in xfs_alloc_fix_len()\n  xfs: tone down writepage/releasepage WARN_ONs\n  xfs: small cleanup in xfs_lowbit64()\n  xfs: kill xfs_buf_geterror()\n  xfs: xfs_readsb needs to check for magic numbers\n  xfs: block allocation work needs to be kswapd aware\n  xfs: remove redundant geometry information from xfs_da_state\n  xfs: replace attr LBSIZE with xfs_da_geometry\n  xfs: pass xfs_da_args to xfs_attr_leaf_newentsize\n  xfs: use xfs_da_geometry for block size in attr code\n  xfs: remove mp->m_dir_geo from directory logging\n  xfs: reduce direct usage of mp->m_dir_geo\n  xfs: move node entry counts to xfs_da_geometry\n  xfs: convert dir/attr btree threshold to xfs_da_geometry\n  xfs: convert m_dirblksize to xfs_da_geometry\n  xfs: convert m_dirblkfsbs to xfs_da_geometry\n  xfs: convert directory segment limits to xfs_da_geometry\n  xfs: convert directory db conversion to xfs_da_geometry\n  xfs: convert directory dablk conversion to xfs_da_geometry\n  ... Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block layer fixes from Jens Axboe:\n \"Final small batch of fixes to be included before -rc1.  Some general\n  cleanups in here as well, but some of the blk-mq fixes we need for the\n  NVMe conversion and/or scsi-mq.  The pull request contains:\n\n   - Support for not merging across a specified \"chunk size\", if set by\n     the driver.  Some NVMe devices perform poorly for IO that crosses\n     such a chunk, so we need to support it generically as part of\n     request merging avoid having to do complicated split logic.  From\n     me.\n\n   - Bump max tag depth to 10Ki tags.  Some scsi devices have a huge\n     shared tag space.  Before we failed with EINVAL if a too large tag\n     depth was specified, now we truncate it and pass back the actual\n     value.  From me.\n\n   - Various blk-mq rq init fixes from me and others.\n\n   - A fix for enter on a dying queue for blk-mq from Keith.  This is\n     needed to prevent oopsing on hot device removal.\n\n   - Fixup for blk-mq timer addition from Ming Lei.\n\n   - Small round of performance fixes for mtip32xx from Sam Bradshaw.\n\n   - Minor stack leak fix from Rickard Strandqvist.\n\n   - Two __init annotations from Fabian Frederick\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  block: add __init to blkcg_policy_register\n  block: add __init to elv_register\n  block: ensure that bio_add_page() always accepts a page for an empty bio\n  blk-mq: add timer in blk_mq_start_request\n  blk-mq: always initialize request->start_time\n  block: blk-exec.c: Cleaning up local variable address returnd\n  mtip32xx: minor performance enhancements\n  blk-mq: ->timeout should be cleared in blk_mq_rq_ctx_init()\n  blk-mq: don't allow queue entering for a dying queue\n  blk-mq: bump max tag depth to 10K tags\n  block: add blk_rq_set_block_pc()\n  block: add notion of a chunk size for request merging Merge tag 'for-linus-20140610' of git://git.infradead.org/linux-mtd\n\nPull MTD updates from Brian Norris:\n - refactor m25p80.c driver for use as a general SPI NOR framework for\n   other drivers which may speak to SPI NOR flash without providing full\n   SPI support (i.e., not part of drivers/spi/)\n - new Freescale QuadSPI driver (utilizing new SPI NOR framework)\n - updates for the STMicro \"FSM\" SPI NOR driver\n - fix sync/flush behavior on mtd_blkdevs\n - fixup subpage write support on a few NAND drivers\n - correct the MTD OOB test for odd-sized OOB areas\n - add BCH-16 support for OMAP NAND\n - fix warnings and trivial refactoring\n - utilize new ECC DT bindings in pxa3xx NAND driver\n - new LPDDR NVM driver\n - address a few assorted bugs caught by Coverity\n - add new imx6sx support for GPMI NAND\n - use a bounce buffer for NAND when non-DMA-able buffers are used\n\n* tag 'for-linus-20140610' of git://git.infradead.org/linux-mtd: (77 commits)\n  mtd: gpmi: add gpmi support for imx6sx\n  mtd: maps: remove check for CONFIG_MTD_SUPERH_RESERVE\n  mtd: bf5xx_nand: use the managed version of kzalloc\n  mtd: pxa3xx_nand: make the driver work on big-endian systems\n  mtd: nand: omap: fix omap_calculate_ecc_bch() for-loop error\n  mtd: nand: r852: correct write_buf loop bounds\n  mtd: nand_bbt: handle error case for nand_create_badblock_pattern()\n  mtd: nand_bbt: remove unused variable\n  mtd: maps: sc520cdp: fix warnings\n  mtd: slram: fix unused variable warning\n  mtd: pfow: remove unused variable\n  mtd: lpddr: fix Kconfig dependency, for I/O accessors\n  mtd: nand: pxa3xx: Add supported ECC strength and step size to the DT binding\n  mtd: nand: pxa3xx: Use ECC strength and step size devicetree binding\n  mtd: nand: pxa3xx: Clean pxa_ecc_init() error handling\n  mtd: nand: Warn the user if the selected ECC strength is too weak\n  mtd: nand: omap: Documentation: How to select correct ECC scheme for your device ?\n  mtd: nand: omap: add support for BCH16_ECC - NAND driver updates\n  mtd: nand: omap: add support for BCH16_ECC - ELM driver updates\n  mtd: nand: omap: add support for BCH16_ECC - GPMC driver updates\n  ... Merge tag 'md/3.16' of git://neil.brown.name/md\n\nPull md updates from Neil Brown:\n \"Assorted md fixes for 3.16\n\n  Mostly performance improvements with a few corner-case bug fixes\"\n\n* tag 'md/3.16' of git://neil.brown.name/md:\n  raid5: speedup sync_request processing\n  md/raid5: deadlock between retry_aligned_read with barrier io\n  raid5: add an option to avoid copy data from bio to stripe cache\n  md/bitmap: remove confusing code from filemap_get_page.\n  raid5: avoid release list until last reference of the stripe\n  md: md_clear_badblocks should return an error code on failure.\n  md/raid56: Don't perform reads to support writes until stripe is ready.\n  md: refuse to change shape of array if it is active but read-only Merge git://www.linux-watchdog.org/linux-watchdog\n\nPull watchdog updates from Wim Van Sebroeck:\n \"This contains:\n   - addition of the Intel MID watchdog\n   - removal of W83697HF and W83697UG drivers (code was merged into\n     w83627hf_wdt driver)\n   - addition of Armada 375/380 SoC support\n   - conversion of imx2_wdt to regmap API and to watchdog core API\n   - lots of other small improvements and fixes\"\n\n[ Wim was also tagged by gmail as a spammer, but not delayed by days\n  unlike Ben ]\n\n* git://www.linux-watchdog.org/linux-watchdog: (25 commits)\n  x86: intel-mid: add watchdog platform code for Merrifield\n  watchdog: add Intel MID watchdog driver support\n  watchdog: sp805: Set watchdog_device->timeout from ->set_timeout()\n  booke/watchdog: refine and clean up the codes\n  watchdog: iop_wdt only builds for mach-iop13xx\n  watchdog: Remove drivers for W83697HF and W83697UG\n  watchdog: w83627hf_wdt: Add early_disable module parameter\n  ARM: mvebu: Add A375/A380 watchdog binding documentation\n  watchdog: orion: Add Armada 375/380 SoC support\n  watchdog: orion: Introduce per-SoC enabled() function\n  watchdog: orion: Introduce per-SoC stop() function\n  watchdog: orion: Remove unneeded atomic access\n  watchdog: orion: Introduce a SoC-specific RSTOUT mapping\n  watchdog: orion: Move the register ioremap'ing to its own function\n  watchdog: xilinx: Make of_device_id array const\n  watchdog: imx2_wdt: convert to watchdog core api\n  watchdog: imx2_wdt: convert to use regmap API.\n  watchdog: imx2_wdt: Sort the header files alphabetically\n  watchdog: ath79_wdt: switch to clk_prepare/clk_disable\n  watchdog: ath79_wdt: avoid spurious restarts on AR934x\n  ... Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc updates from Ben Herrenschmidt:\n \"Here is the bulk of the powerpc changes for this merge window.  It got\n  a bit delayed in part because I wasn't paying attention, and in part\n  because I discovered I had a core PCI change without a PCI maintainer\n  ack in it.  Bjorn eventually agreed it was ok to merge it though we'll\n  probably improve it later and I didn't want to rebase to add his ack.\n\n  There is going to be a bit more next week, essentially fixes that I\n  still want to sort through and test.\n\n  The biggest item this time is the support to build the ppc64 LE kernel\n  with our new v2 ABI.  We previously supported v2 userspace but the\n  kernel itself was a tougher nut to crack.  This is now sorted mostly\n  thanks to Anton and Rusty.\n\n  We also have a fairly big series from Cedric that add support for\n  64-bit LE zImage boot wrapper.  This was made harder by the fact that\n  traditionally our zImage wrapper was always 32-bit, but our new LE\n  toolchains don't really support 32-bit anymore (it's somewhat there\n  but not really \"supported\") so we didn't want to rely on it.  This\n  meant more churn that just endian fixes.\n\n  This brings some more LE bits as well, such as the ability to run in\n  LE mode without a hypervisor (ie. under OPAL firmware) by doing the\n  right OPAL call to reinitialize the CPU to take HV interrupts in the\n  right mode and the usual pile of endian fixes.\n\n  There's another series from Gavin adding EEH improvements (one day we\n  *will* have a release with less than 20 EEH patches, I promise!).\n\n  Another highlight is the support for the \"Split core\" functionality on\n  P8 by Michael.  This allows a P8 core to be split into \"sub cores\" of\n  4 threads which allows the subcores to run different guests under KVM\n  (the HW still doesn't support a partition per thread).\n\n  And then the usual misc bits and fixes ...\"\n\n[ Further delayed by gmail deciding that BenH is a dirty spammer.\n  Google knows.  ]\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (155 commits)\n  powerpc/powernv: Add missing include to LPC code\n  selftests/powerpc: Test the THP bug we fixed in the previous commit\n  powerpc/mm: Check paca psize is up to date for huge mappings\n  powerpc/powernv: Pass buffer size to OPAL validate flash call\n  powerpc/pseries: hcall functions are exported to modules, need _GLOBAL_TOC()\n  powerpc: Exported functions __clear_user and copy_page use r2 so need _GLOBAL_TOC()\n  powerpc/powernv: Set memory_block_size_bytes to 256MB\n  powerpc: Allow ppc_md platform hook to override memory_block_size_bytes\n  powerpc/powernv: Fix endian issues in memory error handling code\n  powerpc/eeh: Skip eeh sysfs when eeh is disabled\n  powerpc: 64bit sendfile is capped at 2GB\n  powerpc/powernv: Provide debugfs access to the LPC bus via OPAL\n  powerpc/serial: Use saner flags when creating legacy ports\n  powerpc: Add cpu family documentation\n  powerpc/xmon: Fix up xmon format strings\n  powerpc/powernv: Add calls to support little endian host\n  powerpc: Document sysfs DSCR interface\n  powerpc: Fix regression of per-CPU DSCR setting\n  powerpc: Split __SYSFS_SPRSETUP macro\n  arch: powerpc/fadump: Cleaning up inconsistent NULL checks\n  ... Merge branch 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86\n\nPull x86 platform driver updates from Matthew Garrett:\n \"Very little of excitement here - the most significant is a new driver\n  for detecting device freefall on Dells, other than that it's pretty\n  much entirely minor fixes for specific machines\"\n\n* 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86:\n  hp-wmi: Enable hotkeys on some systems\n  thinkpad_acpi: Add mappings for F9 - F12 hotkeys on X240 / T440 / T540\n  platform: x86: dell-smo8800: Dell Latitude freefall driver (ACPI SMO8800/SMO8810)\n  ideapad_laptop: Introduce the use of the managed version of kzalloc\n  platform/x86: Fix run-time dependencies of OLPC drivers\n  platform: x86: asus-wmi.c: Cleaning up uninitialized variables\n  ix86/mid/thermal: Introduce the use of the managed version of kzalloc\n  platform x86 Kconfig: Refer to the laptop list in the Compal driver help\n  Documentation: Add list of laptop models supported by the Compal driver\n  ideapad-laptop: Blacklist rfkill control on the Lenovo Yoga 2 11\n  asus-wmi: Set WAPF to 4 for Asus X550CA\n  alienware-wmi: For WMAX HDMI method, introduce a way to query HDMI cable status\n  alienware-wmi: Update WMAX brightness method limit to 15\n  pvpanic: Set high notifier priority\n  platform/x86: samsung-laptop: Add support for Samsung's NP7[34]0U3E models.\n  toshiba_acpi: Add alternative keymap support for Satellite M840\n  platform-drivers-x86: intel_pmic_gpio: Fix off-by-one valid offset range check Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge leftovers from Andrew Morton:\n \"A few leftovers: ocfs2, gcov, RTC\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  rtc: s5m: consolidate two device type switch statements\n  rtc: s5m: add support for S2MPS14 RTC\n  rtc: s5m: support different register layout\n  rtc: s5m: use shorter time of register update\n  rtc: s5m: remove undocumented time init on first boot\n  mfd/rtc: sec/s5m: rename SEC* symbols to S5M\n  gcov: add support for GCC 4.9\n  ocfs2/o2net: incorrect to terminate accepting connections loop upon rejecting an invalid one Merge tag 'nfs-for-3.16-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client updates from Trond Myklebust:\n \"Highlights include:\n\n   - massive cleanup of the NFS read/write code by Anna and Dros\n   - support multiple NFS read/write requests per page in order to deal\n     with non-page aligned pNFS striping.  Also cleans up the r/wsize <\n     page size code nicely.\n   - stable fix for ensuring inode is declared uptodate only after all\n     the attributes have been checked.\n   - stable fix for a kernel Oops when remounting\n   - NFS over RDMA client fixes\n   - move the pNFS files layout driver into its own subdirectory\"\n\n* tag 'nfs-for-3.16-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs: (79 commits)\n  NFS: populate ->net in mount data when remounting\n  pnfs: fix lockup caused by pnfs_generic_pg_test\n  NFSv4.1: Fix typo in dprintk\n  NFSv4.1: Comment is now wrong and redundant to code\n  NFS: Use raw_write_seqcount_begin/end int nfs4_reclaim_open_state\n  xprtrdma: Disconnect on registration failure\n  xprtrdma: Remove BUG_ON() call sites\n  xprtrdma: Avoid deadlock when credit window is reset\n  SUNRPC: Move congestion window constants to header file\n  xprtrdma: Reset connection timeout after successful reconnect\n  xprtrdma: Use macros for reconnection timeout constants\n  xprtrdma: Allocate missing pagelist\n  xprtrdma: Remove Tavor MTU setting\n  xprtrdma: Ensure ia->ri_id->qp is not NULL when reconnecting\n  xprtrdma: Reduce the number of hardway buffer allocations\n  xprtrdma: Limit work done by completion handler\n  xprtrmda: Reduce calls to ib_poll_cq() in completion handlers\n  xprtrmda: Reduce lock contention in completion handlers\n  xprtrdma: Split the completion queue\n  xprtrdma: Make rpcrdma_ep_destroy() return void\n  ... Merge tag 'mmc-updates-for-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc\n\nPull MMC update from Chris Ball:\n \"MMC highlights for 3.16:\n\n  Core:\n   - support HS400 mode of eMMC 5.0, via DT bindings mmc-hs400-1_{2,8}v\n   - if card init at 3.3v doesn't work, try 1.8v and 1.2v too\n\n  Drivers:\n   - moxart: New driver for MOXA ART SoCs\n   - rtsx_usb_sdmmc: New driver for Realtek USB card readers\n   - sdhci: Large rework around IRQ/regulator handling, remove card_tasklet\n   - sdhci-pci-o2micro: Add SeaBird SeaEagle SD3 support\n   - sunxi: New driver for Allwinner sunxi SoCs\n   - usdhi6rol0: New driver for Renesas SD/SDIO controller\"\n\n* tag 'mmc-updates-for-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc: (95 commits)\n  mmc: sdhci-s3c: use mmc_of_parse and remove the card_tasklet\n  mmc: add a driver for the Renesas usdhi6rol0 SD/SDIO host controller\n  mmc: sdhci-of-esdhc: Fixup compile error\n  mmc: tegra: fix reporting of base clock frequency\n  mmc: tegra: disable UHS modes\n  mmc: sdhci-dove: use mmc_of_parse() and remove card_tasklet CD handler\n  MAINTAINERS: mmc: Add path to git tree\n  mmc: dove: fix missing MACH_DOVE dependency\n  mmc: sdhci: SD tuning is broken for some controllers\n  mmc: sdhci-esdhc-imx: fix mmc ddr mode regression issue\n  mmc: sdhci-pci-o2micro: Add SeaBird SeaEagle SD3 support\n  mmc: omap_hsmmc: split omap-dma header file\n  mmc: omap_hsmmc: fix cmd23 multiblock read/write\n  mmc: omap_hsmmc: use devm_ioremap_resource\n  mmc: omap_hsmmc: use devm_request_threaded_irq\n  mmc: omap_hsmmc: use devm_request_irq\n  mmc: omap_hsmmc: use devm_clk_get\n  mmc: sunxi: Add driver for SD/MMC hosts found on Allwinner sunxi SoCs\n  mmc: wmt-sdmmc: Use GFP_KERNEL instead of hard-coded value\n  mmc: omap: Use DIV_ROUND_UP instead of open coded\n  ... Merge branch 'for-3.16' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd updates from Bruce Fields:\n \"The largest piece is a long-overdue rewrite of the xdr code to remove\n  some annoying limitations: for example, there was no way to return\n  ACLs larger than 4K, and readdir results were returned only in 4k\n  chunks, limiting performance on large directories.\n\n  Also:\n        - part of Neil Brown's work to make NFS work reliably over the\n          loopback interface (so client and server can run on the same\n          machine without deadlocks).  The rest of it is coming through\n          other trees.\n        - cleanup and bugfixes for some of the server RDMA code, from\n          Steve Wise.\n        - Various cleanup of NFSv4 state code in preparation for an\n          overhaul of the locking, from Jeff, Trond, and Benny.\n        - smaller bugfixes and cleanup from Christoph Hellwig and\n          Kinglong Mee.\n\n  Thanks to everyone!\n\n  This summer looks likely to be busier than usual for knfsd.  Hopefully\n  we won't break it too badly; testing definitely welcomed\"\n\n* 'for-3.16' of git://linux-nfs.org/~bfields/linux: (100 commits)\n  nfsd4: fix FREE_STATEID lockowner leak\n  svcrdma: Fence LOCAL_INV work requests\n  svcrdma: refactor marshalling logic\n  nfsd: don't halt scanning the DRC LRU list when there's an RC_INPROG entry\n  nfs4: remove unused CHANGE_SECURITY_LABEL\n  nfsd4: kill READ64\n  nfsd4: kill READ32\n  nfsd4: simplify server xdr->next_page use\n  nfsd4: hash deleg stateid only on successful nfs4_set_delegation\n  nfsd4: rename recall_lock to state_lock\n  nfsd: remove unneeded zeroing of fields in nfsd4_proc_compound\n  nfsd: fix setting of NFS4_OO_CONFIRMED in nfsd4_open\n  nfsd4: use recall_lock for delegation hashing\n  nfsd: fix laundromat next-run-time calculation\n  nfsd: make nfsd4_encode_fattr static\n  SUNRPC/NFSD: Remove using of dprintk with KERN_WARNING\n  nfsd: remove unused function nfsd_read_file\n  nfsd: getattr for FATTR4_WORD0_FILES_AVAIL needs the statfs buffer\n  NFSD: Error out when getting more than one fsloc/secinfo/uuid\n  NFSD: Using type of uint32_t for ex_nflavors instead of int\n  ... Merge tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband\n\nPull main InfiniBand/RDMA updates from Roland Dreier:\n\n - add iWARP port mapper to avoid conflicts between RDMA and normal\n   stack TCP connections.\n\n - fixes for i386 / x86-64 structure padding differences (ABI\n   compatibility for 32-on-64) from Yann Droneaud.\n\n - a pile of SRP initiator fixes from Bart Van Assche.\n\n - fixes for a writeback / memory allocation deadlock with NFS over\n   IPoIB connected mode from Jiri Kosina.\n\n - the usual fixes and cleanups to mlx4, mlx5, cxgb4 and other low-level\n   drivers.\n\n* tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband: (61 commits)\n  RDMA/cxgb4: Add support for iWARP Port Mapper user space service\n  RDMA/nes: Add support for iWARP Port Mapper user space service\n  RDMA/core: Add support for iWARP Port Mapper user space service\n  IB/mlx4: Fix gfp passing in create_qp_common()\n  IB/umad: Fix use-after-free on close\n  IB/core: Fix kobject leak on device register error flow\n  RDMA/cxgb4: add missing padding at end of struct c4iw_alloc_ucontext_resp\n  mlx4_core: Fix GFP flags parameters to be gfp_t\n  IB/core: Fix port kobject deletion during error flow\n  IB/core: Remove unneeded kobject_get/put calls\n  IB/core: Fix sparse warnings about redeclared functions\n  IB/mad: Fix sparse warning about gfp_t use\n  IB/mlx4: Implement IB_QP_CREATE_USE_GFP_NOIO\n  IB: Add a QP creation flag to use GFP_NOIO allocations\n  IB: Return error for unsupported QP creation flags\n  IB: Allow build of hw/ and ulp/ subdirectories independently\n  mlx4_core: Move handling of MLX4_QP_ST_MLX to proper switch statement\n  RDMA/cxgb4: Add missing padding at end of struct c4iw_create_cq_resp\n  IB/srp: Avoid problems if a header uses pr_fmt\n  IB/umad: Fix error handling\n  ... Merge branch 'for-linus' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull slave-dmaengine updates from Vinod Koul:\n - new Xilixn VDMA driver from Srikanth\n - bunch of updates for edma driver by Thomas, Joel and Peter\n - fixes and updates on dw, ste_dma, freescale, mpc512x, sudmac etc\n\n* 'for-linus' of git://git.infradead.org/users/vkoul/slave-dma: (45 commits)\n  dmaengine: sh: don't use dynamic static allocation\n  dmaengine: sh: fix print specifier warnings\n  dmaengine: sh: make shdma_prep_dma_cyclic static\n  dmaengine: Kconfig: Update MXS_DMA help text to include MX6Q/MX6DL\n  of: dma: Grammar s/requests/request/, s/used required/required/\n  dmaengine: shdma: Enable driver compilation with COMPILE_TEST\n  dmaengine: rcar-hpbdma: Include linux/err.h\n  dmaengine: sudmac: Include linux/err.h\n  dmaengine: sudmac: Keep #include sorted alphabetically\n  dmaengine: shdmac: Include linux/err.h\n  dmaengine: shdmac: Keep #include sorted alphabetically\n  dmaengine: s3c24xx-dma: Add cyclic transfer support\n  dmaengine: s3c24xx-dma: Process whole SG chain\n  dmaengine: imx: correct sdmac->status for cyclic dma tx\n  dmaengine: pch: fix compilation for alpha target\n  dmaengine: dw: check return code of dma_async_device_register()\n  dmaengine: dw: fix regression in dw_probe() function\n  dmaengine: dw: enable clock before access\n  dma: pch_dma: Fix Kconfig dependencies\n  dmaengine: mpc512x: add support for peripheral transfers\n  ... Merge branch 'serge-next-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux-security\n\nPull security layer updates from Serge Hallyn:\n \"This is a merge of James Morris' security-next tree from 3.14 to\n  yesterday's master, plus four patches from Paul Moore which are in\n  linux-next, plus one patch from Mimi\"\n\n* 'serge-next-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux-security:\n  ima: audit log files opened with O_DIRECT flag\n  selinux: conditionally reschedule in hashtab_insert while loading selinux policy\n  selinux: conditionally reschedule in mls_convert_context while loading selinux policy\n  selinux: reject setexeccon() on MNT_NOSUID applications with -EACCES\n  selinux:  Report permissive mode in avc: denied messages.\n  Warning in scanf string typing\n  Smack: Label cgroup files for systemd\n  Smack: Verify read access on file open - v3\n  security: Convert use of typedef ctl_table to struct ctl_table\n  Smack: bidirectional UDS connect check\n  Smack: Correctly remove SMACK64TRANSMUTE attribute\n  SMACK: Fix handling value==NULL in post setxattr\n  bugfix patch for SMACK\n  Smack: adds smackfs/ptrace interface\n  Smack: unify all ptrace accesses in the smack\n  Smack: fix the subject/object order in smack_ptrace_traceme()\n  Minor improvement of 'smack_sb_kern_mount'\n  smack: fix key permission verification\n  KEYS: Move the flags representing required permission to linux/key.h Merge tag 'upstream-3.16-rc1-v2' of git://git.infradead.org/linux-ubifs\n\nPull UBIFS updates from Artem Bityutskiy:\n \"This contains several UBIFS fixes.  One of them fixes a race condition\n  between the mmap page fault path and fsync.  Another just removes a\n  bogus assertion from the UBIFS memory shrinker.\n\n  UBIFS also started honoring the MS_SILENT mount flag, so now it won't\n  print many I/O errors when user-space just tries to probe for the FS.\n\n  Rest of the changes are rather minor UBI/UBIFS fixes, improvements,\n  and clean-ups\"\n\n* tag 'upstream-3.16-rc1-v2' of git://git.infradead.org/linux-ubifs:\n  UBIFS: Add an assertion for clean_zn_cnt\n  UBIFS: respect MS_SILENT mount flag\n  UBIFS: Remove incorrect assertion in shrink_tnc()\n  UBIFS: fix debugging check\n  UBIFS: add missing ui pointer in debugging code\n  UBI: block: Fix error path on alloc_workqueue failure\n  UBIFS: Fix dump messages in ubifs_dump_lprops\n  UBI: fix rb_tree node comparison in add_map\n  UBIFS: Remove unused variables in ubifs_budget_space\n  UBI: weaken the 'exclusive' constraint when opening volumes to rename\n  UBIFS: fix an mmap and fsync race condition Merge tag 'for-f2fs-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, there is no special interesting feature, but we've\n  investigated a couple of tuning points with respect to the I/O flow.\n  Several major bug fixes and a bunch of clean-ups also have been made.\n\n  This patch-set includes the following major enhancement patches:\n   - enhance wait_on_page_writeback\n   - support SEEK_DATA and SEEK_HOLE\n   - enhance readahead flows\n   - enhance IO flushes\n   - support fiemap\n   - add some tracepoints\n\n  The other bug fixes are as follows:\n   - fix to support a large volume > 2TB correctly\n   - recovery bug fix wrt fallocated space\n   - fix recursive lock on xattr operations\n   - fix some cases on the remount flow\n\n  And, there are a bunch of cleanups\"\n\n* tag 'for-f2fs-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (52 commits)\n  f2fs: support f2fs_fiemap\n  f2fs: avoid not to call remove_dirty_inode\n  f2fs: recover fallocated space\n  f2fs: fix to recover data written by dio\n  f2fs: large volume support\n  f2fs: avoid crash when trace f2fs_submit_page_mbio event in ra_sum_pages\n  f2fs: avoid overflow when large directory feathure is enabled\n  f2fs: fix recursive lock by f2fs_setxattr\n  MAINTAINERS: add a co-maintainer from samsung for F2FS\n  MAINTAINERS: change the email address for f2fs\n  f2fs: use inode_init_owner() to simplify codes\n  f2fs: avoid to use slab memory in f2fs_issue_flush for efficiency\n  f2fs: add a tracepoint for f2fs_read_data_page\n  f2fs: add a tracepoint for f2fs_write_{meta,node,data}_pages\n  f2fs: add a tracepoint for f2fs_write_{meta,node,data}_page\n  f2fs: add a tracepoint for f2fs_write_end\n  f2fs: add a tracepoint for f2fs_write_begin\n  f2fs: fix checkpatch warning\n  f2fs: deactivate inode page if the inode is evicted\n  f2fs: decrease the lock granularity during write_begin\n  ... Merge branch 'for-next' of git://git.samba.org/sfrench/cifs-2.6\n\nPull CIFS fixes from Steve French.\n\n* 'for-next' of git://git.samba.org/sfrench/cifs-2.6:\n  CIFS: Fix memory leaks in SMB2_open\n  cifs: ensure that vol->username is not NULL before running strlen on it\n  Clarify SMB2/SMB3 create context and add missing ones\n  Do not send ClientGUID on SMB2.02 dialect\n  cifs: Set client guid on per connection basis\n  fs/cifs/netmisc.c: convert printk to pr_foo()\n  fs/cifs/cifs.c: replace seq_printf by seq_puts\n  Update cifs version number to 2.03\n  fs: cifs: new helper: file_inode(file)\n  cifs: fix potential races in cifs_revalidate_mapping\n  cifs: new helper function: cifs_revalidate_mapping\n  cifs: convert booleans in cifsInodeInfo to a flags field\n  cifs: fix cifs_uniqueid_to_ino_t not to ever return 0 Merge tag 'scsi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI updates from James Bottomley:\n \"This patch consists of the usual driver updates (qla2xxx, qla4xxx,\n  lpfc, be2iscsi, fnic, ufs, NCR5380) The NCR5380 is the addition to\n  maintained status of a long neglected driver for older hardware.  In\n  addition there are a lot of minor fixes and cleanups and some more\n  updates to make scsi mq ready\"\n\n* tag 'scsi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (130 commits)\n  include/scsi/osd_protocol.h: remove unnecessary __constant\n  mvsas: Recognise device/subsystem 9485/9485 as 88SE9485\n  Revert \"be2iscsi: Fix processing cqe for cxn whose endpoint is freed\"\n  mptfusion: fix msgContext in mptctl_hp_hostinfo\n  acornscsi: remove linked command support\n  scsi/NCR5380: dprintk macro\n  fusion: Remove use of DEF_SCSI_QCMD\n  fusion: Add free msg frames to the head, not tail of list\n  mpt2sas: Add free smids to the head, not tail of list\n  mpt2sas: Remove use of DEF_SCSI_QCMD\n  mpt2sas: Remove uses of serial_number\n  mpt3sas: Remove use of DEF_SCSI_QCMD\n  mpt3sas: Remove uses of serial_number\n  qla2xxx: Use kmemdup instead of kmalloc + memcpy\n  qla4xxx: Use kmemdup instead of kmalloc + memcpy\n  qla2xxx: fix incorrect debug printk\n  be2iscsi: Bump the driver version\n  be2iscsi: Fix processing cqe for cxn whose endpoint is freed\n  be2iscsi: Fix destroy MCC-CQ before MCC-EQ is destroyed\n  be2iscsi: Fix memory corruption in MBX path\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n \"A big update to the Atmel touchscreen driver, devm support for polled\n  input devices, several drivers have been converted to using managed\n  resources, and assorted driver fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input: (87 commits)\n  Input: synaptics - fix resolution for manually provided min/max\n  Input: atmel_mxt_ts - fix invalid return from mxt_get_bootloader_version\n  Input: max8997_haptic - add error handling for regulator and pwm\n  Input: elantech - don't set bit 1 of reg_10 when the no_hw_res quirk is set\n  Input: elantech - deal with clickpads reporting right button events\n  Input: edt-ft5x06 - fix an i2c write for M09 support\n  Input: omap-keypad - remove platform data support\n  ARM: OMAP2+: remove unused omap4-keypad file and code\n  Input: ab8500-ponkey - switch to using managed resources\n  Input: max8925_onkey - switch to using managed resources\n  Input: 88pm860x-ts - switch to using managed resources\n  Input: 88pm860x_onkey - switch to using managed resources\n  Input: intel-mid-touch - switch to using managed resources\n  Input: wacom - process outbound for newer Cintiqs\n  Input: wacom - set stylus_in_proximity when pen is in range\n  DTS: ARM: OMAP3-N900: Add tsc2005 support\n  Input: tsc2005 - add DT support\n  Input: add common DT binding for touchscreens\n  Input: jornada680_kbd - switch top using managed resources\n  Input: adp5520-keys - switch to using managed resources\n  ... Merge tag 'fbdev-omap-dt-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull OMAP DT fbdev updates from Tomi Valkeinen:\n \"Here are display related device tree data changes for OMAP.  They are\n  based on an already merged branch to satisfy the dependencies for the\n  dts file changes.\n\n  Add OMAP DT data:\n   - omap5 display subsystem\n   - display data for omap5 uEVM board\n   - am43xx display subsystem\n   - display data for am43xx ePOS and GP boards (LCD only)\n   - display data for GTA04 board\n   - display data for overo board\n   - display data for duovero-parlor board\n   - display data for omap3 evm and ldp boards\"\n\n* tag 'fbdev-omap-dt-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux:\n  ARM: omap5.dtsi: Add audio related parameters to hdmi node\n  ARM: omap4.dtsi: Add audio related parametes to hdmi node\n  ARM: dts: duovero-parlor: Add HDMI output\n  ARM: dts: overo: Add support for 3.5'' LCD output\n  ARM: dts: overo: Add support for 4.3'' LCD output\n  ARM: dts: overo: Add support for DVI output\n  ARM: dts: Add LCD panel sharp ls037v7dw01 support for omap3-evm and ldp\n  ARM: dts: omap3-gta04: Add display support\n  ARM: dts: omap5-uevm.dts: add display nodes\n  ARM: dts: omap5-uevm.dts: add tca6424a\n  ARM: dts: omap5.dtsi: add DSS nodes\n  ARM: dts: am43x-epos-evm: add LCD data\n  ARM: dts: am437x-gp-evm: add LCD data\n  ARM: dts: am4372.dtsi: add DSS information Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS updates from Ralf Baechle:\n - three fixes for 3.15 that didn't make it in time\n - limited Octeon 3 support.\n - paravirtualization support\n - improvment to platform support for Netlogix SOCs.\n - add support for powering down the Malta eval board in software\n - add many instructions to the in-kernel microassembler.\n - add support for the BPF JIT.\n - minor cleanups of the BCM47xx code.\n - large cleanup of math emu code resulting in significant code size\n   reduction, better readability of the code and more accurate\n   emulation.\n - improvments to the MIPS CPS code.\n - support C3 power status for the R4k count/compare clock device.\n - improvments to the GIO support for older SGI workstations.\n - increase number of supported CPUs to 256; this can be reached on\n   certain embedded multithreaded ccNUMA configurations.\n - various small cleanups, updates and fixes\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus: (173 commits)\n  MIPS: IP22/IP28: Improve GIO support\n  MIPS: Octeon: Add twsi interrupt initialization for OCTEON 3XXX, 5XXX, 63XX\n  DEC: Document the R4k MB ASIC mini interrupt controller\n  DEC: Add self as the maintainer\n  MIPS: Add microMIPS MSA support.\n  MIPS: Replace calls to obsolete strict_strto call with kstrto* equivalents.\n  MIPS: Replace obsolete strict_strto call with kstrto\n  MIPS: BFP: Simplify code slightly.\n  MIPS: Call find_vma with the mmap_sem held\n  MIPS: Fix 'write_msa_##' inline macro.\n  MIPS: Fix MSA toolchain support detection.\n  mips: Update the email address of Geert Uytterhoeven\n  MIPS: Add minimal defconfig for mips_paravirt\n  MIPS: Enable build for new system 'paravirt'\n  MIPS: paravirt: Add pci controller for virtio\n  MIPS: Add code for new system 'paravirt'\n  MIPS: Add functions for hypervisor call\n  MIPS: OCTEON: Add OCTEON3 to __get_cpu_type\n  MIPS: Add function get_ebase_cpunum\n  MIPS: Add minimal support for OCTEON3 to c-r4k.c\n  ... Merge tag 'arc-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc\n\nPull ARC updates from Vineet Gupta:\n \"Nothing too exciting here, just minor fixes/cleanup.  Only noteworthy\n  ones are:\n\n   - Moving cache disabling to early boot\n   - ARC UART enabled only if earlyprintk setup in cmdline\"\n\n* tag 'arc-v3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:\n  ARC: Disable caches in early boot if so configured\n  ARC: [arcfpga] Early ARC UART to be only activated by cmdline\n  ARC: [arcfpga] Get rid of legacy BVCI latency unit support\n  ARC: remove duplicate header exports\n  ARC: arc_local_timer_setup() need not pass own cpu id\n  ARC: Fixed spelling errors within comments\n  ARC: make start_thread() out-of-line\n  ARC: fix mmuv2 warning\n  ARC: [SMP] ISS SMP extension bitrot Merge tag 'trace-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing updates from Steven Rostedt:\n \"Lots of tweaks, small fixes, optimizations, and some helper functions\n  to help out the rest of the kernel to ease their use of trace events.\n\n  The big change for this release is the allowing of other tracers, such\n  as the latency tracers, to be used in the trace instances and allow\n  for function or function graph tracing to be in the top level\n  simultaneously\"\n\n* tag 'trace-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace: (44 commits)\n  tracing: Fix memory leak on instance deletion\n  tracing: Fix leak of ring buffer data when new instances creation fails\n  tracing/kprobes: Avoid self tests if tracing is disabled on boot up\n  tracing: Return error if ftrace_trace_arrays list is empty\n  tracing: Only calculate stats of tracepoint benchmarks for 2^32 times\n  tracing: Convert stddev into u64 in tracepoint benchmark\n  tracing: Introduce saved_cmdlines_size file\n  tracing: Add __get_dynamic_array_len() macro for trace events\n  tracing: Remove unused variable in trace_benchmark\n  tracing: Eliminate double free on failure of allocation on boot up\n  ftrace/x86: Call text_ip_addr() instead of the duplicated code\n  tracing: Print max callstack on stacktrace bug\n  tracing: Move locking of trace_cmdline_lock into start/stop seq calls\n  tracing: Try again for saved cmdline if failed due to locking\n  tracing: Have saved_cmdlines use the seq_read infrastructure\n  tracing: Add tracepoint benchmark tracepoint\n  tracing: Print nasty banner when trace_printk() is in use\n  tracing: Add funcgraph_tail option to print function name after closing braces\n  tracing: Eliminate duplicate TRACE_GRAPH_PRINT_xx defines\n  tracing: Add __bitmask() macro to trace events to cpumasks and other bitmasks\n  ... Merge branch 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup updates from Tejun Heo:\n \"A lot of activities on cgroup side.  Heavy restructuring including\n  locking simplification took place to improve the code base and enable\n  implementation of the unified hierarchy, which currently exists behind\n  a __DEVEL__ mount option.  The core support is mostly complete but\n  individual controllers need further work.  To explain the design and\n  rationales of the the unified hierarchy\n\n        Documentation/cgroups/unified-hierarchy.txt\n\n  is added.\n\n  Another notable change is css (cgroup_subsys_state - what each\n  controller uses to identify and interact with a cgroup) iteration\n  update.  This is part of continuing updates on css object lifetime and\n  visibility.  cgroup started with reference count draining on removal\n  way back and is now reaching a point where csses behave and are\n  iterated like normal refcnted objects albeit with some complexities to\n  allow distinguishing the state where they're being deleted.  The css\n  iteration update isn't taken advantage of yet but is planned to be\n  used to simplify memcg significantly\"\n\n* 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup: (77 commits)\n  cgroup: disallow disabled controllers on the default hierarchy\n  cgroup: don't destroy the default root\n  cgroup: disallow debug controller on the default hierarchy\n  cgroup: clean up MAINTAINERS entries\n  cgroup: implement css_tryget()\n  device_cgroup: use css_has_online_children() instead of has_children()\n  cgroup: convert cgroup_has_live_children() into css_has_online_children()\n  cgroup: use CSS_ONLINE instead of CGRP_DEAD\n  cgroup: iterate cgroup_subsys_states directly\n  cgroup: introduce CSS_RELEASED and reduce css iteration fallback window\n  cgroup: move cgroup->serial_nr into cgroup_subsys_state\n  cgroup: link all cgroup_subsys_states in their sibling lists\n  cgroup: move cgroup->sibling and ->children into cgroup_subsys_state\n  cgroup: remove cgroup->parent\n  device_cgroup: remove direct access to cgroup->children\n  memcg: update memcg_has_children() to use css_next_child()\n  memcg: remove tasks/children test from mem_cgroup_force_empty()\n  cgroup: remove css_parent()\n  cgroup: skip refcnting on normal root csses and cgrp_dfl_root self css\n  cgroup: use cgroup->self.refcnt for cgroup refcnting\n  ... Merge branch 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata updates from Tejun Heo:\n \"Nothing too interesting - another ahci platform driver variant,\n  additional controller support, minor fixes and cleanups\"\n\n* 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  ahci: Add Device ID for HighPoint RocketRaid 642L\n  ata: ep93xx: use dmaengine_prep_slave_sg api instead of internal callback\n  ahci: add PCI ID for Marvell 88SE91A0 SATA Controller\n  sata_fsl: remove check for CONFIG_MPC8315_DS\n  ahci: add support for Hisilicon sata\n  libahci_platform: add host_flags parameter in ahci_platform_init_host()\n  ata: ahci: append new hflag AHCI_HFLAG_NO_FBS\n  ata: use CONFIG_PM_SLEEP instead of CONFIG_PM where applicable in host drivers\n  ata: ahci_mvebu: new driver for Marvell Armada 380 AHCI interfaces\n  Documentation: dt-bindings: reformat and order list of ahci-platform compatibles\n  libata-sff: remove dead code\n  ata: SATL compliance for Inquiry Product Revision\n  pata_octeon_cf: use devm_kzalloc() to allocate cf_port Merge branch 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue updates from Tejun Heo:\n \"Lai simplified worker destruction path and internal workqueue locking\n  and there are some other minor changes.\n\n  Except for the removal of some long-deprecated interfaces which\n  haven't had any in-kernel user for quite a while, there shouldn't be\n  any difference to workqueue users\"\n\n* 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  kernel/workqueue.c: pr_warning/pr_warn & printk/pr_info\n  workqueue: remove the confusing POOL_FREEZING\n  workqueue: rename first_worker() to first_idle_worker()\n  workqueue: remove unused work_clear_pending()\n  workqueue: remove unused WORK_CPU_END\n  workqueue: declare system_highpri_wq\n  workqueue: use generic attach/detach routine for rescuers\n  workqueue: separate pool-attaching code out from create_worker()\n  workqueue: rename manager_mutex to attach_mutex\n  workqueue: narrow the protection range of manager_mutex\n  workqueue: convert worker_idr to worker_ida\n  workqueue: separate iteration role from worker_idr\n  workqueue: destroy worker directly in the idle timeout handler\n  workqueue: async worker destruction\n  workqueue: destroy_worker() should destroy idle workers only\n  workqueue: use manager lock only to protect worker_idr\n  workqueue: Remove deprecated system_nrt[_freezable]_wq\n  workqueue: Remove deprecated flush[_delayed]_work_sync()\n  kernel/workqueue.c: pr_warning/pr_warn & printk/pr_info\n  workqueue: simplify wq_update_unbound_numa() by jumping to use_dfl_pwq if the target cpumask equals wq's Merge branch 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull percpu updates from Tejun Heo:\n \"Nothing too exciting.  percpu_ref is going through some interface\n  changes and getting new features with more changes in the pipeline but\n  given its young age and few users, it's very low impact\"\n\n* 'for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:\n  percpu-refcount: implement percpu_ref_tryget()\n  percpu-refcount: rename percpu_ref_tryget() to percpu_ref_tryget_live()\n  percpu: Replace __get_cpu_var with this_cpu_ptr Merge tag 'for-linus-3.16-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/ericvh/v9fs\n\nPull 9p fixes from Eric Van Hensbergen:\n \"Two bug fixes, one in xattr error path and the other in parsing\n  major/minor numbers from devices\"\n\n* tag 'for-linus-3.16-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/ericvh/v9fs:\n  9P: fix return value in v9fs_fid_xattr_set\n  fs/9p: adjust sscanf parameters accordingly to the variable types Don't trigger congestion wait on dirty-but-not-writeout pages\n\nshrink_inactive_list() used to wait 0.1s to avoid congestion when all\nthe pages that were isolated from the inactive list were dirty but not\nunder active writeback.  That makes no real sense, and apparently causes\nmajor interactivity issues under some loads since 3.11.\n\nThe ostensible reason for it was to wait for kswapd to start writing\npages, but that seems questionable as well, since the congestion wait\ncode seems to trigger for kswapd itself as well.  Also, the logic behind\ndelaying anything when we haven't actually started writeback is not\nclear - it only delays actually starting that writeback.\n\nWe'll still trigger the congestion waiting if\n\n (a) the process is kswapd, and we hit pages flagged for immediate\n     reclaim\n\n (b) the process is not kswapd, and the zone backing dev writeback is\n     actually congested.\n\nThis probably needs to be revisited, but as it is this fixes a reported\nregression.\n\nReported-by: Felipe Contreras <felipe.contreras@gmail.com>\nPinpointed-by: Hillf Danton <dhillf@gmail.com>\nCc: Michal Hocko <mhocko@suse.cz>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Mel Gorman <mgorman@suse.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 updates from Ted Ts'o:\n \"Clean ups and miscellaneous bug fixes, in particular for the new\n  collapse_range and zero_range fallocate functions.  In addition,\n  improve the scalability of adding and remove inodes from the orphan\n  list\"\n\n* tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4: (25 commits)\n  ext4: handle symlink properly with inline_data\n  ext4: fix wrong assert in ext4_mb_normalize_request()\n  ext4: fix zeroing of page during writeback\n  ext4: remove unused local variable \"stored\" from ext4_readdir(...)\n  ext4: fix ZERO_RANGE test failure in data journalling\n  ext4: reduce contention on s_orphan_lock\n  ext4: use sbi in ext4_orphan_{add|del}()\n  ext4: use EXT_MAX_BLOCKS in ext4_es_can_be_merged()\n  ext4: add missing BUFFER_TRACE before ext4_journal_get_write_access\n  ext4: remove unnecessary double parentheses\n  ext4: do not destroy ext4_groupinfo_caches if ext4_mb_init() fails\n  ext4: make local functions static\n  ext4: fix block bitmap validation when bigalloc, ^flex_bg\n  ext4: fix block bitmap initialization under sparse_super2\n  ext4: find the group descriptors on a 1k-block bigalloc,meta_bg filesystem\n  ext4: avoid unneeded lookup when xattr name is invalid\n  ext4: fix data integrity sync in ordered mode\n  ext4: remove obsoleted check\n  ext4: add a new spinlock i_raw_lock to protect the ext4's raw inode\n  ext4: fix locking for O_APPEND writes\n  ... Merge tag 'llvmlinux-for-v3.16' of git://git.linuxfoundation.org/llvmlinux/kernel\n\nPull LLVM patches from Behan Webster:\n \"Next set of patches to support compiling the kernel with clang.\n  They've been soaking in linux-next since the last merge window.\n\n  More still in the works for the next merge window...\"\n\n* tag 'llvmlinux-for-v3.16' of git://git.linuxfoundation.org/llvmlinux/kernel:\n  arm, unwind, LLVMLinux: Enable clang to be used for unwinding the stack\n  ARM: LLVMLinux: Change \"extern inline\" to \"static inline\" in glue-cache.h\n  all: LLVMLinux: Change DWARF flag to support gcc and clang\n  net: netfilter: LLVMLinux: vlais-netfilter\n  crypto: LLVMLinux: aligned-attribute.patch Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 vdso build fix from Peter Anvin:\n \"This fixes building the vdso code on older Linux systems, and probably\n  some non-Linux systems\"\n\n* 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, vdso: Use <tools/le_byteshift.h> for littleendian access Merge branch 'next' (accumulated 3.16 merge window patches) into master\n\nNow that 3.15 is released, this merges the 'next' branch into 'master',\nbringing us to the normal situation where my 'master' branch is the\nmerge window.\n\n* accumulated work in next: (6809 commits)\n  ufs: sb mutex merge + mutex_destroy\n  powerpc: update comments for generic idle conversion\n  cris: update comments for generic idle conversion\n  idle: remove cpu_idle() forward declarations\n  nbd: zero from and len fields in NBD_CMD_DISCONNECT.\n  mm: convert some level-less printks to pr_*\n  MAINTAINERS: adi-buildroot-devel is moderated\n  MAINTAINERS: add linux-api for review of API/ABI changes\n  mm/kmemleak-test.c: use pr_fmt for logging\n  fs/dlm/debug_fs.c: replace seq_printf by seq_puts\n  fs/dlm/lockspace.c: convert simple_str to kstr\n  fs/dlm/config.c: convert simple_str to kstr\n  mm: mark remap_file_pages() syscall as deprecated\n  mm: memcontrol: remove unnecessary memcg argument from soft limit functions\n  mm: memcontrol: clean up memcg zoneinfo lookup\n  mm/memblock.c: call kmemleak directly from memblock_(alloc|free)\n  mm/mempool.c: update the kmemleak stack trace for mempool allocations\n  lib/radix-tree.c: update the kmemleak stack trace for radix tree allocations\n  mm: introduce kmemleak_update_trace()\n  mm/kmemleak.c: use %u to print ->checksum\n  ... Linux 3.15 Revert \"x86/smpboot: Initialize secondary CPU only if master CPU will wait for it\"\n\nThis reverts commit 3e1a878b7ccdb31da6d9d2b855c72ad87afeba3f.\n\nIt came in very late, and already has one reported failure: Sitsofe\nreports that the current tree fails to boot on his EeePC, and bisected\nit down to this.  Rather than waste time trying to figure out what's\nwrong, just revert it.\n\nReported-by: Sitsofe Wheeler <sitsofe@gmail.com>\nCc: Igor Mammedov <imammedo@redhat.com>\nCc: Toshi Kani <toshi.kani@hp.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nAcked-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'clk-for-linus-3.16' of git://git.linaro.org/people/mike.turquette/linux into next\n\nPull clock framework updates from Mike Turquette:\n \"The clock framework changes for 3.16 are pretty typical: mostly clock\n  driver additions and fixes.  There are additions to the clock core\n  code for some of the basic types (e.g. the common divider type has\n  some fixes and featured added to it).\n\n  One minor annoyance is a last-minute dependency that wasn't handled\n  quite right.  Commit ba0fae3b06a6 (\"clk: berlin: add core clock driver\n  for BG2/BG2CD\") in this pull request depends on\n  include/dt-bindings/clock/berlin2.h, which is already in your tree via\n  the arm-soc pull request.  Building for the berlin platform will break\n  when the clk tree is built on it's own, but merged into your master\n  branch everything should be fine\"\n\n* tag 'clk-for-linus-3.16' of git://git.linaro.org/people/mike.turquette/linux: (75 commits)\n  mmc: sunxi: Add driver for SD/MMC hosts found on Allwinner sunxi SoCs\n  clk: export __clk_round_rate for providers\n  clk: versatile: free icst on error return\n  clk: qcom: Return error pointers for unimplemented clocks\n  clk: qcom: Support msm8974pro global clock control hardware\n  clk: qcom: Properly support display clocks on msm8974\n  clk: qcom: Support display RCG clocks\n  clk: qcom: Return highest rate when round_rate() exceeds plan\n  clk: qcom: Fix mmcc-8974's PLL configurations\n  clk: qcom: Fix clk_rcg2_is_enabled() check\n  clk: berlin: add core clock driver for BG2Q\n  clk: berlin: add core clock driver for BG2/BG2CD\n  clk: berlin: add driver for BG2x complex divider cells\n  clk: berlin: add driver for BG2x simple PLLs\n  clk: berlin: add driver for BG2x audio/video PLL\n  clk: st: Terminate of match table\n  clk/exynos4: Fix compilation warning\n  ARM: shmobile: r8a7779: Add clock index macros for DT sources\n  clk: divider: Fix overflow in clk_divider_bestdiv\n  clk: u300: Terminate of match table\n  ... Merge tag 'vfio-v3.16-rc1' of git://github.com/awilliam/linux-vfio into next\n\nPull VFIO updates from Alex Williamson:\n \"A handful of VFIO bug fixes for v3.16\"\n\n* tag 'vfio-v3.16-rc1' of git://github.com/awilliam/linux-vfio:\n  drivers/vfio/pci: Fix wrong MSI interrupt count\n  drivers/vfio: Rework offsetofend()\n  vfio/iommu_type1: Avoid overflow\n  vfio/pci: Fix unchecked return value\n  vfio/pci: Fix sizing of DPA and THP express capabilities Merge git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6 into next\n\nPull crypto updates from Herbert Xu:\n \"Here is the crypto update for 3.16:\n\n   - Added test vectors for SHA/AES-CCM/DES-CBC/3DES-CBC.\n   - Fixed a number of error-path memory leaks in tcrypt.\n   - Fixed error-path memory leak in caam.\n   - Removed unnecessary global mutex from mxs-dcp.\n   - Added ahash walk interface that can actually be asynchronous.\n   - Cleaned up caam error reporting.\n   - Allow crypto_user get operation to be used by non-root users.\n   - Add support for SSS module on Exynos.\n   - Misc fixes\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6: (60 commits)\n  crypto: testmgr - add aead cbc des, des3_ede tests\n  crypto: testmgr - Fix DMA-API warning\n  crypto: cesa - tfm->__crt_alg->cra_type directly\n  crypto: sahara - tfm->__crt_alg->cra_name directly\n  crypto: padlock - tfm->__crt_alg->cra_name directly\n  crypto: n2 - tfm->__crt_alg->cra_name directly\n  crypto: dcp - tfm->__crt_alg->cra_name directly\n  crypto: cesa - tfm->__crt_alg->cra_name directly\n  crypto: ccp - tfm->__crt_alg->cra_name directly\n  crypto: geode - Don't use tfm->__crt_alg->cra_name directly\n  crypto: geode - Weed out printk() from probe()\n  crypto: geode - Consistently use AES_KEYSIZE_128\n  crypto: geode - Kill AES_IV_LENGTH\n  crypto: geode - Kill AES_MIN_BLOCK_SIZE\n  crypto: mxs-dcp - Remove global mutex\n  crypto: hash - Add real ahash walk interface\n  hwrng: n2-drv - Introduce the use of the managed version of kzalloc\n  crypto: caam - reinitialize keys_fit_inline for decrypt and givencrypt\n  crypto: s5p-sss - fix multiplatform build\n  hwrng: timeriomem - remove unnecessary OOM messages\n  ... Merge branch 'for-linus' of git://git.open-osd.org/linux-open-osd into next\n\nPull exofs raid6 support from Boaz Harrosh:\n \"These simple patches will enable raid6 using the kernel's raid6_pq\n  engine for support under exofs and pnfs-objects.\n\n  There is nothing needed to do at exofs and pnfs-obj.  Just fire your\n  mkfs.exofs with --raid=6 (that was already supported before) and off\n  you go as usual.  The ORE will pick up the new map and will start\n  writing two devices of redundancy bits.  The patches are so simple\n  because most of the ORE was already for the general raid case, only a\n  few bug fixes were needed and the actual wiring into the raid6_pq\n  engine\"\n\n* 'for-linus' of git://git.open-osd.org/linux-open-osd:\n  ore: Support for raid 6\n  ore: Remove redundant dev_order(), more cleanups\n  ore: (trivial) reformat some code Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs fix from Chris Mason:\n \"I had this in my 3.16 merge window queue, but it is small and obvious\n  enough for 3.15.  I cherry-picked and retested against current rc8\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: send, fix corrupted path strings for long paths Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target fixes from Nicholas Bellinger:\n \"Here are the remaining fixes for v3.15.\n\n  This series includes:\n\n   - iser-target fix for ImmediateData exception reference count bug\n     (Sagi + nab)\n   - iscsi-target fix for MC/S login + potential iser-target MRDSL\n     buffer overrun (Santosh + Roland)\n   - iser-target fix for v3.15-rc multi network portal shutdown\n     regression (nab)\n   - target fix for allowing READ_CAPCITY during ALUA Standby access\n     state (Chris + nab)\n   - target fix for NULL pointer dereference of alua_access_state for\n     un-configured devices (Chris + nab)\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  target: Fix alua_access_state attribute OOPs for un-configured devices\n  target: Allow READ_CAPACITY opcode in ALUA Standby access state\n  iser-target: Fix multi network portal shutdown regression\n  iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value()\n  iser-target: Add missing target_put_sess_cmd for ImmedateData failure Merge branch 'x86/urgent' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"A significantly larger than I'd like set of patches for just below the\n  wire.  All of these, however, fix real problems.\n\n  The one thing that is genuinely scary in here is the change of SMP\n  initialization, but that *does* fix a confirmed hang when booting\n  virtual machines.\n\n  There is also a patch to actually do the right thing about not\n  offlining a CPU when there are not enough interrupt vectors available\n  in the system; the accounting was done incorrectly.  The worst case\n  for that patch is that we fail to offline CPUs when we should (the new\n  code is strictly more conservative than the old), so is not\n  particularly risky.\n\n  Most of the rest is minor stuff; the EFI patches are all about\n  exporting correct information to boot loaders and kexec\"\n\n* 'x86/urgent' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/boot: EFI_MIXED should not prohibit loading above 4G\n  x86/smpboot: Initialize secondary CPU only if master CPU will wait for it\n  x86/smpboot: Log error on secondary CPU wakeup failure at ERR level\n  x86: Fix list/memory corruption on CPU hotplug\n  x86: irq: Get correct available vectors for cpu disable\n  x86/efi: Do not export efi runtime map in case old map\n  x86/efi: earlyprintk=efi,keep fix Merge branch 'akpm' (patches from Andrew Morton) into next\n\nMerge more updates from Andrew Morton:\n\n - Most of the rest of MM.\n\n   This includes \"mark remap_file_pages syscall as deprecated\" but the\n   actual \"replace remap_file_pages syscall with emulation\" is held\n   back.  I guess we'll need to work out when to pull the trigger on\n   that one.\n\n - various minor cleanups to obscure filesystems\n\n - the drivers/rtc queue\n\n - hfsplus updates\n\n - ufs, hpfs, fatfs, affs, reiserfs\n\n - Documentation/\n\n - signals\n\n - procfs\n\n - cpu hotplug\n\n - lib/idr.c\n\n - rapidio\n\n - sysctl\n\n - ipc updates\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (171 commits)\n  ufs: sb mutex merge + mutex_destroy\n  powerpc: update comments for generic idle conversion\n  cris: update comments for generic idle conversion\n  idle: remove cpu_idle() forward declarations\n  nbd: zero from and len fields in NBD_CMD_DISCONNECT.\n  mm: convert some level-less printks to pr_*\n  MAINTAINERS: adi-buildroot-devel is moderated\n  MAINTAINERS: add linux-api for review of API/ABI changes\n  mm/kmemleak-test.c: use pr_fmt for logging\n  fs/dlm/debug_fs.c: replace seq_printf by seq_puts\n  fs/dlm/lockspace.c: convert simple_str to kstr\n  fs/dlm/config.c: convert simple_str to kstr\n  mm: mark remap_file_pages() syscall as deprecated\n  mm: memcontrol: remove unnecessary memcg argument from soft limit functions\n  mm: memcontrol: clean up memcg zoneinfo lookup\n  mm/memblock.c: call kmemleak directly from memblock_(alloc|free)\n  mm/mempool.c: update the kmemleak stack trace for mempool allocations\n  lib/radix-tree.c: update the kmemleak stack trace for radix tree allocations\n  mm: introduce kmemleak_update_trace()\n  mm/kmemleak.c: use %u to print ->checksum\n  ... Merge branch 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux into next\n\nPull i2c updates from Wolfram Sang:\n \"I2C has the following updates for 3.16:\n\n   - major cleanups to the rcar and sh_mobile drivers\n   - removal of nuc900 driver which had a compile error for years\n   - usual bunch of driver updates, bugfixes and cleanups\"\n\n* 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux: (44 commits)\n  i2c: pca954x: Fix compilation without CONFIG_GPIOLIB\n  i2c: mux: pca954x: Use the descriptor-based GPIO API\n  i2c: mpc: insert DR read in i2c_fixup()\n  i2c: bfin: turn to Resource-managed API in probe function\n  i2c: Make of_device_id array const\n  i2c: remove unnecessary OOM messages\n  i2c: designware-pci: Add Haswell PCI IDs\n  i2c: designware: Add runtime PM hooks\n  i2c: designware: Disable device on system suspend\n  i2c: nuc900: remove driver\n  i2c: imx: update i2c clock divider for each transaction\n  i2c: imx: fix the i2c bus hang issue when do repeat restart\n  i2c: rcar: update copyright and license information\n  i2c: rcar: janitorial cleanup after refactoring\n  i2c: rcar: reuse status bits as enable bits\n  i2c: rcar: remove spinlock\n  i2c: rcar: refactor status bit handling\n  i2c: rcar: refactor setting up msg\n  i2c: rcar: check bus free before first message\n  i2c: rcar: refactor irq state machine\n  ... Merge tag 'mfd-for-linus-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd into next\n\nPull MFD updates from Lee Jones:\n \"Changes to existing drivers:\n   - increase DT coverage: arizona, mc13xxx, stmpe-i2c, syscon,\n     sun6i-prcm\n   - regmap use of and/or clean-up: tps65090, twl6040\n   - basic renaming: max14577\n   - use new cpufreq helpers: db8500-prcmu\n   - increase regulator support: stmpe, arizona, wm5102\n   - reduce legacy GPIO overhead: stmpe\n   - provide necessary remove path: bcm590xx\n   - expand sysfs presence: kempld\n   - move driver specific code out to drivers: rtc-s5m, arizona\n   - clk handling: twl6040\n   - use managed (devm_*) resources: ipaq-micro\n   - clean-up/remove unused/duplicated code: tps65218, sec, pm8921,\n     abx500-core, db8500-prcmu, menelaus\n   - build/boot/sematic bug fixes: rtsx_usb, stmpe, bcm590xx, abx500,\n     mc13xxx, rdc321x-southbridge, mfd-core, sec, max14577, syscon,\n     cros_ec_spi\n   - constify stuff: sm501, tps65910, tps6507x, tps6586x, max77686,\n     max8997, kempld, max77693, max8907, rtsx_usb, db8500-prcmu,\n     max8998, wm8400, sec, lp3943, max14577, as3711, omap-usb-host,\n     ipaq-micro\n\n  Support for new devices:\n   - add support for max77836 into max14577\n   - add support for tps658640 into tps6586x\n   - add support for cros-ec-i2c-tunnel into cros_ec\n   - add new driver for rtsx_usb_sdmmc and rtsx_usb_ms\n   - add new driver for axp20x\n   - add new driver for sun6i-prcm\n   - add new driver for ipaq-micro\"\n\n* tag 'mfd-for-linus-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (77 commits)\n  mfd: wm5102: Correct default for LDO Control 2 register\n  mfd: menelaus: Use module_i2c_driver\n  mfd: tps65218: Terminate of match table\n  mfd: db8500-prcmu: Remove check for CONFIG_DBX500_PRCMU_DEBUG\n  mfd: ti-keystone-devctrl: Add bindings for device state control\n  mfd: palmas: Format the header file\n  mfd: abx500-core: Remove unused function abx500_dump_all_banks()\n  mfd: arizona: Correct addresses of always-on trigger registers\n  mfd: max14577: Cast to architecture agnostic data type\n  i2c: ChromeOS EC tunnel driver\n  mfd: cros_ec: Sync to the latest cros_ec_commands.h from EC sources\n  mfd: cros_ec: spi: Increase cros_ec_spi deadline from 5ms to 100ms\n  mfd: cros_ec: spi: Make the cros_ec_spi timeout more reliable\n  mfd: cros_ec: spi: Add mutex to cros_ec_spi\n  mfd: cros_ec: spi: Calculate delay between transfers correctly\n  mfd: arizona: Correct error message for addition of main IRQ chip\n  mfd: wm8997: Add registers for high power mode\n  mfd: arizona: Add MICVDD to mapped regulators\n  mfd: ipaq-micro: Make mfd_cell array const\n  mfd: ipaq-micro: Use devm_ioremap_resource()\n  ... Merge branches 'topic/vsp1' and 'topic/adv76xx' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media into next\n\nPull updates and DT support for media engines from Mauro Carvalho Chehab.\n\nFor Analog Devices ADV7604 and the Renesas VSP1 video processing engines.\n\n* 'topic/vsp1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  [media] v4l: vsp1: Add DT support\n  [media] v4l: vsp1: Add DT bindings documentation\n  [media] v4l: vsp1: Add BRU support\n  [media] v4l: vsp1: Support multi-input entities\n  [media] v4l: vsp1: uds: Enable scaling of alpha layer\n  [media] v4l: vsp1: Remove unexisting rt clocks\n\n* 'topic/adv76xx' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (21 commits)\n  [media] adv7604: Add LLC polarity configuration\n  [media] adv7604: Set HPD GPIO direction to output\n  [media] adv7604: Add endpoint properties to DT bindings\n  [media] adv7604: Add DT support\n  [media] adv7604: Specify the default input through platform data\n  [media] adv7604: Support hot-plug detect control through a GPIO\n  [media] adv7604: Sort headers alphabetically\n  [media] adv7604: Replace *_and_or() functions with *_clr_set()\n  [media] adv7604: Store I2C addresses and clients in arrays\n  [media] adv7604: Inline the to_sd function\n  [media] v4l: subdev: Remove deprecated video-level DV timings operations\n  [media] adv7604: Remove deprecated video-level DV timings operations\n  [media] adv7604: Add pad-level DV timings support\n  [media] adv7604: Make output format configurable through pad format operations\n  [media] adv7604: Add sink pads\n  [media] adv7604: Remove subdev control handlers\n  [media] adv7604: Add adv7611 support\n  [media] adv7604: Cache register contents when reading multiple bits\n  [media] adv7604: Add 16-bit read functions for CP and HDMI\n  [media] adv7604: Don't put info string arrays on the stack\n  ... Merge tag 'iommu-updates-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu into next\n\nPull IOMMU updates from Joerg Roedel:\n \"The changes include:\n\n   - a new IOMMU driver for ARM Renesas SOCs\n\n   - updates and fixes for the ARM Exynos driver to bring it closer to a\n     usable state again\n\n   - convert the AMD IOMMUv2 driver to use the mmu_notifier->release\n     call-back instead of the task_exit notifier\n\n   - random other fixes and minor improvements to a number of other\n     IOMMU drivers\"\n\n* tag 'iommu-updates-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu: (54 commits)\n  iommu/msm: Use devm_ioremap_resource to simplify code\n  iommu/amd: Fix recently introduced compile warnings\n  arm/ipmmu-vmsa: Fix compile error\n  iommu/exynos: Fix checkpatch warning\n  iommu/exynos: Fix trivial typo\n  iommu/exynos: Remove invalid symbol dependency\n  iommu: fsl_pamu.c: Fix for possible null pointer dereference\n  iommu/amd: Remove duplicate checking code\n  iommu/amd: Handle parallel invalidate_range_start/end calls correctly\n  iommu/amd: Remove IOMMUv2 pasid_state_list\n  iommu/amd: Implement mmu_notifier_release call-back\n  iommu/amd: Convert IOMMUv2 state_table into state_list\n  iommu/amd: Don't access IOMMUv2 state_table directly\n  iommu/ipmmu-vmsa: Support clearing mappings\n  iommu/ipmmu-vmsa: Remove stage 2 PTE bits definitions\n  iommu/ipmmu-vmsa: Support 2MB mappings\n  iommu/ipmmu-vmsa: Rewrite page table management\n  iommu/ipmmu-vmsa: PMD is never folded, PUD always is\n  iommu/ipmmu-vmsa: Set the PTE contiguous hint bit when possible\n  iommu/ipmmu-vmsa: Define driver-specific page directory sizes\n  ... Merge tag 'renesas-sh-drivers-for-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas into next\n\nPull SH driver update from Simon Horman:\n\n - PM Runtime enhancements targeted for use with ARM-based Renesas R-Car\n   Gen2 SoCs\n\n - Restrict INTC_USERIMASK to SH4A as it is only used there\n\n* tag 'renesas-sh-drivers-for-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas:\n  drivers: sh: Enable PM runtime for new R-Car Gen2 SoCs\n  drivers: sh: pm_runtime implementation needs to suspend and resume devices\n  drivers: sh: Restrict INTC_USERIMASK to SH4A\n  drivers: sh: pm_runtime does not need idle callback Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux into next\n\nPull arm64 updates from Catalin Marinas:\n - Optimised assembly string/memory routines (based on the AArch64\n   Cortex Strings library contributed to glibc but re-licensed under\n   GPLv2)\n - Optimised crypto algorithms making use of the ARMv8 crypto extensions\n   (together with kernel API for using FPSIMD instructions in interrupt\n   context)\n - Ftrace support\n - CPU topology parsing from DT\n - ESR_EL1 (Exception Syndrome Register) exposed to user space signal\n   handlers for SIGSEGV/SIGBUS (useful to emulation tools like Qemu)\n - 1GB section linear mapping if applicable\n - Barriers usage clean-up\n - Default pgprot clean-up\n\nConflicts as per Catalin.\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (57 commits)\n  arm64: kernel: initialize broadcast hrtimer based clock event device\n  arm64: ftrace: Add system call tracepoint\n  arm64: ftrace: Add CALLER_ADDRx macros\n  arm64: ftrace: Add dynamic ftrace support\n  arm64: Add ftrace support\n  ftrace: Add arm64 support to recordmcount\n  arm64: Add 'notrace' attribute to unwind_frame() for ftrace\n  arm64: add __ASSEMBLY__ in asm/insn.h\n  arm64: Fix linker script entry point\n  arm64: lib: Implement optimized string length routines\n  arm64: lib: Implement optimized string compare routines\n  arm64: lib: Implement optimized memcmp routine\n  arm64: lib: Implement optimized memset routine\n  arm64: lib: Implement optimized memmove routine\n  arm64: lib: Implement optimized memcpy routine\n  arm64: defconfig: enable a few more common/useful options in defconfig\n  ftrace: Make CALLER_ADDRx macros more generic\n  arm64: Fix deadlock scenario with smp_send_stop()\n  arm64: Fix machine_shutdown() definition\n  arm64: Support arch_irq_work_raise() via self IPIs\n  ... Fix ARM merge mistake in mvebu board file\n\nRussell King points out that my ARM merge (commit eb3d3ec567e8) was\nbroken wrt the arch/arm/mach-mvebu/board-v7.c file, leaving in a stale\nl2x0_of_init() call (it's now handled by the DT description).\n\nWhich is kind of embarrassing, since I knew about it as it wasn't the\nonly file that had similar merge issues.  At least I got the other ones\nright.\n\nReported-by: Russell King <rmk@arm.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Four misc fixes: each was deemed serious enough to warrant v3.15\n  inclusion\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/fair: Fix tg_set_cfs_bandwidth() deadlock on rq->lock\n  sched/dl: Fix race in dl_task_timer()\n  sched: Fix sched_policy < 0 comparison\n  sched/numa: Fix use of spin_{un}lock_irq() when interrupts are disabled Fix 32-bit overflow in Divesoft Freedom time handling\n\nCommit 31fb2e4c62ab (\"Avoid possible sign extension\") handled the\nproblem when a \"unsigned char\" is shifted 24 bits left, and becomes a\n\"signed int\".  By casting the result to uint32_t, that signed case won't\nhappen.\n\nHowever, there were two bugs in that fix.\n\nThe first is the comment.  It's not that \"timestamp_t\" is signed that is\nthe problem.  No, the problem is inherent in the C expression\n\n    (ptr[11] << 24)\n\nwhere \"ptr[11]\" is an unsigned char.  In C arithmetic, unsigned char is\nimplicitly type-expanded to \"int\", so while it has a value between\n0..255, when you shift it left by 24, you can get a *negative* \"int\" as\na result.\n\nSo it's actually \"ptr[11]\" that should have been cast to \"unsigned\", but\nit so happens that you can do all the shifting and adding in \"int\", and\nthen cast the end result to \"uint32_t\" and you'll get the same value.\nBut at no point did \"timestamp_t\" matter.\n\nThe other bug was pre-existing and just not fixed.  When the code does\nthe \"+ 946684800\" (to turn the timestamp to be seconds from the start of\n2000, into seconds since the \"unix epoch\", ie 1970) that arithmetic is\nnow done in that \"uint32_t\" (and used to be done in \"int\").\n\nWhich means that the addition can overflow in 32 bits *before* it is\ncast to timestamp_t (which is 64 bits).\n\nAdmittedly that 32-bit overflow happens a bit later than the sign bit\ngets set, but if we're worried aboout overflows, let's just do this\nright.\n\nIn other words, we have a 32-bit unsigned offset since Jan 1, 2000, and\nfor the full range we need to do the epoch correction in 32 bits.\nBecause otherwise you fail in the year 2106 (32-bit unsigned unix epoch\ntime limit), even though the 32-bit seconds *should* work all the way\nuntil the year 2136.\n\nOf course, I'll be rather surprised if people still use the Divesoft\nFreedom in the year 2106.  Or rather, I won't be surprised, because I'll\nbe dead.\n\nBut if we think that the signed problem matters (in the year 2068), then\ndammit, we can extend it another 30 years.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support to \"split\" a dive with surface time in the middle\n\nRight now this requires that\n\n (a) the dive have only one divecomputer associated with it.\n\n     Trying to split a dive with multiple dive computers would be *much*\n     harder to do, since you'd have to try to line up the surface\n     interval between computers etc.  So just don't do it after\n     downloading multiple dive computers for the same dive.\n\n (b) there must be at least one minute between the sample that came up\n     to the surface and the sample that goes down again.\n\n     If you just peeked your head above the surface, don't try to split\n     things into two dives.  Maybe we can relax this for freediving or\n     something.\n\nalso note that the split dive will only get new numbering if the dive\nthat was split was the very last dive in the divelist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make add_single_dive() grow the divelist allocation if necessary\n\nWe only made sure the divelist allocation was big enough in\n\"record_dive_to_table()\", but add_single_dive() can add entries too.\n\nNow, in practice that never bit anybody, since\n\n (a) we allocate extra entries anyway, and it would be very unusual that\n     the divelist table was exactly full\n\n (b) most \"malloc()\" implementations end up having their own slop on top\n     of that\n\n (c) add_single_dive() was only used for merging dives, which actually\n     ends up removing more divex than it adds (but it does add one first)\n\nbut when I'm starting to split dives, this will be a bigger issue in\npractice.  And it was wrong.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use surface sample data for cylinder beginning/end\n\npressure\n\nAt the beginning of the dive, let the cylinder cool down if the diver\nstarts off at the surface.  And at the end of the dive, there may be\nsurface pressures where the diver has already turned off the air supply\n(especially for computers like the Uemis Zurich that end up saving quite\na bit of samples after the dive has ended).\n\nSo just don't use surface samples to populate the beginning/ending\ncylinder pressure data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be much more careful about merging dives\n\nThis patch changes the dive merging to be much more careful about\nthings, because it turns out that we had several small oddities that\ncaused big merge issues.\n\nThe oddities are:\n\n - the dive \"duration\" is actually how long we spend under water.\n\n   But that means that when we do \"dive->when + dive.duration.seconds\"\n   to calculate the end of the dive, that is nonsensical if you came up\n   to the surface in the middle of a dive.\n\n   Now, normally you don't see profiles like that, but once you start\n   merging dives together, it can go from \"small detail\" to \"dominant\n   factor\".\n\n - We have two different cases of merging: the automatic \"merge new dive\n   computer download if it looks like the same dive\" (which always has a\n   merge offset of 0, since we merge it as a new dive computer) and the\n   \"merge two different dives into one longer dive.\n\n   The code assumed that it could look at the \"downloaded\" flag for the\n   dive to check one or the other, but that doesn't really work.\n   Reading a dive from an XML file isn't any different from downloading\n   it.\n\n   So we need to change the logic to determine what kind of merge it is\n   to actually check the passed-in time offset.\n\nWith this, Stuart Vernon's test-case of eight dives with short surface\nintervals in between end up merging correctly into one dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nReported-by: Stuart Vernon <stuartv@force2.net>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix plot entry creation\n\nThis was originally triggered by an odd merge of two dives that should\nhave been the same, but that showed a corner case where the plot entry\ncreation could create broken results that violated our assumptions about\ntime stamps being monotonous.\n\nWhen setting up the plot entries we create surface entries at the\nbeginning and end. We then fill in the plot entries between them based on\nthe samples from the dive computer plus our own interpolation (so we have\none entry at least every ten seconds). The loop ends when we are out of\nspace - which in this instance caused us to exit before updating the\nmaxtime and therefore the final plot entries having time stamps that were\nsmaller than the last entry filled in by the inner loop.\n\nThis patch makes sure we have enough space in the plot entry structure and\nmoves the exit from the inner loop until after we have updated the\nmaxtime.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Uemis downloader: start downloading using the correct dive ID\n\nThe logic to pick the initial dive ID for the uemis downloader was very\nconfused, and did not work at all when restarting a download when the\nUemis filled up, and the \"Force download all dives\" flag was set.  It\nalso required a rather odd Uemis-specific callback from the download UI\nbecause of how it picked the initial ID.\n\nThis changes the logic to just look at the list of downloaded dives when\nrestarting, which simplifies the logic a lot, gets rid of the odd\nspecial callback, and also means that the whole \"Force download\" issue\njust goes away.  It seems to work now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Uemis downloader: avoid NULL pointer dereference\n\nThe Uemis downloader blindly just did a strstr on 'nds->name', even if\nthere wasn't necessarily a dive location at all.\n\nAdd the proper NULL pointer checks.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix divecomputer nickname handling\n\nDon't overwrite existing data.\n\n[Dirk Hohndel: rewrote this a litte, but the logic is the same]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: fix crash with no remote\n\nCommit e21cae2d46db (\"Cloud storage: sync the remote after save\") broke\nregular git saving without any remotes: it would never initialize the\n\"remote\" pointer, and then use that uninitialized remote pointer to see\nif it was a cloud storage remote that it should try to sync.\n\nFix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: actually update the remote repository if the local cache is more recent\n\nAgain, note that this currently only happens when you initially open the repository.\n\nSo if you do\n\n    subsurface https://.../repo[myubranch]\n\nit will start up by fetching the remote information, and updating the\nlocal cache.  If you then download new dives, and do a save-and-exit, it\nwill save to the local cache, but it doesn't do the fetch at this point,\nso the remote is now begind.\n\nThe *next* time you start subsurface, and load that git branch again, it\nwill fetch the remote, and now notice that the local cache is ahead of\nit (because you downloaded new dives and saved them locally), and *then*\nit will try to update the remote with the new information.\n\nThis is obviously bogus, but we will need to decide exactly how we want\nto sync with the remote repository.  But now the core functionality is\nthere, it's just that we need some interface to say \"sync now\".\nEspecially in the face of spotty (or non-working) internet, you want a\nGUI etc for this whole remote sync, rather than doing it unconditionally\nand silently whenever you load the local cache initially.\n\nWith that caveat:\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: re-organize code to make 'origin' remote more widely available\n\nI'm going to try to update the remote if the local cache is more recent\nwhen we fetch the data, which requires access to the remote over a wider\nrange of code.  This re-organizes the code so that we can free the\nremote later without having to have nasty error handling.\n\nWe avoid the whole \"if an error happened, free the remote and return\" by\ncreating helper functions and freeing the remote in the caller, so that\nall paths end up freeing it naturally.\n\nNOTE! We want to try to update the remote when we save the local cache\ntoo, so this whole \"update remote when opening it\" is incomplete. But\n (a) we do want to do it here as well\nand\n (b) this is the easiest place to create the initial \"push to remote\"\n     code without any new \"sync with cloud\" interfaces.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git storage: actually update cached copy from remote\n\nWe used to fetch the remote information but not actually do anything\nabout it, except report when it wasn't up-to-date.\n\nNow we actually update the local cached copy if the remote has changed.\n\nThe code does not try to actually merge things, so only fast-forward\nupdates are done, but that should be the normal case.  We might\neventually do some simple merging on our own, but I suspect manual\nmerging may be the safer option.\n\nWe don't currently ever update the remote repository, and only inform\nusers that our local repository is ahead of the remote.  Fixing that is\nthe next step.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix initial scrolling problem\n\nThe initial selection change signal seems to potentially be sent\nbefore the listview is even visible when we do the first \"scrollTo()\"\nto the currently selected dive.\n\nThat, in turn, seems to result in that when the listview is actually\nshown, it will be scroll the trip description off the visible area,\nand force the current dive to be shown at the very top of the\ndivelist. Which is not very nice: we do want to scroll to the current\ndive, but we don't want to hide the current trip in the process.\n\nIgnoring the selection change if the listview isn't even visible seems\nto fix things for me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove unnecessary use of non-portable 'mkdir()'\n\nThis fixes the problem with Windows being the usual non-POSIX PoS that it is..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start parsing remote git repository addresses\n\nThis doesn't really usefully work, but I'm committing it to have git\ndiff and history.  It also insanely hardcodes the git-repo cache\ndirectory, because right now it's purely useful for development.\n\nThe big missing pieces are:\n\n - progress information\n - credential callbacks not implemented\n\nwhere the first one makes the user interface horrible (long delays with\nnothing visibly going on), and the second one makes ssh logins etc not\nwork.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-access: use the new format_string helpers\n\nIt may be a bit less efficient to use a printf-style interface rather\nthan the explicit malloc and memcpy, but the code ends up simpler and\nmore readable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start splitting out git repo helper routines\n\nThis doesn't actually change any code, but it moves the 'is_git_repo()'\nfunction that is used by both loading and saving into a new git-access.c\nfile.\n\nThis is where I'll start doing remote repo syncing too. Knock wood.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add 'system_default_directory()' helper function\n\nThis is just a extern \"C\" wrapper around QStandardPaths::AppDataLocation,\nwhile also making sure the entry exists.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> membuffer: add helper functions to return regular C strings\n\nThe whole \"create a string using a printf-like interface\" thing is\npretty common, and most users then don't necessarily want to deal with\nthe membuffer interfaces around it.\n\nSo this just creates trivial wrappers to do this, so that you can do\n\n    s = format_string(\"%d: %s\\n\", i, str);\n\nor similar things.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Extend SAMPLE_EVENT_GASCHANGE2 to have cylinder index in 'flags' field\n\nA value of zero (which is the normal legacy one) remains \"unknown\", but\nthe divecomputer backend can now give both gasmix and cylinder number\nthis way.\n\nCurrently only the EON Steel backend does that, but it should be easy\nenough to extend others too.\n\nAlso, fix the user-visible cylinder numbering in the cylinder change\ntooltip to use a human-friendlier one-based numbering (ie first cylinder\nis \"cyl 1\", not \"cyl 0\")\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix gaschange tooltip information\n\nThe code tried to look up the cylinder index from the Qt data models,\nwhich was not only horribly confusing, but was also buggy.  I think the\nindex ends up being off by one when the first cylinder change is hidden\n(because it's at the beginning of the dive), but I can't make heads or\ntails of that crazy code, so there might be something else going on.\n\nJust remove all the crazy code, and use the event data directly.  Which\ngas the gasmix and the (potential) explicit cylinder index already.\nIt's much more straightforward, and it just automatically gets the right\nend result whether some other event is hidden or not.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save format: Don't save redunant temperature sample data\n\nThe git sample loader will fill in temperature data from the previous\nentry anyway, so saving repeated temperatures is just wasteful.\n\nIt turns out that commit 6cf3787a0ed1 (\"Remove code that zeroes out\nduplicate oxygen sensor and temperature values\") removed the explicit\nredundant temperature removal in the dive fixup, which had hidden this\nissue.\n\nCc: willem ferguson <willemferguson@zoology.up.ac.za>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the new DC_FIELD_STRING callback if it exists\n\nThis recognizes recognize some strigns (serial number and firmware\nversion), and the ones that it doesn't recognize it adds as extra data\nusing Dirk's new interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Display dive duration in dive list in whole minutes\n\nThe whole \"duration in seconds\" is being way too OCD about the\ninformation, and just makes it harder to read.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dc nickname helper function\n\nThis helper function is used to get a nickname for a dive computer, when\nthe model information on its own may be ambiguous (ie there may be\nmultiple dive computers of the same model, and we've nicknamed them by\nowner).\n\nHowever, the helper did completely the wrong thing if it didn't find a\ndive computer entry at all due to a missing device ID - it would just\nreturn empty.  Which is bogus: it should return the model name, the same\nway it does if the nickname is missing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make it possible to have samples without depth from libdivecomputer\n\nNormally, all samples have depths associated with them, and most dive\ncomputers likely don't even have the concept of a sample without a depth.\n\nHowever, the new Suunto EON Steel definitely has samples with just time\nupdates (and perhaps other data, like events) and no depth at all.  We\nget unhappy about that, and interpret it as having a zero depth.  Which\ndoesn't look very nice.\n\nThis just makes all samples default to the same depth as the previous\nsample.  For normal samples with a depth value, that will just override\nthat default.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start sanitizing gaschange event information\n\nDecode the gasmix data into a sane format when creating the event, and\nadd the (currently unused) ability to specify a gas change to a\nparticular cylinder rather than (or in addition to) the gasmix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Teach uemis downloader about downloading into private trips\n\nNow that we pass in the full device_data_t information, we can look at\nthe \"create_private_dive\" flag and decide just how to record newly\ndownloaded dives properly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Pass the whole 'device_data_t' to the uemis downloader\n\nNot only does it make it look more like the libdivecomputer downloaders,\nbut the uemis downloader needs it in order to support all the flags we\nhave.  Notably \"download into private trip\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add \"download into private trip\" dialog checkmark\n\nThis adds a checkbox for the divecomputer download dialog that allows you\nto tell the download to put the newly downloaded dives into a trip of\ntheir own. That in turn will disable the dive merging with any existing\ndives, which means that you will not mix up your newly downloaded dives\nwith any old dives.\n\nThat, in turn, is very convenient of you know that some of the dives were\ndone by other divers (or from testing that happened during servicing etc),\nor the dive dates etc were wrong because the dive computer date had reset\ndue to battery changes etc.\n\nOnce you have all the dives in a private trip of their own, you can then\nfix them up (delete dives you don't want to merge etc), and then after all\nthe data is ok you might want to merge the cleaned-up results with\nprevious trips etc, and then manually ask subsurface to merge the dives or\nwhatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make gas use statistics be coherent and more complete\n\nThe gas use logic in the dive statistics page is confused.\n\nThe SAC case had a special case for \"unknown\", but only for\nthe first gas. Other gases had the normal empty case.\n\nAlso, the logic was really odd - if you had gases that weren't used (or\npressures not known) intermixed with gases you *did* have pressure for,\nthe statistics got really confused.\n\nThe list of gases showed all gases that we know about during the dive,\nbut then the gas use and SAC-rate lists wouldn't necessarily match,\nbecause the loops that computed those stopped after the first gas that\ndidn't have any pressure change.\n\nTo make things worse, the first cylinder was special-cased again, so it\nall lined up for the single-cylinder case.\n\nThis makes all the cylinders act the same way, leaving unknown gas use\n(and thus SAC) just empty for that gas.\n\nIt also fixes the SAC calculation case where we don't have real samples,\nand the profile is a fake profile - possibly with gas changes in between\nthe fake points. We now make the SAC calculations match what we show -\nwhich is admittedly not at all necessarily what the dive was, but at\nleast we're consistent.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show gaschange events at the beginning of a dive\n\nThe initial gas change event is really special - it just specifies the gas\nmix from the dive computer. So don't show it as an event if that already\nmatches the initial gas.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse git-format picture data\n\nThis adds the loading of picture data from git repositories too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-format: save dive picture data\n\nThis doesn't actually parse the data at load time yet, but I need a save\nfile to do that..\n\nThe diff looks larger than it is because this moves the \"mktree()\"\nfunction up earlier to be used by the picture saving code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make parse-xml callbacks be type-safe\n\n.. and fix the type breakage brought in by commit eaf6d564874a (\"CCR code:\nChange to sample structure\")\n\nThe XML parsing callbacks pass a \"void *\" around, because the helper\nfunction that matches the XML node names (\"match()\") does so for all the\ndifferent dive/sample/dc member nodes that all have different types.\n\nBut that also hid the fact that it very much depended on the various types\nbeing regular \"int\" etc, rather than the denser types that were introduced\nso that the CCR data wouldn't expand memory use excessively. As a result,\nXML loading would overwrite other members, and possibly even the\nallocation, when it wrote an \"int\" value to something that only was a\n8-bit allocation.\n\nI left the \"utf8_string()\" without type checking - so it still uses\n\"void *_res\" for the result type, with the cast happening inside the\nfunction.\n\nThat's because the result destination ends up being a bit mixed-up wrt\n\"const char **\" and just plain \"char **\". Note that the thing we modify\nitself isn't const (it's not \"char *const *\"), but the pointer, but we\nbasically sometimes assign a \"const char *\", and sometimes a \"char *\".\n\nI considered making two different versions of the callback, but it just\nwasn't worth it. So \"utf8_string()\" users still aren't type-checked, and\nyou'd better give it a pointer to something that is some kind of \"char *\"\n\nThis patch doesn't really change the calling convention of the matching\nfunction itself, but it makes the wrapper macro (\"MATCH()\") take a\nproperly type-checked function pointer instead (with a dummy call to do\ntype checking), and then casts the pointer to the \"void *\" type for the\nactual real call.\n\nThe function pointer call is not really portable (although it works on\nall sane architectures, particularly since the cast only changes one\nargument from one type of pointer to another), and to make matters worse\nuses the gcc statement-expression extension. But all the compilers we use\nseem to support that gcc'ism, so in practice this gives us type-safety\nwith no downsides.\n\n(If we ever want to use MSVC to compile subsurface, I suspect we'll have\nto ifdef out the statement expression use and not type-check things. Or\nperhaps re-write the thing as a ternary expression instead, or something).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make bigger steps when calculating TTS\n\n[Dirk Hohndel: this was sent ages ago and in all the discussions about the\n               implications I apparently never applied this]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive water temperature XML parsing\n\nWe parsed it rigth for dive computers, but not for the manually filled\nper-dive case. The git save seems to have gotten it right.\n\nI think this has been broken since the whole \"move as much as possible to\nthe dive computer sections\", but I didn't actually check.\n\nReported-by: roberto forini <forini.r@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create simple non-thread-safe \"gasname()\" function\n\nEvery single user of the get_gas_name() function wanted to just use the\nresult to create a message or printout, and that made the interface a bit\ncumbersome.\n\nThis adds a \"gasname()\" wrapper that returns a static buffer with the\nresult in it, which is neither pretty nor thread-safe, but is a much\nsimpler interface to work with.\n\nOur dive planning isn't multi-threaded, so nothing should care.\n\n[ This also converts a few open-coded gasname debug printouts to use the\n  helper function, resulting in prettier printouts and less code ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the last 'diveid' when merging dives for one dive computer\n\nWhen we merge two dives into the same dive because a divecomputer had\nincorrectly considered it two separate dives (due to surface time within\nthe dive) we should pick the dive ID from the later dive to be the\ndiveid of the resulting merged dive.  Otherwise we might re-download the\n(now merged) partial dive.\n\nThis is a rather unusual special case, but it actually hit me with the\nUemis on my last dive in Palau: Chandelier Cave has multiple surface\npoints where you can spend time admiring the cave above water, and the\nUemis (but not my Suunto's) decided that the dive was actually four\nshort dives back-to-back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: add list of dive computers to the commit message\n\nThis makes it much more obvious what is going on when you save in\nbetween importing multiple dive computers, since the last dive\ndescription otherwise stays the same.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git load: initialize dive computer timestamp and duration from dive\n\nWe don't save the dive computer timestamp and duration if they match the\ndive timestamp and duration.  But that means that on loading, we need to\ndefault the dive computer time/duration to the dive one.  If they\ndiffer, the loading of the divecomputer file will then override the\ndefault timestamp/duration.\n\nThis mainly matters if a later dive merge then changes the timestamp of\nthe dive: the dive computer timestamp needs to have been set correctly\nand not change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Mark new dives \"downloaded\" when importing new dives\n\nWe used to do this just for dive computer downloads, but we should do it\nfor all imports, so that merging new import data always does the\nexpected thing: any new dive computers will be added to the end of the\nlist of preexisting dives, rather than the other way around.\n\n(Of course, if you set the \"prefer downloaded\" flag, that reverses this\nlogic, and makes the newly imported dive computer data be the primary\ndive computer.  That flag is currently only exported for dive computer\ndownloads, not for imports).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: don't crash if the last dive isn't in a trip\n\nThe git save tries to generate a nice commit message based on the most\nrecent dive, but stupidly didn't check whether that dive was in a trip\nor not, and unconditionally used the trip pointer to see if there was a\ntrip location.\n\nWhich works well enough if you always generate trips, but is an\nunmitigated disaster otherwise.  Oops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use locale for git save format\n\nI stupidly used \"weekday()\" without realizing we localize it. And we\nreally don't want to make save formats be localized (we don't localize\ndecimal numbers etc either).\n\nThis fixes the git save format to just use a hardcoded weekday list.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix git loading of odd locales\n\nThis should make git loading be able to load git saves with arbitrary\nweekday names. Even strange German ones.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When scrolling to dive, scroll to trip first\n\nThe behavior at startup is actually very annoying: we select the latest\ndive, and expand the trip it is in, but since we use \"scrollTo()\" on\njust the dive, and it's not initially visible, the startup will make the\nfirst dive be at the top of the list view.\n\nWhich means that the actual _trip_ detail is not visible at all, since\nit will have been scrolled off the list view entirely.\n\nFix this by first scrolling to the trip, and only then scrolling to the\nactual dive (using the default \"EnsureVisible\" policy).  Obviously, if\nit's a trip with lots of dives, scrolling to the dive may end up\nscrolling away from the trip header again, but at least that never\nhappens at startup, and at that point you have to scroll away from the\ntrip just to show the dive.\n\nDo this same dance when changing the dive selection (mainly noticeable\nwhen picking dives on the globe view).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> make git save commit messages more informative\n\nInstead of just having \"Created by subsurface <version>\", put the number\nof dives and the location of the last dive in the message.  That makes\nthings like \"gitk\" show a much more useful view of what actually got\nsaved.\n\nWe still save the subsurface version in the body of the message, because\nthat is interesting and relevant information.  It's just not the\n*primary* relevant information.\n\nAnyway, with this, a git commit message might looke something like\n\n    dive 474: North West Point (Christmas Island)\n\n    Created by subsurface 4.0.96-17-g649e9ed89d9d\n\nwhich is much more relevant for the common case of adding new dives at\nthe end.\n\nOf course, if the reason for the save is that you edited old dives, the\nrelevance of the commit message telling you the number of dives you have\nin the log and the dive number is questionable.  But then you have to\nlook at the actual diff to see what's going on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't calculate SAC-rates for negative pressure changes\n\nThey happen - maybe the cylinder actually warmed up, or maybe the user\nentered just a ending pressure without a starting pressure.  Regardless,\njust ignore cylinder pressure changes that go up.\n\nAlso ignore cylinders with a zero ending pressure: that's really a\n*missing* pressure rather than an actual zero pressure.  As Dirk says,\nthe scuba regulators don't even work without a healthy positive pressure\ndifferential, so even when you breathe down a tank to \"empty\", it won't\nbe at zero pressure (this is true even with gauge pressure, where zero\nmeans \"atmospheric pressure\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: improve commit authorship data\n\nWe used to always just commit as \"subsurface@hohndel.org\" because\nlibgit-19 doesn't have the interfaces to do user name lookup.  This does\nbetter if you have libgit-20, using \"git_signature_default()\" to get the\nactual user that does the saving.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix crash with libgit when it's compiled with GIT_THREADS\n\nCall git_threads_init() before using libgit functions.\n\nThe documentation says:\n\n\"If libgit2 has been built with GIT_THREADS on, this function must\n be called once before any other library functions.\n\n If libgit2 has been built without GIT_THREADS support, this function\n is a no-op\"\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git object store: make it possible to work with checked-out git branches\n\nThis makes the git object save logic also check out the changes in the\nworking tree and index if the branch we save to is checked out.  It used\nto be that we would just update the object store (and the branch ref, of\ncourse), but leave any checked-out state untouched.\n\nNote that if the working directory is dirty (ie you have made changes by\nhand and not committed them), the checkout will skip any dirty files and\nreport it as a warning to the user.  However, the save still succeeds\n(since the _real_ save goes to the backing store).\n\nNOTE NOTE NOTE! Both loading and saving very fundamentally work on the\ngit object store level, and if you are working with a checked-out branch\nand make modifications to the working tree, saving will not touch those\ndirty files (so that you can try to recover your edits manually in the\nworking tree), but it's worth pointing out that subsufrace loading state\nwill totally ignore the working tree.\n\nSo the only way to make subsurface *see* your changes is to commit them.\nHaving edited state checked out in the working tree will only confuse\nyou when subsurface first ignores it on reading, and then refuses to\ntouch the checked-out state on writing.\n\nPut another way: working with a checked-out branch is now _possible_,\nbut you need to be aware of the limitations.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be more careful about dive computer selection\n\nThe selection logic was a bit random: some places would return NULL if\nthe dive computer index was out of range, others would return the\nprimary dive computer, and actually moving between dive computers would\njust blindly increment and decrement the number.\n\nThis always selects the primary computer if the index is out of bounds,\nand makes sure we stay in bound when switching beteen dive computers\n(but switching between dives can then turn an in-bound number into an\nout-of-bounds one)\n\nFixes #464\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improved handling of git syntax names with no git repository\n\nThis makes \"is_git_repository()\" return non-NULL for all file names that\nmatch the git name pattern, even if we don't find an actual git\nrepository there.  That way, we won't fall back to writing out an XML\nfile with an odd filename.\n\nIf there is no actual git repository, we return a special invalid dummy\npointer, and then the git reading and writing routines will catch it and\nreturn the appropriate error.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Convert other users of showError() to the new world order\n\nThe \"report_error()\" interface is a lot simpler, although some of the\nC++ code uses QStrings which make them a bit annoying, especially for\nthe varargs model.  Still, even with the explicit conversion to UTF8 and\n\"char *\", the report_error() model is much nicer.\n\nThis also just makes refreshDisplay() do the error reporting in the UI\nautomatically, so a number of error paths don't even have to worry.  And\nthe multi-line model of error reporting means that it all automatically\ndoes the right thing, and reports errors for each file rather than just\nfor the last file that failed to open.\n\nSo this removes closer to a hundred lines of cruft, while being a\nsimpler interface and doing better error reporting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> show the error string in the GUI rather than stderr\n\nThis makes the error string just be an internal \"membuffer\", which the\nGUI can fetch and show when errors occur.  The error string keeps\naccumulating until somebody retrieves it with \"get_error_string()\".\n\nThis should make any write errors actually show up to the user.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> propagate save errors further, don't mark divelist unchanged\n\nThis at least avoids marking the dive list as unchanged on a failed\nwrite, and propagates the error further up the stack.\n\nWe still don't show the error string in the GUI, though.  I'll start\ndoing that next, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> error handling: return errors for save functions\n\nNote! This just returns the error (and uses \"report_error()\" to generate\na string that is currently printed to stderr).  Nothing actually *uses*\nthat error return yet, and we don't show the error string in the GUI.\n\nBaby steps.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git access: allow arbitrary revision specifiers on reading\n\nCommit 13e2210d75bb (\"Allow remote branch names when reading a git\nobject tree\") made it possible to read (but not write) remote branches,\nwhich is very convenient when you just want to look at somebody elses\ndives in a shared repository.\n\nHowever, it was really quite stupidly done - both overly complicated,\nand overly restrictive.\n\nIt's much better and simpler to just allow general git revision\nspecifications, which includes branches (both remote and local) as a\nsimple case, but also allows general git revision expressions.  So you\ncan tag things, and use a tag-name instead.  Or you can say that you\nwant to look at the previous save, by using the \"branchname^\" syntax.\n\nOr, you can use the git reflog, and do things like\n\n   subsurface ~/scuba/[linus@{two.days.ago}]\n\nto see the dives that your repository contained two days ago.\n\nObviously, you will not be able to save to this kind of ref-spec (and I\nreally will have to make error handling work better), but for browsing\nstate it's quite useful.\n\nAnd in git terms, this is actually simpler than the \"lets try to first\nsee if we have a local branch of that name, and then if we have a remote\none\", as shown by the fact that this removes more lines than it adds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git object format: make sure parenthood isn't lost when saving\n\nThis makes subsurface remember the git source commit of the dive data.\n\nIf you save to an existing branch, subsurface will now complain and\nrefuse to save if you try to save if the existing branch is not related\nto the original source.  That would destroy the history of the dive\ndata, which in turn would make it impossible to do sane merging of the\ndata.\n\nIf you save to a new branch, it will see if the previous parent commit\nis known in the repository you are saving to, and will save parenthood\ninformation if so.  Otherwise it will save it as a new parentless commit\n(\"root commit\" in git parlance).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow remote branch names when reading a git object tree\n\nThis is the quick hack to read from a remote branch, which allows you to\nlook at other peoples branches when sharing a git tree.\n\nNote that the \"remote\" part of \"remote branch\" is the _git_ meaning of a\nremote branch: it is the local cached copy from a remote.  This does not\nimply any kind of network traffic - but if you have done a \"git fetch\"\nto get branches from some other source, you can now use the remote\nbranch-name to see them in subsurface.\n\nAlso notice that you should *NOT* save the end result.  It will \"work\",\nbut it won't do what you think it does.  Saving does not update the\nremote branch, it would create a new *local* branch with that same\nbranch-name, and since it's a new branch, it would do so with no\nparenthood information. So you'll be very very confused.\n\nI think I'll add code to remember the parent when loading from a git\nrepository, and then use that remembered information when saving.  So\nthen you could create a real local branch with real history.  But that's\nan independent issue from this loading case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Stop using the \"git descriptor file\" model\n\nInstead, just encode the git repository information in the filename.\n\nWe want to make it much harder to make it match a real filename, but to\nstill allow easy browsing with the file manager interface.  So the git\nrepository \"filename\" format is the path to the git repository\ndirectory, with the branch name encoded as \"[branch]\" at the end rather\nthan the \"path:branch\" format that we used in the descriptor file.\n\n[ For example, on Windows, a filename like \"c:\\my.xml\" could be\n  interpreted as the branchame \"\\my.xml\" in the repository in the\n  directory \"c\" ]\n\nIn particular, with this model, no filename that ends with \".xml\" could\npossibly ever be considered a git repository name, since the last\ncharacter of a git pathname is always ']'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: don't create a redundant new commits with no changes\n\nIf the newly created save tree is identical to the parent commit tree,\ndon't bother creating a new commit.  We are already fully up-to-date.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: don't save the subsurface version string in the object tree\n\nI didn't think that one through: the version string is already saved in\nthe commit message, and so saving it in the tree object is redundant.\n\nNow a little redundancy doesn't hurt, but having the tree object depend\non th esubsurface version _does_ end up being annoying: it means that as\nyou update the subsurface version, doing a data save will result in a\ndifferent tree SHA1 even if none of the data changed.\n\nWhich doesn't actually matter right now, since we always create a new\ncommit anyway, but my plan was to skip the commit creation if nothing\nchanged in the tree.  And saving the version string defeats that if you\nare a subsurface developer and the subsurface version keeps changing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-load: Add trips to the trip list on loading\n\nWe don't actually much use the trip list any more, and it's possible we\nshould simply get rid of it.  I hadn't added the trips to the trip list\nwhen loading them, and everything worked fine.\n\nWell, *almost* everything worked fine.\n\nThere is one use of the list of trips, and that's the \"clear the trip\nindex for each trip before saving them\".  That literally seems to be the\nonly non-debug use of this list, but when we didn't add the trips to the\nlist, the trip index never got cleared before saving trips.\n\nAnd even that is unnoticeable for the *first* save event, because the\ntrip index will have been clear before that.\n\nBut on the *second* save event, if the trip index doesn't get cleared\nbefore saving, the saving code will look at the index, say \"Hey, I\nalready saved this\" and skip the trip.\n\nSo if you loaded the trips from a git repository, and then saved things,\neverything worked fine.  But it you saved things a *second* time,\nnothing would get saved at all, because all the trips were marked as\nsaved already.\n\nAnyway, I think the real solution is to get rid of the pointless trip\nlist, and just use \"for_each_dive()\" to find all the trips, since that\nlist clearly is just more pain than gain.  But in the meantime, this\nmakes the git loading add the trips properly to the list.\n\nSigned-off-by: Linus \"oops\" Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get rid of crazy empty tag_list element at the start\n\nSo this is totally unrelated to the git repository format, except for\nthe fact that I noticed it while writing the git saving code.\n\nThe subsurface divetag list handling is being stupid, and has a\ninitial dummy entry at the head of the list for no good reason.\n\nI say \"no good reason\", because there *is* a reason for it: it allows\ncode to avoid the special case of empty list and adding entries to\nbefore the first entry etc etc.  But that reason is a really *bad*\nreason, because it's valid only because people don't understand basic\nlist manipulation and pointers to pointers.\n\nSo get rid of the dummy element, and do things right instead - by\npassing a *pointer* to the list, instead of the list. And then when\ntraversing the list and looking for a place to insert things, don't go\nto the next entry - just update the \"pointer to pointer\" to point to\nthe address of the next entry. Each entry in a C linked list is no\ndifferent than the list itself, so you can use the pointer to the\npointer to the next entry as a pointer to the list.\n\nThis is a pet peeve of mine. The real beauty of pointers can never be\nunderstood unless you understand the indirection they allow. People\nwho grew up with Pascal and were corrupted by that mindset are\nmentally stunted. Niklaus Wirth has a lot to answer for!\n\nBut never fear. You too can overcome that mental limitation, it just\nneeds some brain exercise. Reading this patch may help. In particular,\ncontemplate the new \"taglist_add_divetag()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Read salinity from git objects\n\nSimple oversight on the reading side.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse divecomputer model nickname/firmware/serial information\n\nThis was the final piece we didn't read.  I can now read my XML file,\nwrite it to a git repository, read it back, and write it to a new XML\nfile, and the final XML file is bit-for-bit identical with the original\none.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add event parsing to the git object tree loader\n\nThis makes us parse everything we save, and I can load my XML file, save\nit as a git file, load that git file, save it as a new XML file, and the\nend result is identical.\n\nWell...  *ALMOST* identical.  We currently don't save the dive computer\nnickname and serial/firmware information in the git repository, so that\ndoes get lost in translation.  But all the actual dive data is there.\n\nNOTE! I have currently only worked with my own dive files.  They are\nreasonably complex and complete, and do have a lot of the interesting\ncases covered (like multiple dive computers etc), but there's no CCR\ninformation, and all the dives are in trips, so this does need more\ntesting. It's at the very least very close.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse cylinder and weightsystem information\n\nThis makes the sample parsing helper function for key-value pair parsing\nmore generic, and uses it for parsing cylinders and weightsystems too.\n\nEvents still to go, and then we have the \"setting\" section (for dive\ncomputer nicknames and firmware information) that we don't actually save\nyet in the git format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse key/value pairs in dive computer samples too\n\nThis gets us the stopdepth, cns, bearing etc information.  We're getting\nreally close to parsing everything, but are still missing event parsing,\nand cylinder/weight data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse basic dive computer sample data\n\nThis doesn't yet parse the (less common) \"key=value\" type sample data,\nso it's not complete, but the framework for that is in place too.\n\nWith this, we now parse all the basics, and the most noticeable missing\npart is the cylinder and weigthsystem data.  Lack of cylinder data in\nparticular means that SAC-rates etc don't get calculated, but other than\nthat it looks almost complete - you don't miss the missing event and\nsample details unless you look for them.\n\nI'll get the missing pieces done too, but this basic sample parsing was\nvisually a big step.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse basic trip and dive data from the git blobs\n\nSome things are still missing: samples and events, and cylinder and\nweightsystem information.  But most of the basics are there (although\nthe lack of sample data makes a big visual impact)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start actually parsing the git object data\n\nThis implements the simple line parser (including the multiline strings\nwith escape characters).  What a difference a good file format makes:\nthis is nothing like the pain that is XML.\n\nThat said, it only does the line/string parsing right now, it doesn't\nactually then look at what the lines say.  So no human-noticeable\nimprovements in the actual data shown by subsurface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git repository reading: start reading the actual file contents\n\nIf we want to scale to thousands of dives, we'll eventually want to read\nthe dive computer files lazily when actually needed, but for now we do\neverything synchronously.  Even if that may actually be slower than\nparsing one big XML file.\n\nThe git object store is pretty efficient, but especially with some\nhistory, the compression and delta application will certainly not be\nfree.\n\nThis does all the git object unpacking, but none of the actual data\nparsing yet.  But as part of looking up the file objects, we do get the\ndive number (which is in the name of the dive file).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git dive loading: actually insert the dives into the dive table\n\nThe biggest part of this commit is the comment about the woeful state of\nthe \"git_tree_walk()\" interface - the interface is not really very good\nfor seeing any recursive state, since it just walks the tree pretty much\nlinearly.\n\nBut the only real recursive state we care about is the trip, and in all\nnormal situations the \"trip this dive is in\" is the same thing as \"what\nwas the last trip directory we traversed\", so a linear walk works fine.\n\nThe one exception is if a dive isn't in a trip at all, in which case\n\"last trip directory\" obviously isn't what we want.\n\nBut rather than do our own tree walking by hand (and just passing the\ntrip information in the natural recursive manner when traversing the\ntree), we hack around it by just looking at the path to the dive.\n\nThat one-liner trivial hack has now generated about 20 lines of\nexplanation of it.\n\nANYWAY.  With this, we parse the dive and trip hierarchy properly, and\ninstead of just printing out the data, we might as well insert the dives\nand trips into the subsurface data structures.\n\nNote: the only data we have about the dive and trip right now is what is\nvisible in the directory structure, since we don't look at the actual\ndive file at all (not even the name of it, which contains the dive\nnumber).  So the end result will be just a sea of empty dives and the\ntrips they are contained in.  The dives have a date and time, and the\ntrip has a date, though.\n\nSo this is *not* useful for actually saving and loading data, but the\ndata we do load is easily visualized inside subsurface, so as I'm\nstarting to add real dive data parsing code, it will all be much more\nvisually satisfying.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save format: add dive computer nicknames and firmware details\n\nThis adds a top-level \"00-Subsurface\" file that sorts first in the git\ntree, and contains version information, dive computer nicknames and\nsettings.  Although right now the settings are just the autogroup thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix event saving in git format due to wrong argument order\n\nOops.  Really stupid bug in event saving, resulting in bad event lines,\nthat I didn't notice until I started trying to parse them.\n\nThe argument order is a bit mixed up, which is partly why this happened.\nBut considering that this is the worst bug I've hit so far in the saving\ncode, I guess I shouldn't complain too much.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Enumerate dive computers when saving them in the git repository\n\nWe want to make sure that we load them in the same order we save them,\nand while using the hash made the divecomputer names unique, it didn't\nsort them.  You couldn't tell with just one or two dive computers, but\nif you have three or more dive computers on a dive, the order of any but\nthe first ended up depending on the ordering of the unique hash\nextensions.\n\nSo just append a numeric index instead of relying on the hash to make\nthe names unique.  But skip the index if there is just one dive\ncomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix totally broken put_vformat() implementation\n\nI'm ashamed.  put_vbuffer() worked perfectly fine for the normal case\nwhen everything fit in our simple buffer on-stack, but the fallback case\nwas broken in so many ways that I'm just going to go sit in a corner and\ncry myself to sleep.\n\nAnd dammit, I _knew_ how to do it right.  I knew you had to do a\n\"va_copy()\" and couldn't just keep re-using 'args'.  I've done this\nbefore.  But I half-arsed it, and nobody ever noticed, because you\nwouldn't do C style format strings for big strings.\n\n\"128 bytes is enough for everybody\".\n\nAnd as penance for this idiocy, I just spent too much time trying to\nfigure out what was wrong in my git loading code when my debug printouts\ncaused SIGSEGV's.\n\nSigh.\n\nAnyway, now it should hopefully be correct, and the code is smarter\nabout things too, not having that extra buffer since we already *have* a\nbuffer in the \"struct membuffer\" we are working with.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add initial parser for git trees\n\nIt doesn't actually parse the files themselves, but it does walk the\nobject tree and print out the dives and trips it finds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use symbolic names for the git file types\n\nInstead of hardcoding the regular file mode (0100644 is the traditional\nUnix S_IFREG file mode with -rw-r--r-- protections), use\nGIT_FILEMODE_BLOB (and GIT_FILEMODE_TREE for 040000 - S_IFDIR).\n\nThe numbers were historically indeed the regular S_IFREG/S_IFDIR values,\nbut since those aren't portable, git ended up defining their own.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out git save format\n\nThis fixes up the writing of the git format to the point that it might\nbe getting close to complete. In particular:\n\n - Add subsurface version information into commit message as requested by Dirk\n\n - Fix missed string quoting ('\\' needs to be quoted as '\\\\')\n\n - rename \"git_save_error()\" as \"report_error()\", since we'll want to\n   use this for the loading code too.\n\n - Improve on dive and trip name generation\n\n - create a date-based directory hierarchy\n\n - save dive computer data as individual files\n\n - actually save the trip information\n\nThere might be further changes as I start to actually *read* the git\nfiles, of course.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add C string helper to membuffer interface\n\nI don't know why I didn't do this from the beginning.  We often build up\na membuffer and then want to use it as a C string.  You could do it by\nhand by adding the zero byte at the end, but that's just annoying.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial implementation of git save format\n\nThis saves the dive data into a git object repository instead of a\nsingle XML file.\n\nWe create a git object tree with each dive as a separate file,\nhierarchically by trip and date.\n\nNOTE 1: This largely duplicates the XML saving code, because trying to\nshare it seemed just too painful: the logic is very similar, but the\ndetails of the actual strings end up differing sufficiently that there\nare tons of trivial differences.\n\nThe git save format is line-based with minimal quoting, while XML quotes\neverything with either \"<..\\>\" or using single quotes around attributes.\n\nNOTE 2: You currently need a dummy \"file\" to save to, which points to\nthe real save location: the git repository and branch to be used.  We\nshould make this a config thing, but for testing, do something like\nthis:\n\n\techo git /home/torvalds/scuba:linus > git-test\n\nto create that git information file, and when you use \"Save To\" and\nspecify \"git-test\" as the file to save to, subsurface will use the new\ngit save logic to save to the branch \"linus\" in the repository found at\n\"/home/torvalds/scuba\".\n\nNOTE 3: The git save format uses just the git object directory, it does\n*not* check out the result in any git working tree or index.  So after\nyou do a save, you can do\n\n     git log -p linus\n\nto see what actually happened in that branch, but it will not affect any\nactual checked-out state in the repository.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rename old 'xml' file as 'bak' file when saving\n\nIf you use the standard naming convention and end your subsurface\nfilename in \".xml\", we will now save away any previous xml file as a\n\"bak\" file before writing a new one.\n\nThis can be useful for:\n\n- recovering from mistakes that deleted old dives\n\n- seeing what changed (ie you can do things like \"diff -u xyz.bak\n  xyz.xml\") after doing some operation and saving the result.\n\nHowever, this does only a single level of backups - if you save twice,\nyou will obviously have lost the original. I'd strongly encourage some\nexternal backup system in addition to this very simplistic backup.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix missed \"+0.5\" rounding - use rint() instead\n\nIn commit 23baf20f569f (Use \"rint()\" instead of rounding manually with\n\"+ 0.5\") I had missed this one remaining place where we rounded things\nby adding \"+0.5\" and then truncated.\n\nFix that up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> micro-optimisation: avoid division in main strtod() loop\n\nDivision is expensive, so replace it with multiplication instead.  But\ndon't multiply by 0.1 (inexact in floating point), multiply by 10 and\nthen do one division at the end.\n\nMake sure the final division is at the very end, so that the result\nisn't immediately used.  That allow the division to overlap with the\nfunction return overhead, hiding it further.\n\nThis is silly, but while thinking about different file formats and doing\nprofiling of loading big files, it turned out that \"strtod_flags()\"\nactually showed up in profiles. Not very high, but at more than 1%.\n\nThis makes the common case (no exponent) use only addition and\nmultiplication until the very end, and makes the division be the very last\nthing it does, which minimizes the data dependencies on the division.\n\nFor my stupid test-case, it cut the cost of strtod_flags() in half\naccording to the profile. The half a percent speedup on loading time isn't\nreally noticeable or even measurable outside of profiling startup costs,\nbut rather than carry this along in my tree or just throw it away, I'm\nsending it out to see if anybody cares.\n\nNote that we could avoid the final division by instead multiplying\n\"decimal\" with 0.1 rather than multiplying by 10 (and switching the sign\ntest over), but that's a fundamentally inexact operation in binary floatig\npoint, so doing the \"multiply by tens for decimals\" ends up keeping\neverything exact as long as possible.\n\nFor our use, we probably really don't care, but whatever. End result: this\nshould not only speed things up immeasurably, it *might* also make things\nmore precise at a level that we really don't care about :^p\n\nI'm really selling this piece of crap, aren't I?\n\n[Dirk Hohndel: sorry - had to pull the full email into the commit message\n               this is so good, you couldn't make it up]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use \"rint()\" instead of rounding manually with \"+ 0.5\"\n\nrint() is \"round to nearest integer\", and does a better job than +0.5\n(followed by the implicit truncation inherent in integer casting).  We\nalready used 'rint()' for values that could be negative (where +0.5 is\nactively wrong), let's just make it consistent.\n\nOf course, as is usual for the messy C math functions, it depends on the\ncurrent rounding mode.  But the default round-to-nearest is what we want\nand use, and the functions that explicitly always round to nearest\naren't standard enough to worry about.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default value for missing surface pressure from divecomputer\n\nWe should *not* default to the incorrect \"1 bar\".  Instead, we should\nleave the resuling pressure at 0 mbar, which leaves visual entries empty\nand uses the default surface pressure for calculations.\n\nReported-by: Pedro Neves <nevesdiver@gmail.com>\nCc: Patrick Valsecchi <patrick@thus.ch>\nCc: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix ATM-vs-bar confusion\n\nSAC should be calculated in relationship to surface pressure, not \"1 bar\".\n\nI also realize that we have a few other cases where we do the same\nmistake: the partial pressure calculations do things like\n\n    po2 = o2 / 1000.0 * depth_to_mbar(sample->depth.mm, dive);\n\nwhich is wrong as well - the partial pressure is also relative to\nstandard atmospheric pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use 'struct membuffer' for profile info string generation\n\nThe profile info was generated using nasty string concatenation that the\nmembuffers are much better at anyway.  And membuffers don't need those\narbitrarily sized fixed buffers (500 bytes? Why 500 bytes?).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up membuffer internal structure names, add strip function\n\nThe \"size\" member was confusing - it's the size of the allocation, not\nthe size of the current string.  The size of the current string is the\nmember called \"used\".\n\nThis naming makes perfect sense for the internal implementation, but\nit's confusing to users who actually do want to get the size of the\nresulting string at the end.\n\nSo rename the fields to \"alloc\" and \"len\" - which is pretty clear.\n\nThis also adds a helper function to strip whitespace from the end:\n\"strip_mb()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for heartrate and bearing information in samples\n\nlibdivecomputer already supports this, but we didn't save it.\n\nTested-by: Oscar Isoz <jan.oscar.isoz@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Stop doing the (very expensive) pow() calculation pointlessly\n\nThis re-organizes the saturation calculations to be in my opinion\nclearer: we used to have the \"one second\" case completely separate from\nthe \"generic interval\" case, and this undoes that.\n\nIt *does* keep the special static cache for the one-second buehlmann\nfactors, and expands that with a *dynamic* cache for each tissue index\nthat contains the previous value of the buehlmann factor for a\nparticular duration.\n\nThe point is, usually we end up using some fixed duration, so the cache\nhit ratio is quite high.  And doing a memory load from a cache is *much*\nfaster than calculating exponentials.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save XML files into a memory buffer rather than directly into a file\n\nThis introduces a \"struct membuffer\" abstraction that you can write\nthings into, and makes the XML saving code write to the memory buffer\nrather than a file.\n\nThe UDDF export already really wanted this: it used to write to a file,\nonly to then read that file back into memory, delete the file, and then\n*rewrite* the file after doing the magic xslt transform.\n\nBut the longer-term reason for this is that I want to try to write other\nformats, and I want to try to share most helpers.  And those other\nformats will need this memory buffer model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly handle user dive merge requests\n\nWhen the user asks to merge dives in the divelist, we would always use\nthe \"try tp find matching dive computers and merge at an offset\" model.\n\nThat is incorrect if the intent is to actually merge two *identical*\ndives (with different dive computers), as opposed to merging two short\ndives into one longer one with a surface interval.\n\nNormally this doesn't ever trigger (the \"same dive\" merging will have\nbeen done automatically after downloading from the dive computer), but\nif the dive computer times are off, and the user fixes them, and then\nasks to merge dives, we should use the non-offset dive merging logic.\n\nWe already have that \"likely_same_dive()\" function that is used to\ndetermine when downloaded dives get merged, so just use it for the user\nmerge case too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove now stale arguments to \"CHANGED()\" macro\n\nWe now never remove units or percentage signs, and always just compare\nthe string data, so we should remove the hacky arguments that are no\nlonger used.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add and use 'string_to_fraction()' helper converter function\n\nThis matches the pattern of unit conversion, and will allow us to remove\nall the code that uses the old complex \"CHANGED()\" macro that tries to\nremove units or percent signs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware cylinder size string parserc\n\nWhittling down on the string parsing that doesn't check user-specified\nunits.  Still need to handle temperatures (and will do percentages to\nmatch the pattern too), but this is getting us closer to always honoring\nuser-specified units.\n\nWith this you can say that you have a \"10l\" cylinder at \"3000psi\", and\nit will do the right thing (it's basically a 72 cuft cylinder in\nimperial measurements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start sanitizing gaschange event information\n\nDecode the gasmix data into a sane format when creating the event, and\nadd the (currently unused) ability to specify a gas change to a\nparticular cylinder rather than (or in addition to) the gasmix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Teach uemis downloader about downloading into private trips\n\nNow that we pass in the full device_data_t information, we can look at\nthe \"create_private_dive\" flag and decide just how to record newly\ndownloaded dives properly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Pass the whole 'device_data_t' to the uemis downloader\n\nNot only does it make it look more like the libdivecomputer downloaders,\nbut the uemis downloader needs it in order to support all the flags we\nhave.  Notably \"download into private trip\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add \"download into private trip\" dialog checkmark\n\nThis adds a checkbox for the divecomputer download dialog that allows you\nto tell the download to put the newly downloaded dives into a trip of\ntheir own. That in turn will disable the dive merging with any existing\ndives, which means that you will not mix up your newly downloaded dives\nwith any old dives.\n\nThat, in turn, is very convenient of you know that some of the dives were\ndone by other divers (or from testing that happened during servicing etc),\nor the dive dates etc were wrong because the dive computer date had reset\ndue to battery changes etc.\n\nOnce you have all the dives in a private trip of their own, you can then\nfix them up (delete dives you don't want to merge etc), and then after all\nthe data is ok you might want to merge the cleaned-up results with\nprevious trips etc, and then manually ask subsurface to merge the dives or\nwhatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make gas use statistics be coherent and more complete\n\nThe gas use logic in the dive statistics page is confused.\n\nThe SAC case had a special case for \"unknown\", but only for\nthe first gas. Other gases had the normal empty case.\n\nAlso, the logic was really odd - if you had gases that weren't used (or\npressures not known) intermixed with gases you *did* have pressure for,\nthe statistics got really confused.\n\nThe list of gases showed all gases that we know about during the dive,\nbut then the gas use and SAC-rate lists wouldn't necessarily match,\nbecause the loops that computed those stopped after the first gas that\ndidn't have any pressure change.\n\nTo make things worse, the first cylinder was special-cased again, so it\nall lined up for the single-cylinder case.\n\nThis makes all the cylinders act the same way, leaving unknown gas use\n(and thus SAC) just empty for that gas.\n\nIt also fixes the SAC calculation case where we don't have real samples,\nand the profile is a fake profile - possibly with gas changes in between\nthe fake points. We now make the SAC calculations match what we show -\nwhich is admittedly not at all necessarily what the dive was, but at\nleast we're consistent.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show gaschange events at the beginning of a dive\n\nThe initial gas change event is really special - it just specifies the gas\nmix from the dive computer. So don't show it as an event if that already\nmatches the initial gas.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse git-format picture data\n\nThis adds the loading of picture data from git repositories too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-format: save dive picture data\n\nThis doesn't actually parse the data at load time yet, but I need a save\nfile to do that..\n\nThe diff looks larger than it is because this moves the \"mktree()\"\nfunction up earlier to be used by the picture saving code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make parse-xml callbacks be type-safe\n\n.. and fix the type breakage brought in by commit eaf6d564874a (\"CCR code:\nChange to sample structure\")\n\nThe XML parsing callbacks pass a \"void *\" around, because the helper\nfunction that matches the XML node names (\"match()\") does so for all the\ndifferent dive/sample/dc member nodes that all have different types.\n\nBut that also hid the fact that it very much depended on the various types\nbeing regular \"int\" etc, rather than the denser types that were introduced\nso that the CCR data wouldn't expand memory use excessively. As a result,\nXML loading would overwrite other members, and possibly even the\nallocation, when it wrote an \"int\" value to something that only was a\n8-bit allocation.\n\nI left the \"utf8_string()\" without type checking - so it still uses\n\"void *_res\" for the result type, with the cast happening inside the\nfunction.\n\nThat's because the result destination ends up being a bit mixed-up wrt\n\"const char **\" and just plain \"char **\". Note that the thing we modify\nitself isn't const (it's not \"char *const *\"), but the pointer, but we\nbasically sometimes assign a \"const char *\", and sometimes a \"char *\".\n\nI considered making two different versions of the callback, but it just\nwasn't worth it. So \"utf8_string()\" users still aren't type-checked, and\nyou'd better give it a pointer to something that is some kind of \"char *\"\n\nThis patch doesn't really change the calling convention of the matching\nfunction itself, but it makes the wrapper macro (\"MATCH()\") take a\nproperly type-checked function pointer instead (with a dummy call to do\ntype checking), and then casts the pointer to the \"void *\" type for the\nactual real call.\n\nThe function pointer call is not really portable (although it works on\nall sane architectures, particularly since the cast only changes one\nargument from one type of pointer to another), and to make matters worse\nuses the gcc statement-expression extension. But all the compilers we use\nseem to support that gcc'ism, so in practice this gives us type-safety\nwith no downsides.\n\n(If we ever want to use MSVC to compile subsurface, I suspect we'll have\nto ifdef out the statement expression use and not type-check things. Or\nperhaps re-write the thing as a ternary expression instead, or something).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make bigger steps when calculating TTS\n\n[Dirk Hohndel: this was sent ages ago and in all the discussions about the\n               implications I apparently never applied this]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive water temperature XML parsing\n\nWe parsed it rigth for dive computers, but not for the manually filled\nper-dive case. The git save seems to have gotten it right.\n\nI think this has been broken since the whole \"move as much as possible to\nthe dive computer sections\", but I didn't actually check.\n\nReported-by: roberto forini <forini.r@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create simple non-thread-safe \"gasname()\" function\n\nEvery single user of the get_gas_name() function wanted to just use the\nresult to create a message or printout, and that made the interface a bit\ncumbersome.\n\nThis adds a \"gasname()\" wrapper that returns a static buffer with the\nresult in it, which is neither pretty nor thread-safe, but is a much\nsimpler interface to work with.\n\nOur dive planning isn't multi-threaded, so nothing should care.\n\n[ This also converts a few open-coded gasname debug printouts to use the\n  helper function, resulting in prettier printouts and less code ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the last 'diveid' when merging dives for one dive computer\n\nWhen we merge two dives into the same dive because a divecomputer had\nincorrectly considered it two separate dives (due to surface time within\nthe dive) we should pick the dive ID from the later dive to be the\ndiveid of the resulting merged dive.  Otherwise we might re-download the\n(now merged) partial dive.\n\nThis is a rather unusual special case, but it actually hit me with the\nUemis on my last dive in Palau: Chandelier Cave has multiple surface\npoints where you can spend time admiring the cave above water, and the\nUemis (but not my Suunto's) decided that the dive was actually four\nshort dives back-to-back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: add list of dive computers to the commit message\n\nThis makes it much more obvious what is going on when you save in\nbetween importing multiple dive computers, since the last dive\ndescription otherwise stays the same.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git load: initialize dive computer timestamp and duration from dive\n\nWe don't save the dive computer timestamp and duration if they match the\ndive timestamp and duration.  But that means that on loading, we need to\ndefault the dive computer time/duration to the dive one.  If they\ndiffer, the loading of the divecomputer file will then override the\ndefault timestamp/duration.\n\nThis mainly matters if a later dive merge then changes the timestamp of\nthe dive: the dive computer timestamp needs to have been set correctly\nand not change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Mark new dives \"downloaded\" when importing new dives\n\nWe used to do this just for dive computer downloads, but we should do it\nfor all imports, so that merging new import data always does the\nexpected thing: any new dive computers will be added to the end of the\nlist of preexisting dives, rather than the other way around.\n\n(Of course, if you set the \"prefer downloaded\" flag, that reverses this\nlogic, and makes the newly imported dive computer data be the primary\ndive computer.  That flag is currently only exported for dive computer\ndownloads, not for imports).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save: don't crash if the last dive isn't in a trip\n\nThe git save tries to generate a nice commit message based on the most\nrecent dive, but stupidly didn't check whether that dive was in a trip\nor not, and unconditionally used the trip pointer to see if there was a\ntrip location.\n\nWhich works well enough if you always generate trips, but is an\nunmitigated disaster otherwise.  Oops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't use locale for git save format\n\nI stupidly used \"weekday()\" without realizing we localize it. And we\nreally don't want to make save formats be localized (we don't localize\ndecimal numbers etc either).\n\nThis fixes the git save format to just use a hardcoded weekday list.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix git loading of odd locales\n\nThis should make git loading be able to load git saves with arbitrary\nweekday names. Even strange German ones.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When scrolling to dive, scroll to trip first\n\nThe behavior at startup is actually very annoying: we select the latest\ndive, and expand the trip it is in, but since we use \"scrollTo()\" on\njust the dive, and it's not initially visible, the startup will make the\nfirst dive be at the top of the list view.\n\nWhich means that the actual _trip_ detail is not visible at all, since\nit will have been scrolled off the list view entirely.\n\nFix this by first scrolling to the trip, and only then scrolling to the\nactual dive (using the default \"EnsureVisible\" policy).  Obviously, if\nit's a trip with lots of dives, scrolling to the dive may end up\nscrolling away from the trip header again, but at least that never\nhappens at startup, and at that point you have to scroll away from the\ntrip just to show the dive.\n\nDo this same dance when changing the dive selection (mainly noticeable\nwhen picking dives on the globe view).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> make git save commit messages more informative\n\nInstead of just having \"Created by subsurface <version>\", put the number\nof dives and the location of the last dive in the message.  That makes\nthings like \"gitk\" show a much more useful view of what actually got\nsaved.\n\nWe still save the subsurface version in the body of the message, because\nthat is interesting and relevant information.  It's just not the\n*primary* relevant information.\n\nAnyway, with this, a git commit message might looke something like\n\n    dive 474: North West Point (Christmas Island)\n\n    Created by subsurface 4.0.96-17-g649e9ed89d9d\n\nwhich is much more relevant for the common case of adding new dives at\nthe end.\n\nOf course, if the reason for the save is that you edited old dives, the\nrelevance of the commit message telling you the number of dives you have\nin the log and the dive number is questionable.  But then you have to\nlook at the actual diff to see what's going on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't calculate SAC-rates for negative pressure changes\n\nThey happen - maybe the cylinder actually warmed up, or maybe the user\nentered just a ending pressure without a starting pressure.  Regardless,\njust ignore cylinder pressure changes that go up.\n\nAlso ignore cylinders with a zero ending pressure: that's really a\n*missing* pressure rather than an actual zero pressure.  As Dirk says,\nthe scuba regulators don't even work without a healthy positive pressure\ndifferential, so even when you breathe down a tank to \"empty\", it won't\nbe at zero pressure (this is true even with gauge pressure, where zero\nmeans \"atmospheric pressure\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: improve commit authorship data\n\nWe used to always just commit as \"subsurface@hohndel.org\" because\nlibgit-19 doesn't have the interfaces to do user name lookup.  This does\nbetter if you have libgit-20, using \"git_signature_default()\" to get the\nactual user that does the saving.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix crash with libgit when it's compiled with GIT_THREADS\n\nCall git_threads_init() before using libgit functions.\n\nThe documentation says:\n\n\"If libgit2 has been built with GIT_THREADS on, this function must\n be called once before any other library functions.\n\n If libgit2 has been built without GIT_THREADS support, this function\n is a no-op\"\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git object store: make it possible to work with checked-out git branches\n\nThis makes the git object save logic also check out the changes in the\nworking tree and index if the branch we save to is checked out.  It used\nto be that we would just update the object store (and the branch ref, of\ncourse), but leave any checked-out state untouched.\n\nNote that if the working directory is dirty (ie you have made changes by\nhand and not committed them), the checkout will skip any dirty files and\nreport it as a warning to the user.  However, the save still succeeds\n(since the _real_ save goes to the backing store).\n\nNOTE NOTE NOTE! Both loading and saving very fundamentally work on the\ngit object store level, and if you are working with a checked-out branch\nand make modifications to the working tree, saving will not touch those\ndirty files (so that you can try to recover your edits manually in the\nworking tree), but it's worth pointing out that subsufrace loading state\nwill totally ignore the working tree.\n\nSo the only way to make subsurface *see* your changes is to commit them.\nHaving edited state checked out in the working tree will only confuse\nyou when subsurface first ignores it on reading, and then refuses to\ntouch the checked-out state on writing.\n\nPut another way: working with a checked-out branch is now _possible_,\nbut you need to be aware of the limitations.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be more careful about dive computer selection\n\nThe selection logic was a bit random: some places would return NULL if\nthe dive computer index was out of range, others would return the\nprimary dive computer, and actually moving between dive computers would\njust blindly increment and decrement the number.\n\nThis always selects the primary computer if the index is out of bounds,\nand makes sure we stay in bound when switching beteen dive computers\n(but switching between dives can then turn an in-bound number into an\nout-of-bounds one)\n\nFixes #464\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improved handling of git syntax names with no git repository\n\nThis makes \"is_git_repository()\" return non-NULL for all file names that\nmatch the git name pattern, even if we don't find an actual git\nrepository there.  That way, we won't fall back to writing out an XML\nfile with an odd filename.\n\nIf there is no actual git repository, we return a special invalid dummy\npointer, and then the git reading and writing routines will catch it and\nreturn the appropriate error.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Convert other users of showError() to the new world order\n\nThe \"report_error()\" interface is a lot simpler, although some of the\nC++ code uses QStrings which make them a bit annoying, especially for\nthe varargs model.  Still, even with the explicit conversion to UTF8 and\n\"char *\", the report_error() model is much nicer.\n\nThis also just makes refreshDisplay() do the error reporting in the UI\nautomatically, so a number of error paths don't even have to worry.  And\nthe multi-line model of error reporting means that it all automatically\ndoes the right thing, and reports errors for each file rather than just\nfor the last file that failed to open.\n\nSo this removes closer to a hundred lines of cruft, while being a\nsimpler interface and doing better error reporting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> show the error string in the GUI rather than stderr\n\nThis makes the error string just be an internal \"membuffer\", which the\nGUI can fetch and show when errors occur.  The error string keeps\naccumulating until somebody retrieves it with \"get_error_string()\".\n\nThis should make any write errors actually show up to the user.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> propagate save errors further, don't mark divelist unchanged\n\nThis at least avoids marking the dive list as unchanged on a failed\nwrite, and propagates the error further up the stack.\n\nWe still don't show the error string in the GUI, though.  I'll start\ndoing that next, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> error handling: return errors for save functions\n\nNote! This just returns the error (and uses \"report_error()\" to generate\na string that is currently printed to stderr).  Nothing actually *uses*\nthat error return yet, and we don't show the error string in the GUI.\n\nBaby steps.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git access: allow arbitrary revision specifiers on reading\n\nCommit 13e2210d75bb (\"Allow remote branch names when reading a git\nobject tree\") made it possible to read (but not write) remote branches,\nwhich is very convenient when you just want to look at somebody elses\ndives in a shared repository.\n\nHowever, it was really quite stupidly done - both overly complicated,\nand overly restrictive.\n\nIt's much better and simpler to just allow general git revision\nspecifications, which includes branches (both remote and local) as a\nsimple case, but also allows general git revision expressions.  So you\ncan tag things, and use a tag-name instead.  Or you can say that you\nwant to look at the previous save, by using the \"branchname^\" syntax.\n\nOr, you can use the git reflog, and do things like\n\n   subsurface ~/scuba/[linus@{two.days.ago}]\n\nto see the dives that your repository contained two days ago.\n\nObviously, you will not be able to save to this kind of ref-spec (and I\nreally will have to make error handling work better), but for browsing\nstate it's quite useful.\n\nAnd in git terms, this is actually simpler than the \"lets try to first\nsee if we have a local branch of that name, and then if we have a remote\none\", as shown by the fact that this removes more lines than it adds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git object format: make sure parenthood isn't lost when saving\n\nThis makes subsurface remember the git source commit of the dive data.\n\nIf you save to an existing branch, subsurface will now complain and\nrefuse to save if you try to save if the existing branch is not related\nto the original source.  That would destroy the history of the dive\ndata, which in turn would make it impossible to do sane merging of the\ndata.\n\nIf you save to a new branch, it will see if the previous parent commit\nis known in the repository you are saving to, and will save parenthood\ninformation if so.  Otherwise it will save it as a new parentless commit\n(\"root commit\" in git parlance).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow remote branch names when reading a git object tree\n\nThis is the quick hack to read from a remote branch, which allows you to\nlook at other peoples branches when sharing a git tree.\n\nNote that the \"remote\" part of \"remote branch\" is the _git_ meaning of a\nremote branch: it is the local cached copy from a remote.  This does not\nimply any kind of network traffic - but if you have done a \"git fetch\"\nto get branches from some other source, you can now use the remote\nbranch-name to see them in subsurface.\n\nAlso notice that you should *NOT* save the end result.  It will \"work\",\nbut it won't do what you think it does.  Saving does not update the\nremote branch, it would create a new *local* branch with that same\nbranch-name, and since it's a new branch, it would do so with no\nparenthood information. So you'll be very very confused.\n\nI think I'll add code to remember the parent when loading from a git\nrepository, and then use that remembered information when saving.  So\nthen you could create a real local branch with real history.  But that's\nan independent issue from this loading case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Stop using the \"git descriptor file\" model\n\nInstead, just encode the git repository information in the filename.\n\nWe want to make it much harder to make it match a real filename, but to\nstill allow easy browsing with the file manager interface.  So the git\nrepository \"filename\" format is the path to the git repository\ndirectory, with the branch name encoded as \"[branch]\" at the end rather\nthan the \"path:branch\" format that we used in the descriptor file.\n\n[ For example, on Windows, a filename like \"c:\\my.xml\" could be\n  interpreted as the branchame \"\\my.xml\" in the repository in the\n  directory \"c\" ]\n\nIn particular, with this model, no filename that ends with \".xml\" could\npossibly ever be considered a git repository name, since the last\ncharacter of a git pathname is always ']'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: don't create a redundant new commits with no changes\n\nIf the newly created save tree is identical to the parent commit tree,\ndon't bother creating a new commit.  We are already fully up-to-date.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-save: don't save the subsurface version string in the object tree\n\nI didn't think that one through: the version string is already saved in\nthe commit message, and so saving it in the tree object is redundant.\n\nNow a little redundancy doesn't hurt, but having the tree object depend\non th esubsurface version _does_ end up being annoying: it means that as\nyou update the subsurface version, doing a data save will result in a\ndifferent tree SHA1 even if none of the data changed.\n\nWhich doesn't actually matter right now, since we always create a new\ncommit anyway, but my plan was to skip the commit creation if nothing\nchanged in the tree.  And saving the version string defeats that if you\nare a subsurface developer and the subsurface version keeps changing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git-load: Add trips to the trip list on loading\n\nWe don't actually much use the trip list any more, and it's possible we\nshould simply get rid of it.  I hadn't added the trips to the trip list\nwhen loading them, and everything worked fine.\n\nWell, *almost* everything worked fine.\n\nThere is one use of the list of trips, and that's the \"clear the trip\nindex for each trip before saving them\".  That literally seems to be the\nonly non-debug use of this list, but when we didn't add the trips to the\nlist, the trip index never got cleared before saving trips.\n\nAnd even that is unnoticeable for the *first* save event, because the\ntrip index will have been clear before that.\n\nBut on the *second* save event, if the trip index doesn't get cleared\nbefore saving, the saving code will look at the index, say \"Hey, I\nalready saved this\" and skip the trip.\n\nSo if you loaded the trips from a git repository, and then saved things,\neverything worked fine.  But it you saved things a *second* time,\nnothing would get saved at all, because all the trips were marked as\nsaved already.\n\nAnyway, I think the real solution is to get rid of the pointless trip\nlist, and just use \"for_each_dive()\" to find all the trips, since that\nlist clearly is just more pain than gain.  But in the meantime, this\nmakes the git loading add the trips properly to the list.\n\nSigned-off-by: Linus \"oops\" Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get rid of crazy empty tag_list element at the start\n\nSo this is totally unrelated to the git repository format, except for\nthe fact that I noticed it while writing the git saving code.\n\nThe subsurface divetag list handling is being stupid, and has a\ninitial dummy entry at the head of the list for no good reason.\n\nI say \"no good reason\", because there *is* a reason for it: it allows\ncode to avoid the special case of empty list and adding entries to\nbefore the first entry etc etc.  But that reason is a really *bad*\nreason, because it's valid only because people don't understand basic\nlist manipulation and pointers to pointers.\n\nSo get rid of the dummy element, and do things right instead - by\npassing a *pointer* to the list, instead of the list. And then when\ntraversing the list and looking for a place to insert things, don't go\nto the next entry - just update the \"pointer to pointer\" to point to\nthe address of the next entry. Each entry in a C linked list is no\ndifferent than the list itself, so you can use the pointer to the\npointer to the next entry as a pointer to the list.\n\nThis is a pet peeve of mine. The real beauty of pointers can never be\nunderstood unless you understand the indirection they allow. People\nwho grew up with Pascal and were corrupted by that mindset are\nmentally stunted. Niklaus Wirth has a lot to answer for!\n\nBut never fear. You too can overcome that mental limitation, it just\nneeds some brain exercise. Reading this patch may help. In particular,\ncontemplate the new \"taglist_add_divetag()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Read salinity from git objects\n\nSimple oversight on the reading side.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse divecomputer model nickname/firmware/serial information\n\nThis was the final piece we didn't read.  I can now read my XML file,\nwrite it to a git repository, read it back, and write it to a new XML\nfile, and the final XML file is bit-for-bit identical with the original\none.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add event parsing to the git object tree loader\n\nThis makes us parse everything we save, and I can load my XML file, save\nit as a git file, load that git file, save it as a new XML file, and the\nend result is identical.\n\nWell...  *ALMOST* identical.  We currently don't save the dive computer\nnickname and serial/firmware information in the git repository, so that\ndoes get lost in translation.  But all the actual dive data is there.\n\nNOTE! I have currently only worked with my own dive files.  They are\nreasonably complex and complete, and do have a lot of the interesting\ncases covered (like multiple dive computers etc), but there's no CCR\ninformation, and all the dives are in trips, so this does need more\ntesting. It's at the very least very close.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse cylinder and weightsystem information\n\nThis makes the sample parsing helper function for key-value pair parsing\nmore generic, and uses it for parsing cylinders and weightsystems too.\n\nEvents still to go, and then we have the \"setting\" section (for dive\ncomputer nicknames and firmware information) that we don't actually save\nyet in the git format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse key/value pairs in dive computer samples too\n\nThis gets us the stopdepth, cns, bearing etc information.  We're getting\nreally close to parsing everything, but are still missing event parsing,\nand cylinder/weight data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse basic dive computer sample data\n\nThis doesn't yet parse the (less common) \"key=value\" type sample data,\nso it's not complete, but the framework for that is in place too.\n\nWith this, we now parse all the basics, and the most noticeable missing\npart is the cylinder and weigthsystem data.  Lack of cylinder data in\nparticular means that SAC-rates etc don't get calculated, but other than\nthat it looks almost complete - you don't miss the missing event and\nsample details unless you look for them.\n\nI'll get the missing pieces done too, but this basic sample parsing was\nvisually a big step.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Parse basic trip and dive data from the git blobs\n\nSome things are still missing: samples and events, and cylinder and\nweightsystem information.  But most of the basics are there (although\nthe lack of sample data makes a big visual impact)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start actually parsing the git object data\n\nThis implements the simple line parser (including the multiline strings\nwith escape characters).  What a difference a good file format makes:\nthis is nothing like the pain that is XML.\n\nThat said, it only does the line/string parsing right now, it doesn't\nactually then look at what the lines say.  So no human-noticeable\nimprovements in the actual data shown by subsurface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git repository reading: start reading the actual file contents\n\nIf we want to scale to thousands of dives, we'll eventually want to read\nthe dive computer files lazily when actually needed, but for now we do\neverything synchronously.  Even if that may actually be slower than\nparsing one big XML file.\n\nThe git object store is pretty efficient, but especially with some\nhistory, the compression and delta application will certainly not be\nfree.\n\nThis does all the git object unpacking, but none of the actual data\nparsing yet.  But as part of looking up the file objects, we do get the\ndive number (which is in the name of the dive file).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git dive loading: actually insert the dives into the dive table\n\nThe biggest part of this commit is the comment about the woeful state of\nthe \"git_tree_walk()\" interface - the interface is not really very good\nfor seeing any recursive state, since it just walks the tree pretty much\nlinearly.\n\nBut the only real recursive state we care about is the trip, and in all\nnormal situations the \"trip this dive is in\" is the same thing as \"what\nwas the last trip directory we traversed\", so a linear walk works fine.\n\nThe one exception is if a dive isn't in a trip at all, in which case\n\"last trip directory\" obviously isn't what we want.\n\nBut rather than do our own tree walking by hand (and just passing the\ntrip information in the natural recursive manner when traversing the\ntree), we hack around it by just looking at the path to the dive.\n\nThat one-liner trivial hack has now generated about 20 lines of\nexplanation of it.\n\nANYWAY.  With this, we parse the dive and trip hierarchy properly, and\ninstead of just printing out the data, we might as well insert the dives\nand trips into the subsurface data structures.\n\nNote: the only data we have about the dive and trip right now is what is\nvisible in the directory structure, since we don't look at the actual\ndive file at all (not even the name of it, which contains the dive\nnumber).  So the end result will be just a sea of empty dives and the\ntrips they are contained in.  The dives have a date and time, and the\ntrip has a date, though.\n\nSo this is *not* useful for actually saving and loading data, but the\ndata we do load is easily visualized inside subsurface, so as I'm\nstarting to add real dive data parsing code, it will all be much more\nvisually satisfying.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> git save format: add dive computer nicknames and firmware details\n\nThis adds a top-level \"00-Subsurface\" file that sorts first in the git\ntree, and contains version information, dive computer nicknames and\nsettings.  Although right now the settings are just the autogroup thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix event saving in git format due to wrong argument order\n\nOops.  Really stupid bug in event saving, resulting in bad event lines,\nthat I didn't notice until I started trying to parse them.\n\nThe argument order is a bit mixed up, which is partly why this happened.\nBut considering that this is the worst bug I've hit so far in the saving\ncode, I guess I shouldn't complain too much.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Enumerate dive computers when saving them in the git repository\n\nWe want to make sure that we load them in the same order we save them,\nand while using the hash made the divecomputer names unique, it didn't\nsort them.  You couldn't tell with just one or two dive computers, but\nif you have three or more dive computers on a dive, the order of any but\nthe first ended up depending on the ordering of the unique hash\nextensions.\n\nSo just append a numeric index instead of relying on the hash to make\nthe names unique.  But skip the index if there is just one dive\ncomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix totally broken put_vformat() implementation\n\nI'm ashamed.  put_vbuffer() worked perfectly fine for the normal case\nwhen everything fit in our simple buffer on-stack, but the fallback case\nwas broken in so many ways that I'm just going to go sit in a corner and\ncry myself to sleep.\n\nAnd dammit, I _knew_ how to do it right.  I knew you had to do a\n\"va_copy()\" and couldn't just keep re-using 'args'.  I've done this\nbefore.  But I half-arsed it, and nobody ever noticed, because you\nwouldn't do C style format strings for big strings.\n\n\"128 bytes is enough for everybody\".\n\nAnd as penance for this idiocy, I just spent too much time trying to\nfigure out what was wrong in my git loading code when my debug printouts\ncaused SIGSEGV's.\n\nSigh.\n\nAnyway, now it should hopefully be correct, and the code is smarter\nabout things too, not having that extra buffer since we already *have* a\nbuffer in the \"struct membuffer\" we are working with.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add initial parser for git trees\n\nIt doesn't actually parse the files themselves, but it does walk the\nobject tree and print out the dives and trips it finds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use symbolic names for the git file types\n\nInstead of hardcoding the regular file mode (0100644 is the traditional\nUnix S_IFREG file mode with -rw-r--r-- protections), use\nGIT_FILEMODE_BLOB (and GIT_FILEMODE_TREE for 040000 - S_IFDIR).\n\nThe numbers were historically indeed the regular S_IFREG/S_IFDIR values,\nbut since those aren't portable, git ended up defining their own.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out git save format\n\nThis fixes up the writing of the git format to the point that it might\nbe getting close to complete. In particular:\n\n - Add subsurface version information into commit message as requested by Dirk\n\n - Fix missed string quoting ('\\' needs to be quoted as '\\\\')\n\n - rename \"git_save_error()\" as \"report_error()\", since we'll want to\n   use this for the loading code too.\n\n - Improve on dive and trip name generation\n\n - create a date-based directory hierarchy\n\n - save dive computer data as individual files\n\n - actually save the trip information\n\nThere might be further changes as I start to actually *read* the git\nfiles, of course.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add C string helper to membuffer interface\n\nI don't know why I didn't do this from the beginning.  We often build up\na membuffer and then want to use it as a C string.  You could do it by\nhand by adding the zero byte at the end, but that's just annoying.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial implementation of git save format\n\nThis saves the dive data into a git object repository instead of a\nsingle XML file.\n\nWe create a git object tree with each dive as a separate file,\nhierarchically by trip and date.\n\nNOTE 1: This largely duplicates the XML saving code, because trying to\nshare it seemed just too painful: the logic is very similar, but the\ndetails of the actual strings end up differing sufficiently that there\nare tons of trivial differences.\n\nThe git save format is line-based with minimal quoting, while XML quotes\neverything with either \"<..\\>\" or using single quotes around attributes.\n\nNOTE 2: You currently need a dummy \"file\" to save to, which points to\nthe real save location: the git repository and branch to be used.  We\nshould make this a config thing, but for testing, do something like\nthis:\n\n\techo git /home/torvalds/scuba:linus > git-test\n\nto create that git information file, and when you use \"Save To\" and\nspecify \"git-test\" as the file to save to, subsurface will use the new\ngit save logic to save to the branch \"linus\" in the repository found at\n\"/home/torvalds/scuba\".\n\nNOTE 3: The git save format uses just the git object directory, it does\n*not* check out the result in any git working tree or index.  So after\nyou do a save, you can do\n\n     git log -p linus\n\nto see what actually happened in that branch, but it will not affect any\nactual checked-out state in the repository.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rename old 'xml' file as 'bak' file when saving\n\nIf you use the standard naming convention and end your subsurface\nfilename in \".xml\", we will now save away any previous xml file as a\n\"bak\" file before writing a new one.\n\nThis can be useful for:\n\n- recovering from mistakes that deleted old dives\n\n- seeing what changed (ie you can do things like \"diff -u xyz.bak\n  xyz.xml\") after doing some operation and saving the result.\n\nHowever, this does only a single level of backups - if you save twice,\nyou will obviously have lost the original. I'd strongly encourage some\nexternal backup system in addition to this very simplistic backup.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix missed \"+0.5\" rounding - use rint() instead\n\nIn commit 23baf20f569f (Use \"rint()\" instead of rounding manually with\n\"+ 0.5\") I had missed this one remaining place where we rounded things\nby adding \"+0.5\" and then truncated.\n\nFix that up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> micro-optimisation: avoid division in main strtod() loop\n\nDivision is expensive, so replace it with multiplication instead.  But\ndon't multiply by 0.1 (inexact in floating point), multiply by 10 and\nthen do one division at the end.\n\nMake sure the final division is at the very end, so that the result\nisn't immediately used.  That allow the division to overlap with the\nfunction return overhead, hiding it further.\n\nThis is silly, but while thinking about different file formats and doing\nprofiling of loading big files, it turned out that \"strtod_flags()\"\nactually showed up in profiles. Not very high, but at more than 1%.\n\nThis makes the common case (no exponent) use only addition and\nmultiplication until the very end, and makes the division be the very last\nthing it does, which minimizes the data dependencies on the division.\n\nFor my stupid test-case, it cut the cost of strtod_flags() in half\naccording to the profile. The half a percent speedup on loading time isn't\nreally noticeable or even measurable outside of profiling startup costs,\nbut rather than carry this along in my tree or just throw it away, I'm\nsending it out to see if anybody cares.\n\nNote that we could avoid the final division by instead multiplying\n\"decimal\" with 0.1 rather than multiplying by 10 (and switching the sign\ntest over), but that's a fundamentally inexact operation in binary floatig\npoint, so doing the \"multiply by tens for decimals\" ends up keeping\neverything exact as long as possible.\n\nFor our use, we probably really don't care, but whatever. End result: this\nshould not only speed things up immeasurably, it *might* also make things\nmore precise at a level that we really don't care about :^p\n\nI'm really selling this piece of crap, aren't I?\n\n[Dirk Hohndel: sorry - had to pull the full email into the commit message\n               this is so good, you couldn't make it up]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use \"rint()\" instead of rounding manually with \"+ 0.5\"\n\nrint() is \"round to nearest integer\", and does a better job than +0.5\n(followed by the implicit truncation inherent in integer casting).  We\nalready used 'rint()' for values that could be negative (where +0.5 is\nactively wrong), let's just make it consistent.\n\nOf course, as is usual for the messy C math functions, it depends on the\ncurrent rounding mode.  But the default round-to-nearest is what we want\nand use, and the functions that explicitly always round to nearest\naren't standard enough to worry about.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default value for missing surface pressure from divecomputer\n\nWe should *not* default to the incorrect \"1 bar\".  Instead, we should\nleave the resuling pressure at 0 mbar, which leaves visual entries empty\nand uses the default surface pressure for calculations.\n\nReported-by: Pedro Neves <nevesdiver@gmail.com>\nCc: Patrick Valsecchi <patrick@thus.ch>\nCc: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix ATM-vs-bar confusion\n\nSAC should be calculated in relationship to surface pressure, not \"1 bar\".\n\nI also realize that we have a few other cases where we do the same\nmistake: the partial pressure calculations do things like\n\n    po2 = o2 / 1000.0 * depth_to_mbar(sample->depth.mm, dive);\n\nwhich is wrong as well - the partial pressure is also relative to\nstandard atmospheric pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use 'struct membuffer' for profile info string generation\n\nThe profile info was generated using nasty string concatenation that the\nmembuffers are much better at anyway.  And membuffers don't need those\narbitrarily sized fixed buffers (500 bytes? Why 500 bytes?).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up membuffer internal structure names, add strip function\n\nThe \"size\" member was confusing - it's the size of the allocation, not\nthe size of the current string.  The size of the current string is the\nmember called \"used\".\n\nThis naming makes perfect sense for the internal implementation, but\nit's confusing to users who actually do want to get the size of the\nresulting string at the end.\n\nSo rename the fields to \"alloc\" and \"len\" - which is pretty clear.\n\nThis also adds a helper function to strip whitespace from the end:\n\"strip_mb()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for heartrate and bearing information in samples\n\nlibdivecomputer already supports this, but we didn't save it.\n\nTested-by: Oscar Isoz <jan.oscar.isoz@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Stop doing the (very expensive) pow() calculation pointlessly\n\nThis re-organizes the saturation calculations to be in my opinion\nclearer: we used to have the \"one second\" case completely separate from\nthe \"generic interval\" case, and this undoes that.\n\nIt *does* keep the special static cache for the one-second buehlmann\nfactors, and expands that with a *dynamic* cache for each tissue index\nthat contains the previous value of the buehlmann factor for a\nparticular duration.\n\nThe point is, usually we end up using some fixed duration, so the cache\nhit ratio is quite high.  And doing a memory load from a cache is *much*\nfaster than calculating exponentials.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save XML files into a memory buffer rather than directly into a file\n\nThis introduces a \"struct membuffer\" abstraction that you can write\nthings into, and makes the XML saving code write to the memory buffer\nrather than a file.\n\nThe UDDF export already really wanted this: it used to write to a file,\nonly to then read that file back into memory, delete the file, and then\n*rewrite* the file after doing the magic xslt transform.\n\nBut the longer-term reason for this is that I want to try to write other\nformats, and I want to try to share most helpers.  And those other\nformats will need this memory buffer model.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly handle user dive merge requests\n\nWhen the user asks to merge dives in the divelist, we would always use\nthe \"try tp find matching dive computers and merge at an offset\" model.\n\nThat is incorrect if the intent is to actually merge two *identical*\ndives (with different dive computers), as opposed to merging two short\ndives into one longer one with a surface interval.\n\nNormally this doesn't ever trigger (the \"same dive\" merging will have\nbeen done automatically after downloading from the dive computer), but\nif the dive computer times are off, and the user fixes them, and then\nasks to merge dives, we should use the non-offset dive merging logic.\n\nWe already have that \"likely_same_dive()\" function that is used to\ndetermine when downloaded dives get merged, so just use it for the user\nmerge case too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove now stale arguments to \"CHANGED()\" macro\n\nWe now never remove units or percentage signs, and always just compare\nthe string data, so we should remove the hacky arguments that are no\nlonger used.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add and use 'string_to_fraction()' helper converter function\n\nThis matches the pattern of unit conversion, and will allow us to remove\nall the code that uses the old complex \"CHANGED()\" macro that tries to\nremove units or percent signs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware cylinder size string parserc\n\nWhittling down on the string parsing that doesn't check user-specified\nunits.  Still need to handle temperatures (and will do percentages to\nmatch the pattern too), but this is getting us closer to always honoring\nuser-specified units.\n\nWith this you can say that you have a \"10l\" cylinder at \"3000psi\", and\nit will do the right thing (it's basically a 72 cuft cylinder in\nimperial measurements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove now stale arguments to \"CHANGED()\" macro\n\nWe now never remove units or percentage signs, and always just compare\nthe string data, so we should remove the hacky arguments that are no\nlonger used.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add and use 'string_to_fraction()' helper converter function\n\nThis matches the pattern of unit conversion, and will allow us to remove\nall the code that uses the old complex \"CHANGED()\" macro that tries to\nremove units or percent signs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware cylinder size string parserc\n\nWhittling down on the string parsing that doesn't check user-specified\nunits.  Still need to handle temperatures (and will do percentages to\nmatch the pattern too), but this is getting us closer to always honoring\nuser-specified units.\n\nWith this you can say that you have a \"10l\" cylinder at \"3000psi\", and\nit will do the right thing (it's basically a 72 cuft cylinder in\nimperial measurements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware conversion of pressure data\n\nThis just adds (and uses) a string_to_pressure() to parse pressure units\ncorrectly when filling in cylinder pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a string_to_depth() helper function to match our string_to_weight one\n\nIt's currently only used for the setting of the cylinder switching\ndepth, but now that one should work with user-specified units (so you\ncan set a max depth in feet even if you use metric, and vice versa).\n\nIn the future, if we also make the unit preferences something you can\npass in (with user preferences as a default argument value), we might\nwant to use this for parsing the XML too, so that we'd honor explicit\nunits in the XML strings.  But the XML input unit preferences are not\nnecessarily at all the same as the user preferences, so that does\nrequire us to extend the conversion functions to do possibly explicit\nunit preference selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> const'ify our strtod() helper functions\n\nThe C library doesn't use const char pointers for legacy reasons (and\nbecause you *can* modify the string the end pointer points to), but\nlet's do it in our internal implementation just because it's a nice\nguarantee to have.\n\nWe actually used to have a non-const end pointer and replace a decimal\ncomma with a decimal dot, but that was because we didn't have the fancy\n\"allow commas\" flags.  So by using our own strtod_flags() function, we\ncan now keep all the strings we parse read-only rather than modify them\nas we parse them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'string_to_grams()' use proper type safe types\n\nMake it use 'weight_t' and hide the \"grams\" part inside the type.  That\nwas the whole point of the weight_t type, after all.  Returning a\n\"double\" was always bogus, since we internally always do integer grams\n(and the function actually used \"rint()\" to get all the rounding right\nanyway).\n\nAs a result, it's now called \"string_to_weight()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware conversion of pressure data\n\nThis just adds (and uses) a string_to_pressure() to parse pressure units\ncorrectly when filling in cylinder pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a string_to_depth() helper function to match our string_to_weight one\n\nIt's currently only used for the setting of the cylinder switching\ndepth, but now that one should work with user-specified units (so you\ncan set a max depth in feet even if you use metric, and vice versa).\n\nIn the future, if we also make the unit preferences something you can\npass in (with user preferences as a default argument value), we might\nwant to use this for parsing the XML too, so that we'd honor explicit\nunits in the XML strings.  But the XML input unit preferences are not\nnecessarily at all the same as the user preferences, so that does\nrequire us to extend the conversion functions to do possibly explicit\nunit preference selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> const'ify our strtod() helper functions\n\nThe C library doesn't use const char pointers for legacy reasons (and\nbecause you *can* modify the string the end pointer points to), but\nlet's do it in our internal implementation just because it's a nice\nguarantee to have.\n\nWe actually used to have a non-const end pointer and replace a decimal\ncomma with a decimal dot, but that was because we didn't have the fancy\n\"allow commas\" flags.  So by using our own strtod_flags() function, we\ncan now keep all the strings we parse read-only rather than modify them\nas we parse them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'string_to_grams()' use proper type safe types\n\nMake it use 'weight_t' and hide the \"grams\" part inside the type.  That\nwas the whole point of the weight_t type, after all.  Returning a\n\"double\" was always bogus, since we internally always do integer grams\n(and the function actually used \"rint()\" to get all the rounding right\nanyway).\n\nAs a result, it's now called \"string_to_weight()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix imperial cylinder sizes in equipment tab\n\nThe imperial cylinder sizes are not just in cubic feet: they are in\ncubic feet of gas at STP. So the imperial/metric difference is not\njust about converting blindly from liters to cubic feet, you also have\nto take the working pressure of the cylinder into account.\n\nThis was broken by commit f9b7c5dfe9d0 (\"Make units in cells\nconsistant in CylindersModel\"), because those poor sheltered Swedish\npeople have never had to work with the wondrous imperial cylinder\nsizing, and think that units should make _sense_. Hah.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow the user to specify weight units explicitly\n\nInstead of always assuming that all numbers are in the users locale\nweight units, allow the user to say \"kg\" or \"lbs\" explicitly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make our 'ascii_strtod()' helper more generic\n\nWe'll want to do sane parsing of strings, but the C library makes it\nhard to handle user input sanely and the Qt toDouble() function\ninterface was designed by a retarded chipmunk.\n\nSo just extend our existing hacky \"ascii_strtod()\" to allow a more\ngeneric interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Quiet down valgrind warnings\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix editing of negative temperatures\n\nWe tried to clean up the temperature string (to remove degree characters\nand unit names etc) a bit too aggressively, and removed the sign\ncharacter too..\n\nFixes #306\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive merging\n\nThis limits merging dives to dives that have at most half an hour of\nsurface time between them. That \"half hour\" is kind of a random thing\nto pick, but it's not horribly horribly wrong.\n\nIt also changes the semantics of \"merge selected dives\" to something\nthat actually works pretty well: you can select a whole range of\ndives, and it will merge only the ones that makes sense to merge. I\ntested it, and it's reasonable. I could select all my dives from one\ndive trip, and then do \"Merge selected dives\", and it did the right\nthing (Dirk: I selected the florida trip, and it merged the aborted\n\"missed the trench\" dive with the _actual_ \"trench\" dive).\n\nI'm _slightly_ hesitant about this in the sense that maybe some crazy\nperson actually would want to merge dives with more than half an hour\nof surface time between them, but it really doesn't seem to make much\nsense.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make fake profile average depth come out right\n\nThis isn't perfect as it doesn't really cover all cases. If we need to\ngenerate a profile for some fairly insane cases, the stupid thing just\ngives up rather than try to search for a solution that satisfies the\nconstraints.\n\nFor example, if you have a maxdepth=10m and an average depth of 9.9m, it\nwill try two different (roughly sane) dive profiles, fail to get anything\nthat matches that kind of dive and that average depth, and then just say\n\"screw it, I'll match an insane profile instead\" and basically generate a\nrectangular dive.\n\nIt does seem to handle the few cases I tried.\n\nSomebody should double-check my math, and I think we might want to make\nthe \"default profiles\" a bit saner. Right now the preferred default\nprofile simply says \"ascent/descent rate of 5m/min, with two levels at\nmax_depth and 1/3rd maxdepth\".\n\nThat profile might not work for the simple reason that maybe we did a\nquick dive to 40m, but then came up and spent a lot of time in shallower\nwaters, so our average depth was just 10m or so. Obviously we can *not*\nmake a dive that has the two depths 40m and 13m come out to an average of\n10m deep.\n\nSo it has a fallback for things like that, where we try to generate a\nprofile with a faster ascent/descent rate, and a shallower second depth.\n\nAnd then there's the fallback with an insane 10m/s ascent/descent rate and\na second depth that is basically at the surface, and if we can't generate\na dive profile with those parameters, either my math is wrong, or somebody\nwas playing with rockets under-water. So we just give up.\n\nThere's a few other heuristics too (if there is no average depth, we\ncreate a random one just to make the profile look reasonable).\n\nI *think* this is all perfectly fine, but I do want others to take a look.\nIt might be doing something stupid.\n\n[Dirk Hohndel: after the discussion I took the patch and reworded parts of\n               the commit message]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Speed up XML loading\n\nThis tries to speed up XML loading for large XML files (and thus\nsubsurface startup times) by trimming the fat off our own matching code.\n\nThe actual libxml overhead (particularly string allocation) tends to be\nthe dominant part, so this only speeds up a big load by about 12% for me,\nbut hey, it can be noticeable. Dirk's example nasty 175MB xml file with\n~5200 dives takes \"only' 7.7 seconds to load, when it used to take 8.8s.\nAnd that's on a fast machine.\n\nFor smaller xml files, the dynamic loading costs etc startup costs tend to\nbe big enough that the xml parsing costs aren't as noticeable.\n\nAside from switching the node names around to \"little endian\" (ie least\nsignificant name first) format to avoid some unnecessary strlen() calls,\nthis makes the nodename generation use a non-locale 'tolower()', and only\ndecodes up to two levels of names (since that's the maximum we ever match\nagainst anyway).\n\nIt also introduces a \"-q\" argument to make startup timing easier. Passing\nin \"-q\" just makes subsurface quit imediately after doing all necessary\nstartup code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive planner sidebar depth units\n\nThe dive planner always showed the depth in our internal units, ie\nmillimeter, in the sidebar that showed the plan points.\n\nThat made little sense in metric mode, and none at all in imperial. The\n_graph_ showed things in meter and feet.\n\nSo make the DivePlannerPointsModel always convert things to and from the\nuser units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> ascii_strtod that actually does what we need\n\nDirk's ascii_strtod was blindly copied from other GPL code and didn't do\nwhat was the main purpose (i.e. ignore the locale and still accept the\nnumbers we have in our data files).\n\nThis implementation does *not* care about INF/NaN, and it does *not* try\nto handle some strange conditions (overflow/underflow), and I do *not*\nguarantee that it doesn't have rounding issues.\n\nThat said, for our native format, we never print odd FP numbers anyway\n(since we use fixed-point integer arithmetic), and while we *do* care\nabout exponents for some of the odder import formats (I remember\nseeing them in jdivelog output), we don't care about the crazy cases.\nSo rather than worry about getting the edge cases right for the max\ndouble exponents (around +-308), it just says \"screw you\" and gives\nyou something close enough.\n\nSo what it *does* try to do is handle the actual parsing right, and\nget the right answer for all the reasonable cases.\n\nWorks-For-Me(tm).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV after dive computer download\n\nThis fixes a crash in the current Qt subsurface code that can happen\nafter downloading dives from a dive computer, and the new dives merge\nwith old dives, causing the old dives to be re-allocated into the\nmerged one.\n\nIn that case, the list widgets don't get fully updated, and contain\nstale pointers to old dives that no longer exists. Doing anything that\nrefreshes the display will hide this problem, and you do need to have\nmultiple dive computers on the same dive to trigger it in the first\nplace, so it's reasonably hard to hit, but very annoying when you do.\n\nThis patch just makes us reload all the dive UI tables, which may be\noverkill. It also doesn't actually fix the fact that we seem to do\n\"process_dives()\" within the context of the downloader thread, which\nlooks like a possible source of races. The \"process_dives()\" should\nalso be moved to the main thread, but needs the preferDownloaded()\ninformation that is part of the download window, so it doesn't fit\nhere. Somebody else (Tomaz?) will hopefully fix that part.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix Uemis Zurich downloads\n\nCommit 48ba01b807cc (\"Enable downloads from the UEMIS Zurich\")\nmistakenly switched the meaning of the \"force_download\" argument when it\nmoved from \"struct argument_block\" to being a direct argument.\n\nThis fixes it right back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Qt: Implement trip merging logic\n\nSo during my Maui trip, I had a short hiatus in diving, causing\nsubsurface to start a new trip for the last day of diving.  I could have\njust started the old gtk branch to fix it up, but decided that I might\nas well try to implement the \"merge trip\" logic in the Qt branch instead.\n\nThis is the end result of that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Show sample pressures in the cylinder equipment page\n\nIf we don't have any manually set pressure data, show the data from the\nsamples instead.  It uses an italic font for this case, mainly because I\ncouldn't figure out how to gray things out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show '0.0%' gas percentages\n\nIt's just distracting.  Leave it empty.  No helium should be visually\nvery different from actual trimix, and for oxygen, zero means something\ndifferent anyway (it's air).  In neither case is '0.0%' a good string to\nshow, just show it as empty.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the imperial cylinder size calculations in equipment handling\n\nThis makes us use the same linear calculations as we did in the Gtk\nbranch.  We don't take compressibility into account, since tank\nmanufacturers don't seem to either.  A Luxfer AL80 is 11.1 liters, and\nwith the standard (non-compressibility) calculations, 80 cuft of air at\n3000 psi is 11.094 liter, so that is the right model to use.\n\nAlso, stop with the horrible \"units in edited numbers\" stuff.  It uses\nup precious space, and doesn't look any better.  If the user asked for\ncuft, give him cuft without making a big deal about it.\n\nOh, and if the working pressure doesn't exist, sizes are always in\nliters.  That's what we did in the Gtk branch, that's what we do here.\nAgain, no reason to even bother stating units, it's not helping.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Merge tag 'microblaze-3.16-rc1' of git://git.monstr.eu/linux-2.6-microblaze into next\n\nPull Microblaze updates from Michal Simek:\n - cleanup PCI and DMA handling\n - use generic device.h\n - some cleanups\n\n* tag 'microblaze-3.16-rc1' of git://git.monstr.eu/linux-2.6-microblaze:\n  microblaze: Fix typo in head.S s/substract/subtract/\n  microblaze: remove check for CONFIG_XILINX_CONSOLE\n  microblaze: Use generic device.h\n  microblaze: Do not setup empty unmap_sg function\n  microblaze: Remove device_to_mask\n  microblaze: Clean device dma_ops structure\n  microblaze: Cleanup PCI_DRAM_OFFSET handling\n  microblaze: Do not setup pci_dma_ops\n  microblaze: Return default dma operations\n  microblaze: Enable SERIAL_OF_PLATFORM Merge branch 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm into next\n\nPull ARM updates from Russell King:\n\n - Major clean-up of the L2 cache support code.  The existing mess was\n   becoming rather unmaintainable through all the additions that others\n   have done over time.  This turns it into a much nicer structure, and\n   implements a few performance improvements as well.\n\n - Clean up some of the CP15 control register tweaks for alignment\n   support, moving some code and data into alignment.c\n\n - DMA properties for ARM, from Santosh and reviewed by DT people.  This\n   adds DT properties to specify bus translations we can't discover\n   automatically, and to indicate whether devices are coherent.\n\n - Hibernation support for ARM\n\n - Make ftrace work with read-only text in modules\n\n - add suspend support for PJ4B CPUs\n\n - rework interrupt masking for undefined instruction handling, which\n   allows us to enable interrupts earlier in the handling of these\n   exceptions.\n\n - support for big endian page tables\n\n - fix stacktrace support to exclude stacktrace functions from the\n   trace, and add save_stack_trace_regs() implementation so that kprobes\n   can record stack traces.\n\n - Add support for the Cortex-A17 CPU.\n\n - Remove last vestiges of ARM710 support.\n\n - Removal of ARM \"meminfo\" structure, finally converting us solely to\n   memblock to handle the early memory initialisation.\n\n* 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm: (142 commits)\n  ARM: ensure C page table setup code follows assembly code (part II)\n  ARM: ensure C page table setup code follows assembly code\n  ARM: consolidate last remaining open-coded alignment trap enable\n  ARM: remove global cr_no_alignment\n  ARM: remove CPU_CP15 conditional from alignment.c\n  ARM: remove unused adjust_cr() function\n  ARM: move \"noalign\" command line option to alignment.c\n  ARM: provide common method to clear bits in CPU control register\n  ARM: 8025/1: Get rid of meminfo\n  ARM: 8060/1: mm: allow sub-architectures to override PCI I/O memory type\n  ARM: 8066/1: correction for ARM patch 8031/2\n  ARM: 8049/1: ftrace/add save_stack_trace_regs() implementation\n  ARM: 8065/1: remove last use of CONFIG_CPU_ARM710\n  ARM: 8062/1: Modify ldrt fixup handler to re-execute the userspace instruction\n  ARM: 8047/1: rwsem: use asm-generic rwsem implementation\n  ARM: l2c: trial at enabling some Cortex-A9 optimisations\n  ARM: l2c: add warnings for stuff modifying aux_ctrl register values\n  ARM: l2c: print a warning with L2C-310 caches if the cache size is modified\n  ARM: l2c: remove old .set_debug method\n  ARM: l2c: kill L2X0_AUX_CTRL_MASK before anyone else makes use of this\n  ... Merge branch 'arm64-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull ARM64 EFI update from Peter Anvin:\n \"By agreement with the ARM64 EFI maintainers, we have agreed to make\n  -tip the upstream for all EFI patches.  That is why this patchset\n  comes from me :)\n\n  This patchset enables EFI stub support for ARM64, like we already have\n  on x86\"\n\n* 'arm64-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  arm64: efi: only attempt efi map setup if booting via EFI\n  efi/arm64: ignore dtb= when UEFI SecureBoot is enabled\n  doc: arm64: add description of EFI stub support\n  arm64: efi: add EFI stub\n  doc: arm: add UEFI support documentation\n  arm64: add EFI runtime services\n  efi: Add shared FDT related functions for ARM/ARM64\n  arm64: Add function to create identity mappings\n  efi: add helper function to get UEFI params from FDT\n  doc: efi-stub.txt updates for ARM\n  lib: add fdt_empty_tree.c Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Two last minute tooling fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf probe: Fix perf probe to find correct variable DIE\n  perf probe: Fix a segfault if asked for variable it doesn't find Merge branch 'futex-fixes' (futex fixes from Thomas Gleixner)\n\nMerge futex fixes from Thomas Gleixner:\n \"So with more awake and less futex wreckaged brain, I went through my\n  list of points again and came up with the following 4 patches.\n\n  1) Prevent pi requeueing on the same futex\n\n     I kept Kees check for uaddr1 == uaddr2 as a early check for private\n     futexes and added a key comparison to both futex_requeue and\n     futex_wait_requeue_pi.\n\n     Sebastian, sorry for the confusion yesterday night.  I really\n     misunderstood your question.\n\n     You are right the check is pointless for shared futexes where the\n     same physical address is mapped to two different virtual addresses.\n\n  2) Sanity check atomic acquisiton in futex_lock_pi_atomic\n\n     That's basically what Darren suggested.\n\n     I just simplified it to use futex_top_waiter() to find kernel\n     internal state.  If state is found return -EINVAL and do not bother\n     to fix up the user space variable.  It's corrupted already.\n\n  3) Ensure state consistency in futex_unlock_pi\n\n     The code is silly versus the owner died bit.  There is no point to\n     preserve it on unlock when the user space thread owns the futex.\n\n     What's worse is that it does not update the user space value when\n     the owner died bit is set.  So the kernel itself creates observable\n     inconsistency.\n\n     Another \"optimization\" is to retry an atomic unlock.  That's\n     pointless as in a sane environment user space would not call into\n     that code if it could have unlocked it atomically.  So we always\n     check whether there is kernel state around and only if there is\n     none, we do the unlock by setting the user space value to 0.\n\n  4) Sanitize lookup_pi_state\n\n     lookup_pi_state is ambigous about TID == 0 in the user space value.\n\n     This can be a valid state even if there is kernel state on this\n     uaddr, but we miss a few corner case checks.\n\n     I tried to come up with a smaller solution hacking the checks into\n     the current cruft, but it turned out to be ugly as hell and I got\n     more confused than I was before.  So I rewrote the sanity checks\n     along the state documentation with awful lots of commentry\"\n\n* emailed patches from Thomas Gleixner <tglx@linutronix.de>:\n  futex: Make lookup_pi_state more robust\n  futex: Always cleanup owner tid in unlock_pi\n  futex: Validate atomic acquisition in futex_lock_pi_atomic()\n  futex-prevent-requeue-pi-on-same-futex.patch futex: Forbid uaddr == uaddr2 in futex_requeue(..., requeue_pi=1) Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 EFI updates from Peter Anvin:\n \"A collection of EFI changes.  The perhaps most important one is to\n  fully save and restore the FPU state around each invocation of EFI\n  runtime, and to not choke on non-ASCII characters in the boot stub\"\n\n* 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  efivars: Add compatibility code for compat tasks\n  efivars: Refactor sanity checking code into separate function\n  efivars: Stop passing a struct argument to efivar_validate()\n  efivars: Check size of user object\n  efivars: Use local variables instead of a pointer dereference\n  x86/efi: Save and restore FPU context around efi_calls (i386)\n  x86/efi: Save and restore FPU context around efi_calls (x86_64)\n  x86/efi: Implement a __efi_call_virt macro\n  x86, fpu: Extend the use of static_cpu_has_safe\n  x86/efi: Delete most of the efi_call* macros\n  efi: x86: Handle arbitrary Unicode characters\n  efi: Add get_dram_base() helper function\n  efi: Add shared printk wrapper for consistent prefixing\n  efi: create memory map iteration helper\n  efi: efi-stub-helper cleanup Merge branch 'x86/vdso' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 cdso updates from Peter Anvin:\n \"Vdso cleanups and improvements largely from Andy Lutomirski.  This\n  makes the vdso a lot less ''special''\"\n\n* 'x86/vdso' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/vdso, build: Make LE access macros clearer, host-safe\n  x86/vdso, build: Fix cross-compilation from big-endian architectures\n  x86/vdso, build: When vdso2c fails, unlink the output\n  x86, vdso: Fix an OOPS accessing the HPET mapping w/o an HPET\n  x86, mm: Replace arch_vma_name with vm_ops->name for vsyscalls\n  x86, mm: Improve _install_special_mapping and fix x86 vdso naming\n  mm, fs: Add vm_ops->name as an alternative to arch_vma_name\n  x86, vdso: Fix an OOPS accessing the HPET mapping w/o an HPET\n  x86, vdso: Remove vestiges of VDSO_PRELINK and some outdated comments\n  x86, vdso: Move the vvar and hpet mappings next to the 64-bit vDSO\n  x86, vdso: Move the 32-bit vdso special pages after the text\n  x86, vdso: Reimplement vdso.so preparation in build-time C\n  x86, vdso: Move syscall and sysenter setup into kernel/cpu/common.c\n  x86, vdso: Clean up 32-bit vs 64-bit vdso params\n  x86, mm: Ensure correct alignment of the fixmap Merge branch 'x86/espfix' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86-64 espfix changes from Peter Anvin:\n \"This is the espfix64 code, which fixes the IRET information leak as\n  well as the associated functionality problem.  With this code applied,\n  16-bit stack segments finally work as intended even on a 64-bit\n  kernel.\n\n  Consequently, this patchset also removes the runtime option that we\n  added as an interim measure.\n\n  To help the people working on Linux kernels for very small systems,\n  this patchset also makes these compile-time configurable features\"\n\n* 'x86/espfix' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  Revert \"x86-64, modify_ldt: Make support for 16-bit segments a runtime option\"\n  x86, espfix: Make it possible to disable 16-bit support\n  x86, espfix: Make espfix64 a Kconfig option, fix UML\n  x86, espfix: Fix broken header guard\n  x86, espfix: Move espfix definitions into a separate header file\n  x86-32, espfix: Remove filter for espfix32 due to race\n  x86-64, espfix: Don't leak bits 31:16 of %esp returning to 16-bit stack Merge branch 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 x32 ABI fix from Peter Anvin:\n \"A single fix for the x32 ABI: the io_setup() and io_submit() system\n  call need to use the compat stubs\"\n\n* 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, x32: Use compat shims for io_{setup,submit} Merge branch 'akpm' (patchbomb from Andrew) into next\n\nMerge misc updates from Andrew Morton:\n\n - a few fixes for 3.16.  Cc'ed to stable so they'll get there somehow.\n\n - various misc fixes and cleanups\n\n - most of the ocfs2 queue.  Review is slow...\n\n - most of MM.  The MM queue is pretty huge this time, but not much in\n   the way of feature work.\n\n - some tweaks under kernel/\n\n - printk maintenance work\n\n - updates to lib/\n\n - checkpatch updates\n\n - tweaks to init/\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (276 commits)\n  fs/autofs4/dev-ioctl.c: add __init to autofs_dev_ioctl_init\n  fs/ncpfs/getopt.c: replace simple_strtoul by kstrtoul\n  init/main.c: remove an ifdef\n  kthreads: kill CLONE_KERNEL, change kernel_thread(kernel_init) to avoid CLONE_SIGHAND\n  init/main.c: add initcall_blacklist kernel parameter\n  init/main.c: don't use pr_debug()\n  fs/binfmt_flat.c: make old_reloc() static\n  fs/binfmt_elf.c: fix bool assignements\n  fs/efs: convert printk(KERN_DEBUG to pr_debug\n  fs/efs: add pr_fmt / use __func__\n  fs/efs: convert printk to pr_foo()\n  scripts/checkpatch.pl: device_initcall is not the only __initcall substitute\n  checkpatch: check stable email address\n  checkpatch: warn on unnecessary void function return statements\n  checkpatch: prefer kstrto<foo> to sscanf(buf, \"%<lhuidx>\", &bar);\n  checkpatch: add warning for kmalloc/kzalloc with multiply\n  checkpatch: warn on #defines ending in semicolon\n  checkpatch: make --strict a default for files in drivers/net and net/\n  checkpatch: always warn on missing blank line after variable declaration block\n  checkpatch: fix wildcard DT compatible string checking\n  ... Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull core irq updates from Thomas Gleixner:\n \"The irq department delivers:\n\n   - Another tree wide update to get rid of the horrible create_irq\n     interface along with its even more horrible variants.  That also\n     gets rid of the last leftovers of the initial sparse irq hackery.\n     arch/driver specific changes have been either acked or ignored.\n\n   - A fix for the spurious interrupt detection logic with threaded\n     interrupts.\n\n   - A new ARM SoC interrupt controller\n\n   - The usual pile of fixes and improvements all over the place\"\n\n* 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (40 commits)\n  Documentation: brcmstb-l2: Add Broadcom STB Level-2 interrupt controller binding\n  irqchip: brcmstb-l2: Add Broadcom Set Top Box Level-2 interrupt controller\n  genirq: Improve documentation to match current implementation\n  ARM: iop13xx: fix msi support with sparse IRQ\n  genirq: Provide !SMP stub for irq_set_affinity_notifier()\n  irqchip: armada-370-xp: Move the devicetree binding documentation\n  irqchip: gic: Use mask field in GICC_IAR\n  genirq: Remove dynamic_irq mess\n  ia64: Use irq_init_desc\n  genirq: Replace dynamic_irq_init/cleanup\n  genirq: Remove irq_reserve_irq[s]\n  genirq: Replace reserve_irqs in core code\n  s390: Avoid call to irq_reserve_irqs()\n  s390: Remove pointless arch_show_interrupts()\n  s390: pci: Check return value of alloc_irq_desc() proper\n  sh: intc: Remove pointless irq_reserve_irqs() invocation\n  x86, irq: Remove pointless irq_reserve_irqs() call\n  genirq: Make create/destroy_irq() ia64 private\n  tile: Use SPARSE_IRQ\n  tile: pci: Use irq_alloc/free_hwirq()\n  ... Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull timer core updates from Thomas Gleixner:\n \"This time you get nothing really exciting:\n   - A huge update to the sh* clocksource drivers\n   - Support for two more ARM SoCs\n   - Removal of the deprecated setup_sched_clock() API\n   - The usual pile of fixlets all over the place\"\n\n* 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (23 commits)\n  clocksource: Add Freescale FlexTimer Module (FTM) timer support\n  ARM: dts: vf610: Add Freescale FlexTimer Module timer node.\n  clocksource: ftm: Add FlexTimer Module (FTM) Timer devicetree Documentation\n  clocksource: sh_tmu: Remove unnecessary OOM messages\n  clocksource: sh_mtu2: Remove unnecessary OOM messages\n  clocksource: sh_cmt: Remove unnecessary OOM messages\n  clocksource: em_sti: Remove unnecessary OOM messages\n  clocksource: dw_apb_timer_of: Do not trace read_sched_clock\n  clocksource: Fix clocksource_mmio_readX_down\n  clocksource: Fix type confusion for clocksource_mmio_readX_Y\n  clocksource: sh_tmu: Fix channel IRQ retrieval in legacy case\n  clocksource: qcom: Implement read_current_timer for udelay\n  ntp: Make is_error_status() use its argument\n  ntp: Convert simple_strtol to kstrtol\n  timer_stats/doc: Fix /proc/timer_stats documentation\n  sched_clock: Remove deprecated setup_sched_clock() API\n  ARM: sun6i: a31: Add support for the High Speed Timers\n  clocksource: sun5i: Add support for reset controller\n  clocksource: efm32: use $vendor,$device scheme for compatible string\n  KConfig: Vexpress: build the ARM_GLOBAL_TIMER with vexpress platform\n  ... Merge branch 'for-linus' of git://git.kernel.dk/linux-block into next\n\nPull block follow-up bits from Jens Axboe:\n \"A few minor (but important) fixes for blk-mq for the -rc1 window.\n\n   - Hot removal potential oops fix for single queue devices.  From me.\n\n   - Two merged patches in late May meant that we accidentally lost a\n     fix for freeing an active queue.  Fix that up.  From me.\n\n   - A change of the blk_mq_tag_to_rq() API, passing in blk_mq_tags, to\n     make life considerably easier for scsi-mq.  From me.\n\n   - A schedule-while-atomic fix from Ming Lei, which would hit if the\n     tag space was exhausted.\n\n   - Missing __percpu annotation in one place in blk-mq.  Found by the\n     magic Wu compile bot due to code being moved around by the previous\n     patch, but it's actually an older issue.  From Ming Lei.\n\n   - Clearing of tag of a flush request at end_io time.  From Ming Lei\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  block: mq flush: clear flush_rq's tag in flush_end_io()\n  blk-mq: let blk_mq_tag_to_rq() take blk_mq_tags as the main parameter\n  blk-mq: fix regression from commit 624dbe475416\n  blk-mq: handle NULL req return from blk_map_request in single queue mode\n  blk-mq: fix sparse warning on missed __percpu annotation\n  blk-mq: fix schedule from atomic context\n  blk-mq: move blk_mq_get_ctx/blk_mq_put_ctx to mq private header Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media into next\n\nPull media updates from Mauro Carvalho Chehab:\n \"This contains:\n   - a new frontend/tuner driver set for si2168 and sa2157\n   - Videobuf 2 core now supports DVB too\n   - A new gspca sub-driver (dtcs033)\n   - saa7134 is now converted to use videobuf2\n   - add support for 4K timings\n   - several other driver fixes and improvements\n\n  PS.  This pull request is shorter than usual, partly because I have\n  some other patches on topic branches that I'll be sending you later\n  this week\"\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (286 commits)\n  [media] au0828-dvb: restore its permission to 644\n  [media] xc5000: delay tuner sleep to 5 seconds\n  [media] xc5000: Don't use whitespace before tabs\n  [media] xc5000: fix CamelCase\n  [media] xc5000: Don't wrap msleep()\n  [media] xc5000: get rid of positive error codes\n  [media] au0828: reset streaming when a new frequency is set\n  [media] au0828: Improve debug messages for urb_completion\n  [media] au0828: Cancel stream-restart operation if frontend is disconnected\n  [media] dib0700: fix RC support on Hauppauge Nova-TD\n  [media] USB: as102_usb_drv.c: Remove useless return variables\n  [media] v4l: Fix documentation of V4L2_PIX_FMT_H264_MVC and VP8 pixel formats\n  [media] m5mols: Replace missing header\n  [media] staging: lirc: Fix sparse warnings\n  [media] fix mceusb endpoint type identification/handling\n  [media] az6027: Added the PID for a new revision of the Elgato EyeTV Sat DVB-S Tuner\n  [media] DocBook media: fix typo\n  [media] adv7604: Add missing include to linux/types.h\n  [media] v4l: Validate fields in the core code for subdev EDID ioctls\n  [media] v4l: Add support for DV timings ioctls on subdev nodes\n  ... Merge tag 'devicetree-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux into next\n\nPull DeviceTree updates from Rob Herring:\n - Another round of clean-up of FDT related code in architecture code.\n   This removes knowledge of internal FDT details from most\n   architectures except powerpc.\n - Conversion of kernel's custom FDT parsing code to use libfdt.\n - DT based initialization for generic serial earlycon.  The\n   introduction of generic serial earlycon support went in through the\n   tty tree.\n - Improve the platform device naming for DT probed devices to ensure\n   unique naming and use parent names instead of a global index.\n - Fix a race condition in of_update_property.\n - Unify the various linker section OF match tables and fix several\n   function prototype errors.\n - Update platform_get_irq_byname to work in deferred probe cases.\n - 2 binding doc updates\n\n* tag 'devicetree-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux: (58 commits)\n  of: handle NULL node in next_child iterators\n  of/irq: provide more wrappers for !CONFIG_OF\n  devicetree: bindings: Document micrel vendor prefix\n  dt: bindings: dwc2: fix required value for the phy-names property\n  of_pci_irq: kill useless variable in of_irq_parse_pci()\n  of/irq: do irq resolution in platform_get_irq_byname()\n  of: Add a testcase for of_find_node_by_path()\n  of: Make of_find_node_by_path() handle /aliases\n  of: Create unlocked version of for_each_child_of_node()\n  lib: add glibc style strchrnul() variant\n  of: Handle memory@0 node on PPC32 only\n  pci/of: Remove dead code\n  of: fix race between search and remove in of_update_property()\n  of: Use NULL for pointers\n  of: Stop naming platform_device using dcr address\n  of: Ensure unique names without sacrificing determinism\n  tty/serial: pl011: add DT based earlycon support\n  of/fdt: add FDT serial scanning for earlycon\n  of/fdt: add FDT address translation support\n  serial: earlycon: add DT support\n  ... Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull percpu fix from Tejun Heo:\n \"It is very late but this is an important percpu-refcount fix from\n  Sebastian Ott.\n\n  The problem is that percpu_ref_*() used __this_cpu_*() instead of\n  this_cpu_*().  The difference between the two is that the latter is\n  atomic on the local cpu while the former is not.  this_cpu_inc() is\n  guaranteed to increment the percpu counter on the cpu that the\n  operation is executed on without any synchronization; however,\n  __this_cpu_inc() doesn't and if the local cpu invokes the function\n  from different contexts (e.g.  process and irq) of the same CPU, it's\n  not guaranteed to actually increment as it may be implemented as rmw.\n\n  This bug existed from the get-go but it hasn't been noticed earlier\n  probably because on x86 __this_cpu_inc() is equivalent to\n  this_cpu_inc() as both get translated into single instruction;\n  however, s390 uses the generic rmw implementation and gets affected by\n  the bug.  Kudos to Sebastian and Heiko for diagnosing it.\n\n  The change is very low risk and fixes a critical issue on the affected\n  architectures, so I think it's a good candidate for inclusion although\n  it's very late in the devel cycle.  On the other hand, this has been\n  broken since v3.11, so backporting it through -stable post -rc1 won't\n  be the end of the world.\n\n  I'll ping Christoph whether __this_cpu_*() ops can be better annotated\n  so that it can trigger lockdep warning when used from multiple\n  contexts\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:\n  percpu-refcount: fix usage of this_cpu_ops Merge tag 'sound-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound into next\n\nPull sound updates from Takashi Iwai:\n \"At this time, majority of changes come from ASoC world while we got a\n  few new drivers in other places for FireWire and USB.  There have been\n  lots of ASoC core cleanups / refactoring, but very little visible to\n  external users.\n\n  ASoC:\n   - Support for specifying aux CODECs in DT\n   - Removal of the deprecated mux and enum macros\n   - More moves towards full componentisation\n   - Removal of some unused I/O code\n   - Lots of cleanups, fixes and enhancements to the davinci, Freescale,\n     Haswell and Realtek drivers\n   - Several drivers exposed directly in Kconfig for use with\n     simple-card\n   - GPIO descriptor support for jacks\n   - More updates and fixes to the Freescale SSI, Intel and rsnd drivers\n   - New drivers for Cirrus CS42L56, Realtek RT5639, RT5642 and RT5651\n     and ST STA350, Analog Devices ADAU1361, ADAU1381, ADAU1761 and\n     ADAU1781, and Realtek RT5677\n\n  HD-audio:\n   - Clean up Dell headset quirks\n   - Noise fixes for Dell and Sony laptops\n   - Thinkpad T440 dock fix\n   - Realtek codec updates (ALC293,ALC233,ALC3235)\n   - Tegra HD-audio HDMI support\n\n  FireWire-audio:\n   - FireWire audio stack enhancement (AMDTP, MIDI), support for\n     incoming isochronous stream and duplex streams with timestamp\n     synchronization\n   - BeBoB-based devices support\n   - Fireworks-based device support\n\n  USB-audio:\n   - Behringer BCD2000 USB device support\n\n  Misc:\n   - Clean up of a few old drivers, atmel, fm801, etc\"\n\n* tag 'sound-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (480 commits)\n  ASoC: Fix wrong argument for card remove callbacks\n  ASoC: free jack GPIOs before the sound card is freed\n  ALSA: firewire-lib: Remove a comment about restriction of asynchronous operation\n  ASoC: cache: Fix error code when not using ASoC level cache\n  ALSA: hda/realtek - Fix COEF widget NID for ALC260 replacer fixup\n  ALSA: hda/realtek - Correction of fixup codes for PB V7900 laptop\n  ALSA: firewire-lib: Use IEC 61883-6 compliant labels for Raw Audio data\n  ASoC: add RT5677 CODEC driver\n  ASoC: intel: The Baytrail/MAX98090 driver depends on I2C\n  ASoC: rt5640: Add the function \"get_clk_info\" to RL6231 shared support\n  ASoC: rt5640: Add the function of the PLL clock calculation to RL6231 shared support\n  ASoC: rt5640: Add RL6231 class device shared support for RT5640, RT5645 and RT5651\n  ASoC: cache: Fix possible ZERO_SIZE_PTR pointer dereferencing error.\n  ASoC: Add helper functions to cast from DAPM context to CODEC/platform\n  ALSA: bebob: sizeof() vs ARRAY_SIZE() typo\n  ASoC: wm9713: correct mono out PGA sources\n  ALSA: synth: emux: soundfont.c: Cleaning up memory leak\n  ASoC: fsl: Remove dependencies of boards for SND_SOC_EUKREA_TLV320\n  ASoC: fsl-ssi: Use regmap\n  ASoC: fsl-ssi: reorder and document fsl_ssi_private\n  ... Merge tag 'fbdev-omap-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux into next\n\nPull omap fbdev changes from Tomi Valkeinen:\n - DT support for the panel drivers that were still missing it\n - TI AM43xx support\n - TI OMAP5 support\n\n* tag 'fbdev-omap-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux: (46 commits)\n  OMAPDSS: move 'compatible' converter to omapdss driver\n  OMAPDSS: HDMI: fix devm_ioremap_resource error checks\n  OMAPDSS: HDMI: remove unused defines\n  OMAPDSS: HDMI: cleanup WP ioremaps\n  OMAPDSS: panel NEC-NL8048HL11 DT support\n  Doc/DT: Add DT binding documentation for TPO td043mtea1 panel\n  OMAPDSS: Panel TPO-TD043MTEA1 DT support\n  Doc/DT: Add DT binding documentation for SHARP LS037V7DW01\n  OMAPDSS: panel sharp-ls037v7dw01 DT support\n  OMAPDSS: panel-sharp-ls037v7dw01: update to use gpiod\n  Doc/DT: Add binding doc for lgphilips,lb035q02.txt\n  OMAPDSS: panel-lgphilips-lb035q02: Add DT support\n  OMAPDSS: panel-lgphilips-lb035q02: use gpiod for enable gpio\n  OMAPDSS: hdmi5_core: Fix compilation with OMAP5_DSS_HDMI_AUDIO\n  OMAPDSS: panel-dpi: enable-gpio\n  OMAPDSS: Fix writes to DISPC_POL_FREQ\n  Doc/DT: Add OMAP5 DSS DT bindings\n  OMAPDSS: HDMI: cleanup ioremaps\n  OMAPDSS: HDMI: Add OMAP5 HDMI support\n  OMAPDSS: HDMI: PLL changes for OMAP5\n  ... Merge tag 'fbdev-main-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux into next\n\nPull main fbdev changes from Tomi Valkeinen:\n \"Mainly fixes and small improvements.  The biggest change seems to be\n  backlight control support for mx3fb\"\n\n* tag 'fbdev-main-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux: (31 commits)\n  drivers/video/fbdev/fb-puv3.c: Add header files for function unifb_mmap\n  video: fbdev: s3fb.c: Fix for possible null pointer dereference\n  video: fbdev: grvga.c: Fix for possible null pointer dereference\n  matroxfb: perform a dummy read of M_STATUS\n  video: of: display_timing: fix default native-mode setting\n  video: delete unneeded call to platform_get_drvdata\n  video: mx3fb: Add backlight control support\n  video: omap: delete support for early fbmem allocation\n  video: of: display_timing: remove two unsafe error messages\n  fbdev: fbmem: remove positive test on unsigned values\n  fbcon: Fix memory leak in con2fb_release_oldinfo()\n  video: Kconfig: Add a dependency to the Goldfish framebuffer driver\n  video: exynos: Add a dependency to the menu\n  video: mx3fb: Use devm_kzalloc\n  video/nuc900: allow modular build\n  video: atmel needs FB_BACKLIGHT\n  video: export fb_prepare_logo\n  video/mbx: fix building debugfs support\n  video/omap: fix modular build\n  video: clarify I2C dependencies\n  ... Merge tag 'pm+acpi-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm into next\n\nPull ACPI and power management updates from Rafael Wysocki:\n \"ACPICA is the leader this time (63 commits), followed by cpufreq (28\n  commits), devfreq (15 commits), system suspend/hibernation (12\n  commits), ACPI video and ACPI device enumeration (10 commits each).\n\n  We have no major new features this time, but there are a few\n  significant changes of how things work.  The most visible one will\n  probably be that we are now going to create platform devices rather\n  than PNP devices by default for ACPI device objects with _HID.  That\n  was long overdue and will be really necessary to be able to use the\n  same drivers for the same hardware blocks on ACPI and DT-based systems\n  going forward.  We're not expecting fallout from this one (as usual),\n  but it's something to watch nevertheless.\n\n  The second change having a chance to be visible is that ACPI video\n  will now default to using native backlight rather than the ACPI\n  backlight interface which should generally help systems with broken\n  Win8 BIOSes.  We're hoping that all problems with the native backlight\n  handling that we had previously have been addressed and we are in a\n  good enough shape to flip the default, but this change should be easy\n  enough to revert if need be.\n\n  In addition to that, the system suspend core has a new mechanism to\n  allow runtime-suspended devices to stay suspended throughout system\n  suspend/resume transitions if some extra conditions are met\n  (generally, they are related to coordination within device hierarchy).\n  However, enabling this feature requires cooperation from the bus type\n  layer and for now it has only been implemented for the ACPI PM domain\n  (used by ACPI-enumerated platform devices mostly today).\n\n  Also, the acpidump utility that was previously shipped as a separate\n  tool will now be provided by the upstream ACPICA along with the rest\n  of ACPICA code, which will allow it to be more up to date and better\n  supported, and we have one new cpuidle driver (ARM clps711x).\n\n  The rest is improvements related to certain specific use cases,\n  cleanups and fixes all over the place.\n\n  Specifics:\n\n   - ACPICA update to upstream version 20140424.  That includes a number\n     of fixes and improvements related to things like GPE handling,\n     table loading, headers, memory mapping and unmapping, DSDT/SSDT\n     overriding, and the Unload() operator.  The acpidump utility from\n     upstream ACPICA is included too.  From Bob Moore, Lv Zheng, David\n     Box, David Binderman, and Colin Ian King.\n\n   - Fixes and cleanups related to ACPI video and backlight interfaces\n     from Hans de Goede.  That includes blacklist entries for some new\n     machines and using native backlight by default.\n\n   - ACPI device enumeration changes to create platform devices rather\n     than PNP devices for ACPI device objects with _HID by default.  PNP\n     devices will still be created for the ACPI device object with\n     device IDs corresponding to real PNP devices, so that change should\n     not break things left and right, and we're expecting to see more\n     and more ACPI-enumerated platform devices in the future.  From\n     Zhang Rui and Rafael J Wysocki.\n\n   - Updates for the ACPI LPSS (Low-Power Subsystem) driver allowing it\n     to handle system suspend/resume on Asus T100 correctly.  From\n     Heikki Krogerus and Rafael J Wysocki.\n\n   - PM core update introducing a mechanism to allow runtime-suspended\n     devices to stay suspended over system suspend/resume transitions if\n     certain additional conditions related to coordination within device\n     hierarchy are met.  Related PM documentation update and ACPI PM\n     domain support for the new feature.  From Rafael J Wysocki.\n\n   - Fixes and improvements related to the \"freeze\" sleep state.  They\n     affect several places including cpuidle, PM core, ACPI core, and\n     the ACPI battery driver.  From Rafael J Wysocki and Zhang Rui.\n\n   - Miscellaneous fixes and updates of the ACPI core from Aaron Lu,\n     Bjørn Mork, Hanjun Guo, Lan Tianyu, and Rafael J Wysocki.\n\n   - Fixes and cleanups for the ACPI processor and ACPI PAD (Processor\n     Aggregator Device) drivers from Baoquan He, Manuel Schölling, Tony\n     Camuso, and Toshi Kani.\n\n   - System suspend/resume optimization in the ACPI battery driver from\n     Lan Tianyu.\n\n   - OPP (Operating Performance Points) subsystem updates from Chander\n     Kashyap, Mark Brown, and Nishanth Menon.\n\n   - cpufreq core fixes, updates and cleanups from Srivatsa S Bhat,\n     Stratos Karafotis, and Viresh Kumar.\n\n   - Updates, fixes and cleanups for the Tegra, powernow-k8, imx6q,\n     s5pv210, nforce2, and powernv cpufreq drivers from Brian Norris,\n     Jingoo Han, Paul Bolle, Philipp Zabel, Stratos Karafotis, and\n     Viresh Kumar.\n\n   - intel_pstate driver fixes and cleanups from Dirk Brandewie, Doug\n     Smythies, and Stratos Karafotis.\n\n   - Enabling the big.LITTLE cpufreq driver on arm64 from Mark Brown.\n\n   - Fix for the cpuidle menu governor from Chander Kashyap.\n\n   - New ARM clps711x cpuidle driver from Alexander Shiyan.\n\n   - Hibernate core fixes and cleanups from Chen Gang, Dan Carpenter,\n     Fabian Frederick, Pali Rohár, and Sebastian Capella.\n\n   - Intel RAPL (Running Average Power Limit) driver updates from Jacob\n     Pan.\n\n   - PNP subsystem updates from Bjorn Helgaas and Fabian Frederick.\n\n   - devfreq core updates from Chanwoo Choi and Paul Bolle.\n\n   - devfreq updates for exynos4 and exynos5 from Chanwoo Choi and\n     Bartlomiej Zolnierkiewicz.\n\n   - turbostat tool fix from Jean Delvare.\n\n   - cpupower tool updates from Prarit Bhargava, Ramkumar Ramachandra\n     and Thomas Renninger.\n\n   - New ACPI ec_access.c tool for poking at the EC in a safe way from\n     Thomas Renninger\"\n\n* tag 'pm+acpi-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (187 commits)\n  ACPICA: Namespace: Remove _PRP method support.\n  intel_pstate: Improve initial busy calculation\n  intel_pstate: add sample time scaling\n  intel_pstate: Correct rounding in busy calculation\n  intel_pstate: Remove C0 tracking\n  PM / hibernate: fixed typo in comment\n  ACPI: Fix x86 regression related to early mapping size limitation\n  ACPICA: Tables: Add mechanism to control early table checksum verification.\n  ACPI / scan: use platform bus type by default for _HID enumeration\n  ACPI / scan: always register ACPI LPSS scan handler\n  ACPI / scan: always register memory hotplug scan handler\n  ACPI / scan: always register container scan handler\n  ACPI / scan: Change the meaning of missing .attach() in scan handlers\n  ACPI / scan: introduce platform_id device PNP type flag\n  ACPI / scan: drop unsupported serial IDs from PNP ACPI scan handler ID list\n  ACPI / scan: drop IDs that do not comply with the ACPI PNP ID rule\n  ACPI / PNP: use device ID list for PNPACPI device enumeration\n  ACPI / scan: .match() callback for ACPI scan handlers\n  ACPI / battery: wakeup the system only when necessary\n  power_supply: allow power supply devices registered w/o wakeup source\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid into next\n\nPull HID patches from Jiri Kosina:\n - RMI driver for Synaptics touchpads, by Benjamin Tissoires, Andrew\n   Duggan and Jiri Kosina\n - cleanup of hid-sony driver and improved support for Sixaxis and\n   Dualshock 4, by Frank Praznik\n - other usual small fixes and support for new device IDs\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid: (29 commits)\n  HID: thingm: thingm_fwinfo[] doesn't need to be global\n  HID: core: add two new usages for digitizer\n  HID: hid-sensor-hub: new device id and quirk for STM Sensor hub\n  HID: usbhid: enable NO_INIT_REPORTS quirk for Semico USB Keykoard\n  HID: hid-sensor-hub: Set report quirk for Microsoft Surface\n  HID: debug: add labels for HID Sensor Usages\n  HID: uhid: Use kmemdup instead of kmalloc + memcpy\n  HID: rmi: do not handle touchscreens through hid-rmi\n  HID: quirk for Saitek RAT7 and MMO7 mices' mode button\n  HID: core: fix validation of report id 0\n  HID: rmi: fix masks for x and w_x data\n  HID: rmi: fix wrong struct field name\n  HID: rmi: do not fetch more than 16 bytes in a query\n  HID: rmi: check for the existence of some optional queries before reading query 12\n  HID: i2c-hid: hid report descriptor retrieval changes\n  HID: add missing hid usages\n  HID: hid-sony - allow 3rd party INTEC controller to turn off all leds\n  HID: sony: Add blink support to the Sixaxis and DualShock 4 LEDs\n  HID: sony: Initialize the controller LEDs with a device ID value\n  HID: sony: Use the controller Bluetooth MAC address as the unique value in the battery name string\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial into next\n\nPull trivial tree changes from Jiri Kosina:\n \"Usual pile of patches from trivial tree that make the world go round\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (23 commits)\n  staging: go7007: remove reference to CONFIG_KMOD\n  aic7xxx: Remove obsolete preprocessor define\n  of: dma: doc fixes\n  doc: fix incorrect formula to calculate CommitLimit value\n  doc: Note need of bc in the kernel build from 3.10 onwards\n  mm: Fix printk typo in dmapool.c\n  modpost: Fix comment typo \"Modules.symvers\"\n  Kconfig.debug: Grammar s/addition/additional/\n  wimax: Spelling s/than/that/, wording s/destinatary/recipient/\n  aic7xxx: Spelling s/termnation/termination/\n  arm64: mm: Remove superfluous \"the\" in comment\n  of: Spelling s/anonymouns/anonymous/\n  dma: imx-sdma: Spelling s/determnine/determine/\n  ath10k: Improve grammar in comments\n  ath6kl: Spelling s/determnine/determine/\n  of: Improve grammar for of_alias_get_id() documentation\n  drm/exynos: Spelling s/contro/control/\n  radio-bcm2048.c: fix wrong overflow check\n  doc: printk-formats: do not mention casts for u64/s64\n  doc: spelling error changes\n  ... Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm into next\n\nPull KVM updates from Paolo Bonzini:\n \"At over 200 commits, covering almost all supported architectures, this\n  was a pretty active cycle for KVM.  Changes include:\n\n   - a lot of s390 changes: optimizations, support for migration, GDB\n     support and more\n\n   - ARM changes are pretty small: support for the PSCI 0.2 hypercall\n     interface on both the guest and the host (the latter acked by\n     Catalin)\n\n   - initial POWER8 and little-endian host support\n\n   - support for running u-boot on embedded POWER targets\n\n   - pretty large changes to MIPS too, completing the userspace\n     interface and improving the handling of virtualized timer hardware\n\n   - for x86, a larger set of changes is scheduled for 3.17.  Still, we\n     have a few emulator bugfixes and support for running nested\n     fully-virtualized Xen guests (para-virtualized Xen guests have\n     always worked).  And some optimizations too.\n\n  The only missing architecture here is ia64.  It's not a coincidence\n  that support for KVM on ia64 is scheduled for removal in 3.17\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (203 commits)\n  KVM: add missing cleanup_srcu_struct\n  KVM: PPC: Book3S PR: Rework SLB switching code\n  KVM: PPC: Book3S PR: Use SLB entry 0\n  KVM: PPC: Book3S HV: Fix machine check delivery to guest\n  KVM: PPC: Book3S HV: Work around POWER8 performance monitor bugs\n  KVM: PPC: Book3S HV: Make sure we don't miss dirty pages\n  KVM: PPC: Book3S HV: Fix dirty map for hugepages\n  KVM: PPC: Book3S HV: Put huge-page HPTEs in rmap chain for base address\n  KVM: PPC: Book3S HV: Fix check for running inside guest in global_invalidates()\n  KVM: PPC: Book3S: Move KVM_REG_PPC_WORT to an unused register number\n  KVM: PPC: Book3S: Add ONE_REG register names that were missed\n  KVM: PPC: Add CAP to indicate hcall fixes\n  KVM: PPC: MPIC: Reset IRQ source private members\n  KVM: PPC: Graciously fail broken LE hypercalls\n  PPC: ePAPR: Fix hypercall on LE guest\n  KVM: PPC: BOOK3S: Remove open coded make_dsisr in alignment handler\n  KVM: PPC: BOOK3S: Always use the saved DAR value\n  PPC: KVM: Make NX bit available with magic page\n  KVM: PPC: Disable NX for old magic page using guests\n  KVM: PPC: BOOK3S: HV: Add mixed page-size support for guest\n  ... Merge tag 'jfs-3.16' of git://github.com/kleikamp/linux-shaggy into next\n\nPull jfs changes from Dave Kleikamp.\n\n* tag 'jfs-3.16' of git://github.com/kleikamp/linux-shaggy:\n  fs/jfs/super.c: convert simple_str to kstr\n  fs/jfs/jfs_dmap.c: replace min/casting by min_t\n  fs/jfs/super.c: remove 0 assignment to static + code clean-up\n  fs/jfs/jfs_logmgr.c: remove NULL assignment on static\n  JFS: Check for NULL before calling posix_acl_equiv_mode()\n  fs/jfs/jfs_inode.c: atomically set inode->i_flags Merge tag 'gfs2-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw into next\n\nPull gfs2 updates from Steven Whitehouse:\n \"This must be about the smallest merge window patch set ever for GFS2.\n  It is probably also the first one without a single patch from me.\n  That is down to a combination of factors, and I have some things in\n  the works that are not quite ready yet, that I hope to put in next\n  time around.\n\n  Returning to what is here this time...  we have 3 patches which fix\n  various warnings.  Two are bug fixes (for quotas and also a rare\n  recovery race condition).  The final patch, from Ben Marzinski, is an\n  important change in the freeze code which has been in progress for\n  some time.  This removes the need to take and drop the transaction\n  lock for every single transaction, when the only time it was used, was\n  at file system freeze time.  Ben's patch integrates the freeze\n  operation into the journal flush code as an alternative with lower\n  overheads and also lands up resolving some difficult to fix races at\n  the same time\"\n\n* tag 'gfs2-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw:\n  GFS2: Prevent recovery before the local journal is set\n  GFS2: fs/gfs2/file.c: kernel-doc warning fixes\n  GFS2: fs/gfs2/bmap.c: kernel-doc warning fixes\n  GFS2: remove transaction glock\n  GFS2: lops.c: replace 0 by NULL for pointers\n  GFS2: quotas not being refreshed in gfs2_adjust_quota Merge tag 'locks-v3.16' of git://git.samba.org/jlayton/linux into next\n\nPull file locking changes from Jeff Layton:\n \"Pretty quiet on the file-locking related front this cycle.  Just some\n  small cleanups and the addition of some tracepoints in the lease\n  handling code\"\n\n* tag 'locks-v3.16' of git://git.samba.org/jlayton/linux:\n  locks: add some tracepoints in the lease handling code\n  fs/locks.c: replace seq_printf by seq_puts\n  locks: ensure that fl_owner is always initialized properly in flock and lease codepaths Merge tag 'pm-3.15-final' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull intel pstate fixes from Rafael Wysocki:\n \"Final power management fixes for 3.15\n\n   - Taking non-idle time into account when calculating core busy time\n     was a mistake and led to a performance regression.  Since the\n     problem it was supposed to address is now taken care of in a\n     different way, we don't need to do it any more, so drop the\n     non-idle time tracking from intel_pstate.  Dirk Brandewie.\n\n   - Changing to fixed point math throughout the busy calculation\n     introduced rounding errors that adversely affect the accuracy of\n     intel_pstate's computations.  Fix from Dirk Brandewie.\n\n   - The PID controller algorithm used by intel_pstate assumes that the\n     time interval between two adjacent samples will always be the same\n     which is not the case for deferable timers (used by intel_pstate)\n     when the system is idle.  This leads to inaccurate predictions and\n     artificially increases convergence times for the minimum P-state.\n     Fix from Dirk Brandewie.\n\n   - intel_pstate carries out computations using 32-bit variables that\n     may overflow for large enough values of APERF/MPERF.  Switch to\n     using 64-bit variables for computations, from Doug Smythies\"\n\n* tag 'pm-3.15-final' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  intel_pstate: Improve initial busy calculation\n  intel_pstate: add sample time scaling\n  intel_pstate: Correct rounding in busy calculation\n  intel_pstate: Remove C0 tracking Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"All fairly small: radeon stability and a panic path fix.\n\n  Mostly radeon fixes, suspend/resume fix, stability on the CIK\n  chipsets, along with a locking check avoidance patch for panic times\n  regression\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: use the CP DMA on CIK\n  drm/radeon: sync page table updates\n  drm/radeon: fix vm buffer size estimation\n  drm/crtc-helper: skip locking checks in panicking path\n  drm/radeon/dpm: resume fixes for some systems Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394 into next\n\nPull firewire updates from Stefan Richter:\n \"IEEE 1394 (FireWire) subsystem changes: One optimization for some VIA\n  controllers, one fix, one kconfig brushup\"\n\n* tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:\n  firewire: ohci: enable MSI for VIA VT6315 rev 1, drop cycle timer quirk\n  firewire: Use COMPILE_TEST for build testing\n  firewire: net: fix NULL derefencing in fwnet_probe() Merge branch 'x86-uv-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86/UV changes from Ingo Molnar:\n \"Continued updates for SGI UV 3 hardware support\"\n\n* 'x86-uv-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/UV: Fix conditional in gru_exit()\n  x86/UV: Set n_lshift based on GAM_GR_CONFIG MMR for UV3 Merge branch 'x86-ras-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 RAS changes from Ingo Molnar:\n \"Improve mcheck device initialization and bootstrap robustness\"\n\n* 'x86-ras-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  mce: Panic when a core has reached a timeout\n  x86/mce: Improve mcheck_init_device() error handling Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 IOSF platform updates from Ingo Molnar:\n \"IOSF (Intel OnChip System Fabric) updates:\n\n   - generalize the IOSF interface to allow mixed mode drivers: non-IOSF\n     drivers to utilize of IOSF features on IOSF platforms.\n\n   - add 'Quark X1000' IOSF/MBI support\n\n   - clean up BayTrail and Quark PCI ID enumeration\"\n\n* 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, iosf: Add PCI ID macros for better readability\n  x86, iosf: Add Quark X1000 PCI ID\n  x86, iosf: Added Quark MBI identifiers\n  x86, iosf: Make IOSF driver modular and usable by more drivers Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 mm update from Ingo Molnar:\n\n - speed up 256 GB PCI BAR ioremap()s\n\n - speed up PTE swapout page reclaim case\n\n* 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, ioremap: Speed up check for RAM pages\n  x86/mm: In the PTE swapout page reclaim case clear the accessed bit instead of flushing the TLB Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 microcode changes from Ingo Molnar:\n \"A microcode-debugging boot flag plus related refactoring\"\n\n* 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, microcode: Add a disable chicken bit\n  x86, boot: Carve out early cmdline parsing function Merge branch 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 irq cleanup from Ingo Molnar:\n \"A single, trivial cleanup\"\n\n* 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/irq: Clean up VECTOR_UNDEFINED and VECTOR_RETRIGGERED definition Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 build cleanups from Ingo Molnar:\n \"Two small build related cleanups\"\n\n* 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/build: Supress realmode.bin is up to date message\n  compiler-intel.h: Remove duplicate definition Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 boot changes from Ingo Molnar:\n \"Two small cleanups\"\n\n* 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, boot: Remove misc.h inclusion from compressed/string.c\n  x86, boot: Do not include boot.h in string.c Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull x86 asm cleanups from Ingo Molnar:\n \"A handful of entry_64.S cleanups\"\n\n* 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86_64, entry: Merge paranoidzeroentry_ist into idtentry\n  x86_64, entry: Merge most 64-bit asm entry macros\n  x86_64, entry: Add missing 'DEFAULT_FRAME 0' entry annotations Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull scheduler updates from Ingo Molnar:\n \"The main scheduling related changes in this cycle were:\n\n   - various sched/numa updates, for better performance\n\n   - tree wide cleanup of open coded nice levels\n\n   - nohz fix related to rq->nr_running use\n\n   - cpuidle changes and continued consolidation to improve the\n     kernel/sched/idle.c high level idle scheduling logic.  As part of\n     this effort I pulled cpuidle driver changes from Rafael as well.\n\n   - standardized idle polling amongst architectures\n\n   - continued work on preparing better power/energy aware scheduling\n\n   - sched/rt updates\n\n   - misc fixlets and cleanups\"\n\n* 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (49 commits)\n  sched/numa: Decay ->wakee_flips instead of zeroing\n  sched/numa: Update migrate_improves/degrades_locality()\n  sched/numa: Allow task switch if load imbalance improves\n  sched/rt: Fix 'struct sched_dl_entity' and dl_task_time() comments, to match the current upstream code\n  sched: Consolidate open coded implementations of nice level frobbing into nice_to_rlimit() and rlimit_to_nice()\n  sched: Initialize rq->age_stamp on processor start\n  sched, nohz: Change rq->nr_running to always use wrappers\n  sched: Fix the rq->next_balance logic in rebalance_domains() and idle_balance()\n  sched: Use clamp() and clamp_val() to make sys_nice() more readable\n  sched: Do not zero sg->cpumask and sg->sgp->power in build_sched_groups()\n  sched/numa: Fix initialization of sched_domain_topology for NUMA\n  sched: Call select_idle_sibling() when not affine_sd\n  sched: Simplify return logic in sched_read_attr()\n  sched: Simplify return logic in sched_copy_attr()\n  sched: Fix exec_start/task_hot on migrated tasks\n  arm64: Remove TIF_POLLING_NRFLAG\n  metag: Remove TIF_POLLING_NRFLAG\n  sched/idle: Make cpuidle_idle_call() void\n  sched/idle: Reflow cpuidle_idle_call()\n  sched/idle: Delay clearing the polling bit\n  ... Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull perf updates from Ingo Molnar:\n \"The tooling changes maintained by Jiri Olsa until Arnaldo is on\n  vacation:\n\n  User visible changes:\n   - Add -F option for specifying output fields (Namhyung Kim)\n   - Propagate exit status of a command line workload for record command\n     (Namhyung Kim)\n   - Use tid for finding thread (Namhyung Kim)\n   - Clarify the output of perf sched map plus small sched command\n     fixes (Dongsheng Yang)\n   - Wire up perf_regs and unwind support for ARM64 (Jean Pihet)\n   - Factor hists statistics counts processing which in turn also fixes\n     several bugs in TUI report command (Namhyung Kim)\n   - Add --percentage option to control absolute/relative percentage\n     output (Namhyung Kim)\n   - Add --list-cmds to 'kmem', 'mem', 'lock' and 'sched', for use by\n     completion scripts (Ramkumar Ramachandra)\n\n  Development/infrastructure changes and fixes:\n   - Android related fixes for pager and map dso resolving (Michael\n     Lentine)\n   - Add libdw DWARF post unwind support for ARM (Jean Pihet)\n   - Consolidate types.h for ARM and ARM64 (Jean Pihet)\n   - Fix possible null pointer dereference in session.c (Masanari Iida)\n   - Cleanup, remove unused variables in map_switch_event() (Dongsheng\n     Yang)\n   - Remove nr_state_machine_bugs in perf latency (Dongsheng Yang)\n   - Remove usage of trace_sched_wakeup(.success) (Peter Zijlstra)\n   - Cleanups for perf.h header (Jiri Olsa)\n   - Consolidate types.h and export.h within tools (Borislav Petkov)\n   - Move u64_swap union to its single user's header, evsel.h (Borislav\n     Petkov)\n   - Fix for s390 to properly parse tracepoints plus test code\n     (Alexander Yarygin)\n   - Handle EINTR error for readn/writen (Namhyung Kim)\n   - Add a test case for hists filtering (Namhyung Kim)\n   - Share map_groups among threads of the same group (Arnaldo Carvalho\n     de Melo, Jiri Olsa)\n   - Making some code (cpu node map and report parse callchain callback)\n     global to be usable by upcomming changes (Don Zickus)\n   - Fix pmu object compilation error (Jiri Olsa)\n\n  Kernel side changes:\n   - intrusive uprobes fixes from Oleg Nesterov.  Since the interface is\n     admin-only, and the bug only affects user-space (\"any probed\n     jmp/call can kill the application\"), we queued these fixes via the\n     development tree, as a special exception.\n   - more fuzzer motivated race fixes and related refactoring and\n     robustization.\n   - allow PMU drivers to be built as modules.  (No actual module yet,\n     because the x86 Intel uncore module wasn't ready in time for this)\"\n\n* 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (114 commits)\n  perf tools: Add automatic remapping of Android libraries\n  perf tools: Add cat as fallback pager\n  perf tests: Add a testcase for histogram output sorting\n  perf tests: Factor out print_hists_*()\n  perf tools: Introduce reset_output_field()\n  perf tools: Get rid of obsolete hist_entry__sort_list\n  perf hists: Reset width of output fields with header length\n  perf tools: Skip elided sort entries\n  perf top: Add --fields option to specify output fields\n  perf report/tui: Fix a bug when --fields/sort is given\n  perf tools: Add ->sort() member to struct sort_entry\n  perf report: Add -F option to specify output fields\n  perf tools: Call perf_hpp__init() before setting up GUI browsers\n  perf tools: Consolidate management of default sort orders\n  perf tools: Allow hpp fields to be sort keys\n  perf ui: Get rid of callback from __hpp__fmt()\n  perf tools: Consolidate output field handling to hpp format routines\n  perf tools: Use hpp formats to sort final output\n  perf tools: Support event grouping in hpp ->sort()\n  perf tools: Use hpp formats to sort hist entries\n  ... Merge branch 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull core locking updates from Ingo Molnar:\n \"The main changes in this cycle were:\n\n   - reduced/streamlined smp_mb__*() interface that allows more usecases\n     and makes the existing ones less buggy, especially in rarer\n     architectures\n\n   - add rwsem implementation comments\n\n   - bump up lockdep limits\"\n\n* 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (33 commits)\n  rwsem: Add comments to explain the meaning of the rwsem's count field\n  lockdep: Increase static allocations\n  arch: Mass conversion of smp_mb__*()\n  arch,doc: Convert smp_mb__*()\n  arch,xtensa: Convert smp_mb__*()\n  arch,x86: Convert smp_mb__*()\n  arch,tile: Convert smp_mb__*()\n  arch,sparc: Convert smp_mb__*()\n  arch,sh: Convert smp_mb__*()\n  arch,score: Convert smp_mb__*()\n  arch,s390: Convert smp_mb__*()\n  arch,powerpc: Convert smp_mb__*()\n  arch,parisc: Convert smp_mb__*()\n  arch,openrisc: Convert smp_mb__*()\n  arch,mn10300: Convert smp_mb__*()\n  arch,mips: Convert smp_mb__*()\n  arch,metag: Convert smp_mb__*()\n  arch,m68k: Convert smp_mb__*()\n  arch,m32r: Convert smp_mb__*()\n  arch,ia64: Convert smp_mb__*()\n  ... Merge branch 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next\n\nPull RCU changes from Ingo Molnar:\n \"The main RCU changes in this cycle were:\n\n   - RCU torture-test changes.\n\n   - variable-name renaming cleanup.\n\n   - update RCU documentation.\n\n   - miscellaneous fixes.\n\n   - patch to suppress RCU stall warnings while sysrq requests are being\n     processed\"\n\n* 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (68 commits)\n  rcu: Provide API to suppress stall warnings while sysrc runs\n  rcu: Variable name changed in tree_plugin.h and used in tree.c\n  torture: Remove unused definition\n  torture: Remove __init from torture_init_begin/end\n  torture: Check for multiple concurrent torture tests\n  locktorture: Remove reference to nonexistent Kconfig parameter\n  rcutorture: Run rcu_torture_writer at normal priority\n  rcutorture: Note diffs from git commits\n  rcutorture: Add missing destroy_timer_on_stack()\n  rcutorture: Explicitly test synchronous grace-period primitives\n  rcutorture:  Add tests for get_state_synchronize_rcu()\n  rcutorture: Test RCU-sched primitives in TREE_PREEMPT_RCU kernels\n  torture: Use elapsed time to detect hangs\n  rcutorture: Check for rcu_torture_fqs creation errors\n  torture: Better summary diagnostics for build failures\n  torture: Notice if an all-zero cpumask is passed inside a critical section\n  rcutorture: Make rcu_torture_reader() use cond_resched()\n  sched,rcu: Make cond_resched() report RCU quiescent states\n  percpu: Fix raw_cpu_inc_return()\n  rcutorture: Export RCU grace-period kthread wait state to rcutorture\n  ... Merge tag 'sound-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A few addition of HD-audio fixups for ALC260 and AD1986A codecs.  All\n  marked as stable fixes.\n\n  The fixes are pretty local and they are old machines, so quite safe to\n  apply\"\n\n* tag 'sound-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda/realtek - Fix COEF widget NID for ALC260 replacer fixup\n  ALSA: hda/realtek - Correction of fixup codes for PB V7900 laptop\n  ALSA: hda/analog - Fix silent output on ASUS A8JN Merge branch 'for-v3.16' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping into next\n\nPull CMA and DMA-mapping fixes from Marek Szyprowski:\n \"A few fixes for dma-mapping and CMA subsystems\"\n\n* 'for-v3.16' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping:\n  CMA: correct unlock target\n  drivers/base/dma-contiguous.c: erratum of dev_get_cma_area\n  arm: dma-mapping: add checking cma area initialized\n  arm: dma-iommu: Clean up redundant variable\n  cma: Remove potential deadlock situation Merge tag 'regulator-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator into next\n\nPull regulator updates from Mark Brown:\n \"The bulk of the changes for this release are a few new drivers however\n  there are a couple of noticable core changes and the usual stream of\n  cleanups and fixes:\n\n   - move disable of unused regulators later in init so it comes after\n     deferred probe has iterated making startup smoother.\n   - fixes to reference counting of the DT nodes for constraints from\n     Charles Keepax.  This has little practical impact since all real\n     users of the regulator bindings use FDT which doesn't need the\n     reference counting.\n   - lots of cleanups, especially to the Samsung drivers.\n   - support for Linear Technologies LTC3589, Texas Instruments\n     TPS658640 and X-Powers AXP20x\"\n\n* tag 'regulator-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator: (64 commits)\n  regulator: pbias: remove unnecessary OOM messages\n  regulator: max8649: remove unnecessary OOM messages\n  regulator: core: Fix the init of DT defined fixed regulators\n  regulator: core: Disable unused regulators after deferred probing is done\n  regulator: Don't disable unused regulators we don't have permission for\n  regulator: axp20x: Use regulator_map_voltage_ascend for LDO4\n  regulator: use of_property_read_{bool|u32}()\n  regulator: Fix regulator_get_{optional,exclusive}() documentation\n  regulators: Add definition of regulator_set_voltage_time() for !CONFIG_REGULATOR\n  regulator: arizona-ldo1: add missing #include\n  regulator: pfuze100: Support enable/disable for fixed regulator\n  regulator: ltc3589: Remove ltc3589_list_voltage_fixed function\n  regulator: ltc3589: Fix module dependency\n  regulator: tps6586x: Remove unused to_tps6586x_dev() function\n  regulator: tps65218: Convert to use regulator_set_voltage_time_sel\n  regulator: tps6586x: Add support for the TPS658640\n  regulator: tps6586x: Prepare supporting fixed regulators\n  regulator: pfuze100: Don't allocate an invalid gpio\n  regulator: pfuze100: Support SWB enable/disable\n  regulator: fixed: use of_property_read_{bool|u32}()\n  ... Merge tag 'spi-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi into next\n\nPull spi updates from Mark Brown:\n \"For this release SPI has been exceptionally quiet, all the work has\n  been on improving drivers (including taking advantage of some of the\n  recent framework updates):\n\n   - DMA support for the rspi driver providing a nice performance boost\n   - performance improvement for the SIRF controller in PIO mode\n   - new support for the Cadence SPI IP and for pxa2xx on BayTrail\"\n\n* tag 'spi-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi: (59 commits)\n  spi: rspi: Extract rspi_common_transfer()\n  spi: rspi: Add DMA support for RSPI on RZ/A1H\n  spi: rspi: Add DMA support for QSPI on R-Car Gen2\n  spi: rspi: Absorb rspi_rz_transfer_out_in() into rspi_rz_transfer_one()\n  spi: rspi: Merge rspi_*_dma() into rspi_dma_transfer()\n  spi: rspi: Pass sg_tables instead of spi_tranfer to rspi_*_dma()\n  spi: rspi: Move RSPI-specific setup out of DMA routines\n  spi: rspi: Use SPI core DMA mapping framework\n  spi: rspi: SPI DMA core needs both RX and TX DMA to function\n  spi: rspi: Remove unneeded resource test in DMA setup\n  spi: rspi: Extract rspi_request_dma_chan()\n  spi: rspi: Don't consider DMA configuration failures fatal\n  spi: rspi: Extract rspi_pio_transfer()\n  spi: rspi: Use core SPI_MASTER_MUST_[RT]X handling\n  spi: rspi: Remove unused 16-bit DMA support\n  spi: rspi: Do not call rspi_receive_init() for TX-only\n  spi: rspi: Extract rspi_wait_for_{tx_empty,rx_full}()\n  spi/pxa2xx: fix runtime PM enabling order\n  spi/fsl-espi: fix rx_buf in fsl_espi_cmd_trans()/fsl_espi_rw_trans()\n  spi: core: Ignore unsupported spi-[tr]x-bus-width property values\n  ... Merge tag 'regmap-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap into next\n\nPull regmap updates from Mark Brown:\n \"Another fairly quiet release, a few bug fixes and a couple of new\n  features:\n\n   - support for I2C devices connected to SMBus rather than full I2C\n     controllers contributed by Boris Brezillon.  If the controller is\n     only capable of SMBus operation the framework will transparently\n     fall back to that\n\n   - suport for little endian values, contributed by Xiubo Li\"\n\n* tag 'regmap-v3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap:\n  regmap: mmio: Fix regmap_mmio_write for uneven counts\n  regmap: irq: Fix possible ZERO_SIZE_PTR pointer dereferencing error.\n  regmap: Add missing initialization of this_page\n  regmap: Fix possible ZERO_SIZE_PTR pointer dereferencing error.\n  regmap: i2c: fallback to SMBus if the adapter does not support standard I2C\n  regmap: add reg_read/reg_write callbacks to regmap_bus struct\n  regmap: rbtree: improve 64bits memory alignment\n  regmap: mmio: Fix the bug of 'offset' value parsing.\n  regmap: implement LE formatting/parsing for 16/32-bit values. Merge tag 'pinctrl-v3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl into next\n\nPull pin control changes from Linus Walleij:\n \"This is the bulk of pin control changes for the v3.16 development\n  cycle:\n\n   - Antoine Tenart made the get_group_pins() vtable entry optional.\n\n   - Antoine also provides an entirely new driver for the Marvell Berlin\n     SoC.  This is unrelated to the existing MVEBU hardware driver and\n     warrants its own separate driver.\n\n   - reflected from the GPIO subsystem there is a number of refactorings\n     to make pin control drivers with gpiochips use the new gpiolib\n     irqchip helpers.  The following drivers were converted to use the\n     new infrastructure:\n       * ST Microelectronics STiH416 and friends\n       * The Atmel AT91\n       * The CSR SiRF (Prima2)\n       * The Qualcomm MSM series\n\n   - massive improvements in the Qualcomm MSM driver from Bjorn\n     Andersson, Andy Gross and Kumar Gala.  Among those new support for\n     the IPQ8064 and MSM8x74 SoC variants.\n\n   - support for the Freescale i.MX6 SoloX SoC variant.\n\n   - massive improvements in the Allwinner sunxi driver from Boris\n     Brezillon, Maxime Ripard and Chen-Yu Tsai.\n\n   - Renesas PFC updates from Laurent Pinchart, Kuninori Morimoto,\n     Wolfram Sang and Magnus Damm.\n\n   - Cleanups and refactorings of the nVidia Tegra driver from Stepgen\n     Warren.\n\n   - the Exynos driver now supports the Exynos3250 SoC.\n\n   - Intel BayTrail updates from Jin Yao, Mika Westerberg.\n\n   - the MVEBU driver now supports the Orion5x SoC variants, which is\n     part of the effort of getting rid of the old Marvell kludges in\n     arch/arm/mach-orion5x\n\n   - Rockchip driver updates from Heiko Stuebner.\n\n   - a ton of cleanups and janitorial patches from Axel Lin.\n\n   - some minor fixes and improvements here and there\"\n\n* tag 'pinctrl-v3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl: (93 commits)\n  pinctrl: sirf: fix a bad conflict resolution\n  pinctrl: msm: Add more MSM8X74 pin definitions\n  pinctrl: qcom: ipq8064: Fix naming convention\n  pinctrl: msm: Add missing sdc1 and sdc3 groups\n  pinctrl: sirf: switch to using allocated state container\n  pinctrl: Enable \"power-source\" to be extracted from DT files\n  pinctrl: sunxi: create irq/pin mapping during init\n  pinctrl: pinconf-generic: Use kmemdup instead of kmalloc + memcpy\n  pinctrl: berlin: Use devm_ioremap_resource()\n  pinctrl: sirf: fix typo for GPIO bank number\n  pinctrl: sunxi: depend on RESET_CONTROLLER\n  pinctrl: sunxi: fix pin numbers passed to register offset helpers\n  pinctrl: add pinctrl driver for imx6sx\n  pinctrl/at91: Fix lockup when IRQ on PIOC and PIOD occurs\n  pinctrl: msm: switch to using generic GPIO irqchip helpers\n  pinctrl: sunxi: Fix multiple registration issue\n  pinctrl: sunxi: Fix recursive dependency\n  pinctrl: berlin: add the BG2CD pinctrl driver\n  pinctrl: berlin: add the BG2 pinctrl driver\n  pinctrl: berlin: add the BG2Q pinctrl driver\n  ... Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging into next\n\nPull hwmon updates from Guenter Roeck:\n \"New driver for NCT6683D\n\n  New chip support to existing drivers:\n   - add support for STTS2004 and AT30TSE004 to jc42 driver\n   - add support for EMC1402/EMC1412/EMC1422 to emc1403 driver\n\n  Other notable changes:\n   - document hwmon kernel API\n   - convert jc42, lm70, lm75, lm77, lm83, lm92, max1619, tmp421, and\n     tmp102 drivers to use new hwmon API functions\n   - replace function macros in lm80, lm92, and jc42 drivers with real\n     code\n   - convert emc1403 driver to use regmap, add support for additional\n     attributes, and add device IDs for EMC1412, EMC1413, and EMC1414\n   - various additional cleanup and minor bug fixes in several drivers\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging: (60 commits)\n  hwmon: (nct6775) Fix probe unwind paths to properly unregister platform devices\n  hwmon: (nct6683) Fix probe unwind paths to properly unregister platform devices\n  hwmon: (ultra45_env) Introduce managed version of kzalloc\n  hwmon: Driver for NCT6683D\n  hwmon: (lm80) Rearrange code to avoid forward declarations\n  hwmon: (lm80) Convert fan display function macros into functions\n  hwmon: (lm80) Convert voltage display function macros into functions\n  hwmon: (lm80) Convert temperature display function macros into functions\n  hwmon: (lm80) Normalize all temperature values to 16 bit\n  hwmon: (lm80) Simplify TEMP_FROM_REG\n  hwmon: (lm83) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (lm83) Rearange code to avoid forward declarations\n  hwmon: (lm83) Drop FSF address\n  hwmon: (max1619) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (max1619) Drop function macros\n  hwmon: (max1619) Rearrange code to avoid forward declarations\n  hwmon: (max1619) Drop FSF address\n  hwmon: (max1619) Fix critical alarm display\n  hwmon: (jc42) Add support for STTS2004 and AT30TSE004\n  hwmon: (jc42) Convert function macros into functions\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux into next\n\nPull first set of s390 updates from Martin Schwidefsky:\n \"The biggest change in this patchset is conversion from the bootmem\n  bitmaps to the memblock code.  This conversion requires two common\n  code patches to introduce the 'physmem' memblock list.\n\n  We experimented with ticket spinlocks but in the end decided against\n  them as they perform poorly on virtualized systems.  But the spinlock\n  cleanup and some small improvements are included.\n\n  The uaccess code got another optimization, the get_user/put_user calls\n  are now inline again for kernel compiles targeted at z10 or newer\n  machines.  This makes the text segment shorter and the code gets a\n  little bit faster.\n\n  And as always some bug fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (31 commits)\n  s390/lowcore: replace lowcore irb array with a per-cpu variable\n  s390/lowcore: reserve 96 bytes for IRB in lowcore\n  s390/facilities: remove extract-cpu-time facility check\n  s390: require mvcos facility for z10 and newer machines\n  s390/boot: fix boot of compressed kernel built with gcc 4.9\n  s390/cio: remove weird assignment during argument evaluation\n  s390/time: cast tv_nsec to u64 prior to shift in update_vsyscall\n  s390/oprofile: make return of 0 explicit\n  s390/spinlock: refactor arch_spin_lock_wait[_flags]\n  s390/rwlock: add missing local_irq_restore calls\n  s390/spinlock,rwlock: always to a load-and-test first\n  s390/cio: fix multiple structure definitions\n  s390/spinlock: fix system hang with spin_retry <= 0\n  s390/appldata: add slab.h for kzalloc/kfree\n  s390/uaccess: provide inline variants of get_user/put_user\n  s390/pci: add some new arch specific pci attributes\n  s390/pci: use pdev->dev.groups for attribute creation\n  s390/pci: use macro for attribute creation\n  s390/pci: improve state check when processing hotplug events\n  s390: split TIF bits into CIF, PIF and TIF bits\n  ... Merge tag 'usb-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb into next\n\nPull USB driver updates from Greg KH:\n \"Here is the big USB driver pull request for 3.16-rc1.\n\n  Nothing huge here, but lots of little things in the USB core, and in\n  lots of drivers.  Hopefully the USB power management will be work\n  better now that it has been reworked to do per-port power control\n  dynamically.  There's also a raft of gadget driver updates and fixes,\n  CONFIG_USB_DEBUG is finally gone now that everything has been\n  converted over to the dynamic debug inteface, the last hold-out\n  drivers were cleaned up and the config option removed.  There were\n  also other minor things all through the drivers/usb/ tree, the\n  shortlog shows this pretty well.\n\n  All have been in linux-next, including the very last patch, which came\n  from linux-next to fix a build issue on some platforms\"\n\n* tag 'usb-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (314 commits)\n  usb: hub_handle_remote_wakeup() only exists for CONFIG_PM=y\n  USB: orinoco_usb: remove CONFIG_USB_DEBUG support\n  USB: media: lirc: igorplugusb: remove CONFIG_USB_DEBUG support\n  USB: media: streamzap: remove CONFIG_USB_DEBUG\n  USB: media: redrat3: remove CONFIG_USB_DEBUG usage\n  USB: media: redrat3: remove unneeded tracing macro\n  usb: qcserial: add additional Sierra Wireless QMI devices\n  usb: host: max3421-hcd: Use module_spi_driver\n  usb: host: max3421-hcd: Allow platform-data to specify Vbus polarity\n  usb: host: max3421-hcd: fix \"spi_rd8\" uses dynamic stack allocation warning\n  usb: host: max3421-hcd: Fix missing unlock in max3421_urb_enqueue()\n  usb: qcserial: add Netgear AirCard 341U\n  Documentation: dt-bindings: update xhci-platform DT binding for R-Car H2 and M2\n  usb: host: xhci-plat: add xhci_plat_start()\n  usb: host: max3421-hcd: Fix potential NULL urb dereference\n  Revert \"usb: gadget: net2280: Add support for PLX USB338X\"\n  USB: usbip: remove CONFIG_USB_DEBUG reference\n  USB: remove CONFIG_USB_DEBUG from defconfig files\n  usb: resume child device when port is powered on\n  usb: hub_handle_remote_wakeup() depends on CONFIG_PM_RUNTIME=y\n  ... Merge tag 'tty-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty into next\n\nPull tty/serial driver updates from Greg KH:\n \"Here is the big tty / serial driver pull request for 3.16-rc1.\n\n  A variety of different serial driver fixes and updates and additions,\n  nothing huge, and no real major core tty changes at all.\n\n  All have been in linux-next for a while\"\n\n* tag 'tty-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty: (84 commits)\n  Revert \"serial: imx: remove the DMA wait queue\"\n  serial: kgdb_nmi: Improve console integration with KDB I/O\n  serial: kgdb_nmi: Switch from tasklets to real timers\n  serial: kgdb_nmi: Use container_of() to locate private data\n  serial: cpm_uart: No LF conversion in put_poll_char()\n  serial: sirf: Fix compilation failure\n  console: Remove superfluous readonly check\n  console: Use explicit pointer type for vc_uni_pagedir* fields\n  vgacon: Fix & cleanup refcounting\n  ARM: tty: Move HVC DCC assembly to arch/arm\n  tty/hvc/hvc_console: Fix wakeup of HVC thread on hvc_kick()\n  drivers/tty/n_hdlc.c: replace kmalloc/memset by kzalloc\n  vt: emulate 8- and 24-bit colour codes.\n  printk/of_serial: fix serial console cessation part way through boot.\n  serial: 8250_dma: check the result of TX buffer mapping\n  serial: uart: add hw flow control support configuration\n  tty/serial: at91: add interrupts for modem control lines\n  tty/serial: at91: use mctrl_gpio helpers\n  tty/serial: Add GPIOLIB helpers for controlling modem lines\n  ARM: at91: gpio: implement get_direction\n  ... Merge tag 'staging-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging into next\n\nPull staging driver updates from Greg KH:\n \"Here is the big staging driver pull request for 3.16-rc1.\n\n  Lots of stuff here, tons of cleanup patches, a few new drivers, and\n  some removed as well, but I think we are still adding a few thousand\n  more lines than we remove, due to the new drivers being bigger than\n  the ones deleted.\n\n  One notible bit of work did stand out, Jes Sorensen has gone on a\n  tear, fixing up a wireless driver to be \"more sane\" than it originally\n  was from the vendor, with over 500 patches merged here.  Good stuff,\n  and a number of users laptops are better off for it.\n\n  All of this has been in linux-next for a while\"\n\n* tag 'staging-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging: (1703 commits)\n  staging: skein: fix sparse warning for static declarations\n  staging/mt29f_spinand: coding style fixes\n  staging: silicom: fix sparse warning for static variable\n  staging: lustre: Fix coding style\n  staging: android: binder.c: Use more appropriate functions for euid retrieval\n  staging: lustre: fix integer as NULL pointer warnings\n  Revert \"staging: dgap: remove unneeded kfree() in dgap_tty_register_ports()\"\n  Staging: rtl8192u: r8192U_wx.c Fixed a misplaced brace\n  staging: ion: shrink highmem pages on kswapd\n  staging: ion: use compound pages on high order pages for system heap\n  staging: ion: remove struct ion_page_pool_item\n  staging: ion: simplify ion_page_pool_total()\n  staging: ion: tidy up a bit\n  staging: rtl8723au: Remove redundant casting in usb_ops_linux.c\n  staging: rtl8723au: Remove redundant casting in rtl8723a_hal_init.c\n  staging: rtl8723au: Remove redundant casting in rtw_xmit.c\n  staging: rtl8723au: Remove redundant casting in rtw_wlan_util.c\n  staging: rtl8723au: Remove redundant casting in rtw_sta_mgt.c\n  staging: rtl8723au: Remove redundant casting in rtw_recv.c\n  staging: rtl8723au: Remove redundant casting in rtw_mlme.c\n  ... Merge tag 'driver-core-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core into next\n\nPull driver core / kernfs changes from Greg KH:\n \"Here is the \"big\" pull request for 3.16-rc1.\n\n  Not a lot of changes here, some kernfs work, a revert of a very old\n  driver core change that ended up cauing some memory leaks on driver\n  probe error paths, and other minor things.\n\n  As was pointed out earlier today, one commit here, 26fc9cd200ec\n  (\"kernfs: move the last knowledge of sysfs out from kernfs\") is also\n  needed in your 3.15-final branch as well.  If you could cherry-pick it\n  there, it would be most appreciated by Andy Lutomirski to prevent a\n  regression there.\n\n  All of these have been in linux-next for a while\"\n\n* tag 'driver-core-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  crypto/nx/nx-842: dev_set_drvdata can no longer fail\n  kernfs: move the last knowledge of sysfs out from kernfs\n  sysfs: fix attribute_group bin file path on removal\n  sysfs.h: don't return a void-valued expression in sysfs_remove_file\n  init.h: Update initcall_sync variants to fix build errors\n  driver core: Inline dev_set/get_drvdata\n  driver core: dev_get_drvdata: Don't check for NULL dev\n  driver core: dev_set_drvdata returns void\n  driver core: dev_set_drvdata can no longer fail\n  driver core: Move driver_data back to struct device\n  lib/devres.c: fix checkpatch warnings\n  lib/devres.c: use dev in devm_request_and_ioremap\n  kobject: Make support for uevent_helper optional.\n  kernfs: make kernfs_notify() trigger inotify events too\n  kernfs: implement kernfs_root->supers list Merge tag 'char-misc-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc into next\n\nPull char/misc driver patches from Greg KH:\n \"Here is the big char / misc driver update for 3.16-rc1.\n\n  Lots of different driver updates for a variety of different drivers\n  and minor driver subsystems.\n\n  All have been in linux-next with no reported issues\"\n\n* tag 'char-misc-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (79 commits)\n  hv: use correct order when freeing monitor_pages\n  spmi: of: fixup generic SPMI devicetree binding example\n  applicom: dereferencing NULL on error path\n  misc: genwqe: fix uninitialized return value in genwqe_free_sync_sgl()\n  miscdevice.h: Simple syntax fix to make pointers consistent.\n  MAINTAINERS: Add miscdevice.h to file list for char/misc drivers.\n  mcb: Add support for shared PCI IRQs\n  drivers: Remove duplicate conditionally included subdirs\n  misc: atmel_pwm: only build for supported platforms\n  mei: me: move probe quirk to cfg structure\n  mei: add per device configuration\n  mei: me: read H_CSR after asserting reset\n  mei: me: drop harmful wait optimization\n  mei: me: fix hw ready reset flow\n  mei: fix memory leak of mei_clients array\n  uio: fix vma io range check in mmap\n  drivers: uio_dmem_genirq: Fix memory leak in uio_dmem_genirq_probe()\n  w1: do not unlock unheld list_mutex in __w1_remove_master_device()\n  w1: optional bundling of netlink kernel replies\n  connector: allow multiple messages to be sent in one packet\n  ... Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu into next\n\nPull m68knommu updates from Greg Ungerer:\n \"Nothing too big, just a handfull of small changes.\n\n  A couple of dragonball fixes, coldfire qspi cleanup and fixes, and\n  some coldfire gpio cleanup, fixes and extensions\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu:\n  m68knommu: Implement gpio support for m54xx.\n  m68knommu: Make everything thats not exported, static.\n  m68knommu: setting the gpio data direction register to output doesn't dependent upon the value to output!\n  m68knommu: add to_irq function so we can map gpios to external interrupts.\n  m68knommu: qspi declutter.\n  m68knommu: Fix the 5249/525x qspi base address.\n  m68knommu: Add qspi clk for Coldfire SoCs without real clks.\n  m68k: fix a compiler warning when building for DragonBall\n  m68knommu: Fix mach_sched_init for EZ and VZ DragonBall chips Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Unbreak zebra and other netlink apps, from Eric W Biederman.\n\n 2) Some new qmi_wwan device IDs, from Aleksander Morgado.\n\n 3) Fix info leak in DCB netlink handler of qlcnic driver, from Dan\n    Carpenter.\n\n 4) inet_getid() and ipv6_select_ident() do not generate monotonically\n    increasing ID numbers, fix from Eric Dumazet.\n\n 5) Fix memory leak in __sk_prepare_filter(), from Leon Yu.\n\n 6) Netlink leftover bytes warning message is user triggerable, rate\n    limit it.  From Michal Schmidt.\n\n 7) Fix non-linear SKB panic in ipvs, from Peter Christensen.\n\n 8) Congestion window undo needs to be performed even if only never\n    retransmitted data is SACK'd, fix from Yuching Cheng.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (24 commits)\n  net: filter: fix possible memory leak in __sk_prepare_filter()\n  net: ec_bhf: Add runtime dependencies\n  tcp: fix cwnd undo on DSACK in F-RTO\n  netlink: Only check file credentials for implicit destinations\n  ipheth: Add support for iPad 2 and iPad 3\n  team: fix mtu setting\n  net: fix inet_getid() and ipv6_select_ident() bugs\n  net: qmi_wwan: interface #11 in Sierra Wireless MC73xx is not QMI\n  net: qmi_wwan: add additional Sierra Wireless QMI devices\n  bridge: Prevent insertion of FDB entry with disallowed vlan\n  netlink: rate-limit leftover bytes warning and print process name\n  bridge: notify user space after fdb update\n  net: qmi_wwan: add Netgear AirCard 341U\n  net: fix wrong mac_len calculation for vlans\n  batman-adv: fix NULL pointer dereferences\n  net/mlx4_core: Reset RoCE VF gids when guest driver goes down\n  emac: aggregation of v1-2 PLB errors for IER register\n  emac: add missing support of 10mbit in emac/rgmii\n  can: only rename enabled led triggers when changing the netdev name\n  ipvs: Fix panic due to non-linear skb\n  ... Merge tag 'md/3.15-fixes' of git://neil.brown.name/md\n\nPull two md bugfixes from Neil Brown:\n \"Two md bugfixes for possible corruption when restarting reshape\n\n  If a raid5/6 reshape is restarted (After stopping and re-assembling\n  the array) and the array is marked read-only (or read-auto), then the\n  reshape will appear to complete immediately, without actually moving\n  anything around.  This can result in corruption.\n\n  There are two patches which do much the same thing in different\n  places.  They are separate because one is an older bug and so can be\n  applied to more -stable kernels\"\n\n* tag 'md/3.15-fixes' of git://neil.brown.name/md:\n  md: always set MD_RECOVERY_INTR when interrupting a reshape thread.\n  md: always set MD_RECOVERY_INTR when aborting a reshape or other \"resync\". Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fix from Peter Anvin:\n \"A single quite small patch that managed to get overlooked earlier, to\n  prevent a user space triggerable oops on systems without HPET\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, vdso: Fix an OOPS accessing the HPET mapping w/o an HPET Merge tag 'usb-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are some fixes for 3.15-rc8 that resolve a number of tiny USB\n  issues that have been reported, and there are some new device ids as\n  well.\n\n  All have been tested in linux-next\"\n\n* tag 'usb-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  xhci: delete endpoints from bandwidth list before freeing whole device\n  usb: pci-quirks: Prevent Sony VAIO t-series from switching usb ports\n  USB: cdc-wdm: properly include types.h\n  usb: cdc-wdm: export cdc-wdm uapi header\n  USB: serial: option: add support for Novatel E371 PCIe card\n  USB: ftdi_sio: add NovaTech OrionLXm product ID\n  USB: io_ti: fix firmware download on big-endian machines (part 2)\n  USB: Avoid runtime suspend loops for HCDs that can't handle suspend/resume Merge tag 'staging-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver fixes from Greg KH:\n \"Here are some staging driver fixes for 3.15.\n\n  Three are for the speakup drivers (one fixes a regression caused in\n  3.15-rc, and the other two resolve a tty issue found by Ben Hutchings)\n  The comedi and r8192e_pci driver fixes also resolve reported issues\"\n\n* tag 'staging-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: r8192e_pci: fix htons error\n  Staging: speakup: Update __speakup_paste_selection() tty (ab)usage to match vt\n  Staging: speakup: Move pasting into a work item\n  staging: comedi: ni_daq_700: add mux settling delay\n  speakup: fix incorrect perms on speakup_acntsa.c Merge tag 'drivers-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC driver changes from Olof Johansson:\n \"SoC-near driver changes that we're merging through our tree.  Mostly\n  because they depend on other changes we have staged, but in some cases\n  because the driver maintainers preferred that we did it this way.\n\n  This contains a largeish cleanup series of the omap_l3_noc bus driver,\n  cpuidle rework for Exynos, some reset driver conversions and a long\n  branch of TI EDMA fixes and cleanups, with more to come next release.\n\n  The TI EDMA cleanups is a shared branch with the dmaengine tree, with\n  a handful of Davinci-specific fixes on top.\n\n  After discussion at last year's KS (and some more on the mailing\n  lists), we are here adding a drivers/soc directory.  The purpose of\n  this is to keep per-vendor shared code that's needed by different\n  drivers but that doesn't fit into the MFD (nor drivers/platform)\n  model.  We expect to keep merging contents for this hierarchy through\n  arm-soc so we can keep an eye on what the vendors keep adding here and\n  not making it a free-for-all to shove in crazy stuff\"\n\n* tag 'drivers-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (101 commits)\n  cpufreq: exynos: Fix driver compilation with ARCH_MULTIPLATFORM\n  tty: serial: msm: Remove direct access to GSBI\n  power: reset: keystone-reset: introduce keystone reset driver\n  Documentation: dt: add bindings for keystone pll control controller\n  Documentation: dt: add bindings for keystone reset driver\n  soc: qcom: fix of_device_id table\n  ARM: EXYNOS: Fix kernel panic when unplugging CPU1 on exynos\n  ARM: EXYNOS: Move the driver to drivers/cpuidle directory\n  ARM: EXYNOS: Cleanup all unneeded headers from cpuidle.c\n  ARM: EXYNOS: Pass the AFTR callback to the platform_data\n  ARM: EXYNOS: Move S5P_CHECK_SLEEP into pm.c\n  ARM: EXYNOS: Move the power sequence call in the cpu_pm notifier\n  ARM: EXYNOS: Move the AFTR state function into pm.c\n  ARM: EXYNOS: Encapsulate the AFTR code into a function\n  ARM: EXYNOS: Disable cpuidle for exynos5440\n  ARM: EXYNOS: Encapsulate boot vector code into a function for cpuidle\n  ARM: EXYNOS: Pass wakeup mask parameter to function for cpuidle\n  ARM: EXYNOS: Remove ifdef for scu_enable in pm\n  ARM: EXYNOS: Move scu_enable in the cpu_pm notifier\n  ARM: EXYNOS: Use the cpu_pm notifier for pm\n  ... Merge tag 'dt-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC devicetree updates from Olof Johansson:\n \"As with previous release, this continues to be among the largest\n  branches we merge, with lots of new contents.\n\n  New things for this release are among other things:\n\n   - DTSI contents for the new SoCs supported in 3.16 (see SoC pull request)\n   - Qualcomm APQ8064 and APQ8084 SoCs and eval boards\n   - Nvidia Jetson TK1 development board (Tegra T124-based)\n\n  Two new SoCs that didn't need enough new platform code to stand out\n  enough for me to notice when writing the SoC tag, but that adds new DT\n  contents are:\n\n   - TI DRA72\n   - Marvell Berlin 2Q\"\n\n* tag 'dt-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (500 commits)\n  ARM: dts: add secure firmware support for exynos5420-arndale-octa\n  ARM: dts: add pmu sysreg node to exynos3250\n  ARM: dts: correct the usb phy node in exynos5800-peach-pi\n  ARM: dts: correct the usb phy node in exynos5420-peach-pit\n  ARM: dts: add dts files for exynos5410 and exynos5410-smdk5410\n  ARM: dts: add dts files for exynos3250 SoC\n  ARM: dts: add mfc node for exynos5800\n  ARM: dts: add Vbus regulator for USB 3.0 on exynos5800-peach-pi\n  ARM: dts: enable fimd for exynos5800-peach-pi\n  ARM: dts: enable display controller for exynos5800-peach-pi\n  ARM: dts: enable hdmi for exynos5800-peach-pi\n  ARM: dts: add dts file for exynos5800-peach-pi board\n  ARM: dts: add dts file for exynos5800 SoC\n  ARM: dts: add dts file for exynos5260-xyref5260 board\n  ARM: dts: add dts files for exynos5260 SoC\n  ARM: dts: update watchdog node name in exynos5440\n  ARM: dts: use key code macros on Origen and Arndale boards\n  ARM: dts: enable RTC and WDT nodes on Origen boards\n  ARM: dts: qcom: Add APQ8084-MTP board support\n  ARM: dts: qcom: Add APQ8084 SoC support\n  ... Merge tag 'defconfig-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC defconfig updates from Olof Johansson:\n \"A number of defconfig updates for 3.16.  We have quite a few of these\n  as new SoCs and drivers get supported, and we've started collecting\n  them in one shared branch.\n\n  We started halfway through the merge window so there'll be some small\n  conflicts with other branches on nearby changes, but nothing major.\n  Next cycle should be smoother\"\n\n* tag 'defconfig-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: multi_v7_defconfig: Enable Exynos platform\n  ARM: configs: update Allwinner options\n  ARM: qcom: Enable GSBI driver in defconfig\n  ARM: multi_v7_defconfig: Enable Zynq peripheral drivers\n  ARM: at91/defconfig: sama5_defconfig: updated\n  ARM: add drivers for Colibri T30 to multi_v7_defconfig\n  ARM: configs: add CONFIG_MMC_SDHCI_PXAV3 to the multi_v7_defconfig\n  ARM: configs: enable XHCI mvebu support in multi_v7_defconfig\n  ARM: multi_v7: Add Allwinner reset drivers to multi_v7_defconfig\n  ARM: sunxi: Add A31 reset driver to sunxi_defconfig\n  ARM: config: Update msm_defconfig\n  ARM: mvebu: enable MSI support in mvebu_v7_defconfig\n  ARM: config: Add qcom_defconfig\n  ARM: configs: enable XHCI mvebu support in mvebu_v7_defconfig Merge tag 'boards-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC board support updates from Olof Johansson:\n \"The bulk of this branch is updates for Renesas Shmobile.  They are\n  still doing some enablement for classic boards first, and then come up\n  with DT bindings when they've had a chance to learn more about the\n  hardware.  Not necessarily a bad way to go about it, and they're\n  looking at moving some of the temporary board code resulting from it\n  to drivers/staging instead to avoid the churn here.\n\n  As a result of the shmobile clock cleanups, we end up merging quite a\n  bit of SH code here as well.  We ended up merging it here instead of\n  in the cleanup branch due to the other board changes depending on it\"\n\n* tag 'boards-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (130 commits)\n  ARM: davinci: remove checks for CONFIG_USB_MUSB_PERIPHERAL\n  ARM: add drivers for Colibri T30 to multi_v7_defconfig\n  ARM: shmobile: Remove Genmai reference DTS\n  ARM: shmobile: Let Genmai multiplatform boot with Genmai DTB\n  ARM: shmobile: Sync Genmai DTS with Genmai reference DTS\n  ARM: shmobile: genmai-reference: Remove legacy clock support\n  ARM: shmobile: Remove non-multiplatform Genmai reference support\n  ARM: configs: enable XHCI mvebu support in multi_v7_defconfig\n  ARM: OMAP: replace checks for CONFIG_USB_GADGET_OMAP\n  ARM: OMAP: AM3517EVM: remove check for CONFIG_PANEL_SHARP_LQ043T1DG01\n  ARM: OMAP: SX1: remove check for CONFIG_SX1_OLD_FLASH\n  ARM: OMAP: remove some dead code\n  ARM: OMAP: omap3stalker: remove two Kconfig macros\n  ARM: tegra: tegra_defconfig updates\n  ARM: shmobile: r7s72100: use workaround for non DT-clocks\n  ARM: shmobile: Add forward declaration of struct clk to silence warning\n  ARM: shmobile: r7s72100: remove SPI DT clocks from legacy clock support\n  ARM: shmobile: r7s72100: add spi clocks to dtsi\n  ARM: shmobile: r7s72100: remove I2C DT clocks from legacy clock support\n  ARM: shmobile: r7s72100: add i2c clocks to dtsi\n  ... Merge tag 'soc-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull part one of ARM SoC updates from Olof Johansson:\n \"A quite large set of SoC updates this cycle.  In no particular order:\n\n   - Multi-cluster power management for Samsung Exynos, adding support\n     for big.LITTLE CPU switching on EXYNOS5\n\n   - SMP support for Marvell Armada 375 and 38x\n\n   - SMP rework on Allwinner A31\n\n   - Xilinx Zynq support for SOC_BUS, big endian\n\n   - Marvell orion5x platform cleanup, modernizing the implementation\n     and moving to DT.\n\n   - _Finally_ moving Samsung Exynos over to support MULTIPLATFORM, so\n     that their platform can be enabled in the same kernel binary as\n     most of the other v7 platforms in the tree.  \\o/\n\n     The work isn't quite complete, there's some driver fixes still\n     needed, but the basics now work.\n\n  New SoC support added:\n\n   - Freescale i.MX6SX\n\n   - LSI Axxia AXM55xx SoCs\n\n   - Samsung EXYNOS 3250, 5260, 5410, 5420 and 5800\n\n   - STi STIH407\n\n  plus a large set of various smaller updates for different platforms.\n  I'm probably missing some important one here\"\n\n* tag 'soc-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (281 commits)\n  ARM: exynos: don't run exynos4 l2x0 setup on other platforms\n  ARM: exynos: Fix \"allmodconfig\" build errors in mcpm and hotplug\n  ARM: EXYNOS: mcpm rename the power_down_finish\n  ARM: EXYNOS: Enable mcpm for dual-cluster exynos5800 SoC\n  ARM: EXYNOS: Enable multi-platform build support\n  ARM: EXYNOS: Consolidate Kconfig entries\n  ARM: EXYNOS: Add support for EXYNOS5410 SoC\n  ARM: EXYNOS: Support secondary CPU boot of Exynos3250\n  ARM: EXYNOS: Add Exynos3250 SoC ID\n  ARM: EXYNOS: Add 5800 SoC support\n  ARM: EXYNOS: initial board support for exynos5260 SoC\n  clk: exynos5410: register clocks using common clock framework\n  ARM: debug: qcom: add UART addresses to Kconfig help for APQ8084\n  ARM: sunxi: allow building without reset controller\n  Documentation: devicetree: arm: sort enable-method entries\n  ARM: rockchip: convert smp bringup to CPU_METHOD_OF_DECLARE\n  clk: exynos5250: Add missing sysmmu clocks for DISP and ISP blocks\n  ARM: dts: axxia: Add reset controller\n  power: reset: Add Axxia system reset driver\n  ARM: axxia: Adding defconfig for AXM55xx\n  ... Merge tag 'cleanup-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC cleanups from Olof Johansson:\n \"Cleanups for 3.16.  Among these are:\n\n   - a bunch of misc cleanups for Broadcom platforms, mostly\n     housekeeping\n   - enabling Common Clock Framework on the older s3c24xx Samsung\n     chipsets\n   - cleanup of the Versatile Express system controller code, moving it\n     to syscon\n   - power management cleanups for OMAP platforms\n\n  plus a handful of other cleanups across the place\"\n\n* tag 'cleanup-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (87 commits)\n  ARM: kconfig: allow PCI support to be selected with ARCH_MULTIPLATFORM\n  clk: samsung: fix build error\n  ARM: vexpress: refine dependencies for new code\n  clk: samsung: clk-s3c2410-dlck: do not use PNAME macro as it declares __initdata\n  cpufreq: exynos: Fix the compile error\n  ARM: S3C24XX: move debug-macro.S into the common space\n  ARM: S3C24XX: use generic DEBUG_UART_PHY/_VIRT in debug macro\n  ARM: S3C24XX: trim down debug uart handling\n  ARM: compressed/head.S: remove s3c24xx special case\n  ARM: EXYNOS: Remove unnecessary inclusion of cpu.h\n  ARM: EXYNOS: Migrate Exynos specific macros from plat to mach\n  ARM: EXYNOS: Remove exynos_subsys registration\n  ARM: EXYNOS: Remove duplicate lines in Makefile\n  ARM: EXYNOS: use v7_exit_coherency_flush macro for cache disabling\n  ARM: OMAP4: PRCM: remove references to cm-regbits-44xx.h from PRCM core files\n  ARM: OMAP3/4: PRM: add support of late_init call to prm_ll_ops\n  ARM: OMAP3/OMAP4: PRM: add prm_features flags and add IO wakeup under it\n  ARM: OMAP3/4: PRM: provide io chain reconfig function through irq setup\n  ARM: OMAP2+: PRM: remove unnecessary cpu_is_XXX calls from prm_init / exit\n  ARM: OMAP2+: PRCM: cleanup some header includes\n  ... Merge tag 'fixes-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next\n\nPull ARM SoC low-priority fixes from Olof Johansson:\n \"A small selection of fixes coming in late during the release cycle and\n  not being critical enough for 3.15 inclusion\"\n\n* tag 'fixes-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: shmobile: armadillo800eva: fixup HDMI sound flags setting\n  ARM: msm: Silence readb/writeb warnings due to missing IOMEM()\n  ARM: dts: am43xx: fix starting offset of NAND.filesystem MTD partition\n  ARM: dts: am335x-boneblack: remove use of ti,vcc-aux-disable-is-sleep\n  ARM: OMAP2+: free use_gptimer_clksrc variable after boot\n  ARM: OMAP5: Redo THUMB mode switch on secondary CPU\n  ARM: dts: AM4372: add l3-noc information\n  ARM: dts: DRA7: Use dra7-l3-noc instead of omap4-l3-noc\n  reset: Add of_reset_control_get to reset.h Merge branch 'for-3.16/drivers' of git://git.kernel.dk/linux-block into next\n\nPull block driver changes from Jens Axboe:\n \"Now that the core bits are in, here's the pull request for the driver\n  related changes for 3.16.  Nothing out of the ordinary here, mostly\n  business as usual.  There are a few pulls of for-3.16/core into this\n  branch, which were done when the blk-mq was modified after the\n  mtip32xx conversion was put in.\n\n  The pull request contains:\n\n   - skd and cciss converted to use pci_enable_msix_exact().  From\n     Alexander Gordeev.\n\n   - A few mtip32xx fixes from Asai @ Micron.\n\n   - The conversion of mtip32xx from make_request_fn to blk-mq, and a\n     later small fix for that conversion on quiescing for non-queued IO.\n     From me.\n\n   - A fix for bsg to use an exported function to check whether this\n     driver is request based or not.  Needed updating for blk-mq, which\n     is request based, but does not have a request_fn hook.  From me.\n\n   - Small floppy bug fix from Jiri.\n\n   - A series of cleanups for the cdrom uniform layer from Joe Perches.\n     Gets rid of various old ugly macros, making the code conform more\n     to the modern coding style.\n\n   - A series of patches for drbd from the drbd crew (Lars Ellenberg and\n     Philipp Reisner).\n\n   - A use-after-free fix for null_blk from Ming Lei.\n\n   - Also from Ming Lei is a performance patch for virtio-blk, which can\n     net us a 3x win on kvm platforms where world notification is\n     expensive.\n\n   - Ming Lei also fixed a stall issue in virtio-blk, due to a race\n     between queue start/stop and resource limits.\n\n   - A small batch of fixes for xen-blk{back,front} from Olaf Hering and\n     Valentin Priescu\"\n\n* 'for-3.16/drivers' of git://git.kernel.dk/linux-block: (54 commits)\n  block: virtio_blk: don't hold spin lock during world switch\n  xen-blkback: defer freeing blkif to avoid blocking xenwatch\n  xen blkif.h: fix comment typo in discard-alignment\n  xen/blkback: disable discard feature if requested by toolstack\n  xen-blkfront: remove type check from blkfront_setup_discard\n  floppy: do not corrupt bio.bi_flags when reading block 0\n  mtip32xx: move error handling to service thread\n  virtio_blk: fix race between start and stop queue\n  mtip32xx: stop block hardware queues before quiescing IO\n  mtip32xx: blk_mq_init_queue() returns an ERR_PTR\n  mtip32xx: convert to use blk-mq\n  cdrom: Remove unnecessary prototype for cdrom_get_disc_info\n  cdrom: Remove unnecessary prototype for cdrom_mrw_exit\n  cdrom: Remove cdrom_count_tracks prototype\n  cdrom: Remove cdrom_get_next_writeable prototype\n  cdrom: Remove cdrom_get_last_written prototype\n  cdrom: Move mmc_ioctls above cdrom_ioctl to remove unnecessary prototype\n  cdrom: Remove unnecessary sanitize_format prototype\n  cdrom: Remove unnecessary check_for_audio_disc prototype\n  cdrom: Remove prototype for open_for_data\n  ... Merge tag 'pci-v3.16-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci into next\n\nPull PCI changes from Bjorn Helgaas:\n \"Enumeration\n    - Notify driver before and after device reset (Keith Busch)\n    - Use reset notification in NVMe (Keith Busch)\n\n  NUMA\n    - Warn if we have to guess host bridge node information (Myron Stowe)\n    - Work around AMD Fam15h BIOSes that fail to provide _PXM (Suravee\n      Suthikulpanit)\n    - Clean up and mark early_root_info_init() as deprecated (Suravee\n      Suthikulpanit)\n\n  Driver binding\n    - Add \"driver_override\" for force specific binding (Alex Williamson)\n    - Fail \"new_id\" addition for devices we already know about (Bandan\n      Das)\n\n  Resource management\n    - Support BAR sizes up to 8GB (Nikhil Rao, Alan Cox)\n    - Don't move IORESOURCE_PCI_FIXED resources (Bjorn Helgaas)\n    - Mark SBx00 HPET BAR as IORESOURCE_PCI_FIXED (Bjorn Helgaas)\n    - Fail safely if we can't handle BARs larger than 4GB (Bjorn Helgaas)\n    - Reject BAR above 4GB if dma_addr_t is too small (Bjorn Helgaas)\n    - Don't convert BAR address to resource if dma_addr_t is too small\n      (Bjorn Helgaas)\n    - Don't set BAR to zero if dma_addr_t is too small (Bjorn Helgaas)\n    - Don't print anything while decoding is disabled (Bjorn Helgaas)\n    - Don't add disabled subtractive decode bus resources (Bjorn Helgaas)\n    - Add resource allocation comments (Bjorn Helgaas)\n    - Restrict 64-bit prefetchable bridge windows to 64-bit resources\n      (Yinghai Lu)\n    - Assign i82875p_edac PCI resources before adding device (Yinghai Lu)\n\n  PCI device hotplug\n    - Remove unnecessary \"dev->bus\" test (Bjorn Helgaas)\n    - Use PCI_EXP_SLTCAP_PSN define (Bjorn Helgaas)\n    - Fix rphahp endianess issues (Laurent Dufour)\n    - Acknowledge spurious \"cmd completed\" event (Rajat Jain)\n    - Allow hotplug service drivers to operate in polling mode (Rajat Jain)\n    - Fix cpqphp possible NULL dereference (Rickard Strandqvist)\n\n  MSI\n    - Replace pci_enable_msi_block() by pci_enable_msi_exact()\n      (Alexander Gordeev)\n    - Replace pci_enable_msix() by pci_enable_msix_exact() (Alexander Gordeev)\n    - Simplify populate_msi_sysfs() (Jan Beulich)\n\n  Virtualization\n    - Add Intel Patsburg (X79) root port ACS quirk (Alex Williamson)\n    - Mark RTL8110SC INTx masking as broken (Alex Williamson)\n\n  Generic host bridge driver\n    - Add generic PCI host controller driver (Will Deacon)\n\n  Freescale i.MX6\n    - Use new clock names (Lucas Stach)\n    - Drop old IRQ mapping (Lucas Stach)\n    - Remove optional (and unused) IRQs (Lucas Stach)\n    - Add support for MSI (Lucas Stach)\n    - Fix imx6_add_pcie_port() section mismatch warning (Sachin Kamat)\n\n  Renesas R-Car\n    - Add gen2 device tree support (Ben Dooks)\n    - Use new OF interrupt mapping when possible (Lucas Stach)\n    - Add PCIe driver (Phil Edworthy)\n    - Add PCIe MSI support (Phil Edworthy)\n    - Add PCIe device tree bindings (Phil Edworthy)\n\n  Samsung Exynos\n    - Remove unnecessary OOM messages (Jingoo Han)\n    - Fix add_pcie_port() section mismatch warning (Sachin Kamat)\n\n  Synopsys DesignWare\n    - Make MSI ISR shared IRQ aware (Lucas Stach)\n\n  Miscellaneous\n    - Check for broken config space aliasing (Alex Williamson)\n    - Update email address (Ben Hutchings)\n    - Fix Broadcom CNB20LE unintended sign extension (Bjorn Helgaas)\n    - Fix incorrect vgaarb conditional in WARN_ON() (Bjorn Helgaas)\n    - Remove unnecessary __ref annotations (Bjorn Helgaas)\n    - Add arch/x86/kernel/quirks.c to MAINTAINERS PCI file patterns\n      (Bjorn Helgaas)\n    - Fix use of uninitialized MPS value (Bjorn Helgaas)\n    - Tidy x86/gart messages (Bjorn Helgaas)\n    - Fix return value from pci_user_{read,write}_config_*() (Gavin Shan)\n    - Turn pcibios_penalize_isa_irq() into a weak function (Hanjun Guo)\n    - Remove unused serial device IDs (Jean Delvare)\n    - Use designated initialization in PCI_VDEVICE (Mark Rustad)\n    - Fix powerpc NULL dereference in pci_root_buses traversal (Mike Qiu)\n    - Configure MPS on ARM (Murali Karicheri)\n    - Remove unnecessary includes of <linux/init.h> (Paul Gortmaker)\n    - Move Open Firmware devspec attribute to PCI common code (Sebastian Ott)\n    - Use pdev->dev.groups for attribute creation on s390 (Sebastian Ott)\n    - Remove pcibios_add_platform_entries() (Sebastian Ott)\n    - Add new ID for Intel GPU \"spurious interrupt\" quirk (Thomas Jarosch)\n    - Rename pci_is_bridge() to pci_has_subordinate() (Yijing Wang)\n    - Add and use new pci_is_bridge() interface (Yijing Wang)\n    - Make pci_bus_add_device() void (Yijing Wang)\n\n  DMA API\n    - Clarify physical/bus address distinction in docs (Bjorn Helgaas)\n    - Fix typos in docs (Emilio López)\n    - Update dma_pool_create ()and dma_pool_alloc() descriptions (Gioh Kim)\n    - Change dma_declare_coherent_memory() CPU address to phys_addr_t\n      (Bjorn Helgaas)\n    - Pass GAPSPCI_DMA_BASE CPU & bus address to dma_declare_coherent_memory()\n      (Bjorn Helgaas)\"\n\n* tag 'pci-v3.16-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (92 commits)\n  MAINTAINERS: Add generic PCI host controller driver\n  PCI: generic: Add generic PCI host controller driver\n  PCI: imx6: Add support for MSI\n  PCI: designware: Make MSI ISR shared IRQ aware\n  PCI: imx6: Remove optional (and unused) IRQs\n  PCI: imx6: Drop old IRQ mapping\n  PCI: imx6: Use new clock names\n  i82875p_edac: Assign PCI resources before adding device\n  ARM/PCI: Call pcie_bus_configure_settings() to set MPS\n  PCI: imx6: Fix imx6_add_pcie_port() section mismatch warning\n  PCI: Make pci_bus_add_device() void\n  PCI: exynos: Fix add_pcie_port() section mismatch warning\n  PCI: Introduce new device binding path using pci_dev.driver_override\n  PCI: rcar: Add gen2 device tree support\n  PCI: cpqphp: Fix possible null pointer dereference\n  PCI: rcar: Add R-Car PCIe device tree bindings\n  PCI: rcar: Add MSI support for PCIe\n  PCI: rcar: Add Renesas R-Car PCIe driver\n  PCI: Fix return value from pci_user_{read,write}_config_*()\n  PCI: exynos: Remove unnecessary OOM messages\n  ... Merge branch 'for-3.16/core' of git://git.kernel.dk/linux-block into next\n\nPull block core updates from Jens Axboe:\n \"It's a big(ish) round this time, lots of development effort has gone\n  into blk-mq in the last 3 months.  Generally we're heading to where\n  3.16 will be a feature complete and performant blk-mq.  scsi-mq is\n  progressing nicely and will hopefully be in 3.17.  A nvme port is in\n  progress, and the Micron pci-e flash driver, mtip32xx, is converted\n  and will be sent in with the driver pull request for 3.16.\n\n  This pull request contains:\n\n   - Lots of prep and support patches for scsi-mq have been integrated.\n     All from Christoph.\n\n   - API and code cleanups for blk-mq from Christoph.\n\n   - Lots of good corner case and error handling cleanup fixes for\n     blk-mq from Ming Lei.\n\n   - A flew of blk-mq updates from me:\n\n     * Provide strict mappings so that the driver can rely on the CPU\n       to queue mapping.  This enables optimizations in the driver.\n\n     * Provided a bitmap tagging instead of percpu_ida, which never\n       really worked well for blk-mq.  percpu_ida relies on the fact\n       that we have a lot more tags available than we really need, it\n       fails miserably for cases where we exhaust (or are close to\n       exhausting) the tag space.\n\n     * Provide sane support for shared tag maps, as utilized by scsi-mq\n\n     * Various fixes for IO timeouts.\n\n     * API cleanups, and lots of perf tweaks and optimizations.\n\n   - Remove 'buffer' from struct request.  This is ancient code, from\n     when requests were always virtually mapped.  Kill it, to reclaim\n     some space in struct request.  From me.\n\n   - Remove 'magic' from blk_plug.  Since we store these on the stack\n     and since we've never caught any actual bugs with this, lets just\n     get rid of it.  From me.\n\n   - Only call part_in_flight() once for IO completion, as includes two\n     atomic reads.  Hopefully we'll get a better implementation soon, as\n     the part IO stats are now one of the more expensive parts of doing\n     IO on blk-mq.  From me.\n\n   - File migration of block code from {mm,fs}/ to block/.  This\n     includes bio.c, bio-integrity.c, bounce.c, and ioprio.c.  From me,\n     from a discussion on lkml.\n\n  That should describe the meat of the pull request.  Also has various\n  little fixes and cleanups from Dave Jones, Shaohua Li, Duan Jiong,\n  Fengguang Wu, Fabian Frederick, Randy Dunlap, Robert Elliott, and Sam\n  Bradshaw\"\n\n* 'for-3.16/core' of git://git.kernel.dk/linux-block: (100 commits)\n  blk-mq: push IPI or local end_io decision to __blk_mq_complete_request()\n  blk-mq: remember to start timeout handler for direct queue\n  block: ensure that the timer is always added\n  blk-mq: blk_mq_unregister_hctx() can be static\n  blk-mq: make the sysfs mq/ layout reflect current mappings\n  blk-mq: blk_mq_tag_to_rq should handle flush request\n  block: remove dead code in scsi_ioctl:blk_verify_command\n  blk-mq: request initialization optimizations\n  block: add queue flag for disabling SG merging\n  block: remove 'magic' from struct blk_plug\n  blk-mq: remove alloc_hctx and free_hctx methods\n  blk-mq: add file comments and update copyright notices\n  blk-mq: remove blk_mq_alloc_request_pinned\n  blk-mq: do not use blk_mq_alloc_request_pinned in blk_mq_map_request\n  blk-mq: remove blk_mq_wait_for_tags\n  blk-mq: initialize request in __blk_mq_alloc_request\n  blk-mq: merge blk_mq_alloc_reserved_request into blk_mq_alloc_request\n  blk-mq: add helper to insert requests from irq context\n  blk-mq: remove stale comment for blk_mq_complete_request()\n  blk-mq: allow non-softirq completions\n  ... Merge tag 'mmc-v3.16-1' of git://git.linaro.org/people/ulf.hansson/mmc into next\n\nPull MMC update from Ulf Hansson:\n \"These patches are mainly updates for the mmci driver and have been\n  tested in linux-next.\n\n  Some ARM SoC related patches are also included and those have been\n  acked from the corresponding maintainers to go through my mmc tree.\n\n  Updates for mmci driver:\n   - Put the device into low power state at system suspend.\n   - Convert to the common mmc DT parser.\n   - Add missing DT bindings needed for ux500.\n\n  Updates for ARM ux500|u300:\n   - Convert to the common mmc DT bindings.\n   - Remove redundant board file for mmci platform data\"\n\n* tag 'mmc-v3.16-1' of git://git.linaro.org/people/ulf.hansson/mmc: (22 commits)\n  mmc: mmci: Enforce DMA configuration through DT\n  mmc: mmci: Enforce max frequency configuration through DT\n  mmc: mmci: Enforce mmc capabilities through DT\n  mmc: mmci: Enforce DT for signal direction and feedback clock\n  ARM: ux500: Remove redundant board file for mmci platform data\n  ARM: ux500: Add a vmmc regulator through DT for the poped eMMC for href\n  ARM: ux500: Add the mmc capabilities flags to DT\n  mmc: mmci: Enable MMC_CAP_CMD23\n  mmc: mmci: Mark the DT bindings for highspeed mode as deprecated\n  ARM: u300: Convert to the common mmc DT bindings for highspeed mode\n  ARM: nomadik: Convert to the common mmc DT bindings for highspeed mode\n  ARM: ux500: Convert to the common mmc DT bindings for highspeed mode\n  ARM: ux500: Add mmci signal directions and feeback clock in DT for href\n  mmc: mmci: Use the common mmc DT parser\n  mmc: mmci: Add DT bindings for feedback clock pin\n  mmc: mmci: Add DT bindings for signal direction\n  mmc: mmci: Update DT documentation\n  mmc: mmci: Convert to devm functions\n  mmc: mmci: Convert to the mmc gpio API\n  mmc: mmci: Put the device into low power state at system suspend\n  ... Merge tag 'hsi-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-hsi into next\n\nPull HSI (High Speed Syncronous Interface) changes from Sebastian Reichel:\n \"Please pull the following changes for the HSI subsystem, which I have\n  taken over from Carlos Chinea <carlos.chinea@nokia.com>.\n\n  The below patches have been worked on in the linux-omap mailinglist\n  for 10 months and are well tested in linux-next (have been in there\n  for more than two weeks) without any problems arising.  Apart from\n  that potential regressions are very limited, because the subsystem is\n  not yet used by any platform in the mainline kernel.\n\n   - Add some documentation for the HSI subsystem\n\n   - Add Device Tree support for the HSI subsystem\n\n   - Add OMAP3 SSI driver (SSI is a legacy variant of HSI)\n\n   - Add Nokia N900 Modem driver (without speech support for now)\"\n\n* tag 'hsi-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-hsi:\n  HSI: Introduce Nokia N900 modem driver\n  HSI: Introduce driver for SSI Protocol\n  Documentation: DT: omap-ssi binding documentation\n  HSI: Introduce OMAP SSI driver\n  HSI: Add common DT binding for HSI client devices\n  HSI: export method to (un)register clients\n  HSI: Add channel resource support to HSI clients\n  HSI: method to unregister clients from an hsi port\n  HSI: hsi-char: fix driver for multiport scenarios\n  MAINTAINERS: update HSI entry\n  Documentation: HSI: Add some general description for the HSI subsystem Merge tag 'edac_for_3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp into next\n\nPull EDAC changes from Borislav Petkov:\n \"Just two small fixlets.\n\n  We have more in the pipe but we didn't get ready in time so more stuff\n  next time\"\n\n* tag 'edac_for_3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:\n  EDAC: Fix MC scrub mode comparsion bug for correctable errors\n  EDAC, MCE, AMD: Remove leftover unused mask Merge tag 'gpio-v3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio into next\n\nPull GPIO updates from Linus Walleij:\n \"This is the bulk of GPIO changes for the v3.16 series.\n\n  There is a lot of action in the GPIO subsystem doing refactorings and\n  cleanups, almost as many deletions as insertions and minor feature\n  growth and no new drivers this time.  Which is actually pretty nice.\n  Some GPIO-related stuff will come in through the pin control tree as\n  well.\n\n  Details:\n\n   - We are finalizing and fixing up the gpiochip irqchip helpers\n     bringing a helpful irqchip implementation into the gpiolib core and\n     avoiding duplicate code and, more importantly, duplicate bug fixes:\n\n     * Support for using the helpers with threaded interrupt handlers as\n       used on sleeping GPIO-irqchips\n\n     * Do not set up hardware triggers for edges or levels if the\n       default IRQ type is IRQ_TYPE_NONE - some drivers would exploit\n       the fact that you could get default initialization of the IRQ\n       type from the core at probe() but if no default type is set up\n       from the helper, we should not call the driver to configure\n       anything.  Wait until a consumer requests the interrupt instead.\n\n     * Make the irqchip helpers put the GPIO irqs into their own lock\n       class.  The GPIO irqchips can often emit (harmless, but annoying)\n       lockdep warnings about recursions when they are in fact just\n       cascaded IRQs.  By putting them into their own lock class we help\n       the lockdep core to keep track of things.\n\n     * Switch the tc3589x GPIO expanders to use the irqchip helpers\n\n     * Switch the OMAP GPIO driver to use the irqchip helpers\n\n     * Add some documentation for the irqchip helpers\n\n     * select IRQ_DOMAIN when using the helpers since some platforms may\n       not be using this by default and it's a strict dependency.\n\n   - Continued GPIO descriptor refactoring:\n\n     * Remove the one instance of gpio_to_desc() from the device tree\n       code, making the OF GPIO code use GPIO descriptors only.\n\n     * Introduce gpiod_get_optional() and gpiod_get_optional_index()\n       akin to the similar regulator functions for cases where the use\n       of GPIO is optional and not strictly required.\n\n     * Make of_get_named_gpiod_flags() private - we do not want to\n       unnecessarily expose APIs to drivers that make the gpiolib harder\n       than necessary to maintain and refactor.  Privatize this\n       function.\n\n   - Support \"-gpio\" suffix for the OF GPIO retrieveal path.  We used to\n     look for \"foo-gpios\" or just \"gpios\" in device tree nodes, but it\n     turns out that some drivers with a single GPIO line will just state\n     \"foo-gpio\" (singularis).  Sigh.  Support this with a fallback\n     looking for it, as this simplifies driver code and handles it in\n     core code.\n\n   - Switch the ACPI GPIO core to fetch GPIOs with the *_cansleep\n     function variants as the GPIO operation region handler can sleep,\n     and shall be able to handle gpiochips that sleep.\n\n   - Tons of cleanups and janitorial work from Jingoo Han, Axel Lin,\n     Javier Martinez Canillas and Abdoulaye Berthe.  Notably Jingoo cut\n     off a ton of pointless OOM messages.\n\n   - Incremental development and fixes for various drivers, nothing\n     really special here\"\n\n* tag 'gpio-v3.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio: (85 commits)\n  gpio: select IRQ_DOMAIN for gpiolib irqchip helpers\n  gpio: pca953x: use gpiolib irqchip helpers\n  gpio: pcf857x: Add IRQF_SHARED when request irq\n  gpio: pcf857x: Avoid calling irq_domain_cleanup twice\n  gpio: mcp23s08: switch chip count to int\n  gpio: dwapb: use a second irq chip\n  gpio: ep93xx: Use devm_ioremap_resource()\n  gpio: mcp23s08: fixed count variable for devicetree probing\n  gpio: Add run-time dependencies to R-Car driver\n  gpio: pch: add slab include\n  Documentation / ACPI: Fix location of GPIO documentation\n  gpio / ACPI: use *_cansleep version of gpiod_get/set APIs\n  gpio: generic: add request function pointer\n  gpio-pch: Fix Kconfig dependencies\n  gpio: make of_get_named_gpiod_flags() private\n  gpio: gpioep93xx: use devm functions\n  gpio: janzttl: use devm function\n  gpio: timberdale: use devm functions\n  gpio: bt8xx: use devm function for memory allocation\n  gpio: include linux/bug.h in interface header\n  ... Merge tag 'stable/for-linus-3.16-rc0-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip into next\n\nPull Xen updates from David Vrabel:\n \"xen: features and fixes for 3.16-rc0\n   - support foreign mappings in PVH domains (needed when dom0 is PVH)\n\n   - fix mapping high MMIO regions in x86 PV guests (this is also the\n     first half of removing the PAGE_IOMAP PTE flag).\n\n   - ARM suspend/resume support.\n\n   - ARM multicall support\"\n\n* tag 'stable/for-linus-3.16-rc0-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  x86/xen: map foreign pfns for autotranslated guests\n  xen-acpi-processor: Don't display errors when we get -ENOSYS\n  xen/pciback: Document the entry points for 'pcistub_put_pci_dev'\n  xen/pciback: Document when the 'unbind' and 'bind' functions are called.\n  xen-pciback: Document when we FLR an PCI device.\n  xen-pciback: First reset, then free.\n  xen-pciback: Cleanup up pcistub_put_pci_dev\n  x86/xen: do not use _PAGE_IOMAP in xen_remap_domain_mfn_range()\n  x86/xen: set regions above the end of RAM as 1:1\n  x86/xen: only warn once if bad MFNs are found during setup\n  x86/xen: compactly store large identity ranges in the p2m\n  x86/xen: fix set_phys_range_identity() if pfn_e > MAX_P2M_PFN\n  x86/xen: rename early_p2m_alloc() and early_p2m_alloc_middle()\n  xen/x86: set panic notifier priority to minimum\n  arm,arm64/xen: introduce HYPERVISOR_suspend()\n  xen: refactor suspend pre/post hooks\n  arm: xen: export HYPERVISOR_multicall to modules.\n  arm64: introduce virt_to_pfn\n  arm/xen: Remove definiition of virt_to_pfn in asm/xen/page.h\n  arm: xen: implement multicall hypercall support. Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k into next\n\nPull m68k updates from Geert Uytterhoeven:\n \"Highlights:\n   - support for running kernels in fast TT-RAM instead of slow ST-RAM\n     on Atari\n   - multi-platform EARLY_PRINTK\n   - better support for machines with lots of RAM (think ARAnyM), and\n     for running kernels larger than 4 MiB (think multi-platform)\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k:\n  m68k/hp300: Convert printk to pr_foo()\n  m68k/apollo: Convert printk to pr_foo()\n  m68k/amiga: Convert printk(foo to pr_foo()\n  m68k: Increase initial mapping to 8 or 16 MiB if possible\n  m68k: Update defconfigs for v3.15-rc2\n  m68k/atari: fix SCC initialization for debug console\n  m68k/mvme16x: Adopt common boot console\n  m68k: Multi-platform EARLY_PRINTK\n  m68k: Toward platform agnostic framebuffer debug logging\n  m68k/atari - atari_scsi: use correct virt/phys translation for DMA buffer\n  m68k/atari - ataflop: use correct virt/phys translation for DMA buffer\n  m68k/atari - atafb: convert allocation of fb ram to new interface\n  m68k/atari - stram: alloc ST-RAM pool even if kernel not in ST-RAM Linux 3.15-rc8 Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc fix from Ben Herrenschmidt:\n \"Here's just one trivial patch to wire up sys_renameat2 which I seem to\n  have completely missed so far.\n\n  (My test build scripts fwd me warnings but miss the ones generated for\n  missing syscalls)\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc: Wire renameat2() syscall Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"A fair number of fixes across the field.  Nothing terribly\n  complicated; the one liners in below changelog should be fairly\n  descriptive.\n\n  Noteworthy is the SB1 change which the result of changes to binutils\n  resulting in one big gas warning for most files being assembled as\n  well as the asid_cache and branch emulation fixes which fix corruption\n  or possible uninteded behaviour of kernel or application code.  The\n  remainder of fixes are more platforms or subsystem specific\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: R46000: Fix Micro-assembler field overflow for R4600 V2\n  MIPS: ptrace: Avoid smp_processor_id() in preemptible code\n  MIPS: Lemote 2F: cs5536: mfgpt: use raw locks\n  MIPS: SB1: Fix excessive kernel warnings.\n  MIPS: RC32434: fix broken PCI resource initialization\n  MIPS: malta: memory.c: Initialize the 'memsize' variable\n  MIPS: Fix typo when reporting cache and ftlb errors for ImgTec cores\n  MIPS: Fix inconsistancy of __NR_Linux_syscalls value\n  MIPS: Fix branch emulation of branch likely instructions.\n  MIPS: Fix a typo error in AUDIT_ARCH definition\n  MIPS: Change type of asid_cache to unsigned long Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Various fixlets, mostly related to the (root-only) SCHED_DEADLINE\n  policy, but also a hotplug bug fix and a fix for a NR_CPUS related\n  overallocation bug causing a suspend/resume regression\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched: Fix hotplug vs. set_cpus_allowed_ptr()\n  sched/cpupri: Replace NR_CPUS arrays\n  sched/deadline: Replace NR_CPUS arrays\n  sched/deadline: Restrict user params max value to 2^63 ns\n  sched/deadline: Change sched_getparam() behaviour vs SCHED_DEADLINE\n  sched: Disallow sched_attr::sched_policy < 0\n  sched: Make sched_setattr() correctly return -EFBIG Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull core futex/rtmutex fixes from Thomas Gleixner:\n \"Three fixlets for long standing issues in the futex/rtmutex code\n  unearthed by Dave Jones syscall fuzzer:\n\n   - Add missing early deadlock detection checks in the futex code\n   - Prevent user space from attaching a futex to kernel threads\n   - Make the deadlock detector of rtmutex work again\n\n  Looks large, but is more comments than code change\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  rtmutex: Fix deadlock detector for real\n  futex: Prevent attaching to kernel threads\n  futex: Add another early deadlock detection check Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Mostly quiet now:\n\n  i915:\n    fixing userspace visiblie issues, all stable marked\n\n  radeon:\n    one more pll fix, two crashers, one suspend/resume regression\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: Resume fbcon last\n  drm/radeon: only allocate necessary size for vm bo list\n  drm/radeon: don't allow RADEON_GEM_DOMAIN_CPU for command submission\n  drm/radeon: avoid crash if VM command submission isn't available\n  drm/radeon: lower the ref * post PLL maximum once more\n  drm/i915: Prevent negative relocation deltas from wrapping\n  drm/i915: Only copy back the modified fields to userspace from execbuffer\n  drm/i915: Fix dynamic allocation of physical handles dcache: add missing lockdep annotation\n\nlock_parent() very much on purpose does nested locking of dentries, and\nis careful to maintain the right order (lock parent first).  But because\nit didn't annotate the nested locking order, lockdep thought it might be\na deadlock on d_lock, and complained.\n\nAdd the proper annotation for the inner locking of the child dentry to\nmake lockdep happy.\n\nIntroduced by commit 046b961b45f9 (\"shrink_dentry_list(): take parent's\n->d_lock earlier\").\n\nReported-and-tested-by: Josh Boyer <jwboyer@fedoraproject.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input subsystem fixes from Dmitry Torokhov:\n \"A couple of driver/build fixups and also redone quirk for Synaptics\n  touchpads on Lenovo boxes (now using PNP IDs instead of DMI data to\n  limit number of quirks)\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: synaptics - change min/max quirk table to pnp-id matching\n  Input: synaptics - add a matches_pnp_id helper function\n  Input: synaptics - T540p - unify with other LEN0034 models\n  Input: synaptics - add min/max quirk for the ThinkPad W540\n  Input: ambakmi - request a shared interrupt for AMBA KMI devices\n  Input: pxa27x-keypad - fix generating scancode\n  Input: atmel-wm97xx - only build for AVR32\n  Input: fix ps2/serio module dependency Merge tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394\n\nPull firewire fix from Stefan Richter:\n \"A regression fix for the IEEE 1394 subsystem: re-enable IRQ-based\n  asynchronous request reception at addresses below 128 TB\"\n\n* tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:\n  firewire: revert to 4 GB RDMA, fix protocols using Memory Space Merge tag 'dm-3.15-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device-mapper fixes from Mike Snitzer:\n \"A dm-cache stable fix to split discards on cache block boundaries\n  because dm-cache cannot yet handle discards that span cache blocks.\n\n  Really fix a dm-mpath LOCKDEP warning that was introduced in -rc1.\n\n  Add a 'no_space_timeout' control to dm-thinp to restore the ability to\n  queue IO indefinitely when no data space is available.  This fixes a\n  change in behavior that was introduced in -rc6 where the timeout\n  couldn't be disabled\"\n\n* tag 'dm-3.15-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm mpath: really fix lockdep warning\n  dm cache: always split discards on cache block boundaries\n  dm thin: add 'no_space_timeout' dm-thin-pool module param Merge branch 'for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs dcache livelock fix from Al Viro:\n \"Fixes for livelocks in shrink_dentry_list() introduced by fixes to\n  shrink list corruption; the root cause was that trylock of parent's\n  ->d_lock could be disrupted by d_walk() happening on other CPUs,\n  resulting in shrink_dentry_list() making no progress *and* the same\n  d_walk() being called again and again for as long as\n  shrink_dentry_list() doesn't get past that mess.\n\n  The solution is to have shrink_dentry_list() treat that trylock\n  failure not as 'try to do the same thing again', but 'lock them in the\n  right order'\"\n\n* 'for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  dentry_kill() doesn't need the second argument now\n  dealing with the rest of shrink_dentry_list() livelock\n  shrink_dentry_list(): take parent's ->d_lock earlier\n  expand dentry_kill(dentry, 0) in shrink_dentry_list()\n  split dentry_kill()\n  lift the \"already marked killed\" case into shrink_dentry_list() Merge branch 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"The usual random collection of relatively small ARM fixes\"\n\n* 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  ARM: 8063/1: bL_switcher: fix individual online status reporting of removed CPUs\n  ARM: 8064/1: fix v7-M signal return\n  ARM: 8057/1: amba: Add Qualcomm vendor ID.\n  ARM: 8052/1: unwind: Fix handling of \"Pop r4-r[4+nnn],r14\" opcode\n  ARM: 8051/1: put_user: fix possible data corruption in put_user\n  ARM: 8048/1: fix v7-M setup stack location Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fix from Will Deacon:\n \"Fix CoW regression for transparent hugepages by routing set_pmd_at to\n  set_pte_at, which correctly handles PTE_WRITE and will mark the\n  resulting table entry as read-only where appropriate\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: mm: fix pmd_write CoW brokenness Merge tag 'pm+acpi-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These are three stable-candidate fixes, one for the ACPI thermal\n  driver and two for cpufreq drivers.\n\n  Specifics:\n\n   - A workqueue is destroyed too early during the ACPI thermal driver\n     module unload which leads to a NULL pointer dereference in the\n     driver's remove callback.  Fix from Aaron Lu.\n\n   - A wrong argument is passed to devm_regulator_get_optional() in the\n     probe routine of the cpu0 cpufreq driver which leads to resource\n     leaks if the driver is unbound from the cpufreq platform device.\n     Fix from Lucas Stach.\n\n   - A lock is missing in cpufreq_governor_dbs() which leads to memory\n     corruption and NULL pointer dereferences during system\n     suspend/resume, for example.  Fix from Bibek Basu\"\n\n* tag 'pm+acpi-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / thermal: fix workqueue destroy order\n  cpufreq: cpu0: drop wrong devm usage\n  cpufreq: remove race while accessing cur_policy Merge tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux\n\nPull clock fixes from Mike Turquette:\n \"Small number of user-visible regression fixes for clock drivers.\n\n  There is a memory leak fix for an ST platform, an infinite Loop Of\n  Doom fix for the recent changes to the basic clock divider (hopefully\n  the last fix for those recent changes) and some Tegra PLL changes\n  which keep PCI from being hosed on that platform\"\n\n* tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux:\n  clk: st: Fix memory leak\n  clk: divider: Fix table round up function\n  clk: tegra: Fix enabling of PLLE\n  clk: tegra: Introduce divider mask and shift helpers\n  clk: tegra: Fix PLLE programming Merge tag 'sound-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Just two small stable fixes: an HD-audio fix for the new Intel\n  chipsets and a PM handling fix in PCM dmaengine core\"\n\n* tag 'sound-3.15-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Fix onboard audio on Intel H97/Z97 chipsets\n  ALSA: pcm_dmaengine: Add check during device suspend Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fix from Al Viro:\n \"Oh, well...  Still nothing useful on that livelock (I had something\n  that looked kinda-sorta like a non-invasive solution, but it\n  deadlocks), so it's just Miklos' vmsplice fix for now\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  vfs: fix vmplice_to_user() Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm fixes from Paolo Bonzini:\n \"Small fixes for x86, slightly larger fixes for PPC, and a forgotten\n  s390 patch.  The PPC fixes are important because they fix breakage\n  that is new in 3.15\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: s390: announce irqfd capability\n  KVM: x86: disable master clock if TSC is reset during suspend\n  KVM: vmx: disable APIC virtualization in nested guests\n  KVM guest: Make pv trampoline code executable\n  KVM: PPC: Book3S: ifdef on CONFIG_KVM_BOOK3S_32_HANDLER for 32bit\n  KVM: PPC: Book3S HV: Add missing code for transaction reclaim on guest exit\n  KVM: PPC: Book3S: HV: make _PAGE_NUMA take effect Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull two powerpc fixes from Ben Herrenschmidt:\n \"Here's a pair of powerpc fixes for 3.15 which are also going to\n  stable.\n\n  One's a fix for building with newer binutils (the problem currently\n  only affects the BookE kernels but the affected macro might come back\n  into use on BookS platforms at any time).  Unfortunately, the binutils\n  maintainer did a backward incompatible change to a construct that we\n  use so we have to add Makefile check.\n\n  The other one is a fix for CPUs getting stuck in kexec when running\n  single threaded.  Since we routinely use kexec on power (including in\n  our newer bootloaders), I deemed that important enough\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc, kexec: Fix \"Processor X is stuck\" issue during kexec from ST mode\n  powerpc: Fix 64 bit builds with binutils 2.24 Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull virtio_blk fix from Jens Axboe:\n \"There's a start/stop queue race in virtio_blk, which causes stalls and\n  erratic behaviour for some.  I've had this queued up for 3.16 for a\n  while, but I think we should push it into the current series as well.\n\n  So I cherry picked the commit and added a stable marker as well, so it\n  can propagate down\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  virtio_blk: fix race between start and stop queue Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull two timer fixes from Thomas Gleixner:\n \"Two small fixlets for ARM SoC clocksource drivers:\n\n   - avoid calling functions which might sleep from interrupt [disabled]\n     context in tcb_clksrc used on Atmel SoCs\n\n   - use irq_force_affinity() to pin the per cpu timer interrupt on a\n     not yet online cpu in the SiRFprimaII driver\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource: tcb_clksrc: Make tc_mode interrupt safe\n  clocksource: marco: Fix the affinity set for local timer of CPU1 Merge tag 'fixes-for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"A slightly larger set of fixes than we'd like at this point in the\n  release.  Hopefully our very last batch before 3.15:\n\n  OMAP:\n   - Fix boot regression with CPU_IDLE enabled\n   - Fixes for audio playback on OMAP5\n   - Clock rate setting fix for OMAP3\n   - Misc idle/PM fixes\n  Exynos:\n   - Removal of a couple of power domains to work around issues with\n     access when they are powered down\n   - Enabling missing highspeed-i2c driver to make MMC regulators work\n   - Secondary CPU spin-up fix for 4212\n   - Remove MDMA1 engine to avoid conflicts on secure mode platforms\n   - A few other DT fixes\n  Marvell:\n   - PCI-e fixes for clocks and resource allocation\n\n  plus a few other smaller fixes, add a MAINTAINERS entry for reset\n  drivers, etc\"\n\n* tag 'fixes-for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (21 commits)\n  MAINTAINERS: Add reset controller framework entry\n  ARM: trusted_foundations: fix compile error on non-SMP\n  ARM: at91: sam9260: fix compilation issues\n  ARM: mvebu: fix definitions of PCIe interfaces on Armada 38x\n  ARM: imx: fix error handling in ipu device registration\n  ARM: OMAP4: Fix the boot regression with CPU_IDLE enabled\n  ARM: dts: Keep LDO4 always ON for exynos5250-arndale board\n  ARM: dts: Fix SPI interrupt numbers for exynos5420\n  ARM: dts: fix incorrect ak8975 compatible for exynos4412-trats2 board\n  ARM: OMAP2+: Fix DMA hang after off-idle\n  ARM: OMAP2+: nand: Fix NAND on OMAP2 and OMAP3 boards\n  ARM: dts: Remove g2d_pd node for exynos5420\n  ARM: dts: Remove mau_pd node for exynos5420\n  ARM: exynos_defconfig: enable HS-I2C to fix for mmc partition mount\n  ARM: dts: disable MDMA1 node for exynos5420\n  ARM: EXYNOS: fix the secondary CPU boot of exynos4212\n  ARM: omap5: hwmod_data: Correct IDLEMODE for McPDM\n  ARM: mvebu: mvebu-soc-id: keep clock enabled if PCIe unit is enabled\n  ARM: mvebu: mvebu-soc-id: add missing clk_put() call\n  ARM: at91/dt: sam9260: correct external trigger value\n  ... Merge tag 'pinctrl-v3.15-4' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pinctrl fix from Linus Walleij:\n \"A single last pinctrl fix for the v3.15 series: the vt8500 driver was\n  failing to update the output value when the combined set direction\n  output and set value was executed\"\n\n* tag 'pinctrl-v3.15-4' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: vt8500: Ensure value reg is updated when setting direction Remove now stale arguments to \"CHANGED()\" macro\n\nWe now never remove units or percentage signs, and always just compare\nthe string data, so we should remove the hacky arguments that are no\nlonger used.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add and use 'string_to_fraction()' helper converter function\n\nThis matches the pattern of unit conversion, and will allow us to remove\nall the code that uses the old complex \"CHANGED()\" macro that tries to\nremove units or percent signs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware cylinder size string parserc\n\nWhittling down on the string parsing that doesn't check user-specified\nunits.  Still need to handle temperatures (and will do percentages to\nmatch the pattern too), but this is getting us closer to always honoring\nuser-specified units.\n\nWith this you can say that you have a \"10l\" cylinder at \"3000psi\", and\nit will do the right thing (it's basically a 72 cuft cylinder in\nimperial measurements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware conversion of pressure data\n\nThis just adds (and uses) a string_to_pressure() to parse pressure units\ncorrectly when filling in cylinder pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a string_to_depth() helper function to match our string_to_weight one\n\nIt's currently only used for the setting of the cylinder switching\ndepth, but now that one should work with user-specified units (so you\ncan set a max depth in feet even if you use metric, and vice versa).\n\nIn the future, if we also make the unit preferences something you can\npass in (with user preferences as a default argument value), we might\nwant to use this for parsing the XML too, so that we'd honor explicit\nunits in the XML strings.  But the XML input unit preferences are not\nnecessarily at all the same as the user preferences, so that does\nrequire us to extend the conversion functions to do possibly explicit\nunit preference selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> const'ify our strtod() helper functions\n\nThe C library doesn't use const char pointers for legacy reasons (and\nbecause you *can* modify the string the end pointer points to), but\nlet's do it in our internal implementation just because it's a nice\nguarantee to have.\n\nWe actually used to have a non-const end pointer and replace a decimal\ncomma with a decimal dot, but that was because we didn't have the fancy\n\"allow commas\" flags.  So by using our own strtod_flags() function, we\ncan now keep all the strings we parse read-only rather than modify them\nas we parse them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'string_to_grams()' use proper type safe types\n\nMake it use 'weight_t' and hide the \"grams\" part inside the type.  That\nwas the whole point of the weight_t type, after all.  Returning a\n\"double\" was always bogus, since we internally always do integer grams\n(and the function actually used \"rint()\" to get all the rounding right\nanyway).\n\nAs a result, it's now called \"string_to_weight()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add unit-aware conversion of pressure data\n\nThis just adds (and uses) a string_to_pressure() to parse pressure units\ncorrectly when filling in cylinder pressures.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a string_to_depth() helper function to match our string_to_weight one\n\nIt's currently only used for the setting of the cylinder switching\ndepth, but now that one should work with user-specified units (so you\ncan set a max depth in feet even if you use metric, and vice versa).\n\nIn the future, if we also make the unit preferences something you can\npass in (with user preferences as a default argument value), we might\nwant to use this for parsing the XML too, so that we'd honor explicit\nunits in the XML strings.  But the XML input unit preferences are not\nnecessarily at all the same as the user preferences, so that does\nrequire us to extend the conversion functions to do possibly explicit\nunit preference selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> const'ify our strtod() helper functions\n\nThe C library doesn't use const char pointers for legacy reasons (and\nbecause you *can* modify the string the end pointer points to), but\nlet's do it in our internal implementation just because it's a nice\nguarantee to have.\n\nWe actually used to have a non-const end pointer and replace a decimal\ncomma with a decimal dot, but that was because we didn't have the fancy\n\"allow commas\" flags.  So by using our own strtod_flags() function, we\ncan now keep all the strings we parse read-only rather than modify them\nas we parse them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'string_to_grams()' use proper type safe types\n\nMake it use 'weight_t' and hide the \"grams\" part inside the type.  That\nwas the whole point of the weight_t type, after all.  Returning a\n\"double\" was always bogus, since we internally always do integer grams\n(and the function actually used \"rint()\" to get all the rounding right\nanyway).\n\nAs a result, it's now called \"string_to_weight()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix imperial cylinder sizes in equipment tab\n\nThe imperial cylinder sizes are not just in cubic feet: they are in\ncubic feet of gas at STP. So the imperial/metric difference is not\njust about converting blindly from liters to cubic feet, you also have\nto take the working pressure of the cylinder into account.\n\nThis was broken by commit f9b7c5dfe9d0 (\"Make units in cells\nconsistant in CylindersModel\"), because those poor sheltered Swedish\npeople have never had to work with the wondrous imperial cylinder\nsizing, and think that units should make _sense_. Hah.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow the user to specify weight units explicitly\n\nInstead of always assuming that all numbers are in the users locale\nweight units, allow the user to say \"kg\" or \"lbs\" explicitly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make our 'ascii_strtod()' helper more generic\n\nWe'll want to do sane parsing of strings, but the C library makes it\nhard to handle user input sanely and the Qt toDouble() function\ninterface was designed by a retarded chipmunk.\n\nSo just extend our existing hacky \"ascii_strtod()\" to allow a more\ngeneric interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Quiet down valgrind warnings\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix editing of negative temperatures\n\nWe tried to clean up the temperature string (to remove degree characters\nand unit names etc) a bit too aggressively, and removed the sign\ncharacter too..\n\nFixes #306\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive merging\n\nThis limits merging dives to dives that have at most half an hour of\nsurface time between them. That \"half hour\" is kind of a random thing\nto pick, but it's not horribly horribly wrong.\n\nIt also changes the semantics of \"merge selected dives\" to something\nthat actually works pretty well: you can select a whole range of\ndives, and it will merge only the ones that makes sense to merge. I\ntested it, and it's reasonable. I could select all my dives from one\ndive trip, and then do \"Merge selected dives\", and it did the right\nthing (Dirk: I selected the florida trip, and it merged the aborted\n\"missed the trench\" dive with the _actual_ \"trench\" dive).\n\nI'm _slightly_ hesitant about this in the sense that maybe some crazy\nperson actually would want to merge dives with more than half an hour\nof surface time between them, but it really doesn't seem to make much\nsense.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make fake profile average depth come out right\n\nThis isn't perfect as it doesn't really cover all cases. If we need to\ngenerate a profile for some fairly insane cases, the stupid thing just\ngives up rather than try to search for a solution that satisfies the\nconstraints.\n\nFor example, if you have a maxdepth=10m and an average depth of 9.9m, it\nwill try two different (roughly sane) dive profiles, fail to get anything\nthat matches that kind of dive and that average depth, and then just say\n\"screw it, I'll match an insane profile instead\" and basically generate a\nrectangular dive.\n\nIt does seem to handle the few cases I tried.\n\nSomebody should double-check my math, and I think we might want to make\nthe \"default profiles\" a bit saner. Right now the preferred default\nprofile simply says \"ascent/descent rate of 5m/min, with two levels at\nmax_depth and 1/3rd maxdepth\".\n\nThat profile might not work for the simple reason that maybe we did a\nquick dive to 40m, but then came up and spent a lot of time in shallower\nwaters, so our average depth was just 10m or so. Obviously we can *not*\nmake a dive that has the two depths 40m and 13m come out to an average of\n10m deep.\n\nSo it has a fallback for things like that, where we try to generate a\nprofile with a faster ascent/descent rate, and a shallower second depth.\n\nAnd then there's the fallback with an insane 10m/s ascent/descent rate and\na second depth that is basically at the surface, and if we can't generate\na dive profile with those parameters, either my math is wrong, or somebody\nwas playing with rockets under-water. So we just give up.\n\nThere's a few other heuristics too (if there is no average depth, we\ncreate a random one just to make the profile look reasonable).\n\nI *think* this is all perfectly fine, but I do want others to take a look.\nIt might be doing something stupid.\n\n[Dirk Hohndel: after the discussion I took the patch and reworded parts of\n               the commit message]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Speed up XML loading\n\nThis tries to speed up XML loading for large XML files (and thus\nsubsurface startup times) by trimming the fat off our own matching code.\n\nThe actual libxml overhead (particularly string allocation) tends to be\nthe dominant part, so this only speeds up a big load by about 12% for me,\nbut hey, it can be noticeable. Dirk's example nasty 175MB xml file with\n~5200 dives takes \"only' 7.7 seconds to load, when it used to take 8.8s.\nAnd that's on a fast machine.\n\nFor smaller xml files, the dynamic loading costs etc startup costs tend to\nbe big enough that the xml parsing costs aren't as noticeable.\n\nAside from switching the node names around to \"little endian\" (ie least\nsignificant name first) format to avoid some unnecessary strlen() calls,\nthis makes the nodename generation use a non-locale 'tolower()', and only\ndecodes up to two levels of names (since that's the maximum we ever match\nagainst anyway).\n\nIt also introduces a \"-q\" argument to make startup timing easier. Passing\nin \"-q\" just makes subsurface quit imediately after doing all necessary\nstartup code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive planner sidebar depth units\n\nThe dive planner always showed the depth in our internal units, ie\nmillimeter, in the sidebar that showed the plan points.\n\nThat made little sense in metric mode, and none at all in imperial. The\n_graph_ showed things in meter and feet.\n\nSo make the DivePlannerPointsModel always convert things to and from the\nuser units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> ascii_strtod that actually does what we need\n\nDirk's ascii_strtod was blindly copied from other GPL code and didn't do\nwhat was the main purpose (i.e. ignore the locale and still accept the\nnumbers we have in our data files).\n\nThis implementation does *not* care about INF/NaN, and it does *not* try\nto handle some strange conditions (overflow/underflow), and I do *not*\nguarantee that it doesn't have rounding issues.\n\nThat said, for our native format, we never print odd FP numbers anyway\n(since we use fixed-point integer arithmetic), and while we *do* care\nabout exponents for some of the odder import formats (I remember\nseeing them in jdivelog output), we don't care about the crazy cases.\nSo rather than worry about getting the edge cases right for the max\ndouble exponents (around +-308), it just says \"screw you\" and gives\nyou something close enough.\n\nSo what it *does* try to do is handle the actual parsing right, and\nget the right answer for all the reasonable cases.\n\nWorks-For-Me(tm).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV after dive computer download\n\nThis fixes a crash in the current Qt subsurface code that can happen\nafter downloading dives from a dive computer, and the new dives merge\nwith old dives, causing the old dives to be re-allocated into the\nmerged one.\n\nIn that case, the list widgets don't get fully updated, and contain\nstale pointers to old dives that no longer exists. Doing anything that\nrefreshes the display will hide this problem, and you do need to have\nmultiple dive computers on the same dive to trigger it in the first\nplace, so it's reasonably hard to hit, but very annoying when you do.\n\nThis patch just makes us reload all the dive UI tables, which may be\noverkill. It also doesn't actually fix the fact that we seem to do\n\"process_dives()\" within the context of the downloader thread, which\nlooks like a possible source of races. The \"process_dives()\" should\nalso be moved to the main thread, but needs the preferDownloaded()\ninformation that is part of the download window, so it doesn't fit\nhere. Somebody else (Tomaz?) will hopefully fix that part.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix Uemis Zurich downloads\n\nCommit 48ba01b807cc (\"Enable downloads from the UEMIS Zurich\")\nmistakenly switched the meaning of the \"force_download\" argument when it\nmoved from \"struct argument_block\" to being a direct argument.\n\nThis fixes it right back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Qt: Implement trip merging logic\n\nSo during my Maui trip, I had a short hiatus in diving, causing\nsubsurface to start a new trip for the last day of diving.  I could have\njust started the old gtk branch to fix it up, but decided that I might\nas well try to implement the \"merge trip\" logic in the Qt branch instead.\n\nThis is the end result of that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Show sample pressures in the cylinder equipment page\n\nIf we don't have any manually set pressure data, show the data from the\nsamples instead.  It uses an italic font for this case, mainly because I\ncouldn't figure out how to gray things out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't show '0.0%' gas percentages\n\nIt's just distracting.  Leave it empty.  No helium should be visually\nvery different from actual trimix, and for oxygen, zero means something\ndifferent anyway (it's air).  In neither case is '0.0%' a good string to\nshow, just show it as empty.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the imperial cylinder size calculations in equipment handling\n\nThis makes us use the same linear calculations as we did in the Gtk\nbranch.  We don't take compressibility into account, since tank\nmanufacturers don't seem to either.  A Luxfer AL80 is 11.1 liters, and\nwith the standard (non-compressibility) calculations, 80 cuft of air at\n3000 psi is 11.094 liter, so that is the right model to use.\n\nAlso, stop with the horrible \"units in edited numbers\" stuff.  It uses\nup precious space, and doesn't look any better.  If the user asked for\ncuft, give him cuft without making a big deal about it.\n\nOh, and if the working pressure doesn't exist, sizes are always in\nliters.  That's what we did in the Gtk branch, that's what we do here.\nAgain, no reason to even bother stating units, it's not helping.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> O2/He percentages aren't integral\n\nWe do gas mixes in permille, not in percent.  Some people really like\nusing the value they got from the analyzer, which is generally something\nlike 29.4% or whatever.  So don't truncate percentages to integers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly initialize device_data_t when downloading\n\nThe old gtk branch started out with device_data_t explicitly cleared,\nbut the Qt version never did that.  And we actually depend on the\ndeviceid in particular being initialized to zero (and then we fill in\nthe details in the divecomputer download callbacks)\n\nNot properly initializing it meant that we ended up with random\ndeviceid's that got added to the divecomputer device lists, and then\nsaved to the XML file without actually matching the data in the dive\ncomputers in the actual *dives*.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Partially fix dive downloading\n\nThe Qt branch didn't set the preexisting dive count, so matching old\ndives didn't work and it always downloaded all of them.\n\nAlso, we need to autogroup dives before displaying them if autogrouping\nis on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve the trip header\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Sort 'dive number' column by date, not number\n\nOk, so this sounds insane, but it fixes our currently broken sorting\nof dive trips vs plain dives not in trips.\n\nThe reason for that is simple: the dive trips are sorted by date, but\nthat's column #0, and for plain dives is the dive number.\n\nSo currently the trip-vs-dive sorting looks at the date of the trip,\nand compares that to the number of the dive. Since the date of the\ntrip is expressed as seconds-since-1970-in-UTC, unsurprisingly the\ndive number is generally much smaller (even for some very avid divers\n;), and so the plain dives end up sorting way at the bottom (or at the\ntop, if you do \"oldest trips first\"\n\nSince the dive number *should* sort as the date, this stupid attached\npatch just makes us return the dive date instead.\n\nNow, there are other possible solutions to this:\n\n - make the date of the dive be column 0, and make the dive number be column 1.\n\n   Quite frankly, while more logical for this particular problem, it\nprobably sucks as a solution. We do want to have a column we can sort\ndives by that is date-based, but doesn't include trips. And while the\ndive number *should* sort identically to the date one, the fact is\nthat you can have dives without any numbering, so it doesn't.\n\n   In contrast, all dives have dates, and sorting numbered dives by\ndate should still result in sane behavior (and if it doesn't, then the\ninsanity comes from the dive numbering, and odd sorting is the fault\nof the user and indicative of a problem)\n\n - We could possibly do something magical like sorting dives by number\nwhen they are inside trips, or when no trips exist at all. But then\nwe'd sort by date when there are trips and the dive is outside the\ntrip. But quite frankly, that just sounds insane.\n\nSo on the whole, I don't love this patch, but it seems to be the least\nconfusing of the possibilities.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make a map ctrl-click toggle the selection state\n\nThis way the map selection works like normal selections do.  Except we\ndon't do \"ranged\" selections (shift-click) for fairly obvious reasons.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow ctrl-click to select dives incrementally from the globe view\n\nI guess we should support de-selecting dives this way too, but right now\nthe interfaces only do selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix unused variable warning and spelling\n\nCommit 4b405caa2c47 (\"Clean up divelist dive selection\") made the sort\nmodel variable in headerClicked unused, so get rid of it.  Fix a speling\neror closeby while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up divelist dive selection\n\nSince we have a \"selectDive()\" method, let's just use it rather than\nopencoding it.  Similarly for \"unselectDives()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> First cut at selecting dives from the map\n\nWe'll want to enhance this: better logic for which dives are near the\nselection, and it's probably best to have a \"control-click\" that adds\nthe dives to the selection rather than deselecting all the old ones.\n\nBut it's already useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Merge dive tags when merging dives\n\n.. otherwise the dive tags generally end up cleared when you download a\nduplicate dive from another dive computer.\n\nThis uses MERGE_NONZERO, which means that if one of the dives has tags\nset, we'll prefer those tags.  If both dives have tags set, we take the\ntags from the first (\"preferred\") dive.\n\nWe could do a \"just or all the bits together\" too.  But this way we at\nleast take a set of tags that are consistent (ie we don't get both\n\"boat\" and \"shore\" set unless one of the original dives already had that\ninconsistency)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Scroll to (and re-expand) the selection when sorting and moving\n\nThe keyboard movement wouldn't scroll to the newly changed selection.\nSimilarly, when sorting the dive list, we'd end up losing the currently\nselected dive (and generally collapsing the currently exposed trips).\n\nThis adds the scrolling/exposing logic for those cases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a \"sort role\" for sorting the dive list\n\nBy default, sorting is done by the display role, but then we end up\nsorting by the string we display, which is almost always the wrong thing.\n\nSo this adds a new \"SORT_ROLE\" that is used for sorting, and then the\ndata lookup can return the raw data we want to sort by.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder pressure interpolation\n\nThe pressure interpolation code mostly worked for the simple cases, but\ngot terminally confused for some more complex gas change situations,\nresulting in nonsensical interpolations.\n\nThis simplifies and clarifies the code a bit, and in the process fixes a\nfew special cases where the gas interpolation segments didn't end up\nhaving the end conditions set.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the new get_o2()/get_he() helper functions more widely\n\nThey do the \"02=0 means air\" thing autmatically, and make for less\ntyping.  So use them more widely in places that looked up the o2 and he\npermille values of a gasmix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix get_cylinder_index() gasmix comparisons\n\nget_cylinder_index() looks up which cylinder to use based on the\ngaschange event that describes the mix.  However, it was both buggy and\nnot very good.\n\nIt was buggy because it didn't understand about our air rules, and it\nwas not very good because it required an exact match (after rounding our\npermille-based numbers to percent).\n\nSo fix it to use the right permille values, and look for a closest match\n(using the normal sum-of-squares distance function - although I wonder\nif we should consider helium percentages to be \"more important\" and give\nthem a stronger weight).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging dives, match up the cylinders to each other using gasmix\n\n.. so that different computers that have different ordering of the same\ncylinders will see the end result the same way.\n\nThis also fixes up the sample sensor index and generates special initial\ntank change events for the dive computers that had their cylinder\nindexes renamed on them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Warn about commas in floating point values\n\nLocalization could be causing floating point numbers to have a comma\ninstead of a decimal point (in a file format that is really stupid).\nIf we detect this we replace the comma with a decimal point instead, and\ntry to re-parse the number, and see if we get further.\n\nThe downside of that is that we're changing the buffer we get passed in.\nNobody cares, but still, it's kind of ugly. It's simple, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix saving of po2 values\n\nIt was very broken, although it just happened to work for the values\ndirk had in his own XML file (0 and 0.800 bar).  Because of confusion\nwith number of digits it would save 1.080 bar as 1.80 bar.\n\nUse our \"show_milli()\" helper for showing things that are in milli-units\n(which is what we tend to use for most of our values: mK, mbar, mm, ml)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Ensure all strings stored in XML are escaped correctly\n\nThis does escaping / quoting for everything I found. Some of it was safe\n(the divecomputer model is supplied from libdivecomputer, and none of them\nhave single quotes _yet_, afaik), but with this there are no '%s' strings\nleft except for the ones used by the helper functions (for \"pre\" and\n\"post\" strings).\n\nIt also takes some of our existing uses of show_utf8(), and removes\nthe redundant \"check if the string is NULL or empty\". show_utf8() does\nthat internally.\n\nFixes #73\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Take incompressibility of gas into account at higher pressures\n\nThis creates a helper function called \"gas_volume()\" that takes the\ncylinder and a particular pressure, and returns the estimated volume of\nthe gas at surface pressure, including proper approximation of the\nincompressibility of gas.\n\nIt very much is an approximation, but it's closer to reality than\nassuming a pure ideal gas.  See for example compressibility at\n\n    http://en.wikipedia.org/wiki/Compressibility_factor\n\nSuggested-by: Jukka Lind <jukka.lind@iki.fi>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder air size calculations\n\nCommit 90d3c5614a9c (\"Centralising and redefining values as integers\")\nbroke SAC-rate calculations. In particular, it changed \"to_ATM()\": to\nuse the centralized SURFACE_PRESSURE helper define, but in the process\nit changed a floating point calculation to an integer calculation, and\nit threw away all the fractional details. Any user of \"to_ATM()\"\nbasically dropped to an accuracy of a single atmosphere.\n\nThe good news is that we didn't use to_ATM() for things like depth\ncalculations, but only for cylinder pressures. As a result, the error\nends up being relatively small, since the pressures involved are big,\nand thus the error of rounding to whole atmospheres is usually in the\n1% range. The cylinder sizing tends to be off by more than that\nanyway. But it was wrong, and not intentional.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the improved duration and average depth for everything\n\nThe code was written to get the SAC rate correct, but we probably do\nwant to have the duration and mean depth of the dive always be shown for\nthe non-surface-time.\n\nSo move the code from the sac-rate calculation to the generic dive fixup\npart.  This makes the dive list and statistics all show the duration as\nthe under-water duration, which is not necessarily the same as\n\"difference between beginning and end of dive\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SAC calculations for dives without any samples\n\nWe computed a made-up average depth based on the maximum depth, and used\nthat.  That's questionable even if we didn't have any explicit average\ndepth to begin with, but it's particularly wrong if we did have an\nexplicit average depth to use.\n\nNow, admittedly we have no way to actually create fake dives like this\nwith a particular average depth, so this really doesn't make any\ndifference in real life.  But we should do this right.\n\nAlso, make the XML be in the format that subsurface actually saves\nthings in (mainly things like cylinder sizes having an extra decimal\nplace, but also ordering of XML elements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Correctly calculate SAC rate in the presense of surface events\n\nThis assumes that you are not breathing your cylinders while at the\nsurface, which may or may not be correct, but is usually the right\nthing.  Regardless, we're better off giving a conservative (higher) SAC\nrate estimate for a diver that breathes his cylinder at the surface too\nthan giving an artificially low one because the diver ended up using his\nsnorkel and we didn't take that into account.\n\nNOTE! This basically calculates a better duration and average depth than\nthe ones we end up showing in the dive list.  Maybe we should actually\nshow this \"no-surface-time\" duration and average depth instead of the\nones we do show?\n\nThat's a separate question, though.\n\nAdded a test-case for the surface case to the sac-test.xml dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix up SAC calculations for ATM/bar confusion\n\nWe even documented that we did SAC in bar*l/min, but the \"S\" in SAC\nstands for \"Surface\".  So we should normalize SAC rate to surface\npressure, not one bar.\n\nIt's a tiny 1% difference, and doesn't actually matter in practice, but\nit's noticeable when you want to explicitly test for SAC-rate by\ncreating a test-dive that averages exactly 10m.  Suddenly you don't get\nthe round numbers you expect.\n\n[ Side note: 10m is not _exactly_ one extra atmosphere according to our\n  calculations, but it's darn close in sea water: the standard salinity\n  of 1.03 kg/l together with the standard acceleration of 9.81m/s^2\n  gives an additional pressure of 1.01 bar, which is within a fraction\n  of a percent of one ATM.\n\n  Of course, divers have likely chosen that value exactly for the math\n  to come out that way, since the true average salinity of seawater is\n  actually slightly lower ]\n\nSo here's a few test-dives, along with the SAC rate fixup to make them\nlook right.\n\n(There's also a one-liner to dive.c that makes the duration come out\nright if the last sample has a non-zero depth, and the previous sample\ndid not: one of my original test-dives did the \"average 10m depth\" by\nstarting at 0 and ending at 20m, and dive.c got a tiny bit confused\nabout that ;)\n\n[ The rationale for me testing our SAC rate calculations in the first\n  place was that on snorkkeli.net user \"Poltsi\" reported that our SAC rate\n  calculations differ from the ones that Suunto DM4 reports. So I wanted\n  to verify that we did things right.\n\n  Note that Poltsi reported differences larger than the difference of\n  BAR/ATM, so this is not the cause. I'll continue to look at this. ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out the UDDF xml parsing a bit more\n\nCommit 28aba5a2062c (\"Flesh out the UDDF xml parsing a bit more\")\nimproved on parsing UDDF files by teaching \"percent()\" to also handle\npure fractions like UDDF uses. So in a UDDF file, an o2 value of \"1.0\"\nmeans \"100%\".\n\nBut it turns out that I have a few dives with \"1% He\", and the \"Turn\nfractions into percent\" logic also turns that into 100%.\n\nSo this makes the 'percent()' function a bit smarter. If it actually\nfinds a percentage-sign after the number, it knows it is already\npercent, not a fraction. That disambiguates the two cases: \"1.0\" is\n100%, but \"1.0%\" (note the explicit percentage sign) is 1%.\n\nSo now our native format cannot get confused, because it generally\ntries to avoid naked numbers. Good choice.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out the UDDF xml parsing a bit more\n\nThis uses the example UDDF file from Jan Schubert's Heinrichs Weikamp\nDR5 dives, and now parses the dive dates, the cylinder mixes and the gas\nswitch events correctly (or at least partially).\n\nIt's not perfect: the gas mix has an \"id\" field that we ignore, and\ninstead we just depend on the cylinders being in order (which they seem\nto be).  And I have rather limited test-cases, so maybe something else\nis messed up too.  But for the six example dives I have, this gives\nreasonable data.\n\nTest-data-by: Jan Schubert <Jan.Schubert@gmx.li>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix divide-by-zero bug in statistics.c\n\nGET_LOCAL_SAC did not check if the two entries had different time stamps\nand could therefore cause a divide-by-zero. x86 doesn't fault on that -\nit's still wrong. This now calls a function that does proper checking of\nall the values involved in the calculation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Obviate the need for explicit 'remember_tree_state/restore_tree_state' calls\n\nInstead, just keep track of the expanded state of trips as we get the\ngtk callbacks for the state changes (which we need to track anyway for\nthe selection logic), and automatically restore the state whenever we\nre-create the divelist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remember pre-existing trip expansion state when autogrouping\n\nThis just adds the \"remember_tree_state()\" and \"restore_tree_state()\"\ncalls around the divelist update when autogrouping is turned on: that\nway existing expanded groups aren't blindly collapsed.\n\nIt makes it much easier to see what autogrouping does if it only groups\na few dives, because the overall state of the divelist isn't radically\nchanged.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remember non-expanded state in 'remember_tree_state()' too\n\nThe 'remember_tree_state()' thing is meant to remember if a dive trip is\nexpanded or not, but it missed the \"or not\" part.  IOW, it never cleared\nthe expanded flag, it only ever set it.\n\nAs a result, if you were doing multiple operations on the divelist tree\n(testing all the recent gtk-model removal, for example) the dive trips\nwould end up expanding more and more, even if you collapsed things by\nhand in between operations.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite \"merge_dive_into_trip_above()\" using our own data structures\n\nThis does the moving of dives into the trip above without the complexity\nof the gtk data structures, and instead just recreates the whole\ndivelist afterwards.  As usual, this simplifies things a lot, and the\nless gtk-specific code we have, the better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"insert_trip_before\" using the gtk data structures\n\n.. use our own data structures instead, and regenerate the gtk ones\nafter having successfully created the new trip.\n\nThis simplifies the code enormously, and also makes it much more\ngeneric.  You can now create a new trip from any arbitrary set of\nselected dives (it used to be that the \"multiple selected dives\" case\nworked, but only for some very specific special cases of selected dives).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix find_trip_by_idx() over-zealous cleanup\n\nCommit bcf1f8c4feb9 (\"Don't do \"remove_from_trip\" by walking the gtk\ndata structures\") made find_trip_by_idx() only work for negative indexes\n(positive indexes are dives), but when it removed the unnecessary test\nfor negativity, the statement inside it should have been kept as\nunconditional, rather than removed with the test.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"remove_from_trip\" by walking the gtk data structures\n\nThey are complicated and confusing.  Just use our own data structures\nand re-generate the gtk ones from them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"remove_trip()\" by walking the gtk data structures\n\nThey are complicated and confusing.  Just use our own data structures\nand re-generate the gtk ones from them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the divetrip index to look up divelist trip entries\n\nWe used to look up dive trips by their date, but these days we always\ncreate a dynamic index for a dive trip when we insert it into the\ndivelist model, so we can use that to unambiguously match up dive trips\nwith the dive model entries.\n\nThat means that we don't get confused if we have two trips with the\nexact same time, which happens when you load all the test-dives, for\nexample.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When only a dive trip is selected, select all the dives in the trip\n\nThis does a final pass after all the selection logic, and notices if we\nhave dive trips that are selected, but that have no dives in them\nselected.  In that case, we assume that the user wanted to select all\ndives in that trip.\n\nNOTE! This still allows a range selection that selects the dive trip\nentry and a few dives under the trip.  If a trip has any dives selected\nin it, we leave that manual selection alone.  So this new logic really\nonly triggers on the case where somebody selected *just* the trip.\n\nNote: unselecting the trip still leaves the dives under it selected,\nbecause having a dive trip that isn't selected have all the dives under\nit be selected is normal, and we can't recognize that as some kind of\nspecial event.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix ordering issue in fixup\n\nWe have this oddity in \"fixup_dive()\" that we fix up the dive water\ntemperates and durations by looking over all the dive computer data.\n\nBut we actually call that *before* we've fixed-up the dive computer data.\nSo the water temperature is there in the samples, but hasn't made it to\nthe generic dive computer water temperature yet, so then it doesn't make\nit into the dive structure either.\n\nUntil the *second* time, when we have load the (partially fixed-up) data.\n\nAcked-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get the SHA1 routines from git instead of openssl\n\n..they are of a higher quality anyway, and this way we have one less\nlibrary to worry about.  And this way there is nobody who can claim that\nopenssl is not a system library and thus not compatible with the GPL.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve the code handling air temperature\n\nBetter helper functions make for easier to understand code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix saving of changed GPS entry\n\nWe can't use gps_changed() in the gps_map_callback function, because that\nwill actually change the GPS data in the dive being edited, which in turn\nwill then cause us to later (when we *really* want to change it) not match\nthe master dive data any more, and think we shouldn't edit the dive at\nall.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix rounding of GPS coordinates\n\nThe whole \"+ 0.5\" to round to integers only works for positive values,\nand GPS coordinates are signed.\n\nSo use the proper \"round to int\" function (rint()), which does this correctly.\n\nAlso, remove the redundant check against the master gps values: we\nalready checked that if we do have a master dive, the gps values must\nmatch the currently edited dive, so comparing against the master is\nentirely redundant.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix up Swedish translation for recent po changes\n\nMinimal fixups just to make things happier. Fredrik will hopefully\ndouble-check and fix this up further, but at least we have *some* string\nfor the planning warning etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Walk over each divecomputer entry in fixup_dives()\n\nThe fixup_dives() code used to only look at the first divecomputer,\nwhich meant that minimun temperatures etc for the dive would only ever\ncome from the primary divecomputer.\n\nThis splits up the code that walks over the divecomputer into a function\nof its own, and iterates over all computers in fixup_dive() calling into\nit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do more dive fixup for each dive computer\n\nIn commit b6c9301e5847 (\"Move more dive computer filled data to the\ndivecomputer structure\") we moved the fields that get filled in by the\ndive computers to be per-divecomputer data structures.\n\nThis patch re-creates some of those fields back in the \"struct dive\",\nbut now the fields are initialized to be a reasonable average from the\ndive computer data.  We already did some of this for the temperature\nmin/max fields for the statistics, so this just continues that trend.\n\nThe goal is to make it easy to look at \"dive values\" without having to\niterate over dive computers every time you do.  Just do it once in\n\"fixup_dive()\" instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify/clarify the get_surface_pressure_in_mbar() function\n\nInstead of maintaining a rolling average and re-calculating it at each\nstage, just calculate the surface_pressure average the natural way: as\nthe sum divided by the number of entries.\n\nThis results in a single rounding, rather than doing rounding multiple\ntimes and possibly rounding wrong as a result.\n\nNot that we care all that deeply about the LSB of the mbar value, but\nthe code is simpler and more obvious this way too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove the tissue_tolerated_ambient_pressure[] array\n\nIt wasn't really used.  The only reader of that array was the same thing\nthat wrote the entry, so instead of storing it in the array (and never\nusing it ever after), just use the calculation directly, and remove the\narray entirely.\n\nThis makes it much easier to see that the gradient factors are not used\nfor any long-term state.  We use them only for the pressure tolerance\ncalculations at that particular point, and there is no \"history\"\nassociated with it.\n\nThis matters mainly because it means that we can do all the deco\ninitialization and setup without worrying about exactly which gradient\nfactors we will use.  And we can use different gradient factors for\ndiving and planning and no-fly calculations without the GF choice\naffecting the tissue state.\n\nAcked-by: Robert C. Helling <helling@lmu.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> The 'gasmix' argument to add_segment() is read-only\n\nWe'll want to use a 'static const' gasmix for the upcoming no-fly-time\ncode, so prepare for it by just marking the read-only gasmix argument as\n'const'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly de-select dives in collapsed trips that are unselected\n\nWe had the logic for the \"select\" case, but not for the \"deselect\" case. Ugh.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update \"Swedish\" translation\n\nThis is only slightly better than \"Bork bork bork\".  I've never done any\ndiving in Swedish.  It's probably hilarious, but should be mostly\nunderstandable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't re-use the dive computer model string for all downloaded dives\n\nWhen we download dives with libdivecomputer, we create this strdup'ed\nname of the model information, but we then re-use that (single) strdup\nallocation for every dive we download.  This works fine *until* you\nstart freeing those dives (possibly directly after the download because\nthey are redundant), at which point things go to hell in a handbasket,\nsince there is just the one allocation for all the different dives.\n\nFix by just doing another strdup() at the point where we assign the\nmodel information to the dive computer.\n\nReported-by: Marc Merlin <marc@merlins.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive computer interleaving so it works again\n\nMerging two different dives by interleaving dive computer data got\nbroken by the multi-dive-computer code in commit b6c9301e5847 (\"Move\nmore dive computer filled data to the divecomputer structure\") which\nadded a lot more entries to the dive computer data structure, and then\ncopied the resulting structure incorrectly.\n\nMake sure we don't copy the events and samples allocations when we copy\nall the other fields of the divecomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get rid of dive->{start,end}\n\nWe had this special logic to not show the end of a dive when a dive\ncomputer shows a series of very shallow samples (basically snorkeling\nback to shore after the dive ended).  However, that logic ended up being\nglobal per dive, which is very annoying when you have two or more dive\ncomputers, and it decides to cut off the second one because the first\none surfaces.\n\nSo get rid of this per-dive state, and just use the plot-info 'maxtime'\nfield for this (we never used the 'start' case anyway).  That way we\nwill properly cut off boring surface entries only when they are past the\nend of the interesting entries of *all* dive computers, and we won't be\ncutting things short.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Sort the devices when adding them to the device list\n\nThis doesn't change any real semantics, but it means that we will write\nout the device computer information in a well-defined order, rather than\nin some random order (before this: reverse order of reading them in).\n\nHaving the XML file be as stable as possible is important so that *real*\nchanges stand out when you make changes to your dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix air temperature for multi-dive editing\n\nThe air temperature editing was broken when you edited multiple dives at\nonce: even if you didn't actually change the air temperature, all dives\nwould be reset to that particular temperature.\n\nThe logic for editing dives is that we have a 'master' dive (which is\nthe dive that all the entries get filled in from), and only if the\nentries have changed from what the master dive information was (ie the\nuser actually edited it) do we change that particular piece of\ninformation.\n\nAnd we only change it for dives that match the master dive for that\nentry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add default GPS location for dive sites we already know about\n\nWhen editing a new dive, and using a dive site name that we have\nalready seen previously, and have GPS information for, pick up that\nGPS information from the previous dive by default.\n\nNOTE! When editing dive site locations for dives that already have GPS\ninformation, or when we've modified the GPS information explicitly\nsome way while editing the dive (either through map input or by\nediting the text field directly) we do *not* use this automatic logic.\n\nSo if you messed up the GPS information some way and want to\nre-populate it with the automatic mode, you need to explicitly clear\nthe GPS text-field, at which point we go back to \"ok, let's try to\npick up automatic GPS data from previous dives with the same name\"\nmode.\n\nAlso note that we do the automatic location lookup only when actually\nediting the location field. So if you already wrote the dive site\nname, then cleared the GPS field, you now need to go back to the dive\nsite name and edit it again to get the automatic GPS filling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When switching sort order, scroll the dive list to the current dive\n\nNow that we actually seem to understand the whole notion of setting the\nactive dive, let's take that code a bit further, and always scroll to it\nwhen we're introducing a new sort ordering.\n\nSure, there may be other selected dives, but we have one primary\n(current) dive that we show the profile and dive data for, and when we\nswitch sort order we probably want to see that dive in the dive list.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the dive selection logic also set the treeview cursor\n\nThis fixes \"enter\" after moving around with the cursor keys.\n\nHinted-at-by: Carl Worth <cworth@cworth.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Auto-generate C file dependencies, and make the build more quiet\n\nThis does some rough auto-generation of header file dependencies for all\nthe *.c files, rather than our file-by-file incomplete hardcoded ones.\n\nIt also stops showing the whole compile line, because it's ugly and\ndistracting.  Instead it just shows \"CC file.c\".  If you care about the\nfull thing, you still see them with \"make -n\".\n\nOnly tested on Linux.  It probably is missing some Windows or\nOSX-specific header includes.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add the begin/end markers to events with the proper flags\n\nWhen we create the event names, the name itself does not include the\ninformation about whether the event is the beginning or end of some\nstate, so we end up having things like events named \"deco\" and then in\nthe event flags it says whether this is the *beginning* of deco, or the\nend.\n\nAnd when we show the event, we only used to show the name.  This patch\nmakes us show whether it's the begin or end event for events that have\nthose flags.  So now you see \"deco begin\" and \"deco end\" instead of just\ntwo events both called \"deco\".\n\nIt would perhaps be nice if we somehow showed the range between the\nevents too, and paired them up visually some way, but that's a separate\nand much more difficult thing to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'get_dive_by_diveid()' work even for non-primary dive computers\n\nIt's only used by the Uemis importer, and Dirk always seems to import\nhis Uemis data first, so it wasn't very noticeable.  But if the Uemis\ndata wasn't the first dive computer, it would not find the dive.\n\nSide note: just comparing deviceid is not correct.  We should pass in\nthe device model too.  But again, that will realistically never really\nmatter, since non-Uemis importers will generate complex SHA1 hashes of\nthe dive data for the dive ID, so a collision with the Uemis numbers is\nvery unlikely.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly destroy the cairo context when we're done with it\n\nHenrik reports that on OSX, not destroying the cairo context results in\na corrupted profile display.  It seems to just leak memory on Linux.\n\nFor gtk3, the cairo context is embedded in the GtkDrawable, for gtk2 we\nneed to create and destroy it appropriately.  Although maybe we could\njust make it static instead of creating/destroying it all the time.\n\nAnyway, this goes back to the old cairo destroy logic for gtk2.\n\nReported-and-analyzed-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't deselect all dives on all selection \"change\" events\n\ngtk sends the selection change events all the time, for pretty much any\n\"divelist changed - so selection changed\".  The expansion of a trip, the\nswitch to a new model, yadda yadda.  But we actually want selections to\nbe sticky across these events, so we can't just forget all of our old\nselection state and repopulate it.\n\nSo we re-introduce the \"am I allowed to change this row\" callback, which\nwe used to use to create a list of every actual selection that was\nchanged.  But instead of remembering the list (and having the stale\nentries issue with that remembered list that caused problems), we now\njust use that as a \"that *particular* selection cleared\" event.\n\nSo this callback works as the \"which part of the visible, currently\nselected state got cleared\" notifier, and handles unselection.\n\nThen, when the selection is over, we use the new model of \"let's just\ntraverse the list of things gtk thinks are selected\" and use that to\nhandle new selections in the visible state that gtk actually tracks\nwell.  So that logic handles the new selections.\n\nThis way, dives that aren't visible to gtk don't ever get modified: gtk\nwon't ask about them being selected or not, and gtk won't track them in\nits selection logic, so with this model their state never changes for\nus.\n\ngtk selections are annoying.  They are simple for the case gtk knows\nabout (ie they are *visually* selected in the GUI), but since we very\nmuch want to track selection across events that change the visual state,\nwe need to have this insane \"impedance match\".\n\nReported-by: Dirk Hohdnel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cursor up/down logic\n\nThe dive selection rewrite didn't set the selected dive index, breaking\nthe cursor key logic.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite gtk dive selection tracking logic\n\nWe used to generate a list of possibly changed selections using the gtk\ntree selection \"selection function\".\n\nBut that's actually meant to just tell gtk whether an entry can be\nselected or not, and our list of possibly changed entries ended up being\nstale if the selection change was due to a list entry removal, for\nexample.\n\nSo rip out the old model entirely, and instead just walk the whole\nselection that gtk gives us on a selection \"change\" event.  We throw all\nour old selections away when this happens, and just rebuild it all.\n\nThis should fix the occasional internal gtklib-quartz assertion that\nHenrik is seeing.  And it actually simplifies the code too.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse-xml: allow XML nodes with empty tag names\n\nThey happen for CDATA content, where libxml2 turns the CDATA fields into\na child of the parent entry, but without a name.\n\nNow, of course, any sane person would just want to use the CDATA as the\nstring value of the parent itself, but libxml2 probably does this\ninsanity for a reason.  And the reason is probably that some misguided\npeople want to *write* XML using libxml2, and then the stupid child node\nactually acts as a \"now I want you to write this data as CDATA\".\n\nWhatever the reason, let's just ignore it.  We will just traverse such a\nnameless child and be happy, and we'll give the nameless child the name\nof the parent.  Our XML node matching logic will then never see this\ninsane nameless child at all, and doesn't have to care.\n\nOur whole XML parsing rule-of-thumb is to take the whole \"be strict in\nwhat you output, but generous in what you accept\" to its logical\nconclusion.  Because we will literally accept almost anything, in any\nformat.  You can mix tags or attributes wildly, and youc an use CDATA or\nnot as you see fit.  We just don't care.\n\nWe're the honeybadger of the divelog world.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> xml-parsing: accept 'sitelat' and 'sitelon' for GPS coordinates\n\nAre they ugly and insane tags? Yes.  Are they used? Bingo.  MacDive uses\nthis lovely format for specifying dive site location.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be even more permissive in our date parsing logic\n\nNot that we aren't already insanely permissive in parsing just about any\nrandom noise that could _possibly_ be construed as xml and turn it into\na dive, this makes us even laxer.\n\nIf somebody wants to have a <date> tag with both date and time, why the\nheck not? It's fine.  And if it has just the date, that's fine too.  And\nthe date can be in any of several formats.  We really don't care, the\nmore permissive, the better.\n\nWe strive to always write beautiful xml, but let's face it, not\neverybody else does.  If we can turn random line noise into a dive, we\nshould do so.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prepare to compile with gtk-3\n\nTo actually compile with gtk-3 you currently need to disable the use of\nOSM (compatible with gtk2 only for now).  And obviously figure out the\nheaders and libraries by using pkg-config on gtk-3 instead of gtk-2.\nBut now it should be only a Makefile change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up gtk combo box handling\n\nThis cleans up our handling of combo boxes and all the duplicated\ncompletion logic, and simplifies the code.\n\nIn particular, we get rid of the deprecated GtkComboBoxEntry.  While it\nmade some things easier, it made other things harder.  Just using\nGtkComboBox and setting that up correctly ends up being simpler, and\nalso makes the logic work with gtk-3.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Let's call them GTKCFLAGS, not GTK2CFLAGS\n\nMaybe they will be for GTK3 some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> O2/He percentages aren't integral\n\nWe do gas mixes in permille, not in percent.  Some people really like\nusing the value they got from the analyzer, which is generally something\nlike 29.4% or whatever.  So don't truncate percentages to integers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly initialize device_data_t when downloading\n\nThe old gtk branch started out with device_data_t explicitly cleared,\nbut the Qt version never did that.  And we actually depend on the\ndeviceid in particular being initialized to zero (and then we fill in\nthe details in the divecomputer download callbacks)\n\nNot properly initializing it meant that we ended up with random\ndeviceid's that got added to the divecomputer device lists, and then\nsaved to the XML file without actually matching the data in the dive\ncomputers in the actual *dives*.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Partially fix dive downloading\n\nThe Qt branch didn't set the preexisting dive count, so matching old\ndives didn't work and it always downloaded all of them.\n\nAlso, we need to autogroup dives before displaying them if autogrouping\nis on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve the trip header\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Sort 'dive number' column by date, not number\n\nOk, so this sounds insane, but it fixes our currently broken sorting\nof dive trips vs plain dives not in trips.\n\nThe reason for that is simple: the dive trips are sorted by date, but\nthat's column #0, and for plain dives is the dive number.\n\nSo currently the trip-vs-dive sorting looks at the date of the trip,\nand compares that to the number of the dive. Since the date of the\ntrip is expressed as seconds-since-1970-in-UTC, unsurprisingly the\ndive number is generally much smaller (even for some very avid divers\n;), and so the plain dives end up sorting way at the bottom (or at the\ntop, if you do \"oldest trips first\"\n\nSince the dive number *should* sort as the date, this stupid attached\npatch just makes us return the dive date instead.\n\nNow, there are other possible solutions to this:\n\n - make the date of the dive be column 0, and make the dive number be column 1.\n\n   Quite frankly, while more logical for this particular problem, it\nprobably sucks as a solution. We do want to have a column we can sort\ndives by that is date-based, but doesn't include trips. And while the\ndive number *should* sort identically to the date one, the fact is\nthat you can have dives without any numbering, so it doesn't.\n\n   In contrast, all dives have dates, and sorting numbered dives by\ndate should still result in sane behavior (and if it doesn't, then the\ninsanity comes from the dive numbering, and odd sorting is the fault\nof the user and indicative of a problem)\n\n - We could possibly do something magical like sorting dives by number\nwhen they are inside trips, or when no trips exist at all. But then\nwe'd sort by date when there are trips and the dive is outside the\ntrip. But quite frankly, that just sounds insane.\n\nSo on the whole, I don't love this patch, but it seems to be the least\nconfusing of the possibilities.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make a map ctrl-click toggle the selection state\n\nThis way the map selection works like normal selections do.  Except we\ndon't do \"ranged\" selections (shift-click) for fairly obvious reasons.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow ctrl-click to select dives incrementally from the globe view\n\nI guess we should support de-selecting dives this way too, but right now\nthe interfaces only do selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix unused variable warning and spelling\n\nCommit 4b405caa2c47 (\"Clean up divelist dive selection\") made the sort\nmodel variable in headerClicked unused, so get rid of it.  Fix a speling\neror closeby while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up divelist dive selection\n\nSince we have a \"selectDive()\" method, let's just use it rather than\nopencoding it.  Similarly for \"unselectDives()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> First cut at selecting dives from the map\n\nWe'll want to enhance this: better logic for which dives are near the\nselection, and it's probably best to have a \"control-click\" that adds\nthe dives to the selection rather than deselecting all the old ones.\n\nBut it's already useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Merge dive tags when merging dives\n\n.. otherwise the dive tags generally end up cleared when you download a\nduplicate dive from another dive computer.\n\nThis uses MERGE_NONZERO, which means that if one of the dives has tags\nset, we'll prefer those tags.  If both dives have tags set, we take the\ntags from the first (\"preferred\") dive.\n\nWe could do a \"just or all the bits together\" too.  But this way we at\nleast take a set of tags that are consistent (ie we don't get both\n\"boat\" and \"shore\" set unless one of the original dives already had that\ninconsistency)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Scroll to (and re-expand) the selection when sorting and moving\n\nThe keyboard movement wouldn't scroll to the newly changed selection.\nSimilarly, when sorting the dive list, we'd end up losing the currently\nselected dive (and generally collapsing the currently exposed trips).\n\nThis adds the scrolling/exposing logic for those cases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a \"sort role\" for sorting the dive list\n\nBy default, sorting is done by the display role, but then we end up\nsorting by the string we display, which is almost always the wrong thing.\n\nSo this adds a new \"SORT_ROLE\" that is used for sorting, and then the\ndata lookup can return the raw data we want to sort by.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder pressure interpolation\n\nThe pressure interpolation code mostly worked for the simple cases, but\ngot terminally confused for some more complex gas change situations,\nresulting in nonsensical interpolations.\n\nThis simplifies and clarifies the code a bit, and in the process fixes a\nfew special cases where the gas interpolation segments didn't end up\nhaving the end conditions set.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the new get_o2()/get_he() helper functions more widely\n\nThey do the \"02=0 means air\" thing autmatically, and make for less\ntyping.  So use them more widely in places that looked up the o2 and he\npermille values of a gasmix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix get_cylinder_index() gasmix comparisons\n\nget_cylinder_index() looks up which cylinder to use based on the\ngaschange event that describes the mix.  However, it was both buggy and\nnot very good.\n\nIt was buggy because it didn't understand about our air rules, and it\nwas not very good because it required an exact match (after rounding our\npermille-based numbers to percent).\n\nSo fix it to use the right permille values, and look for a closest match\n(using the normal sum-of-squares distance function - although I wonder\nif we should consider helium percentages to be \"more important\" and give\nthem a stronger weight).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging dives, match up the cylinders to each other using gasmix\n\n.. so that different computers that have different ordering of the same\ncylinders will see the end result the same way.\n\nThis also fixes up the sample sensor index and generates special initial\ntank change events for the dive computers that had their cylinder\nindexes renamed on them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Warn about commas in floating point values\n\nLocalization could be causing floating point numbers to have a comma\ninstead of a decimal point (in a file format that is really stupid).\nIf we detect this we replace the comma with a decimal point instead, and\ntry to re-parse the number, and see if we get further.\n\nThe downside of that is that we're changing the buffer we get passed in.\nNobody cares, but still, it's kind of ugly. It's simple, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix saving of po2 values\n\nIt was very broken, although it just happened to work for the values\ndirk had in his own XML file (0 and 0.800 bar).  Because of confusion\nwith number of digits it would save 1.080 bar as 1.80 bar.\n\nUse our \"show_milli()\" helper for showing things that are in milli-units\n(which is what we tend to use for most of our values: mK, mbar, mm, ml)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Ensure all strings stored in XML are escaped correctly\n\nThis does escaping / quoting for everything I found. Some of it was safe\n(the divecomputer model is supplied from libdivecomputer, and none of them\nhave single quotes _yet_, afaik), but with this there are no '%s' strings\nleft except for the ones used by the helper functions (for \"pre\" and\n\"post\" strings).\n\nIt also takes some of our existing uses of show_utf8(), and removes\nthe redundant \"check if the string is NULL or empty\". show_utf8() does\nthat internally.\n\nFixes #73\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Take incompressibility of gas into account at higher pressures\n\nThis creates a helper function called \"gas_volume()\" that takes the\ncylinder and a particular pressure, and returns the estimated volume of\nthe gas at surface pressure, including proper approximation of the\nincompressibility of gas.\n\nIt very much is an approximation, but it's closer to reality than\nassuming a pure ideal gas.  See for example compressibility at\n\n    http://en.wikipedia.org/wiki/Compressibility_factor\n\nSuggested-by: Jukka Lind <jukka.lind@iki.fi>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder air size calculations\n\nCommit 90d3c5614a9c (\"Centralising and redefining values as integers\")\nbroke SAC-rate calculations. In particular, it changed \"to_ATM()\": to\nuse the centralized SURFACE_PRESSURE helper define, but in the process\nit changed a floating point calculation to an integer calculation, and\nit threw away all the fractional details. Any user of \"to_ATM()\"\nbasically dropped to an accuracy of a single atmosphere.\n\nThe good news is that we didn't use to_ATM() for things like depth\ncalculations, but only for cylinder pressures. As a result, the error\nends up being relatively small, since the pressures involved are big,\nand thus the error of rounding to whole atmospheres is usually in the\n1% range. The cylinder sizing tends to be off by more than that\nanyway. But it was wrong, and not intentional.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the improved duration and average depth for everything\n\nThe code was written to get the SAC rate correct, but we probably do\nwant to have the duration and mean depth of the dive always be shown for\nthe non-surface-time.\n\nSo move the code from the sac-rate calculation to the generic dive fixup\npart.  This makes the dive list and statistics all show the duration as\nthe under-water duration, which is not necessarily the same as\n\"difference between beginning and end of dive\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SAC calculations for dives without any samples\n\nWe computed a made-up average depth based on the maximum depth, and used\nthat.  That's questionable even if we didn't have any explicit average\ndepth to begin with, but it's particularly wrong if we did have an\nexplicit average depth to use.\n\nNow, admittedly we have no way to actually create fake dives like this\nwith a particular average depth, so this really doesn't make any\ndifference in real life.  But we should do this right.\n\nAlso, make the XML be in the format that subsurface actually saves\nthings in (mainly things like cylinder sizes having an extra decimal\nplace, but also ordering of XML elements).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Correctly calculate SAC rate in the presense of surface events\n\nThis assumes that you are not breathing your cylinders while at the\nsurface, which may or may not be correct, but is usually the right\nthing.  Regardless, we're better off giving a conservative (higher) SAC\nrate estimate for a diver that breathes his cylinder at the surface too\nthan giving an artificially low one because the diver ended up using his\nsnorkel and we didn't take that into account.\n\nNOTE! This basically calculates a better duration and average depth than\nthe ones we end up showing in the dive list.  Maybe we should actually\nshow this \"no-surface-time\" duration and average depth instead of the\nones we do show?\n\nThat's a separate question, though.\n\nAdded a test-case for the surface case to the sac-test.xml dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix up SAC calculations for ATM/bar confusion\n\nWe even documented that we did SAC in bar*l/min, but the \"S\" in SAC\nstands for \"Surface\".  So we should normalize SAC rate to surface\npressure, not one bar.\n\nIt's a tiny 1% difference, and doesn't actually matter in practice, but\nit's noticeable when you want to explicitly test for SAC-rate by\ncreating a test-dive that averages exactly 10m.  Suddenly you don't get\nthe round numbers you expect.\n\n[ Side note: 10m is not _exactly_ one extra atmosphere according to our\n  calculations, but it's darn close in sea water: the standard salinity\n  of 1.03 kg/l together with the standard acceleration of 9.81m/s^2\n  gives an additional pressure of 1.01 bar, which is within a fraction\n  of a percent of one ATM.\n\n  Of course, divers have likely chosen that value exactly for the math\n  to come out that way, since the true average salinity of seawater is\n  actually slightly lower ]\n\nSo here's a few test-dives, along with the SAC rate fixup to make them\nlook right.\n\n(There's also a one-liner to dive.c that makes the duration come out\nright if the last sample has a non-zero depth, and the previous sample\ndid not: one of my original test-dives did the \"average 10m depth\" by\nstarting at 0 and ending at 20m, and dive.c got a tiny bit confused\nabout that ;)\n\n[ The rationale for me testing our SAC rate calculations in the first\n  place was that on snorkkeli.net user \"Poltsi\" reported that our SAC rate\n  calculations differ from the ones that Suunto DM4 reports. So I wanted\n  to verify that we did things right.\n\n  Note that Poltsi reported differences larger than the difference of\n  BAR/ATM, so this is not the cause. I'll continue to look at this. ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out the UDDF xml parsing a bit more\n\nCommit 28aba5a2062c (\"Flesh out the UDDF xml parsing a bit more\")\nimproved on parsing UDDF files by teaching \"percent()\" to also handle\npure fractions like UDDF uses. So in a UDDF file, an o2 value of \"1.0\"\nmeans \"100%\".\n\nBut it turns out that I have a few dives with \"1% He\", and the \"Turn\nfractions into percent\" logic also turns that into 100%.\n\nSo this makes the 'percent()' function a bit smarter. If it actually\nfinds a percentage-sign after the number, it knows it is already\npercent, not a fraction. That disambiguates the two cases: \"1.0\" is\n100%, but \"1.0%\" (note the explicit percentage sign) is 1%.\n\nSo now our native format cannot get confused, because it generally\ntries to avoid naked numbers. Good choice.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Flesh out the UDDF xml parsing a bit more\n\nThis uses the example UDDF file from Jan Schubert's Heinrichs Weikamp\nDR5 dives, and now parses the dive dates, the cylinder mixes and the gas\nswitch events correctly (or at least partially).\n\nIt's not perfect: the gas mix has an \"id\" field that we ignore, and\ninstead we just depend on the cylinders being in order (which they seem\nto be).  And I have rather limited test-cases, so maybe something else\nis messed up too.  But for the six example dives I have, this gives\nreasonable data.\n\nTest-data-by: Jan Schubert <Jan.Schubert@gmx.li>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix divide-by-zero bug in statistics.c\n\nGET_LOCAL_SAC did not check if the two entries had different time stamps\nand could therefore cause a divide-by-zero. x86 doesn't fault on that -\nit's still wrong. This now calls a function that does proper checking of\nall the values involved in the calculation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Obviate the need for explicit 'remember_tree_state/restore_tree_state' calls\n\nInstead, just keep track of the expanded state of trips as we get the\ngtk callbacks for the state changes (which we need to track anyway for\nthe selection logic), and automatically restore the state whenever we\nre-create the divelist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remember pre-existing trip expansion state when autogrouping\n\nThis just adds the \"remember_tree_state()\" and \"restore_tree_state()\"\ncalls around the divelist update when autogrouping is turned on: that\nway existing expanded groups aren't blindly collapsed.\n\nIt makes it much easier to see what autogrouping does if it only groups\na few dives, because the overall state of the divelist isn't radically\nchanged.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remember non-expanded state in 'remember_tree_state()' too\n\nThe 'remember_tree_state()' thing is meant to remember if a dive trip is\nexpanded or not, but it missed the \"or not\" part.  IOW, it never cleared\nthe expanded flag, it only ever set it.\n\nAs a result, if you were doing multiple operations on the divelist tree\n(testing all the recent gtk-model removal, for example) the dive trips\nwould end up expanding more and more, even if you collapsed things by\nhand in between operations.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite \"merge_dive_into_trip_above()\" using our own data structures\n\nThis does the moving of dives into the trip above without the complexity\nof the gtk data structures, and instead just recreates the whole\ndivelist afterwards.  As usual, this simplifies things a lot, and the\nless gtk-specific code we have, the better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"insert_trip_before\" using the gtk data structures\n\n.. use our own data structures instead, and regenerate the gtk ones\nafter having successfully created the new trip.\n\nThis simplifies the code enormously, and also makes it much more\ngeneric.  You can now create a new trip from any arbitrary set of\nselected dives (it used to be that the \"multiple selected dives\" case\nworked, but only for some very specific special cases of selected dives).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix find_trip_by_idx() over-zealous cleanup\n\nCommit bcf1f8c4feb9 (\"Don't do \"remove_from_trip\" by walking the gtk\ndata structures\") made find_trip_by_idx() only work for negative indexes\n(positive indexes are dives), but when it removed the unnecessary test\nfor negativity, the statement inside it should have been kept as\nunconditional, rather than removed with the test.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"remove_from_trip\" by walking the gtk data structures\n\nThey are complicated and confusing.  Just use our own data structures\nand re-generate the gtk ones from them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't do \"remove_trip()\" by walking the gtk data structures\n\nThey are complicated and confusing.  Just use our own data structures\nand re-generate the gtk ones from them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use the divetrip index to look up divelist trip entries\n\nWe used to look up dive trips by their date, but these days we always\ncreate a dynamic index for a dive trip when we insert it into the\ndivelist model, so we can use that to unambiguously match up dive trips\nwith the dive model entries.\n\nThat means that we don't get confused if we have two trips with the\nexact same time, which happens when you load all the test-dives, for\nexample.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When only a dive trip is selected, select all the dives in the trip\n\nThis does a final pass after all the selection logic, and notices if we\nhave dive trips that are selected, but that have no dives in them\nselected.  In that case, we assume that the user wanted to select all\ndives in that trip.\n\nNOTE! This still allows a range selection that selects the dive trip\nentry and a few dives under the trip.  If a trip has any dives selected\nin it, we leave that manual selection alone.  So this new logic really\nonly triggers on the case where somebody selected *just* the trip.\n\nNote: unselecting the trip still leaves the dives under it selected,\nbecause having a dive trip that isn't selected have all the dives under\nit be selected is normal, and we can't recognize that as some kind of\nspecial event.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix ordering issue in fixup\n\nWe have this oddity in \"fixup_dive()\" that we fix up the dive water\ntemperates and durations by looking over all the dive computer data.\n\nBut we actually call that *before* we've fixed-up the dive computer data.\nSo the water temperature is there in the samples, but hasn't made it to\nthe generic dive computer water temperature yet, so then it doesn't make\nit into the dive structure either.\n\nUntil the *second* time, when we have load the (partially fixed-up) data.\n\nAcked-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get the SHA1 routines from git instead of openssl\n\n..they are of a higher quality anyway, and this way we have one less\nlibrary to worry about.  And this way there is nobody who can claim that\nopenssl is not a system library and thus not compatible with the GPL.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve the code handling air temperature\n\nBetter helper functions make for easier to understand code.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix saving of changed GPS entry\n\nWe can't use gps_changed() in the gps_map_callback function, because that\nwill actually change the GPS data in the dive being edited, which in turn\nwill then cause us to later (when we *really* want to change it) not match\nthe master dive data any more, and think we shouldn't edit the dive at\nall.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix rounding of GPS coordinates\n\nThe whole \"+ 0.5\" to round to integers only works for positive values,\nand GPS coordinates are signed.\n\nSo use the proper \"round to int\" function (rint()), which does this correctly.\n\nAlso, remove the redundant check against the master gps values: we\nalready checked that if we do have a master dive, the gps values must\nmatch the currently edited dive, so comparing against the master is\nentirely redundant.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix up Swedish translation for recent po changes\n\nMinimal fixups just to make things happier. Fredrik will hopefully\ndouble-check and fix this up further, but at least we have *some* string\nfor the planning warning etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Walk over each divecomputer entry in fixup_dives()\n\nThe fixup_dives() code used to only look at the first divecomputer,\nwhich meant that minimun temperatures etc for the dive would only ever\ncome from the primary divecomputer.\n\nThis splits up the code that walks over the divecomputer into a function\nof its own, and iterates over all computers in fixup_dive() calling into\nit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do more dive fixup for each dive computer\n\nIn commit b6c9301e5847 (\"Move more dive computer filled data to the\ndivecomputer structure\") we moved the fields that get filled in by the\ndive computers to be per-divecomputer data structures.\n\nThis patch re-creates some of those fields back in the \"struct dive\",\nbut now the fields are initialized to be a reasonable average from the\ndive computer data.  We already did some of this for the temperature\nmin/max fields for the statistics, so this just continues that trend.\n\nThe goal is to make it easy to look at \"dive values\" without having to\niterate over dive computers every time you do.  Just do it once in\n\"fixup_dive()\" instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify/clarify the get_surface_pressure_in_mbar() function\n\nInstead of maintaining a rolling average and re-calculating it at each\nstage, just calculate the surface_pressure average the natural way: as\nthe sum divided by the number of entries.\n\nThis results in a single rounding, rather than doing rounding multiple\ntimes and possibly rounding wrong as a result.\n\nNot that we care all that deeply about the LSB of the mbar value, but\nthe code is simpler and more obvious this way too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove the tissue_tolerated_ambient_pressure[] array\n\nIt wasn't really used.  The only reader of that array was the same thing\nthat wrote the entry, so instead of storing it in the array (and never\nusing it ever after), just use the calculation directly, and remove the\narray entirely.\n\nThis makes it much easier to see that the gradient factors are not used\nfor any long-term state.  We use them only for the pressure tolerance\ncalculations at that particular point, and there is no \"history\"\nassociated with it.\n\nThis matters mainly because it means that we can do all the deco\ninitialization and setup without worrying about exactly which gradient\nfactors we will use.  And we can use different gradient factors for\ndiving and planning and no-fly calculations without the GF choice\naffecting the tissue state.\n\nAcked-by: Robert C. Helling <helling@lmu.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> The 'gasmix' argument to add_segment() is read-only\n\nWe'll want to use a 'static const' gasmix for the upcoming no-fly-time\ncode, so prepare for it by just marking the read-only gasmix argument as\n'const'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly de-select dives in collapsed trips that are unselected\n\nWe had the logic for the \"select\" case, but not for the \"deselect\" case. Ugh.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update \"Swedish\" translation\n\nThis is only slightly better than \"Bork bork bork\".  I've never done any\ndiving in Swedish.  It's probably hilarious, but should be mostly\nunderstandable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't re-use the dive computer model string for all downloaded dives\n\nWhen we download dives with libdivecomputer, we create this strdup'ed\nname of the model information, but we then re-use that (single) strdup\nallocation for every dive we download.  This works fine *until* you\nstart freeing those dives (possibly directly after the download because\nthey are redundant), at which point things go to hell in a handbasket,\nsince there is just the one allocation for all the different dives.\n\nFix by just doing another strdup() at the point where we assign the\nmodel information to the dive computer.\n\nReported-by: Marc Merlin <marc@merlins.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive computer interleaving so it works again\n\nMerging two different dives by interleaving dive computer data got\nbroken by the multi-dive-computer code in commit b6c9301e5847 (\"Move\nmore dive computer filled data to the divecomputer structure\") which\nadded a lot more entries to the dive computer data structure, and then\ncopied the resulting structure incorrectly.\n\nMake sure we don't copy the events and samples allocations when we copy\nall the other fields of the divecomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Get rid of dive->{start,end}\n\nWe had this special logic to not show the end of a dive when a dive\ncomputer shows a series of very shallow samples (basically snorkeling\nback to shore after the dive ended).  However, that logic ended up being\nglobal per dive, which is very annoying when you have two or more dive\ncomputers, and it decides to cut off the second one because the first\none surfaces.\n\nSo get rid of this per-dive state, and just use the plot-info 'maxtime'\nfield for this (we never used the 'start' case anyway).  That way we\nwill properly cut off boring surface entries only when they are past the\nend of the interesting entries of *all* dive computers, and we won't be\ncutting things short.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Sort the devices when adding them to the device list\n\nThis doesn't change any real semantics, but it means that we will write\nout the device computer information in a well-defined order, rather than\nin some random order (before this: reverse order of reading them in).\n\nHaving the XML file be as stable as possible is important so that *real*\nchanges stand out when you make changes to your dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix air temperature for multi-dive editing\n\nThe air temperature editing was broken when you edited multiple dives at\nonce: even if you didn't actually change the air temperature, all dives\nwould be reset to that particular temperature.\n\nThe logic for editing dives is that we have a 'master' dive (which is\nthe dive that all the entries get filled in from), and only if the\nentries have changed from what the master dive information was (ie the\nuser actually edited it) do we change that particular piece of\ninformation.\n\nAnd we only change it for dives that match the master dive for that\nentry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add default GPS location for dive sites we already know about\n\nWhen editing a new dive, and using a dive site name that we have\nalready seen previously, and have GPS information for, pick up that\nGPS information from the previous dive by default.\n\nNOTE! When editing dive site locations for dives that already have GPS\ninformation, or when we've modified the GPS information explicitly\nsome way while editing the dive (either through map input or by\nediting the text field directly) we do *not* use this automatic logic.\n\nSo if you messed up the GPS information some way and want to\nre-populate it with the automatic mode, you need to explicitly clear\nthe GPS text-field, at which point we go back to \"ok, let's try to\npick up automatic GPS data from previous dives with the same name\"\nmode.\n\nAlso note that we do the automatic location lookup only when actually\nediting the location field. So if you already wrote the dive site\nname, then cleared the GPS field, you now need to go back to the dive\nsite name and edit it again to get the automatic GPS filling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When switching sort order, scroll the dive list to the current dive\n\nNow that we actually seem to understand the whole notion of setting the\nactive dive, let's take that code a bit further, and always scroll to it\nwhen we're introducing a new sort ordering.\n\nSure, there may be other selected dives, but we have one primary\n(current) dive that we show the profile and dive data for, and when we\nswitch sort order we probably want to see that dive in the dive list.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the dive selection logic also set the treeview cursor\n\nThis fixes \"enter\" after moving around with the cursor keys.\n\nHinted-at-by: Carl Worth <cworth@cworth.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Auto-generate C file dependencies, and make the build more quiet\n\nThis does some rough auto-generation of header file dependencies for all\nthe *.c files, rather than our file-by-file incomplete hardcoded ones.\n\nIt also stops showing the whole compile line, because it's ugly and\ndistracting.  Instead it just shows \"CC file.c\".  If you care about the\nfull thing, you still see them with \"make -n\".\n\nOnly tested on Linux.  It probably is missing some Windows or\nOSX-specific header includes.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add the begin/end markers to events with the proper flags\n\nWhen we create the event names, the name itself does not include the\ninformation about whether the event is the beginning or end of some\nstate, so we end up having things like events named \"deco\" and then in\nthe event flags it says whether this is the *beginning* of deco, or the\nend.\n\nAnd when we show the event, we only used to show the name.  This patch\nmakes us show whether it's the begin or end event for events that have\nthose flags.  So now you see \"deco begin\" and \"deco end\" instead of just\ntwo events both called \"deco\".\n\nIt would perhaps be nice if we somehow showed the range between the\nevents too, and paired them up visually some way, but that's a separate\nand much more difficult thing to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make 'get_dive_by_diveid()' work even for non-primary dive computers\n\nIt's only used by the Uemis importer, and Dirk always seems to import\nhis Uemis data first, so it wasn't very noticeable.  But if the Uemis\ndata wasn't the first dive computer, it would not find the dive.\n\nSide note: just comparing deviceid is not correct.  We should pass in\nthe device model too.  But again, that will realistically never really\nmatter, since non-Uemis importers will generate complex SHA1 hashes of\nthe dive data for the dive ID, so a collision with the Uemis numbers is\nvery unlikely.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly destroy the cairo context when we're done with it\n\nHenrik reports that on OSX, not destroying the cairo context results in\na corrupted profile display.  It seems to just leak memory on Linux.\n\nFor gtk3, the cairo context is embedded in the GtkDrawable, for gtk2 we\nneed to create and destroy it appropriately.  Although maybe we could\njust make it static instead of creating/destroying it all the time.\n\nAnyway, this goes back to the old cairo destroy logic for gtk2.\n\nReported-and-analyzed-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't deselect all dives on all selection \"change\" events\n\ngtk sends the selection change events all the time, for pretty much any\n\"divelist changed - so selection changed\".  The expansion of a trip, the\nswitch to a new model, yadda yadda.  But we actually want selections to\nbe sticky across these events, so we can't just forget all of our old\nselection state and repopulate it.\n\nSo we re-introduce the \"am I allowed to change this row\" callback, which\nwe used to use to create a list of every actual selection that was\nchanged.  But instead of remembering the list (and having the stale\nentries issue with that remembered list that caused problems), we now\njust use that as a \"that *particular* selection cleared\" event.\n\nSo this callback works as the \"which part of the visible, currently\nselected state got cleared\" notifier, and handles unselection.\n\nThen, when the selection is over, we use the new model of \"let's just\ntraverse the list of things gtk thinks are selected\" and use that to\nhandle new selections in the visible state that gtk actually tracks\nwell.  So that logic handles the new selections.\n\nThis way, dives that aren't visible to gtk don't ever get modified: gtk\nwon't ask about them being selected or not, and gtk won't track them in\nits selection logic, so with this model their state never changes for\nus.\n\ngtk selections are annoying.  They are simple for the case gtk knows\nabout (ie they are *visually* selected in the GUI), but since we very\nmuch want to track selection across events that change the visual state,\nwe need to have this insane \"impedance match\".\n\nReported-by: Dirk Hohdnel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cursor up/down logic\n\nThe dive selection rewrite didn't set the selected dive index, breaking\nthe cursor key logic.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite gtk dive selection tracking logic\n\nWe used to generate a list of possibly changed selections using the gtk\ntree selection \"selection function\".\n\nBut that's actually meant to just tell gtk whether an entry can be\nselected or not, and our list of possibly changed entries ended up being\nstale if the selection change was due to a list entry removal, for\nexample.\n\nSo rip out the old model entirely, and instead just walk the whole\nselection that gtk gives us on a selection \"change\" event.  We throw all\nour old selections away when this happens, and just rebuild it all.\n\nThis should fix the occasional internal gtklib-quartz assertion that\nHenrik is seeing.  And it actually simplifies the code too.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> parse-xml: allow XML nodes with empty tag names\n\nThey happen for CDATA content, where libxml2 turns the CDATA fields into\na child of the parent entry, but without a name.\n\nNow, of course, any sane person would just want to use the CDATA as the\nstring value of the parent itself, but libxml2 probably does this\ninsanity for a reason.  And the reason is probably that some misguided\npeople want to *write* XML using libxml2, and then the stupid child node\nactually acts as a \"now I want you to write this data as CDATA\".\n\nWhatever the reason, let's just ignore it.  We will just traverse such a\nnameless child and be happy, and we'll give the nameless child the name\nof the parent.  Our XML node matching logic will then never see this\ninsane nameless child at all, and doesn't have to care.\n\nOur whole XML parsing rule-of-thumb is to take the whole \"be strict in\nwhat you output, but generous in what you accept\" to its logical\nconclusion.  Because we will literally accept almost anything, in any\nformat.  You can mix tags or attributes wildly, and youc an use CDATA or\nnot as you see fit.  We just don't care.\n\nWe're the honeybadger of the divelog world.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> xml-parsing: accept 'sitelat' and 'sitelon' for GPS coordinates\n\nAre they ugly and insane tags? Yes.  Are they used? Bingo.  MacDive uses\nthis lovely format for specifying dive site location.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be even more permissive in our date parsing logic\n\nNot that we aren't already insanely permissive in parsing just about any\nrandom noise that could _possibly_ be construed as xml and turn it into\na dive, this makes us even laxer.\n\nIf somebody wants to have a <date> tag with both date and time, why the\nheck not? It's fine.  And if it has just the date, that's fine too.  And\nthe date can be in any of several formats.  We really don't care, the\nmore permissive, the better.\n\nWe strive to always write beautiful xml, but let's face it, not\neverybody else does.  If we can turn random line noise into a dive, we\nshould do so.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prepare to compile with gtk-3\n\nTo actually compile with gtk-3 you currently need to disable the use of\nOSM (compatible with gtk2 only for now).  And obviously figure out the\nheaders and libraries by using pkg-config on gtk-3 instead of gtk-2.\nBut now it should be only a Makefile change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up gtk combo box handling\n\nThis cleans up our handling of combo boxes and all the duplicated\ncompletion logic, and simplifies the code.\n\nIn particular, we get rid of the deprecated GtkComboBoxEntry.  While it\nmade some things easier, it made other things harder.  Just using\nGtkComboBox and setting that up correctly ends up being simpler, and\nalso makes the logic work with gtk-3.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Let's call them GTKCFLAGS, not GTK2CFLAGS\n\nMaybe they will be for GTK3 some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make subsurface compile with -DGSEAL_ENABLE\n\nThis forces us to use the proper gtk accessor functions.  It may not be\nworth it if people actually do the Qt conversion, but if we want to try\ngtk3 at some point, this might help.\n\nThis all came about because I was trying to explain on G+ what an\nimmense pain this all was to even figure out, if you don't actually know\ngtk at all.  Google and the gtk migration guide are almost useless, and\nthe gtk2 documentation itself actually uses the fields directly without\nany accessor functions in several places.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't mark divelist changed for automated merges after all\n\nThe intention was good, and this was added in commit 4982389ca762 (\"Fix\nsetting of the dive_table.preexisting logic\"), but it turns out to not\nbe that great idea after all.\n\nSo the thinking is that merging two dives clearly changes the dive list,\nand it really does.  At the same time, because it's an automated merge,\nif you re-read the old XML file, you'll get it done again, so saving the\nchanges doesn't really *matter*.\n\nAnd it turns out to be somewhat annoying with test dives: we have\n\n - dives/test23.xml:\n    <dive number='23' tripflag='INTRIP' date='2011-12-02' time='6:00:00' duration='30:00 min'>\n - dives/test25.xml:\n    <dive number='26' date='2011-12-02' time='6:00:00' duration='30:00 min'>\n\nthat merge automatically if you run subsurface on all the test dives\ntogether.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix overly complicated and fragile \"same_cylinder\" logic\n\nThe plot-info per-event 'same_cylinder' logic was fragile, and caused\nus to not print the beginning pressure of the first cylinder.\n\nIn particular, there was a nasty interaction with not all plot entries\nhaving pressures, and the whole logic that avoid some of the early\nplot entries because they are fake entries that are just there to make\nsure that we don't step off the edge of the world. When we then only\ndo certain things on the particular entries that don't have the same\ncylinder as the last plot entry, things don't always happen like they\nshould.\n\nFix this by:\n\n - get rid of the computed \"same_cylinder\" state entirely. All the\ncases where we use it, we might as well just look at what the last\ncylinder we used was, and thus \"same_cylinder\" is just about testing\nthe current cylinder index against that last index.\n\n - get rid of some of the edge conditions by just writing the loops\nmore clearly, so that they simply don't have special cases. For\nexample, instead of setting some \"last_pressure\" for a cylinder at\ncylinder changes, just set the damn thing on every single sample. The\nlast pressure will automatically be the pressure we set last! The code\nis simpler and more straightforward.\n\nSo this simplifies the code and just makes it less fragile - it\ndoesn't matter if the cylinder change happens to happen at a sample\nthat doesn't have a pressure reading, for example, because we no\nlonger care so deeply about exactly which sample the cylinder change\nhappens at. As a result, the bug Mika noticed just goes away.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Include git revision in version number\n\nThis makes sure that it's easy to tell from the about box whether this is\na released version or a development build.\n\nIf it is compiled at the exact location of the tag, \"git describe\n--tags\" will just return the tag-name. Otherwise it will return\nsomething like this\n\n    v2.1-393-ge03f31525aab\n\nwhich means \"v2.1 plus 393 commits, git SHA1 of tip is e03f31525aab\",\nwhich is a nice combination of git-readable (only the actual SHA1\nmatters) and human-readable (393 commits on top of v2.1).\n\nAnd if you don't build from git sources, and don't have git installed,\nit falls back on the old \"v$(VERSION)\" string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove saving of dive computer nicnames in system config\n\nWe save the (more complete) dive computer information in the XML file\nwith serial numbers and firmware version if we know about them, so using\na complicated string in the system config was redundant and confusing.\n\nSo remove that code.\n\nNOTE! Since the dive computer nicknames are now only saved if the XML\nfile is saved, we also mark the dive list \"changed\" when we edit the\nnicknames.  That way we'll be prompted to save things before exiting,\neven if we don't actually edit any actual dive data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save all dive computer nicknames - whether used or not\n\nWe used to save dive computer information only if that dive computer was\nactually used in any of the dives we saved.  But we can simplify the\ncode if we just always save any dive computers we know about.  And it\ndoes allow for some usage cases where you have nicknames for other\npeoples computers that you may not actively use, but you want to see if\nyou end up loading multiple XML files in one go.\n\nSo there's just no compelling reason to not just save all the info we\nhave.  And this will make it less painful to remove the \"use system\nconfig for dive computer nicknames\", because you can also use this to\ncontinue to gather dive computer info in a separate XML file if you want\nto.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix setting of the dive_table.preexisting logic\n\nThe 'preexisting' value is used for downloading dives: we want to add\nnew dives but, but then compare those new dives against the\npreexisting ones before we start sorting things and possibly merging\nthem.\n\nHowever, the value was only updated sporadically, resulting in it\nhaving stale information in it.  Which would cause problems\nparticularly if you deleted dives, so that the preexisting value would\npoint past the actual existing values!\n\nSo just update it unconditionally in dive_list_update_dives(), which\nanything that changes the dive list is supposed to call in order to\ndisplay the changes anyway.\n\nAlso, just for safety, when removing a dive, put NULL in the last dive\ntable location.  Nobody should ever access past the end anyway (this\nis enforced by 'get_dive()') but there are places that access the dive\nlist table directly, and the libdivecomputer download was one of\nthose.  No reason to leave stale dive pointers possibly around for\nuses like that.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix temperature rounding issues\n\nTemperatures can actually be negative, which means that rounding by\nadding 0.5 and casting to 'int' is not correct.\n\nWe could use '(int)(rint(val))' instead, but the only place we care\nabout might as well just print out the floating point representation\nwith a precision of two digits instead.  So if you have a dive computer\nthat gives you the precision, you might see '3.5˚C' as the temperature.\n\nRemove the helper functions that nobody uses and that get the rounding\nwrong anyway.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove XML parsing special case temperature code\n\nWe had various hacky historical artifacts in our XML parsing, partly\nfrom our legacy of parsing integer and floating point data separately\n(we used to recognize certain import format differences based on whether\nthe data was in a floating point or integer format).  And partly from\ntrying to do a good job of importing crap from other dive log software.\n\nAnyway, that actually meant that we refused to parse negative numbers,\nand we ignored temperatures of zero because some diving log would do\nthat for missing values.\n\nBoth of these actually bit us when parsing our native XML.  Of course,\nonly crazy ice divers would ever notice.\n\nNoticed by Henrik Brautaset Aronsen.\n\nReported-acked-and-tested-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move more dive computer filled data to the divecomputer structure\n\nThis moves the fields 'duration', 'surfacetime', 'maxdepth',\n'meandepth', 'airtemp', 'watertemp', 'salinity' and 'surface_pressure'\nto the per-divecomputer data structure.  They are filled in by the dive\ncomputer, and normally not edited.\n\nNOTE! All actual *use* of this data was then changed from dive->field to\ndive->dc.field programmatically with a shell-script and sed, and the\nresult then edited for details.  So while the XML save and restore code\nhas been updated, all the displaying etc will currently always just show\nthe first dive computer entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use proper helper functions for dive location and for_each_dive\n\nThis makes the code use the \"dive_has_location()\" function rather than\ncheck the longitude and latitude directly.\n\nIt also uses \"for_each_dive()\" rather than open-coding it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Satellite icon diet\n\n[Dirk Hohndel: converted to png and .h]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> libdivecomputer: add air temperature fixups for Suunto\n\nlibdivecomputer doesn't actually seem to support air temperature\nreporting at all, but at least for Suunto dive computers the air\ntemperature is recorded as the temperature for the first sample.\n\nSo since we already have vendor-specific libdivecomputer hacks, let's\njust add that one as a rule.  It may be that other divecomputers do this\ntoo, so this adds it as a generic concept - it's just that right now the\nflag for \"air temperature in first sample\" is only set for Suunto dive\ncomputers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on the \"prefer downloaded\" dive computer model\n\nIt used to be that when you checked the \"Prefer downloaded\" checkmark,\nwe'd throw away *any* old dive computer data.  That was good, because it\nallowed us to start from a clean slate when you had some old subsurface\ndata with questionable dive computer data.\n\nHowever, it was a bit extreme, and it's really not what you want if you\nalready have (good) dive computer data from other dive computers.\n\nSo this modifies the logic a bit.  Instead of throwing away all old dive\ncomputer data, the \"Prefer downloaded\" checkmark now means:\n\n - the newly downloaded data becomes the \"primary\" dive computer data\n   (ie the first in the list)\n\n - if there was old dive computer data that *could* have been from this\n   new dive computer (ie it didn't have model information, or it had a\n   matching model but no device ID data), we throw that away\n\n - but any existing dive computer data from other dive computers is left.\n\nThis seems to be much closer to what we really would want for a new\n\"preferred\" download.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix suunto serial number confusion in libdivecomputer\n\nlibdivecomputer has started giving the Suunto serial numbers in a\ndifferent format, which means that we have the same device with two\ndifferent serial numbers, and then we need two different ways of turning\nthe numerical entity into a string.\n\nLook at the number pattern to see figure out which version of the format\nit is that libdivecomputer is reporting, and turn it back into the\noriginal format so that we can reliably give the right string for it.\nThis also mean sthat the device ID stays the same regardless of\nlibdivecomputer version.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Only offer to show dive on map if we have location information\n\nThis adds the \"Show in map\" menu entry to the divelist only if we\nactually have a location to show.\n\nOf course, having some way to visually see whether we have a GPS\nlocation even before we show the menu would probably be good. Maybe a\nmarker in the \"location\" string or something. But in the meanwhile, at\nleast we don't have that menu entry if we have nothing to show.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix odd calculated deco \"ripples\"\n\nPreviously we calculate the ceiling at every single second, using the\ninterpolated depth but then only *save* the ceiling at the points where we\nhave a profile event (the whole deco_allowed_depth() function doesn't\nchange any state, so we can just drop it entirely at points that we aren't\ngoing to save)\n\nWhy is it incorrect? I'll try to walk through my understanding of it, by\nswitching things around a bit.\n\n- the whole \"minimum tissue tolerance\" thing could equally well be\n  rewritten to be about \"maximum ceiling\". And that's easier to think\n  about (since it's what we actually show), so let's do that.\n\n- so turning \"min_pressure\" into \"max_ceiling\", doing the whole\n  comparison inside the loop means is that we are calculating the\n  maximum ceiling value for the duration of the last sample. And then\n  instead of visualizing the ceiling AT THE TIME OF MAXIMUM CEILING, we\n  visualize that maximal ceiling value AT THE TIME OF THE SAMPLE.\n\nEnd result: we visualize the ceiling at the wrong time. We visualize\nwhat was *a* ceiling somewhere in between that sample and the previous\none, but we then assign that value to the time of the sample itself.\n\nSo it ends up having random odd effects.\n\nAnd that also explains why you only see the effect during the ascent.\nDuring the descent, the max ceiling will be at the end of our\nlinearization of the sampling, which is - surprise surprise - the position\nof the sample itself. So we end up seeing the right ceiling at the right\ntime while descending. So the visualization matches the math.\n\nBut during desaturation, the maximum ceiling is not at the end of the\nsample period, it's at the beginning. So the whole \"max ceiling\" thing has\nbasically turned what should be a smooth graph into something that\napproaches being a step-wise graph at each sample. Ergo: a ripple.\n\nAnd doing the \"max_ceiling during the sample interval\" thing may sound\nlike the safe thing to do, but the thing is, that really *is* a false\nsense of safety. The ceiling value is *not* what we compute. The ceiling\nvalue is just a visualization of what we computed. Playing games with it\ncan only make the visualization of the real data worse, not better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add default filename and divelist font to prefs structure\n\n.. and add the usual logic to not save the default values.\n\nThis also simplifies the initial system-specific setup of both of these:\nsince we have defaults for all the preferences that get set up at\nstartup, we can just initialize those defaults to the system-specific\nfonts then and there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default gradient factor setting\n\nTesting the new \"don't even bother saving default values\" showed that the\ndefault values for the deco gradient factors were undefined.\n\nOr rather, they were over-defined.\n\nWe had defaults for the UI (30 and 75 for GFlow/GFhigh respectively - the\nconfig ones are in percent), *and* we had defaults in deco.c for the deco\ncode itself (0.35 and 0.75 respectively - in deco.c they are represented\nas fractions, not percent).\n\nAnd if the config entries had never been written, and were assumed to be\nthe defaults, the UI code thought the defaults were 30/75, but they had\nnever been *set* to those defaults, so actual default calculations\nsilently used the 35/75 in deco.c, which is very confusing (you could go\nto the preferences page, see the 30/75 there, and it would not actually\nmatch th evalues used for computation).\n\nOf course, with an old config file that saves even default entries, you'd\nnever see that if you ever changed anything in the preferences, because\nyou'd always have explicit gflow/high values. But now it's much easier to\nsee the conflicting default values.\n\nFix it by just always using the UI defaults (or set values) to set the\nactual deco values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV if no pre-existing nickname information\n\nLoading an xml file with dive computer information without any\npreexisting nickname data would try to \"remember\" that NULL nickname.\nCausing a SIGSEGV if there was no nickname information.\n\nThe bug was introduced by commit ec38d3708df2 (\"Move device_info handling\ninto a new 'device.c' file\") when I inadvertently removed a bit too much\ncode. It actually wants to remember a missing DC nickname as an empty one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update preference saving for numeric values\n\nThis does the \"don't save defaults\" for numeric values too.\n\nAlso, move the preferences loading/saving to a new \"prefs.c\" file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up preference saving code\n\nThe old code (on purpose) didn't try to differentiate \"nonexisting\nboolean configuration\" with \"existing boolean configuration set to\nfalse\", which is problematic if we optimize the saving to not save\ndefault preferences at all.\n\nWhich this does.\n\nSo in addition to the logic to know about default preferences, this has\nto change the interfaces for the PREF_BOOL reading code so that you can\ntell the difference between \"no value\" and \"false\".\n\nAnd since the previous calling convention was an abomination of doing\npointer casting and having case-statements for the config types, change\nthat while at it.  Both from a usage perspective *and* from a back-end\nperspective it is actually much simpler to just have different functions\nfor the string vs boolean config read/write versions.  The OSX versions\nin particular end up being one-liners.\n\n(The GConf library is a nightmare, and doesn't seem to have any way to\nknow whether a boolean value exists or not, so you have to read it as a\nGConfVal and then turn it into a gboolean rather than just get the \"oh,\nit didn't exist\" as an error value).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the default preferences explicit\n\nThis makes it explicit what the default preferences are, so that we can\nmore easily avoid unnecessarily saving default settings.  It also makes\nimperial metrics the default for the US (Burma and Liberia always get\nforgotten!)\n\nRight now we tend to be somewhat confused about defaults.  We do have\nthem, but then even if something has a default value, we tend to write\nit out to the config file.  Which is not just unnecessary, but makes it\nreally hard to see after-the-fact whether the user actually wanted that\n*specific* value, or whether they just wanted the default behavior.\n\nSo this prepares for having explicit configuration for when we want\nsomething different than the defaults.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up preference data structure definition into 'pref.h'\n\n.. and rename the badly named 'output_units/input_units' variables.\n\nWe used to have this confusing thing where we had two different units\n(input vs output) that *look* like they are mirror images, but in fact\n\"output_units\" was the user units, and \"input_units\" are the XML parsing\nunits.\n\nSo this renames them to be clearer.  \"output_units\" is now just \"units\"\n(it's the units a user would ever see), and \"input_units\" is now\n\"xml_parsing_units\" and set by the XML file parsers to reflect the units\nof the parsed file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Assemble the actual Suunto serial number\n\nIt turns out that the serial number returned by libdivecomputer isn't\nreally the serial number as interpreted by the vendor. Those tend to be\nstrings, but libdivecomputer gives us a 32bit number.\n\nSome experimenting showed that for the Suunto devies tested the serial\nnumber is encoded in that 32bit number:\n\nIt so happens that the Suunto serial number strings are strings that have\nall numbers, but they aren't *one* number. They are four bytes\nrepresenting two numbers each, and the \"23500027\" string is actually the\nfour bytes 23 50 00 27 (0x17 0x32 0x00 0x1b). And libdivecomputer has\nincorrectly parsed those four bytes as one number, not as the encoded\nserial number string it is. So the value 389152795 is actually hex\n0x1732001b, which is 0x17 0x32 0x00 0x1b, which is - 23 50 00 27.\n\nThis should be done by libdivecomputer, but hey, in the meantime this at\nleast shows the concept. And helps test the XML save/restore code.\n\nIt depends on the two patches that create the whole \"device.c\"\ninfrastructure, of course. With this, my dive file ends up having the\nsettings section look like this:\n\n  <divecomputerid model='Suunto Vyper Air' deviceid='d4629110'\nserial='01201094' firmware='1.1.22'/>\n  <divecomputerid model='Suunto HelO2' deviceid='995dd566'\nserial='23500027' firmware='1.0.4'/>\n\nwhere the format of the firmware version is something I guessed at,\nbut it was the obvious choice (again, it's byte-based, I'm ignoring\nthe high byte that is zero for both of my Suuntos).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move device_info handling into a new 'device.c' file\n\nThe legacy nickname wrappers (that use the device_info structure) are\nleft in gtk-gui.c.  We can slowly start moving away from them, we don't\nwant to start exporting that thing as some kind of generic interface.\n\nThis isn't a pure code movement - because we leave the legacy interfaces\nalone, there are a few new interfaces in device.c (like \"create a new\ndevice_info entry\") that were embedded into the legacy \"create nickname\"\ncode, and needed to be abstracted out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rename 'dcnicknamelist' struct as 'device_info'\n\nWe'll start recording more than just nicknames in it, like serial\nnumbers and firmware version etc.  Start off just renaming it, and\nre-ordering the members to reflect how the nickname is not the primary\nissue.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Merge branch 'fixes' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull slave-dmaengine fixes from Vinod Koul:\n \"We have three small fixes.\n\n  First one from Andy reverts the devm_request irq as we need to ensure\n  the tasklet is killed after irq is freed, so we need to do free irq in\n  our code.  Other two from Arnd are fixing the compilation issue in\n  omap and sa11x0 drivers with ARM randconfigs\"\n\n* 'fixes' of git://git.infradead.org/users/vkoul/slave-dma:\n  dmaengine: sa11x0: remove broken #ifdef\n  dmaengine: omap: hide filter_fn for built-in drivers\n  dmaengine: dw: went back to plain {request,free}_irq() calls Linux 3.15-rc7 Merge branch 'afs' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs\n\nPull AFS fixes and cleanups from David Howells:\n \"Here are some patches to the AFS filesystem:\n\n  1) Fix problems in the clean-up parts of the cache manager service\n     handler.\n\n  2) Split afs_end_call() introduced in (1) and replace some identical\n     code elsewhere with a call to the first half of the split function.\n\n  3) Fix an error introduced in the workqueue PREPARE_WORK() elimination\n     commits.\n\n  4) Clean up argument passing to functions called from the workqueue as\n     there's now an insulating layer between them and the workqueue.\n     This is possible from (3)\"\n\n* 'afs' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  AFS: Pass an afs_call* to call->async_workfn() instead of a work_struct*\n  AFS: Fix kafs module unloading\n  AFS: Part of afs_end_call() is identical to code elsewhere, so split it\n  AFS: Fix cache manager service handlers Merge branch 'rdunlap' (patches from Randy Dunlap)\n\nMerge documentation fixes from Randy Dunlap.\n\n* emailed patches from Randy Dunlap <rdunlap@infradead.org>:\n  Documentation: update /proc/stat \"intr\" count summary\n  Documentation: update java sample wrapper for java 7\n  Documentation: update thunderbird email client settings\n  Documentation: fix typos in drm docbook Merge branch 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging\n\nPull hwmon subsystem fixes from Jean Delvare.\n\n* 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging:\n  hwmon: (ntc_thermistor) Fix OF device ID mapping\n  hwmon: (ntc_thermistor) Fix dependencies\n  hwmon: Document temp[1-*]_min_hyst sysfs attribute Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull single scsi fix from James Bottomley:\n \"This is a single fix for a bug exposed by a sysfs change in 3.13 which\n  now causes libsas to trigger a warn on in device removal\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  [SCSI] scsi_transport_sas: move bsg destructor into sas_rphy_remove Merge branch 'for-3.15' of git://linux-nfs.org/~bfields/linux\n\nPull two nfsd bugfixes from Bruce Fields:\n \"Just two bugfixes, one for a merge-window-introduced ACL regression,\n  the other for a longer-standing v4 state bug\"\n\n* 'for-3.15' of git://linux-nfs.org/~bfields/linux:\n  nfsd4: warn on finding lockowner without stateid's\n  nfsd4: remove lockowner when removing lock stateid\n  nfsd4: fix corruption on setting an ACL. Merge tag 'dmaengine-fixes-3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/dmaengine\n\nPull dmaengine fixes from Dan Williams:\n \"Two fixes for -stable:\n\n   - async_mult() sometimes maps less buffers than initially requested.\n      We end up freeing dmaengine_unmap_data on an invalid pool.\n\n   - mv_xor: register write ordering fix\"\n\n* tag 'dmaengine-fixes-3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/dmaengine:\n  dmaengine: fix dmaengine_unmap failure\n  dma: mv_xor: Flush descriptors before activating a channel Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n \"A small bunch of bug fixes, in particular:\n\n   1) On older cpus we need a different chunk of virtual address space\n      to map the huge page TSB.\n\n   2) Missing memory barrier in Niagara2 memcpy.\n\n   3) trinity showed some places where fault validation was\n      unnecessarily loud on sparc64\n\n   4) Some sysfs printf's need a type adjustment, from Toralf Förster\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: fix format string mismatch in arch/sparc/kernel/sysfs.c\n  sparc64: Add membar to Niagara2 memcpy code.\n  sparc64: Fix huge TSB mapping on pre-UltraSPARC-III cpus.\n  sparc64: Don't bark so loudly about 32-bit tasks generating 64-bit fault addresses. Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"It looks like a sizeble collection but this is nearly 3 weeks of bug\n  fixing while you were away.\n\n   1) Fix crashes over IPSEC tunnels with NAT, the latter can reroute\n      the packet through a non-IPSEC protected path and the code has to\n      be able to handle SKBs attached to routes lacking an attached xfrm\n      state.  From Steffen Klassert.\n\n   2) Fix OOPSs in ipv4 and ipv6 ipsec layers for unsupported\n      sub-protocols, also from Steffen Klassert.\n\n   3) Set local_df on fragmented netfilter skbs otherwise we won't be\n      able to forward successfully, from Florian Westphal.\n\n   4) cdc_mbim ipv6 neighbour code does __vlan_find_dev_deep without\n      holding RCU lock, from Bjorn Mork.\n\n   5) local_df test in ip_may_fragment is inverted, from Florian\n      Westphal.\n\n   6) jme driver doesn't check for DMA mapping failures, from Neil\n      Horman.\n\n   7) qlogic driver doesn't calculate number of TX queues properly, from\n      Shahed Shaikh.\n\n   8) fib_info_cnt can drift irreversibly positive if we fail to\n      allocate the fi->fib_metrics array, from Sergey Popovich.\n\n   9) Fix use after free in ip6_route_me_harder(), also from Sergey\n      Popovich.\n\n  10) When SYSCTL is disabled, we don't handle local_port_range and\n      ping_group_range defaults properly at all, from Cong Wang.\n\n  11) Unaccelerated VLAN tagged frames improperly handled by cdc_mbim\n      driver, fix from Bjorn Mork.\n\n  12) cassini driver needs nested lock annotations for TX locking, from\n      Emil Goode.\n\n  13) On init error ipv6 VTI driver can unregister pernet ops twice,\n      oops.  Fix from Mahtias Krause.\n\n  14) If macvlan device is down, don't propagate IFF_ALLMULTI changes,\n      from Peter Christensen.\n\n  15) Missing NULL pointer check while parsing netlink config options in\n      ip6_tnl_validate().  From Susant Sahani.\n\n  16) Fix handling of neighbour entries during ipv6 router reachability\n      probing, from Duan Jiong.\n\n  17) x86 and s390 JIT address randomization has some address\n      calculation bugs leading to crashes, from Alexei Starovoitov and\n      Heiko Carstens.\n\n  18) Clear up those uglies with nop patching and net_get_random_once(),\n      from Hannes Frederic Sowa.\n\n  19) Option length miscalculated in ip6_append_data(), fix also from\n      Hannes Frederic Sowa.\n\n  20) A while ago we fixed a race during device unregistry when a\n      namespace went down, turns out there is a second place that needs\n      similar protection.  From Cong Wang.\n\n  21) In the new Altera TSE driver multicast filtering isn't working,\n      disable it and just use promisc mode until the cause is found.\n      From Vince Bridgers.\n\n  22) When we disable router enabling in ipv6 we have to flush the\n      cached routes explicitly, from Duan Jiong.\n\n  23) NBMA tunnels should not cache routes on the tunnel object because\n      the key is variable, from Timo Teräs.\n\n  24) With stacked devices GRO information in skb->cb[] can be not setup\n      properly, make sure it is in all code paths.  From Eric Dumazet.\n\n  25) Really fix stacked vlan locking, multiple levels of nesting with\n      intervening non-vlan devices are possible.  From Vlad Yasevich.\n\n  26) Fallback ipip tunnel device's mtu is not setup properly, from\n      Steffen Klassert.\n\n  27) The packet scheduler's tcindex filter can crash because we\n      structure copy objects with list_head's inside, oops.  From Cong\n      Wang.\n\n  28) Fix CHECKSUM_COMPLETE handling for ipv6 GRE tunnels, from Eric\n      Dumazet.\n\n  29) In some configurations 'itag' in __mkroute_input() can end up\n      being used uninitialized because of how fib_validate_source()\n      works.  Fix it by explitly initializing itag to zero like all the\n      other fib_validate_source() callers do, from Li RongQing\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (116 commits)\n  batman: fix a bogus warning from batadv_is_on_batman_iface()\n  ipv4: initialise the itag variable in __mkroute_input\n  bonding: Send ALB learning packets using the right source\n  bonding: Don't assume 802.1Q when sending alb learning packets.\n  net: doc: Update references to skb->rxhash\n  stmmac: Remove unbalanced clk_disable call\n  ipv6: gro: fix CHECKSUM_COMPLETE support\n  net_sched: fix an oops in tcindex filter\n  can: peak_pci: prevent use after free at netdev removal\n  ip_tunnel: Initialize the fallback device properly\n  vlan: Fix build error wth vlan_get_encap_level()\n  can: c_can: remove obsolete STRICT_FRAME_ORDERING Kconfig option\n  MAINTAINERS: Pravin Shelar is Open vSwitch maintainer.\n  bnx2x: Convert return 0 to return rc\n  bonding: Fix alb mode to only use first level vlans.\n  bonding: Fix stacked device detection in arp monitoring\n  macvlan: Fix lockdep warnings with stacked macvlan devices\n  vlan: Fix lockdep warning with stacked vlan devices.\n  net: Allow for more then a single subclass for netif_addr_lock\n  net: Find the nesting level of a given device by type.\n  ... Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"The biggest commit is an irqtime accounting loop latency fix, the rest\n  are misc fixes all over the place: deadline scheduling, docs, numa,\n  balancer and a bad to-idle latency fix\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/numa: Initialize newidle balance stats in sd_numa_init()\n  sched: Fix updating rq->max_idle_balance_cost and rq->next_balance in idle_balance()\n  sched: Skip double execution of pick_next_task_fair()\n  sched: Use CPUPRI_NR_PRIORITIES instead of MAX_RT_PRIO in cpupri check\n  sched/deadline: Fix memory leak\n  sched/deadline: Fix sched_yield() behavior\n  sched: Sanitize irq accounting madness\n  sched/docbook: Fix 'make htmldocs' warnings caused by missing description Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"The biggest changes are fixes for races that kept triggering Trinity\n  crashes, plus liblockdep build fixes and smaller misc fixes.\n\n  The liblockdep bits in perf/urgent are a pull mistake - they should\n  have been in locking/urgent - but by the time I noticed other commits\n  were added and testing was done :-/ Sorry about that\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf: Fix a race between ring_buffer_detach() and ring_buffer_attach()\n  perf: Prevent false warning in perf_swevent_add\n  perf: Limit perf_event_attr::sample_period to 63 bits\n  tools/liblockdep: Remove all build files when doing make clean\n  tools/liblockdep: Build liblockdep from tools/Makefile\n  perf/x86/intel: Fix Silvermont's event constraints\n  perf: Fix perf_event_init_context()\n  perf: Fix race in removing an event Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm radeon and nouveau fixes from Dave Airlie:\n \"Fixes for the other big two.\n\n  The radeon VCE one is large but it fixes some userspace triggerable\n  issues, otherwise its blackscreens and oopses.\n\n  Nouveau fixes a bleeding laptop panel issue when displayport is used\n  sometimes\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon/pm: don't allow debugfs/sysfs access when PX card is off (v2)\n  drm/radeon: avoid segfault on device open when accel is not working.\n  drm/radeon: fix typo in finding PLL params\n  drm/radeon: fix register typo on si\n  drm/radeon: fix buffer placement under memory pressure v2\n  drm/radeon: fix page directory update size estimation\n  drm/radeon: handle non-VGA class pci devices with ATRM\n  drm/radeon: fix DCE83 check for mullins\n  drm/radeon: check VCE relocation buffer range v3\n  drm/radeon: also try GART for CPU accessed buffers\n  drm/gf119-/disp: fix nasty bug which can clobber SOR0's clock setup\n  drm/nvd9/therm: handle another kind of PWM fan Merge branch 'akpm' (incoming from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"9 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  MAINTAINERS: add closing angle bracket to Vince Bridgers' email address\n  Documentation: fix DOCBOOKS=... building\n  ocfs2: fix double kmem_cache_destroy in dlm_init\n  mm/memory-failure.c: fix memory leak by race between poison and unpoison\n  wait: swap EXIT_ZOMBIE(Z) and EXIT_DEAD(X) chars in TASK_STATE_TO_CHAR_STR\n  memcg: fix swapcache charge from kernel thread context\n  mm: madvise: fix MADV_WILLNEED on shmem swapouts\n  mm/filemap.c: avoid always dirtying mapping->flags on O_DIRECT\n  hwpoison, hugetlb: lock_page/unlock_page does not match for handling a free hugepage parisc: 'renameat2()' doesn't need (or have) a separate compat system call\n\nThe 'renameat2()' system call was incorrectly added as a ENTRY_COMP() in\nthe parisc system call table by commit 18e480aa07f78 (\"parisc: add\nrenameat2 syscall\").  That causes a link-time error due to there not\nbeing any compat version of that system call:\n\n  arch/parisc/kernel/built-in.o: In function `sys_call_table':\n  (.rodata+0xad0): undefined reference to `compat_sys_renameat2'\n  make: *** [vmlinux] Error 1\n\nEasily fixed by marking the system call as being the same for compat as\nfor native by using ENTRY_SAME() instead of ENTRY_COMP().\n\nReported-by: Guenter Roeck <linux@roeck-us.net>\nAcked-by: Miklos Szeredi <miklos@szeredi.hu>\nAcked-by: Helge Deller <deller@gmx.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Linux 3.15-rc6 Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull two powerpc fixes from Ben Herrenschmidt:\n \"Here are a couple of fixes for 3.15.  One from Anton fixes a nasty\n  regression I introduced when trying to fix a loss of irq_work whose\n  consequences is that we can completely lose timer interrupts on a\n  CPU... not pretty.\n\n  The other one is a change to our PCIe reset hook to use a firmware\n  call instead of direct config space accesses to trigger a fundamental\n  reset on the root port.  This is necessary so that the FW gets a\n  chance to disable the link down error monitoring, which would\n  otherwise trip and cause subsequent fatal EEH error\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc: irq work racing with timer interrupt can result in timer interrupt hang\n  powerpc/powernv: Reset root port in firmware Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull two btrfs fixes from Chris Mason:\n \"This has two fixes that we've been testing for 3.16, but since both\n  are safe and fix real bugs, it makes sense to send for 3.15 instead\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: send, fix incorrect ref access when using extrefs\n  Btrfs: fix EIO on reading file after ioctl clone works on it Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull two ceph fixes from Sage Weil:\n \"The first patch fixes a problem when we have a page count of 0 for\n  sendpage which is triggered by zfs.  The second fixes a bug in CRUSH\n  that was resolved in the userland code a while back but fell through\n  the cracks on the kernel side\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  crush: decode and initialize chooseleaf_vary_r\n  libceph: fix corruption when using page_count 0 page in rbd Merge tag 'xfs-for-linus-3.15-rc6' of git://oss.sgi.com/xfs/xfs\n\nPull xfs fixes from Dave Chinner:\n \"Code inspection of the XFS error number sign translations found a\n  bunch of issues, including returning incorrectly signed errors for\n  some data integrity operations.\n\n  These leak to userspace and result in applications not getting the\n  errors correctly reported.  Hence they need fixing sooner rather than\n  later.\n\n  A couple of the bugs are in data integrity operations, a couple more\n  are in the new COLLAPSE_RANGE code.  One of these came in through a\n  recent ext4 merge and so I had to update the base tree to 3.15-rc5\n  before fixing the issues\"\n\n* tag 'xfs-for-linus-3.15-rc6' of git://oss.sgi.com/xfs/xfs:\n  xfs: list_lru_init returns a negative error\n  xfs: negate xfs_icsb_init_counters error value\n  xfs: negate mount workqueue init error value\n  xfs: fix wrong err sign on xfs_set_acl()\n  xfs: fix wrong errno from xfs_initxattrs\n  xfs: correct error sign on COLLAPSE_RANGE errors\n  xfs: xfs_commit_metadata returns wrong errno\n  xfs: fix incorrect error sign in xfs_file_aio_read\n  xfs: xfs_dir_fsync() returns positive errno Merge branch 'renameat2' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull renameat2 arch support from Miklos Szeredi:\n \"I've collected architecture patches for the renameat2 syscall that\n  maintainers acked and/or asked me to queue.\n\n  This adds architecture support for the renameat2 syscall to m68k,\n  parisc, ia64 and through asm-generic to arc, arm64, c6x, hexagon,\n  metag, openrisc, score, tile, unicore32\"\n\n* 'renameat2' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  scripts/checksyscalls.sh: Make renameat optional\n  asm-generic: Add renameat2 syscall\n  ia64: add renameat2 syscall\n  parisc: add renameat2 syscall\n  m68k: add renameat2 syscall Merge tag 'iommu-fixes-v3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull iommu fixes from Joerg Roedel:\n \"Three fixes for the AMD IOMMU driver:\n   - fix a locking issue around get_user_pages()\n   - fix two issues with device aliasing and exclusion range handling\"\n\n* tag 'iommu-fixes-v3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/amd: fix enabling exclusion range for an exact device\n  iommu/amd: Take mmap_sem when calling get_user_pages\n  iommu/amd: Fix interrupt remapping for aliased devices Merge tag 'stable/for-linus-3.15-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/ibft\n\nPull iscsi_ibft fix from Konrad Rzeszutek Wilk:\n \"Fix iBFT regression on Broadcom NICs introduced in 3.2\"\n\n* tag 'stable/for-linus-3.15-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/ibft:\n  iscsi_ibft: Fix finding Broadcom specific ibft sign Merge tag 'renesas-sh-drivers-for-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas\n\nPull SH driver fix from Simon Horman:\n \"Compile drivers/sh/pm_runtime.c if ARCH_SHMOBILE_MULTI\n\n  This resolves a regression introduced in v3.14 by commit bf98c1eac1d4\n  (\"ARM: Rename ARCH_SHMOBILE to ARCH_SHMOBILE_LEGACY\")\"\n\n* tag 'renesas-sh-drivers-for-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas:\n  drivers: sh: compile drivers/sh/pm_runtime.c if ARCH_SHMOBILE_MULTI Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"Most of the changes are drivers fixes (rtl28xuu, fc2580, ov7670,\n  davinci, gspca, s5p-fimc and s5c73m3).\n\n  There is also a compat32 fix and one infoleak fixup at the media\n  controller\"\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  [media] V4L2: fix VIDIOC_CREATE_BUFS in 64- / 32-bit compatibility mode\n  [media] V4L2: ov7670: fix a wrong index, potentially Oopsing the kernel from user-space\n  [media] media-device: fix infoleak in ioctl media_enum_entities()\n  [media] fc2580: fix tuning failure on 32-bit arch\n  [media] Prefer gspca_sonixb over sn9c102 for all devices\n  [media] media: davinci: vpfe: make sure all the buffers unmapped and released\n  [media] staging: media: davinci: vpfe: make sure all the buffers are released\n  [media] media: davinci: vpbe_display: fix releasing of active buffers\n  [media] media: davinci: vpif_display: fix releasing of active buffers\n  [media] media: davinci: vpif_capture: fix releasing of active buffers\n  [media] s5p-fimc: Fix YUV422P depth\n  [media] s5c73m3: Add missing rename of v4l2_of_get_next_endpoint() function\n  [media] rtl28xxu: silence error log about disabled rtl2832_sdr module\n  [media] rtl28xxu: do not hard depend on staging SDR module Merge tag 'staging-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver fixes from Greg KH:\n \"Here are five staging driver fixes for 3.15-rc6 that resolve some\n  reported issues.  They are for the imx and rtl8723au drivers\"\n\n* tag 'staging-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: rtl8723au: Do not reset wdev->iftype in netdev_close()\n  staging: rtl8723au: Use correct pipe type for USB interrupts\n  imx-drm: imx-tve: correct DDC property name to 'ddc-i2c-bus'\n  imx-drm: imx-drm-core: skip components whose parent device is disabled\n  imx-drm: imx-drm-core: fix imx_drm_encoder_get_mux_id Merge tag 'driver-core-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fixes from Greg KH:\n \"Here are two driver core (well, sysfs) fixes for 3.15-rc6 that resolve\n  some reported issues and a regression from 3.13\"\n\n* tag 'driver-core-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  sysfs: make sure read buffer is zeroed\n  kernfs, sysfs, cgroup: restrict extra perm check on open to sysfs Merge tag 'pci-v3.15-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n \"These are fixes for an SHPCHP hotplug regression, a \"wait for pending\n  transaction\" problem (used in device reset paths), and an email\n  address update.\n\n  PCI device hotplug:\n    - Fix SHPCHP bus speed mismatch issue (Marcel Apfelbaum)\n\n  Miscellaneous:\n    - Fix pci_wait_for_pending_transaction() (Gavin Shan)\n    - Update email address (Ben Hutchings)\"\n\n* tag 'pci-v3.15-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: Wrong register used to check pending traffic\n  PCI: shpchp: Check bridge's secondary (not primary) bus speed\n  PCI: Update my email address Merge tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random\n\nPull /dev/random fix from Ted Ts'o:\n \"This fixes a BUG_ON-causing regression that was introduced during the\n  last merge window\"\n\n* tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random:\n  random: fix BUG_ON caused by accounting simplification Merge tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux\n\nPull clock framework fixes from Mike Turquette:\n \"Clock framework and driver fixes, all of which fix user-visible\n  regressions.\n\n  As usual most fixes are for platform-specific clock drivers, but there\n  are also two fixes to the clk core after recent changes to the way\n  that clock unregistration is handled\"\n\n* tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux:\n  clk: tegra: Fix wrong value written to PLLE_AUX\n  clk: shmobile: clk-mstp: change to using clock-indices\n  clk: Fix slab corruption in clk_unregister()\n  clk: Fix double free due to devm_clk_register()\n  clk: socfpga: fix clock driver for 3.15\n  clk: divider: Fix best div calculation for power-of-two and table dividers\n  clk: bcm281xx: don't use unnamed structs or unions Merge tag 'spi-v3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fixes from Mark Brown:\n \"A few core fixes around outlying cases here, nothing that should\n  affect most users but useful fixes.  The diffstat is rather larger\n  than one might hope due some simple code motion in the fix for\n  !CONFIG_DMA, the actual meaningful change is much smaller.\n\n   - Fix handling of unsupported dual and quad mode support on slave\n     registration so that drivers that can degrade gracefully do so,\n     preventing regressions for drivers this is added.\n   - Fix build in !CONFIG_DMA cases following addition of generic DMA\n     mapping support.\n   - Fix error handling for queue creation which due to wider kernel\n     changes can be triggered more easily.\n   - A couple of driver specific fixes\"\n\n* tag 'spi-v3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi/pxa2xx: Prevent DMA from transferring too many bytes\n  spi: core: Don't destroy master queue if we fail to create it\n  spi: qup: Fix return value checking for pm_runtime_get_sync()\n  spi: core: Protect DMA code by #ifdef CONFIG_HAS_DMA\n  spi: core: Ignore unsupported Dual/Quad Transfer Mode bits Merge tag 'gpio-v3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fixes from Linus Walleij:\n - fix a null pointer bug in the ICH6 chipset driver\n - fix device tree registration for the mcp23s08 driver\n\n* tag 'gpio-v3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: mcp23s08: Bug fix of SPI device tree registration.\n  gpio: ich: set regs and reglen for i3100 and ich6 chipset Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull more cgroup fixes from Tejun Heo:\n \"Three more patches to fix cgroup_freezer breakage due to the recent\n  cgroup internal locking changes - an operation cgroup_freezer was\n  using now requires sleepable context and cgroup_freezer was invoking\n  that while holding a spin lock.  cgroup_freezer was using an overly\n  elaborate hierarchical locking scheme.\n\n  While it's possible to convert the hierarchical spinlocks directly to\n  mutexes, this patch simplifies the overall locking so that it uses a\n  global mutex.  This has the added benefit of avoiding iterating\n  potentially huge number of tasks under a spinlock.  While the patch is\n  on the larger side in the devel cycle, the changes made are mostly\n  straight-forward and the locking logic is a lot simpler afterwards\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: fix rcu_read_lock() leak in update_if_frozen()\n  cgroup_freezer: replace freezer->lock with freezer_mutex\n  cgroup: introduce task_css_is_root() Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Mostly device-specific fixes.  The only thing which isn't is the fix\n  for zpodd oops-on-detach bug\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  ahci: imx: PLL clock needs 100us to settle down\n  ata: pata_at91 only works on sam9\n  libata: clean up ZPODD when a port is detached\n  ahci: imx: software workaround for phy reset issue in resume\n  ahci: imx: add namespace for register enums\n  ahci: disable DEVSLP for Intel Valleyview Merge git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n \"This fixes a NULL pointer dereference on allocation failure in caam,\n  as well as a regression in the ctr mode on s390 that was added with\n  the recent concurrency fixes\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: s390 - fix aes,des ctr mode concurrency finding.\n  crypto: caam - add allocation failure handling in SPRINTFCAT macro Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull scsi target fixes from Nicholas Bellinger:\n \"This series include:\n\n   - Close race between iser-target network portal shutdown + accepting\n     new connection logins (sagi)\n   - Fix free-after-use regression in tcm_fc post conversion to\n     percpu-ida pre-allocation (nab)\n   - Explicitly disable Immediate + Unsolicited Data for iser-target\n     connections when T10-PI is enabled (sagi + nab)\n   - Allow pi_prot_type + emulate_write_cache attributes to be set to\n     zero regardless of backend support (andy)\n   - memory leak fix (mikulas)\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  target: fix memory leak on XCOPY\n  target: Don't allow setting WC emulation if device doesn't support\n  iscsi-target: Disable Immediate + Unsolicited Data with ISER Protection\n  tcm_fc: Fix free-after-use regression in ft_free_cmd\n  iscsi-target: Change BUG_ON to REJECT in iscsit_process_nop_out\n  Target/iscsi,iser: Avoid accepting transport connections during stop stage\n  Target/iser: Fix iscsit_accept_np and rdma_cm racy flow\n  Target/iser: Fix wrong connection requests list addition\n  target: Allow non-supporting backends to set pi_prot_type to 0 Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"Some I2C bugfixes for 3.15.  Typical stuff, I'd say\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: rcar: bail out on zero length transfers\n  i2c: qup: Fix pm_runtime_get_sync usage\n  i2c: s3c2410: resume race fix\n  i2c: nomadik: Don't use IS_ERR for devm_ioremap\n  i2c: designware: Mask all interrupts during i2c controller enable Merge tag 'pm+acpi-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"Still fixing regressions (partly by reverting commits that broke\n  things for people), fixing other stable-candidate bugs and adding some\n  blacklist entries for ACPI video and _OSI.\n\n  Two ACPICA regression fixes (one recent and one for a 3.14 commit), a\n  fix for an ACPI-related regression in TPM (introduced in 3.14), a\n  revert of the ACPI AC driver conversion in 3.13 that went wrong for an\n  unknown reason, two reverts of commits that attempted to remove an old\n  user space interface in /proc and broke some utilities, in 3.13 too, a\n  fix for a CPU hotplug bug in the ACPI processor driver (stable\n  material), two (stable candidate) fixes for intel_pstate and a few new\n  blacklist entries, mostly for systems that shipped with Windows 8.\n\n  Specifics:\n\n   - ACPICA fix for a stale pointer access introduced by a recent commit\n     in the XSDT validation code from Lv Zheng.\n\n   - ACPICA fix for the default value of the command line switch to\n     favor 32-bit FADT addresses (in case there's a conflict between a\n     64-bit and a 32-bit address).  The previous default was that the\n     32-bit version would take precedence and we tried to change it to\n     the other way around and it didn't work.  From Lv Zheng.\n\n   - A TPM commit related to ACPI _DSM in 3.14 caused the driver to\n     refuse to load if a specific _DSM was missing and that broke resume\n     from system suspend on Chromebooks that require the TPM hardware to\n     be restored to a working state during resume by the OS.  Restore\n     the old behavior to load the driver if the _DSM in question is not\n     present, but prevent it from using the feature the _DSM is for.\n\n   - ACPI AC driver conversion in 3.13 broke thermal management on at\n     least one machine and has to be reverted.  From Guenter Roeck.\n\n   - Two reverts of 3.13 commits that attempted to remove the old ACPI\n     battery interface in /proc, but turned out to break some utilities\n     still using that interface.  From Lan Tianyu.\n\n   - ACPI processor driver fix to prevent acpi_processor_add() from\n     modifying the CPU device's .offline field which leads to breakage\n     if the initial online of the CPU fails.  From Igor Mammedov.\n\n   - Two intel_pstate fixes, one to take a BayTrail documentation update\n     into account and one to avoid forcing the maximum P-state on init\n     which causes CPU PM trouble on systems with P-states coordination\n     when one of the CPU cores is initialized after an offline/online\n     cycle triggered by user space.  Both stable candidates, from Dirk\n     Brandewie.\n\n   - Fix for the ACPI video DMI blacklist entry for Dell Inspiron 7520\n     from Aaron Lu.\n\n   - Two new ACPI video blacklist entries for machines shipping with\n     Win8 that need to use native backlight so that it can be controlled\n     in a usual way (which doesn't work otherwise due bugs in the ACPI\n     tables) from Hans de Goede.\n\n   - Two ACPI _OSI quirks for systems that need them to work correctly\n     with Linux from Edward Lin and Hans de Goede\"\n\n* tag 'pm+acpi-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / video: Revert native brightness quirk for ThinkPad T530\n  intel_pstate: remove setting P state to MAX on init\n  ACPICA: Tables: Restore old behavor to favor 32-bit FADT addresses.\n  ACPI / video: correct DMI tag for Dell Inspiron 7520\n  intel_pstate: Set turbo VID for BayTrail\n  ACPI / TPM: Fix resume regression on Chromebooks\n  ACPI / proc: Do not say when /proc interfaces will be deleted in Kconfig\n  ACPI / processor: do not mark present at boot but not onlined CPU as onlined\n  ACPI: Revert \"ACPI / AC: convert ACPI ac driver to platform bus\"\n  ACPI / blacklist: Add dmi_enable_osi_linux quirk for Asus EEE PC 1015PX\n  ACPI: blacklist win8 OSI for Dell Inspiron 7737\n  ACPI / video: Add use_native_backlight quirks for more systems\n  ACPI: Revert \"ACPI / Battery: Remove battery's proc directory\"\n  ACPI: Revert \"ACPI: Remove CONFIG_ACPI_PROCFS_POWER and cm_sbsc.c\"\n  ACPICA: Tables: Fix invalid pointer accesses in acpi_tb_parse_root_table(). Merge tag 'dm-3.15-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n \"A dm-crypt fix for a cpu hotplug crash that switches from using\n  per-cpu data to a mempool allocation (which offers allocation with cpu\n  locality, and there is no inter-cpu communication on slab allocation).\n\n  A couple dm-thinp stable fixes to address \"out-of-data-space\" issues.\n\n  A dm-multipath fix for a LOCKDEP warning introduced in 3.15-rc1\"\n\n* tag 'dm-3.15-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm mpath: fix lock order inconsistency in multipath_ioctl\n  dm thin: add timeout to stop out-of-data-space mode holding IO forever\n  dm thin: allow metadata commit if pool is in PM_OUT_OF_DATA_SPACE mode\n  dm crypt: fix cpu hotplug crash by removing per-cpu structure Merge tag 'dt-for-linus' of git://git.secretlab.ca/git/linux\n\nPull device tree fixes from Grant Likely:\n \"Drivercore bugfixes for v3.15\n\n  This branch contains bug fixes important to get into v3.15.  There is\n  a fix for modifying properties seen during early boot, a fix for an\n  incorrect prototype when CONFIG_OF=n, and a couple of corrections to\n  device tree memory nodes on a few platforms\"\n\n* tag 'dt-for-linus' of git://git.secretlab.ca/git/linux:\n  mips: dts: Fix missing device_type=\"memory\" property in memory nodes\n  arm: dts: Fix missing device_type=\"memory\" for ste-ccu8540\n  of: fix CONFIG_OF=n prototype of of_node_full_name()\n  of: make of_update_property() usable earlier in the boot process Merge tag 'sound-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Unfortunately this update became bigger than previous pull requests,\n  which is almost a pattern in rc5-6.  But, the only obvious big changes\n  are for the new Intel DSP ASoC drivers, so the impact must be fairly\n  limited.\n\n  Other than that, usual small fixes in various fields: HD-audio, ASoC\n  core and ASoC fsl and codec drivers\"\n\n* tag 'sound-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (26 commits)\n  ALSA: sb_mixer: missing return statement\n  ASoC: wm8962: Update register CLASS_D_CONTROL_1 to be non-volatile\n  ASoC: Intel: Fix Baytrail SST DSP firmware loading\n  ALSA: hda - mask buggy stream DMA0 for Broadwell display controller\n  ALSA: hda - Add new GPU codec ID to snd-hda\n  ASoC: fsl_esai: Set PCRC and PRRC registers at the end of hw_params()\n  ASoC: fsl_esai: Only bypass sck_div for EXTAL source\n  ASoC: fsl_esai: Fix incorrect condition within ratio range check for FP\n  ASoC: dapm: Fix SUSPEND -> OFF bias sequence\n  ASoC: dapm: Skip CODEC<->CODEC links in connect_dai_link_widgets()\n  ASoC: pcm: Fix incorrect condition check for case SNDRV_PCM_TRIGGER_SUSPEND\n  ALSA: hda - add headset mic detect quirks for three Dell laptops\n  ASoC: Update Cirrus Logic CODEC maintainers.\n  ASoC: Intel: Fix block offset calculations.\n  ASoC: Intel: Fix check for pdata usage before dereference.\n  ASoC: Intel: Fix stream position pointer.\n  ASoC: Intel: Fix allow hw_params to be called more than once.\n  ASoC: Intel: Fix Audio DSP usage when IOMMU is enabled.\n  ASoC: Intel: Fix Haswell/Broadwell DSP page table creation.\n  ASoC: Intel: Fix allocated block list usage when adding blocks.\n  ... Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"MIPS fixes for various loose ends:\n\n   - Fix workarounds for R4000 erratum.\n   - Patch up DEC, Siemens-Nixdorf and Loongson hardware support.\n   - Wire up renameat2 syscall.\n   - Delete unused file - it was causing false warnings from maintenance\n     scripts.\n   - Revert a patch because it's functionality is now implemented twice\n     which causes superfluous /proc/cpuinfo output.\n   - Fix a microMIPS regression\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: mm: Fix broken microMIPS kernel regression.\n  MIPS: Add new AUDIT_ARCH token for the N32 ABI on MIPS64\n  MIPS: Wire up renameat2 syscall.\n  MIPS: inst.h: Rename BITFIELD_FIELD to __BITFIELD_FIELD.\n  MIPS: Remove file missed when removing rm9k support a while ago.\n  MIPS/loongson2_cpufreq: Fix CPU clock rate setting\n  MIPS: Loongson: No need to select GENERIC_HARDIRQS_NO__DO_IRQ\n  MIPS: csum_partial.S CPU_DADDI_WORKAROUNDS bug fix\n  MIPS: __strncpy_from_user_asm CPU_DADDI_WORKAROUNDS bug fix\n  MIPS: __delay CPU_DADDI_WORKAROUNDS bug fix\n  MIPS: DEC/SNI: O32 wrapper stack switching fixes\n  MIPS: DEC: Bus error handler <asm/cpu-type.h> fixes\n  MAINTAINERS: TURBOchannel: Update entry\n  Revert \"MIPS: MT: proc: Add support for printing VPE and TC ids\" Merge branch 'parisc-3.15-4' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n \"There are two patches in here:\n\n  The first patch greatly improves latency and corrects the memory\n  ordering in our light-weight atomic locking syscall.\n\n  The second patch ratelimits printing of userspace segfaults in the\n  same way as it's done on other platforms.  This fixes a possible DOS\n  on parisc since it prevents the syslog to grow too fast.  For example,\n  when the debian acl2 package was built on our debian buildd servers,\n  this package produced lots of gigabytes in syslog in very short time\n  and thus filled our harddisks, which then turned the server nearly\n  completely unaccessible and unresponsive\"\n\n* 'parisc-3.15-4' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Improve LWS-CAS performance\n  parisc: ratelimit userspace segfault printing Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull two arm64 fixes from Catalin Marinas:\n - arm64 migrate_irqs() fix following commit ffde1de64012 (irqchip: Gic:\n   Support forced affinity setting)\n - fix arm64 pud_huge() to return 0 when only 2 levels page tables are\n   used (__PAGETABLE_PMD_FOLDED defined and pmd_huge already covers\n   block entries at the first level), otherwise KVM gets confused\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: fix pud_huge() for 2-level pagetables\n  arm64: use cpu_online_mask when using forced irq_set_affinity Merge tag 'metag-for-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag\n\nPull Metag architecture and related fixes from James Hogan:\n \"Mostly fixes for metag and parisc relating to upgrowing stacks.\n\n   - Fix missing compiler barriers in metag memory barriers.\n   - Fix BUG_ON on metag when RLIMIT_STACK hard limit is increased\n     beyond safe value.\n   - Make maximum stack size configurable.  This reduces the default\n     user stack size back to 80MB (especially on parisc after their\n     removal of _STK_LIM_MAX override).  This only affects metag and\n     parisc.\n   - Remove metag _STK_LIM_MAX override to match other arches and follow\n     parisc, now that it is safe to do so (due to the BUG_ON fix\n     mentioned above).\n   - Finally now that both metag and parisc _STK_LIM_MAX overrides have\n     been removed, it makes sense to remove _STK_LIM_MAX altogether\"\n\n* tag 'metag-for-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag:\n  asm-generic: remove _STK_LIM_MAX\n  metag: Remove _STK_LIM_MAX override\n  parisc,metag: Do not hardcode maximum userspace stack size\n  metag: Reduce maximum stack size to 256MB\n  metag: fix memory barriers Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm/intel fixes from Dave Airlie:\n \"Just some intel fixes.\n\n  I have some radeon ones but I need to get some patches dropped from\n  the pull req\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/i915: Increase WM memory latency values on SNB\n  drm/i915: restore backlight precision when converting from ACPI\n  drm/i915: Use the first mode if there is no preferred mode in the EDID\n  drm/i915/dp: force eDP lane count to max available lanes on BDW\n  drm/i915/vlv: reset VLV media force wake request register\n  drm/i915/SDVO: For sysfs link put directory and target in correct order\n  drm/i915: use lane count and link rate from VBT as minimums for eDP\n  drm/i915: clean up VBT eDP link param decoding\n  drm/i915: consider the source max DP lane count too Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin.\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86-64, modify_ldt: Make support for 16-bit segments a runtime option\n  x86, mm, hugetlb: Add missing TLB page invalidation for hugetlb_cow()\n  x86, rdrand: When nordrand is specified, disable RDSEED as well Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"A single bug fix for a long standing issue:\n\n   - Updating the expiry value of a relative timer _after_ letting the\n     idle logic select a target cpu for the timer based on its stale\n     expiry value is outright stupid.  Thanks to Viresh for spotting the\n     brainfart\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  hrtimer: Set expiry time before switch_hrtimer_base() Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"Two small updates from the irq departement:\n\n   - Provide missing inline stub for a SMP only function\n\n   - Add sub-maintainer for the drivers/irqchip/ part of the irq\n     subsystem.  YAY!\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  MAINTAINERS: Add co-maintainer for drivers/irqchip\n  genirq: Provide irq_force_affinity fallback for non-SMP x86-64, modify_ldt: Make support for 16-bit segments a runtime option\n\nCheckin:\n\nb3b42ac2cbae x86-64, modify_ldt: Ban 16-bit segments on 64-bit kernels\n\ndisabled 16-bit segments on 64-bit kernels due to an information\nleak.  However, it does seem that people are genuinely using Wine to\nrun old 16-bit Windows programs on Linux.\n\nA proper fix for this (\"espfix64\") is coming in the upcoming merge\nwindow, but as a temporary fix, create a sysctl to allow the\nadministrator to re-enable support for 16-bit segments.\n\nIt adds a \"/proc/sys/abi/ldt16\" sysctl that defaults to zero (off). If\nyou hit this issue and care about your old Windows program more than\nyou care about a kernel stack address information leak, you can do\n\n   echo 1 > /proc/sys/abi/ldt16\n\nas root (add it to your startup scripts), and you should be ok.\n\nThe sysctl table is only added if you have COMPAT support enabled on\nx86-64, but I assume anybody who runs old windows binaries very much\ndoes that ;)\n\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>\nLink: http://lkml.kernel.org/r/CA%2B55aFw9BPoD10U1LfHbOMpHWZkvJTkMcfCs9s3urPr1YyWBxw@mail.gmail.com\nCc: <stable@vger.kernel.org> Merge tag 'locks-v3.15-4' of git://git.samba.org/jlayton/linux\n\nPull file locking fix from Jeff Layton:\n \"Fix for regression in handling of F_GETLK commands\"\n\n* tag 'locks-v3.15-4' of git://git.samba.org/jlayton/linux:\n  locks: only validate the lock vs. f_mode in F_SETLK codepaths Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fixes from Guenter Roeck:\n \"Fix resource leak as well as broken store function in emc1403 driver,\n  and add support for additional chip revisions\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (emc1403) Support full range of known chip revision numbers\n  hwmon: (emc1403) Fix resource leak on module unload\n  hwmon: (emc1403) fix inverted store_hyst() Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull a percpu fix from Tejun Heo:\n \"Fix for a percpu allocator bug where it could try to kfree() a memory\n  region allocated using vmalloc().  The bug has been there for years\n  now and is unlikely to have ever triggered given the size of struct\n  pcpu_chunk.  It's still theoretically possible and the fix is simple\n  and safe enough, so the patch is marked with -stable\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:\n  percpu: make pcpu_alloc_chunk() use pcpu_mem_free() instead of kfree() Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fixes from Tejun Heo:\n \"Fixes for two bugs in workqueue.\n\n  One is exiting with internal mutex held in a failure path of\n  wq_update_unbound_numa().  The other is a subtle and unlikely\n  use-after-possible-last-put in the rescuer logic.  Both have been\n  around for quite some time now and are unlikely to have triggered\n  noticeably often.  All patches are marked for -stable backport\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: fix a possible race condition between rescuer and pwq-release\n  workqueue: make rescuer_thread() empty wq->maydays list before exiting\n  workqueue: fix bugs in wq_update_unbound_numa() failure path Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fixes from Tejun Heo:\n \"During recent restructuring, device_cgroup unified config input check\n  and enforcement logic; unfortunately, it turned out to share too much.\n  Aristeu's patches fix the breakage and marked for -stable backport.\n\n  The other two patches are fallouts from kernfs conversion.  The blkcg\n  change is temporary and will go away once kernfs internal locking gets\n  simplified (patches pending)\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  blkcg: use trylock on blkcg_pol_mutex in blkcg_reset_stats()\n  device_cgroup: check if exception removal is allowed\n  device_cgroup: fix the comment format for recently added functions\n  device_cgroup: rework device access check and exception checking\n  cgroup: fix the retry path of cgroup_mount() Merge tag 'stable/for-linus-3.15-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen bug fixes from David Vrabel:\n - Fix arm64 crash on boot.\n - Quiet a noisy arm build warning (virt_to_pfn() redefined).\n\n* tag 'stable/for-linus-3.15-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  arm64: introduce virt_to_pfn\n  xen/events/fifo: correctly align bitops\n  arm/xen: Remove definiition of virt_to_pfn in asm/xen/page.h Merge branch 'for-linus' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fix from Steve French:\n \"Small cifs fix for metadata caching\"\n\n* 'for-linus' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: fix actimeo=0 corner case when cifs_i->time == jiffies Merge tag 'md/3.15-fixes' of git://neil.brown.name/md\n\nPull md bugfixes from Neil Brown:\n \"Two bugfixes for md in 3.15\n\n  Both tagged for -stable\"\n\n* tag 'md/3.15-fixes' of git://neil.brown.name/md:\n  md: avoid possible spinning md thread at shutdown.\n  md/raid10: call wait_barrier() for each request submitted. Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"Seems like we've had more fixes than usual this release cycle, but\n  there's nothing in particular that we're doing differently.  Perhaps\n  it's just one of those cycles where more people are finding more\n  regressions (and/or that the latency of when people actually test\n  what's been in the tree for a while is catching up so that we get the\n  bug reports now).\n\n  The bigger changes here are are for TI and Marvell platforms:\n   * Timing changes for GPMC (generic localbus) on OMAP causing some\n     largeish DTS deltas.\n   * Fixes to window allocation on PCI for mvebu touching drivers/\n     stuff.  Patches have acks from subsystem maintainers where needed.\n   * A fix from Thomas for a botched DT conversion in drivers/edma.\n\n  There's a handful of other fixes for the above platforms as well as\n  sunxi, at91, i.MX.  I also included a MAINTAINER update for Broadcom,\n  and a trivial move of a binding doc.\n\n  I know you said you'd be offline this week, but I might as well post\n  it for when you return.  :)\"\n\nI'm not quite offline yet.  Doing a few pulls in the last hour before my\ninternet goes away..\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (31 commits)\n  MAINTAINERS: update Broadcom ARM tree location and add an SoC family\n  ARM: dts: i.MX53: Fix ipu register space size\n  ARM: dts: kirkwood: fix mislocated pcie-controller nodes\n  ARM: sunxi: Enable GMAC in sunxi_defconfig\n  ARM: common: edma: Fix xbar mapping\n  ARM: sun7i: Fix i2c4 base address\n  ARM: Kirkwood: T5325: Fix double probe of Codec\n  ARM: mvebu: enable the SATA interface on Armada 375 DB\n  ARM: mvebu: specify I2C bus frequency on Armada 370 DB\n  ARM: mvebu: use qsgmii phy-mode for Armada XP GP interfaces\n  ARM: mvebu: fix NOR bus-width in Armada XP OpenBlocks AX3 Device Tree\n  ARM: mvebu: fix NOR bus-width in Armada XP DB Device Tree\n  ARM: mvebu: fix NOR bus-width in Armada XP GP Device Tree\n  ARM: dts: AM3517: Disable absent IPs inherited from OMAP3\n  ARM: dts: OMAP2: Fix interrupts for OMAP2420 mailbox\n  ARM: dts: OMAP5: Add mailbox dt node to fix boot warning\n  ARM: OMAP5: Switch to THUMB mode if needed on secondary CPU\n  ARM: dts: am437x-gp-evm: Do not reset gpio5\n  ARM: dts: omap3-igep0020: use SMSC9221 timings\n  PCI: mvebu: split PCIe BARs into multiple MBus windows when needed\n  ... Merge branch 'for-3.15' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd fixes from Bruce Fields.\n\n* 'for-3.15' of git://linux-nfs.org/~bfields/linux:\n  NFSD: Call ->set_acl with a NULL ACL structure if no entries\n  NFSd: call rpc_destroy_wait_queue() from free_client()\n  NFSd: Move default initialisers from create_client() to alloc_client() Merge branch 'akpm' (incoming from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"4 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm, thp: close race between mremap() and split_huge_page()\n  mm: postpone the disabling of kmemleak early logging\n  MAINTAINERS: update maintainership of LTP\n  drivers/rtc/rtc-hym8563.c: set uie_unsupported Linux 3.15-rc5 Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"A somewhat unpleasantly large collection of small fixes.  The big ones\n  are the __visible tree sweep and a fix for 'earlyprintk=efi,keep'.  It\n  was using __init functions with predictably suboptimal results.\n\n  Another key fix is a build fix which would produce output that simply\n  would not decompress correctly in some configuration, due to the\n  existing Makefiles picking up an unfortunate local label and mistaking\n  it for the global symbol _end.\n\n  Additional fixes include the handling of 64-bit numbers when setting\n  the vdso data page (a latent bug which became manifest when i386\n  started exporting a vdso with time functions), a fix to the new MSR\n  manipulation accessors which would cause features to not get properly\n  unblocked, a build fix for 32-bit userland, and a few new platform\n  quirks\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, vdso, time: Cast tv_nsec to u64 for proper shifting in update_vsyscall()\n  x86: Fix typo in MSR_IA32_MISC_ENABLE_LIMIT_CPUID macro\n  x86: Fix typo preventing msr_set/clear_bit from having an effect\n  x86/intel: Add quirk to disable HPET for the Baytrail platform\n  x86/hpet: Make boot_hpet_disable extern\n  x86-64, build: Fix stack protector Makefile breakage with 32-bit userland\n  x86/reboot: Add reboot quirk for Certec BPC600\n  asmlinkage: Add explicit __visible to drivers/*, lib/*, kernel/*\n  asmlinkage, x86: Add explicit __visible to arch/x86/*\n  asmlinkage: Revert \"lto: Make asmlinkage __visible\"\n  x86, build: Don't get confused by local symbols\n  x86/efi: earlyprintk=efi,keep fix Merge tag 'xfs-for-linus-3.15-rc5' of git://oss.sgi.com/xfs/xfs\n\nPull xfs fixes from Dave Chinner:\n \"The main fix is adding support for default ACLs on O_TMPFILE opened\n  inodes to bring XFS into line with other filesystems.  Metadata CRCs\n  are now also considered well enough tested to be fully supported, so\n  we're removing the shouty warnings issued at mount time for\n  filesystems with that format.  And there's transaction block\n  reservation overrun fix.\n\n  Summary:\n   - fix a remote attribute size calculation bug that leads to a\n     transaction overrun\n   - add default ACLs to O_TMPFILE files\n   - Remove the EXPERIMENTAL tag from filesystems with metadata CRC\n     support\"\n\n* tag 'xfs-for-linus-3.15-rc5' of git://oss.sgi.com/xfs/xfs:\n  xfs: remote attribute overwrite causes transaction overrun\n  xfs: initialize default acls for ->tmpfile()\n  xfs: fully support v5 format filesystems Merge tag 'trace-fixes-v3.15-rc4-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"This contains two fixes.\n\n  The first is a long standing bug that causes bogus data to show up in\n  the refcnt field of the module_refcnt tracepoint.  It was introduced\n  by a merge conflict resolution back in 2.6.35-rc days.\n\n  The result should be 'refcnt = incs - decs', but instead it did\n  'refcnt = incs + decs'.\n\n  The second fix is to a bug that was introduced in this merge window\n  that allowed for a tracepoint funcs pointer to be used after it was\n  freed.  Moving the location of where the probes are released solved\n  the problem\"\n\n* tag 'trace-fixes-v3.15-rc4-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracepoint: Fix use of tracepoint funcs after rcu free\n  trace: module: Maintain a valid user count Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input subsystem fixes from Dmitry Torokhov:\n \"Just a few fixups to various drivers\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: elantech - fix touchpad initialization on Gigabyte U2442\n  Input: tca8418 - fix loading this driver as a module from a device tree\n  Input: bma150 - extend chip detection for bma180\n  Input: atkbd - fix keyboard not working on some LG laptops\n  Input: synaptics - add min/max quirk for ThinkPad Edge E431 Merge tag 'sound-3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A bunch of small fixes for USB-audio and HD-audio, where most of them\n  are for regressions: USB-audio PM fixes, ratelimit annoyance fix, HDMI\n  offline state fix, and a couple of device-specific quirks\"\n\n* tag 'sound-3.15-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - hdmi: Set converter channel count even without sink\n  ALSA: usb-audio: work around corrupted TEAC UD-H01 feedback data\n  ALSA: usb-audio: Fix deadlocks at resuming\n  ALSA: usb-audio: Save mixer status only once at suspend\n  ALSA: usb-audio: Prevent printk ratelimiting from spamming kernel log while DEBUG not defined\n  ALSA: hda - add headset mic detect quirk for a Dell laptop Merge tag 'mfd-mmc-fixes-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull mmc/rtsx revert from Lee Jones.\n\n* tag 'mfd-mmc-fixes-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd:\n  mmc: rtsx: Revert \"mmc: rtsx: add support for pre_req and post_req\" Merge tag 'for-linus-20140507' of git://git.infradead.org/linux-mtd\n\nPull MTD fix from Brian Norris:\n \"A single update for Keystone SoC's, whose NAND controller does not\n  support subpage programming\"\n\n* tag 'for-linus-20140507' of git://git.infradead.org/linux-mtd:\n  mtd: davinci-nand: disable subpage write for keystone-nand Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n\n - fix a small bug in computation of report size, which might cause some\n   devices (Atmel touchpad found on the Samsung Ativ 9) to reject\n   reports with otherwise valid contents\n\n - a few device-ID specific quirks/additions piggy-backing on top of it\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: sensor-hub: Add in quirk for sensor hub in Lenovo Ideapad Yogas\n  HID: add NO_INIT_REPORTS quirk for Synaptics Touch Pad V 103S\n  HID: core: fix computation of the report size\n  HID: multitouch: add support of EliteGroup 05D8 panels Merge branch 'drm-radeon-mullins' of git://people.freedesktop.org/~airlied/linux\n\nPull radeon mullins support from Dave Airlie:\n \"This is support for the new AMD mullins APU, it pretty much just adds\n  support to the driver in the all the right places, and is pretty low\n  risk wrt other GPUs\"\n\nOh well.  I guess it ends up fitting under \"support new hardware\" for\nmerging late.\n\n* 'drm-radeon-mullins' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: add pci ids for Mullins\n  drm/radeon: add Mullins VCE support\n  drm/radeon: modesetting updates for Mullins.\n  drm/radeon: dpm updates for KV/KB\n  drm/radeon: add Mullins dpm support.\n  drm/radeon: add Mullins UVD support.\n  drm/radeon: update cik init for Mullins.\n  drm/radeon: add Mullins chip family Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"radeon, i915 and nouveau fixes, all fixes for regressions or black\n  screens, or possible oopses\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: lower the ref * post PLL maximum\n  drm/radeon: check that we have a clock before PLL setup\n  drm/radeon: drm/radeon: add missing radeon_semaphore_free to error path\n  drm/radeon: Fix num_banks calculation for SI\n  agp: info leak in agpioc_info_wrap()\n  drm/gm107/gr: bump attrib cb size quite a bit\n  drm/nouveau: fix another lock unbalance in nouveau_crtc_page_flip\n  drm/nouveau/bios: fix shadowing from PROM on big-endian systems\n  drm/nouveau/acpi: allow non-optimus setups to load vbios from acpi\n  drm/radeon/dp: check for errors in dpcd reads\n  drm/radeon: avoid high jitter with small frac divs\n  drm/radeon: check buffer relocation offset\n  drm/radeon: use pflip irq on R600+ v2\n  drm/radeon/uvd: use lower clocks on old UVD to boot v2\n  drm/i915: don't try DP_LINK_BW_5_4 on HSW ULX\n  drm/i915: Sanitize the enable_ppgtt module option once\n  drm/i915: Break encoder->crtc link separately in intel_sanitize_crtc() Merge branch 'akpm' (incoming from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"13 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  agp: info leak in agpioc_info_wrap()\n  fs/affs/super.c: bugfix / double free\n  fanotify: fix -EOVERFLOW with large files on 64-bit\n  slub: use sysfs'es release mechanism for kmem_cache\n  revert \"mm: vmscan: do not swap anon pages just because free+file is low\"\n  autofs: fix lockref lookup\n  mm: filemap: update find_get_pages_tag() to deal with shadow entries\n  mm/compaction: make isolate_freepages start at pageblock boundary\n  MAINTAINERS: zswap/zbud: change maintainer email address\n  mm/page-writeback.c: fix divide by zero in pos_ratio_polynom\n  hugetlb: ensure hugepage access is denied if hugepages are not supported\n  slub: fix memcg_propagate_slab_attrs\n  drivers/rtc/rtc-pcf8523.c: fix month definition Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"dcache fixes + kvfree() (uninlined, exported by mm/util.c) + posix_acl\n  bugfix from hch\"\n\nThe dcache fixes are for a subtle LRU list corruption bug reported by\nMiklos Szeredi, where people inside IBM saw list corruptions with the\nLTP/host01 test.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  nick kvfree() from apparmor\n  posix_acl: handle NULL ACL in posix_acl_equiv_mode\n  dcache: don't need rcu in shrink_dentry_list()\n  more graceful recovery in umount_collect()\n  don't remove from shrink list in select_collect()\n  dentry_kill(): don't try to remove from shrink list\n  expand the call of dentry_lru_del() in dentry_kill()\n  new helper: dentry_free()\n  fold try_prune_one_dentry()\n  fold d_kill() and d_free()\n  fix races between __d_instantiate() and checks of dentry flags Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse\n\nPull fuse fixes from Miklos Szeredi:\n \"This adds ctime update in the new cached writeback mode and also\n  fixes/simplifies the mtime update handling.  Support for rename flags\n  (aka renameat2) is also added to the userspace API\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse:\n  fuse: add renameat2 support\n  fuse: clear MS_I_VERSION\n  fuse: clear FUSE_I_CTIME_DIRTY flag on setattr\n  fuse: trust kernel i_ctime only\n  fuse: remove .update_time\n  fuse: allow ctime flushing to userspace\n  fuse: fuse: add time_gran to INIT_OUT\n  fuse: add .write_inode\n  fuse: clean up fsync\n  fuse: fuse: fallocate: use file_update_time()\n  fuse: update mtime on open(O_TRUNC) in atomic_o_trunc mode\n  fuse: update mtime on truncate(2)\n  fuse: do not use uninitialized i_mode\n  fuse: fix mtime update error in fsync\n  fuse: check fallocate mode\n  fuse: add __exit to fuse_ctl_cleanup Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n \"I've been auditing the THP support on sparc64 and found several bugs,\n  hopefully most of which are fixed completely here.\n\n  Also an RT kernel locking fix from Kirill Tkhai\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: Give more detailed information in {pgd,pmd}_ERROR() and kill pte_ERROR().\n  sparc64: Add basic validations to {pud,pmd}_bad().\n  sparc64: Use 'ILOG2_4MB' instead of constant '22'.\n  sparc64: Fix range check in kern_addr_valid().\n  sparc64: Fix top-level fault handling bugs.\n  sparc64: Handle 32-bit tasks properly in compute_effective_address().\n  sparc64: Don't use _PAGE_PRESENT in pte_modify() mask.\n  sparc64: Fix hex values in comment above pte_modify().\n  sparc64: Fix bugs in get_user_pages_fast() wrt. THP.\n  sparc64: Fix huge PMD invalidation.\n  sparc64: Fix executable bit testing in set_pmd_at() paths.\n  sparc64: Normalize NMI watchdog logging and behavior.\n  sparc64: Make itc_sync_lock raw\n  sparc64: Fix argument sign extension for compat_sys_futex(). Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) e1000e computes header length incorrectly wrt vlans, fix from Vlad\n    Yasevich.\n\n 2) ns_capable() check in sock_diag netlink code, from Andrew\n    Lutomirski.\n\n 3) Fix invalid queue pairs handling in virtio_net, from Amos Kong.\n\n 4) Checksum offloading busted in sxgbe driver due to incorrect\n    descriptor layout, fix from Byungho An.\n\n 5) Fix build failure with SMC_DEBUG set to 2 or larger, from Zi Shen\n    Lim.\n\n 6) Fix uninitialized A and X registers in BPF interpreter, from Alexei\n    Starovoitov.\n\n 7) Fix arch dependencies of candence driver.\n\n 8) Fix netlink capabilities checking tree-wide, from Eric W Biederman.\n\n 9) Don't dump IFLA_VF_PORTS if netlink request didn't ask for it in\n    IFLA_EXT_MASK, from David Gibson.\n\n10) IPV6 FIB dump restart doesn't handle table changes that happen\n    meanwhile, causing the code to loop forever or emit dups, fix from\n    Kumar Sandararajan.\n\n11) Memory leak on VF removal in bnx2x, from Yuval Mintz.\n\n12) Bug fixes for new Altera TSE driver from Vince Bridgers.\n\n13) Fix route lookup key in SCTP, from Xugeng Zhang.\n\n14) Use BH blocking spinlocks in SLIP, as per a similar fix to CAN/SLCAN\n    driver.  From Oliver Hartkopp.\n\n15) TCP doesn't bump retransmit counters in some code paths, fix from\n    Eric Dumazet.\n\n16) Clamp delayed_ack in tcp_cubic to prevent theoretical divides by\n    zero.  Fix from Liu Yu.\n\n17) Fix locking imbalance in error paths of HHF packet scheduler, from\n    John Fastabend.\n\n18) Properly reference the transport module when vsock_core_init() runs,\n    from Andy King.\n\n19) Fix buffer overflow in cdc_ncm driver, from Bjørn Mork.\n\n20) IP_ECN_decapsulate() doesn't see a correct SKB network header in\n    ip_tunnel_rcv(), fix from Ying Cai.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (132 commits)\n  net: macb: Fix race between HW and driver\n  net: macb: Remove 'unlikely' optimization\n  net: macb: Re-enable RX interrupt only when RX is done\n  net: macb: Clear interrupt flags\n  net: macb: Pass same size to DMA_UNMAP as used for DMA_MAP\n  ip_tunnel: Set network header properly for IP_ECN_decapsulate()\n  e1000e: Restrict MDIO Slow Mode workaround to relevant parts\n  e1000e: Fix issue with link flap on 82579\n  e1000e: Expand workaround for 10Mb HD throughput bug\n  e1000e: Workaround for dropped packets in Gig/100 speeds on 82579\n  net/mlx4_core: Don't issue PCIe speed/width checks for VFs\n  net/mlx4_core: Load the Eth driver first\n  net/mlx4_core: Fix slave id computation for single port VF\n  net/mlx4_core: Adjust port number in qp_attach wrapper when detaching\n  net: cdc_ncm: fix buffer overflow\n  Altera TSE: ALTERA_TSE should depend on HAS_DMA\n  vsock: Make transport the proto owner\n  net: sched: lock imbalance in hhf qdisc\n  net: mvmdio: Check for a valid interrupt instead of an error\n  net phy: Check for aneg completion before setting state to PHY_RUNNING\n  ... Merge tag 'usb-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are some small fixes and device ids for 3.15-rc4.\n\n  All have been in linux-next just fine\"\n\n* tag 'usb-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  USB: Nokia 5300 should be treated as unusual dev\n  USB: Nokia 305 should be treated as unusual dev\n  fsl-usb: do not test for PHY_CLK_VALID bit on controller version 1.6\n  usb: storage: shuttle_usbat: fix discs being detected twice\n  usb: qcserial: add a number of Dell devices\n  USB: OHCI: fix problem with global suspend on ATI controllers\n  usb: gadget: at91-udc: fix irq and iomem resource retrieval\n  usb: phy: fsm: change \"|\" to \"||\" for condition OTG_STATE_A_WAIT_BCON at statemachine\n  usb: phy: fsm: update OTG HNP state transition Merge tag 'tty-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial fixes from Greg KH:\n \"Here are some tty and serial driver fixes for things reported\n  recently\"\n\n* tag 'tty-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  tty: Fix lockless tty buffer race\n  Revert \"tty: Fix race condition between __tty_buffer_request_room and flush_to_ldisc\"\n  drivers/tty/hvc: don't free hvc_console_setup after init\n  n_tty: Fix n_tty_write crash when echoing in raw mode\n  tty: serial: 8250_core.c Bug fix for Exar chips. Merge tag 'staging-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging / iio fixes from Greg KH:\n \"Here are some small IIO driver fixes for 3.15-rc4 that resolve some\n  reported issues\"\n\n* tag 'staging-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  iio: adc: Nothing in ADC should be a bool CONFIG\n  iio: exynos_adc: use indio_dev->dev structure to handle child nodes\n  iio:imu:mpu6050: Fixed segfault in Invensens MPU driver due to null dereference\n  staging:iio:ad2s1200 fix missing parenthesis in a for statment. Merge tag 'xtensa-next-20140503' of git://github.com/czankel/xtensa-linux\n\nPull Xtensa fixes from Chris Zankel:\n - Fixes allmodconfig, allnoconfig builds\n - Adds highmem support\n - Enables build-time exception table sorting.\n\n* tag 'xtensa-next-20140503' of git://github.com/czankel/xtensa-linux:\n  xtensa: ISS: don't depend on CONFIG_TTY\n  xtensa: xt2000: drop redundant sysmem initialization\n  xtensa: add support for KC705\n  xtensa: xtfpga: introduce SoC I/O bus\n  xtensa: add HIGHMEM support\n  xtensa: optimize local_flush_tlb_kernel_range\n  xtensa: dump sysmem from the bootmem_init\n  xtensa: handle memmap kernel option\n  xtensa: keep sysmem banks ordered in mem_reserve\n  xtensa: keep sysmem banks ordered in add_sysmem_bank\n  xtensa: split bootparam and kernel meminfo\n  xtensa: enable sorting extable at build time\n  xtensa: export __{invalidate,flush}_dcache_range\n  xtensa: Export __invalidate_icache_range Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull Ceph fixes from Sage Weil:\n \"First, there is a critical fix for the new primary-affinity function\n  that went into -rc1.\n\n  The second batch of patches from Zheng fix a range of problems with\n  directory fragmentation, readdir, and a few odds and ends for cephfs\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  ceph: reserve caps for file layout/lock MDS requests\n  ceph: avoid releasing caps that are being used\n  ceph: clear directory's completeness when creating file\n  libceph: fix non-default values check in apply_primary_affinity()\n  ceph: use fpos_cmp() to compare dentry positions\n  ceph: check directory's completeness before emitting directory entry Merge tag 'upstream-3.15-rc5' of git://git.infradead.org/linux-ubifs\n\nPull ubifs fixes from Artem Bityutskiy:\n \"This includes the following fixes:\n\n   - two real bug-fixes from Tanya for the still \"experimental\" UBI\n     fastmap feature\n   - a one-liner from Kees which hardens kernel security\n   - a small error-path fix, where we forget to free various resources\n     in case of failure - spotted by the 'smatch' tool\"\n\n* tag 'upstream-3.15-rc5' of git://git.infradead.org/linux-ubifs:\n  UBI: avoid workqueue format string leak\n  UBI: fix ubi free PEBs count calculation\n  UBI: fix error path in __wl_get_peb\n  UBIFS: fix remount error path Linux 3.15-rc4 Merge tag 'locks-v3.15-3' of git://git.samba.org/jlayton/linux\n\nPull file locking change from Jeff Layton:\n \"Only an email address change to the MAINTAINERS file\"\n\n* tag 'locks-v3.15-3' of git://git.samba.org/jlayton/linux:\n  MAINTAINERS: email address change for Jeff Layton Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n \"These are mostly arm64 fixes with an additional arm(64) platform fix\n  for the initialisation of vexpress clocks (the latter only affecting\n  arm64; the arch/arm64 code is SoC agnostic and does not rely on early\n  SoC-specific calls)\n\n   - vexpress platform clocks initialisation moved earlier following the\n     arm64 move of of_clk_init() call in a previous commit\n   - Default DMA ops changed to non-coherent to preserve compatibility\n     with 32-bit ARM DT files.  The \"dma-coherent\" property can be used\n     to explicitly mark a device coherent.  The Applied Micro DT file\n     has been updated to avoid DMA cache maintenance for the X-Gene SATA\n     controller (the only arm64 related driver with such assumption in\n     -rc mainline)\n   - Fixmap correction for earlyprintk\n   - kern_addr_valid() fix for huge pages\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  vexpress: Initialise the sysregs before setting up the clocks\n  arm64: Mark the Applied Micro X-Gene SATA controller as DMA coherent\n  arm64: Use bus notifiers to set per-device coherent DMA ops\n  arm64: Make default dma_ops to be noncoherent\n  arm64: fixmap: fix missing sub-page offset for earlyprintk\n  arm64: Fix for the arm64 kern_addr_valid() function Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"This is two patches both fixing bugs in drivers (virtio-scsi and\n  mpt2sas) causing an oops in certain circumstances\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  [SCSI] virtio-scsi: Skip setting affinity on uninitialized vq\n  [SCSI] mpt2sas: Don't disable device twice at suspend. Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"This udpate delivers:\n\n   - A fix for dynamic interrupt allocation on x86 which is required to\n     exclude the GSI interrupts from the dynamic allocatable range.\n\n     This was detected with the newfangled tablet SoCs which have GPIOs\n     and therefor allocate a range of interrupts.  The MSI allocations\n     already excluded the GSI range, so we never noticed before.\n\n   - The last missing set_irq_affinity() repair, which was delayed due\n     to testing issues\n\n   - A few bug fixes for the armada SoC interrupt controller\n\n   - A memory allocation fix for the TI crossbar interrupt controller\n\n   - A trivial kernel-doc warning fix\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqchip: irq-crossbar: Not allocating enough memory\n  irqchip: armanda: Sanitize set_irq_affinity()\n  genirq: x86: Ensure that dynamic irq allocation does not conflict\n  linux/interrupt.h: fix new kernel-doc warnings\n  irqchip: armada-370-xp: Fix releasing of MSIs\n  irqchip: armada-370-xp: implement the ->check_device() msi_chip operation\n  irqchip: armada-370-xp: fix invalid cast of signed value into unsigned variable Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"This update brings along:\n\n   - Two fixes for long standing bugs in the hrtimer code, one which\n     prevents remote enqueuing and the other preventing arbitrary delays\n     after a interrupt hang was detected\n\n   - A fix in the timer wheel which prevents math overflow\n\n   - A fix for a long standing issue with the architected ARM timer\n     related to the C3STOP mechanism.\n\n   - A trivial compile fix for nspire SoC clocksource\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  timer: Prevent overflow in apply_slack\n  hrtimer: Prevent remote enqueue of leftmost timers\n  hrtimer: Prevent all reprogramming if hang detected\n  clocksource: nspire: Fix compiler warning\n  clocksource: arch_arm_timer: Fix age-old arch timer C3STOP detection issue Merge tag 'trace-fixes-v3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fix from Steven Rostedt:\n \"This is a small fix where the trigger code used the wrong\n  rcu_dereference().  It required rcu_dereference_sched() instead of the\n  normal rcu_dereference().  It produces a nasty RCU lockdep splat due\n  to the incorrect rcu notation\"\n\nAcked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>\n\n* tag 'trace-fixes-v3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Use rcu_dereference_sched() for trace event triggers Merge tag 'pm+acpi-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"A bunch of regression fixes this time.  They fix two regressions in\n  the PNP subsystem, one in the ACPI processor driver and one in the\n  ACPI EC driver, four cpufreq driver regressions and an unrelated bug\n  in one of the drivers.  The regressions are recent or introduced in\n  3.14.\n\n  Specifics:\n\n   - There are two bugs in the ACPI PNP core that cause errors to be\n     returned if optional ACPI methods are not present.  After an ACPI\n     core change made in 3.14 one of those errors leads to serial port\n     suspend failures on some systems.  Fix from Rafael J Wysocki.\n\n   - A recently added PNP quirk related to Intel chipsets intorduced a\n     build error in unusual configurations (PNP without PCI).  Fix from\n     Bjorn Helgaas.\n\n   - An ACPI EC workaround related to system suspend on Samsung machines\n     added in 3.14 introduced a race causing some valid EC events to be\n     discarded.  Fix from Kieran Clancy.\n\n   - The acpi-cpufreq driver fails to load on some systems after a 3.14\n     commit related to APIC ID parsing that overlooked one corner case.\n     Fix from Lan Tianyu.\n\n   - Fix for a recently introduced build problem in the ppc-corenet\n     cpufreq driver from Tim Gardner.\n\n   - A recent cpufreq core change to ensure serialization of frequency\n     transitions for drivers with a ->target_index() callback overlooked\n     the fact that some of those drivers had been doing operations\n     introduced by it into the core already by themselves.  That\n     resulted in a mess in which the core and the drivers try to do the\n     same thing and block each other which leads to deadlocks.  Fixes\n     for the powernow-k7, powernow-k6, and longhaul cpufreq drivers from\n     Srivatsa S Bhat.\n\n   - Fix for a computational error in the powernow-k6 cpufreq driver\n     from Srivatsa S Bhat\"\n\n* tag 'pm+acpi-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / processor: Fix failure of loading acpi-cpufreq driver\n  PNP / ACPI: Do not return errors if _DIS or _SRS are not present\n  PNP: Fix compile error in quirks.c\n  ACPI / EC: Process rather than discard events in acpi_ec_clear\n  cpufreq: ppc-corenet-cpufreq: Fix __udivdi3 modpost error\n  cpufreq: powernow-k7: Fix double invocation of cpufreq_freq_transition_begin/end\n  cpufreq: powernow-k6: Fix double invocation of cpufreq_freq_transition_begin/end\n  cpufreq: powernow-k6: Fix incorrect comparison with max_multipler\n  cpufreq: longhaul: Fix double invocation of cpufreq_freq_transition_begin/end Merge tag 'dt-for-linus' of git://git.secretlab.ca/git/linux\n\nPull driver core deferred probe fix from Grant Likely:\n \"Drivercore race condition fix (exposed by devicetree)\n\n  This branch fixes a bug where a device can get stuck in the deferred\n  list even though all its dependencies are met.  The bug has existed\n  for a long time, but new platform conversions to device tree have\n  exposed it.  This patch is needed to get those platforms working.\n\n  This was the pending bug fix I mentioned in my previous pull request.\n  Normally this would go through Greg's tree seeing that it is a\n  drivercore change, but devicetree exposes the problem.  I've discussed\n  with Greg and he okayed me asking you to pull directly\"\n\n* tag 'dt-for-linus' of git://git.secretlab.ca/git/linux:\n  drivercore: deferral race condition fix Merge tag 'dm-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n \"A few dm-thinp fixes for changes merged in 3.15-rc1.\n\n  A dm-verity fix for an immutable biovec regression that affects 3.14+.\n\n  A dm-cache fix to properly quiesce when using writethrough mode (3.14+)\"\n\n* tag 'dm-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm cache: fix writethrough mode quiescing in cache_map\n  dm thin: use INIT_WORK_ONSTACK in noflush_work to avoid ODEBUG warning\n  dm verity: fix biovecs hash calculation regression\n  dm thin: fix rcu_read_lock being held in code that can sleep\n  dm thin: irqsave must always be used with the pool->lock spinlock Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"Two very small changes: one fix for the vSMP Foundation platform, and\n  one to help LLVM not choke on options it doesn't understand (although\n  it probably should)\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/vsmp: Fix irq routing\n  x86: LLVMLinux: Wrap -mno-80387 with cc-option Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n - Fix for a Haswell regression in nested virtualization, introduced\n   during the merge window.\n - A fix from Oleg to async page faults.\n - A bunch of small ARM changes.\n - A trivial patch to use the new MSI-X API introduced during the merge\n   window.\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: ARM: vgic: Fix the overlap check action about setting the GICD & GICC base address.\n  KVM: arm/arm64: vgic: fix GICD_ICFGR register accesses\n  KVM: async_pf: mm->mm_users can not pin apf->mm\n  KVM: ARM: vgic: Fix sgi dispatch problem\n  MAINTAINERS: co-maintainance of KVM/{arm,arm64}\n  arm: KVM: fix possible misalignment of PGDs and bounce page\n  KVM: x86: Check for host supported fields in shadow vmcs\n  kvm: Use pci_enable_msix_exact() instead of pci_enable_msix()\n  ARM: KVM: disable KVM in Kconfig on big-endian systems Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Martin Schwidefsky:\n \"Two bug fixes, one to fix a potential information leak in the BPF jit\n  and common-io-layer fix for old firmware levels\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/bpf,jit: initialize A register if 1st insn is BPF_S_LDX_B_MSH\n  s390/chsc: fix SEI usage on old FW levels Merge tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband\n\nPull infiniband/rdma fixes from Roland Dreier:\n \"cxgb4 hardware driver fixes\"\n\n* tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband:\n  RDMA/cxgb4: Update Kconfig to include Chelsio T5 adapter\n  RDMA/cxgb4: Only allow kernel db ringing for T4 devs\n  RDMA/cxgb4: Force T5 connections to use TAHOE congestion control\n  RDMA/cxgb4: Fix endpoint mutex deadlocks Merge branch 'parisc-3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n \"Drop the architecture-specifc value for_STK_LIM_MAX to fix stack\n  related problems with GNU make\"\n\n* 'parisc-3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Use generic uapi/asm/resource.h file\n  parisc: remove _STK_LIM_MAX override Merge tag 'pinctrl-v3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control fixes from Linus Walleij:\n \"Here is a small set of pin control fixes for the v3.15 series.  All\n  are individual driver fixes and quite self-contained.  One of them\n  tagged for stable.\n\n   - Signedness bug in the TB10x\n\n   - GPIO inversion fix for the AS3722\n\n   - Clear pending pin interrups enabled in the bootloader in the\n     pinctrl-single driver\n\n   - Minor pin definition fixes for the PFC/Renesas driver\"\n\n* tag 'pinctrl-v3.15-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  sh-pfc: r8a7791: Fix definition of MOD_SEL3\n  sh-pfc: r8a7790: Fix definition of IPSR5\n  pinctrl: single: Clear pin interrupts enabled by bootloader\n  pinctrl: as3722: fix handling of GPIO invert bit\n  pinctrl/TB10x: Fix signedness bug Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux\n\nPull module fixes from Rusty Russell:\n \"Fixed one missing place for the new taint flag, and remove a warning\n  giving only false positives (now we finally figured out why)\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux:\n  module: remove warning about waiting module removal.\n  Fix: tracing: use 'E' instead of 'X' for unsigned module taint flag Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fix from Dmitry Torokhov:\n \"A fix for a broken commit in the previous pull breaking automatic\n  module loading of input handlers, such ad evdev\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: do not use property bits when generating module alias Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"A couple of fixes addressing the following issues:\n\n   - The last polishing for the TLB code, removing the last BUG_ON() and\n     the debug file along with tidying up the lazy TLB code.\n\n   - Prevent triple fault on 1st Gen. 486 caused by stupidly calling the\n     early IDT setup after the first function which causes a fault which\n     should be caught by the exception table.\n\n   - Limit the mmap of /dev/mem to valid addresses\n\n   - Prevent late microcode loading on Broadwell X\n\n   - Remove a redundant assignment in the cache info code\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mm: Limit mmap() of /dev/mem to valid physical addresses\n  x86/mm: Remove debug/x86/tlb_defer_switch_to_init_mm\n  x86/mm: Tidy up \"x86/mm: Flush more aggressively in lazy TLB mode\"\n  x86/mm/64: Remove the last VM_BUG_ON() from the TLB code\n  x86/microcode/intel: Disable late loading on model 79\n  x86/idt: Initialize early IDT before cr4_init_shadow()\n  x86/cpu/intel_cacheinfo: Remove redundant assignment to 'this_leaf' Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"A single fix to make the cs5535 clock event driver robust agaist\n  spurious interrupts\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clockevents/drivers/cs5535: Improve resilience to spurious interrupts Merge branch 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull smp/hotplug fix from Thomas Gleixner:\n \"The recent rework of the callback invocation missed to cleanup the\n  leftovers of the operation, so under certain circumstances a\n  subsequent CPU hotplug operation accesses stale data and crashes.\n  Clean it up.\"\n\n* 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  cpu/hotplug: Reset node state after operation Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n \"A series of fixes for perf tooling:\n\n   - Make xyarray return the X/Y size correctly which fixes a crash in\n     the exit code.\n\n   - Fix the libc path in test so it works not only on Debian/Ubuntu\n     correctly\n\n   - Check for eBPF file existance and output a useful error message\n     instead of failing to compile a non existant file\n\n   - Make sure perf_hpp_fmt is not longer references before freeing it\n\n   - Use list_del_init() in the histogram code to prevent a crash when\n     the already deleted element is deleted again\n\n   - Remove the leftovers of the removed '-l' option\n\n   - Add reviewer entries to the MAINTAINERS file\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf test shell trace+probe_libc_inet_pton.sh: Be compatible with Debian/Ubuntu\n  perf xyarray: Fix wrong processing when closing evsel fd\n  perf buildid-list: Fix crash when processing PERF_RECORD_NAMESPACE\n  perf record: Fix documentation for a inexistent option '-l'\n  perf tools: Add long time reviewers to MAINTAINERS\n  perf tools: Check wether the eBPF file exists in event parsing\n  perf hists: Add extra integrity checks to fmt_free()\n  perf hists: Fix crash in perf_hpp__reset_output_field() Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"A set of small fixes mostly in the irq drivers area:\n\n   - Make the tango irq chip work correctly, which requires a new\n     function in the generiq irq chip implementation\n\n   - A set of updates to the GIC-V3 ITS driver removing a bogus BUG_ON()\n     and parsing the VCPU table size correctly\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: generic chip: remove irq_gc_mask_disable_reg_and_ack()\n  irqchip/tango: Use irq_gc_mask_disable_and_ack_set\n  genirq: generic chip: Add irq_gc_mask_disable_and_ack_set()\n  irqchip/gic-v3-its: Add missing changes to support 52bit physical address\n  irqchip/gic-v3-its: Fix the incorrect parsing of VCPU table size\n  irqchip/gic-v3-its: Fix the incorrect BUG_ON in its_init_vpe_domain()\n  DT: arm,gic-v3: Update the ITS size in the examples Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull objtool fix from Thomas Gleixner:\n \"Plug a memory leak in the instruction decoder\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  objtool: Fix memory leak in decode_instructions() Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"A little more than usual this time around. Been travelling, so that is\n  part of it.\n\n  Anyways, here are the highlights:\n\n   1) Deal with memcontrol races wrt. listener dismantle, from Eric\n      Dumazet.\n\n   2) Handle page allocation failures properly in nfp driver, from Jaku\n      Kicinski.\n\n   3) Fix memory leaks in macsec, from Sabrina Dubroca.\n\n   4) Fix crashes in pppol2tp_session_ioctl(), from Guillaume Nault.\n\n   5) Several fixes in bnxt_en driver, including preventing potential\n      NVRAM parameter corruption from Michael Chan.\n\n   6) Fix for KRACK attacks in wireless, from Johannes Berg.\n\n   7) rtnetlink event generation fixes from Xin Long.\n\n   8) Deadlock in mlxsw driver, from Ido Schimmel.\n\n   9) Disallow arithmetic operations on context pointers in bpf, from\n      Jakub Kicinski.\n\n  10) Missing sock_owned_by_user() check in sctp_icmp_redirect(), from\n      Xin Long.\n\n  11) Only TCP is supported for sockmap, make that explicit with a\n      check, from John Fastabend.\n\n  12) Fix IP options state races in DCCP and TCP, from Eric Dumazet.\n\n  13) Fix panic in packet_getsockopt(), also from Eric Dumazet.\n\n  14) Add missing locked in hv_sock layer, from Dexuan Cui.\n\n  15) Various aquantia bug fixes, including several statistics handling\n      cures. From Igor Russkikh et al.\n\n  16) Fix arithmetic overflow in devmap code, from John Fastabend.\n\n  17) Fix busted socket memory accounting when we get a fault in the tcp\n      zero copy paths. From Willem de Bruijn.\n\n  18) Don't leave opt->tot_len uninitialized in ipv6, from Eric Dumazet\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (106 commits)\n  stmmac: Don't access tx_q->dirty_tx before netif_tx_lock\n  ipv6: flowlabel: do not leave opt->tot_len with garbage\n  of_mdio: Fix broken PHY IRQ in case of probe deferral\n  textsearch: fix typos in library helpers\n  rxrpc: Don't release call mutex on error pointer\n  net: stmmac: Prevent infinite loop in get_rx_timestamp_status()\n  net: stmmac: Fix stmmac_get_rx_hwtstamp()\n  net: stmmac: Add missing call to dev_kfree_skb()\n  mlxsw: spectrum_router: Configure TIGCR on init\n  mlxsw: reg: Add Tunneling IPinIP General Configuration Register\n  net: ethtool: remove error check for legacy setting transceiver type\n  soreuseport: fix initialization race\n  net: bridge: fix returning of vlan range op errors\n  sock: correct sk_wmem_queued accounting on efault in tcp zerocopy\n  bpf: add test cases to bpf selftests to cover all access tests\n  bpf: fix pattern matches for direct packet access\n  bpf: fix off by one for range markings with L{T, E} patterns\n  bpf: devmap fix arithmetic overflow in bitmap_size calculation\n  net: aquantia: Bad udp rate on default interrupt coalescing\n  net: aquantia: Enable coalescing management via ethtool interface\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov:\n\n - joydev now implements a blacklist to avoid creating joystick nodes\n   for accelerometers found in composite devices such as PlaStation\n   controllers\n\n - assorted driver fixes\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: ims-psu - check if CDC union descriptor is sane\n  Input: joydev - blacklist ds3/ds4/udraw motion sensors\n  Input: allow matching device IDs on property bits\n  Input: factor out and export input_device_id matching code\n  Input: goodix - poll the 'buffer status' bit before reading data\n  Input: axp20x-pek - fix module not auto-loading for axp221 pek\n  Input: tca8418 - enable interrupt after it has been requested\n  Input: stmfts - fix setting ABS_MT_POSITION_* maximum size\n  Input: ti_am335x_tsc - fix incorrect step config for 5 wire touchscreen\n  Input: synaptics - disable kernel tracking on SMBus devices Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"MS_I_VERSION fixes - Mimi's fix + missing bits picked from Matthew\n  (his patch contained a duplicate of the fs/namespace.c fix as well,\n  but by that point the original fix had already been applied)\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  Convert fs/*/* to SB_I_VERSION\n  vfs: fix mounting a filesystem with i_version Merge tag 'dmaengine-fix-4.14-rc6' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine fix from Vinod Koul:\n \"Late fix for altera driver which fixes the locking in driver\"\n\n* tag 'dmaengine-fix-4.14-rc6' of git://git.infradead.org/users/vkoul/slave-dma:\n  dmaengine: altera: Use IRQ-safe spinlock calls in the error paths as well Merge branch 'fixes' of git://git.armlinux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"Three fixes this time around:\n\n   - ensure sparse realises that we're building for a 32-bit arch on\n     64-bit hosts.\n\n   - use the correct instruction for semihosting on v7m (nommu) CPUs.\n\n   - reserve address 0 to prevent the first page of memory being used on\n     nommu systems\"\n\n* 'fixes' of git://git.armlinux.org.uk/~rmk/linux-arm:\n  ARM: 8704/1: semihosting: use proper instruction on v7m processors\n  ARM: 8701/1: fix sparse flags for build on 64bit machines\n  ARM: 8700/1: nommu: always reserve address 0 away Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Arnd Bergmann:\n \"Here is another set of bugfixes for ARM SoCs, mostly harmless:\n\n   - a boot regression fix on ux500\n\n   - PCIe interrupts on NXP i.MX7 and on Marvell Armada 7K/8K were wired\n     up wrong, in different ways\n\n   - Armada XP support for large memory never worked\n\n   - the socfpga reset controller now builds on 64-bit\n\n   - minor device tree corrections on gemini, mvebu, r-pi 3, rockchip\n     and at91\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: ux500: Fix regression while init PM domains\n  ARM: dts: fix PCLK name on Gemini and MOXA ART\n  arm64: dts: rockchip: fix typo in iommu nodes\n  arm64: dts: rockchip: correct vqmmc voltage for rk3399 platforms\n  ARM: dts: imx7d: Invert legacy PCI irq mapping\n  bus: mbus: fix window size calculation for 4GB windows\n  ARM: dts: at91: sama5d2: add ADC hw trigger edge type\n  ARM: dts: at91: sama5d2_xplained: enable ADTRG pin\n  ARM: dts: at91: at91-sama5d27_som1: fix PHY ID\n  ARM: dts: bcm283x: Fix console path on RPi3\n  reset: socfpga: fix for 64-bit compilation\n  ARM: dts: Fix I2C repeated start issue on Armada-38x\n  arm64: dts: marvell: fix interrupt-map property for Armada CP110 PCIe controller\n  arm64: dts: salvator-common: add 12V regulator to backlight\n  ARM: dts: sun6i: Fix endpoint IDs in second display pipeline\n  arm64: allwinner: a64: pine64: Use dcdc1 regulator for mmc0 Merge tag 'for-linus-4.14c-rc6-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fix from Juergen Gross:\n \"A fix for the Xen pv network drivers (frontend and backend) avoiding\n  the network connection to become unusable due to an illegal MTU\"\n\n* tag 'for-linus-4.14c-rc6-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen-netfront, xen-netback: Use correct minimum MTU values Merge tag 'mmc-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fix from Ulf Hansson:\n \"sdhci-pci: Fix default d3_retune for Intel host controllers\"\n\n* tag 'mmc-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: sdhci-pci: Fix default d3_retune for Intel host controllers Merge tag 'drm-fixes-for-v4.14-rc6' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Standard fixes pull for rc6: one regression fix for amdgpu, a bunch of\n  nouveau fixes that I'd missed a pull req for from Ben last week, some\n  exynos regression fixes, and a few fixes for i915\"\n\n* tag 'drm-fixes-for-v4.14-rc6' of git://people.freedesktop.org/~airlied/linux:\n  drm/nouveau/fbcon: fix oops without fbdev emulation\n  Revert \"drm/amdgpu: discard commands of killed processes\"\n  drm/i915: Use a mask when applying WaProgramL3SqcReg1Default\n  drm/i915: Report -EFAULT before pwrite fast path into shmemfs\n  drm/i915/cnl: Fix PLL initialization for HDMI.\n  drm/i915/cnl: Fix PLL mapping.\n  drm/i915: Use bdw_ddi_translations_fdi for Broadwell\n  drm/i915: Fix eviction when the GGTT is idle but full\n  drm/i915/gvt: Fix GPU hang after reusing vGPU instance across different guest OS\n  drm/exynos: Clear drvdata after component unbind\n  drm/exynos: Fix potential NULL pointer dereference in suspend/resume paths\n  drm/nouveau/kms/nv50: fix oops during DP IRQ handling on non-MST boards\n  drm/nouveau/bsp/g92: disable by default\n  drm/nouveau/mmu: flush tlbs before deleting page tables Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"A couple of bugfixes for I2C drivers.\n\n  Because the changes for the piix4 driver are larger than usual, the\n  patches have been in linux-next for more than a week with no reports\n  coming in. The rest is usual stuff\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: omap: Fix error handling for clk_get()\n  i2c: piix4: Disable completely the IMC during SMBUS_BLOCK_DATA\n  i2c: piix4: Fix SMBus port selection for AMD Family 17h chips\n  i2c: imx: fix misleading bus recovery debug message\n  i2c: imx: use IRQF_SHARED mode to request IRQ\n  i2c: ismt: Separate I2C block read from SMBus block read Merge branch 'fixes-v4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull key handling fixes from James Morris:\n \"This includes a fix for the capabilities code from Colin King, and a\n  set of further fixes for the keys subsystem. From David:\n\n   - Fix a bunch of places where kernel drivers may access revoked\n     user-type keys and don't do it correctly.\n\n   - Fix some ecryptfs bits.\n\n   - Fix big_key to require CONFIG_CRYPTO.\n\n   - Fix a couple of bugs in the asymmetric key type.\n\n   - Fix a race between updating and finding negative keys.\n\n   - Prevent add_key() from updating uninstantiated keys.\n\n   - Make loading of key flags and expiry time atomic when not holding\n     locks\"\n\n* 'fixes-v4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  commoncap: move assignment of fs_ns to avoid null pointer dereference\n  pkcs7: Prevent NULL pointer dereference, since sinfo is not always set.\n  KEYS: load key flags and expiry time atomically in proc_keys_show()\n  KEYS: Load key expiry time atomically in keyring_search_iterator()\n  KEYS: load key flags and expiry time atomically in key_validate()\n  KEYS: don't let add_key() update an uninstantiated key\n  KEYS: Fix race between updating and finding a negative key\n  KEYS: checking the input id parameters before finding asymmetric key\n  KEYS: Fix the wrong index when checking the existence of second id\n  security/keys: BIG_KEY requires CONFIG_CRYPTO\n  ecryptfs: fix dereference of NULL user_key_payload\n  fscrypt: fix dereference of NULL user_key_payload\n  lib/digsig: fix dereference of NULL user_key_payload\n  FS-Cache: fix dereference of NULL user_key_payload\n  KEYS: encrypted: fix dereference of NULL user_key_payload Merge tag 'pm-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fix from Rafael Wysocki:\n \"This reverts a problematic commit modifying the turbostat utility that\n  went in during the 4.13 cycle (Len Brown)\"\n\n* tag 'pm-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  Revert \"tools/power turbostat: stop migrating, unless '-m'\" Merge branch 'parisc-4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n \"Three small important fixes for the parisc architecture:\n\n   - Export __cmpxchg_u64() symbol on 32bit kernel too. This unbreaks\n     building the kernel with ixgbe kernel module. From Guenter Roeck.\n\n   - Fix 64-bit atomic cmpxchg kernel helper function for 32-bit kernel\n     in LWS code for userspace. This unbreaks e.g. the 64-bit variant of\n     the glibc function __sync_fetch_and_add() with a 32-bit parisc\n     kernel. From John David Anglin, tagged for backport to v3.13+.\n\n   - Detect nonsynchronous CPU-internal cr16 cycle counters more\n     reliable. This avoids stalled CPU warnings by the kernel soft\n     lockup detector. From me, tagged for backport to v4.13+\"\n\n* 'parisc-4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Fix detection of nonsynchronous cr16 cycle counters\n  parisc: Export __cmpxchg_u64 unconditionally\n  parisc: Fix double-word compare and exchange in LWS code on 32-bit kernels Merge tag 'sound-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"We've got slightly more fixes than wished, but heading to a good\n  shape. Most of changes are about HD-audio fixes, one for a buggy code\n  that went into 4.13, and another for avoiding a crash due to buggy\n  BIOS.\n\n  Apart from HD-audio, a sequencer core change that is only for UP\n  config (which must be pretty rare nowadays), and a USB-audio quirk as\n  usual\"\n\n* tag 'sound-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Fix incorrect TLV callback check introduced during set_fs() removal\n  ALSA: hda: Remove superfluous '-' added by printk conversion\n  ALSA: hda: Abort capability probe at invalid register read\n  ALSA: seq: Enable 'use' locking in all configurations\n  ALSA: usb-audio: Add native DSD support for Pro-Ject Pre Box S2 Digital Merge tag 'xfs-4.14-fixes-6' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n\n - fix some more CONFIG_XFS_RT related build problems\n\n - fix data loss when writeback at eof races eofblocks gc and loses\n\n - invalidate page cache after fs finishes a dio write\n\n - remove dirty page state when invalidating pages so releasepage does\n   the right thing when handed a dirty page\n\n* tag 'xfs-4.14-fixes-6' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: move two more RT specific functions into CONFIG_XFS_RT\n  xfs: trim writepage mapping to within eof\n  fs: invalidate page cache after end_io() in dio completion\n  xfs: cancel dirty pages on invalidation Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"Three small fixes:\n\n   - A fix for skd, it was using kfree() to free a structure allocate\n     with kmem_cache_alloc().\n\n   - Stable fix for nbd, fixing a regression using the normal ioctl\n     based tools.\n\n   - Fix for a previous fix in this series, that fixed up\n     inconsistencies between buffered and direct IO\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  fs: Avoid invalidation in interrupt context in dio_complete()\n  nbd: don't set the device size until we're connected\n  skd: Use kmem_cache_free Merge tag 'enforcement-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull enforcement policy update from Greg KH:\n \"Documentation: Add a file explaining the requested Linux kernel\n  license enforcement policy\n\n  Here's a new file to the kernel's Documentation directory. It adds a\n  short document describing the views of how the Linux kernel community\n  feels about enforcing the license of the kernel.\n\n  The patch has been reviewed by a large number of kernel developers\n  already, as seen by their acks on the patch, and their agreement of\n  the statement with their names on it. The location of the file was\n  also agreed upon by the Documentation maintainer, so all should be\n  good there.\n\n  For some background information about this statement, see this article\n  written by some of the kernel developers involved in drafting it:\n\n\thttp://kroah.com/log/blog/2017/10/16/linux-kernel-community-enforcement-statement/\n\n  and this article that answers a number of questions that came up in\n  the discussion of this statement with the kernel developer community:\n\n\thttp://kroah.com/log/blog/2017/10/16/linux-kernel-community-enforcement-statement-faq/\n\n  If anyone has any further questions about it, please let me, and the\n  TAB members, know and we will be glad to help answer them\"\n\n* tag 'enforcement-4.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  Documentation: Add a file explaining the Linux kernel license enforcement policy Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Martin Schwidefsky:\n \"Two bug fixes:\n\n   - A fix for cputime accounting vs CPU hotplug\n\n   - Add two options to zfcpdump_defconfig to make SCSI dump work again\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390: fix zfcpdump-config\n  s390/cputime: fix guest/irq/softirq times after CPU hotplug Merge tag 'trace-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fix from Steven Rostedt:\n \"Testing a new trace event format, I triggered a bug by doing:\n\n    # modprobe trace-events-sample\n    # echo 1 > /sys/kernel/debug/tracing/events/sample-trace/enable\n    # rmmod trace-events-sample\n\n  This would cause an oops. The issue is that I added another trace\n  event sample that reused a reg function of another trace event to\n  create a thread to call the tracepoints. The problem was that the reg\n  function couldn't handle nested calls (reg; reg; unreg; unreg;) and\n  created two threads (instead of one) and only removed one on exit.\n\n  This isn't a critical bug as the bug is only in sample code. But\n  sample code should be free of known bugs to prevent others from\n  copying it. This is why this is also marked for stable\"\n\n* tag 'trace-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing/samples: Fix creation and deletion of simple_thread_fn creation Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Four mostly error leg fixes and one more important regression in a\n  prior commit (the qla2xxx one)\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: fc: check for rport presence in fc_block_scsi_eh\n  scsi: qla2xxx: Fix uninitialized work element\n  scsi: libiscsi: fix shifting of DID_REQUEUE host byte\n  scsi: libfc: fix a deadlock in fc_rport_work\n  scsi: fixup kernel warning during rmmod() Merge tag 'media/v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"Core fixes:\n   - cec: Respond to unregistered initiators, when applicable\n   - dvb_frontend: only use kref after initialized\n\n  Driver-specific fixes:\n   - qcom, camss: Make function vfe_set_selection static\n   - qcom: VIDEO_QCOM_CAMSS should depend on HAS_DMA\n   - s5p-cec: add NACK detection support\n   - media: staging/imx: Fix uninitialized variable warning\n   - dib3000mc: i2c transfers over usb cannot be done from stack\n   - venus: init registered list on streamoff\"\n\n* tag 'media/v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  media: dvb_frontend: only use kref after initialized\n  media: platform: VIDEO_QCOM_CAMSS should depend on HAS_DMA\n  media: cec: Respond to unregistered initiators, when applicable\n  media: s5p-cec: add NACK detection support\n  media: staging/imx: Fix uninitialized variable warning\n  media: qcom: camss: Make function vfe_set_selection static\n  media: venus: init registered list on streamoff\n  media: dvb: i2c transfers over usb cannot be done from stack Linux 4.14-rc5 Merge tag 'char-misc-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver fixes from Greg KH:\n \"Here are 4 patches to resolve some char/misc driver issues found these\n  past weeks.\n\n  One of them is a mei bugfix and another is a new mei device id. There\n  is also a hyper-v fix for a reported issue, and a binder issue fix for\n  a problem reported by a few people.\n\n  All of these have been in my tree for a while, I don't know if\n  linux-next is really testing much this month. But 0-day is happy with\n  them :)\"\n\n* tag 'char-misc-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  binder: fix use-after-free in binder_transaction()\n  Drivers: hv: vmbus: Fix bugs in rescind handling\n  mei: me: add gemini lake devices id\n  mei: always use domain runtime pm callbacks. Merge tag 'usb-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a handful of USB driver fixes for 4.14-rc5.\n\n  There is the \"usual\" usb-serial fixes and device ids, USB gadget\n  fixes, and some more fixes found by the fuzz testing that is happening\n  on the USB layer right now.\n\n  All of these have been in my tree this week with no reported issues\"\n\n* tag 'usb-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  usb: usbtest: fix NULL pointer dereference\n  usb: gadget: configfs: Fix memory leak of interface directory data\n  usb: gadget: composite: Fix use-after-free in usb_composite_overwrite_options\n  usb: misc: usbtest: Fix overflow in usbtest_do_ioctl()\n  usb: renesas_usbhs: Fix DMAC sequence for receiving zero-length packet\n  USB: dummy-hcd: Fix deadlock caused by disconnect detection\n  usb: phy: tegra: Fix phy suspend for UDC\n  USB: serial: console: fix use-after-free after failed setup\n  USB: serial: console: fix use-after-free on disconnect\n  USB: serial: qcserial: add Dell DW5818, DW5819\n  USB: serial: cp210x: add support for ELV TFD500\n  USB: serial: cp210x: fix partnum regression\n  USB: serial: option: add support for TP-Link LTE module\n  USB: serial: ftdi_sio: add id for Cypress WICED dev board Merge tag 'dmaengine-fix-4.14-rc5' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine fixes from Vinod Koul:\n \"Here are fixes for this round\n\n   - fix spinlock usage amd fifo response for altera driver\n\n   - fix ti crossbar race condition\n\n   - fix edma memcpy align\"\n\n* tag 'dmaengine-fix-4.14-rc5' of git://git.infradead.org/users/vkoul/slave-dma:\n  dmaengine: altera: fix spinlock usage\n  dmaengine: altera: fix response FIFO emptying\n  dmaengine: ti-dma-crossbar: Fix possible race condition with dma_inuse\n  dmaengine: edma: Align the memcpy acnt array size with the transfer Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"A landry list of fixes:\n\n   - fix reboot breakage on some PCID-enabled system\n\n   - fix crashes/hangs on some PCID-enabled systems\n\n   - fix microcode loading on certain older CPUs\n\n   - various unwinder fixes\n\n   - extend an APIC quirk to more hardware systems and disable APIC\n     related warning on virtualized systems\n\n   - various Hyper-V fixes\n\n   - a macro definition robustness fix\n\n   - remove jprobes IRQ disabling\n\n   - various mem-encryption fixes\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/microcode: Do the family check first\n  x86/mm: Flush more aggressively in lazy TLB mode\n  x86/apic: Update TSC_DEADLINE quirk with additional SKX stepping\n  x86/apic: Silence \"FW_BUG TSC_DEADLINE disabled due to Errata\" on hypervisors\n  x86/mm: Disable various instrumentations of mm/mem_encrypt.c and mm/tlb.c\n  x86/hyperv: Fix hypercalls with extended CPU ranges for TLB flushing\n  x86/hyperv: Don't use percpu areas for pcpu_flush/pcpu_flush_ex structures\n  x86/hyperv: Clear vCPU banks between calls to avoid flushing unneeded vCPUs\n  x86/unwind: Disable unwinder warnings on 32-bit\n  x86/unwind: Align stack pointer in unwinder dump\n  x86/unwind: Use MSB for frame pointer encoding on 32-bit\n  x86/unwind: Fix dereference of untrusted pointer\n  x86/alternatives: Fix alt_max_short macro to really be a max()\n  x86/mm/64: Fix reboot interaction with CR4.PCIDE\n  kprobes/x86: Remove IRQ disabling from jprobe handlers\n  kprobes/x86: Set up frame pointer in kprobe trampoline Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Three fixes that address an SMP balancing performance regression\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/core: Ensure load_balance() respects the active_mask\n  sched/core: Address more wake_affine() regressions\n  sched/core: Fix wake_affine() performance regression Merge branch 'ras-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RAS fixes from Ingo Molnar:\n \"A boot parameter fix, plus a header export fix\"\n\n* 'ras-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mce: Hide mca_cfg\n  RAS/CEC: Use the right length for \"cec_disable\" Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Some tooling fixes plus three kernel fixes: a memory leak fix, a\n  statistics fix and a crash fix\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/intel/uncore: Fix memory leaks on allocation failures\n  perf/core: Fix cgroup time when scheduling descendants\n  perf/core: Avoid freeing static PMU contexts when PMU is unregistered\n  tools include uapi bpf.h: Sync kernel ABI header with tooling header\n  perf pmu: Unbreak perf record for arm/arm64 with events with explicit PMU\n  perf script: Add missing separator for \"-F ip,brstack\" (and brstackoff)\n  perf callchain: Compare dsos (as well) for CCKEY_FUNCTION Merge branch 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking fixes from Ingo Molnar:\n \"Two lockdep fixes for bugs introduced by the cross-release dependency\n  tracking feature - plus a commit that disables it because performance\n  regressed in an absymal fashion on some systems\"\n\n* 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/lockdep: Disable cross-release features for now\n  locking/selftest: Avoid false BUG report\n  locking/lockdep: Fix stacktrace mess Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Ingo Molnar:\n \"A CPU hotplug related fix, plus two related sanity checks\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq/cpuhotplug: Enforce affinity setting on startup of managed irqs\n  genirq/cpuhotplug: Add sanity check for effective affinity mask\n  genirq: Warn when effective affinity is not updated Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull objtool fix from Ingo Molnar:\n \"A single objtool fix: avoid silently broken ORC debuginfo builds and\n  error out instead\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  objtool: Upgrade libelf-devel warning to error for CONFIG_ORC_UNWINDER Merge branch '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"More MIPS fixes for 4.14:\n\n   - Loongson 1: Set the default number of RX and TX queues to\n     accomodate for recent changes of stmmac driver.\n\n   - BPF: Fix uninitialised target compiler error.\n\n   - Fix cmpxchg on 32 bit signed ints for 64 bit kernels with\n     !kernel_uses_llsc\n\n   - Fix generic-board-config.sh for builds using O=\n\n   - Remove pr_err() calls from fpu_emu() for a case which is not a\n     kernel error\"\n\n* '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: math-emu: Remove pr_err() calls from fpu_emu()\n  MIPS: Fix generic-board-config.sh for builds using O=\n  MIPS: Fix cmpxchg on 32b signed ints for 64b kernel with !kernel_uses_llsc\n  MIPS: loongson1: set default number of rx and tx queues for stmmac\n  MIPS: bpf: Fix uninitialised target compiler error Merge tag 'drm-fixes-for-v4.14-rc5' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Couple of the arm people seem to wake up so this has imx and msm\n  fixes, along with a bunch of i915 stable bounds fixes and an amdgpu\n  regression fix.\n\n  All seems pretty okay for now\"\n\n* tag 'drm-fixes-for-v4.14-rc5' of git://people.freedesktop.org/~airlied/linux:\n  drm/msm: fix _NO_IMPLICIT fencing case\n  drm/msm: fix error path cleanup\n  drm/msm/mdp5: Remove extra pm_runtime_put call in mdp5_crtc_cursor_set()\n  drm/msm/dsi: Use correct pm_runtime_put variant during host_init\n  drm/msm: fix return value check in _msm_gem_kernel_new()\n  drm/msm: use proper memory barriers for updating tail/head\n  drm/msm/mdp5: add missing max size for 8x74 v1\n  drm/amdgpu: fix placement flags in amdgpu_ttm_bind\n  drm/i915/bios: parse DDI ports also for CHV for HDMI DDC pin and DP AUX channel\n  gpu: ipu-v3: pre: implement workaround for ERR009624\n  gpu: ipu-v3: prg: wait for double buffers to be filled on channel startup\n  gpu: ipu-v3: Allow channel burst locking on i.MX6 only\n  drm/i915: Read timings from the correct transcoder in intel_crtc_mode_get()\n  drm/i915: Order two completing nop_submit_request\n  drm/i915: Silence compiler warning for hsw_power_well_enable()\n  drm/i915: Use crtc_state_is_legacy_gamma in intel_color_check\n  drm/i915/edp: Increase the T12 delay quirk to 1300ms\n  drm/i915/edp: Get the Panel Power Off timestamp after panel is off\n  sync_file: Return consistent status in SYNC_IOC_FILE_INFO\n  drm/atomic: Unref duplicated drm_atomic_state in drm_atomic_helper_resume() Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"18 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm, swap: use page-cluster as max window of VMA based swap readahead\n  mm: page_vma_mapped: ensure pmd is loaded with READ_ONCE outside of lock\n  kmemleak: clear stale pointers from task stacks\n  fs/binfmt_misc.c: node could be NULL when evicting inode\n  fs/mpage.c: fix mpage_writepage() for pages with buffers\n  linux/kernel.h: add/correct kernel-doc notation\n  tty: fall back to N_NULL if switching to N_TTY fails during hangup\n  Revert \"vmalloc: back off when the current task is killed\"\n  mm/cma.c: take __GFP_NOWARN into account in cma_alloc()\n  scripts/kallsyms.c: ignore symbol type 'n'\n  userfaultfd: selftest: exercise -EEXIST only in background transfer\n  mm: only display online cpus of the numa node\n  mm: remove unnecessary WARN_ONCE in page_vma_mapped_walk().\n  mm/mempolicy: fix NUMA_INTERLEAVE_HIT counter\n  include/linux/of.h: provide of_n_{addr,size}_cells wrappers for !CONFIG_OF\n  mm/madvise.c: add description for MADV_WIPEONFORK and MADV_KEEPONFORK\n  lib/Kconfig.debug: kernel hacking menu: runtime testing: keep tests together\n  mm/migrate: fix indexing bug (off by one) and avoid out of bound access Merge tag 'pci-v4.14-fixes-5' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n\n - revert Tegra MSI change that caused a regression on TrimSlice\n   (Thierry Reding)\n\n - finish Aardvark conversion to host bridge IRQ mapping. We missed\n   Aardvark the first time around so it regressed (Thomas Petazzoni)\n\n* tag 'pci-v4.14-fixes-5' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: aardvark: Move to struct pci_host_bridge IRQ mapping functions\n  Revert \"PCI: tegra: Do not allocate MSI target memory\" Merge tag 'iommu-fixes-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fixes from Joerg Roedel:\n\n - keep an important data structure in the Exynos driver around after\n   kernel-init to fix a kernel-oops\n\n - keep SWIOTLB enabled when SME is active in the AMD IOMMU driver\n\n - add a missing IOTLB sync to the AMD IOMMU driver\n\n* tag 'iommu-fixes-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/amd: Finish TLB flush in amd_iommu_unmap()\n  iommu/exynos: Remove initconst attribute to avoid potential kernel oops\n  iommu/amd: Do not disable SWIOTLB if SME is active Merge tag 'devicetree-fixes-for-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull DeviceTree fixes from Rob Herring:\n\n - Fix memory leak in error case of of_console_check\n\n - Increase number of reserved memory regions to 32. 16 was not enough\n   on some Power systems.\n\n - Fix OF node refcounting for of_fwnode_graph_get_port_parent\n\n* tag 'devicetree-fixes-for-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  device property: preserve usecount for node passed to of_fwnode_graph_get_port_parent()\n  drivers: of: increase MAX_RESERVED_REGIONS to 32\n  of: do not leak console options Merge tag 'powerpc-4.14-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"A fix for a bad bug (written by me) in our livepatch handler. Removal\n  of an over-zealous lockdep_assert_cpus_held() in our topology code. A\n  fix to the recently added emulation of cntlz[wd]. And three small\n  fixes to the recently added IMC PMU driver.\n\n  Thanks to: Anju T Sudhakar, Balbir Singh, Kamalesh Babulal, Naveen N.\n  Rao, Sandipan Das, Santosh Sivaraj, Thiago Jung Bauermann\"\n\n* tag 'powerpc-4.14-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/perf: Fix IMC initialization crash\n  powerpc/perf: Add ___GFP_NOWARN flag to alloc_pages_node()\n  powerpc/perf: Fix for core/nest imc call trace on cpuhotplug\n  powerpc: Don't call lockdep_assert_cpus_held() from arch_update_cpu_topology()\n  powerpc/lib/sstep: Fix count leading zeros instructions\n  powerpc/livepatch: Fix livepatch stack access Merge tag 'for-linus-4.14c-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixlet from Juergen Gross:\n \"A minor fix correcting the cpu hotplug name for Xen guests\"\n\n* tag 'for-linus-4.14c-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/vcpu: Use a unified name about cpu hotplug state for pv and pvhvm Merge tag 'devprop-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull device properties framework fixes from Rafael Wysocki:\n \"These fix an issue related to device removal introduced during the 4.9\n  cycle and fix up new functionality added recently.\n\n  Specifics:\n\n   - Fix a device properties management issue, introduced during the 4.9\n     cycle, that causes device properties associated with a parent\n     device to go away on a removal of its child in some cases (Jarkko\n     Nikula).\n\n   - Fix inconsistencies in error codes returned by a new function\n     helper in the device properties framework depending on the\n     underlying low-level firmware interface, DT or ACPI, by making the\n     meaning of error codes returned in the ACPI case agree with the\n     meaning of DT error codes in analogous situations (Sakari Ailus)\"\n\n* tag 'devprop-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: properties: Fix __acpi_node_get_property_reference() return codes\n  ACPI: properties: Align return codes of __acpi_node_get_property_reference()\n  device property: Track owner device of device property Merge tag 'xfs-4.14-fixes-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n\n - Fix a stale kernel memory exposure when logging inodes.\n\n - Fix some build problems with CONFIG_XFS_RT=n\n\n - Don't change inode mode if the acl write fails, leaving the file\n   totally inaccessible.\n\n - Fix a dangling pointer problem when removing an attr fork under\n   memory pressure.\n\n - Don't crash while trying to invalidate a null buffer associated with\n   a corrupt metadata pointer.\n\n* tag 'xfs-4.14-fixes-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: handle error if xfs_btree_get_bufs fails\n  xfs: reinit btree pointer on attr tree inactivation walk\n  xfs: Fix bool initialization/comparison\n  xfs: don't change inode mode if ACL update fails\n  xfs: move more RT specific code under CONFIG_XFS_RT\n  xfs: Don't log uninitialised fields in inode structures Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull quota fix from Jan Kara:\n \"A fix for a regression in handling of quota grace times and warnings\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  quota: Generate warnings for DQUOT_SPACE_NOFAIL allocations Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm fixes from Paolo Bonzini:\n \"Another latent bug related to PCID, an out-of-bounds access, and a\n  submaintainer change being finally made official\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  MAINTAINERS: Add Paul Mackerras as maintainer for KVM/powerpc\n  KVM: nVMX: fix guest CR4 loading when emulating L2 to L1 exit\n  KVM: MMU: always terminate page walks at level 1\n  KVM: nVMX: update last_nonleaf_level when initializing nested EPT Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n\n - fix crashes in skcipher/shash from zero-length input.\n\n - fix softirq GFP_KERNEL allocation in shash_setkey_unaligned.\n\n - error path bug fix in xts create function.\n\n - fix compiler warning regressions in axis and stm32\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: shash - Fix zero-length shash ahash digest crash\n  crypto: skcipher - Fix crash on zero-length input\n  crypto: shash - Fix a sleep-in-atomic bug in shash_setkey_unaligned\n  crypto: xts - Fix an error handling path in 'create()'\n  crypto: stm32 - Try to fix hash padding\n  crypto: axis - hide an unused variable Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching\n\nPull livepatching fix from Jiri Kosina:\n\n - bugfix for handling of coming modules (incorrect handling of failure)\n   from Joe Lawrence\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching:\n  livepatch: unpatch all klp_objects if klp_module_coming fails Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n\n - fix for potential out-of-bounds memory access (found by fuzzing,\n   likely requires specially crafted device to trigger) by Jaejoong Kim\n\n - two new device IDs for elecom driver from Alex Manoussakis\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: hid-elecom: extend to fix descriptor for HUGE trackball\n  HID: usbhid: fix out-of-bounds bug Merge tag 'sound-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"It's been a busy week for defending the attacks from fuzzer people.\n\n  This contains various USB-audio driver fixes and sequencer core fixes\n  spotted by syzkaller and other fuzzer, as well as one quirk for a\n  Plantronics USB audio device\"\n\n* tag 'sound-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: caiaq: Fix stray URB at probe error path\n  ALSA: seq: Fix use-after-free at creating a port\n  ALSA: usb-audio: Kill stray URB at exiting\n  ALSA: line6: Fix leftover URB at error-path during probe\n  ALSA: line6: Fix NULL dereference at podhd_disconnect()\n  ALSA: line6: Fix missing initialization before error path\n  ALSA: seq: Fix copy_from_user() call inside lock\n  ALSA: usb-audio: Add sample rate quirk for Plantronics P610 Merge branch 'waitid-fix'\n\nMerge waitid() fix from Kees Cook.\n\nI'd have hoped that the unsafe_{get|put}_user() naming would have\navoided these kinds of stupid bugs, but no such luck.\n\n* waitid-fix:\n  waitid(): Add missing access_ok() checks Merge tag 'rpmsg-v4.14-fixes' of git://github.com/andersson/remoteproc\n\nPull rpmsg fixes from Bjorn Andersson:\n \"This corrects two mistakes in the Qualcomm GLINK SMEM driver\"\n\n* tag 'rpmsg-v4.14-fixes' of git://github.com/andersson/remoteproc:\n  rpmsg: glink: Fix memory leak in qcom_glink_alloc_intent()\n  rpmsg: glink: Unlock on error in qcom_glink_request_intent() Merge tag 'rproc-v4.14-fixes' of git://github.com/andersson/remoteproc\n\nPull remoteproc fixes from Bjorn Andersson:\n \"This fixes a couple of issues in the imx_rproc driver and corrects the\n  Kconfig dependencies of the Qualcomm remoteproc drivers\"\n\n* tag 'rproc-v4.14-fixes' of git://github.com/andersson/remoteproc:\n  remoteproc: imx_rproc: fix return value check in imx_rproc_addr_init()\n  remoteproc: qcom: fix RPMSG_QCOM_GLINK_SMEM dependencies\n  remoteproc: imx_rproc: fix a couple off by one bugs Merge tag 'gpio-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fixes from Linus Walleij:\n \"Here are some smallish GPIO fixes for v4.14. Like with pin control:\n  some build/Kconfig noise and one serious bug in a specific driver.\n\n   - Three Kconfig/build warning fixes\n\n   - A fix for lost edge IRQs in the OMAP driver\"\n\n* tag 'gpio-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: omap: Fix lost edge interrupts\n  gpio: omap: omap_gpio_show_rev is not __init\n  gpio: acpi: work around false-positive -Wstring-overflow warning\n  gpio: thunderx: select IRQ_DOMAIN_HIERARCHY instead of depends on Merge tag 'pinctrl-v4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control fixes from Linus Walleij:\n \"Two small things and a slightly larger thing in the Intel Cherryview.\n\n   - Fix two build problems\n\n   - Fix a regression on the Intel Cherryview interrupt path\"\n\n* tag 'pinctrl-v4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: cherryview: fix issues caused by dynamic gpio irqs mapping\n  pinctrl/amd: Fix build dependency on pinmux code\n  pinctrl: bcm2835: fix build warning in bcm2835_gpio_irq_handle_bank Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"Fairly old DIO bug caught by Andreas (3.10+) and several slightly\n  younger blk_rq_map_user_iov() bugs, both on map and copy codepaths\n  (Vitaly and me)\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  bio_copy_user_iov(): don't ignore ->iov_offset\n  more bio_map_user_iov() leak fixes\n  fix unbalanced page refcounting in bio_map_user_iov\n  direct-io: Prevent NULL pointer access in submit_page_section Merge tag 'seccomp-v4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull seccomp fixlet from Kees Cook:\n \"Minor seccomp fix for v4.14-rc5. I debated sending this at all for\n  v4.14, but since it fixes a minor issue in the prior fix, which also\n  went to -stable, it seemed better to just get all of it cleaned up\n  right now.\n\n   - fix missed \"static\" to avoid Sparse warning (Colin King)\"\n\n* tag 'seccomp-v4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  seccomp: make function __get_seccomp_filter static Merge tag 'nfsd-4.14-1' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd fix from Bruce Fields:\n \"One fix for a 4.14 regression, and one minor fix to the MAINTAINERs\n  file. (I was weirdly flattered by the idea that lots of random people\n  suddenly seemed to think Jeff and I were VFS experts. Turns out it was\n  just a typo)\"\n\n* tag 'nfsd-4.14-1' of git://linux-nfs.org/~bfields/linux:\n  nfsd4: define nfsd4_secinfo_no_name_release()\n  MAINTAINERS: associate linux/fs.h with VFS instead of file locking Merge tag 'f2fs-for-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs fix from Jaegeuk Kim:\n \"This contains one bug fix which causes a kernel panic during fstrim\n  introduced in 4.14-rc1\"\n\n* tag 'f2fs-for-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs:\n  f2fs: fix potential panic during fstrim Merge tag 'linux-kselftest-4.14-rc5-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest\n\nPull kselftest fixes from Shuah Khan:\n\n - fix for x86: sysret_ss_attrs test build failure preventing the x86\n   tests from running\n\n - fix mqueue: fix regression in silencing test run output\n\n* tag 'linux-kselftest-4.14-rc5-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest:\n  selftests: mqueue: fix regression in silencing output from RUN_TESTS\n  selftests: x86: sysret_ss_attrs doesn't build on a PIE build Merge branch 'ppc-bundle' (bundle from Michael Ellerman)\n\nMerge powerpc transactional memory fixes from Michael Ellerman:\n \"I figured I'd still send you the commits using a bundle to make sure\n  it works in case I need to do it again in future\"\n\nThis fixes transactional memory state restore for powerpc.\n\n* bundle'd patches from Michael Ellerman:\n  powerpc/tm: Fix illegal TM state in signal handler\n  powerpc/64s: Use emergency stack for kernel TM Bad Thing program checks Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix object leak on IPSEC offload failure, from Steffen Klassert.\n\n 2) Fix range checks in ipset address range addition operations, from\n    Jozsef Kadlecsik.\n\n 3) Fix pernet ops unregistration order in ipset, from Florian Westphal.\n\n 4) Add missing netlink attribute policy for nl80211 packet pattern\n    attrs, from Peng Xu.\n\n 5) Fix PPP device destruction race, from Guillaume Nault.\n\n 6) Write marks get lost when BPF verifier processes R1=R2 register\n    assignments, causing incorrect liveness information and less state\n    pruning. Fix from Alexei Starovoitov.\n\n 7) Fix blockhole routes so that they are marked dead and therefore not\n    cached in sockets, otherwise IPSEC stops working. From Steffen\n    Klassert.\n\n 8) Fix broadcast handling of UDP socket early demux, from Paolo Abeni.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (37 commits)\n  cdc_ether: flag the u-blox TOBY-L2 and SARA-U2 as wwan\n  net: thunderx: mark expected switch fall-throughs in nicvf_main()\n  udp: fix bcast packet reception\n  netlink: do not set cb_running if dump's start() errs\n  ipv4: Fix traffic triggered IPsec connections.\n  ipv6: Fix traffic triggered IPsec connections.\n  ixgbe: incorrect XDP ring accounting in ethtool tx_frame param\n  net: ixgbe: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag\n  Revert commit 1a8b6d76dc5b (\"net:add one common config...\")\n  ixgbe: fix masking of bits read from IXGBE_VXLANCTRL register\n  ixgbe: Return error when getting PHY address if PHY access is not supported\n  netfilter: xt_bpf: Fix XT_BPF_MODE_FD_PINNED mode of 'xt_bpf_info_v1'\n  netfilter: SYNPROXY: skip non-tcp packet in {ipv4, ipv6}_synproxy_hook\n  tipc: Unclone message at secondary destination lookup\n  tipc: correct initialization of skb list\n  gso: fix payload length when gso_size is zero\n  mlxsw: spectrum_router: Avoid expensive lookup during route removal\n  bpf: fix liveness marking\n  doc: Fix typo \"8023.ad\" in bonding documentation\n  ipv6: fix net.ipv6.conf.all.accept_dad behaviour for real\n  ... Merge tag 'nfs-for-4.14-3' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client bugfixes from Trond Myklebust:\n \"Hightlights include:\n\n  stable fixes:\n   - nfs/filelayout: fix oops when freeing filelayout segment\n   - NFS: Fix uninitialized rpc_wait_queue\n\n  bugfixes:\n   - NFSv4/pnfs: Fix an infinite layoutget loop\n   - nfs: RPC_MAX_AUTH_SIZE is in bytes\"\n\n* tag 'nfs-for-4.14-3' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  NFSv4/pnfs: Fix an infinite layoutget loop\n  nfs/filelayout: fix oops when freeing filelayout segment\n  sunrpc: remove redundant initialization of sock\n  NFS: Fix uninitialized rpc_wait_queue\n  NFS: Cleanup error handling in nfs_idmap_request_key()\n  nfs: RPC_MAX_AUTH_SIZE is in bytes Linux 4.14-rc4 Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n\n - a couple of serious fixes: use after free and blacklist for WRITE\n   SAME\n\n - one error leg fix: write_pending failure\n\n - one user experience problem: do not override max_sectors_kb\n\n - one minor unused function removal\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: ibmvscsis: Fix write_pending failure path\n  scsi: libiscsi: Remove iscsi_destroy_session\n  scsi: libiscsi: Fix use-after-free race during iscsi_session_teardown\n  scsi: sd: Do not override max_sectors_kb sysfs setting\n  scsi: sd: Implement blacklist option for WRITE SAME w/ UNMAP Merge branch 'i2c/for-current-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"I2C has three driver fixes for the newly introduced drivers and one ID\n  addition for the i801 driver\"\n\n* 'i2c/for-current-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: i2c-stm32f7: make structure stm32f7_setup static const\n  i2c: ensure termination of *_device_id tables\n  i2c: i801: Add support for Intel Cedar Fork\n  i2c: stm32f7: fix setup structure Merge tag 'mmc-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"MMC core:\n\n   - Fix driver strength selection when selecting hs400es\n\n   - Delete bounce buffer handling:\n\n     This change fixes a problem related to how bounce buffers are being\n     allocated. However, instead of trying to fix that, let's just\n     remove the mmc bounce buffer code altogether, as it has practically\n     no use.\n\n  MMC host:\n\n   - meson-gx: A couple of fixes related to clock/phase/tuning\n\n   - sdhci-xenon: Fix clock resource by adding an optional bus clock\"\n\n* tag 'mmc-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: sdhci-xenon: Fix clock resource by adding an optional bus clock\n  mmc: meson-gx: include tx phase in the tuning process\n  mmc: meson-gx: fix rx phase reset\n  mmc: meson-gx: make sure the clock is rounded down\n  mmc: Delete bounce buffer handling\n  mmc: core: add driver strength selection when selecting hs400es Merge tag 'hwmon-for-linus-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fix from Guenter Roeck:\n \"Fix up error path in xgene driver\"\n\n* tag 'hwmon-for-linus-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (xgene) Fix up error handling path mixup in 'xgene_hwmon_probe()' Merge tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux\n\nPull clk fixes from Stephen Boyd:\n\n - build fix to export the clk_bulk_prepare() symbol\n\n - suspend fix for Samsung Exynos SoCs where we need to keep clks on\n   across suspend\n\n - two critical clk markings for clks that shouldn't ever turn off on\n   Rockchip SoCs\n\n - a fix for a copy-paste mistake on Rockchip rk3128 causing some clks\n   to touch the same bit and trample over one another\n\n* tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux:\n  clk: samsung: exynos4: Enable VPLL and EPLL clocks for suspend/resume cycle\n  clk: Export clk_bulk_prepare()\n  clk: rockchip: add sclk_timer5 as critical clock on rk3128\n  clk: rockchip: fix up rk3128 pvtm and mipi_24m gate regs error\n  clk: rockchip: add pclk_pmu as critical clock on rk3128 Merge tag 'arc-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc\n\nPull ARC udpates from Vineet Gupta:\n\n - updates for various platforms\n\n - boot log updates for upcoming HS48 family of cores (dual issue)\n\n* tag 'arc-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:\n  ARC: [plat-hsdk]: Add reset controller node to manage ethernet reset\n  ARC: [plat-hsdk]: Temporary fix to set CPU frequency to 1GHz\n  ARC: fix allnoconfig build warning\n  ARCv2: boot log: identify HS48 cores (dual issue)\n  ARC: boot log: decontaminate ARCv2 ISA_CONFIG register\n  arc: remove redundant UTS_MACHINE define in arch/arc/Makefile\n  ARC: [plat-eznps] Update platform maintainer as Noam left\n  ARC: [plat-hsdk] use actual clk driver to manage cpu clk\n  ARC: [*defconfig] Reenable soft lock-up detector\n  ARC: [plat-axs10x] sdio: Temporary fix of sdio ciu frequency\n  ARC: [plat-hsdk] sdio: Temporary fix of sdio ciu frequency\n  ARC: [plat-axs103] Add temporary quirk to reset ethernet IP Merge tag 'xfs-4.14-fixes-4' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n\n - fix a race between overlapping copy on write aio\n\n - fix cow fork swapping when we defragment reflinked files\n\n* tag 'xfs-4.14-fixes-4' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: handle racy AIO in xfs_reflink_end_cow\n  xfs: always swap the cow forks when swapping extents Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A collection of fixes for this series. This contains:\n\n   - NVMe pull request from Christoph, one uuid attribute fix, and one\n     fix for the controller memory buffer address for remapped BARs.\n\n   - use-after-free fix for bsg, from Benjamin Block.\n\n   - bcache race/use-after-free fix for a list traversal, fixing a\n     regression in this merge window. From Coly Li.\n\n   - null_blk change configfs dependency change from a 'depends' to a\n     'select'. This is a change from this merge window as well. From me.\n\n   - nbd signal fix from Josef, fixing a regression introduced with the\n     status code changes.\n\n   - nbd MAINTAINERS mailing list entry update.\n\n   - blk-throttle stall fix from Joseph Qi.\n\n   - blk-mq-debugfs fix from Omar, fixing an issue where we don't\n     register the IO scheduler debugfs directory, if the driver is\n     loaded with it. Only shows up if you switch through the sysfs\n     interface\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  bsg-lib: fix use-after-free under memory-pressure\n  nvme-pci: Use PCI bus address for data/queues in CMB\n  blk-mq-debugfs: fix device sched directory for default scheduler\n  null_blk: change configfs dependency to select\n  blk-throttle: fix possible io stall when upgrade to max\n  MAINTAINERS: update list for NBD\n  nbd: fix -ERESTARTSYS handling\n  nvme: fix visibility of \"uuid\" ns attribute\n  bcache: use llist_for_each_entry_safe() in __closure_wake_up() Merge tag 'pci-v4.14-fixes-4' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n \"Fix legacy IDE probe issues exposed by recent PCI core IRQ mapping\n  changes (Bartlomiej Zolnierkiewicz, Lorenzo Pieralisi)\"\n\n* tag 'pci-v4.14-fixes-4' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  ide: fix IRQ assignment for PCI bus order probing\n  ide: pci: free PCI BARs on initialization failure\n  ide: free hwif->portdev on hwif_init() failure Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n\n - Bring initialisation of user space undefined instruction handling\n   early (core_initcall) since late_initcall() happens after modprobe in\n   initramfs is invoked. Similar fix for fpsimd initialisation\n\n - Increase the kernel stack when KASAN is enabled\n\n - Bring the PCI ACS enabling earlier via the\n   iort_init_platform_devices()\n\n - Fix misleading data abort address printing (decimal vs hex)\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: Ensure fpsimd support is ready before userspace is active\n  arm64: Ensure the instruction emulation is ready for userspace\n  arm64: Use larger stacks when KASAN is selected\n  ACPI/IORT: Fix PCI ACS enablement\n  arm64: fix misleading data abort decoding Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Radim Krčmář:\n\n - fix PPC XIVE interrupt delivery\n\n - fix x86 RCU breakage from asynchronous page faults when built without\n   PREEMPT_COUNT\n\n - fix x86 build with -frecord-gcc-switches\n\n - fix x86 build without X86_LOCAL_APIC\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: add X86_LOCAL_APIC dependency\n  x86/kvm: Move kvm_fastop_exception to .fixup section\n  kvm/x86: Avoid async PF preempting the kernel incorrectly\n  KVM: PPC: Book3S: Fix server always zero from kvmppc_xive_get_xive() Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n \"This is a pretty small pull request. Only 6 patches in total. There\n  are no outstanding -rc patches on the mailing list after this pull\n  request, so only if some new issues are discovered in the remainder of\n  the rc cycles will you hear from me again.\n\n  Summary:\n   - a fix for iwpm netlink usage\n   - a fix for error unwinding in mlx5\n   - two fixes to vlan handling in qedr\n   - a couple small i40iw fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:\n  i40iw: Fix port number for query QP\n  i40iw: Add missing memory barriers\n  RDMA/qedr: Parse vlan priority as sl\n  RDMA/qedr: Parse VLAN ID correctly and ignore the value of zero\n  IB/mlx5: Fix label order in error path handling\n  RDMA/iwpm: Properly mark end of NL messages Merge branch 'for-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fixes from David Sterba:\n \"Two more fixes for bugs introduced in 4.13.\n\n  The sector_t problem with 32bit architecture and !LBDAF config seems\n  serious but the number of affected deployments is hopefully low.\n\n  The clashing status bits could lead to a confusing in-memory state of\n  the whole-filesystem operations if used with the quota override sysfs\n  knob\"\n\n* 'for-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  Btrfs: fix overlap of fs_info::flags values\n  btrfs: avoid overflow when sector_t is 32 bit Merge tag 'ceph-for-4.14-rc4' of git://github.com/ceph/ceph-client\n\nPull ceph fixes from Ilya Dryomov:\n \"Two fixups for CephFS snapshot-handling patches in -rc1\"\n\n* tag 'ceph-for-4.14-rc4' of git://github.com/ceph/ceph-client:\n  ceph: fix __choose_mds() for LSSNAP request\n  ceph: properly queue cap snap for newly created snap realm Merge branch 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull overlayfs fixes from Miklos Szeredi:\n \"Fix a regression in 4.14 and one in 4.13. The latter is a case when\n  Docker is doing something it really shouldn't and gets away with it.\n  We now print a warning instead of erroring out.\n\n  There are also fixes to several error paths\"\n\n* 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  ovl: fix regression caused by exclusive upper/work dir protection\n  ovl: fix missing unlock_rename() in ovl_do_copy_up()\n  ovl: fix dentry leak in ovl_indexdir_cleanup()\n  ovl: fix dput() of ERR_PTR in ovl_cleanup_index()\n  ovl: fix error value printed in ovl_lookup_index()\n  ovl: fix may_write_real() for overlayfs directories Merge tag 'powerpc-4.14-4' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"Nine small fixes, really nothing that stands out.\n\n  A work-around for a spurious MCE on Power9. A CXL fault handling fix,\n  some fixes to the new XIVE code, and a fix to the new 32-bit\n  STRICT_KERNEL_RWX code.\n\n  Fixes for old code/stable: an fix to an incorrect TLB flush on boot\n  but not on any current machines, a compile error on 4xx and a fix to\n  memory hotplug when using radix (Power9).\n\n  Thanks to: Anton Blanchard, Cédric Le Goater, Christian Lamparter,\n  Christophe Leroy, Christophe Lombard, Guenter Roeck, Jeremy Kerr,\n  Michael Neuling, Nicholas Piggin\"\n\n* tag 'powerpc-4.14-4' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/powernv: Increase memory block size to 1GB on radix\n  powerpc/mm: Call flush_tlb_kernel_range with interrupts enabled\n  powerpc/xive: Clear XIVE internal structures when a CPU is removed\n  powerpc/xive: Fix IPI reset\n  powerpc/4xx: Fix compile error with 64K pages on 40x, 44x\n  powerpc: Fix action argument for cpufeatures-based TLB flush\n  cxl: Fix memory page not handled\n  powerpc: Fix workaround for spurious MCE on POWER9\n  powerpc: Handle MCE on POWER9 with only DSISR bit 30 set Merge tag 'drm-fixes-for-v4.14-rc4' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Some i915 fixes from the last two weeks (as they were on a strange\n  base and I just waited for rc3), also a single sun4i hdmi fix\"\n\n* tag 'drm-fixes-for-v4.14-rc4' of git://people.freedesktop.org/~airlied/linux:\n  drm/i915/glk: Fix DMC/DC state idleness calculation\n  drm/i915/cnl: Reprogram DMC firmware after S3/S4 resume\n  drm/i915: Fix DDI PHY init if it was already on\n  drm/sun4i: hdmi: Disable clks in bind function error path and unbind function\n  drm/i915/bios: ignore HDMI on port A\n  drm/i915: remove redundant variable hw_check\n  drm/i915: always update ELD connector type after get modes Merge branch 'core-watchdog-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull watchddog clean-up and fixes from Thomas Gleixner:\n \"The watchdog (hard/softlockup detector) code is pretty much broken in\n  its current state. The patch series addresses this by removing all\n  duct tape and refactoring it into a workable state.\n\n  The reasons why I ask for inclusion that late in the cycle are:\n\n   1) The code causes lockdep splats vs. hotplug locking which get\n      reported over and over. Unfortunately there is no easy fix.\n\n   2) The risk of breakage is minimal because it's already broken\n\n   3) As 4.14 is a long term stable kernel, I prefer to have working\n      watchdog code in that and the lockdep issues resolved. I wouldn't\n      ask you to pull if 4.14 wouldn't be a LTS kernel or if the\n      solution would be easy to backport.\n\n   4) The series was around before the merge window opened, but then got\n      delayed due to the UP failure caused by the for_each_cpu()\n      surprise which we discussed recently.\n\n  Changes vs. V1:\n\n   - Addressed your review points\n\n   - Addressed the warning in the powerpc code which was discovered late\n\n   - Changed two function names which made sense up to a certain point\n     in the series. Now they match what they do in the end.\n\n   - Fixed a 'unused variable' warning, which got not detected by the\n     intel robot. I triggered it when trying all possible related config\n     combinations manually. Randconfig testing seems not random enough.\n\n  The changes have been tested by and reviewed by Don Zickus and tested\n  and acked by Micheal Ellerman for powerpc\"\n\n* 'core-watchdog-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (36 commits)\n  watchdog/core: Put softlockup_threads_initialized under ifdef guard\n  watchdog/core: Rename some softlockup_* functions\n  powerpc/watchdog: Make use of watchdog_nmi_probe()\n  watchdog/core, powerpc: Lock cpus across reconfiguration\n  watchdog/core, powerpc: Replace watchdog_nmi_reconfigure()\n  watchdog/hardlockup/perf: Fix spelling mistake: \"permanetely\" -> \"permanently\"\n  watchdog/hardlockup/perf: Cure UP damage\n  watchdog/hardlockup: Clean up hotplug locking mess\n  watchdog/hardlockup/perf: Simplify deferred event destroy\n  watchdog/hardlockup/perf: Use new perf CPU enable mechanism\n  watchdog/hardlockup/perf: Implement CPU enable replacement\n  watchdog/hardlockup/perf: Implement init time detection of perf\n  watchdog/hardlockup/perf: Implement init time perf validation\n  watchdog/core: Get rid of the racy update loop\n  watchdog/core, powerpc: Make watchdog_nmi_reconfigure() two stage\n  watchdog/sysctl: Clean up sysctl variable name space\n  watchdog/sysctl: Get rid of the #ifdeffery\n  watchdog/core: Clean up header mess\n  watchdog/core: Further simplify sysctl handling\n  watchdog/core: Get rid of the thread teardown/setup dance\n  ... Merge tag 'pm-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fix from Rafael Wysocki:\n \"This fixes a code ordering issue in the main suspend-to-idle loop that\n  causes some \"low power S0 idle\" conditions to be incorrectly reported\n  as unmet with suspend/resume debug messages enabled\"\n\n* tag 'pm-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  PM / s2idle: Invoke the ->wake() platform callback earlier Merge tag 'for-4.14/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n\n - a stable fix for the alignment of the event number reported at the\n   end of the 'DM_LIST_DEVICES' ioctl.\n\n - a couple stable fixes for the DM crypt target.\n\n - a DM raid health status reporting fix.\n\n* tag 'for-4.14/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm raid: fix incorrect status output at the end of a \"recover\" process\n  dm crypt: reject sector_size feature if device length is not aligned to it\n  dm crypt: fix memory leak in crypt_ctr_cipher_old()\n  dm ioctl: fix alignment of event number in the device list Merge tag 'sound-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A collection of small fixes, mostly with stable ones:\n\n - X32 ABI fix for PCM; likely not so many people suffer from it, but\n   still better to fix\n\n - Two minor kernel warning fixes on USB audio devices spotted by\n   syzkaller\n\n - Regression fix of echoaudio due to its inconsistent dimension\n\n - Fix for HBR support on Intel DP audio, on some recent chips\n\n - USB-audio quirk for yet another Plantronics devices\n\n - Fix for potential double-fetch in ASIHPI FIFO queue\"\n\n* tag 'sound-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: usx2y: Suppress kernel warning at page allocation failures\n  Revert \"ALSA: echoaudio: purge contradictions between dimension matrix members and total number of members\"\n  ALSA: usb-audio: Check out-of-bounds access by corrupted buffer descriptor\n  ALSA: pcm: Fix structure definition for X32 ABI\n  ALSA: usb-audio: Add sample rate quirk for Plantronics C310/C520-M\n  ALSA: hda - program ICT bits to support HBR audio\n  ALSA: asihpi: fix a potential double-fetch bug when copying puhm\n  ALSA: compress: Remove unused variable Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID subsystem fixes from Jiri Kosina:\n\n - buffer management size fix for i2c-hid driver, from Adrian Salido\n\n - tool ID regression fixes for Wacom driver from Jason Gerecke\n\n - a few small assorted fixes and a few device ID additions\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  Revert \"HID: multitouch: Support ALPS PTP stick with pid 0x120A\"\n  HID: hidraw: fix power sequence when closing device\n  HID: wacom: Always increment hdev refcount within wacom_get_hdev_data\n  HID: wacom: generic: Clear ABS_MISC when tool leaves proximity\n  HID: wacom: generic: Send MSC_SERIAL and ABS_MISC when leaving prox\n  HID: i2c-hid: allocate hid buffers for real worst case\n  HID: rmi: Make sure the HID device is opened on resume\n  HID: multitouch: Support ALPS PTP stick with pid 0x120A\n  HID: multitouch: support buttons and trackpoint on Lenovo X1 Tab Gen2\n  HID: wacom: Correct coordinate system of touchring and pen twist\n  HID: wacom: Properly report negative values from Intuos Pro 2 Bluetooth\n  HID: multitouch: Fix system-control buttons not working\n  HID: add multi-input quirk for IDC6680 touchscreen\n  HID: wacom: leds: Don't try to control the EKR's read-only LEDs\n  HID: wacom: bits shifted too much for 9th and 10th buttons Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Check iwlwifi 9000 reorder buffer out-of-space condition properly,\n    from Sara Sharon.\n\n 2) Fix RCU splat in qualcomm rmnet driver, from Subash Abhinov\n    Kasiviswanathan.\n\n 3) Fix session and tunnel release races in l2tp, from Guillaume Nault\n    and Sabrina Dubroca.\n\n 4) Fix endian bug in sctp_diag_dump(), from Dan Carpenter.\n\n 5) Several mlx5 driver fixes from the Mellanox folks (max flow counters\n    cap check, invalid memory access in IPoIB support, etc.)\n\n 6) tun_get_user() should bail if skb->len is zero, from Alexander\n    Potapenko.\n\n 7) Fix RCU lookups in inetpeer, from Eric Dumazet.\n\n 8) Fix locking in packet_do_bund().\n\n 9) Handle cb->start() error properly in netlink dump code, from Jason\n    A. Donenfeld.\n\n10) Handle multicast properly in UDP socket early demux code. From Paolo\n    Abeni.\n\n11) Several erspan bug fixes in ip_gre, from Xin Long.\n\n12) Fix use-after-free in socket filter code, in order to handle the\n    fact that listener lock is no longer taken during the three-way TCP\n    handshake. From Eric Dumazet.\n\n13) Fix infoleak in RTM_GETSTATS, from Nikolay Aleksandrov.\n\n14) Fix tail call generation in x86-64 BPF JIT, from Alexei Starovoitov.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (77 commits)\n  net: 8021q: skip packets if the vlan is down\n  bpf: fix bpf_tail_call() x64 JIT\n  net: stmmac: dwmac-rk: Add RK3128 GMAC support\n  rndis_host: support Novatel Verizon USB730L\n  net: rtnetlink: fix info leak in RTM_GETSTATS call\n  socket, bpf: fix possible use after free\n  mlxsw: spectrum_router: Track RIF of IPIP next hops\n  mlxsw: spectrum_router: Move VRF refcounting\n  net: hns3: Fix an error handling path in 'hclge_rss_init_hw()'\n  net: mvpp2: Fix clock resource by adding an optional bus clock\n  r8152: add Linksys USB3GIGV1 id\n  l2tp: fix l2tp_eth module loading\n  ip_gre: erspan device should keep dst\n  ip_gre: set tunnel hlen properly in erspan_tunnel_init\n  ip_gre: check packet length and mtu correctly in erspan_xmit\n  ip_gre: get key from session_id correctly in erspan_rcv\n  tipc: use only positive error codes in messages\n  ppp: fix __percpu annotation\n  udp: perform source validation for mcast early demux\n  IPv4: early demux can return an error code\n  ... Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"Our first batch of fixes this release cycle, unfortunately a bit\n  noisier than usual. Two major groups stand out:\n\n   - Some pinctril dts/dtsi changes for stm32 due to a new driver being\n     merged during the merge window, and this aligns the DT contents\n     between the old format and the new. This could arguably be moved to\n     the next merge window but it also seemed relatively harmless to\n     include now.\n\n   - Amlogic/meson had driver changes merged that required devicetree\n     changes to avoid functional/performance regressions. I've already\n     asked them to be more careful about this going forward, and making\n     sure drivers are compatible with older DTs when they make these\n     kind of changes. The platform is actively being upstreamed so\n     there's a few things in flight, we've seen this happen before and\n     sometimes it's hard to catch in time.\n\n  Besides that there is the usual mix of minor fixes\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (33 commits)\n  ARM: dts: stm32: use right pinctrl compatible for stm32f469\n  ARM: dts: stm32: Fix STMPE1600 binding on stm32429i-eval board\n  ARM: defconfig: update Gemini defconfig\n  ARM: defconfig: FRAMEBUFFER_CONSOLE can no longer be =m\n  arm64: dts: rockchip: add the grf clk for dw-mipi-dsi on rk3399\n  reset: Restrict RESET_HSDK to ARC_SOC_HSDK or COMPILE_TEST\n  ARM: dts: da850-evm: add serial and ethernet aliases\n  ARM: dts: am43xx-epos-evm: Remove extra CPSW EMAC entry\n  ARM: dts: am33xx: Add spi alias to match SOC schematics\n  ARM: OMAP2+: hsmmc: fix logic to call either omap_hsmmc_init or omap_hsmmc_late_init but not both\n  ARM: dts: dra7: Set a default parent to mcasp3_ahclkx_mux\n  ARM: OMAP2+: dra7xx: Set OPT_CLKS_IN_RESET flag for gpio1\n  ARM: dts: nokia n900: drop unneeded/undocumented parts of the dts\n  arm64: dts: rockchip: Correct MIPI DPHY PLL clock on rk3399\n  arm64: dt marvell: Fix AP806 system controller size\n  MAINTAINERS: add Macchiatobin maintainers entry\n  ARC: reset: remove the misleading v1 suffix all over\n  ARC: reset: add missing DT binding documentation for HSDKv1 reset driver\n  ARC: reset: Only build on archs that have IOMEM\n  ARM: at91: Replace uses of virt_to_phys with __pa_symbol\n  ... Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"A lot of stuff, sorry about that. A week on a beach, then a bunch of\n  time catching up then more time letting it bake in -next. Shan't do\n  that again!\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (51 commits)\n  include/linux/fs.h: fix comment about struct address_space\n  checkpatch: fix ignoring cover-letter logic\n  m32r: fix build failure\n  lib/ratelimit.c: use deferred printk() version\n  kernel/params.c: improve STANDARD_PARAM_DEF readability\n  kernel/params.c: fix an overflow in param_attr_show\n  kernel/params.c: fix the maximum length in param_get_string\n  mm/memory_hotplug: define find_{smallest|biggest}_section_pfn as unsigned long\n  mm/memory_hotplug: change pfn_to_section_nr/section_nr_to_pfn macro to inline function\n  kernel/kcmp.c: drop branch leftover typo\n  memremap: add scheduling point to devm_memremap_pages\n  mm, page_alloc: add scheduling point to memmap_init_zone\n  mm, memory_hotplug: add scheduling point to __add_pages\n  lib/idr.c: fix comment for idr_replace()\n  mm: memcontrol: use vmalloc fallback for large kmem memcg arrays\n  kernel/sysctl.c: remove duplicate UINT_MAX check on do_proc_douintvec_conv()\n  include/linux/bitfield.h: remove 32bit from FIELD_GET comment block\n  lib/lz4: make arrays static const, reduces object code size\n  exec: binfmt_misc: kill the onstack iname[BINPRM_BUF_SIZE] array\n  exec: binfmt_misc: fix race between load_misc_binary() and kill_node()\n  ... Merge branch 'fixes-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull smack fix from James Morris:\n \"It fixes a bug in xattr_getsecurity() where security_release_secctx()\n  was being called instead of kfree(), which leads to a memory leak in\n  the capabilities code. smack_inode_getsecurity is also fixed to behave\n  correctly when called from there\"\n\n* 'fixes-v4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  lsm: fix smack_inode_removexattr and xattr_getsecurity memleak Merge tag 'trace-v4.14-rc1-3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixlets from Steven Rostedt:\n \"Two updates:\n\n   - A memory fix with left over code from spliting out ftrace_ops and\n     function graph tracer, where the function graph tracer could reset\n     the trampoline pointer, leaving the old trampoline not to be freed\n     (memory leak).\n\n   - The update to Paul's patch that added the unnecessary READ_ONCE().\n     This removes the unnecessary READ_ONCE() instead of having to\n     rebase the branch to update the patch that added it\"\n\n* tag 'trace-v4.14-rc1-3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  rcu: Remove extraneous READ_ONCE()s from rcu_irq_{enter,exit}()\n  ftrace: Fix kmemleak in unregister_ftrace_graph Merge branch 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fixlet from Tejun Heo:\n \"Minor documentation update\"\n\n* 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  Documentation: core-api: minor workqueue.rst cleanups Merge branch 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fix from Tejun Heo:\n \"The recent migration code updates assumed that migrations always\n  execute from the top to the bottom once and didn't clean up internal\n  states after each migration round; however, cgroup_transfer_tasks()\n  repeats the inner steps multiple times and the garbage internal states\n  from the previous iteration led to OOPS.\n\n  Waiman fixed the bug by reinitializing the relevant states at the end\n  of each migration round\"\n\n* 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: Reinit cgroup_taskset structure before cgroup_migrate_execute() returns Merge branch 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull percpu fixes from Tejun Heo:\n \"Rather important fixes this time.\n\n   - The new percpu area allocator had a subtle bug in how it iterates\n     the memory regions and could skip viable areas, which led to\n     allocation failures for module static percpu variables. Dennis\n     fixed the bug and another non-critical one in stat calculation.\n\n   - Mark noticed that the generic implementations of percpu local\n     atomic reads aren't properly protected against irqs and there's a\n     (slim) chance for split reads on some 32bit systems. Generic\n     implementations are updated to disable irq when read size is larger\n     than ulong size. This may have made some 32bit archs which can do\n     atomic local 64bit accesses generate sub-optimal code. We need to\n     find them out and implement arch-specific overrides\"\n\n* 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:\n  percpu: fix iteration to prevent skipping over block\n  percpu: fix starting offset for chunk statistics traversal\n  percpu: make this_cpu_generic_read() atomic w.r.t. interrupts Merge branch 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Nothing too interesting.\n\n  Arnd's gcc-7 warning fixes that slipped through the cracks for two\n  release cycles (my bad), and two minor low level driver updates\"\n\n* 'for-4.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  ahci: don't ignore result code of ahci_reset_controller()\n  ata_piix: Add Fujitsu-Siemens Lifebook S6120 to short cable IDs\n  ata: avoid gcc-7 warning in ata_timing_quantize Make subsurface compile with -DGSEAL_ENABLE\n\nThis forces us to use the proper gtk accessor functions.  It may not be\nworth it if people actually do the Qt conversion, but if we want to try\ngtk3 at some point, this might help.\n\nThis all came about because I was trying to explain on G+ what an\nimmense pain this all was to even figure out, if you don't actually know\ngtk at all.  Google and the gtk migration guide are almost useless, and\nthe gtk2 documentation itself actually uses the fields directly without\nany accessor functions in several places.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't mark divelist changed for automated merges after all\n\nThe intention was good, and this was added in commit 4982389ca762 (\"Fix\nsetting of the dive_table.preexisting logic\"), but it turns out to not\nbe that great idea after all.\n\nSo the thinking is that merging two dives clearly changes the dive list,\nand it really does.  At the same time, because it's an automated merge,\nif you re-read the old XML file, you'll get it done again, so saving the\nchanges doesn't really *matter*.\n\nAnd it turns out to be somewhat annoying with test dives: we have\n\n - dives/test23.xml:\n    <dive number='23' tripflag='INTRIP' date='2011-12-02' time='6:00:00' duration='30:00 min'>\n - dives/test25.xml:\n    <dive number='26' date='2011-12-02' time='6:00:00' duration='30:00 min'>\n\nthat merge automatically if you run subsurface on all the test dives\ntogether.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix overly complicated and fragile \"same_cylinder\" logic\n\nThe plot-info per-event 'same_cylinder' logic was fragile, and caused\nus to not print the beginning pressure of the first cylinder.\n\nIn particular, there was a nasty interaction with not all plot entries\nhaving pressures, and the whole logic that avoid some of the early\nplot entries because they are fake entries that are just there to make\nsure that we don't step off the edge of the world. When we then only\ndo certain things on the particular entries that don't have the same\ncylinder as the last plot entry, things don't always happen like they\nshould.\n\nFix this by:\n\n - get rid of the computed \"same_cylinder\" state entirely. All the\ncases where we use it, we might as well just look at what the last\ncylinder we used was, and thus \"same_cylinder\" is just about testing\nthe current cylinder index against that last index.\n\n - get rid of some of the edge conditions by just writing the loops\nmore clearly, so that they simply don't have special cases. For\nexample, instead of setting some \"last_pressure\" for a cylinder at\ncylinder changes, just set the damn thing on every single sample. The\nlast pressure will automatically be the pressure we set last! The code\nis simpler and more straightforward.\n\nSo this simplifies the code and just makes it less fragile - it\ndoesn't matter if the cylinder change happens to happen at a sample\nthat doesn't have a pressure reading, for example, because we no\nlonger care so deeply about exactly which sample the cylinder change\nhappens at. As a result, the bug Mika noticed just goes away.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Include git revision in version number\n\nThis makes sure that it's easy to tell from the about box whether this is\na released version or a development build.\n\nIf it is compiled at the exact location of the tag, \"git describe\n--tags\" will just return the tag-name. Otherwise it will return\nsomething like this\n\n    v2.1-393-ge03f31525aab\n\nwhich means \"v2.1 plus 393 commits, git SHA1 of tip is e03f31525aab\",\nwhich is a nice combination of git-readable (only the actual SHA1\nmatters) and human-readable (393 commits on top of v2.1).\n\nAnd if you don't build from git sources, and don't have git installed,\nit falls back on the old \"v$(VERSION)\" string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove saving of dive computer nicnames in system config\n\nWe save the (more complete) dive computer information in the XML file\nwith serial numbers and firmware version if we know about them, so using\na complicated string in the system config was redundant and confusing.\n\nSo remove that code.\n\nNOTE! Since the dive computer nicknames are now only saved if the XML\nfile is saved, we also mark the dive list \"changed\" when we edit the\nnicknames.  That way we'll be prompted to save things before exiting,\neven if we don't actually edit any actual dive data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save all dive computer nicknames - whether used or not\n\nWe used to save dive computer information only if that dive computer was\nactually used in any of the dives we saved.  But we can simplify the\ncode if we just always save any dive computers we know about.  And it\ndoes allow for some usage cases where you have nicknames for other\npeoples computers that you may not actively use, but you want to see if\nyou end up loading multiple XML files in one go.\n\nSo there's just no compelling reason to not just save all the info we\nhave.  And this will make it less painful to remove the \"use system\nconfig for dive computer nicknames\", because you can also use this to\ncontinue to gather dive computer info in a separate XML file if you want\nto.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix setting of the dive_table.preexisting logic\n\nThe 'preexisting' value is used for downloading dives: we want to add\nnew dives but, but then compare those new dives against the\npreexisting ones before we start sorting things and possibly merging\nthem.\n\nHowever, the value was only updated sporadically, resulting in it\nhaving stale information in it.  Which would cause problems\nparticularly if you deleted dives, so that the preexisting value would\npoint past the actual existing values!\n\nSo just update it unconditionally in dive_list_update_dives(), which\nanything that changes the dive list is supposed to call in order to\ndisplay the changes anyway.\n\nAlso, just for safety, when removing a dive, put NULL in the last dive\ntable location.  Nobody should ever access past the end anyway (this\nis enforced by 'get_dive()') but there are places that access the dive\nlist table directly, and the libdivecomputer download was one of\nthose.  No reason to leave stale dive pointers possibly around for\nuses like that.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix temperature rounding issues\n\nTemperatures can actually be negative, which means that rounding by\nadding 0.5 and casting to 'int' is not correct.\n\nWe could use '(int)(rint(val))' instead, but the only place we care\nabout might as well just print out the floating point representation\nwith a precision of two digits instead.  So if you have a dive computer\nthat gives you the precision, you might see '3.5˚C' as the temperature.\n\nRemove the helper functions that nobody uses and that get the rounding\nwrong anyway.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove XML parsing special case temperature code\n\nWe had various hacky historical artifacts in our XML parsing, partly\nfrom our legacy of parsing integer and floating point data separately\n(we used to recognize certain import format differences based on whether\nthe data was in a floating point or integer format).  And partly from\ntrying to do a good job of importing crap from other dive log software.\n\nAnyway, that actually meant that we refused to parse negative numbers,\nand we ignored temperatures of zero because some diving log would do\nthat for missing values.\n\nBoth of these actually bit us when parsing our native XML.  Of course,\nonly crazy ice divers would ever notice.\n\nNoticed by Henrik Brautaset Aronsen.\n\nReported-acked-and-tested-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move more dive computer filled data to the divecomputer structure\n\nThis moves the fields 'duration', 'surfacetime', 'maxdepth',\n'meandepth', 'airtemp', 'watertemp', 'salinity' and 'surface_pressure'\nto the per-divecomputer data structure.  They are filled in by the dive\ncomputer, and normally not edited.\n\nNOTE! All actual *use* of this data was then changed from dive->field to\ndive->dc.field programmatically with a shell-script and sed, and the\nresult then edited for details.  So while the XML save and restore code\nhas been updated, all the displaying etc will currently always just show\nthe first dive computer entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use proper helper functions for dive location and for_each_dive\n\nThis makes the code use the \"dive_has_location()\" function rather than\ncheck the longitude and latitude directly.\n\nIt also uses \"for_each_dive()\" rather than open-coding it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Satellite icon diet\n\n[Dirk Hohndel: converted to png and .h]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> libdivecomputer: add air temperature fixups for Suunto\n\nlibdivecomputer doesn't actually seem to support air temperature\nreporting at all, but at least for Suunto dive computers the air\ntemperature is recorded as the temperature for the first sample.\n\nSo since we already have vendor-specific libdivecomputer hacks, let's\njust add that one as a rule.  It may be that other divecomputers do this\ntoo, so this adds it as a generic concept - it's just that right now the\nflag for \"air temperature in first sample\" is only set for Suunto dive\ncomputers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on the \"prefer downloaded\" dive computer model\n\nIt used to be that when you checked the \"Prefer downloaded\" checkmark,\nwe'd throw away *any* old dive computer data.  That was good, because it\nallowed us to start from a clean slate when you had some old subsurface\ndata with questionable dive computer data.\n\nHowever, it was a bit extreme, and it's really not what you want if you\nalready have (good) dive computer data from other dive computers.\n\nSo this modifies the logic a bit.  Instead of throwing away all old dive\ncomputer data, the \"Prefer downloaded\" checkmark now means:\n\n - the newly downloaded data becomes the \"primary\" dive computer data\n   (ie the first in the list)\n\n - if there was old dive computer data that *could* have been from this\n   new dive computer (ie it didn't have model information, or it had a\n   matching model but no device ID data), we throw that away\n\n - but any existing dive computer data from other dive computers is left.\n\nThis seems to be much closer to what we really would want for a new\n\"preferred\" download.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix suunto serial number confusion in libdivecomputer\n\nlibdivecomputer has started giving the Suunto serial numbers in a\ndifferent format, which means that we have the same device with two\ndifferent serial numbers, and then we need two different ways of turning\nthe numerical entity into a string.\n\nLook at the number pattern to see figure out which version of the format\nit is that libdivecomputer is reporting, and turn it back into the\noriginal format so that we can reliably give the right string for it.\nThis also mean sthat the device ID stays the same regardless of\nlibdivecomputer version.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Only offer to show dive on map if we have location information\n\nThis adds the \"Show in map\" menu entry to the divelist only if we\nactually have a location to show.\n\nOf course, having some way to visually see whether we have a GPS\nlocation even before we show the menu would probably be good. Maybe a\nmarker in the \"location\" string or something. But in the meanwhile, at\nleast we don't have that menu entry if we have nothing to show.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix odd calculated deco \"ripples\"\n\nPreviously we calculate the ceiling at every single second, using the\ninterpolated depth but then only *save* the ceiling at the points where we\nhave a profile event (the whole deco_allowed_depth() function doesn't\nchange any state, so we can just drop it entirely at points that we aren't\ngoing to save)\n\nWhy is it incorrect? I'll try to walk through my understanding of it, by\nswitching things around a bit.\n\n- the whole \"minimum tissue tolerance\" thing could equally well be\n  rewritten to be about \"maximum ceiling\". And that's easier to think\n  about (since it's what we actually show), so let's do that.\n\n- so turning \"min_pressure\" into \"max_ceiling\", doing the whole\n  comparison inside the loop means is that we are calculating the\n  maximum ceiling value for the duration of the last sample. And then\n  instead of visualizing the ceiling AT THE TIME OF MAXIMUM CEILING, we\n  visualize that maximal ceiling value AT THE TIME OF THE SAMPLE.\n\nEnd result: we visualize the ceiling at the wrong time. We visualize\nwhat was *a* ceiling somewhere in between that sample and the previous\none, but we then assign that value to the time of the sample itself.\n\nSo it ends up having random odd effects.\n\nAnd that also explains why you only see the effect during the ascent.\nDuring the descent, the max ceiling will be at the end of our\nlinearization of the sampling, which is - surprise surprise - the position\nof the sample itself. So we end up seeing the right ceiling at the right\ntime while descending. So the visualization matches the math.\n\nBut during desaturation, the maximum ceiling is not at the end of the\nsample period, it's at the beginning. So the whole \"max ceiling\" thing has\nbasically turned what should be a smooth graph into something that\napproaches being a step-wise graph at each sample. Ergo: a ripple.\n\nAnd doing the \"max_ceiling during the sample interval\" thing may sound\nlike the safe thing to do, but the thing is, that really *is* a false\nsense of safety. The ceiling value is *not* what we compute. The ceiling\nvalue is just a visualization of what we computed. Playing games with it\ncan only make the visualization of the real data worse, not better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add default filename and divelist font to prefs structure\n\n.. and add the usual logic to not save the default values.\n\nThis also simplifies the initial system-specific setup of both of these:\nsince we have defaults for all the preferences that get set up at\nstartup, we can just initialize those defaults to the system-specific\nfonts then and there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default gradient factor setting\n\nTesting the new \"don't even bother saving default values\" showed that the\ndefault values for the deco gradient factors were undefined.\n\nOr rather, they were over-defined.\n\nWe had defaults for the UI (30 and 75 for GFlow/GFhigh respectively - the\nconfig ones are in percent), *and* we had defaults in deco.c for the deco\ncode itself (0.35 and 0.75 respectively - in deco.c they are represented\nas fractions, not percent).\n\nAnd if the config entries had never been written, and were assumed to be\nthe defaults, the UI code thought the defaults were 30/75, but they had\nnever been *set* to those defaults, so actual default calculations\nsilently used the 35/75 in deco.c, which is very confusing (you could go\nto the preferences page, see the 30/75 there, and it would not actually\nmatch th evalues used for computation).\n\nOf course, with an old config file that saves even default entries, you'd\nnever see that if you ever changed anything in the preferences, because\nyou'd always have explicit gflow/high values. But now it's much easier to\nsee the conflicting default values.\n\nFix it by just always using the UI defaults (or set values) to set the\nactual deco values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV if no pre-existing nickname information\n\nLoading an xml file with dive computer information without any\npreexisting nickname data would try to \"remember\" that NULL nickname.\nCausing a SIGSEGV if there was no nickname information.\n\nThe bug was introduced by commit ec38d3708df2 (\"Move device_info handling\ninto a new 'device.c' file\") when I inadvertently removed a bit too much\ncode. It actually wants to remember a missing DC nickname as an empty one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update preference saving for numeric values\n\nThis does the \"don't save defaults\" for numeric values too.\n\nAlso, move the preferences loading/saving to a new \"prefs.c\" file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up preference saving code\n\nThe old code (on purpose) didn't try to differentiate \"nonexisting\nboolean configuration\" with \"existing boolean configuration set to\nfalse\", which is problematic if we optimize the saving to not save\ndefault preferences at all.\n\nWhich this does.\n\nSo in addition to the logic to know about default preferences, this has\nto change the interfaces for the PREF_BOOL reading code so that you can\ntell the difference between \"no value\" and \"false\".\n\nAnd since the previous calling convention was an abomination of doing\npointer casting and having case-statements for the config types, change\nthat while at it.  Both from a usage perspective *and* from a back-end\nperspective it is actually much simpler to just have different functions\nfor the string vs boolean config read/write versions.  The OSX versions\nin particular end up being one-liners.\n\n(The GConf library is a nightmare, and doesn't seem to have any way to\nknow whether a boolean value exists or not, so you have to read it as a\nGConfVal and then turn it into a gboolean rather than just get the \"oh,\nit didn't exist\" as an error value).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the default preferences explicit\n\nThis makes it explicit what the default preferences are, so that we can\nmore easily avoid unnecessarily saving default settings.  It also makes\nimperial metrics the default for the US (Burma and Liberia always get\nforgotten!)\n\nRight now we tend to be somewhat confused about defaults.  We do have\nthem, but then even if something has a default value, we tend to write\nit out to the config file.  Which is not just unnecessary, but makes it\nreally hard to see after-the-fact whether the user actually wanted that\n*specific* value, or whether they just wanted the default behavior.\n\nSo this prepares for having explicit configuration for when we want\nsomething different than the defaults.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up preference data structure definition into 'pref.h'\n\n.. and rename the badly named 'output_units/input_units' variables.\n\nWe used to have this confusing thing where we had two different units\n(input vs output) that *look* like they are mirror images, but in fact\n\"output_units\" was the user units, and \"input_units\" are the XML parsing\nunits.\n\nSo this renames them to be clearer.  \"output_units\" is now just \"units\"\n(it's the units a user would ever see), and \"input_units\" is now\n\"xml_parsing_units\" and set by the XML file parsers to reflect the units\nof the parsed file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Assemble the actual Suunto serial number\n\nIt turns out that the serial number returned by libdivecomputer isn't\nreally the serial number as interpreted by the vendor. Those tend to be\nstrings, but libdivecomputer gives us a 32bit number.\n\nSome experimenting showed that for the Suunto devies tested the serial\nnumber is encoded in that 32bit number:\n\nIt so happens that the Suunto serial number strings are strings that have\nall numbers, but they aren't *one* number. They are four bytes\nrepresenting two numbers each, and the \"23500027\" string is actually the\nfour bytes 23 50 00 27 (0x17 0x32 0x00 0x1b). And libdivecomputer has\nincorrectly parsed those four bytes as one number, not as the encoded\nserial number string it is. So the value 389152795 is actually hex\n0x1732001b, which is 0x17 0x32 0x00 0x1b, which is - 23 50 00 27.\n\nThis should be done by libdivecomputer, but hey, in the meantime this at\nleast shows the concept. And helps test the XML save/restore code.\n\nIt depends on the two patches that create the whole \"device.c\"\ninfrastructure, of course. With this, my dive file ends up having the\nsettings section look like this:\n\n  <divecomputerid model='Suunto Vyper Air' deviceid='d4629110'\nserial='01201094' firmware='1.1.22'/>\n  <divecomputerid model='Suunto HelO2' deviceid='995dd566'\nserial='23500027' firmware='1.0.4'/>\n\nwhere the format of the firmware version is something I guessed at,\nbut it was the obvious choice (again, it's byte-based, I'm ignoring\nthe high byte that is zero for both of my Suuntos).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move device_info handling into a new 'device.c' file\n\nThe legacy nickname wrappers (that use the device_info structure) are\nleft in gtk-gui.c.  We can slowly start moving away from them, we don't\nwant to start exporting that thing as some kind of generic interface.\n\nThis isn't a pure code movement - because we leave the legacy interfaces\nalone, there are a few new interfaces in device.c (like \"create a new\ndevice_info entry\") that were embedded into the legacy \"create nickname\"\ncode, and needed to be abstracted out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rename 'dcnicknamelist' struct as 'device_info'\n\nWe'll start recording more than just nicknames in it, like serial\nnumbers and firmware version etc.  Start off just renaming it, and\nre-ordering the members to reflect how the nickname is not the primary\nissue.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up duplicated depth interpolation\n\nWe have several places where we interpolate the depth based on two\nsamples and the time between them. Some of them use floating point, some\nof them don't, some of them meant to do it but didn't.\n\nJust use a common helper function for it. I seriously doubt the floating\npoint here really matters, since doing it in integers is not going to\noverflow unless we're interpolating between two samples that are hours\napart at hundreds of meters of depth, but hey, it gives that rounding to\nthe nearest millimeter. Which I'm sure matters.\n\nAnyway, we can probably just get rid of the rounding and the floating\npoint math, but it won't really hurt either, so at least do it\nconsistently.\n\nThe interpolation could be for other things than just depth, but we\nprobably don't have anything else we'd want to interpolate. But make the\nfunction naming generic just in case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't walk back in time\n\nA strange and buggy dive where time goes backwards (right now easy to\ncreate with the dive plan editor) can cause us to run out of plot info\nelements.\n\nThis prevents that from causing memory corruption by refusing to go back\nin time.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve dive trip sort comparison function\n\nWe do want to compare \"loose\" dives too, but we need to be a bit\ncareful, and always use the trip date as the primary sort key for any\ndives that are not in the same trip.\n\nReported-and-tested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify dive planning code\n\nThis simplifies the dive planning code by:\n\n- allowing empty gas mixes (which means \"pick previous gas\")\n\n- avoiding unnecessary strdup/free calls (this requires us to handle\n  \"const char *\" in the parsers, but that was already true from a code\n  standpoint, just not a type one)\n\n- re-use the \"plan()\" function for a successful dive plan, rather than\n  open-coding the dive plan segment handling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do pressure-time integral using integer values\n\nNow that the pressure_time calculations are done in our \"native\"\ninteger units (millibar and seconds), we might as well keep using\ninteger variables.\n\nWe still do floating point calculations at various stages for the\nconversions (including turning a depth in mm into a pressure in mbar),\nso it's not like this avoids floating point per se. And the final\napproximation is still done as a fraction of the pressure-time values,\nusing floating point. So floating point is very much involved, but\nit's used for conversions, not (for example) to sum up lots of small\nvalues.\n\nWith floating point, I had to think about the dynamic range in order\nto convince myself that summing up small values will not subtly lose\nprecision.\n\nWith integers, those kinds of issues do not exist. The \"lost\nprecision\" case is not subtle, it would be a very obvious overflow,\nand it's easy to think about. It turns out that for the pressure-time\nintegral to overflow in \"just\" 31 bits, we'd have to have pressures\nand times that aren't even close to the range of scuba cylinder air\nuse (eg \"spend more than a day at a depth of 200+ m\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't bother with \"correct\" units for the pressure_time calculation\n\nI fixed the pressure-time calculations to use \"proper\" units, but\nthinking about it some more, it turns out that units don't really\nmatter. As long as we use the *same* unit for calculating the\nintegral, and then re-calculating the step-wise entries, the units\nwill cancel out.\n\nSo we can simplify the \"pressure_time()\" function a bit, and use\nwhatever units are most natural for our internal representation. So\ninstead of using atm, use \"mbar\".\n\nNow, since the units don't matter, this patch doesn't really make much\nof a difference conceptually. Sure, it's a slightly simpler function,\nbut maybe using more \"natural\" units for it would be worth it. But it\nturns out that using milli-bar and seconds has an advantage: we could\ndo all the pressure_time integral using 32-bit integers, and we'd\nstill be able to represent values that would be equivalent to staying\nat 24 bar for a whole day.\n\nThis patch doesn't actually change the code to use integers, but with\nthis unit choice, we at least have that possibility.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up helper functions for interpolating gas pressure\n\nThis splits up the function to create the estimated pressures for\nmissing tank pressure information.\n\nThe code now has a separate pass to create the beginning and ending\npressures for segments that lack them, and fill them in to match the\noverall SAC-rate for that cylinder.\n\nIn the process, it also fixes the calculation of the interpolated gas\npressure: you can see this in test-dive 13, where we switch back to the\nfirst tank at the end of the dive.  It used to be that the latter\nsegment of that cylinder showed in a different color from the first\nsegment, showing that we had a different SAC-rate.  But that makes no\nsense, since our interpolation is supposed to use a constant SAC-rate\nfor each cylinder.\n\nThe bug was that the \"magic\" calculation (which is just the pressure\nchange rate over pressure-time) was incorrect, and used the current\ncylinder pressure for start-pressure calculation.  But that's wrong,\nsince we update the current cylinder pressure as we go along, but we\ndidn't update the total pressure_time.\n\nWith the separate phase to calculate the segment beginning/ending\npressures, the code got simplified and the bug stood out more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix pressure_time calculation for SAC-rate\n\nThe code was using bar, not atm to calculate the pressure_time\nmultiplier.  But SAC-rate is relative to atm.\n\nWe could do the correction at the end (and keep the pressure_time in\n\"bar-seconds\"), but let's just use the expected units during the\nintegration.  Especially since this also makes a helper function to do\nthe calculations (with variables to keep the units obvious) instead of\nhaving multi-line expressions that have the wrong units.\n\nThis fixes what I thought were rounding errors for the pressure graphs.\nThey were just unit confusion.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up and re-organize the plot entry calculations\n\nThis splits up the (very complex) function that calculates all the plot\ninfo data, so that the gas pressure logic is in several helper\nfunctions, and the deco and partial pressure calculations are in a\nfunction of their own.\n\nThat makes the code almost readable.\n\nThis also changes the cylinder pressure calculations so that if you have\nmanually set the beginning and end pressures, those are the ones we will\nshow (by making them fake \"sensor pressures\").  We used to shopw some\nrandom pressure that was related to the manually entered ones only\ndistantly (through various rounding phases and the SAC-rate calculations).\n\nThat does make the rounding errors more obvious in the graph, but we can\nfix that separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do a better job at creating plot info entries\n\nThis simplifies - and improves - the code to generate the plot info\nentries from the samples.\n\nWe used to generate exactly one plot info entry per sample, and then -\nbecause the result doesn't have high enough granularity - we'd\ngenerate additional plot info entries at gas change events etc.\n\nWhich resulted in all kinds of ugly special case logic. Not only for\nthe gas switch, btw: you can see the effects of this in the deco graph\n(done at plot entry boundaries) and in the gas pressure curves.\n\nSo this throws that \"do special plot entries for gas switch events\"\ncode away entirely, and replaces it with a much more straightforward\nmodel: we generate plot entries at a minimum of ten-second intervals.\nIf you have samples more often than that, you'll get more frequent\nplot entries, but you'll never get less than that \"every ten seconds\".\n\nAs a result, the code is smaller and simpler (99 insertions, 161\ndeletions), and actually does a better job too.\n\nYou can see the difference especially in the test dives that only have\na few entries (or if you create a new dive without a dive computer,\nusing the \"Add Dive\" menu entry). Look at the deco graph of test-dive\n20 before and after, for example. You can also see it very subtly in\nthe cylinder pressure curves going from line segments to curves on\nthat same dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do a minimal hook-up of the dive plan tree view to the\n\n actual planning\n\nYes, you can actually enter your segments now.\n\nNo, it's not wonderfully user-friendly.  If you don't enter enough\nsegments to create a dive plan, it will just silently fail, for example.\nAnd the <tab> key that should get you to the next editable segment\ndoesn't.  And so on.  But it kind of works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create the infrastructure for a dive plannder based on a tree-model\n\nThis doesn't actually do the real work yet, but it creates all the\ninfrastructure to edit a tree model, and verify the contents for time,\ndepth and gas mix.\n\nNow we just need the ability to add entries to the tree model (this adds\none fake one, just to test the editing), and then read out the final end\nresult and turn it into a plan.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix profile display for dives with no samples\n\nFor dives with no samples, we crate a fake dive computer with a set of\nmade-up samples and use those to display the profile.\n\nHowever, the actual calculations to do the maximum duration and depth\netc were always done with the \"real\" dive information, which is empty.\nAs a result, the scale of the plot ended up being bogus, and part of\nthe dive would be missing.\n\nTrivially fix by just passing the same dive computer information to\ncalculate_max_limits() that we use for everything else.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder printout information\n\nIf we print out the pressure difference (because we do not have a cylinder\nsize), we didn't initialize the precision. We should print out pressures\nwithout decimals.\n\nThe attached patch fixes that, and also avoids a NULL pointer printout\n(which on Linux will just print out \"(null)\") if there is no cylinder\ntype descriptor string. It also cleans things up a bit and uses the\n\"cyl\" pointer instead of repeating the \"dive->cylinder[n]\" thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder printout information\n\nThe cylinder information in the printouts was wrong in many ways. As\nDirk noted, it didn't work at all for air-integrated computers that\nhad the pressures in the samples, but the math was also confusing and\nwrong.\n\nThis should fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix mixed dive/trip tree model grouping\n\nIn commit 96db56f89c76 (\"Allow overlapping (and disjoint) dive trips\")\nI allowed dives to be part of arbitrary dive trips regardless of date,\nwhich meant that the divelist tree model code needed to find the right\nparent for a dive as it was inserted.\n\nThat code stupidly assumed that the top level of the dive list tree\ncontainted *only* trips, which is not at all the case. It happens to\nbe true if you group all your dives into divetrips (the common case\nfor autogroup=1, which real users do tend to have), but now that Dirk\nmade the autogrouping be a per-xml-file setting, it became much easier\nto trigger the \"mixed trips and non-trip dives\" case, and that showed\nthe stupid bug with the test dives.\n\nSo instead of just blindly iterating to the 'n'th entry, search for\nthe actual entry that is the dive trip we want to associate a dive\nwith.\n\nReported-by: Lubomir Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Keep the selected dive visible in the divelist\n\nThis patch makes the divelist behave more as you would expect it as you\nscroll up and down through its entries.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> First step in cleaning up cylinder pressure sensor logic\n\nThis clarifies/changes the meaning of our \"cylinderindex\" entry in our\nsamples. It has been rather confused, because different dive computers\nhave done things differently, and the naming really hasn't helped.\n\nThere are two totally different - and independent - cylinder \"indexes\":\n\n - the pressure sensor index, which indicates which cylinder the sensor\n   data is from.\n\n - the \"active cylinder\" index, which indicates which cylinder we actually\n   breathe from.\n\nThese two values really are totally independent, and have nothing\nwhat-so-ever to do with each other. The sensor index may well be fixed:\nmany dive computers only support a single pressure sensor (whether\nwireless or wired), and the sensor index is thus always zero.\n\nOther dive computers may support multiple pressure sensors, and the gas\nswitch event may - or may not - indicate that the sensor changed too. A\ndive computer might give the sensor data for *all* cylinders it can read,\nregardless of which one is the one we're actively breathing. In fact, some\ndive computers might give sensor data for not just *your* cylinder, but\nyour buddies.\n\nThis patch renames \"cylinderindex\" in the samples as \"sensor\", making it\nquite clear that it's about which sensor index the pressure data in the\nsample is about.\n\nThe way we figure out which is the currently active gas is with an\nexplicit has change event. If a computer (like the Uemis Zurich) joins the\ntwo concepts together, then a sensor change should also create a gas\nswitch event. This patch also changes the Uemis importer to do that.\n\nFinally, it should be noted that the plot info works totally separately\nfrom the sample data, and is about what we actually *display*, not about\nthe sample pressures etc. In the plot info, the \"cylinderindex\" does in\nfact mean the currently active cylinder, and while it is initially set to\nmatch the sensor information from the samples, we then walk the gas change\nevents and fix it up - and if the active cylinder differs from the sensor\ncylinder, we clear the sensor data.\n\n[Dirk Hohndel:  this conflicted with some of my recent changes - I think\n\t\tI merged things correctly...]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow overlapping (and disjoint) dive trips\n\nWe used to have the rule that a dive trip has to have all dives in it in\nsequential order, even though our XML file really is much more flexible,\nand allows arbitrary nesting of dives within a dive trip.\n\nPut another way, the old model had fairly inflexible rules:\n\n - the dive array is sorted by time\n\n - a dive trip is always a contiguous slice of this sorted array\n\nwhich makes perfect sense when you think of the dive and trip list as a\nphysical activity by one person, but leads to various very subtle issues\nin the general case when there are no guarantees that the user then uses\nsubsurface that way.\n\nIn particular, if you load the XML files of two divers that have\noverlapping dive trips, the end result is incredibly messy, and does not\nconform to the above model at all.\n\nThere's two ways to enforce such conformance:\n\n - disallow that kind of behavior entirely.\n\n   This is actually hard.  Our XML files aren't date-based, they are\n   based on XML nesting rules, and even a single XML file can have\n   nesting that violates the date ordering.  With multiple XML files,\n   it's trivial to do in practice, and while we could just fail at\n   loading, the failure would have to be a hard failure that leaves the\n   user no way to use the data at all.\n\n - try to \"fix it up\" by sorting, splitting, and combining dive trips\n   automatically.\n\n   Dirk had a patch to do this, but it really does destroy the actual\n   dive data: if you load both mine and Dirk's dive trips, you ended up\n   with a result that followed the above two technical rules, but that\n   didn't actually make any *sense*.\n\nSo this patch doesn't try to enforce the rules, and instead just changes\nthem to be more generic:\n\n - the dive array is still sorted by dive time\n\n - a dive trip is just an arbitrary collection of dives.\n\nThe relaxed rules means that mixing dives and dive trips for two people\nis trivial, and we can easily handle any XML file.  The dive trip is\ndefined by the XML nesting level, and is totally independent of any\ndate-based sorting.\n\nIt does require a few things:\n\n - when we save our dive data, we have to do it hierarchically by dive\n   trip, not just by walking the dive array linearly.\n\n - similarly, when we create the dive tree model, we can't just blindly\n   walk the array of dives one by one, we have to look up the correct\n   trip (parent)\n\n - when we try to merge two dives that are adjacent (by date sorting),\n   we can't do it if they are in different trips.\n\nbut apart from that, nothing else really changes.\n\nNOTE! Despite the new relaxed model, creating totally disjoing dive\ntrips is not all that easy (nor is there any *reason* for it to be\neasty).  Our GUI interfaces still are \"add dive to trip above\" etc, and\nthe automatic adding of dives to dive trips is obviously still based on\ndate.\n\nSo this does not really change the expected normal usage, the relaxed\ndata structure rules just mean that we don't need to worry about the odd\ncases as much, because we can just let them be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow sorting dives by date - without the dive trips in the dive list\n\nWe used to enable dive trips whenever we sorted by date, which can be\na bit annoying. Sometimes you really just want to sort all your dives\nby date, without necessarily seeing the trip data.\n\nSo this changes the default sort to be the \"dive number\" table, and\nthen does *not* actually sort by the dive number, but instead enables\nthe trips, and then sorts the result by date. So the \"dive number\"\ncolumn - which used to be non-sortable - becomes semantically\nequivalent to the old date column sorting.\n\nAnd now sorting by date makes it act like sorting by depth or any\nother attribute - we hide the dive trip tree, and just show the plain\nlist of dives (sorted by date, obviously).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't match existing dives by date if the dive computers are known to be different\n\nWhen downloading from a dive computer, we fall back on matching the\nexact date of the dive if we can't tell whether we already have that\nexact dive computer data some other way.\n\nHowever, if you have multiple dive computers and they are sufficiently\nwell synchronized, they might actually have the exact same date,\ndespite the fact that we do want to download both dive computers. We\ndo check the dive start to the exact second, so this sounds unlikely,\nbut with dive computers rounding time to the next minute etc, it's not\nas unlikely as you'd think. Dirk hit it.\n\nSo when we match against date, do check that the dive computer might\nactually be one we've already downloaded from. If we have full model\ninformation, we can dismiss the \"match date\" logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make add_dc_to_string() skip redundant entries\n\nThere is no point writing out divecomputer nicknames that do not exist\n(or that match the dive computer model), so don't.\n\nAlso, make the function to do this static to save-xml.c, which is the\nonly user (I initially didn't _find_ the function to create the XML\nstring because it was illogically hidden in gtk-gui.c), and change the\ncalling convention to be more direct (pass in a string and return a\nresult, rather than modify a \"pointer to string\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prevent bleeding deco/ndl for XML files without divecomputer entries\n\nMiika's xslt patch creates correct XML data without divecomputer entries.\nWhat happens is that the stop information at xml parse time is only\ncleared by the divecomputer entries, so if the XML lacks them, we will\nbleed stop data from one dive to the next.\n\nThis patch makes sure that the deco/ndl information is cleared even if the\ndive has no divecomputer entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a \"View next dive computer\" menu item\n\nThis adds the capability to actually view all your dive computers, by\nadding a menu item under \"Log\"->\"View\"->\"Next DC\" to show the next dive\ncomputer.\n\nRealistically, if you actually commonly use this, you'd use the\naccelerator shortcut.  Which right now is Ctrl-C (\"C for Computer\"),\nwhich is probably a horrible choice.\n\nI really would want to have nice \"next/prev dive\" accelerators too,\nbecause the cursor keys don't work very well with the gtk focus issues.\nBeing able to switch between dives would also make the \"just the dive\nprofile, maam\" view (ctrl-2) much more useful.\n\nThe prev/next dive in the profile view should probably be done with a\nkeyboard action callback, which also avoids some of the limitations of\naccelerators (ie you can make any key do the action).  Some gtk person,\nplease?\n\nAnyway, this commit only does the dive computer choice thing, and only\nusing the accelerators.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly remove redundant dive computer information\n\nWe had logic to remove duplicate dive computer information after merging\ndives, but it didn't actually work.\n\nWhy? Because we had used the 'res' dive computer pointer to traverse the\nlist of dive computers, so it no longer actually pointed to the first\ndive computer in the result list any more, and so the \"remove redundant\"\ncode only removed redundant dive computers from a limited and incomplete\nlist.\n\nOops.\n\nAlso, before checking the whole event and sample list, check if it's the\nexact same dive computer using our new \"match_one_dc()\" helper function,\nand don't even bother checking for sample details if it is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use dive ID for matching dives during downloads\n\nIf we have a dive computer model and dive ID, use that to match newly\ndownloaded dives against the existing dives.\n\nOtherwise fall back to \"exact date match\" again, like we've always done.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use dive computer model/ID when trying to merge dives\n\nIf we havd divecomputer model and dive ID information available, use\nthat to match existing dives when trying to merge them.\n\nOtherwise fall back to the fuzzy time-based merging logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Calculate dive maxima/minima independent of dive computer\n\nThis splits the dive time, depth, pressure and temperature maxima and\nminima setup from the per-dive-computer \"create_plot_info()\" function\ninto one setup function that walks _all_ the dive computers, so that we\nhave a global maxima and minima.\n\nThat way the graph scaling we set up will now fit the data from all dive\ncomputers rather than just the particular one we are plotting.  So if\nyou switch back-and-forth between computers, the scale (which is defined\nby the extremes) remains the same.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move 'plot_info' into 'struct graphics_context'\n\n.. and then allocate just the plot-info entry array dynamically.\n\nWe want to have a longer lifetime for the basic plot_info data\nstructure, because we want to do computer selection and maximum\ntime/depth/temperature computations *before* we start plotting anything,\nand before we allocate the plot entry array.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add dive computer name to the dive plot\n\nI want to have some way to show multiple dive computers, so start off by\nadding the name of the current one.  So if we change dive computers,\nwe'll see it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Tune the dive joining surface event insert code\n\nFrom 178a3f0d6d5112f76943fec5f8c1c1f3b173a7f4 Mon Sep 17 00:00:00 2001\nFrom: Linus Torvalds <torvalds@linux-foundation.org>\nDate: Fri, 7 Dec 2012 09:34:18 -0800\nSubject: [PATCH 2/2] Tune the dive joining surface event insert code\n\nSo this makes us do surface events only if the samples are more than one\nminute apart, and are shallow enough (randomly selected at 5m).\n\nWe can add more heuristics.  Maybe we should compare the 1-minute sample\ntime limit of the previous sample to the time to the sample before that:\nif some computer (or manually entered dive) has a long time between\n*all* samples, we'd make the cut-off time longer.\n\nBaby steps.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging downloaded dives, strive to keep old dive in 'a'\n\nThis doesn't really change the logic of the merging, but it does mean\nthat the end result tends to be less unexpected: when downloading dives\nthat end up being merged with pre-existing dives (because you have\nmultiple dive computers, for example), the newly downloaded dive data\nwill tend to be appended to the old dive data, rather than showing up\nfirst.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV when joining dives without dive computer information\n\nHandle the case where we have no divecomputer information.\n\nReported-by: Sergey Starosek <sergey.starosek@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Turn latitude and longitude into integer micro-degree values\n\nThis actually makes us internally use 'micro-degrees' for latitude and\nlongitude, and we never turn them into floating point either at parse\ntime or save time.\n\nThat said, the Uemis downloader internally does still use atof() when\nconverting things, which is likely a bug (locale issues and all that),\nbut I'll ask Dirk to check it out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save latitude/longitude using integer math\n\nI hate using floating point, this tries to at least make parts of it be\ninteger logic, and avoid the whole locale issue.  This still keeps the\nlatitude and longitude internally as a floating point value, and parses\nit that way, but I'm slowly moving towards less and less FP use.\n\nWe're going to use micro-degrees for location information: that's\nsufficient to about a tenth of a meter precision, and it fits in a\n32-bit integer.\n\nIf you specify dive sites with more precision than that, you may have\nOCD.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve automatic dive merging logic\n\nThis tunes the heuristics for when to merge two dives together into a\nsingle dive. We used to just look at the date, and say \"if they're\nwithin one minute of each other, try to merge\". This looks at the\nactual dive data, and tries to see just how much sense it makes to\nmerge the dive.\n\nIt also checks if the dives to be merged use different dive computers,\nand if so relaxes the one minute to five, since most people aren't\nquite as OCD as I am, and don't tend to set their dive computers quite\nthat exactly to the same time and date.\n\nI'm sure people can come up with other heuristics, but this should\nmake that easier too.\n\nNOTE! If you have things like wrong timezones etc, and the\ndivecomputer dates are thus off by hours rather than by a couple of\nminutes, this will still not merge them. For that kind of situation,\nwe'd need some kind of manual merge option. Note that that is *not*\nthe same as the current \"merge two adjacent dives\" together, which\njoins two separate dives into one *longer* dive with a surface\ninterval in between.\n\nThat kind of manual merge UI makes sense, but is independent of this\npartical change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive computer event handling if there are no samples\n\nThis actually triggers for one of our insane test dives (test15): it has\nno samples, so we created a fake dive computer entry with the a fake\nprofile in it, but we didn't copy the events over.\n\nHaving a dive with no samples, yet having events from the dive computer,\nsounds pretty bogus.  But that test-case did show that when that bogus\nsituation happens, we had two independent buglets: (a) we didn't insert\nthe entries in the fake dive computer entry we used and (b) we would\nthen mix up the events of the fake dive computer entry with the first\ndive computer of a dive.\n\nFix this, just to make test15 happy again.  And eventually, when we\nactually plot the information for multiple dive computers, fixing case\n(b) would become necessary even for real dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify tripflags: remove tripflag_names[]\n\nThis removes the tripflag name array, since it's not actually useful.\nThe only information we ever save in the XML file is whether a dive is\nexplicitly not supposed to ever be grouped with a trip (\"NOTRIP\"), and\neverything else is implicit.\n\nI'm going to simplify the trip flags further (possibly removing it\nentirely - like I did for dive trips already), and don't like having to\nmaintain the tripflag_names[] array logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove 'tripflag' from dive trips\n\nBoth dives and dive trips have the same 'tripflag' thing, but they are\nused very differently.  In particular, for dive trips, the only case\nthat has any meaning is the TF_AUTOGEN case, so instead of having that\ntrip flag, replace it with a bitfield that says whether the trip was\nauto-generated or not.\n\nAnd make the one-bit bitfields explicitly unsigned.  Signed bitfields\nare almost always a mistake, and can be confusing.\n\nAlso remove a few now stale macros that are no longer needed now that we\ndon't do the GList thing for dive list handling, and our autogen logic\nhas been simplified.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clarify (and fix) dive trip auto-generation\n\nThis makes the dive trip auto-generation a separate pass from the\nshowing of the dive trips, which makes things much more understandable.\nIt simplifies the code a lot too, because it's much more natural to\ngenerate the automatic trip data by walking the dives from oldest to\nnewest (while the tree model wants to walk the other way).\n\nIt gets rid of the most annoying part of using the gtk tree model for\ndive trip management, but some still remains.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove 'when_from_file' field from dive trip\n\nIt had become a write-only field (apart from some now useless debugging)\nwhen simplifying the remove_autogen_trips() function.\n\nSo remove it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite 'remove_autogen_trips()' without the gtk tree model walking\n\nI'm trying to remove (or at least simplify) the gtk tree model usage for\nour trip handling, but I'm doing it in small chunks.  The goal is to\njust do all our trip handling logic explicitly using our own data\nstructures, and use the gtk tree model purely for showing the end\nresult.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Associate each dive trip with the dives in that trip\n\nWe already kept a count of dives per trip in order to figure out when\nthere are no more dives left and the trip needs to be freed.  Now we\nexplicitly keep track of the list of dives associated with the trip too,\nwhich simplifies the \"find the time of the trip\" logic.\n\nWe may want to sort it in time, but for now this is mainly about trying\nto keep track of the divetrip relationships explicitly.  I want to move\naway from the whole \"use the gtk tree model to keep track of things\"\napproach.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive trip selection for merging\n\nWhen picking the \"better\" trip, we stupidly looked not at the trip\nlocation, but at the _dive_ location.\n\nWhich obviously didn't actually pick the \"better\" trip information at\nall, since it never actually looked at the trip itself.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be much saner about merging dive computer data\n\nNow that we have dive computer device ID fields etc, we can do a much\nbetter job of merging the dive computer data.\n\nThe rule is\n\n - if we actually merge two disjoint dives (ie extended surface interval\n   causing the dive computer to think the dive ended and turning two of\n   those dives into one), find the *matching* dive computer from the\n   other dive to combine with.\n\n - if we are merging dives at the same time, discard old-style data with\n   no dive computer info (ie act like a re-download)\n\n - if we have new-style dive computers with identifiers, take them all.\n\nwhich seems to work fairly well.\n\nThere's more tweaking to be done, but I think this is getting to the\npoint where it largely works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do not set the water salinity of a dive unless libdivecomputer supports it\n\nIt's annoying to see water salinity data in the XML that isn't relevant,\nand adding the default value just because the dive got downloaded from\nlibdivecomputer is definitely wrong.\n\nWe should set the water salinity explicitly only if we have it\nexplicitly set on the dive computer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on divecomputer data handling\n\nThis simplifies the vendor/product fields into just a single \"model\"\nstring for the dive computer, since we can't really validly ever use it\nany other way anyway.\n\nAlso, add 'deviceid' and 'diveid' fields: they are just 32-bit hex\nvalues that are unique for that particular dive computer model.  For\nlibdivecomputer, they are basically the first word of the SHA1 of the\ndata that libdivecomputer gives us.\n\n(Trying to expose it in some other way is insane - different dive\ncomputers use different models for the ID, so don't try to do some kind\nof serial number or something like that)\n\nFor the Uemis Zurich, which doesn't use the libdivecomputer import, we\ncurrently only set the model name.  The computer does have some kind of\ndevice ID string, and we could/should just do the same \"SHA1 over the\nID\" to give it a unique ID, but the pseudo-xml parsing confuses me, so\nI'll let Dirk fix that up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start merging dives by keeping the dive computer data from both dives\n\nAlso, note that we do *not* do the \"find_sample_offset()\" any more when\nwe merge two dives that happen at the same time - since we just keep\nboth sets of dive computer data around.\n\nBut we keep the function to find the best offset around, because we may\nwell want to use it later when *showing* the dive, and trying to match\nup the different sample data from the multiple dive computers associated\nwith the dive.\n\nBecause of that, this causes warnings about the now unused function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Match newly downloaded dives against dive computer information\n\nNow that we have more complete dive computer information, we can use\nthat to match the dives we download, and stop with the hacky \"Would we\nmerge this\" check.\n\nFor XML files without the explicit dive computer information, go back to\nchecking the exact dive time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add basic divecomputer info setup with xml parsing and saving\n\nThis also knows how to save and restore multiple dive computers in the\nXML data, but there's no way to actually *create* that kind of\ninformation yet (nor do we display it).  Tested by creating fake XML\nfiles with multiple dive computers by hand so far.\n\nThe dive computer information right now contains (apart from the sample\nand event data that we've always had):\n\n - the vendor and product name of the dive computer\n - the date of the dive according to the dive computer (so if you change\n   the dive date manually, the dive computer date stays around)\n\nNote that if the dive computer date matches the dive date, we won't\nbother saving the redundant information in the XML file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix \"prefer downloaded\" dive sample merging case\n\nWhen we have a preferred dive computer that overrides old information\nwhen merging two dives, we just copy the dive computer data over.\nHowever, we need to clear the source of the dive computer data so that\nwe then don't free the sample data when that old source of the newly\nmerged dive gets free'd.\n\nThis fixes a memory scribble (and likely SIGSEGV) for the \"prefer\ndownloaded\" case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move events and samples into a 'struct divecomputer'\n\nFor now we only have one fixed divecomputer associated with each dive,\nso this doesn't really change any current semantics.  But it will make\nit easier for us to associate a dive with multiple dive computers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allocate dive samples separately from 'struct dive'\n\nWe used to avoid some extra allocations by just allocating the dive\nsamples as part of the 'struct dive' allocation itself, but that ends up\ncomplicating things, and will make it impossible to have multiple\ndifferent sets of samples (for multiple dive computers).\n\nSo stop doing it. Just allocate the dive samples array separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When downloading from a dive computer, stop at mergeable dives\n\nThe divecomputer download code will stop at a matching dive (unless\nyou check the \"Download all dives\" option when downloading).\n\nHowever, the matching dive is an *exact* match, which works well when\nyou have a single dive computer, but is a big pain when you have\nmultiple. What happens is that the date of the dive will be determined\nby whatever dive computer you used first, and then downloading from\nother dive computers will not match exactly, but will merge (if the\ncomputers are within a minute of each other).\n\nAnd that will continue to happen every time you try to download from\nthat other dive computer.\n\nSo use the same logic as for the automatic dive merging: consider\n\"within one minute\" to be a matching dive. So don't download dives\nthat will be merged - unless the user asks for it.\n\nWe do want to have some way of saying \"force download of all dives\nfrom today\" or something like that, I suspect. Because while I don't\nwant to re-download *every* dive, I might want to force-merge the last\n<N> dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the XML gps parsing and saving when using non-US locales\n\nThe GPS parsing and saving was using sscanf and sprintf respecively, and\nsince it is using floating point values (boo!) that affects both of\nthem.  In a C/US locale, we use a period for decimal values, while most\nEuropean locales use a comma.\n\nWe really should probably just fix things to use integer values (degrees\nand nanodegrees?) but this is the simplest fix/workaround for the issue.\n\nProbably nobody ever really noticed until I tested the Swedish locale\nfor grins, since we don't have a good way to actually set the GPS\ncoordinates yet.  I've got a few dives with GPS information that I\nentered manually.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging non-overlapping dives, add surface events in between\n\nMost of the dive computers I have access to don't do the whole surface\nevent thing at the beginning or the end of the dive, so when you merge\ntwo consecutive dives, you got this odd merged dive where the diver\nspent the time in between at a depth of 1.2m or so (whatever the dive\ncomputer \"I'm now under water\" depth limit happens to be).\n\nDon't do that.  Add surface events at the end of the first dive to be\nmerged, and the beginning of the second one, so that the time in between\ndives is properly marked as being at the surface.\n\nThe logic for \"time in between dives\" is a bit iffy - it's \"more than 60\nseconds with no samples\".  If somebody has dive computers with samples\nmore than 60 seconds apart, this will break and we may have to revisit\nthe logic.  But dang, that's some seriously broken sample rate.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix silly thinko in recent changes to \"Delete dive\" code\n\nCommit 38c79d149db0 (\"Simplify and clean up dive trip management\")\nsimplified the code a bit *too* much, and removed the check for\n\"dive->selected\".\n\nAs a result, trying to delete a dive resulted in *all* dives being\ndeleted.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Mark divelist changed as we download dives from a dive computer\n\n\"record_dive()\" won't do that, since otherwise we'd mark the dive list\nchanged when we load it from an XML file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for zooming using the scroll-wheel\n\nThis allows zooming in with the scroll-wheel if you have one (or the\ntwo-finger scrolling on a touchpad).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix average temperature statistics\n\nWe generate the average temperature statistics by adding up the\n(converted to user unites - not in millikelvin) temperatures and then\ndividing by the number of dives we've added up over.\n\nHOWEVER.\n\nWe did that summing of the temperatures into an integer variable, even\nthough the converted temperatures are floating point.  So things got\nrounded down to integers and the average temperature was just bogus\n(although reasonably close).\n\nWe could do the summing of the temperatures in millikelvin and only\ndoing the conversion to the user at the very end.  But the smaller patch\nis to just change the accumulator to a double value.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add back mysteriously deleted \"} else {\" line\n\nCommit 6c52e8a2e516 (\"Add plotting of the deco ceiling\") for some\ntotally unexplained reason deleted one \"else\" statement, resulting in\nsome plot events not having a time at all.  Which causes various really\nodd issues if you hit that situation, including divide-by-zero etc due\nto the difference in times between events being nonsensical.\n\nIt's just some odd mistake that was entirely unrelated to the other\nchanges in that commit.\n\nAdd the missing line back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the \"click-to-zoom\" use a 2.5x zoom factor\n\nI think I prefer the 2.5x zoom over the pure doubling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be stricter about when we allow merging of dives\n\nIf the surface interval between two dives is more than half an hour,\ndon't try to call it a single dive.  Just the dive profile will be\nlooking ridiculous.\n\nThings like tank refills etc could also be a good thing to check (again,\nthe dive profile would look ridiculous), but the cylinder pressure going\nup a small amount is actually normal (ie cylinder warming up in warmer\nwater on the surface).  So I don't know what the proper limit for that\nwould be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix possible array bound violation for insanely long dives\n\nWhen we calculate the interval for the tick-marks for the dive, we need\nto limit 'i' to be within the size of the array.  The code does that\nwith a \"i < 8\" check, but the fact is, we must never increment past the\nlast entry, which is 7 (the size of the array is 8, but the last valid\nindex is 7).\n\nThis only happens for unrealistically long dives.  Which you can trigger\neither by inputting insane values for a manually created dive, or by\nmerging two dives that are consecutive, but not close to each other\ntime-wise (eg on different days ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create tool-tip with depth/pressure for the whole profile area\n\nThis extends on our current tooltip logic (which shows events when you\nmouse over them) to show tooltips for the whole profile area.\n\nIf you mouse over an event, that is still shown in the tooltip, but\neven in the absense of events, the tooltip will be active, and mousing\nover the profile area will show the time, depth and pressure.\n\nThis can certainly be improved upon further, but even in this form it is\nuseful.\n\nFixes #9\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial not-so-pretty profile zoom support\n\nYou can press the left mouse-button on the profile and drag the mouse\naround to zoom in on a specific area. Releasing the mouse button unzooms.\n\nYeah, everybody wants rubber-banding, but I have reached the end of my\nwillingness to fight gtk for more details. Some day.\n\n[Dirk Hohndel:\tchanged this to use the right mouse button instead of the\n\t\tleft which seemed just terribly unnatural]\n\nReferences ticket 9\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix selection and trip expansion logic after merging dives\n\nThis just makes sure that the merged dive is properly selected, and\nthat we've saved the trip tree state so that the dive list repaints\nnicely and with the newly merged dive selected after the merge.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Support merging of two adjacent dives\n\nThis introduces the notion of merging two disjoint dives: you can select\ntwo dives from the dive list, and if the selection is exactly two dives,\nand they are adjacent (and share the same dive trip), we support the\nnotion of merging the dives into one dive.\n\nThe most common reason for this is an extended surface event, which made\nthe dive computer decide that the dive was ended, but maybe you were\njust waiting for a buddy or a student at the surface, and you want to\nstitch together two dives into one.\n\nThere are still details to be sorted out: my Suunto dive computers don't\nactually do surface samples at the beginning or end of the dive, so when\nyou stitch two dives together, the profile ends up being this odd \"a\ncouple of feet under water between the two parts of the dive\" thing.\n\nBut that's an independent thing from the actual merging logic, and I'll\nwork on that separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prepare to merge non-overlapping dives\n\nThis just re-organizes the dive merging code so that we expose a new\n\"merge_dives(a, b, offset)\" function that merges two dives together into\none with the samples (and events) of 'b' at the specified offset after\n'a'.\n\nWe'll want to use this if a dive computer has decided that the dive\nended (due to a pause at the surface), but we really want to just turn\nthe two computer dives into one long one with an extended surface swim.\n\nNo functional changes, but some independent cleanups due to the trip\nsimplifications.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't simplify 'bookmark' and 'heading' events\n\nAdd the bookmark and heading events to the list of events not to be\nsimplified just because they are redundant - in both cases they are\nabout the user doing something explicit (like the gaschange), so even\nif the data is otherwise identical, they should likely be saved.\n\nThat said, both events are kind of pointless (we don't actually seem\nto save the heading value for the heading events, and bookmarks are\nuniversally just due to user error in at least my case). But still..\n\nThis overly aggressive filtering was introduced in commit 6ad73a8f043b\n(\"Improve logic handling events\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify and clean up dive trip management\n\nThis adds a couple of helper functions to manage dive trips\n(\"add_dive_to_trip()\" and \"remove_dive_from_trip()\") and makes those\nfunctions do the trip statistics maintenance (trip beginning times,\nnumber of dives, etc).\n\nThis was needed because the dive merge cases for multiple dive\ncomputers showed some rather nasty special cases: especially if the\nnew dive information has been loaded into an XML file with trips\nauto-generated, merging several of these kinds of xml files with\nmultiple dives in several overlapping trips would completely confuse\nour previous code.\n\nIn particular, auto-generated trips that had the exact same date as\nprevious trips (because they were generated from the same dive\ncomputer) really confused the code that used the trip timestamp to\nmanage the trips.\n\nAdding the helper functions allows us to get the general case right\nwithout having to have each piece of code that handles trip\ninformation having to bother about all the odd rules. It will\neventually also allow us to make the dive trip data structures more\nlogical: right now the dive trip list is largely designed around the\nodd gtk model handling, rather than some more higher-level conceptual\nrelationship with the actual dives.\n\nBut for now, this keeps all the data structures unchanged, and just\nmodifies them using the new helper functions.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default filename handling errors\n\nThe default filename handling is broken in two different ways:\n\n (a) if we start subsurface with a non-existing file, we warn about\nthe inability to read that file, and then we exit without setting the\ndefault filename.\n\nThis is broken because it means that if the user (perhaps by mistake,\nby pressing ^S) now saves the file, he will overwrite the default\nfilename, even though that was *not* the file we read, and *not* the\nfile that subsurface was started with.\n\nSo just set the default filename even for a failed file open.\n\nThe exact same logic is true of a failed parse of an XML file that we\nsuccessfully opened. We do *not* want to leave the old default\nfilename in place just because the XML parsing failed, and possibly\nthen overwriting some file that was never involved with that failure\nin the first place. So just get rid of all the logic to push the\nfilename saving into the XML parsing layer, it has zero relevance at\nthat point.\n\n (b) if we do replace the default filename with a NULL file, we need\nto set that even if we cannot do a strdup() on the NULL.\n\nThis fixes both errors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gtk spinbuttons are crazy - fix possible divide-by-zero\n\nWhen we fill the cylinder information in an imperial unit world, a\nworking pressure of zero is a special case, and forces us to use the\nactual physical size of the cylinder in liter, despite the fact that\nwe normally would use cuft.\n\nHowever, we compare that value against zero in a 'double', and in\nbetween going through the gtk spinbutton logic, the zero we have\nfilled in then gets read out as some very tiny epsilon value from the\ngtk spinbuttons (typically in the 10**-317 range). This causes us to\nthink that the zero isn't actually a zero, because gtk has done odd\nthings with it.\n\nFix this by calculating the millibar value (as an integer) first, and\ncheck that *integer* against zero. Any crazy epsilon values will have\nbeen rounded away, and our logic works again.\n\nThere's a good reason why subsurface does everything using integers\n(ie the afore-mentioned \"convert to integer millibar\" etc) and doesn't\nuse floating point for any core data structures, only for conversion.\nFP rounding and inexact behavior can be really subtle.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clean up duplicated depth interpolation\n\nWe have several places where we interpolate the depth based on two\nsamples and the time between them. Some of them use floating point, some\nof them don't, some of them meant to do it but didn't.\n\nJust use a common helper function for it. I seriously doubt the floating\npoint here really matters, since doing it in integers is not going to\noverflow unless we're interpolating between two samples that are hours\napart at hundreds of meters of depth, but hey, it gives that rounding to\nthe nearest millimeter. Which I'm sure matters.\n\nAnyway, we can probably just get rid of the rounding and the floating\npoint math, but it won't really hurt either, so at least do it\nconsistently.\n\nThe interpolation could be for other things than just depth, but we\nprobably don't have anything else we'd want to interpolate. But make the\nfunction naming generic just in case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't walk back in time\n\nA strange and buggy dive where time goes backwards (right now easy to\ncreate with the dive plan editor) can cause us to run out of plot info\nelements.\n\nThis prevents that from causing memory corruption by refusing to go back\nin time.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve dive trip sort comparison function\n\nWe do want to compare \"loose\" dives too, but we need to be a bit\ncareful, and always use the trip date as the primary sort key for any\ndives that are not in the same trip.\n\nReported-and-tested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify dive planning code\n\nThis simplifies the dive planning code by:\n\n- allowing empty gas mixes (which means \"pick previous gas\")\n\n- avoiding unnecessary strdup/free calls (this requires us to handle\n  \"const char *\" in the parsers, but that was already true from a code\n  standpoint, just not a type one)\n\n- re-use the \"plan()\" function for a successful dive plan, rather than\n  open-coding the dive plan segment handling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do pressure-time integral using integer values\n\nNow that the pressure_time calculations are done in our \"native\"\ninteger units (millibar and seconds), we might as well keep using\ninteger variables.\n\nWe still do floating point calculations at various stages for the\nconversions (including turning a depth in mm into a pressure in mbar),\nso it's not like this avoids floating point per se. And the final\napproximation is still done as a fraction of the pressure-time values,\nusing floating point. So floating point is very much involved, but\nit's used for conversions, not (for example) to sum up lots of small\nvalues.\n\nWith floating point, I had to think about the dynamic range in order\nto convince myself that summing up small values will not subtly lose\nprecision.\n\nWith integers, those kinds of issues do not exist. The \"lost\nprecision\" case is not subtle, it would be a very obvious overflow,\nand it's easy to think about. It turns out that for the pressure-time\nintegral to overflow in \"just\" 31 bits, we'd have to have pressures\nand times that aren't even close to the range of scuba cylinder air\nuse (eg \"spend more than a day at a depth of 200+ m\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't bother with \"correct\" units for the pressure_time calculation\n\nI fixed the pressure-time calculations to use \"proper\" units, but\nthinking about it some more, it turns out that units don't really\nmatter. As long as we use the *same* unit for calculating the\nintegral, and then re-calculating the step-wise entries, the units\nwill cancel out.\n\nSo we can simplify the \"pressure_time()\" function a bit, and use\nwhatever units are most natural for our internal representation. So\ninstead of using atm, use \"mbar\".\n\nNow, since the units don't matter, this patch doesn't really make much\nof a difference conceptually. Sure, it's a slightly simpler function,\nbut maybe using more \"natural\" units for it would be worth it. But it\nturns out that using milli-bar and seconds has an advantage: we could\ndo all the pressure_time integral using 32-bit integers, and we'd\nstill be able to represent values that would be equivalent to staying\nat 24 bar for a whole day.\n\nThis patch doesn't actually change the code to use integers, but with\nthis unit choice, we at least have that possibility.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up helper functions for interpolating gas pressure\n\nThis splits up the function to create the estimated pressures for\nmissing tank pressure information.\n\nThe code now has a separate pass to create the beginning and ending\npressures for segments that lack them, and fill them in to match the\noverall SAC-rate for that cylinder.\n\nIn the process, it also fixes the calculation of the interpolated gas\npressure: you can see this in test-dive 13, where we switch back to the\nfirst tank at the end of the dive.  It used to be that the latter\nsegment of that cylinder showed in a different color from the first\nsegment, showing that we had a different SAC-rate.  But that makes no\nsense, since our interpolation is supposed to use a constant SAC-rate\nfor each cylinder.\n\nThe bug was that the \"magic\" calculation (which is just the pressure\nchange rate over pressure-time) was incorrect, and used the current\ncylinder pressure for start-pressure calculation.  But that's wrong,\nsince we update the current cylinder pressure as we go along, but we\ndidn't update the total pressure_time.\n\nWith the separate phase to calculate the segment beginning/ending\npressures, the code got simplified and the bug stood out more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix pressure_time calculation for SAC-rate\n\nThe code was using bar, not atm to calculate the pressure_time\nmultiplier.  But SAC-rate is relative to atm.\n\nWe could do the correction at the end (and keep the pressure_time in\n\"bar-seconds\"), but let's just use the expected units during the\nintegration.  Especially since this also makes a helper function to do\nthe calculations (with variables to keep the units obvious) instead of\nhaving multi-line expressions that have the wrong units.\n\nThis fixes what I thought were rounding errors for the pressure graphs.\nThey were just unit confusion.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Split up and re-organize the plot entry calculations\n\nThis splits up the (very complex) function that calculates all the plot\ninfo data, so that the gas pressure logic is in several helper\nfunctions, and the deco and partial pressure calculations are in a\nfunction of their own.\n\nThat makes the code almost readable.\n\nThis also changes the cylinder pressure calculations so that if you have\nmanually set the beginning and end pressures, those are the ones we will\nshow (by making them fake \"sensor pressures\").  We used to shopw some\nrandom pressure that was related to the manually entered ones only\ndistantly (through various rounding phases and the SAC-rate calculations).\n\nThat does make the rounding errors more obvious in the graph, but we can\nfix that separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do a better job at creating plot info entries\n\nThis simplifies - and improves - the code to generate the plot info\nentries from the samples.\n\nWe used to generate exactly one plot info entry per sample, and then -\nbecause the result doesn't have high enough granularity - we'd\ngenerate additional plot info entries at gas change events etc.\n\nWhich resulted in all kinds of ugly special case logic. Not only for\nthe gas switch, btw: you can see the effects of this in the deco graph\n(done at plot entry boundaries) and in the gas pressure curves.\n\nSo this throws that \"do special plot entries for gas switch events\"\ncode away entirely, and replaces it with a much more straightforward\nmodel: we generate plot entries at a minimum of ten-second intervals.\nIf you have samples more often than that, you'll get more frequent\nplot entries, but you'll never get less than that \"every ten seconds\".\n\nAs a result, the code is smaller and simpler (99 insertions, 161\ndeletions), and actually does a better job too.\n\nYou can see the difference especially in the test dives that only have\na few entries (or if you create a new dive without a dive computer,\nusing the \"Add Dive\" menu entry). Look at the deco graph of test-dive\n20 before and after, for example. You can also see it very subtly in\nthe cylinder pressure curves going from line segments to curves on\nthat same dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do a minimal hook-up of the dive plan tree view to the\n\n actual planning\n\nYes, you can actually enter your segments now.\n\nNo, it's not wonderfully user-friendly.  If you don't enter enough\nsegments to create a dive plan, it will just silently fail, for example.\nAnd the <tab> key that should get you to the next editable segment\ndoesn't.  And so on.  But it kind of works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create the infrastructure for a dive plannder based on a tree-model\n\nThis doesn't actually do the real work yet, but it creates all the\ninfrastructure to edit a tree model, and verify the contents for time,\ndepth and gas mix.\n\nNow we just need the ability to add entries to the tree model (this adds\none fake one, just to test the editing), and then read out the final end\nresult and turn it into a plan.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix profile display for dives with no samples\n\nFor dives with no samples, we crate a fake dive computer with a set of\nmade-up samples and use those to display the profile.\n\nHowever, the actual calculations to do the maximum duration and depth\netc were always done with the \"real\" dive information, which is empty.\nAs a result, the scale of the plot ended up being bogus, and part of\nthe dive would be missing.\n\nTrivially fix by just passing the same dive computer information to\ncalculate_max_limits() that we use for everything else.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder printout information\n\nIf we print out the pressure difference (because we do not have a cylinder\nsize), we didn't initialize the precision. We should print out pressures\nwithout decimals.\n\nThe attached patch fixes that, and also avoids a NULL pointer printout\n(which on Linux will just print out \"(null)\") if there is no cylinder\ntype descriptor string. It also cleans things up a bit and uses the\n\"cyl\" pointer instead of repeating the \"dive->cylinder[n]\" thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix cylinder printout information\n\nThe cylinder information in the printouts was wrong in many ways. As\nDirk noted, it didn't work at all for air-integrated computers that\nhad the pressures in the samples, but the math was also confusing and\nwrong.\n\nThis should fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix mixed dive/trip tree model grouping\n\nIn commit 96db56f89c76 (\"Allow overlapping (and disjoint) dive trips\")\nI allowed dives to be part of arbitrary dive trips regardless of date,\nwhich meant that the divelist tree model code needed to find the right\nparent for a dive as it was inserted.\n\nThat code stupidly assumed that the top level of the dive list tree\ncontainted *only* trips, which is not at all the case. It happens to\nbe true if you group all your dives into divetrips (the common case\nfor autogroup=1, which real users do tend to have), but now that Dirk\nmade the autogrouping be a per-xml-file setting, it became much easier\nto trigger the \"mixed trips and non-trip dives\" case, and that showed\nthe stupid bug with the test dives.\n\nSo instead of just blindly iterating to the 'n'th entry, search for\nthe actual entry that is the dive trip we want to associate a dive\nwith.\n\nReported-by: Lubomir Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Keep the selected dive visible in the divelist\n\nThis patch makes the divelist behave more as you would expect it as you\nscroll up and down through its entries.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> First step in cleaning up cylinder pressure sensor logic\n\nThis clarifies/changes the meaning of our \"cylinderindex\" entry in our\nsamples. It has been rather confused, because different dive computers\nhave done things differently, and the naming really hasn't helped.\n\nThere are two totally different - and independent - cylinder \"indexes\":\n\n - the pressure sensor index, which indicates which cylinder the sensor\n   data is from.\n\n - the \"active cylinder\" index, which indicates which cylinder we actually\n   breathe from.\n\nThese two values really are totally independent, and have nothing\nwhat-so-ever to do with each other. The sensor index may well be fixed:\nmany dive computers only support a single pressure sensor (whether\nwireless or wired), and the sensor index is thus always zero.\n\nOther dive computers may support multiple pressure sensors, and the gas\nswitch event may - or may not - indicate that the sensor changed too. A\ndive computer might give the sensor data for *all* cylinders it can read,\nregardless of which one is the one we're actively breathing. In fact, some\ndive computers might give sensor data for not just *your* cylinder, but\nyour buddies.\n\nThis patch renames \"cylinderindex\" in the samples as \"sensor\", making it\nquite clear that it's about which sensor index the pressure data in the\nsample is about.\n\nThe way we figure out which is the currently active gas is with an\nexplicit has change event. If a computer (like the Uemis Zurich) joins the\ntwo concepts together, then a sensor change should also create a gas\nswitch event. This patch also changes the Uemis importer to do that.\n\nFinally, it should be noted that the plot info works totally separately\nfrom the sample data, and is about what we actually *display*, not about\nthe sample pressures etc. In the plot info, the \"cylinderindex\" does in\nfact mean the currently active cylinder, and while it is initially set to\nmatch the sensor information from the samples, we then walk the gas change\nevents and fix it up - and if the active cylinder differs from the sensor\ncylinder, we clear the sensor data.\n\n[Dirk Hohndel:  this conflicted with some of my recent changes - I think\n\t\tI merged things correctly...]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow overlapping (and disjoint) dive trips\n\nWe used to have the rule that a dive trip has to have all dives in it in\nsequential order, even though our XML file really is much more flexible,\nand allows arbitrary nesting of dives within a dive trip.\n\nPut another way, the old model had fairly inflexible rules:\n\n - the dive array is sorted by time\n\n - a dive trip is always a contiguous slice of this sorted array\n\nwhich makes perfect sense when you think of the dive and trip list as a\nphysical activity by one person, but leads to various very subtle issues\nin the general case when there are no guarantees that the user then uses\nsubsurface that way.\n\nIn particular, if you load the XML files of two divers that have\noverlapping dive trips, the end result is incredibly messy, and does not\nconform to the above model at all.\n\nThere's two ways to enforce such conformance:\n\n - disallow that kind of behavior entirely.\n\n   This is actually hard.  Our XML files aren't date-based, they are\n   based on XML nesting rules, and even a single XML file can have\n   nesting that violates the date ordering.  With multiple XML files,\n   it's trivial to do in practice, and while we could just fail at\n   loading, the failure would have to be a hard failure that leaves the\n   user no way to use the data at all.\n\n - try to \"fix it up\" by sorting, splitting, and combining dive trips\n   automatically.\n\n   Dirk had a patch to do this, but it really does destroy the actual\n   dive data: if you load both mine and Dirk's dive trips, you ended up\n   with a result that followed the above two technical rules, but that\n   didn't actually make any *sense*.\n\nSo this patch doesn't try to enforce the rules, and instead just changes\nthem to be more generic:\n\n - the dive array is still sorted by dive time\n\n - a dive trip is just an arbitrary collection of dives.\n\nThe relaxed rules means that mixing dives and dive trips for two people\nis trivial, and we can easily handle any XML file.  The dive trip is\ndefined by the XML nesting level, and is totally independent of any\ndate-based sorting.\n\nIt does require a few things:\n\n - when we save our dive data, we have to do it hierarchically by dive\n   trip, not just by walking the dive array linearly.\n\n - similarly, when we create the dive tree model, we can't just blindly\n   walk the array of dives one by one, we have to look up the correct\n   trip (parent)\n\n - when we try to merge two dives that are adjacent (by date sorting),\n   we can't do it if they are in different trips.\n\nbut apart from that, nothing else really changes.\n\nNOTE! Despite the new relaxed model, creating totally disjoing dive\ntrips is not all that easy (nor is there any *reason* for it to be\neasty).  Our GUI interfaces still are \"add dive to trip above\" etc, and\nthe automatic adding of dives to dive trips is obviously still based on\ndate.\n\nSo this does not really change the expected normal usage, the relaxed\ndata structure rules just mean that we don't need to worry about the odd\ncases as much, because we can just let them be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allow sorting dives by date - without the dive trips in the dive list\n\nWe used to enable dive trips whenever we sorted by date, which can be\na bit annoying. Sometimes you really just want to sort all your dives\nby date, without necessarily seeing the trip data.\n\nSo this changes the default sort to be the \"dive number\" table, and\nthen does *not* actually sort by the dive number, but instead enables\nthe trips, and then sorts the result by date. So the \"dive number\"\ncolumn - which used to be non-sortable - becomes semantically\nequivalent to the old date column sorting.\n\nAnd now sorting by date makes it act like sorting by depth or any\nother attribute - we hide the dive trip tree, and just show the plain\nlist of dives (sorted by date, obviously).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't match existing dives by date if the dive computers are known to be different\n\nWhen downloading from a dive computer, we fall back on matching the\nexact date of the dive if we can't tell whether we already have that\nexact dive computer data some other way.\n\nHowever, if you have multiple dive computers and they are sufficiently\nwell synchronized, they might actually have the exact same date,\ndespite the fact that we do want to download both dive computers. We\ndo check the dive start to the exact second, so this sounds unlikely,\nbut with dive computers rounding time to the next minute etc, it's not\nas unlikely as you'd think. Dirk hit it.\n\nSo when we match against date, do check that the dive computer might\nactually be one we've already downloaded from. If we have full model\ninformation, we can dismiss the \"match date\" logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make add_dc_to_string() skip redundant entries\n\nThere is no point writing out divecomputer nicknames that do not exist\n(or that match the dive computer model), so don't.\n\nAlso, make the function to do this static to save-xml.c, which is the\nonly user (I initially didn't _find_ the function to create the XML\nstring because it was illogically hidden in gtk-gui.c), and change the\ncalling convention to be more direct (pass in a string and return a\nresult, rather than modify a \"pointer to string\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prevent bleeding deco/ndl for XML files without divecomputer entries\n\nMiika's xslt patch creates correct XML data without divecomputer entries.\nWhat happens is that the stop information at xml parse time is only\ncleared by the divecomputer entries, so if the XML lacks them, we will\nbleed stop data from one dive to the next.\n\nThis patch makes sure that the deco/ndl information is cleared even if the\ndive has no divecomputer entry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add a \"View next dive computer\" menu item\n\nThis adds the capability to actually view all your dive computers, by\nadding a menu item under \"Log\"->\"View\"->\"Next DC\" to show the next dive\ncomputer.\n\nRealistically, if you actually commonly use this, you'd use the\naccelerator shortcut.  Which right now is Ctrl-C (\"C for Computer\"),\nwhich is probably a horrible choice.\n\nI really would want to have nice \"next/prev dive\" accelerators too,\nbecause the cursor keys don't work very well with the gtk focus issues.\nBeing able to switch between dives would also make the \"just the dive\nprofile, maam\" view (ctrl-2) much more useful.\n\nThe prev/next dive in the profile view should probably be done with a\nkeyboard action callback, which also avoids some of the limitations of\naccelerators (ie you can make any key do the action).  Some gtk person,\nplease?\n\nAnyway, this commit only does the dive computer choice thing, and only\nusing the accelerators.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Properly remove redundant dive computer information\n\nWe had logic to remove duplicate dive computer information after merging\ndives, but it didn't actually work.\n\nWhy? Because we had used the 'res' dive computer pointer to traverse the\nlist of dive computers, so it no longer actually pointed to the first\ndive computer in the result list any more, and so the \"remove redundant\"\ncode only removed redundant dive computers from a limited and incomplete\nlist.\n\nOops.\n\nAlso, before checking the whole event and sample list, check if it's the\nexact same dive computer using our new \"match_one_dc()\" helper function,\nand don't even bother checking for sample details if it is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use dive ID for matching dives during downloads\n\nIf we have a dive computer model and dive ID, use that to match newly\ndownloaded dives against the existing dives.\n\nOtherwise fall back to \"exact date match\" again, like we've always done.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Use dive computer model/ID when trying to merge dives\n\nIf we havd divecomputer model and dive ID information available, use\nthat to match existing dives when trying to merge them.\n\nOtherwise fall back to the fuzzy time-based merging logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Calculate dive maxima/minima independent of dive computer\n\nThis splits the dive time, depth, pressure and temperature maxima and\nminima setup from the per-dive-computer \"create_plot_info()\" function\ninto one setup function that walks _all_ the dive computers, so that we\nhave a global maxima and minima.\n\nThat way the graph scaling we set up will now fit the data from all dive\ncomputers rather than just the particular one we are plotting.  So if\nyou switch back-and-forth between computers, the scale (which is defined\nby the extremes) remains the same.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move 'plot_info' into 'struct graphics_context'\n\n.. and then allocate just the plot-info entry array dynamically.\n\nWe want to have a longer lifetime for the basic plot_info data\nstructure, because we want to do computer selection and maximum\ntime/depth/temperature computations *before* we start plotting anything,\nand before we allocate the plot entry array.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add dive computer name to the dive plot\n\nI want to have some way to show multiple dive computers, so start off by\nadding the name of the current one.  So if we change dive computers,\nwe'll see it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Tune the dive joining surface event insert code\n\nFrom 178a3f0d6d5112f76943fec5f8c1c1f3b173a7f4 Mon Sep 17 00:00:00 2001\nFrom: Linus Torvalds <torvalds@linux-foundation.org>\nDate: Fri, 7 Dec 2012 09:34:18 -0800\nSubject: [PATCH 2/2] Tune the dive joining surface event insert code\n\nSo this makes us do surface events only if the samples are more than one\nminute apart, and are shallow enough (randomly selected at 5m).\n\nWe can add more heuristics.  Maybe we should compare the 1-minute sample\ntime limit of the previous sample to the time to the sample before that:\nif some computer (or manually entered dive) has a long time between\n*all* samples, we'd make the cut-off time longer.\n\nBaby steps.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging downloaded dives, strive to keep old dive in 'a'\n\nThis doesn't really change the logic of the merging, but it does mean\nthat the end result tends to be less unexpected: when downloading dives\nthat end up being merged with pre-existing dives (because you have\nmultiple dive computers, for example), the newly downloaded dive data\nwill tend to be appended to the old dive data, rather than showing up\nfirst.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix SIGSEGV when joining dives without dive computer information\n\nHandle the case where we have no divecomputer information.\n\nReported-by: Sergey Starosek <sergey.starosek@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Turn latitude and longitude into integer micro-degree values\n\nThis actually makes us internally use 'micro-degrees' for latitude and\nlongitude, and we never turn them into floating point either at parse\ntime or save time.\n\nThat said, the Uemis downloader internally does still use atof() when\nconverting things, which is likely a bug (locale issues and all that),\nbut I'll ask Dirk to check it out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Save latitude/longitude using integer math\n\nI hate using floating point, this tries to at least make parts of it be\ninteger logic, and avoid the whole locale issue.  This still keeps the\nlatitude and longitude internally as a floating point value, and parses\nit that way, but I'm slowly moving towards less and less FP use.\n\nWe're going to use micro-degrees for location information: that's\nsufficient to about a tenth of a meter precision, and it fits in a\n32-bit integer.\n\nIf you specify dive sites with more precision than that, you may have\nOCD.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve automatic dive merging logic\n\nThis tunes the heuristics for when to merge two dives together into a\nsingle dive. We used to just look at the date, and say \"if they're\nwithin one minute of each other, try to merge\". This looks at the\nactual dive data, and tries to see just how much sense it makes to\nmerge the dive.\n\nIt also checks if the dives to be merged use different dive computers,\nand if so relaxes the one minute to five, since most people aren't\nquite as OCD as I am, and don't tend to set their dive computers quite\nthat exactly to the same time and date.\n\nI'm sure people can come up with other heuristics, but this should\nmake that easier too.\n\nNOTE! If you have things like wrong timezones etc, and the\ndivecomputer dates are thus off by hours rather than by a couple of\nminutes, this will still not merge them. For that kind of situation,\nwe'd need some kind of manual merge option. Note that that is *not*\nthe same as the current \"merge two adjacent dives\" together, which\njoins two separate dives into one *longer* dive with a surface\ninterval in between.\n\nThat kind of manual merge UI makes sense, but is independent of this\npartical change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive computer event handling if there are no samples\n\nThis actually triggers for one of our insane test dives (test15): it has\nno samples, so we created a fake dive computer entry with the a fake\nprofile in it, but we didn't copy the events over.\n\nHaving a dive with no samples, yet having events from the dive computer,\nsounds pretty bogus.  But that test-case did show that when that bogus\nsituation happens, we had two independent buglets: (a) we didn't insert\nthe entries in the fake dive computer entry we used and (b) we would\nthen mix up the events of the fake dive computer entry with the first\ndive computer of a dive.\n\nFix this, just to make test15 happy again.  And eventually, when we\nactually plot the information for multiple dive computers, fixing case\n(b) would become necessary even for real dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify tripflags: remove tripflag_names[]\n\nThis removes the tripflag name array, since it's not actually useful.\nThe only information we ever save in the XML file is whether a dive is\nexplicitly not supposed to ever be grouped with a trip (\"NOTRIP\"), and\neverything else is implicit.\n\nI'm going to simplify the trip flags further (possibly removing it\nentirely - like I did for dive trips already), and don't like having to\nmaintain the tripflag_names[] array logic.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove 'tripflag' from dive trips\n\nBoth dives and dive trips have the same 'tripflag' thing, but they are\nused very differently.  In particular, for dive trips, the only case\nthat has any meaning is the TF_AUTOGEN case, so instead of having that\ntrip flag, replace it with a bitfield that says whether the trip was\nauto-generated or not.\n\nAnd make the one-bit bitfields explicitly unsigned.  Signed bitfields\nare almost always a mistake, and can be confusing.\n\nAlso remove a few now stale macros that are no longer needed now that we\ndon't do the GList thing for dive list handling, and our autogen logic\nhas been simplified.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Clarify (and fix) dive trip auto-generation\n\nThis makes the dive trip auto-generation a separate pass from the\nshowing of the dive trips, which makes things much more understandable.\nIt simplifies the code a lot too, because it's much more natural to\ngenerate the automatic trip data by walking the dives from oldest to\nnewest (while the tree model wants to walk the other way).\n\nIt gets rid of the most annoying part of using the gtk tree model for\ndive trip management, but some still remains.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Remove 'when_from_file' field from dive trip\n\nIt had become a write-only field (apart from some now useless debugging)\nwhen simplifying the remove_autogen_trips() function.\n\nSo remove it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Rewrite 'remove_autogen_trips()' without the gtk tree model walking\n\nI'm trying to remove (or at least simplify) the gtk tree model usage for\nour trip handling, but I'm doing it in small chunks.  The goal is to\njust do all our trip handling logic explicitly using our own data\nstructures, and use the gtk tree model purely for showing the end\nresult.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Associate each dive trip with the dives in that trip\n\nWe already kept a count of dives per trip in order to figure out when\nthere are no more dives left and the trip needs to be freed.  Now we\nexplicitly keep track of the list of dives associated with the trip too,\nwhich simplifies the \"find the time of the trip\" logic.\n\nWe may want to sort it in time, but for now this is mainly about trying\nto keep track of the divetrip relationships explicitly.  I want to move\naway from the whole \"use the gtk tree model to keep track of things\"\napproach.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive trip selection for merging\n\nWhen picking the \"better\" trip, we stupidly looked not at the trip\nlocation, but at the _dive_ location.\n\nWhich obviously didn't actually pick the \"better\" trip information at\nall, since it never actually looked at the trip itself.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be much saner about merging dive computer data\n\nNow that we have dive computer device ID fields etc, we can do a much\nbetter job of merging the dive computer data.\n\nThe rule is\n\n - if we actually merge two disjoint dives (ie extended surface interval\n   causing the dive computer to think the dive ended and turning two of\n   those dives into one), find the *matching* dive computer from the\n   other dive to combine with.\n\n - if we are merging dives at the same time, discard old-style data with\n   no dive computer info (ie act like a re-download)\n\n - if we have new-style dive computers with identifiers, take them all.\n\nwhich seems to work fairly well.\n\nThere's more tweaking to be done, but I think this is getting to the\npoint where it largely works.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Do not set the water salinity of a dive unless libdivecomputer supports it\n\nIt's annoying to see water salinity data in the XML that isn't relevant,\nand adding the default value just because the dive got downloaded from\nlibdivecomputer is definitely wrong.\n\nWe should set the water salinity explicitly only if we have it\nexplicitly set on the dive computer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on divecomputer data handling\n\nThis simplifies the vendor/product fields into just a single \"model\"\nstring for the dive computer, since we can't really validly ever use it\nany other way anyway.\n\nAlso, add 'deviceid' and 'diveid' fields: they are just 32-bit hex\nvalues that are unique for that particular dive computer model.  For\nlibdivecomputer, they are basically the first word of the SHA1 of the\ndata that libdivecomputer gives us.\n\n(Trying to expose it in some other way is insane - different dive\ncomputers use different models for the ID, so don't try to do some kind\nof serial number or something like that)\n\nFor the Uemis Zurich, which doesn't use the libdivecomputer import, we\ncurrently only set the model name.  The computer does have some kind of\ndevice ID string, and we could/should just do the same \"SHA1 over the\nID\" to give it a unique ID, but the pseudo-xml parsing confuses me, so\nI'll let Dirk fix that up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Start merging dives by keeping the dive computer data from both dives\n\nAlso, note that we do *not* do the \"find_sample_offset()\" any more when\nwe merge two dives that happen at the same time - since we just keep\nboth sets of dive computer data around.\n\nBut we keep the function to find the best offset around, because we may\nwell want to use it later when *showing* the dive, and trying to match\nup the different sample data from the multiple dive computers associated\nwith the dive.\n\nBecause of that, this causes warnings about the now unused function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Match newly downloaded dives against dive computer information\n\nNow that we have more complete dive computer information, we can use\nthat to match the dives we download, and stop with the hacky \"Would we\nmerge this\" check.\n\nFor XML files without the explicit dive computer information, go back to\nchecking the exact dive time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add basic divecomputer info setup with xml parsing and saving\n\nThis also knows how to save and restore multiple dive computers in the\nXML data, but there's no way to actually *create* that kind of\ninformation yet (nor do we display it).  Tested by creating fake XML\nfiles with multiple dive computers by hand so far.\n\nThe dive computer information right now contains (apart from the sample\nand event data that we've always had):\n\n - the vendor and product name of the dive computer\n - the date of the dive according to the dive computer (so if you change\n   the dive date manually, the dive computer date stays around)\n\nNote that if the dive computer date matches the dive date, we won't\nbother saving the redundant information in the XML file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix \"prefer downloaded\" dive sample merging case\n\nWhen we have a preferred dive computer that overrides old information\nwhen merging two dives, we just copy the dive computer data over.\nHowever, we need to clear the source of the dive computer data so that\nwe then don't free the sample data when that old source of the newly\nmerged dive gets free'd.\n\nThis fixes a memory scribble (and likely SIGSEGV) for the \"prefer\ndownloaded\" case.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Move events and samples into a 'struct divecomputer'\n\nFor now we only have one fixed divecomputer associated with each dive,\nso this doesn't really change any current semantics.  But it will make\nit easier for us to associate a dive with multiple dive computers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Allocate dive samples separately from 'struct dive'\n\nWe used to avoid some extra allocations by just allocating the dive\nsamples as part of the 'struct dive' allocation itself, but that ends up\ncomplicating things, and will make it impossible to have multiple\ndifferent sets of samples (for multiple dive computers).\n\nSo stop doing it. Just allocate the dive samples array separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When downloading from a dive computer, stop at mergeable dives\n\nThe divecomputer download code will stop at a matching dive (unless\nyou check the \"Download all dives\" option when downloading).\n\nHowever, the matching dive is an *exact* match, which works well when\nyou have a single dive computer, but is a big pain when you have\nmultiple. What happens is that the date of the dive will be determined\nby whatever dive computer you used first, and then downloading from\nother dive computers will not match exactly, but will merge (if the\ncomputers are within a minute of each other).\n\nAnd that will continue to happen every time you try to download from\nthat other dive computer.\n\nSo use the same logic as for the automatic dive merging: consider\n\"within one minute\" to be a matching dive. So don't download dives\nthat will be merged - unless the user asks for it.\n\nWe do want to have some way of saying \"force download of all dives\nfrom today\" or something like that, I suspect. Because while I don't\nwant to re-download *every* dive, I might want to force-merge the last\n<N> dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix the XML gps parsing and saving when using non-US locales\n\nThe GPS parsing and saving was using sscanf and sprintf respecively, and\nsince it is using floating point values (boo!) that affects both of\nthem.  In a C/US locale, we use a period for decimal values, while most\nEuropean locales use a comma.\n\nWe really should probably just fix things to use integer values (degrees\nand nanodegrees?) but this is the simplest fix/workaround for the issue.\n\nProbably nobody ever really noticed until I tested the Swedish locale\nfor grins, since we don't have a good way to actually set the GPS\ncoordinates yet.  I've got a few dives with GPS information that I\nentered manually.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> When merging non-overlapping dives, add surface events in between\n\nMost of the dive computers I have access to don't do the whole surface\nevent thing at the beginning or the end of the dive, so when you merge\ntwo consecutive dives, you got this odd merged dive where the diver\nspent the time in between at a depth of 1.2m or so (whatever the dive\ncomputer \"I'm now under water\" depth limit happens to be).\n\nDon't do that.  Add surface events at the end of the first dive to be\nmerged, and the beginning of the second one, so that the time in between\ndives is properly marked as being at the surface.\n\nThe logic for \"time in between dives\" is a bit iffy - it's \"more than 60\nseconds with no samples\".  If somebody has dive computers with samples\nmore than 60 seconds apart, this will break and we may have to revisit\nthe logic.  But dang, that's some seriously broken sample rate.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix silly thinko in recent changes to \"Delete dive\" code\n\nCommit 38c79d149db0 (\"Simplify and clean up dive trip management\")\nsimplified the code a bit *too* much, and removed the check for\n\"dive->selected\".\n\nAs a result, trying to delete a dive resulted in *all* dives being\ndeleted.\n\nOops.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Mark divelist changed as we download dives from a dive computer\n\n\"record_dive()\" won't do that, since otherwise we'd mark the dive list\nchanged when we load it from an XML file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add support for zooming using the scroll-wheel\n\nThis allows zooming in with the scroll-wheel if you have one (or the\ntwo-finger scrolling on a touchpad).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix average temperature statistics\n\nWe generate the average temperature statistics by adding up the\n(converted to user unites - not in millikelvin) temperatures and then\ndividing by the number of dives we've added up over.\n\nHOWEVER.\n\nWe did that summing of the temperatures into an integer variable, even\nthough the converted temperatures are floating point.  So things got\nrounded down to integers and the average temperature was just bogus\n(although reasonably close).\n\nWe could do the summing of the temperatures in millikelvin and only\ndoing the conversion to the user at the very end.  But the smaller patch\nis to just change the accumulator to a double value.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add back mysteriously deleted \"} else {\" line\n\nCommit 6c52e8a2e516 (\"Add plotting of the deco ceiling\") for some\ntotally unexplained reason deleted one \"else\" statement, resulting in\nsome plot events not having a time at all.  Which causes various really\nodd issues if you hit that situation, including divide-by-zero etc due\nto the difference in times between events being nonsensical.\n\nIt's just some odd mistake that was entirely unrelated to the other\nchanges in that commit.\n\nAdd the missing line back in.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Make the \"click-to-zoom\" use a 2.5x zoom factor\n\nI think I prefer the 2.5x zoom over the pure doubling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Be stricter about when we allow merging of dives\n\nIf the surface interval between two dives is more than half an hour,\ndon't try to call it a single dive.  Just the dive profile will be\nlooking ridiculous.\n\nThings like tank refills etc could also be a good thing to check (again,\nthe dive profile would look ridiculous), but the cylinder pressure going\nup a small amount is actually normal (ie cylinder warming up in warmer\nwater on the surface).  So I don't know what the proper limit for that\nwould be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix possible array bound violation for insanely long dives\n\nWhen we calculate the interval for the tick-marks for the dive, we need\nto limit 'i' to be within the size of the array.  The code does that\nwith a \"i < 8\" check, but the fact is, we must never increment past the\nlast entry, which is 7 (the size of the array is 8, but the last valid\nindex is 7).\n\nThis only happens for unrealistically long dives.  Which you can trigger\neither by inputting insane values for a manually created dive, or by\nmerging two dives that are consecutive, but not close to each other\ntime-wise (eg on different days ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Create tool-tip with depth/pressure for the whole profile area\n\nThis extends on our current tooltip logic (which shows events when you\nmouse over them) to show tooltips for the whole profile area.\n\nIf you mouse over an event, that is still shown in the tooltip, but\neven in the absense of events, the tooltip will be active, and mousing\nover the profile area will show the time, depth and pressure.\n\nThis can certainly be improved upon further, but even in this form it is\nuseful.\n\nFixes #9\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Initial not-so-pretty profile zoom support\n\nYou can press the left mouse-button on the profile and drag the mouse\naround to zoom in on a specific area. Releasing the mouse button unzooms.\n\nYeah, everybody wants rubber-banding, but I have reached the end of my\nwillingness to fight gtk for more details. Some day.\n\n[Dirk Hohndel:\tchanged this to use the right mouse button instead of the\n\t\tleft which seemed just terribly unnatural]\n\nReferences ticket 9\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix selection and trip expansion logic after merging dives\n\nThis just makes sure that the merged dive is properly selected, and\nthat we've saved the trip tree state so that the dive list repaints\nnicely and with the newly merged dive selected after the merge.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Support merging of two adjacent dives\n\nThis introduces the notion of merging two disjoint dives: you can select\ntwo dives from the dive list, and if the selection is exactly two dives,\nand they are adjacent (and share the same dive trip), we support the\nnotion of merging the dives into one dive.\n\nThe most common reason for this is an extended surface event, which made\nthe dive computer decide that the dive was ended, but maybe you were\njust waiting for a buddy or a student at the surface, and you want to\nstitch together two dives into one.\n\nThere are still details to be sorted out: my Suunto dive computers don't\nactually do surface samples at the beginning or end of the dive, so when\nyou stitch two dives together, the profile ends up being this odd \"a\ncouple of feet under water between the two parts of the dive\" thing.\n\nBut that's an independent thing from the actual merging logic, and I'll\nwork on that separately.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Prepare to merge non-overlapping dives\n\nThis just re-organizes the dive merging code so that we expose a new\n\"merge_dives(a, b, offset)\" function that merges two dives together into\none with the samples (and events) of 'b' at the specified offset after\n'a'.\n\nWe'll want to use this if a dive computer has decided that the dive\nended (due to a pause at the surface), but we really want to just turn\nthe two computer dives into one long one with an extended surface swim.\n\nNo functional changes, but some independent cleanups due to the trip\nsimplifications.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't simplify 'bookmark' and 'heading' events\n\nAdd the bookmark and heading events to the list of events not to be\nsimplified just because they are redundant - in both cases they are\nabout the user doing something explicit (like the gaschange), so even\nif the data is otherwise identical, they should likely be saved.\n\nThat said, both events are kind of pointless (we don't actually seem\nto save the heading value for the heading events, and bookmarks are\nuniversally just due to user error in at least my case). But still..\n\nThis overly aggressive filtering was introduced in commit 6ad73a8f043b\n(\"Improve logic handling events\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Simplify and clean up dive trip management\n\nThis adds a couple of helper functions to manage dive trips\n(\"add_dive_to_trip()\" and \"remove_dive_from_trip()\") and makes those\nfunctions do the trip statistics maintenance (trip beginning times,\nnumber of dives, etc).\n\nThis was needed because the dive merge cases for multiple dive\ncomputers showed some rather nasty special cases: especially if the\nnew dive information has been loaded into an XML file with trips\nauto-generated, merging several of these kinds of xml files with\nmultiple dives in several overlapping trips would completely confuse\nour previous code.\n\nIn particular, auto-generated trips that had the exact same date as\nprevious trips (because they were generated from the same dive\ncomputer) really confused the code that used the trip timestamp to\nmanage the trips.\n\nAdding the helper functions allows us to get the general case right\nwithout having to have each piece of code that handles trip\ninformation having to bother about all the odd rules. It will\neventually also allow us to make the dive trip data structures more\nlogical: right now the dive trip list is largely designed around the\nodd gtk model handling, rather than some more higher-level conceptual\nrelationship with the actual dives.\n\nBut for now, this keeps all the data structures unchanged, and just\nmodifies them using the new helper functions.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix default filename handling errors\n\nThe default filename handling is broken in two different ways:\n\n (a) if we start subsurface with a non-existing file, we warn about\nthe inability to read that file, and then we exit without setting the\ndefault filename.\n\nThis is broken because it means that if the user (perhaps by mistake,\nby pressing ^S) now saves the file, he will overwrite the default\nfilename, even though that was *not* the file we read, and *not* the\nfile that subsurface was started with.\n\nSo just set the default filename even for a failed file open.\n\nThe exact same logic is true of a failed parse of an XML file that we\nsuccessfully opened. We do *not* want to leave the old default\nfilename in place just because the XML parsing failed, and possibly\nthen overwriting some file that was never involved with that failure\nin the first place. So just get rid of all the logic to push the\nfilename saving into the XML parsing layer, it has zero relevance at\nthat point.\n\n (b) if we do replace the default filename with a NULL file, we need\nto set that even if we cannot do a strdup() on the NULL.\n\nThis fixes both errors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> gtk spinbuttons are crazy - fix possible divide-by-zero\n\nWhen we fill the cylinder information in an imperial unit world, a\nworking pressure of zero is a special case, and forces us to use the\nactual physical size of the cylinder in liter, despite the fact that\nwe normally would use cuft.\n\nHowever, we compare that value against zero in a 'double', and in\nbetween going through the gtk spinbutton logic, the zero we have\nfilled in then gets read out as some very tiny epsilon value from the\ngtk spinbuttons (typically in the 10**-317 range). This causes us to\nthink that the zero isn't actually a zero, because gtk has done odd\nthings with it.\n\nFix this by calculating the millibar value (as an integer) first, and\ncheck that *integer* against zero. Any crazy epsilon values will have\nbeen rounded away, and our logic works again.\n\nThere's a good reason why subsurface does everything using integers\n(ie the afore-mentioned \"convert to integer millibar\" etc) and doesn't\nuse floating point for any core data structures, only for conversion.\nFP rounding and inexact behavior can be really subtle.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Try to find optimal dive sample merge offset\n\nWhen we merge dives where the samples have come from different dive\ncomputers, the samples may be offset from each other due to the dive\ncomputers not having decided that the dive starts at quite the same\ntime.\n\nFor example, some dive computers may take a while to wake up when\nsubmerged, or there may be differences in exactly when the dive\ncomputer decides that a dive has started. Different computers tend to\nhave different depths that they consider the start of a real dive.\n\nSo when we merge two dives, look for differences in the sample data,\nand search for the sample time offset that minimizes the differences\n(logic: minimize the sum-of-square of the depth differences over a\ntwo-minute window at the start of the dive).\n\nThis still doesn't really result in perfect merges, since different\ncomputers will give slightly different values anyway, but it improves\nthe dive merging noticeably. To the point that this seems to have\nfound a bug in our Uemis data import (it looks like the Uemis importer\ndoes an incorrect saltwater pressure conversion, and the data is\nactually in centimeter, not in pressure).\n\nSo there is room for improvement, but this is at least a reasonable\napproximation and starting point.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive trip merging logic\n\nWe used to have very spotty logic for picking the dive trip when\nmerging two dives. It turns out that that spotty logic almost never\nreally matters, because in practice you'll never hit the situation of\nmerging two dives with different dive trips, but it *can* happen.\n\nIn particular, it happens when you use multiple dive computers, and\nend up loading the dives from one computer on top of the dives of your\nother computer. If the clocks of the dive computers was set\nsufficiently close to each other, the dive merging logic will kick in\nand you may now have slightly different times for the dives that get\nmerged, and the trip merging logic got *really* confused.\n\nThe trip management also depends on the trip dates being updated\ncorrectly when the dives associated with a trip are updated (whether\nadded or removed), and the trip merging code did none of that.\n\nThis fixes it all up. Hopefully correctly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix merging of weight systems\n\nI just tried downloading some duplicate dives I had on my second dive\ncomputer, and it all \"just worked\" and subsurface merged them for me.\nAlmost perfectly.\n\nI say \"almost\", because in merging them, it threw my old weightsystem\ndata away, due to that not being merged.\n\nAlso, it was a perfect merge only because the computers are so similar\nthat they just line everything up - same water activation logic, same\nsample interval, same pretty much everything. So while I know the\nsample merging is not really the right thing to do (it was designed to\nget the \"merge the exact same dive from the same computer\" case\nright), it worked well enough for this particular case. I'll look at\nsomething better later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Another Swedish translation update\n\nThis updates the Swedish translation for the new message strings, and\nthe date ordering in particular. It also fixes an incorrect\ntranslation (it incorrectly had translated dive-time as if it was the\nstarting time of the dive, not the duration of the dive).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Minimal Swedish translation update\n\nThis doesn't really improve any of the horrible Swedish texts, but\nupdates it for the message text fuzziness due to the text changes\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add Swedish translation\n\nThis is a horrible mish-mash of the english and norwegian translation\nand my random odd swedish translations of them.\n\nIt's bad. But it's a starting point. If somebody complains, they\nhopefully say things like \"That should be xyz\" and it can be fixed.\n\n[Dirk Hohndel: minor edit to the .po file to at least no longer claim to\n               be Norwegian...]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on the DivingLog importer a bit\n\nThis adds a few fields that we parse, but more importantly it also tries\nto dynamically decide if the sample temperatures and pressures are in\nimperial or metric units.\n\nDirk suspects that DivingLog generally always does everything in metric,\nand the reason why he has crazy sample data in imperial units (both for\npressure and temperature) may be due to a bug in the early Uemis\nimporter for DivingLog.\n\nWhich would actually make a lot more sense than DivingLog really being\nso insane on purpose.\n\nAnyway, Dirk's brother Jurgen seems to have everything in metric units,\nwhich would be much saner.  Maybe we should throw away the support for\ninsane DivingLog files entirely, since it is possible that the only use\never of the possible source of that bug was Dirk's use of the Uemis\nimporter.\n\nBut for now, we end up just guessing. Current guesses:\n\n - water temperature is below 32 dgC, so 32+ degrees is in Fahrenheit.\n\n - tank pressures are below 400 bar, so higher values than that must be\n   psi.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> New XML format for saving dives\n\nThis patch makes the trips nest, and it also fixes the fact that you never\nsaved the trip notes (you could edit it, but saving would throw it away).\n\nI did *not* change the indentation of the dives, so the trip stuff shows\nup the the beginning of the line, at the same level as the <dive> and\n<dives> thing. I think it's fairly readable xml, though, and we haven't\nreally had proper \"indentation shows nesting\" anyway, since the top-level\n\"<dives>\" thing also didn't indent stuff inside of it.\n\nAnyway, the way I wrote it, it still parses your old \"INTRIP\" stuff etc,\nso as far as I know, it should happily read the old-style XML too. At\nleast it seemed to work with your xml file that already had the old-style\none (I haven't committed my divetrips, exactly because I didn't like the\nnew format).\n\nIt always saves in the new style, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update cylinder info properly\n\nThe \"cylinders_equal()/copy_cylinders()\" functions were buggered, and\nonly checked (and copied) the cylinder type.  That was on purpose, since\nyou do want to be able to change the type of a cylinder without changing\nthe gasmix of the cylinder.\n\nHOWEVER, the reverse is also true: you may want to change the gasmix of\na cylinder without changing the type.\n\nSo it's not that the type of the cylinder is special - it's that the\ntype and the gasmix should be considered separately.\n\nDo that properly for the equipment editing case.\n\nReported-by: Ďoďo <dodo.sk@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix missing save of (almost empty) cylinder information\n\nIf we have no explicit cylinder info at all (it's normal air, no size or\nworking pressure information, and no beginning/end pressure information),\nwe don't save the cylinders in question because that would be redundant.\n\nSuch non-saved cylinders may still show up in the equipment list because\nthere may be implicit mention of them elsewhere, notably due to sample\ndata, so not saving them is the right thing to do - there is nothing to\nsave.\n\nHowever, we missed one case: if there were other cylinders that *did* have\nexplicit information in it following such an uninteresting cylinder, we do\nneed to save the cylinder information for the useless case - if only in\norder to be able to save the non-useless information for subsequent\ncylinders.\n\nThis patch does that. Now, if you had an air-filled cylinder with no\ninformation as your first cylinder, and a 51% nitrox as your second one,\nit will save that information as\n\n  <cylinder />\n  <cylinder o2='51.0%' />\n\nrather than dropping the cylinder information entirely.\n\nThis bug has been there for a long time, and was hidden by the fact that\nnormally you'd fill in cylinder descriptions etc after importing new\ndives. It also used to be that we saved the cylinder beginning/end\npressure even if that was generated from the sample data, so if you\nimported from a air-integrated computer and had samples for that cylinder,\nwe used to save it even though it was technically redundant.\n\nWe stopped saving redundant air sample information in commit 0089dd8819b7\n(\"Don't save cylinder start/end pressures unless set by hand\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n\nRemoved start and end in save_cylinder_info(). These two variables are no\nlonger used.\n\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't update the progress bar from the dive computer import thread\n\nThere's no guarantee that gtk is thread-safe (apparently it can be\nbroken at least on Windows, even though it should be fine on top of X).\n\nSo don't update the progress bar directly from the dive computer import\ncode, instead just update the progress information in static variables,\nand let the GUI thread update it while it does the idle loop polling\nanyway.\n\nReported-by: Jef Driesen <jefdriesen@telenet.be>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'divetrip-rewrite' of git://github.com/torvalds/subsurface\n\nMerge the dive trip rewrite by Dirk Hohndel.\n\nThis just merges the dive trip changes with the timestamp handling\nchanges.  There were multiple small data conflicts, along with some\nnewly added 'time_t' cases in the dive trip handling that needed to be\nconverted to 'timestamp_t' along the way.\n\n* 'divetrip-rewrite' of git://github.com/torvalds/subsurface:\n  Convert FIND_TRIP into function\n  Partial rewrite of the dive trip code\n  Check if trip is NULL before calling DIVE_TRIP Merge branch 'time-function'\n\nMerge the 64-bit timestamp_t time function branch.\n\nThis makes subsurface not only safe against the 2038-year problem, but\nalso avoids the use of thread-unsafe gmtime() etc.\n\nWe still use the system time_t for initializing the calendar widget for\nadding a new dive, but that's cosmetic rather than anything fundamental.\n\n* time-function:\n  FIND_TRIP: don't cast a timestamp to a pointer\n  dive-time widget: fix incorrect use of timestamp_t\n  Fix the incorrect data type for DIVE_DATE accesses\n  Use a 64-bit 'timestamp_t' for all timestamps, rather than 'time_t' FIND_TRIP: don't cast a timestamp to a pointer\n\nThe pointer size may not be large enough to contain a timestamp, so make\nFIND_TRIP() just pass the pointer to the timestamp instead.\n\nAnd use an inline function instead of macros with casts.  That gets us\nproper type safety while at it, so that we get a warning if somebody\ndoesn't pass the expected \"timestamp_t *\".  Plus the code actually looks\nsimpler and way more straightforward.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive-time widget: fix incorrect use of timestamp_t\n\nI did a global search-and-replace to make all \"time_t\" users use the\ninternal subsurface 64-bit \"timestamp_t\" type instead, but we have one\ncase that still uses the system time functions: the use of \"localtime()\"\nin the dive_time_widget().\n\nEverywhere else we always just use UTC for all our time handling, and we\ndon't really ever care about the local timezone etc.  However, for the\ndive time widget, we initialize the calendar widget to the current time,\nwhich obviously does want to take the local timezone into account, so\nthere we end up using the whole system time handling code.\n\nSo that one should continue to use time_t, even if it might have the\nyear-2038 problem.  We also don't care about the fact that it's not\nthread-safe, since this is just initializing the widget which definitely\ndoesn't happen threaded.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix the incorrect data type for DIVE_DATE accesses\n\nThis is the same bugfix that Lubomir did in the master branch, but now\non top of the new 64-bit timestamp_t model.  So now we also remove the\ncomment about the year 2038 problem, because it's not true any more.  We\ndo all the date handling in a 64-bit integer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a 64-bit 'timestamp_t' for all timestamps, rather than 'time_t'\n\nThis makes the time type unambiguous, and we can use G_TYPE_INT64 for it\nin the divelist too.\n\nIt also implements a portable (and thread-safe) \"utc_mkdate()\" function\nthat acts kind of like gmtime_r(), but using the 64-bit timestamp_t.  It\nmatches our original \"utc_mktime()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-work' of git://git.hohndel.org/subsurface\n\nPull small UI updates from Dirk Hohndel:\n \"Not sure if you like the change to the About screen.  :-)\n\n  The other one is simply a small improvement for people importing xml\n  files from the UI - it gets them an at least somewhat sane starting\n  directory to work from.\"\n\n* 'ui-work' of git://git.hohndel.org/subsurface:\n  Set default path for file import to the last path opened\n  Update the About screen Merge branch 'trip3' of git://git.hohndel.org/subsurface\n\nPull more trip handling fixes from Dirk Hohndel.\n\nAnd the \"delete dive\" functionality too.\n\n* 'trip3' of git://git.hohndel.org/subsurface:\n  Implement delete dive option\n  Make \"create trip above\" also add on selected dives\n  Handle new dives correctly if trips exist\n  Merge one or more dives with the trip above Merge branch 'print_selection' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull print selection checkbox update from Pierre-Yves Chibon.\n\nInstead of implicitly always printing selected dives if there are more\nthan one, this makes it print them if the checkbox is selected.\n\n* 'print_selection' of http://ambre.pingoured.fr/cgit/subsurface:\n  Add the 'Print only selection' checkbox in the print options Merge branch 'trip3' of git://git.hohndel.org/subsurface\n\nPull trip manipulation branch from Dirk Hohndel:\n \"I have added yet more of the requested features.\n\n  I am not aware of any outstanding bugs or crashes (except for the Gtk\n  problem that causes the import to crash for some people on Ubuntu and\n  MacOS - but as I mentioned earlier, that bug has been around as long\n  as the import file selector box).\"\n\n* 'trip3' of git://git.hohndel.org/subsurface:\n  Avoid duplicate dive_trip entries\n  More trip manipulations: remove selected dives from trip\n  Add ability to merge trip with trip below\n  Use the infrastructure for moving dives in more places\n  Correct the trip related test dives\n  Fix crash when removing the first dive of a trip\n  Correctly initialize the toggle state of the autogroup menu entry\n  Fix copy_tree_node to no longer overwrite dive duration\n  Add autogen menu command\n  Fix a crash when changing sort column\n  Use truth values with gboolean\n  Allow modification and edits of trips\n  Clean up macros and auxiliary functions\n  Store time_t as long value Make xml (and CSV) parsing use 'g_ascii_strtod()' rather than 'strtod()'\n\nGTK messes up the standard C library locales by default (instead of just\ntaking locale information into account internally).  Which breaks\n'strtod()' and 'printf()' etc.  Since they screwed that up, they then\nadded helper functions for undoing that braindamage.  Use it.\n\nI'd like to blame the GTK people, but the standard C libary people bear\n*some* responsibility for this.  One of the reasons why people do not\nuse \"setlocale()\" in many normal programs is exactly because it messes\nup core libc functionality - with number conversion being the main\nthing.\n\nDoing things like converting numbers in a locale-specific manner is\nsomething people do want to do, but not *always*.  So the C library\nlocale code should always had defaulted to C locale, with some *extra*\nmarker (like a printf/scanf modifier) to say \"print/scan in the current\nlocale\".\n\nBecause many things absoilutely need to be non-localized.  You don't\nwant your internal file format to magically change just because you want\nto show things to the user in France, for example.\n\nReported-by: Ivan Habunek <ivan.habunek@gmail.com>\nRoot-caused-by: Jef Driesen <jefdriesen@telenet.be>\nCc: Dirk Hohndel <dirk@hohndel.org>\nCc: Lubomir I. Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'separator-line' of git://github.com/henrik242/subsurface\n\nApparently on OS X the separator line is all alone at the end.\n\nAcked-by: Dirk Hohndel <dirk@hohndel.org>\n\n* 'separator-line' of git://github.com/henrik242/subsurface:\n  Remove separator line in MacOSX File menu Add support for printing only the selected dives\n\nRight now we just implicitly decide \"print only selected dives\" when\nthere is more than one dive selected (and then print all dives if only\none dive is selected).\n\nWe probably should have an checkbutton in the dive details page for the\nchoice.  But I wanted to avoid the pain that is gtk as far as possible\nfor the initial implementation.  The code is ready to be changed to just\nuse a checkbutton instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'print_table' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull table printing improvements from Pierre-Yves Chibon:\n \"I cleaned up the print options as asked so that we only have the\n  choice between the \"pretty-print\" and the \"table-print\".\n\n  The table layout has been improved.\"\n\n* 'print_table' of http://ambre.pingoured.fr/cgit/subsurface:\n  Remove the pretty-print without dive profile option.\n  Have a nice table formating with choosing the 'Table print' option.\n  Invert the print 'dive profile' option.\n  Deactivate 'Show profiles' if 'table print' is checked. Merge branch 'divetrip-nr' of git://git.hohndel.org/subsurface\n\nPull divetrip nr cleanup from Dirk Hohndel:\n \"We don't need to manually track this - gtk gives us this number\n  without any problems.\"\n\n* 'divetrip-nr' of git://git.hohndel.org/subsurface:\n  Stop tracking the number of dives in a dive trip Merge branch 'freediving-tweaks' of git://github.com/mguentner/subsurface\n\nMerge freediving tweaks (zoom in on short dives etc) from Maximilian\nGüntner.\n\nTrivial conflicts in display.h due to unrelated printing stuff just\nhappening to be added nearby.\n\n* 'freediving-tweaks' of git://github.com/mguentner/subsurface:\n  moved zoomed_plot to display.h\n  plot the time with a fixed padding (leading zero)\n  updated/corrected comment\n  added \"Zoom\" button and improved scaling\n  fixed indentation\n  use increments that make sense for 600 seconds\n  Plot shorter (apnea) dives with a reasonable scale Merge tag 'usb-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a number of USB fixes for 4.14-rc4 to resolved reported\n  issues.\n\n  There's a bunch of stuff in here based on the great work Andrey\n  Konovalov is doing in fuzzing the USB stack. Lots of bug fixes when\n  dealing with corrupted USB descriptors that we've never seen in\n  \"normal\" operation, but is now ensuring the stack is much more\n  hardened overall.\n\n  There's also the usual XHCI and gadget driver fixes as well, and a\n  build error fix, and a few other minor things, full details in the\n  shortlog.\n\n  All of these have been in linux-next with no reported issues\"\n\n* tag 'usb-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (38 commits)\n  usb: dwc3: of-simple: Add compatible for Spreadtrum SC9860 platform\n  usb: gadget: udc: atmel: set vbus irqflags explicitly\n  usb: gadget: ffs: handle I/O completion in-order\n  usb: renesas_usbhs: fix usbhsf_fifo_clear() for RX direction\n  usb: renesas_usbhs: fix the BCLR setting condition for non-DCP pipe\n  usb: gadget: udc: renesas_usb3: Fix return value of usb3_write_pipe()\n  usb: gadget: udc: renesas_usb3: fix Pn_RAMMAP.Pn_MPKT value\n  usb: gadget: udc: renesas_usb3: fix for no-data control transfer\n  USB: dummy-hcd: Fix erroneous synchronization change\n  USB: dummy-hcd: fix infinite-loop resubmission bug\n  USB: dummy-hcd: fix connection failures (wrong speed)\n  USB: cdc-wdm: ignore -EPIPE from GetEncapsulatedResponse\n  USB: devio: Don't corrupt user memory\n  USB: devio: Prevent integer overflow in proc_do_submiturb()\n  USB: g_mass_storage: Fix deadlock when driver is unbound\n  USB: gadgetfs: Fix crash caused by inadequate synchronization\n  USB: gadgetfs: fix copy_to_user while holding spinlock\n  USB: uas: fix bug in handling of alternate settings\n  usb-storage: unusual_devs entry to fix write-access regression for Seagate external drives\n  usb-storage: fix bogus hardware error messages for ATA pass-thru devices\n  ... Merge tag 'tty-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial fixes from Greg KH:\n \"Here are a small number (5) of patches for some reported TTY and\n  serial issues. Nothing major, a documentation update, timing fix,\n  error handling fix, name reporting fix, and a timeout issue resolved.\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'tty-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  serial: sccnxp: Fix error handling in sccnxp_probe()\n  tty: serial: lpuart: avoid report NULL interrupt\n  serial: bcm63xx: fix timing issue.\n  mxser: fix timeout calculation for low rates\n  serial: sh-sci: document R8A77970 bindings Merge tag 'staging-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging/IIO fixes from Greg KH:\n \"Here are some small staging/IIO driver fixes for 4.14-rc4\n\n  Most of these have been in my tree for a while due to travels, sorry\n  for the delay. They resolve a number of small issues reported by\n  people, mostly for the iio drivers. Nothing major in here, full\n  details are in the shortlog.\n\n  All have been linux-next for a few weeks with no reported issues\"\n\n* tag 'staging-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging: (23 commits)\n  staging: iio: ad7192: Fix - use the dedicated reset function avoiding dma from stack.\n  iio: core: Return error for failed read_reg\n  iio: ad7793: Fix the serial interface reset\n  iio: ad_sigma_delta: Implement a dedicated reset function\n  IIO: BME280: Updates to Humidity readings need ctrl_reg write!\n  iio: adc: mcp320x: Fix readout of negative voltages\n  iio: adc: mcp320x: Fix oops on module unload\n  iio: adc: stm32: fix bad error check on max_channels\n  iio: trigger: stm32-timer: fix a corner case to write preset\n  iio: trigger: stm32-timer: preset shouldn't be buffered\n  iio: adc: twl4030: Return an error if we can not enable the vusb3v1 regulator in 'twl4030_madc_probe()'\n  iio: adc: twl4030: Disable the vusb3v1 rugulator in the error handling path of 'twl4030_madc_probe()'\n  iio: adc: twl4030: Fix an error handling path in 'twl4030_madc_probe()'\n  staging: rtl8723bs: avoid null pointer dereference on pmlmepriv\n  staging: rtl8723bs: add missing range check on id\n  staging: vchiq_2835_arm: Fix NULL ptr dereference in free_pagelist\n  staging: speakup: fix speakup-r empty line lockup\n  staging: pi433: Move limit check to switch default to kill warning\n  staging: r8822be: fix null pointer dereferences with a null driver_adapter\n  staging: mt29f_spinand: Enable the read ECC before program the page\n  ... Merge tag 'driver-core-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fixes from Greg KH:\n \"Here are a few small fixes for 4.14-rc4.\n\n  The removal of DRIVER_ATTR() was almost completed by 4.14-rc1, but one\n  straggler made it in through some other tree (odds are, one of\n  mine...) So there's a simple removal of the last user, and then\n  finally the macro is removed from the tree.\n\n  There's a fix for old crazy udev instances that insist on reloading a\n  module when it is removed from the kernel due to the new uevents for\n  bind/unbind. This fixes the reported regression, hopefully some year\n  in the future we can drop the workaround, once users update to the\n  latest version, but I'm not holding my breath.\n\n  And then there's a build fix for a linker warning, and a buffer\n  overflow fix to match the PCI fixes you took through the PCI tree in\n  the same area.\n\n  All of these have been in linux-next for a few weeks while I've been\n  traveling, sorry for the delay\"\n\n* tag 'driver-core-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  driver core: remove DRIVER_ATTR\n  fpga: altera-cvp: remove DRIVER_ATTR() usage\n  driver core: platform: Don't read past the end of \"driver_override\" buffer\n  base: arch_topology: fix section mismatch build warnings\n  driver core: suppress sending MODALIAS in UNBIND uevents Merge tag 'char-misc-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc fixes from Greg KH:\n \"Here are a handful of char/misc driver fixes for 4.14-rc4.\n\n  Nothing major, some binder fixups, hyperv fixes, and other tiny\n  things.\n\n  All of these have been sitting in my tree for way too long, sorry for\n  the delay in getting them to you. All have been in linux-next for a\n  few weeks, and despite some people's feeling about if linux-next\n  actually tests things, I think it's a good \"soak test\" for patches\"\n\n* tag 'char-misc-4.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  Drivers: hv: fcopy: restore correct transfer length\n  vmbus: don't acquire the mutex in vmbus_hvsock_device_unregister()\n  intel_th: pci: Add Lewisburg PCH support\n  intel_th: pci: Add Cedar Fork PCH support\n  stm class: Fix a use-after-free\n  nvmem: add missing of_node_put() in of_nvmem_cell_get()\n  nvmem: core: return EFBIG on out-of-range write\n  auxdisplay: charlcd: properly restore atomic counter on error path\n  binder: fix memory corruption in binder_transaction binder\n  binder: fix an ret value override\n  android: binder: fix type mismatch warning Linux 4.14-rc3 Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"This contains the following fixes and improvements:\n\n   - Avoid dereferencing an unprotected VMA pointer in the fault signal\n     generation code\n\n   - Fix inline asm call constraints for GCC 4.4\n\n   - Use existing register variable to retrieve the stack pointer\n     instead of forcing the compiler to create another indirect access\n     which results in excessive extra 'mov %rsp, %<dst>' instructions\n\n   - Disable branch profiling for the memory encryption code to prevent\n     an early boot crash\n\n   - Fix a sparse warning caused by casting the __user annotation in\n     __get_user_asm_u64() away\n\n   - Fix an off by one error in the loop termination of the error patch\n     in the x86 sysfs init code\n\n   - Add missing CPU IDs to various Intel specific drivers to enable the\n     functionality on recent hardware\n\n   - More (init) constification in the numachip code\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/asm: Use register variable to get stack pointer value\n  x86/mm: Disable branch profiling in mem_encrypt.c\n  x86/asm: Fix inline asm call constraints for GCC 4.4\n  perf/x86/intel/uncore: Correct num_boxes for IIO and IRP\n  perf/x86/intel/rapl: Add missing CPU IDs\n  perf/x86/msr: Add missing CPU IDs\n  perf/x86/intel/cstate: Add missing CPU IDs\n  x86: Don't cast away the __user in __get_user_asm_u64()\n  x86/sysfs: Fix off-by-one error in loop termination\n  x86/mm: Fix fault error path using unsafe vma pointer\n  x86/numachip: Add const and __initconst to numachip2_clockevent Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"This adds a new timer wheel function which is required for the\n  conversion of the timer callback function from the 'unsigned long\n  data' argument to 'struct timer_list *timer'. This conversion has two\n  benefits:\n\n   1) It makes struct timer_list smaller\n\n   2) Many callers hand in a pointer to the timer or to the structure\n      containing the timer, which happens via type casting both at setup\n      and in the callback. This change gets rid of the typecasts.\n\n  Once the conversion is complete, which is planned for 4.15, the old\n  setup function and the intermediate typecast in the new setup function\n  go away along with the data field in struct timer_list.\n\n  Merging this now into mainline allows a smooth queueing of the actual\n  conversion in the affected maintainer trees without creating\n  dependencies\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  um/time: Fixup namespace collision\n  timer: Prepare to change timer callback argument type Merge branch 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull smp/hotplug fixes from Thomas Gleixner:\n \"This addresses the fallout of the new lockdep mechanism which covers\n  completions in the CPU hotplug code.\n\n  The lockdep splats are false positives, but there is no way to\n  annotate that reliably. The solution is to split the completions for\n  CPU up and down, which requires some reshuffling of the failure\n  rollback handling as well\"\n\n* 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  smp/hotplug: Hotplug state fail injection\n  smp/hotplug: Differentiate the AP completion between up and down\n  smp/hotplug: Differentiate the AP-work lockdep class between up and down\n  smp/hotplug: Callback vs state-machine consistency\n  smp/hotplug: Rewrite AP state machine core\n  smp/hotplug: Allow external multi-instance rollback\n  smp/hotplug: Add state diagram Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Thomas Gleixner:\n \"The scheduler pull request comes with the following updates:\n\n   - Prevent a divide by zero issue by validating the input value of\n     sysctl_sched_time_avg\n\n   - Make task state printing consistent all over the place and have\n     explicit state characters for IDLE and PARKED so they wont be\n     displayed as 'D' state which confuses tools\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/sysctl: Check user input value of sysctl_sched_time_avg\n  sched/debug: Add explicit TASK_PARKED printing\n  sched/debug: Ignore TASK_IDLE for SysRq-W\n  sched/debug: Add explicit TASK_IDLE printing\n  sched/tracing: Use common task-state helpers\n  sched/tracing: Fix trace_sched_switch task-state printing\n  sched/debug: Remove unused variable\n  sched/debug: Convert TASK_state to hex\n  sched/debug: Implement consistent task-state printing Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n\n - Prevent a division by zero in the perf aux buffer handling\n\n - Sync kernel headers with perf tool headers\n\n - Fix a build failure in the syscalltbl code\n\n - Make the debug messages of perf report --call-graph work correctly\n\n - Make sure that all required perf files are in the MANIFEST for\n   container builds\n\n - Fix the atrr.exclude kernel handling so it respects the\n   perf_event_paranoid and the user permissions\n\n - Make perf test on s390x work correctly\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/aux: Only update ->aux_wakeup in non-overwrite mode\n  perf test: Fix vmlinux failure on s390x part 2\n  perf test: Fix vmlinux failure on s390x\n  perf tools: Fix syscalltbl build failure\n  perf report: Fix debug messages with --call-graph option\n  perf evsel: Fix attr.exclude_kernel setting for default cycles:p\n  tools include: Sync kernel ABI headers with tooling headers\n  perf tools: Get all of tools/{arch,include}/ in the MANIFEST Merge branch 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull  locking fixes from Thomas Gleixner:\n \"Two fixes for locking:\n\n   - Plug a hole the pi_stat->owner serialization which was changed\n     recently and failed to fixup two usage sites.\n\n   - Prevent reordering of the rwsem_has_spinner() check vs the\n     decrement of rwsem count in up_write() which causes a missed\n     wakeup\"\n\n* 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/rwsem-xadd: Fix missed wakeup due to reordering of load\n  futex: Fix pi_state->owner serialization Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n\n - Add a missing NULL pointer check in free_irq()\n\n - Fix a memory leak/memory corruption in the generic irq chip\n\n - Add missing rcu annotations for radix tree access\n\n - Use ffs instead of fls when extracting data from a chip register in\n   the MIPS GIC irq driver\n\n - Fix the unmasking of IPI interrupts in the MIPS GIC driver so they\n   end up at the target CPU and not at CPU0\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irq/generic-chip: Don't replace domain's name\n  irqdomain: Add __rcu annotations to radix tree accessors\n  irqchip/mips-gic: Use effective affinity to unmask\n  irqchip/mips-gic: Fix shifts to extract register fields\n  genirq: Check __free_irq() return value for NULL Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull objtool fixes from Thomas Gleixner:\n \"Two small fixes for objtool:\n\n   - Support frame pointer setup via 'lea (%rsp), %rbp' which was not\n     yet supported and caused build warnings\n\n   - Disable unreacahble warnings for GCC4.4 and older to avoid false\n     positives caused by the compiler itself\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  objtool: Support unoptimized frame pointer setup\n  objtool: Skip unreachable warnings for GCC 4.4 and older Merge tag 'mtd/fixes-for-4.14-rc3' of git://git.infradead.org/linux-mtd\n\nPull mtd fixes from Boris Brezillon:\n\n - Fix partition alignment check in mtdcore.c\n\n - Fix a buffer overflow in the Atmel NAND driver\n\n* tag 'mtd/fixes-for-4.14-rc3' of git://git.infradead.org/linux-mtd:\n  mtd: nand: atmel: fix buffer overflow in atmel_pmecc_user\n  mtd: Fix partition alignment check on multi-erasesize devices Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Eight mostly minor fixes for recently discovered issues in drivers\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: ILLEGAL REQUEST + ASC==27 => target failure\n  scsi: aacraid: Add a small delay after IOP reset\n  scsi: scsi_transport_fc: Also check for NOTPRESENT in fc_remote_port_add()\n  scsi: scsi_transport_fc: set scsi_target_id upon rescan\n  scsi: scsi_transport_iscsi: fix the issue that iscsi_if_rx doesn't parse nlmsg properly\n  scsi: aacraid: error: testing array offset 'bus' after use\n  scsi: lpfc: Don't return internal MBXERR_ERROR code from probe function\n  scsi: aacraid: Fix 2T+ drives on SmartIOC-2000 Merge tag 'platform-drivers-x86-v4.14-2' of git://git.infradead.org/linux-platform-drivers-x86\n\nPull x86 platform drivers fix from Darren Hart:\n \"Newly discovered species of fujitsu laptops break some assumptions\n  about ACPI device pairings.\n\n  fujitsu-laptop: Don't oops when FUJ02E3 is not present\"\n\n* tag 'platform-drivers-x86-v4.14-2' of git://git.infradead.org/linux-platform-drivers-x86:\n  platform/x86: fujitsu-laptop: Don't oops when FUJ02E3 is not presnt Merge tag 'led_fixes-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/j.anaszewski/linux-leds\n\nPull LED fixes from Jacek Anaszewski:\n \"Four fixes for the as3645a LED flash controller and one update to\n  MAINTAINERS\"\n\n* tag 'led_fixes-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/j.anaszewski/linux-leds:\n  MAINTAINERS: Add entry for MediaTek PMIC LED driver\n  as3645a: Unregister indicator LED on device unbind\n  as3645a: Use integer numbers for parsing LEDs\n  dt: bindings: as3645a: Use LED number to refer to LEDs\n  as3645a: Use ams,input-max-microamp as documented in DT bindings Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull waitid fix from Al Viro:\n \"Fix infoleak in waitid()\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix infoleak in waitid(2) Merge branch 'for-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fixes from David Sterba:\n \"We've collected a bunch of isolated fixes, for crashes, user-visible\n  behaviour or missing bits from other subsystem cleanups from the past.\n\n  The overall number is not small but I was not able to make it\n  significantly smaller. Most of the patches are supposed to go to\n  stable\"\n\n* 'for-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  btrfs: log csums for all modified extents\n  Btrfs: fix unexpected result when dio reading corrupted blocks\n  btrfs: Report error on removing qgroup if del_qgroup_item fails\n  Btrfs: skip checksum when reading compressed data if some IO have failed\n  Btrfs: fix kernel oops while reading compressed data\n  Btrfs: use btrfs_op instead of bio_op in __btrfs_map_block\n  Btrfs: do not backup tree roots when fsync\n  btrfs: remove BTRFS_FS_QUOTA_DISABLING flag\n  btrfs: propagate error to btrfs_cmp_data_prepare caller\n  btrfs: prevent to set invalid default subvolid\n  Btrfs: send: fix error number for unknown inode types\n  btrfs: fix NULL pointer dereference from free_reloc_roots()\n  btrfs: finish ordered extent cleaning if no progress is found\n  btrfs: clear ordered flag on cleaning up ordered extents\n  Btrfs: fix incorrect {node,sector}size endianness from BTRFS_IOC_FS_INFO\n  Btrfs: do not reset bio->bi_ops while writing bio\n  Btrfs: use the new helper wbc_to_write_flags Merge tag 'md/4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD fixes from Shaohua Li:\n \"A few fixes for MD. Mainly fix a problem introduced in 4.13, which we\n  retry bio for some code paths but not all in some situations\"\n\n* tag 'md/4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  md/raid5: cap worker count\n  dm-raid: fix a race condition in request handling\n  md: fix a race condition for flush request handling\n  md: separate request handling Merge tag 'pci-v4.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n\n - fix CONFIG_PCI=n build error (introduced in v4.14-rc1) (Geert\n   Uytterhoeven)\n\n - fix a race in sysfs driver_override store/show (Nicolai Stange)\n\n* tag 'pci-v4.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: Fix race condition with driver_override\n  PCI: Add dummy pci_acs_enabled() for CONFIG_PCI=n build Merge tag 'drm-fixes-for-v4.14-rc3' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Regular fixes pull, some amdkfd, amdgpu, etnaviv, sun4i, qxl, tegra\n  fixes.\n\n  I've got an outstanding pull for i915 but it wasn't on an rc2 base so\n  I wanted to ship these out first, I might get to it before rc3 or I\n  might not\"\n\n* tag 'drm-fixes-for-v4.14-rc3' of git://people.freedesktop.org/~airlied/linux:\n  drm/tegra: trace: Fix path to include\n  qxl: fix framebuffer unpinning\n  drm/sun4i: cec: Enable back CEC-pin framework\n  drm/amdkfd: Print event limit messages only once per process\n  drm/amdkfd: Fix kernel-queue wrapping bugs\n  drm/amdkfd: Fix incorrect destroy_mqd parameter\n  drm/radeon: disable hard reset in hibernate for APUs\n  drm/amdgpu: revert tile table update for oland\n  etnaviv: fix gem object list corruption\n  etnaviv: fix submit error path\n  qxl: fix primary surface handling\n  drm/amdkfd: check for null dev to avoid a null pointer dereference Merge tag 'iommu-fixes-v4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fixes from Joerg Roedel:\n\n - A comment fix for 'struct iommu_ops'\n\n - Format string fixes for AMD IOMMU, unfortunatly I missed that during\n   review.\n\n - Limit mediatek physical addresses to 32 bit for v7s to fix a warning\n   triggered in io-page-table code.\n\n - Fix dma-sync in io-pgtable-arm-v7s code\n\n* tag 'iommu-fixes-v4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu: Fix comment for iommu_ops.map_sg\n  iommu/amd: pr_err() strings should end with newlines\n  iommu/mediatek: Limit the physical address in 32bit for v7s\n  iommu/io-pgtable-arm-v7s: Need dma-sync while there is no QUIRK_NO_DMA Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n\n - SPsel register initialisation on reset as the architecture defines\n   its state as unknown\n\n - Use READ_ONCE when dereferencing pmd_t pointers to avoid race\n   conditions in page_vma_mapped_walk() (or fast GUP) with concurrent\n   modifications of the page table\n\n - Avoid invoking the mm fault handling code for kernel addresses (check\n   against TASK_SIZE) which would otherwise result in calling\n   might_sleep() in atomic context\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: fault: Route pte translation faults via do_translation_fault\n  arm64: mm: Use READ_ONCE when dereferencing pointer to pte table\n  arm64: Make sure SPsel is always set Merge tag 'for-linus-4.14c-rc3-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixes from Juergen Gross:\n\n - avoid a warning when compiling with clang\n\n - consider read-only bits in xen-pciback when writing to a BAR\n\n - fix a boot crash of pv-domains\n\n* tag 'for-linus-4.14c-rc3-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/mmu: Call xen_cleanhighmap() with 4MB aligned for page tables mapping\n  xen-pciback: relax BAR sizing write value check\n  x86/xen: clean up clang build warning Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm fixes from Paolo Bonzini:\n \"Mixed bugfixes. Perhaps the most interesting one is a latent bug that\n  was finally triggered by PCID support\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  kvm/x86: Handle async PF in RCU read-side critical sections\n  KVM: nVMX: Fix nested #PF intends to break L1's vmlauch/vmresume\n  KVM: VMX: use cmpxchg64\n  KVM: VMX: simplify and fix vmx_vcpu_pi_load\n  KVM: VMX: avoid double list add with VT-d posted interrupts\n  KVM: VMX: extract __pi_post_block\n  KVM: PPC: Book3S HV: Check for updated HDSISR on P9 HDSI exception\n  KVM: nVMX: fix HOST_CR3/HOST_CR4 cache Merge branch 'fixes-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull keys fixes from James Morris:\n \"Notable here is a rewrite of big_key crypto by Jason Donenfeld to\n  address some issues in the original code.\n\n  From Jason's commit log:\n   \"This started out as just replacing the use of crypto/rng with\n    get_random_bytes_wait, so that we wouldn't use bad randomness at\n    boot time. But, upon looking further, it appears that there were\n    even deeper underlying cryptographic problems, and that this seems\n    to have been committed with very little crypto review. So, I rewrote\n    the whole thing, trying to keep to the conventions introduced by the\n    previous author, to fix these cryptographic flaws.\"\n\n  There has been positive review of the new code by Eric Biggers and\n  Herbert Xu, and it passes basic testing via the keyutils test suite.\n  Eric also manually tested it.\n\n  Generally speaking, we likely need to improve the amount of crypto\n  review for kernel crypto users including keys (I'll post a note\n  separately to ksummit-discuss)\"\n\n* 'fixes-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  security/keys: rewrite all of big_key crypto\n  security/keys: properly zero out sensitive key material in big_key\n  KEYS: use kmemdup() in request_key_auth_new()\n  KEYS: restrict /proc/keys by credentials at open time\n  KEYS: reset parent each time before searching key_user_tree\n  KEYS: prevent KEYCTL_READ on negative key\n  KEYS: prevent creating a different user's keyrings\n  KEYS: fix writing past end of user-supplied buffer in keyring_read()\n  KEYS: fix key refcount leak in keyctl_read_key()\n  KEYS: fix key refcount leak in keyctl_assume_authority()\n  KEYS: don't revoke uninstantiated key in request_key_auth_new()\n  KEYS: fix cred refcount leak in request_key_auth_new() Merge tag 'acpi-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fix from Rafael Wysocki:\n \"This fixes an APEI problem that may cause a reported error to be\n  missed due to a race condition\"\n\n* tag 'acpi-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / APEI: clear error status before acknowledging the error Merge tag 'pm-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These fix a deadlock in the operating performance points (OPP)\n  framework introduced during the 4.11 cycle, more issues with duplicate\n  device objects for cpufreq-dt and cpufreq documentation.\n\n  Specifics:\n\n   - Fix a deadlock in the operating performance points (OPP) framework\n     caused by a notifier callback taking a lock that's already held by\n     its caller (Viresh Kumar).\n\n   - Prevent the ti-cpufreq and cpufreq-dt-platdev drivers from\n     attempting to register conflicting device objects which triggers a\n     warning from sysfs (Suniel Mahesh).\n\n   - Drop a stale reference to a piece of intel_pstate documentation\n     that's not in the tree any more (Rafael Wysocki)\"\n\n* tag 'pm-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  cpufreq: docs: Drop intel-pstate.txt from index.txt\n  cpufreq: dt: Fix sysfs duplicate filename creation for platform-device\n  PM / OPP: Call notifier without holding opp_table->lock Merge tag 'xfs-4.14-fixes-2' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n\n - fix various problems with the copy-on-write extent maps getting freed\n   at the wrong time\n\n - fix printk format specifier problems\n\n - report zeroing operation outcomes instead of dropping them on the\n   floor\n\n - fix some crashes when dio operations partially fail\n\n - fix a race condition between unwritten extent conversion & dio read\n\n - fix some incorrect tests in the inode log item processing\n\n - correct the delayed allocation space reservations on rmap filesystems\n\n - fix some problems checking for dax support\n\n* tag 'xfs-4.14-fixes-2' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: revert \"xfs: factor rmap btree size into the indlen calculations\"\n  xfs: Capture state of the right inode in xfs_iflush_done\n  xfs: perag initialization should only touch m_ag_max_usable for AG 0\n  xfs: update i_size after unwritten conversion in dio completion\n  iomap_dio_rw: Allocate AIO completion queue before submitting dio\n  xfs: validate bdev support for DAX inode flag\n  xfs: remove redundant re-initialization of total_nr_pages\n  xfs: Output warning message when discard option was enabled even though the device does not support discard\n  xfs: report zeroed or not correctly in xfs_zero_range()\n  xfs: kill meaningless variable 'zero'\n  fs/xfs: Use %pS printk format for direct addresses\n  xfs: evict CoW fork extents when performing finsert/fcollapse\n  xfs: don't unconditionally clear the reflink flag on zero-block files Revert \"Bluetooth: Add option for disabling legacy ioctl interfaces\"\n\nThis reverts commit dbbccdc4ced015cdd4051299bd87fbe0254ad351.\n\nIt turns out that the \"legacy\" users aren't so legacy at all, and that\nturning off the legacy ioctl will break the current Qt bluetooth stack\nfor bluetooth LE devices that were released just a couple of months ago.\n\nSo it's simply not true that this was a legacy interface that hasn't\nbeen needed and is only limited to old legacy BT devices.  Because I\nactually read Kconfig help messages, and actively try to turn off\nfeatures that I don't need, I turned the option off.\n\nThen I spent _way_ too much time debugging BLE issues until I realized\nthat it wasn't the Qt and subsurface development that had broken one of\nmy dive computer BLE downloads, but simply my broken kernel config.\n\nMaybe in a decade it will be true that this is a legacy interface.  And\nmaybe with a better help-text and correct dependencies, this kind of\nlegacy removal might be acceptable.  But as things are right now both\nthe commit message and the Kconfig help text were misleading, and the\nKconfig option had the wrong dependenencies.\n\nThere's no reason to keep that broken Kconfig option in the tree.\n\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Johan Hedberg <johan.hedberg@intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n \"Second -rc update for 4.14.\n\n  Both Mellanox and Intel had a series of -rc fixes that landed this\n  week. The Mellanox bunch is spread throughout the stack and not just\n  in their driver, where as the Intel bunch was mostly in the hfi1\n  driver. And, several of the fixes in the hfi1 driver were more than\n  just simple 5 line fixes. As a result, the hfi1 driver fixes has a\n  sizable LOC count.\n\n  Everything else is as one would expect in an RC cycle in terms of LOC\n  count. One item that might jump out and make you think \"That's not an\n  rc item\" is the fix that corrects a typo. But, that change fixes a\n  typo in a user visible API that was just added in this merge window,\n  so if we fix it now, we can fix it. If we don't, the typo is in the\n  API forever. Another that might not appear to be a fix at first glance\n  is the Simplify mlx5_ib_cont_pages patch, but the simplification\n  allows them to fix a bug in the existing function whenever the length\n  of an SGE exceeded page size. We also had to revert one patch from the\n  merge window that was wrong.\n\n  Summary:\n\n   - a few core fixes\n   - a few ipoib fixes\n   - a few mlx5 fixes\n   - a 7-patch hfi1 related series\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:\n  IB/hfi1: Unsuccessful PCIe caps tuning should not fail driver load\n  IB/hfi1: On error, fix use after free during user context setup\n  Revert \"IB/ipoib: Update broadcast object if PKey value was changed in index 0\"\n  IB/hfi1: Return correct value in general interrupt handler\n  IB/hfi1: Check eeprom config partition validity\n  IB/hfi1: Only reset QSFP after link up and turn off AOC TX\n  IB/hfi1: Turn off AOC TX after offline substates\n  IB/mlx5: Fix NULL deference on mlx5_ib_update_xlt failure\n  IB/mlx5: Simplify mlx5_ib_cont_pages\n  IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev\n  IB/ipoib: Fix sysfs Pkey create<->remove possible deadlock\n  IB: Correct MR length field to be 64-bit\n  IB/core: Fix qp_sec use after free access\n  IB/core: Fix typo in the name of the tag-matching cap struct Merge tag 'seccomp-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull seccomp fix from Kees Cook:\n \"Fix refcounting bug in CRIU interface, noticed by Chris Salls (Oleg &\n  Tycho)\"\n\n* tag 'seccomp-v4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  seccomp: fix the usage of get/put_seccomp_filter() in seccomp_get_filter() Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull quota and isofs fixes from Jan Kara:\n \"Two quota fixes (fallout of the quota locking changes) and an isofs\n  build fix\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  quota: Fix quota corruption with generic/232 test\n  isofs: fix build regression\n  quota: add missing lock into __dquot_transfer() Merge tag 'linux-kselftest-4.14-rc3-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest\n\nPull kselftest fixes from Shuah Khan:\n \"This update consists of:\n\n   - fixes to several existing tests\n\n   - a test for regression introduced by b9470c27607b (\"inet: kill\n     smallest_size and smallest_port\")\n\n   - seccomp support for glibc 2.26 siginfo_t.h\n\n   - fixes to kselftest framework and tests to run make O=dir use-case\n\n   - fixes to silence unnecessary test output to de-clutter test results\"\n\n* tag 'linux-kselftest-4.14-rc3-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest: (28 commits)\n  selftests: timers: set-timer-lat: Fix hang when testing unsupported alarms\n  selftests: timers: set-timer-lat: fix hang when std out/err are redirected\n  selftests/memfd: correct run_tests.sh permission\n  selftests/seccomp: Support glibc 2.26 siginfo_t.h\n  selftests: futex: Makefile: fix for loops in targets to run silently\n  selftests: Makefile: fix for loops in targets to run silently\n  selftests: mqueue: Use full path to run tests from Makefile\n  selftests: futex: copy sub-dir test scripts for make O=dir run\n  selftests: lib.mk: copy test scripts and test files for make O=dir run\n  selftests: sync: kselftest and kselftest-clean fail for make O=dir case\n  selftests: sync: use TEST_CUSTOM_PROGS instead of TEST_PROGS\n  selftests: lib.mk: add TEST_CUSTOM_PROGS to allow custom test run/install\n  selftests: watchdog: fix to use TEST_GEN_PROGS and remove clean\n  selftests: lib.mk: fix test executable status check to use full path\n  selftests: Makefile: clear LDFLAGS for make O=dir use-case\n  selftests: lib.mk: kselftest and kselftest-clean fail for make O=dir case\n  Makefile: kselftest and kselftest-clean fail for make O=dir case\n  selftests/net: msg_zerocopy enable build with older kernel headers\n  selftests: actually run the various net selftests\n  selftest: add a reuseaddr test\n  ... Merge branch 'x86-fpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fpu fixes and cleanups from Ingo Molnar:\n \"This is _way_ more cleanups than fixes, but the bugs were subtle and\n  hard to hit, and the primary reason for them existing was the\n  unnecessary historical complexity of some of the x86/fpu interfaces.\n\n  The first bunch of commits clean up and simplify the xstate user copy\n  handling functions, in reaction to the collective head-scratching\n  about the xstate user-copy handling code that leads up to the fix for\n  this SkyLake xstate handling bug:\n\n     0852b374173b: x86/fpu: Add FPU state copying quirk to handle XRSTOR failure on Intel Skylake CPUs\n\n  The cleanups don't change any functionality, they just (hopefully)\n  make it all clearer, more consistent, more debuggable and more robust.\n\n  Note that most of the linecount increase comes from these commits,\n  where we better split the user/kernel copy logic by having more\n  variants, instead repeated fragile patterns of:\n\n               if (kbuf) {\n                       memcpy(kbuf + pos, data, copy);\n               } else {\n                       if (__copy_to_user(ubuf + pos, data, copy))\n                               return -EFAULT;\n               }\n\n  The next bunch of commits simplify the FPU state-machine to get rid of\n  old lazy-FPU idiosyncrasies - a defensive simplification to make all\n  the code easier to review and fix. No change in functionality.\n\n  Then there's a couple of additional debugging tweaks: static checker\n  warning fix and move an FPU related warning to under WARN_ON_FPU(),\n  followed by another bunch of commits that represent a finegrained\n  split-up of the fixes from Eric Biggers to handle weird xstate bits\n  properly.\n\n  I did this finegrained split-up because some of these fixes also\n  impact the ABI for weird xstate handling, for which we'd like to have\n  good bisection results, should they cause any problems. (We also had\n  one regression with the more monolithic fixes, so splitting it all up\n  sounded prudent for robustness reasons as well.)\n\n  About the whole series: the commits up to 03eaec81ac09 have been in\n  -next for months - but I've recently rebased them to remove a state\n  machine clean-up commit that was objected to, and to make it more\n  bisectable - so technically it's a new, rebased tree.\n\n  Robustness history: this series had some regressions along the way,\n  and all reported regressions have been fixed. All but one of the\n  regressions manifested itself as easy to report warnings. The previous\n  version of this latest series was also in linux-next, with one\n  (warning-only) regression reported which is fixed in the latest\n  version.\n\n  Barring last minute brown paper bag bugs (and the commits are now\n  older by a day which I'd hope helps paperbag reduction), I'm\n  reasonably confident about its general robustness.\n\n  Famous last words ...\"\n\n* 'x86-fpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (42 commits)\n  x86/fpu: Use using_compacted_format() instead of open coded X86_FEATURE_XSAVES\n  x86/fpu: Use validate_xstate_header() to validate the xstate_header in copy_user_to_xstate()\n  x86/fpu: Eliminate the 'xfeatures' local variable in copy_user_to_xstate()\n  x86/fpu: Copy the full header in copy_user_to_xstate()\n  x86/fpu: Use validate_xstate_header() to validate the xstate_header in copy_kernel_to_xstate()\n  x86/fpu: Eliminate the 'xfeatures' local variable in copy_kernel_to_xstate()\n  x86/fpu: Copy the full state_header in copy_kernel_to_xstate()\n  x86/fpu: Use validate_xstate_header() to validate the xstate_header in __fpu__restore_sig()\n  x86/fpu: Use validate_xstate_header() to validate the xstate_header in xstateregs_set()\n  x86/fpu: Introduce validate_xstate_header()\n  x86/fpu: Rename fpu__activate_fpstate_read/write() to fpu__prepare_[read|write]()\n  x86/fpu: Rename fpu__activate_curr() to fpu__initialize()\n  x86/fpu: Simplify and speed up fpu__copy()\n  x86/fpu: Fix stale comments about lazy FPU logic\n  x86/fpu: Rename fpu::fpstate_active to fpu::initialized\n  x86/fpu: Remove fpu__current_fpstate_write_begin/end()\n  x86/fpu: Fix fpu__activate_fpstate_read() and update comments\n  x86/fpu: Reinitialize FPU registers if restoring FPU state fails\n  x86/fpu: Don't let userspace set bogus xcomp_bv\n  x86/fpu: Turn WARN_ON() in context switch into WARN_ON_FPU()\n  ... Merge tag 'mmc-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n\n  - sdhci-pci: Fix voltage switch for some Intel host controllers\n\n  - tmio: remove broken and noisy debug macro\n\n* tag 'mmc-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: sdhci-pci: Fix voltage switch for some Intel host controllers\n  mmc: tmio: remove broken and noisy debug macro Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull compat fix from Al Viro:\n \"I really wish gcc warned about conversions from pointer to function\n  into void *...\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix a typo in put_compat_shm_info() Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n\n - Two sets of NVMe pull requests from Christoph:\n      - Fixes for the Fibre Channel host/target to fix spec compliance\n      - Allow a zero keep alive timeout\n      - Make the debug printk for broken SGLs work better\n      - Fix queue zeroing during initialization\n      - Set of RDMA and FC fixes\n      - Target div-by-zero fix\n\n - bsg double-free fix.\n\n - ndb unknown ioctl fix from Josef.\n\n - Buffered vs O_DIRECT page cache inconsistency fix. Has been floating\n   around for a long time, well reviewed. From Lukas.\n\n - brd overflow fix from Mikulas.\n\n - Fix for a loop regression in this merge window, where using a union\n   for two members of the loop_cmd turned out to be a really bad idea.\n   From Omar.\n\n - Fix for an iostat regression fix in this series, using the wrong API\n   to get at the block queue. From Shaohua.\n\n - Fix for a potential blktrace delection deadlock. From Waiman.\n\n* 'for-linus' of git://git.kernel.dk/linux-block: (30 commits)\n  nvme-fcloop: fix port deletes and callbacks\n  nvmet-fc: sync header templates with comments\n  nvmet-fc: ensure target queue id within range.\n  nvmet-fc: on port remove call put outside lock\n  nvme-rdma: don't fully stop the controller in error recovery\n  nvme-rdma: give up reconnect if state change fails\n  nvme-core: Use nvme_wq to queue async events and fw activation\n  nvme: fix sqhd reference when admin queue connect fails\n  block: fix a crash caused by wrong API\n  fs: Fix page cache inconsistency when mixing buffered and AIO DIO\n  nvmet: implement valid sqhd values in completions\n  nvme-fabrics: Allow 0 as KATO value\n  nvme: allow timed-out ios to retry\n  nvme: stop aer posting if controller state not live\n  nvme-pci: Print invalid SGL only once\n  nvme-pci: initialize queue memory before interrupts\n  nvmet-fc: fix failing max io queue connections\n  nvme-fc: use transport-specific sgl format\n  nvme: add transport SGL definitions\n  nvme.h: remove FC transport-specific error values\n  ... Merge tag 'gfs2-for-linus-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2\n\nPull gfs2 fix from Bob Peterson:\n \"GFS2: Fix an old regression in GFS2's debugfs interface\n\n This fixes a regression introduced by commit 88ffbf3e037e (\"GFS2: Use\n resizable hash table for glocks\"). The regression caused the glock dump\n in debugfs to not report all the glocks, which makes debugging\n extremely difficult\"\n\n* tag 'gfs2-for-linus-4.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2:\n  gfs2: Fix debugfs glocks dump Merge tag 'microblaze-4.14-rc3' of git://git.monstr.eu/linux-2.6-microblaze\n\nPull Microblaze fixes from Michal Simek:\n\n - Kbuild fix\n\n - use vma_pages\n\n - setup default little endians\n\n* tag 'microblaze-4.14-rc3' of git://git.monstr.eu/linux-2.6-microblaze:\n  arch: change default endian for microblaze\n  microblaze: Cocci spatch \"vma_pages\"\n  microblaze: Add missing kvm_para.h to Kbuild Merge tag 'trace-v4.14-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"Stack tracing and RCU has been having issues with each other and\n  lockdep has been pointing out constant problems.\n\n  The changes have been going into the stack tracer, but it has been\n  discovered that the problem isn't with the stack tracer itself, but it\n  is with calling save_stack_trace() from within the internals of RCU.\n\n  The stack tracer is the one that can trigger the issue the easiest,\n  but examining the problem further, it could also happen from a WARN()\n  in the wrong place, or even if an NMI happened in this area and it did\n  an rcu_read_lock().\n\n  The critical area is where RCU is not watching. Which can happen while\n  going to and from idle, or bringing up or taking down a CPU.\n\n  The final fix was to put the protection in kernel_text_address() as it\n  is the one that requires RCU to be watching while doing the stack\n  trace.\n\n  To make this work properly, Paul had to allow rcu_irq_enter() happen\n  after rcu_nmi_enter(). This should have been done anyway, since an NMI\n  can page fault (reading vmalloc area), and a page fault triggers\n  rcu_irq_enter().\n\n  One patch is just a consolidation of code so that the fix only needed\n  to be done in one location\"\n\n* tag 'trace-v4.14-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Remove RCU work arounds from stack tracer\n  extable: Enable RCU if it is not watching in kernel_text_address()\n  extable: Consolidate *kernel_text_address() functions\n  rcu: Allow for page faults in NMI handlers Linux 4.14-rc2 Merge tag 'devicetree-fixes-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull DeviceTree fixes from Rob Herring:\n\n - fix build for !OF providing empty of_find_device_by_node\n\n - fix Abracon vendor prefix\n\n - sync dtx_diff include paths (again)\n\n - a stm32h7 clock binding doc fix\n\n* tag 'devicetree-fixes-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  dt-bindings: clk: stm32h7: fix clock-cell size\n  scripts/dtc: dtx_diff - 2nd update of include dts paths to match build\n  dt-bindings: fix vendor prefix for Abracon\n  of: provide inline helper for of_find_device_by_node Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"Another round of CR3/PCID related fixes (I think this addresses all\n  but one of the known problems with PCID support), an objtool fix plus\n  a Clang fix that (finally) solves all Clang quirks to build a bootable\n  x86 kernel as-is\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/asm: Fix inline asm call constraints for Clang\n  objtool: Handle another GCC stack pointer adjustment bug\n  x86/mm/32: Load a sane CR3 before cpu_init() on secondary CPUs\n  x86/mm/32: Move setup_clear_cpu_cap(X86_FEATURE_PCID) earlier\n  x86/mm/64: Stop using CR3.PCID == 0 in ASID-aware code\n  x86/mm: Factor out CR3-building code Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Ingo Molnar:\n \"A clocksource driver section mismatch fix\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource/integrator: Fix section mismatch warning Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Ingo Molnar:\n \"Three irqchip driver fixes, and an affinity mask helper function bug\n  fix affecting x86\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  Revert \"genirq: Restrict effective affinity to interrupts actually using it\"\n  irqchip.mips-gic: Fix shared interrupt mask writes\n  irqchip/gic-v4: Fix building with ancient gcc\n  irqchip/gic-v3: Iterate over possible CPUs by for_each_possible_cpu() Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull address-limit checking fixes from Ingo Molnar:\n \"This fixes a number of bugs in the address-limit (USER_DS) checks that\n  got introduced in the merge window, (mostly) affecting the ARM and\n  ARM64 platforms\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  arm64/syscalls: Move address limit check in loop\n  arm/syscalls: Optimize address limit check\n  Revert \"arm/syscalls: Check address limit on user-mode return\"\n  syscalls: Use CHECK_DATA_CORRUPTION for addr_limit_user_check Merge branch 'next-general' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull misc security layer update from James Morris:\n \"This is the remaining 'general' change in the security tree for v4.14,\n  following the direct merging of SELinux (+ TOMOYO), AppArmor, and\n  seccomp.\n\n  That's everything now for the security tree except IMA, which will\n  follow shortly (I've been traveling for the past week with patchy\n  internet)\"\n\n* 'next-general' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  security: fix description of values returned by cap_inode_need_killpriv Merge branch 'next-tpm' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull TPM updates from James Morris:\n \"Here are the TPM updates from Jarkko for v4.14, which I've placed in\n  their own branch (next-tpm). I ended up cherry-picking them as other\n  changes had been made in Jarkko's branch after he sent me his original\n  pull request.\n\n  I plan on maintaining a separate branch for TPM (and other security\n  subsystems) from now on.\n\n  From Jarkko: 'Not much this time except a few fixes'\"\n\n* 'next-tpm' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  tpm: ibmvtpm: simplify crq initialization and document crq format\n  tpm: replace msleep() with  usleep_range() in TPM 1.2/2.0 generic drivers\n  Documentation: tpm: add powered-while-suspended binding documentation\n  tpm: tpm_crb: constify acpi_device_id.\n  tpm: vtpm: constify vio_device_id Merge branch 'parisc-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n\n - Unbreak parisc bootloader by avoiding a gcc-7 optimization to convert\n   multiple byte-accesses into one word-access.\n\n - Add missing HWPOISON page fault handler code. I completely missed\n   that when I added HWPOISON support during this merge window and it\n   only showed up now with the madvise07 LTP test case.\n\n - Fix backtrace unwinding to stop when stack start has been reached.\n\n - Issue warning if initrd has been loaded into memory regions with\n   broken RAM modules.\n\n - Fix HPMC handler (parisc hardware fault handler) to comply with\n   architecture specification.\n\n - Avoid compiler warnings about too large frame sizes.\n\n - Minor init-section fixes.\n\n* 'parisc-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Unbreak bootloader due to gcc-7 optimizations\n  parisc: Reintroduce option to gzip-compress the kernel\n  parisc: Add HWPOISON page fault handler code\n  parisc: Move init_per_cpu() into init section\n  parisc: Check if initrd was loaded into broken RAM\n  parisc: Add PDCE_CHECK instruction to HPMC handler\n  parisc: Add wrapper for pdc_instr() firmware function\n  parisc: Move start_parisc() into init section\n  parisc: Stop unwinding at start of stack\n  parisc: Fix too large frame size warnings Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n\n - Smattering of miscellanous fixes\n\n - A five patch series for i40iw that had a patch (5/5) that was larger\n   than I would like, but I took it because it's needed for large scale\n   users\n\n - An 8 patch series for bnxt_re that landed right as I was leaving on\n   PTO and so had to wait until now...they are all appropriate fixes for\n   -rc IMO\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma: (22 commits)\n  bnxt_re: Don't issue cmd to delete GID for QP1 GID entry before the QP is destroyed\n  bnxt_re: Fix memory leak in FRMR path\n  bnxt_re: Remove RTNL lock dependency in bnxt_re_query_port\n  bnxt_re: Fix race between the netdev register and unregister events\n  bnxt_re: Free up devices in module_exit path\n  bnxt_re: Fix compare and swap atomic operands\n  bnxt_re: Stop issuing further cmds to FW once a cmd times out\n  bnxt_re: Fix update of qplib_qp.mtu when modified\n  i40iw: Add support for port reuse on active side connections\n  i40iw: Add missing VLAN priority\n  i40iw: Call i40iw_cm_disconn on modify QP to disconnect\n  i40iw: Prevent multiple netdev event notifier registrations\n  i40iw: Fail open if there are no available MSI-X vectors\n  RDMA/vmw_pvrdma: Fix reporting correct opcodes for completion\n  IB/bnxt_re: Fix frame stack compilation warning\n  IB/mlx5: fix debugfs cleanup\n  IB/ocrdma: fix incorrect fall-through on switch statement\n  IB/ipoib: Suppress the retry related completion errors\n  iw_cxgb4: remove the stid on listen create failure\n  iw_cxgb4: drop listen destroy replies if no ep found\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix NAPI poll list corruption in enic driver, from Christian\n    Lamparter.\n\n 2) Fix route use after free, from Eric Dumazet.\n\n 3) Fix regression in reuseaddr handling, from Josef Bacik.\n\n 4) Assert the size of control messages in compat handling since we copy\n    it in from userspace twice. From Meng Xu.\n\n 5) SMC layer bug fixes (missing RCU locking, bad refcounting, etc.)\n    from Ursula Braun.\n\n 6) Fix races in AF_PACKET fanout handling, from Willem de Bruijn.\n\n 7) Don't use ARRAY_SIZE on spinlock array which might have zero\n    entries, from Geert Uytterhoeven.\n\n 8) Fix miscomputation of checksum in ipv6 udp code, from Subash Abhinov\n    Kasiviswanathan.\n\n 9) Push the ipv6 header properly in ipv6 GRE tunnel driver, from Xin\n    Long.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (75 commits)\n  inet: fix improper empty comparison\n  net: use inet6_rcv_saddr to compare sockets\n  net: set tb->fast_sk_family\n  net: orphan frags on stand-alone ptype in dev_queue_xmit_nit\n  MAINTAINERS: update git tree locations for ieee802154 subsystem\n  net: prevent dst uses after free\n  net: phy: Fix truncation of large IRQ numbers in phy_attached_print()\n  net/smc: no close wait in case of process shut down\n  net/smc: introduce a delay\n  net/smc: terminate link group if out-of-sync is received\n  net/smc: longer delay for client link group removal\n  net/smc: adapt send request completion notification\n  net/smc: adjust net_device refcount\n  net/smc: take RCU read lock for routing cache lookup\n  net/smc: add receive timeout check\n  net/smc: add missing dev_put\n  net: stmmac: Cocci spatch \"of_table\"\n  lan78xx: Use default values loaded from EEPROM/OTP after reset\n  lan78xx: Allow EEPROM write for less than MAX_EEPROM_SIZE\n  lan78xx: Fix for eeprom read/write when device auto suspend\n  ... Merge tag 'apparmor-pr-2017-09-22' of git://git.kernel.org/pub/scm/linux/kernel/git/jj/linux-apparmor\n\nPull apparmor updates from John Johansen:\n \"This is the apparmor pull request, similar to SELinux and seccomp.\n\n  It's the same series that I was sent to James' security tree + one\n  regression fix that was found after the series was sent to James and\n  would have been sent for v4.14-rc2.\n\n  Features:\n  - in preparation for secid mapping add support for absolute root view\n    based labels\n  - add base infastructure for socket mediation\n  - add mount mediation\n  - add signal mediation\n\n  minor cleanups and changes:\n  - be defensive, ensure unconfined profiles have dfas initialized\n  - add more debug asserts to apparmorfs\n  - enable policy unpacking to audit different reasons for failure\n  - cleanup conditional check for label in label_print\n  - Redundant condition: prev_ns. in [label.c:1498]\n\n  Bug Fixes:\n  - fix regression in apparmorfs DAC access permissions\n  - fix build failure on sparc caused by undeclared signals\n  - fix sparse report of incorrect type assignment when freeing label proxies\n  - fix race condition in null profile creation\n  - Fix an error code in aafs_create()\n  - Fix logical error in verify_header()\n  - Fix shadowed local variable in unpack_trans_table()\"\n\n* tag 'apparmor-pr-2017-09-22' of git://git.kernel.org/pub/scm/linux/kernel/git/jj/linux-apparmor:\n  apparmor: fix apparmorfs DAC access permissions\n  apparmor: fix build failure on sparc caused by undeclared signals\n  apparmor: fix incorrect type assignment when freeing proxies\n  apparmor: ensure unconfined profiles have dfas initialized\n  apparmor: fix race condition in null profile creation\n  apparmor: move new_null_profile to after profile lookup fns()\n  apparmor: add base infastructure for socket mediation\n  apparmor: add more debug asserts to apparmorfs\n  apparmor: make policy_unpack able to audit different info messages\n  apparmor: add support for absolute root view based labels\n  apparmor: cleanup conditional check for label in label_print\n  apparmor: add mount mediation\n  apparmor: add the ability to mediate signals\n  apparmor: Redundant condition: prev_ns. in [label.c:1498]\n  apparmor: Fix an error code in aafs_create()\n  apparmor: Fix logical error in verify_header()\n  apparmor: Fix shadowed local variable in unpack_trans_table() Merge tag 'acpi-4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fixes from Rafael Wysocki:\n \"These fix the initialization of resources in the ACPI WDAT watchdog\n  driver, a recent regression in the ACPI device properties handling, a\n  recent change in behavior causing the ACPI_HANDLE() macro to only work\n  for GPL code and create a MAINTAINERS entry for ACPI PMIC drivers in\n  order to specify the official reviewers for that code.\n\n  Specifics:\n\n   - Fix the initialization of resources in the ACPI WDAT watchdog\n     driver that uses unititialized memory which causes compiler\n     warnings to be triggered (Arnd Bergmann).\n\n   - Fix a recent regression in the ACPI device properties handling that\n     causes some device properties data to be skipped during enumeration\n     (Sakari Ailus).\n\n   - Fix a recent change in behavior that caused the ACPI_HANDLE() macro\n     to stop working for non-GPL code which is a problem for the NVidia\n     binary graphics driver, for example (John Hubbard).\n\n   - Add a MAINTAINERS entry for the ACPI PMIC drivers to specify the\n     official reviewers for that code (Rafael Wysocki)\"\n\n* tag 'acpi-4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: properties: Return _DSD hierarchical extension (data) sub-nodes correctly\n  ACPI / bus: Make ACPI_HANDLE() work for non-GPL code again\n  ACPI / watchdog: properly initialize resources\n  ACPI / PMIC: Add code reviewers to MAINTAINERS Merge tag 'pm-4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These fix a cpufreq regression introduced by recent changes related to\n  the generic DT driver, an initialization time memory leak in cpuidle\n  on ARM, a PM core bug that may cause system suspend/resume to fail on\n  some systems, a request type validation issue in the PM QoS framework\n  and two documentation-related issues.\n\n  Specifics:\n\n   - Fix a regression in cpufreq on systems using DT as the source of\n     CPU configuration information where two different code paths\n     attempt to create the cpufreq-dt device object (there can be only\n     one) and fix up the \"compatible\" matching for some TI platforms on\n     top of that (Viresh Kumar, Dave Gerlach).\n\n   - Fix an initialization time memory leak in cpuidle on ARM which\n     occurs if the cpuidle driver initialization fails (Stefan Wahren).\n\n   - Fix a PM core function that checks whether or not there are any\n     system suspend/resume callbacks for a device, but forgets to check\n     legacy callbacks which then may be skipped incorrectly and the\n     system may crash and/or the device may become unusable after a\n     suspend-resume cycle (Rafael Wysocki).\n\n   - Fix request type validation for latency tolerance PM QoS requests\n     which may lead to unexpected behavior (Jan Schönherr).\n\n   - Fix a broken link to PM documentation from a header file and a typo\n     in a PM document (Geert Uytterhoeven, Rafael Wysocki)\"\n\n* tag 'pm-4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  cpufreq: ti-cpufreq: Support additional am43xx platforms\n  ARM: cpuidle: Avoid memleak if init fail\n  cpufreq: dt-platdev: Add some missing platforms to the blacklist\n  PM: core: Fix device_pm_check_callbacks()\n  PM: docs: Drop an excess character from devices.rst\n  PM / QoS: Use the correct variable to check the QoS request type\n  driver core: Fix link to device power management documentation Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov:\n\n - fixes for two long standing issues (lock up and a crash) in force\n   feedback handling in uinput driver\n\n - tweak to firmware update timing in Elan I2C touchpad driver.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: elan_i2c - extend Flash-Write delay\n  Input: uinput - avoid crash when sending FF request to device going away\n  Input: uinput - avoid FF flush when destroying device Merge tag 'seccomp-v4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull seccomp updates from Kees Cook:\n \"Major additions:\n\n   - sysctl and seccomp operation to discover available actions\n     (tyhicks)\n\n   - new per-filter configurable logging infrastructure and sysctl\n     (tyhicks)\n\n   - SECCOMP_RET_LOG to log allowed syscalls (tyhicks)\n\n   - SECCOMP_RET_KILL_PROCESS as the new strictest possible action\n\n   - self-tests for new behaviors\"\n\n[ This is the seccomp part of the security pull request during the merge\n  window that was nixed due to unrelated problems   - Linus ]\n\n* tag 'seccomp-v4.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  samples: Unrename SECCOMP_RET_KILL\n  selftests/seccomp: Test thread vs process killing\n  seccomp: Implement SECCOMP_RET_KILL_PROCESS action\n  seccomp: Introduce SECCOMP_RET_KILL_PROCESS\n  seccomp: Rename SECCOMP_RET_KILL to SECCOMP_RET_KILL_THREAD\n  seccomp: Action to log before allowing\n  seccomp: Filter flag to log all actions except SECCOMP_RET_ALLOW\n  seccomp: Selftest for detection of filter flag support\n  seccomp: Sysctl to configure actions that are allowed to be logged\n  seccomp: Operation for checking if an action is available\n  seccomp: Sysctl to display available actions\n  seccomp: Provide matching filter for introspection\n  selftests/seccomp: Refactor RET_ERRNO tests\n  selftests/seccomp: Add simple seccomp overhead benchmark\n  selftests/seccomp: Add tests for basic ptrace actions Merge tag '4.14-smb3-fixes-from-recent-test-events-for-stable' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Various SMB3 fixes for stable and security improvements from the\n  recently completed SMB3/Samba test events\n\n* tag '4.14-smb3-fixes-from-recent-test-events-for-stable' of git://git.samba.org/sfrench/cifs-2.6:\n  SMB3: Don't ignore O_SYNC/O_DSYNC and O_DIRECT flags\n  SMB3: handle new statx fields\n  SMB: Validate negotiate (to protect against downgrade) even if signing off\n  cifs: release auth_key.response for reconnect.\n  cifs: release cifs root_cred after exit_cifs\n  CIFS: make arrays static const, reduces object code size\n  [SMB3] Update session and share information displayed for debugging SMB2/SMB3\n  cifs: show 'soft' in the mount options for hard mounts\n  SMB3: Warn user if trying to sign connection that authenticated as guest\n  SMB3: Fix endian warning\n  Fix SMB3.1.1 guest authentication to Samba Merge tag 'ceph-for-4.14-rc2' of git://github.com/ceph/ceph-client\n\nPull ceph fixes from Ilya Dryomov:\n \"Two small but important fixes: RADOS semantic change in upcoming v12.2.1\n  release and a rare NULL dereference in create_session_open_msg()\"\n\n* tag 'ceph-for-4.14-rc2' of git://github.com/ceph/ceph-client:\n  ceph: avoid panic in create_session_open_msg() if utsname() returns NULL\n  libceph: don't allow bidirectional swap of pg-upmap-items Merge tag 'pci-v4.14-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n\n - fix endpoint \"end of test\" interrupt issue (introduced in v4.14-rc1)\n   (John Keeping)\n\n - fix MIPS use-after-free map_irq() issue (introduced in v4.14-rc1)\n   (Lorenzo Pieralisi)\n\n* tag 'pci-v4.14-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: endpoint: Use correct \"end of test\" interrupt\n  MIPS: PCI: Move map_irq() hooks out of initdata Merge tag 'iommu-fixes-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fixes from Joerg Roedel:\n\n - two Kconfig fixes to fix dependencies that cause compile failures\n   when they are not fulfilled.\n\n - a section mismatch fix for Intel VT-d\n\n - a fix for PCI topology detection in ARM device-tree code\n\n* tag 'iommu-fixes-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/of: Remove PCI host bridge node check\n  iommu/qcom: Depend on HAS_DMA to fix compile error\n  iommu/vt-d: Fix harmless section mismatch warning\n  iommu: Add missing dependencies Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile\n\nPull arch/tile fixes from Chris Metcalf:\n \"These are a code cleanup and config cleanup, respectively\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:\n  tile: array underflow in setup_maxnodemem()\n  tile: defconfig: Cleanup from old Kconfig options Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n\n - #ifdef CONFIG_EFI around __efi_fpsimd_begin/end\n\n - Assembly code alignment reduced to 4 bytes from 16\n\n - Ensure the kernel is compiled for LP64 (there are some arm64\n   compilers around defaulting to ILP32)\n\n - Fix arm_pmu_acpi memory leak on the error path\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  drivers/perf: arm_pmu_acpi: Release memory obtained by kasprintf\n  arm64: ensure the kernel is compiled for LP64\n  arm64: relax assembly code alignment from 16 byte to 4 byte\n  arm64: efi: Don't include EFI fpsimd save/restore code in non-EFI kernels Merge tag 'for-linus-4.14b-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixes from Juergen Gross:\n \"A fix for a missing __init annotation and two cleanup patches\"\n\n* tag 'for-linus-4.14b-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen, arm64: drop dummy lookup_address()\n  xen: don't compile pv-specific parts if XEN_PV isn't configured\n  xen: x86: mark xen_find_pt_base as __init Merge tag 'powerpc-4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"It turns out our single-fix pull from last week was too good to be\n  true. I missed a few fixes in that pull that had already come in\n  because I was on leave, but also we hadn't found the bugs yet. So this\n  week it's a bit bigger, though not ridiculous. Hopefully things will\n  settle down from here on.\n\n  Four fixes for the new instruction emulation code. A fix for CPU\n  offline on bare metal machines when certain idle states are not\n  supported, and a fix for a device_node refcounting oops during CPU\n  hotplug, caused by recent changes.\n\n  Going to stable are a fix for an oops during core dump on machines\n  that have TM (Transactional Memory) disabled. Reordering some EEH\n  initialisation to avoid trashing memory, and another device_node\n  refcounting fix.\n\n  And a few other minor things.\n\n Thanks to: Anton Blanchard, Benjamin Herrenschmidt, Cyril Bur, Gautham\n R. Shenoy, Gustavo Romero, Kamalesh Babulal, Matthew Weber, Matt Weber,\n Naveen N. Rao, Nicholas Piggin, Pavithra Prakash, Ravi Bangoria, Ronak\n Desai, Scott Wood, Tyrel Datwyler\"\n\n* tag 'powerpc-4.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/pseries: Fix parent_dn reference leak in add_dt_node()\n  powerpc/pseries: Fix \"OF: ERROR: Bad of_node_put() on /cpus\" during DLPAR\n  powerpc/eeh: Create PHB PEs after EEH is initialized\n  powerpc/kprobes: Update optprobes to use emulate_update_regs()\n  powerpc/powernv: Clear LPCR[PECE1] via stop-api only for deep state offline\n  powerpc/sstep: mullw should calculate a 64 bit signed result\n  powerpc/sstep: Fix issues with mcrf\n  powerpc/sstep: Fix issues with set_cr0()\n  powerpc/tm: Flush TM only if CPU has TM feature\n  powerpc/sysrq: Fix oops whem ppmu is not registered\n  powerpc/configs: Update for CONFIG_SND changes\n  powerpc/e6500: Update machine check for L1D cache err Merge branch '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n\n - Fix a build error on MSP71xx which used to rely on somehow magically\n   <asm/setup.h> being pulled in which no longer happens.\n\n - Fix the __write_64bit_c0_split inline assembler where there was the\n   theoretical possibility of GCC interpret the constraints such that\n   bad code could result.\n\n - A __init was causing section mismatch errors on Alchemy. Just to be\n   on the safe side, Manuel's patch does away with all of them.\n\n - Fix perf event init.\n\n* '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: PCI: fix pcibios_map_irq section mismatch\n  MIPS: Fix input modify in __write_64bit_c0_split()\n  MIPS: MSP71xx: Include asm/setup.h\n  MIPS: Fix perf event init Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Martin Schwidefsky:\n\n - A couple of bug fixes: memory management, perf, cio, dasd and\n   scm_blk.\n\n - A larger change in regard to the CPU topology to improve performance\n   for systems running under z/VM or KVM.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/topology: enable / disable topology dynamically\n  s390/topology: alternative topology for topology-less machines\n  s390/mm: fix write access check in gup_huge_pmd()\n  s390/mm: make pmdp_invalidate() do invalidation only\n  s390/cio: recover from bad paths\n  s390/scm_blk: consistently use blk_status_t as error type\n  s390/dasd: fix race during dasd initialization\n  s390/perf: fix bug when creating per-thread event Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n - Fix compiler warnings in inside-secure\n - Fix LS1021A support in caam\n - Avoid using RBP in x86 crypto code\n - Fix bug in talitos that prevents hashing with algif\n - Fix bugs talitos hashing code that cause incorrect hash result\n - Fix memory freeing path bug in drbg\n - Fix af_alg crash when two SG lists are chained\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: af_alg - update correct dst SGL entry\n  crypto: caam - fix LS1021A support on ARMv7 multiplatform kernel\n  crypto: inside-secure - fix gcc-4.9 warnings\n  crypto: talitos - Don't provide setkey for non hmac hashing algs\n  crypto: talitos - fix hashing\n  crypto: talitos - fix sha224\n  crypto: x86/twofish - Fix RBP usage\n  crypto: sha512-avx2 - Fix RBP usage\n  crypto: x86/sha256-ssse3 - Fix RBP usage\n  crypto: x86/sha256-avx2 - Fix RBP usage\n  crypto: x86/sha256-avx - Fix RBP usage\n  crypto: x86/sha1-ssse3 - Fix RBP usage\n  crypto: x86/sha1-avx2 - Fix RBP usage\n  crypto: x86/des3_ede - Fix RBP usage\n  crypto: x86/cast6 - Fix RBP usage\n  crypto: x86/cast5 - Fix RBP usage\n  crypto: x86/camellia - Fix RBP usage\n  crypto: x86/blowfish - Fix RBP usage\n  crypto: drbg - fix freeing of resources Merge branch 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm fixes from Dan Williams:\n \"A crash fix and corresponding regression test enabling for the crash\n  scenario. The unit test for this crash is available in ndctl-v58.2.\n\n  This branch has received a build success notification from the\n  0day-kbuild robot over 148 configs. The fix is tagged for -stable /\n  backport to 4.13\"\n\n* 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  libnvdimm, namespace: fix btt claim class crash\n  tools/testing/nvdimm: disable labels for nfit_test.1 Merge tag 'kbuild-fixes-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild fixes from Masahiro Yamada:\n \"Here are some early Kbuild fixes.\n\n  The in-kernel firmware was removed during the previous merge window.\n  Since then, some bug reports of broken rpm building are flying in ML.\n  We need to fix it now.\n\n  Summary:\n\n   - remove firmware install from rpm-pkg / deb-pkg\n\n   - fix mismatch between release number and UTS_VERSION for rpm-pkg\"\n\n* tag 'kbuild-fixes-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: rpm-pkg: fix version number handling\n  kbuild: deb-pkg: remove firmware package support\n  kbuild: rpm-pkg: delete firmware_install to fix build error Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull misc fixes from Al Viro:\n \"A couple of regression fixes, one for this merge window, one for the\n  previous cycle\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  ipc/shm: Fix order of parameters when calling copy_compat_shmid_to_user\n  iov_iter: fix page_copy_sane for compound pages Merge tag 'mtd/fixes-for-4.14-rc2' of git://git.infradead.org/linux-mtd\n\nPull mtd fixes from Boris Brezillon:\n \"SPI NOR:\n   - Fix the SFDP parsing code (bugs reported by Geert Uytterhoeven)\n\n  NAND:\n   - Fix a resource leak in the lpc32xx_mlc driver\n   - Fix a build warning in the core\"\n\n* tag 'mtd/fixes-for-4.14-rc2' of git://git.infradead.org/linux-mtd:\n  mtd: nand: remove unused blockmask variable\n  mtd: nand: lpc32xx_mlc: Fix an error handling path in lpc32xx_nand_probe()\n  mtd: spi-nor: fix DMA unsafe buffer issue in spi_nor_read_sfdp()\n  mtd: spi-nor: Check consistency of the memory size extracted from the SFDP Merge tag 'drm-fixes-for-v4.14-rc2' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"amdkfd, i915 and exynos fixes.\n\n  I've ended up on unplanned + planned leave this week, but there were\n  some fixes I decided to dequeue, some amdkfd bits missed the next pull\n  but they are pretty trivial, so I included them.\n\n  I'm not sure I'll see much else for rc2, lots of people are at XDC\"\n\n* tag 'drm-fixes-for-v4.14-rc2' of git://people.freedesktop.org/~airlied/linux:\n  drm/exynos/hdmi: Fix unsafe list iteration\n  drm: exynos: include linux/irq.h\n  drm/exynos: Fix suspend/resume support\n  drm/exynos: Fix locking in the suspend/resume paths\n  drm/i915: Remove unused 'in_vbl' from i915_get_crtc_scanoutpos()\n  drm/i915/cnp: set min brightness from VBT\n  Revert \"drm/i915/bxt: Disable device ready before shutdown command\"\n  drm/i915/bxt: set min brightness from VBT\n  drm/i915: Fix an error handling in 'intel_framebuffer_init()'\n  drm/i915/gvt: Fix incorrect PCI BARs reporting\n  drm/amdkfd: pass queue's mqd when destroying mqd\n  drm/amdkfd: remove memset before memcpy\n  uapi linux/kfd_ioctl.h: only use __u32 and __u64 Merge tag 'dma-mapping-4.14-2' of git://git.infradead.org/users/hch/dma-mapping\n\nPull dma mapping fix from Christoph Hellwig:\n \"A fix for a fix that went in this merge window from Arnd\"\n\n* tag 'dma-mapping-4.14-2' of git://git.infradead.org/users/hch/dma-mapping:\n  dma-coherent: fix rmem_dma_device_init regression Merge tag 'trace-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"This includes three minor fixes.\n\n    - Have writing to trace file clear the irqsoff (and friends) tracer\n\n    - trace_pipe behavior for instance buffers was different than top\n      buffer\n\n    - Show a message of why mmiotrace doesn't start from commandline\"\n\n* tag 'trace-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix trace_pipe behavior for instance traces\n  tracing: Ignore mmiotrace from kernel commandline\n  tracing: Erase irqsoff trace with empty write Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"This is a set of five small fixes: one is a null deref fix which is\n  pretty critical for the fc transport class and one fixes a potential\n  security issue of sg leaking kernel information\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: sg: fixup infoleak when using SG_GET_REQUEST_TABLE\n  scsi: sg: factor out sg_fill_request_table()\n  scsi: sd: Remove unnecessary condition in sd_read_block_limits()\n  scsi: acornscsi: fix build error\n  scsi: scsi_transport_fc: fix NULL pointer dereference in fc_bsg_job_timeout Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull si_code fix from Eric Biederman:\n \"When sorting out the si_code ambiguity fcntl I accidentally overshot\n  and included SIGPOLL as well. Ooops! This is my trivial fix for that.\n\n  Vince Weaver caught this when it landed in your tree with his\n  perf_event_tests many of which started failing because the si_code\n  changed\"\n\nQuoth Vince Weaver:\n \"I've tested with this patch applied and can confirm all of my tests\n  now pass again\"\n\nFixes: d08477aa975e (\"fcntl: Don't use ambiguous SIG_POLL si_codes\")\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  fcntl: Don't set si_code to SI_SIGIO when sig == SIGPOLL Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Radim Krčmář:\n\n - fix build without CONFIG_HAVE_KVM_IRQ_ROUTING\n\n - fix NULL access in x86 CR access\n\n - fix race with VMX posted interrups\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: VMX: remove WARN_ON_ONCE in kvm_vcpu_trigger_posted_interrupt\n  KVM: VMX: do not change SN bit in vmx_update_pi_irte()\n  KVM: x86: Fix the NULL pointer parameter in check_cr_write()\n  Revert \"KVM: Don't accept obviously wrong gsi values via KVM_IRQFD\" Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD fixes from Shaohua Li:\n \"Two small patches to fix long-lived raid5 stripe batch bugs, one from\n  Dennis and the other from me\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  md/raid5: preserve STRIPE_ON_UNPLUG_LIST in break_stripe_batch_list\n  md/raid5: fix a race condition in stripe batch Merge tag '4.14-smb3-multidialect-support-and-fixes-for-stable' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Convert default dialect to smb2.1 or later to allow connecting to\n  Windows 7 for example, also includes some fixes for stable\"\n\n* tag '4.14-smb3-multidialect-support-and-fixes-for-stable' of git://git.samba.org/sfrench/cifs-2.6:\n  Update version of cifs module\n  cifs: hide unused functions\n  SMB3: Add support for multidialect negotiate (SMB2.1 and later)\n  CIFS/SMB3: Update documentation to reflect SMB3 and various changes\n  cifs: check rsp for NULL before dereferencing in SMB2_open Merge tag 'mmc-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"MMC core:\n   - Fix trivial typo in Kconfig\n   - Fixup initialization of mmc block requests\n\n  MMC host:\n   - cavium: Fix use-after-free bug reported by KASAN\"\n\n* tag 'mmc-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: cavium: Fix use-after-free in of_platform_device_destroy\n  mmc: host: fix typo after MMC_DEBUG move\n  mmc: block: Fix incorrectly initialized requests Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull misc fixes from Thomas Gleixner:\n\n  - A fix for a user space regression in /proc/$PID/stat\n\n  - A couple of objtool fixes:\n     ~ Plug a memory leak\n     ~ Avoid accessing empty sections which upsets certain binutil\n       versions\n     ~ Prevent corrupting the obj file when section sizes did not change\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  fs/proc: Report eip/esp in /prod/PID/stat for coredumping\n  objtool: Fix object file corruption\n  objtool: Do not retrieve data from empty sections\n  objtool: Fix memory leak in elf_create_rela_section() Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fix from Thomas Gleixner:\n \"Fix for an off by one error in a cpumask result comparison\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Fix cpumask check in __irq_startup_managed() Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fix from Thomas Gleixner:\n \"A single fix addressing the missing CP8 feature bit in CPUID for a\n  range of AMD ZEN models/mask revisions\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/cpu/AMD: Fix erratum 1076 (CPB bit) Linux 4.14-rc1 Merge tag 'upstream-4.14-rc1' of git://git.infradead.org/linux-ubifs\n\nPull UBI updates from Richard Weinberger:\n \"Minor improvements\"\n\n* tag 'upstream-4.14-rc1' of git://git.infradead.org/linux-ubifs:\n  UBI: Fix two typos in comments\n  ubi: fastmap: fix spelling mistake: \"invalidiate\" -> \"invalidate\"\n  ubi: pr_err() strings should end with newlines\n  ubi: pr_err() strings should end with newlines\n  ubi: pr_err() strings should end with newlines Merge branch 'for-linus-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml\n\nPull UML updates from Richard Weinberger:\n\n - minor improvements\n\n - fixes for Debian's new gcc defaults (pie enabled by default)\n\n - fixes for XSTATE/XSAVE to make UML work again on modern systems\n\n* 'for-linus-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml:\n  um: return negative in tuntap_open_tramp()\n  um: remove a stray tab\n  um: Use relative modversions with LD_SCRIPT_DYN\n  um: link vmlinux with -no-pie\n  um: Fix CONFIG_GCOV for modules.\n  Fix minor typos and grammar in UML start_up help\n  um: defconfig: Cleanup from old Kconfig options\n  um: Fix FP register size for XSTATE/XSAVE Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix hotplug deadlock in hv_netvsc, from Stephen Hemminger.\n\n 2) Fix double-free in rmnet driver, from Dan Carpenter.\n\n 3) INET connection socket layer can double put request sockets, fix\n    from Eric Dumazet.\n\n 4) Don't match collect metadata-mode tunnels if the device is down,\n    from Haishuang Yan.\n\n 5) Do not perform TSO6/GSO on ipv6 packets with extensions headers in\n    be2net driver, from Suresh Reddy.\n\n 6) Fix scaling error in gen_estimator, from Eric Dumazet.\n\n 7) Fix 64-bit statistics deadlock in systemport driver, from Florian\n    Fainelli.\n\n 8) Fix use-after-free in sctp_sock_dump, from Xin Long.\n\n 9) Reject invalid BPF_END instructions in verifier, from Edward Cree.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (43 commits)\n  mlxsw: spectrum_router: Only handle IPv4 and IPv6 events\n  Documentation: link in networking docs\n  tcp: fix data delivery rate\n  bpf/verifier: reject BPF_ALU64|BPF_END\n  sctp: do not mark sk dumped when inet_sctp_diag_fill returns err\n  sctp: fix an use-after-free issue in sctp_sock_dump\n  netvsc: increase default receive buffer size\n  tcp: update skb->skb_mstamp more carefully\n  net: ipv4: fix l3slave check for index returned in IP_PKTINFO\n  net: smsc911x: Quieten netif during suspend\n  net: systemport: Fix 64-bit stats deadlock\n  net: vrf: avoid gcc-4.6 warning\n  qed: remove unnecessary call to memset\n  tg3: clean up redundant initialization of tnapi\n  tls: make tls_sw_free_resources static\n  sctp: potential read out of bounds in sctp_ulpevent_type_enabled()\n  MAINTAINERS: review Renesas DT bindings as well\n  net_sched: gen_estimator: fix scaling error in bytes/packets samples\n  nfp: wait for the NSP resource to appear on boot\n  nfp: wait for board state before talking to the NSP\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull more input updates from Dmitry Torokhov:\n \"A second round of updates for the input subsystem:\n\n   - a new driver for PWM-controlled vibrators\n\n   - ucb1400 touchscreen driver had completely busted suspend/resume\n     handling\n\n   - we now handle \"home\" button found on some devices with Goodix\n     touchscreens\n\n   - assorted other fixups\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: i8042 - add Gigabyte P57 to the keyboard reset table\n  Input: xpad - validate USB endpoint type during probe\n  Input: ucb1400_ts - fix suspend and resume handling\n  Input: edt-ft5x06 - fix access to non-existing register\n  Input: elantech - make arrays debounce_packet static, reduces object code size\n  Input: surface3_spi - make const array header static, reduces object code size\n  Input: goodix - add support for capacitive home button\n  Input: add a driver for PWM controllable vibrators\n  Input: adi - make array seq static, reduces object code size Merge branch '4.14-features' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS updates from Ralf Baechle:\n \"This is the main pull request for 4.14 for MIPS; below a summary of\n  the non-merge commits:\n\n  CM:\n   - Rename mips_cm_base to mips_gcr_base\n   - Specify register size when generating accessors\n   - Use BIT/GENMASK for register fields, order & drop shifts\n   - Add cluster & block args to mips_cm_lock_other()\n\n  CPC:\n   - Use common CPS accessor generation macros\n   - Use BIT/GENMASK for register fields, order & drop shifts\n   - Introduce register modify (set/clear/change) accessors\n   - Use change_*, set_* & clear_* where appropriate\n   - Add CM/CPC 3.5 register definitions\n   - Use GlobalNumber macros rather than magic numbers\n   - Have asm/mips-cps.h include CM & CPC headers\n   - Cluster support for topology functions\n   - Detect CPUs in secondary clusters\n\n  CPS:\n   - Read GIC_VL_IDENT directly, not via irqchip driver\n\n  DMA:\n   - Consolidate coherent and non-coherent dma_alloc code\n   - Don't use dma_cache_sync to implement fd_cacheflush\n\n  FPU emulation / FP assist code:\n   - Another series of 14 commits fixing corner cases such as NaN\n     propgagation and other special input values.\n   - Zero bits 32-63 of the result for a CLASS.D instruction.\n   - Enhanced statics via debugfs\n   - Do not use bools for arithmetic. GCC 7.1 moans about this.\n   - Correct user fault_addr type\n\n  Generic MIPS:\n   - Enhancement of stack backtraces\n   - Cleanup from non-existing options\n   - Handle non word sized instructions when examining frame\n   - Fix detection and decoding of ADDIUSP instruction\n   - Fix decoding of SWSP16 instruction\n   - Refactor handling of stack pointer in get_frame_info\n   - Remove unreachable code from force_fcr31_sig()\n   - Convert to using %pOF instead of full_name\n   - Remove the R6000 support.\n   - Move FP code from *_switch.S to *_fpu.S\n   - Remove unused ST_OFF from r2300_switch.S\n   - Allow platform to specify multiple its.S files\n   - Add #includes to various files to ensure code builds reliable and\n     without warning..\n   - Remove __invalidate_kernel_vmap_range\n   - Remove plat_timer_setup\n   - Declare various variables & functions static\n   - Abstract CPU core & VP(E) ID access through accessor functions\n   - Store core & VP IDs in GlobalNumber-style variable\n   - Unify checks for sibling CPUs\n   - Add CPU cluster number accessors\n   - Prevent direct use of generic_defconfig\n   - Make CONFIG_MIPS_MT_SMP default y\n   - Add __ioread64_copy\n   - Remove unnecessary inclusions of linux/irqchip/mips-gic.h\n\n  GIC:\n   - Introduce asm/mips-gic.h with accessor functions\n   - Use new GIC accessor functions in mips-gic-timer\n   - Remove counter access functions from irq-mips-gic.c\n   - Remove gic_read_local_vp_id() from irq-mips-gic.c\n   - Simplify shared interrupt pending/mask reads in irq-mips-gic.c\n   - Simplify gic_local_irq_domain_map() in irq-mips-gic.c\n   - Drop gic_(re)set_mask() functions in irq-mips-gic.c\n   - Remove gic_set_polarity(), gic_set_trigger(), gic_set_dual_edge(),\n     gic_map_to_pin() and gic_map_to_vpe() from irq-mips-gic.c.\n   - Convert remaining shared reg access, local int mask access and\n     remaining local reg access to new accessors\n   - Move GIC_LOCAL_INT_* to asm/mips-gic.h\n   - Remove GIC_CPU_INT* macros from irq-mips-gic.c\n   - Move various definitions to the driver\n   - Remove gic_get_usm_range()\n   - Remove __gic_irq_dispatch() forward declaration\n   - Remove gic_init()\n   - Use mips_gic_present() in place of gic_present and remove\n     gic_present\n   - Move gic_get_c0_*_int() to asm/mips-gic.h\n   - Remove linux/irqchip/mips-gic.h\n   - Inline __gic_init()\n   - Inline gic_basic_init()\n   - Make pcpu_masks a per-cpu variable\n   - Use pcpu_masks to avoid reading GIC_SH_MASK*\n   - Clean up mti, reserved-cpu-vectors handling\n   - Use cpumask_first_and() in gic_set_affinity()\n   - Let the core set struct irq_common_data affinity\n\n  microMIPS:\n   - Fix microMIPS stack unwinding on big endian systems\n\n  MIPS-GIC:\n   - SYNC after enabling GIC region\n\n  NUMA:\n   - Remove the unused parent_node() macro\n\n  R6:\n   - Constify r2_decoder_tables\n   - Add accessor & bit definitions for GlobalNumber\n\n  SMP:\n   - Constify smp ops\n   - Allow boot_secondary SMP op to return errors\n\n  VDSO:\n   - Drop gic_get_usm_range() usage\n   - Avoid use of linux/irqchip/mips-gic.h\n\n  Platform changes:\n\n  Alchemy:\n   - Add devboard machine type to cpuinfo\n   - update cpu feature overrides\n   - Threaded carddetect irqs for devboards\n\n  AR7:\n   - allow NULL clock for clk_get_rate\n\n  BCM63xx:\n   - Fix ENETDMA_6345_MAXBURST_REG offset\n   - Allow NULL clock for clk_get_rate\n\n  CI20:\n   - Enable GPIO and RTC drivers in defconfig\n   - Add ethernet and fixed-regulator nodes to DTS\n\n  Generic platform:\n   - Move Boston and NI 169445 FIT image source to their own files\n   - Include asm/bootinfo.h for plat_fdt_relocated()\n   - Include asm/time.h for get_c0_*_int()\n   - Include asm/bootinfo.h for plat_fdt_relocated()\n   - Include asm/time.h for get_c0_*_int()\n   - Allow filtering enabled boards by requirements\n   - Don't explicitly disable CONFIG_USB_SUPPORT\n   - Bump default NR_CPUS to 16\n\n  JZ4700:\n   - Probe the jz4740-rtc driver from devicetree\n\n  Lantiq:\n   - Drop check of boot select from the spi-falcon driver.\n   - Drop check of boot select from the lantiq-flash MTD driver.\n   - Access boot cause register in the watchdog driver through regmap\n   - Add device tree binding documentation for the watchdog driver\n   - Add docs for the RCU DT bindings.\n   - Convert the fpi bus driver to a platform_driver\n   - Remove ltq_reset_cause() and ltq_boot_select(\n   - Switch to a proper reset driver\n   - Switch to a new drivers/soc GPHY driver\n   - Add an USB PHY driver for the Lantiq SoCs using the RCU module\n   - Use of_platform_default_populate instead of __dt_register_buses\n   - Enable MFD_SYSCON to be able to use it for the RCU MFD\n   - Replace ltq_boot_select() with dummy implementation.\n\n  Loongson 2F:\n   - Allow NULL clock for clk_get_rate\n\n  Malta:\n   - Use new GIC accessor functions\n\n  NI 169445:\n   - Add support for NI 169445 board.\n   - Only include in 32r2el kernels\n\n  Octeon:\n   - Add support for watchdog of 78XX SOCs.\n   - Add support for watchdog of CN68XX SOCs.\n   - Expose support for mips32r1, mips32r2 and mips64r1\n   - Enable more drivers in config file\n   - Add support for accessing the boot vector.\n   - Remove old boot vector code from watchdog driver\n   - Define watchdog registers for 70xx, 73xx, 78xx, F75xx.\n   - Make CSR functions node aware.\n   - Allow access to CIU3 IRQ domains.\n   - Misc cleanups in the watchdog driver\n\n  Omega2+:\n   - New board, add support and defconfig\n\n  Pistachio:\n   - Enable Root FS on NFS in defconfig\n\n  Ralink:\n   - Add Mediatek MT7628A SoC\n   - Allow NULL clock for clk_get_rate\n   - Explicitly request exclusive reset control in the pci-mt7620 PCI driver.\n\n  SEAD3:\n   - Only include in 32 bit kernels by default\n\n  VoCore:\n   - Add VoCore as a vendor t0 dt-bindings\n   - Add defconfig file\"\n\n* '4.14-features' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus: (167 commits)\n  MIPS: Refactor handling of stack pointer in get_frame_info\n  MIPS: Stacktrace: Fix microMIPS stack unwinding on big endian systems\n  MIPS: microMIPS: Fix decoding of swsp16 instruction\n  MIPS: microMIPS: Fix decoding of addiusp instruction\n  MIPS: microMIPS: Fix detection of addiusp instruction\n  MIPS: Handle non word sized instructions when examining frame\n  MIPS: ralink: allow NULL clock for clk_get_rate\n  MIPS: Loongson 2F: allow NULL clock for clk_get_rate\n  MIPS: BCM63XX: allow NULL clock for clk_get_rate\n  MIPS: AR7: allow NULL clock for clk_get_rate\n  MIPS: BCM63XX: fix ENETDMA_6345_MAXBURST_REG offset\n  mips: Save all registers when saving the frame\n  MIPS: Add DWARF unwinding to assembly\n  MIPS: Make SAVE_SOME more standard\n  MIPS: Fix issues in backtraces\n  MIPS: jz4780: DTS: Probe the jz4740-rtc driver from devicetree\n  MIPS: Ci20: Enable RTC driver\n  watchdog: octeon-wdt: Add support for 78XX SOCs.\n  watchdog: octeon-wdt: Add support for cn68XX SOCs.\n  watchdog: octeon-wdt: File cleaning.\n  ... Merge tag 'pci-v4.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fix from Bjorn Helgaas:\n \"Revert an attempt to fix a race while enabling upstream bridges\n  because it broke iwlwifi firmware loading\"\n\n* tag 'pci-v4.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  Revert \"PCI: Avoid race while enabling upstream bridges\" Merge tag 'drm-fixes-for-v4.14-rc1' of git://people.freedesktop.org/~airlied/linux\n\nPull drm AMD fixes from Dave Airlie:\n \"Just had a single AMD fixes pull from Alex for rc1\"\n\n* tag 'drm-fixes-for-v4.14-rc1' of git://people.freedesktop.org/~airlied/linux:\n  drm/amdgpu: revert \"fix deadlock of reservation between cs and gpu reset v2\"\n  drm/amdgpu: remove duplicate return statement\n  drm/amdgpu: check memory allocation failure\n  drm/amd/amdgpu: fix BANK_SELECT on Vega10 (v2)\n  drm/amdgpu: inline amdgpu_ttm_do_bind again\n  drm/amdgpu: fix amdgpu_ttm_bind\n  drm/amdgpu: remove the GART copy hack\n  drm/ttm:fix wrong decoding of bo_count\n  drm/ttm: fix missing inc bo_count\n  drm/amdgpu: set sched_hw_submission higher for KIQ (v3)\n  drm/amdgpu: move default gart size setting into gmc modules\n  drm/amdgpu: refine default gart size\n  drm/amd/powerplay: ACG frequency added in PPTable\n  drm/amdgpu: discard commands of killed processes\n  drm/amdgpu: fix and cleanup shadow handling\n  drm/amdgpu: add automatic per asic settings for gart_size\n  drm/amdgpu/gfx8: fix spelling typo in mqd allocation\n  drm/amd/powerplay: unhalt mec after loading\n  drm/amdgpu/virtual_dce: Virtual display doesn't support disable vblank immediately\n  drm/amdgpu: Fix huge page updates with CPU Merge branch 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull more i2c updates from Wolfram Sang:\n \"I2C has two more new drivers: Altera FPGA and STM32F7\"\n\n* 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: i2c-stm32f7: add driver\n  i2c: i2c-stm32f4: use generic definition of speed enum\n  dt-bindings: i2c-stm32: Document the STM32F7 I2C bindings\n  i2c: altera: Add Altera I2C Controller driver\n  dt-bindings: i2c: Add Altera I2C Controller Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull more KVM updates from Paolo Bonzini:\n - PPC bugfixes\n - RCU splat fix\n - swait races fix\n - pointless userspace-triggerable BUG() fix\n - misc fixes for KVM_RUN corner cases\n - nested virt correctness fixes + one host DoS\n - some cleanups\n - clang build fix\n - fix AMD AVIC with default QEMU command line options\n - x86 bugfixes\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (28 commits)\n  kvm: nVMX: Handle deferred early VMLAUNCH/VMRESUME failure properly\n  kvm: vmx: Handle VMLAUNCH/VMRESUME failure properly\n  kvm: nVMX: Remove nested_vmx_succeed after successful VM-entry\n  kvm,mips: Fix potential swait_active() races\n  kvm,powerpc: Serialize wq active checks in ops->vcpu_kick\n  kvm: Serialize wq active checks in kvm_vcpu_wake_up()\n  kvm,x86: Fix apf_task_wake_one() wq serialization\n  kvm,lapic: Justify use of swait_active()\n  kvm,async_pf: Use swq_has_sleeper()\n  sched/wait: Add swq_has_sleeper()\n  KVM: VMX: Do not BUG() on out-of-bounds guest IRQ\n  KVM: Don't accept obviously wrong gsi values via KVM_IRQFD\n  kvm: nVMX: Don't allow L2 to access the hardware CR8\n  KVM: trace events: update list of exit reasons\n  KVM: async_pf: Fix #DF due to inject \"Page not Present\" and \"Page Ready\" exceptions simultaneously\n  KVM: X86: Don't block vCPU if there is pending exception\n  KVM: SVM: Add irqchip_split() checks before enabling AVIC\n  KVM: Add struct kvm_vcpu pointer parameter to get_enable_apicv()\n  KVM: SVM: Refactor AVIC vcpu initialization into avic_init_vcpu()\n  KVM: x86: fix clang build\n  ... Merge tag 'firmware_removal-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull firmware removal from Greg KH:\n \"Many many years ago (at the kernel summit in Boston), we all came to\n  the agreement that the firmware/ tree should be dropped from the\n  kernel, and everyone use the linux-firmware package instead. For some\n  minor reason, David Woodhouse didn't send the pull request at that\n  point in time, and everyone forgot about this.\n\n  The topic came up in the hallway track at the Plumbers conference this\n  week, so here's a single patch that drops the whole firmware tree. The\n  last firmware update was back in 2013, and all distros have been using\n  linux-firmware instead since at least that year, if not before. The\n  only commits to that directory since 2013 was some kbuild fixups for\n  various build tool issues.\n\n  So lets finally drop this, we don't need to lug them around in the\n  kernel source tree anymore, especially as no one wants or uses them.\n\n  This has passed build testing with 0-day, I don't think it made it\n  into linux-next this week, but I figured it was good to get in before\n  4.14-rc1 was out\"\n\n* tag 'firmware_removal-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  firmware: delete in-kernel firmware Merge tag 'nios2-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/lftan/nios2\n\nPull arch/nios2 update from Ley Foon Tan.\n\n* tag 'nios2-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/lftan/nios2:\n  nios2: time: Read timer in get_cycles only if initialized\n  nios2: add earlycon support to 3c120 devboard DTS Merge tag 'powerpc-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fix from Michael Ellerman:\n \"Just one fix, for the handling of alignment interrupts on dcbz\n  instructions.\n\n  Thanks to Paul Mackerras, Christian Zigotzky, Michal Sojka\"\n\n* tag 'powerpc-4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc: Fix handling of alignment interrupt on dcbz instruction Merge tag 'for-linus-4.14-ofs2' of git://git.kernel.org/pub/scm/linux/kernel/git/hubcap/linux\n\nPull orangefs updates from Mike Marshall:\n \"Some cleanups and a big bug fix for ACLs.\n\n  When I was reviewing Jan Kara's ACL patch, I realized that Orangefs\n  ACL code was busted, not just in the kernel module, but in the server\n  as well. I've been working on the code in the server mostly, but\n  here's one kernel patch, there will be more\"\n\n* tag 'for-linus-4.14-ofs2' of git://git.kernel.org/pub/scm/linux/kernel/git/hubcap/linux:\n  orangefs: Adjust three checks for null pointers\n  orangefs: Use kcalloc() in orangefs_prepare_cdm_array()\n  orangefs: Delete error messages for a failed memory allocation in five functions\n  orangefs: constify xattr_handler structure\n  orangefs: don't call filemap_write_and_wait from fsync\n  orangefs: off by ones in xattr size checks\n  orangefs: documentation clean up\n  orangefs: react properly to posix_acl_update_mode's aftermath.\n  orangefs: Don't clear SGID when inheriting ACLs Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Mostly tooling fixes, plus an Intel RAPL PMU driver fix\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf tests x86: Fix stack map lookup in dwarf unwind test\n  perf x86: Fix perf to use non-executable stack, again\n  perf tools: Remove extra '/' character in events file path\n  perf machine: Search for modules in %s/lib/modules/%s\n  perf tests: Add static build make test\n  perf tools: Fix bfd dependency libraries detection\n  perf tools: Use LDFLAGS instead of ALL_LDFLAGS\n  perf/x86: Fix RAPL rdmsrl_safe() usage\n  tools lib traceevent: Fix memory leak in pretty_print()\n  tools lib traceevent: Fix backward compatibility macros for pevent filter enums\n  perf tools: Disable libdw unwind for all but x86 arch\n  perf tests x86: Fix memory leak in sample_ustack() Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fix from Guenter Roeck:\n \"Fix Tjmax detection in coretemp driver\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  Revert \"hwmon: (coretemp) Refine TjMax detection\" Merge git://git.kvack.org/~bcrl/aio-fixes\n\nPull aio fixes from Ben LaHaise:\n \"The first change from Anatol fixes a regression where io_destroy() no\n  longer waits for outstanding aios to complete.  The second corrects a\n  memory leak in an error path for vectored aio operations.\n\n  Both of these bug fixes should be queued up for stable as well\"\n\n* git://git.kvack.org/~bcrl/aio-fixes:\n  aio: fix potential leak in aio_run_iocb().\n  aio: block io_destroy() until all context requests are completed Merge tag 'sound-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A few collections of small eggs that have been gathered during the\n  Easter holidays.  Mostly small ASoC fixes, with a HD-audio quirk and a\n  workaround for Nvidia controller\"\n\n* tag 'sound-3.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Suppress CORBRP clear on Nvidia controller chips\n  ALSA: hda - add headset mic detect quirk for a Dell laptop\n  ASoC: jz4740: Remove Makefile entry for removed file\n  ASoC: Intel: Fix audio crash due to negative address offset\n  ASoC: dapm: Fix widget double free with auto-disable DAPM kcontrol\n  ASoC: Intel: Fix incorrect sizeof() in sst_hsw_stream_get_volume()\n  ASoC: Intel: some incorrect sizeof() usages\n  ASoC: cs42l73: Convert to use devm_gpio_request_one\n  ASoC: cs42l52: Convert to use devm_gpio_request_one\n  ASoC: tlv320aic31xx: document that the regulators are mandatory\n  ASoC: fsl_spdif: Fix wrong OFFSET of STC_SYSCLK_DIV\n  ASoC: alc5623: Fix regmap endianness\n  ASoC: tlv320aic3x: fix shared reset pin for DT\n  ASoC: rsnd: fix clock prepare/unprepare Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Smattering of fixes, i915, exynos, tegra, msm, vmwgfx.\n\n  A bit of framebuffer reference counting fallout fixes, i915 GM45\n  regression fix, DVI regression fix, vmware info leak between processes\n  fix\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/exynos: use %pad for dma_addr_t\n  drm/exynos: dsi: use IS_ERR() to check devm_ioremap_resource() results\n  MAINTAINERS: update maintainer entry for Exynos DP driver\n  drm/exynos: balance framebuffer refcount\n  drm/i915: Move all ring resets before setting the HWS page\n  drm/i915: Don't WARN nor handle unexpected hpd interrupts on gmch platforms\n  drm/msm/mdp4: cure for the cursor blues (v2)\n  drm/msm: default to XR24 rather than AR24\n  drm/msm: fix memory leak\n  drm/tegra: restrict plane loops to legacy planes\n  drm/i915: Allow full PPGTT with param override\n  drm/i915: Discard BIOS framebuffers too small to accommodate chosen mode\n  drm/vmwgfx: Make sure user-space can't DMA across buffer object boundaries v2\n  drm/i915: get power domain in case the BIOS enabled eDP VDD\n  drm/i915: Don't check gmch state on inherited configs\n  drm/i915: Allow user modes to exceed DVI 165MHz limit Merge tag 'trace-fixes-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull ftrace bugfix from Steven Rostedt:\n \"Takao Indoh reported that he was able to cause a ftrace bug while\n  loading a module and enabling function tracing at the same time.\n\n  He uncovered a race where the module when loaded will convert the\n  calls to mcount into nops, and expects the module's text to be RW.\n  But when function tracing is enabled, it will convert all kernel text\n  (core and module) from RO to RW to convert the nops to calls to ftrace\n  to record the function.  After the convertion, it will convert all the\n  text back from RW to RO.\n\n  The issue is, it will also convert the module's text that is loading.\n  If it converts it to RO before ftrace does its conversion, it will\n  cause ftrace to fail and require a reboot to fix it again.\n\n  This patch moves the ftrace module update that converts calls to\n  mcount into nops to be done when the module state is still\n  MODULE_STATE_UNFORMED.  This will ignore the module when the text is\n  being converted from RW back to RO\"\n\n* tag 'trace-fixes-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  ftrace/module: Hardcode ftrace_module_init() call into load_module() Merge tag 'dt-for-linus' of git://git.secretlab.ca/git/linux\n\nPull devicetree bug fixes from Grant Likely:\n \"These are some important bug fixes that need to get into v3.15.\n\n  This branch contains a pair of important bug fixes for the DT code:\n\n   - Fix some incorrect binding property names before they enter common\n     usage\n\n   - Fix bug where some platform devices will be unable to get their\n     interrupt number when they depend on an interrupt controller that\n     is not available at device creation time.  This is a problem\n     causing mainline to fail on a number of ARM platforms\"\n\n* tag 'dt-for-linus' of git://git.secretlab.ca/git/linux:\n  of/irq: do irq resolution in platform_get_irq\n  of: selftest: add deferred probe interrupt test\n  dt: Fix binding typos in clock-names and interrupt-names Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc fixes from Ben Herrenschmidt:\n \"Here is a bunch of post-merge window fixes that have been accumulating\n  in patchwork while I was on vacation or buried under other stuff last\n  week.\n\n  We have the now usual batch of LE fixes from Anton (sadly some new\n  stuff that went into this merge window had endian issues, we'll try to\n  make sure we do better next time)\n\n  Some fixes and cleanups to the new 24x7 performance monitoring stuff\n  (mostly typos and cleaning up printk's)\n\n  A series of fixes for an issue with our runlatch bit, which wasn't set\n  properly for offlined threads/cores and under KVM, causing potentially\n  some counters to misbehave along with possible power management\n  issues.\n\n  A fix for kexec nasty race where the new kernel wouldn't \"see\" the\n  secondary processors having reached back into firmware in time.\n\n  And finally a few other misc (and pretty simple) bug fixes\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (33 commits)\n  powerpc/4xx: Fix section mismatch in ppc4xx_pci.c\n  ppc/kvm: Clear the runlatch bit of a vcpu before napping\n  ppc/kvm: Set the runlatch bit of a CPU just before starting guest\n  ppc/powernv: Set the runlatch bits correctly for offline cpus\n  powerpc/pseries: Protect remove_memory() with device hotplug lock\n  powerpc: Fix error return in rtas_flash module init\n  powerpc: Bump BOOT_COMMAND_LINE_SIZE to 2048\n  powerpc: Bump COMMAND_LINE_SIZE to 2048\n  powerpc: Rename duplicate COMMAND_LINE_SIZE define\n  powerpc/perf/hv-24x7: Catalog version number is be64, not be32\n  powerpc/perf/hv-24x7: Remove [static 4096], sparse chokes on it\n  powerpc/perf/hv-24x7: Use (unsigned long) not (u32) values when calling plpar_hcall_norets()\n  powerpc/perf/hv-gpci: Make device attr static\n  powerpc/perf/hv_gpci: Probe failures use pr_debug(), and padding reduced\n  powerpc/perf/hv_24x7: Probe errors changed to pr_debug(), padding fixed\n  powerpc/mm: Fix tlbie to add AVAL fields for 64K pages\n  powerpc/powernv: Fix little endian issues in OPAL dump code\n  powerpc/powernv: Create OPAL sglist helper functions and fix endian issues\n  powerpc/powernv: Fix little endian issues in OPAL error log code\n  powerpc/powernv: Fix little endian issues with opal_do_notifier calls\n  ... mm: don't pointlessly use BUG_ON() for sanity check\n\nBUG_ON() is a big hammer, and should be used _only_ if there is some\nmajor corruption that you cannot possibly recover from, making it\nimperative that the current process (and possibly the whole machine) be\nterminated with extreme prejudice.\n\nThe trivial sanity check in the vmacache code is *not* such a fatal\nerror.  Recovering from it is absolutely trivial, and using BUG_ON()\njust makes it harder to debug for no actual advantage.\n\nTo make matters worse, the placement of the BUG_ON() (only if the range\ncheck matched) actually makes it harder to hit the sanity check to begin\nwith, so _if_ there is a bug (and we just got a report from Srivatsa\nBhat that this can indeed trigger), it is harder to debug not just\nbecause the machine is possibly dead, but because we don't have better\ncoverage.\n\nBUG_ON() must *die*.  Maybe we should add a checkpatch warning for it,\nbecause it is simply just about the worst thing you can ever do if you\nhit some \"this cannot happen\" situation.\n\nReported-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>\nCc: Davidlohr Bueso <davidlohr@hp.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Linux 3.15-rc3 Merge branch 'safe-dirty-tlb-flush'\n\nThis merges the patch to fix possible loss of dirty bit on munmap() or\nmadvice(DONTNEED).  If there are concurrent writers on other CPU's that\nhave the unmapped/unneeded page in their TLBs, their writes to the page\ncould possibly get lost if a third CPU raced with the TLB flush and did\na page_mkclean() before the page was fully written.\n\nAdmittedly, if you unmap() or madvice(DONTNEED) an area _while_ another\nthread is still busy writing to it, you deserve all the lost writes you\ncould get.  But we kernel people hold ourselves to higher quality\nstandards than \"crazy people deserve to lose\", because, well, we've seen\npeople do all kinds of crazy things.\n\nSo let's get it right, just because we can, and we don't have to worry\nabout it.\n\n* safe-dirty-tlb-flush:\n  mm: split 'tlb_flush_mmu()' into tlb flushing and memory freeing parts Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs fixes from Chris Mason.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: limit the path size in send to PATH_MAX\n  Btrfs: correctly set profile flags on seqlock retry\n  Btrfs: use correct key when repeating search for extent item\n  Btrfs: fix inode caching vs tree log\n  Btrfs: fix possible memory leaks in open_ctree()\n  Btrfs: avoid triggering bug_on() when we fail to start inode caching task\n  Btrfs: move btrfs_{set,clear}_and_info() to ctree.h\n  btrfs: replace error code from btrfs_drop_extents\n  btrfs: Change the hole range to a more accurate value.\n  btrfs: fix use-after-free in mount_subvol() Merge branch 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull arm fixes from Russell King:\n \"A number of fixes for the PJ4/iwmmxt changes which arm-soc forced me\n  to take during the merge window.  This stuff should have been better\n  tested and sorted out *before* the merge window\"\n\n* 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  ARM: 8042/1: iwmmxt: allow to build iWMMXt on Marvell PJ4B\n  ARM: 8041/1: pj4: fix cpu_is_pj4 check\n  ARM: 8040/1: pj4: properly detect existence of iWMMXt coprocessor\n  ARM: 8039/1: pj4: enable iWMMXt only if CONFIG_IWMMXT is set\n  ARM: 8038/1: iwmmxt: explicitly check for supported architectures Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n - compat renameat2 syscall wiring and __NR_compat_syscalls fix\n - TLB fix for transparent huge pages following switch to generic\n   mmu_gather\n - spinlock initialisation for init_mm's context\n - move of_clk_init() earlier\n - Kconfig duplicate entry fix\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: init: Move of_clk_init to time_init\n  arm64: initialize spinlock for init_mm's context\n  arm64: debug: remove noisy, pointless warning\n  arm64: mm: Add THP TLB entries to general mmu_gather\n  arm64: add renameat2 compat syscall\n  ARM64: Remove duplicated Kconfig entry for \"kernel/power/Kconfig\"\n  arm64: __NR_compat_syscalls fix Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"A slighlty large fix for a subtle issue in the CPU hotplug code of\n  certain ARM SoCs, where the not yet online cpu needs to setup the cpu\n  local timer and needs to set the interrupt affinity to itself.\n  Setting interrupt affinity to a not online cpu is prohibited and\n  therefor the timer interrupt ends up on the wrong cpu, which leads to\n  nasty complications.\n\n  The SoC folks tried to hack around that in the SoC code in some more\n  than nasty ways.  The proper solution is to have a way to enforce the\n  affinity setting to a not online cpu.  The core patch to the genirq\n  code provides that facility and the follow up patches make use of it\n  in the GIC interrupt controller and the exynos timer driver.\n\n  The change to the core code has no implications to existing users,\n  except for the rename of the locked function and therefor the\n  necessary fixup in mips/cavium.  Aside of that, no runtime impact is\n  possible, as none of the existing interrupt chips implements anything\n  which depends on the force argument of the irq_set_affinity()\n  callback\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource: Exynos_mct: Register clock event after request_irq()\n  clocksource: Exynos_mct: Use irq_force_affinity() in cpu bringup\n  irqchip: Gic: Support forced affinity setting\n  genirq: Allow forcing cpu affinity of interrupts Merge tag 'tty-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial fixes from Greg KH:\n \"Here are a few tty/serial fixes for 3.15-rc3 that resolve a number of\n  reported issues in the 8250 and samsung serial drivers, as well as a\n  character loss fix for the tty core that was caused by the lock\n  removal patches a release ago\"\n\n* tag 'tty-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  serial_core: fix uart PORT_UNKNOWN handling\n  serial: samsung: Change barrier() to cpu_relax() in console output\n  serial: samsung: don't check config for every character\n  serial: samsung: Use the passed in \"port\", fixing kgdb w/ no console\n  serial: 8250: Fix thread unsafe __dma_tx_complete function\n  8250_core: Fix unwanted TX chars write\n  tty: Fix race condition between __tty_buffer_request_room and flush_to_ldisc Merge tag 'staging-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging / IIO driver fixes from Greg KH:\n \"Here are some small staging and IIO driver fixes for 3.15-rc3.\n\n  Nothing major at all, just some assorted issues that people have\n  reported\"\n\n* tag 'staging-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: comedi: usbdux: bug fix for accessing 'ao_chanlist' in private data\n  iio: adc: mxs-lradc: fix warning when buidling on avr32\n  iio: cm36651: Fix i2c client leak and possible NULL pointer dereference\n  iio: querying buffer scan_mask should return 0/1\n  staging:iio:ad2s1200 fix a missing break\n  iio: adc: at91_adc: correct default shtim value\n  ARM: at91: at91sam9260: change at91_adc name\n  ARM: at91: at91sam9g45: change at91_adc name\n  iio: cm32181: Fix read integration time function\n  iio: adc: at91_adc: Repair broken platform_data support Merge tag 'driver-core-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fixes from Greg KH:\n \"Here are some kernfs fixes for 3.15-rc3 that resolve some reported\n  problems.  Nothing huge, but all needed\"\n\n* tag 'driver-core-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  s390/ccwgroup: Fix memory corruption\n  kernfs: add back missing error check in kernfs_fop_mmap()\n  kernfs: fix a subdir count leak Merge tag 'usb-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a number of USB fixes for 3.15-rc3.  The majority are gadget\n  fixes, as we didn't get any of those in for 3.15-rc2.  The others are\n  all over the place, and there's a number of new device id addtions as\n  well.\"\n\n* tag 'usb-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (35 commits)\n  usb: option: add and update a number of CMOTech devices\n  usb: option: add Alcatel L800MA\n  usb: option: add Olivetti Olicard 500\n  usb: qcserial: add Sierra Wireless MC7305/MC7355\n  usb: qcserial: add Sierra Wireless MC73xx\n  usb: qcserial: add Sierra Wireless EM7355\n  USB: io_ti: fix firmware download on big-endian machines\n  usb/xhci: fix compilation warning when !CONFIG_PCI && !CONFIG_PM\n  xhci: extend quirk for Renesas cards\n  xhci: Switch Intel Lynx Point ports to EHCI on shutdown.\n  usb: xhci: Prefer endpoint context dequeue pointer over stopped_trb\n  phy: core: make NULL a valid phy reference if !CONFIG_GENERIC_PHY\n  phy: fix kernel oops in phy_lookup()\n  phy: restore OMAP_CONTROL_PHY dependencies\n  phy: exynos: fix building as a module\n  USB: serial: fix sysfs-attribute removal deadlock\n  usb: wusbcore: fix panic in wusbhc_chid_set\n  usb: wusbcore: convert nested lock to use spin_lock instead of spin_lock_irq\n  uwb: don't call spin_unlock_irq in a USB completion handler\n  usb: chipidea: coordinate usb phy initialization for different phy type\n  ... Merge tag 'pm+acpi-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These include a fix for a recent ACPI regression related to device\n  notifications, intel_idle fix related to IvyTown support, fix for a\n  buffer size issue in ACPICA, PM core fix related to the \"freeze\" sleep\n  state, four fixes for various types of breakage in cpufreq drivers, a\n  PNP workaround for a wrong memory region size in ACPI tables, and a\n  fix and cleanup for the ACPI tools Makefile.\n\n  Specifics:\n\n   - Fix for broken ACPI notifications on some systems caused by a\n     recent ACPI hotplug commit that blocked the propagation of unknown\n     type notifications to device drivers inadvertently.\n\n   - intel_idle fix to make the IvyTown C-states handling (added\n     recently) work as intended which now is broken due to missing\n     braces.  From Christoph Jaeger.\n\n   - ACPICA fix to make it allocate buffers of the right sizes for the\n     Generic Serial Bus operation region access.  From Lv Zheng.\n\n   - PM core fix unblocking cpuidle before entering the \"freeze\" sleep\n     state which causes that state to be able to actually save more\n     energy than runtime idle.\n\n   - Configuration and build fixes for the highbank and powernv cpufreq\n     drivers from Kefeng Wang and Srivatsa S Bhat.\n\n   - Coccinelle warning fix related to error pointers for the unicore32\n     cpufreq driver from Duan Jiong.\n\n   - Integer overflow fix for the ppc-corenet cpufreq driver from Geert\n     Uytterhoeven.\n\n   - Workaround for BIOSes that don't report the entire Intel MCH area\n     in their ACPI tables from Bjorn Helgaas.\n\n   - ACPI tools Makefile fix and cleanup from Thomas Renninger\"\n\n* tag 'pm+acpi-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / notify: Do not block unknown type notifications in root handler\n  PNP: Work around BIOS defects in Intel MCH area reporting\n  cpufreq: highbank: fix ARM_HIGHBANK_CPUFREQ dependency warning\n  cpufreq: ppc: Fix integer overflow in expression\n  cpufreq, powernv: Fix build failure on UP\n  cpufreq: unicore32: replace IS_ERR and PTR_ERR with PTR_ERR_OR_ZERO\n  PM / suspend: Make cpuidle work in the \"freeze\" state\n  intel_idle: fix IVT idle state table setting\n  ACPICA: Fix buffer allocation issue for generic_serial_bus region accesses.\n  tools/power/acpi: Minor bugfixes mm: split 'tlb_flush_mmu()' into tlb flushing and memory freeing parts\n\nThe mmu-gather operation 'tlb_flush_mmu()' has done two things: the\nactual tlb flush operation, and the batched freeing of the pages that\nthe TLB entries pointed at.\n\nThis splits the operation into separate phases, so that the forced\nbatched flushing done by zap_pte_range() can now do the actual TLB flush\nwhile still holding the page table lock, but delay the batched freeing\nof all the pages to after the lock has been dropped.\n\nThis in turn allows us to avoid a race condition between\nset_page_dirty() (as called by zap_pte_range() when it finds a dirty\nshared memory pte) and page_mkclean(): because we now flush all the\ndirty page data from the TLB's while holding the pte lock,\npage_mkclean() will be held up walking the (recently cleaned) page\ntables until after the TLB entries have been flushed from all CPU's.\n\nReported-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nTested-by: Dave Hansen <dave.hansen@intel.com>\nAcked-by: Hugh Dickins <hughd@google.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Russell King - ARM Linux <linux@arm.linux.org.uk>\nCc: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fixes from Guenter Roeck:\n - ltc2945: Don't unecessarily crash kernel on implementation error\n - vexpress: Fix 'name' and 'label' attributes\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (ltc2945) Don't crash the kernel unnecessarily\n  hwmon: (vexpress) Avoid creating non-existing attributes\n  hwmon: (vexpress) Use legal hwmon device names Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"This is a set of seven fixes, three (hpsa) and free'd command\n  references correcting bugs in the last round of updates and the\n  remaining four correcting problems within the SCSI error handler that\n  was causing a deadlock within USB\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  [SCSI] More USB deadlock fixes\n  [SCSI] Fix USB deadlock caused by SCSI error handling\n  [SCSI] Fix command result state propagation\n  [SCSI] Fix spurious request sense in error handling\n  [SCSI] don't reference freed command in scsi_prep_return\n  [SCSI] don't reference freed command in scsi_init_sgtable\n  [SCSI] hpsa: fix NULL dereference in hpsa_put_ctlr_into_performant_mode() Merge tag 'fixes-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Arnd Bergmann:\n \"Since we didn't get around to collect fixes in time for -rc2 over the\n  easter vacation, this one is unfortunately a bit larger than we'd like\n  for an -rc3 merge.\n\n  A large set of the changes is in the device tree sources, so I'm\n  splitting out the description between code changes and DT changes.\n  Aside from omap and versatile express, the actual code bugs are and\n  trivial.  Here is an overview:\n\n  imx:\n   - fix video clock settings\n   - fix one clock refcounting bug\n\n  omap:\n   - update defconfig for renamed USB PHY driver\n   - fix error handling in gpmc\n   - fix N900 video initialization regression\n   - fix reression in hwmod code from missing braces\n   - fix am43xx and omap3 clocks\n   - remove bogus write to voltage control register\n\n  pxa:\n   - fix build regression from 3.13 header cleanup\n\n  rockchip:\n   - fix a misleading printk string\n\n  shmobile:\n   - fix incorrect sound setting on multiple machines\n\n  spear:\n   - remove incorrect __init section annotation\n\n  tegra:\n   - remove a stale Kconfig entry\n\n  u300:\n   - update defconfig\n\n  ux500:\n   - enable common wireless and sensor drivers in defconfig\n   - more defconfig updates\n\n  vexpress:\n   - fix voltage calculation for opp\n   - fix reboot hang and warning\n   - fix out-of-bounds array access\n   - improve error handling in clock driver\n\n  overall:\n   - always select CLKSRC_OF in multiplatform builds\n\n  And these are the devicetree related changes:\n\n  imx:\n   - add missing #clock-cell properties\n   - fix pinctrl setting in imx6sl-evk\n   - fix video endpoint on imx53\n   - remove obsolete lvds-channel nodes (multiple patches)\n   - add missing second stmpe node\n   - fix usb host mode on dmo-edmqmx6 (multiple patches)\n   - fix gic node #address-cells to match usage\n   - add missing legacy IRQ map for PCIe\n   - fix microsom pincontrol setting for rgmii\n   - fix fatal typo in touchscreen DT usage for mx5\n   - list all RAM present on m53evk and mx53qsb\n\n  omap:\n   - fix bug in DT handling of gpmc external bus\n   - add DT for older revision of beagleboard\n   - fix regression after DT node name fixes\n   - remove obsolete properties for gpmc\n   - fix pinmux comment to match DT it refers to\n   - fix newly added dra7xx clock node data\n   - add missing clock for USB PHY\n\n  mvebu:\n   - add missing clock for mdio node\n   - fix nonstandard vendor prefixes on i2c nodes\n\n  rockchip:\n   - fix pin control setting for uart\n\n  shmobile:\n   - fix typo in DT data for pin control (multiple patches)\n   - fix gic node #address-cells to match usage\n\n  tegra:\n   - fix clock and uart DT representation to match hardware\n\n  zynq:\n   - add DT nodes for newly added driver\n   - add DT properties required for cpufreq-ondemand\n\n  overall:\n   - restore alphabetic order in Makefile\n   - grammar fixes in bindings\"\n\n* tag 'fixes-3.15-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (66 commits)\n  ARM: vexpress/TC2: Convert OPP voltage to uV before storing\n  power/reset: vexpress: Fix restart/power off operation\n  dt: tegra: remove non-existent clock IDs\n  clk: tegra: remove non-existent clocks\n  ARM: tegra: remove UART5/UARTE from tegra124.dtsi\n  ARM: tegra: remove TEGRA_EMC_SCALING_ENABLE\n  ARM: Tidy up DTB Makefile entries\n  ARM: fix missing CLKSRC_OF on multi-platform\n  ARM: spear: add __init to spear_clocksource_init()\n  ARM: pxa: hx4700.h: include \"irqs.h\" for PXA_NR_BUILTIN_GPIO\n  arm/mach-vexpress: array accessed out of bounds\n  clk: vexpress: NULL dereference on error path\n  ARM: OMAP2+: Fix GPMC remap for devices using an offset\n  ARM: zynq: dt: Add I2C nodes to Zynq device tree\n  ARM: zynq: DT: Add 'clock-latency' property\n  ARM: OMAP2+: Fix oops for GPMC free\n  ARM: dts: Add support for the BeagleBoard xM A/B\n  ARM: dts: Grammar /that will/it will/\n  ARM: dts: Grammar /is uses/ is used/\n  ARM: OMAP2+: Fix config name for USB3 PHY\n  ... Merge tag 'locks-v3.15-2' of git://git.samba.org/jlayton/linux\n\nPull file locking fixes from Jeff Layton:\n \"File locking related bugfixes for v3.15 (pile #2)\n\n   - fix for a long-standing bug in __break_lease that can cause soft\n     lockups\n   - renaming of file-private locks to \"open file description\" locks,\n     and the command macros to more visually distinct names\n\n  The fix for __break_lease is also in the pile of patches for which\n  Bruce sent a pull request, but I assume that your merge procedure will\n  handle that correctly.\n\n  For the other patches, I don't like the fact that we need to rename\n  this stuff at this late stage, but it should be settled now\n  (hopefully)\"\n\n* tag 'locks-v3.15-2' of git://git.samba.org/jlayton/linux:\n  locks: rename FL_FILE_PVT and IS_FILE_PVT to use \"*_OFDLCK\" instead\n  locks: rename file-private locks to \"open file description locks\"\n  locks: allow __break_lease to sleep even when break_time is 0 Merge branch 'for-3.15' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd bugfixes from Bruce Fields:\n \"Three small nfsd bugfixes (including one locks.c fix for a bug\n  triggered only from nfsd).\n\n  Jeff's patches are for long-existing problems that became easier to\n  trigger since the addition of vfs delegation support\"\n\n* 'for-3.15' of git://linux-nfs.org/~bfields/linux:\n  Revert \"nfsd4: fix nfs4err_resource in 4.1 case\"\n  nfsd: set timeparms.to_maxval in setup_callback_client\n  locks: allow __break_lease to sleep even when break_time is 0 Merge tag 'regulator-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"A couple of things here:\n\n   - Fixes for pbias that didn't make it in during the merge window due\n     to the driver coming in via MMC.  The conversion to use helpers is\n     a fix as it implements list_voltage() which the main user (MMC)\n     relies on for correct functioning.\n   - Change the !REGULATOR stub for optional regulators to return an\n     error rather than a dummy; this is more in keeping with the\n     intended use of optional regulators and fixes some issues seen MMC\n     where it got confused by a dummy being provided\"\n\n* tag 'regulator-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: core: Return error in get optional stub\n  regulator: pbias: Convert to use regmap helper functions\n  regulator: pbias: Fix is_enabled callback implementation Merge tag 'spi-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fixes from Mark Brown:\n \"A few driver specific fixes here:\n\n   - SH HSPI was dealing with its clocks incorrectly which meant it\n     didn't work on some SoCs, fixing this also requires a small fix to\n     one of the SoC clock trees to avoid breaking existing users.\n   - The SiRF driver appears to have had several quality problems, it's\n     fairly new and not widely used so this isn't too worrying.\n   - A brute force fix for excessive locking in the Atmel driver, it\n     needs further investigation but this deals with the immediate\n     issue.\n   - A build fix for the Blackfin driver\"\n\n* tag 'spi-v3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi: atmel: Fix scheduling while atomic bug\n  spi: sh-hspi: Do not specifically request shyway_clk clock\n  ARM: shmobile: r8a7778: Use clks as MSTP007 parent\n  spi: sirf: make GPIO chipselect function work well\n  spi: sirf: set SPI controller in RISC IO chipselect mode\n  spi: sirf: correct TXFIFO empty interrupt status bit\n  spi: bfin5xx: fix build error Merge branch 'fixes_for_v3.15' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping\n\nPull dma-mapping fix from Marek Szyprowski:\n \"A small fix for dma-mapping subsystem for ARM\"\n\n* 'fixes_for_v3.15' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping:\n  arm: dma-mapping: Fix mapping size value Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Dan updated tag allocation to accomodate devices which choke when tags\n  jump back and forth.  Quite a few ahci MSI related fixes.  A couple\n  config dependency fixes and other misc fixes\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  libata/ahci: accommodate tag ordered controllers\n  ahci: Do not receive interrupts sent by dummy ports\n  ahci: Use pci_enable_msi_exact() instead of pci_enable_msi_range()\n  ahci: Ensure \"MSI Revert to Single Message\" mode is not enforced\n  ahci: do not request irq for dummy port\n  pata_samsung_cf: fix ata_host_activate() failure handling\n  pata_arasan_cf: fix ata_host_activate() failure handling\n  ata: fix i.MX AHCI driver dependencies\n  pata_at91: fix ata_host_activate() failure handling\n  libata: Update queued trim blacklist for M5x0 drives\n  libata: make AHCI_XGENE depend on PHY_XGENE Merge branch 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"Various fixes and post-merge window updates.  Included here are:\n   - ensure Kconfig things which should be sorted remain sorted\n   - fix three big-endian bugs which crept in during the last merge\n     window\n   - add the renameat2 syscall\n   - fix big.LITTLE switcher initialisation checks\n   - fix kdump vmcore for LPAE kernels\"\n\n* 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  ARM: add renameat2 syscall\n  ARM: keep arch/arm/Kconfig and arch/arm/mm/Kconfig select entries sorted\n  ARM: 8033/1: fix big endian __pv_phys_pfn_offset size related issue\n  ARM: 8032/1: bL_switcher: fix validation check before its activation\n  ARM: 8030/1: ARM : kdump : add arch_crash_save_vmcoreinfo\n  ARM: 8027/1: fix do_div() bug in big-endian systems\n  ARM: 8026/1: Fix emulation of multiply accumulate instructions\n  ARM: 8024/1: Keep DEBUG_UART_{PHYS,VIRT} entries sorted Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n \"The main change is that we now publish \"firmware ID\" for the serio\n  devices to help userspace figure out the kind of touchpads it is\n  dealing with: i8042 will export PS/2 port's PNP IDs as firmware IDs.\n\n  You will also get more quirks for Synaptics touchpads in various\n  Lenovo laptops, a change to elantech driver to recognize even more\n  models, and fixups to wacom and couple other drivers\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: elantech - add support for newer elantech touchpads\n  Input: soc_button_array - fix a crash during rmmod\n  Input: synaptics - add min/max quirk for ThinkPad T431s, L440, L540, S1 Yoga and X1\n  Input: synaptics - report INPUT_PROP_TOPBUTTONPAD property\n  Input: Add INPUT_PROP_TOPBUTTONPAD device property\n  Input: i8042 - add firmware_id support\n  Input: serio - add firmware_id sysfs attribute\n  Input: wacom - handle 1024 pressure levels in wacom_tpc_pen\n  Input: wacom - references to 'wacom->data' should use 'unsigned char*'\n  Input: wacom - override 'pressure_max' with value from HID_USAGE_PRESSURE\n  Input: wacom - use full 32-bit HID Usage value in switch statement\n  Input: wacom - missed the last bit of expresskey for DTU-1031\n  Input: ads7846 - fix device usage within attribute show\n  Input: da9055_onkey - remove use of regmap_irq_get_virq() Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull radeon drm fixes from Dave Airlie:\n \"This is just radeon fixes, primarily the two pll fix and the aux fix,\n  it also disables dpm on rv770 gpus, fixes driver reloading, and fixes\n  two issues with runtime PM on some GPUS\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: don't allow runpm=1 on systems with out ATPX\n  drm/radeon: fix ATPX detection on non-VGA GPUs\n  drm/radeon/pm: don't walk the crtc list before it has been initialized (v2)\n  drm/radeon: properly unregister hwmon interface (v2)\n  drm/radeon: fix count in cik_sdma_ring_test()\n  drm/radeon/aux: fix hpd assignment for aux bus\n  drm/radeon: improve PLL limit handling in post div calculation\n  drm/radeon: use fixed PPL ref divider if needed\n  drm/radeon: disable dpm on rv770 by default mm: make fixup_user_fault() check the vma access rights too\n\nfixup_user_fault() is used by the futex code when the direct user access\nfails, and the futex code wants it to either map in the page in a usable\nform or return an error.  It relied on handle_mm_fault() to map the\npage, and correctly checked the error return from that, but while that\ndoes map the page, it doesn't actually guarantee that the page will be\nmapped with sufficient permissions to be then accessed.\n\nSo do the appropriate tests of the vma access rights by hand.\n\n[ Side note: arguably handle_mm_fault() could just do that itself, but\n  we have traditionally done it in the caller, because some callers -\n  notably get_user_pages() - have been able to access pages even when\n  they are mapped with PROT_NONE.  Maybe we should re-visit that design\n  decision, but in the meantime this is the minimal patch. ]\n\nFound by Dave Jones running his trinity tool.\n\nReported-by: Dave Jones <davej@redhat.com>\nAcked-by: Hugh Dickins <hughd@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'gpio-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull gpio fixes from Linus Walleij:\n \"A small batch of GPIO fixes for the v3.15 series.  I expect more to\n  come in but I'm a bit behind on mail, might as well get these to you\n  right now:\n\n   - Change a crucial semantic ordering in the GPIO irqchip helpers\n\n   - Fix two nasty regressions in the ACPI gpiolib extensions\"\n\n* tag 'gpio-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio / ACPI: Prevent potential wrap of GPIO value on OpRegion read\n  gpio / ACPI: Don't crash on NULL chip->dev\n  gpio: set data first, then chip and handler Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 vdso fix from Peter Anvin:\n \"This is a single build fix for building with gold as opposed to GNU\n  ld.  It got queued up separately and was expected to be pushed during\n  the merge window, but it got left behind\"\n\n* 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, vdso: Make the vdso linker script compatible with Gold Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml\n\nPull UML fixes from Richard Weinberger:\n \"Assorted fixes for UML\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml:\n  um: Memory corruption on startup\n  um: Missing pipe handling\n  uml: Simplify tempdir logic. Merge tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 fixes from Ted Ts'o:\n \"These are regression and bug fixes for ext4.\n\n  We had a number of new features in ext4 during this merge window\n  (ZERO_RANGE and COLLAPSE_RANGE fallocate modes, renameat, etc.) so\n  there were many more regression and bug fixes this time around.  It\n  didn't help that xfstests hadn't been fully updated to fully stress\n  test COLLAPSE_RANGE until after -rc1\"\n\n* tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4: (31 commits)\n  ext4: disable COLLAPSE_RANGE for bigalloc\n  ext4: fix COLLAPSE_RANGE failure with 1KB block size\n  ext4: use EINVAL if not a regular file in ext4_collapse_range()\n  ext4: enforce we are operating on a regular file in ext4_zero_range()\n  ext4: fix extent merging in ext4_ext_shift_path_extents()\n  ext4: discard preallocations after removing space\n  ext4: no need to truncate pagecache twice in collapse range\n  ext4: fix removing status extents in ext4_collapse_range()\n  ext4: use filemap_write_and_wait_range() correctly in collapse range\n  ext4: use truncate_pagecache() in collapse range\n  ext4: remove temporary shim used to merge COLLAPSE_RANGE and ZERO_RANGE\n  ext4: fix ext4_count_free_clusters() with EXT4FS_DEBUG and bigalloc enabled\n  ext4: always check ext4_ext_find_extent result\n  ext4: fix error handling in ext4_ext_shift_extents\n  ext4: silence sparse check warning for function ext4_trim_extent\n  ext4: COLLAPSE_RANGE only works on extent-based files\n  ext4: fix byte order problems introduced by the COLLAPSE_RANGE patches\n  ext4: use i_size_read in ext4_unaligned_aio()\n  fs: disallow all fallocate operation on active swapfile\n  fs: move falloc collapse range check into the filesystem methods\n  ... Linux 3.15-rc2 Merge branch 'fixes' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull slave-dmaengine fixes from Vinod Koul:\n \"Back from long weekend here in India and now the time to send fixes\n  for slave dmaengine.\n   - Dan's fix of sirf xlate code\n   - Jean's fix for timberland\n   - edma fixes by Sekhar for SG handling and Yuan for changing init\n     call\"\n\n* 'fixes' of git://git.infradead.org/users/vkoul/slave-dma:\n  dma: fix eDMA driver as a subsys_initcall\n  dmaengine: sirf: off by one in of_dma_sirfsoc_xlate()\n  platform: Fix timberdale dependencies\n  dma: edma: fix incorrect SG list handling Merge tag 'iommu-fixes-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull iommu fixes from Joerg Roedel:\n \"Fixes for regressions:\n\n   - fix wrong IOMMU enumeration causing some SCSI device drivers\n     initialization failures\n   - ARM-SMMU fixes for a panic condition and a wrong return value\"\n\n* tag 'iommu-fixes-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/arm-smmu: fix panic in arm_smmu_alloc_init_pte\n  iommu/arm-smmu: Return 0 on unmap failure\n  iommu/vt-d: fix bug in matching PCI devices with DRHD/RMRR descriptors\n  iommu/vt-d: Fix get_domain_for_dev() handling of upstream PCIe bridges\n  iommu/vt-d: fix memory leakage caused by commit ea8ea46 Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf tooling fixes from Ingo Molnar:\n \"Three small tooling fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf tools: Improve error reporting\n  perf tools: Adjust symbols in VDSO\n  perf kvm: Fix 'Min time' counting in report command Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fix from Ingo Molnar:\n \"This fixes the preemption-count imbalance crash reported by Owen\n  Kibel\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mce: Fix CMCI preemption bugs Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Two fixes:\n\n   - a SCHED_DEADLINE task selection fix\n   - a sched/numa related lockdep splat fix\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched: Check for stop task appearance when balancing happens\n  sched/numa: Fix task_numa_free() lockdep splat Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Two kernel side fixes:\n\n   - an Intel uncore PMU driver potential crash fix\n   - a kprobes/perf-call-graph interaction fix\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/intel: Use rdmsrl_safe() when initializing RAPL PMU\n  kprobes/x86: Fix page-fault handling logic Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Unfortunately this contains no easter eggs, its a bit larger than I'd\n  like, but I included a patch that just moves code from one file to\n  another and I'd like to avoid merge conflicts with that later, so it\n  makes it seem worse than it is,\n\n  Otherwise:\n   - radeon: fixes to use new microcode to stabilise some cards, use\n     some common displayport code, some runtime pm fixes, pll regression\n     fixes\n   - i915: fix for some context oopses, a warn in a used path, backlight\n     fixes\n   - nouveau: regression fix\n   - omap: a bunch of fixes\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: (51 commits)\n  drm: bochs: drop unused struct fields\n  drm: bochs: add power management support\n  drm: cirrus: add power management support\n  drm: Split out drm_probe_helper.c from drm_crtc_helper.c\n  drm/plane-helper: Don't fake-implement primary plane disabling\n  drm/ast: fix value check in cbr_scan2\n  drm/nouveau/bios: fix a bit shift error introduced by 457e77b\n  drm/radeon/ci: make sure mc ucode is loaded before checking the size\n  drm/radeon/si: make sure mc ucode is loaded before checking the size\n  drm/radeon: improve PLL params if we don't match exactly v2\n  drm/radeon: memory leak on bo reservation failure. v2\n  drm/radeon: fix VCE fence command\n  drm/radeon: re-enable mclk dpm on R7 260X asics\n  drm/radeon: add support for newer mc ucode on CI (v2)\n  drm/radeon: add support for newer mc ucode on SI (v2)\n  drm/radeon: apply more strict limits for PLL params v2\n  drm/radeon: update CI DPM powertune settings\n  drm/radeon: fix runpm handling on APUs (v4)\n  drm/radeon: disable mclk dpm on R7 260X\n  drm/tegra: Remove gratuitous pad field\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull more networking fixes from David Miller:\n\n 1) Fix mlx4_en_netpoll implementation, it needs to schedule a NAPI\n    context, not synchronize it.  From Chris Mason.\n\n 2) Ipv4 flow input interface should never be zero, it should be\n    LOOPBACK_IFINDEX instead.  From Cong Wang and Julian Anastasov.\n\n 3) Properly configure MAC to PHY connection in mvneta devices, from\n    Thomas Petazzoni.\n\n 4) sys_recv should use SYSCALL_DEFINE.  From Jan Glauber.\n\n 5) Tunnel driver ioctls do not use the correct namespace, fix from\n    Nicolas Dichtel.\n\n 6) Fix memory leak on seccomp filter attach, from Kees Cook.\n\n 7) Fix lockdep warning for nested vlans, from Ding Tianhong.\n\n 8) Crashes can happen in SCTP due to how the auth_enable value is\n    managed, fix from Vlad Yasevich.\n\n 9) Wireless fixes from John W Linville and co.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (45 commits)\n  net: sctp: cache auth_enable per endpoint\n  tg3: update rx_jumbo_pending ring param only when jumbo frames are enabled\n  vlan: Fix lockdep warning when vlan dev handle notification\n  seccomp: fix memory leak on filter attach\n  isdn: icn: buffer overflow in icn_command()\n  ip6_tunnel: use the right netns in ioctl handler\n  sit: use the right netns in ioctl handler\n  ip_tunnel: use the right netns in ioctl handler\n  net: use SYSCALL_DEFINEx for sys_recv\n  net: mdio-gpio: Add support for separate MDI and MDO gpio pins\n  net: mdio-gpio: Add support for active low gpio pins\n  net: mdio-gpio: Use devm_ functions where possible\n  ipv4, route: pass 0 instead of LOOPBACK_IFINDEX to fib_validate_source()\n  ipv4, fib: pass LOOPBACK_IFINDEX instead of 0 to flowi4_iif\n  mlx4_en: don't use napi_synchronize inside mlx4_en_netpoll\n  net: mvneta: properly configure the MAC <-> PHY connection in all situations\n  net: phy: add minimal support for QSGMII PHY\n  sfc:On MCDI timeout, issue an FLR (and mark MCDI to fail-fast)\n  mwifiex: fix hung task on command timeout\n  mwifiex: process event before command response\n  ... Merge branch 'for-next' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"A set of 5 small cifs fixes\"\n\n* 'for-next' of git://git.samba.org/sfrench/cifs-2.6:\n  cif: fix dead code\n  cifs: fix error handling cifs_user_readv\n  fs: cifs: remove unused variable.\n  Return correct error on query of xattr on file with empty xattrs\n  cifs: Wait for writebacks to complete before attempting write. Merge tag 'char-misc-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver fixes from Greg KH:\n \"Here are a few driver fixes for char/misc drivers that resolve\n  reported issues.\n\n  All have been in linux-next successfully for a few days\"\n\n* tag 'char-misc-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  Drivers: hv: vmbus: Negotiate version 3.0 when running on ws2012r2 hosts\n  Tools: hv: Handle the case when the target file exists correctly\n  vme_tsi148: Utilize to_pci_dev() macro\n  vme_tsi148: Fix PCI address mapping assumption\n  vme_tsi148: Fix typo in tsi148_slave_get()\n  w1: avoid recursive device_add\n  w1: fix netlink refcnt leak on error path\n  misc: Grammar s/addition/additional/\n  drivers: mcb: fix memory leak in chameleon_parse_cells() error path\n  mei: ignore client writing state during cb completion\n  mei: me: do not load the driver if the FW doesn't support MEI interface\n  GenWQE: Increase driver version number\n  GenWQE: Fix multithreading problems\n  GenWQE: Ensure rc is not returning an uninitialized value\n  GenWQE: Add wmb before DDCB is started\n  GenWQE: Enable access to VPD flash area Merge tag 'driver-core-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fixes from Greg KH:\n \"Here are some driver core fixes for 3.15-rc2.  Also in here are some\n  documentation updates, as well as an API removal that had to wait for\n  after -rc1 due to the cleanups coming into you from multiple developer\n  trees (this one and the PPC tree.)\n\n  All have been in linux next successfully\"\n\n* tag 'driver-core-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  drivers/base/dd.c incorrect pr_debug() parameters\n  Documentation: Update stable address in Chinese and Japanese translations\n  topology: Fix compilation warning when not in SMP\n  Chinese: add translation of io_ordering.txt\n  stable_kernel_rules: spelling/word usage\n  sysfs, driver-core: remove unused {sysfs|device}_schedule_callback_owner()\n  kernfs: protect lazy kernfs_iattrs allocation with mutex\n  fs: Don't return 0 from get_anon_bdev Merge tag 'staging-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver fixes from Greg KH:\n \"Here are a few staging driver fixes for issues that have been reported\n  for 3.15-rc2.\n\n  Also dominating the diffstat for the pull request is the removal of\n  the rtl8187se driver.  It's no longer needed in staging as a \"real\"\n  driver for this hardware is now merged in the tree in the \"correct\"\n  location in drivers/net/\n\n  All of these patches have been tested in linux-next\"\n\n* tag 'staging-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: r8188eu: Fix case where ethtype was never obtained and always be checked against 0\n  staging: r8712u: Fix case where ethtype was never obtained and always be checked against 0\n  staging: r8188eu: Calling rtw_get_stainfo() with a NULL sta_addr will return NULL\n  staging: comedi: fix circular locking dependency in comedi_mmap()\n  staging: r8723au: Add missing initialization of change_inx in sort algorithm\n  Staging: unisys: use after free in list_for_each()\n  staging: unisys: use after free in error messages\n  staging: speakup: fix misuse of kstrtol() in handle_goto()\n  staging: goldfish: Call free_irq in error path\n  staging: delete rtl8187se wireless driver\n  staging: rtl8723au: Fix buffer overflow in rtw_get_wfd_ie()\n  staging: gs_fpgaboot: remove __TIMESTAMP__ macro\n  staging: vme: fix memory leak in vme_user_probe()\n  staging: fpgaboot: clean up Makefile\n  staging/usbip: fix store_attach() sscanf return value check\n  staging/usbip: userspace - fix usbipd SIGSEGV from refresh_exported_devices()\n  staging: rtl8188eu: remove spaces, correct counts to unbreak P2P ioctls\n  staging/rtl8821ae: Fix OOM handling in _rtl_init_deferred_work() Merge tag 'tty-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial driver fixes from Greg KH:\n \"Here are a number of small tty/serial driver fixes for 3.15-rc2.  Also\n  in here are some Documentation file removals for drivers that we\n  removed a long time ago, no need to keep it around any longer.\n\n  All of these have been in linux-next for a bit\"\n\n* tag 'tty-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  Revert \"serial: 8250, disable \"too much work\" messages\"\n  serial: amba-pl011: fix regression, causing an Oops on rmmod\n  tty: Fix help text of SYNCLINK_CS\n  tty: fix memleak in alloc_pid\n  ttyprintk: Allow built as a module\n  ttyprintk: Fix wrong tty_unregister_driver() call in the error path\n  serial: 8250, disable \"too much work\" messages\n  Documentation/serial: Delete obsolete driver documentation\n  serial: omap: Fix missing pm_runtime_resume handling by simplifying code\n  serial_core: Fix pm imbalance on unbind\n  serial: pl011: change Rx burst size to half of trigger level\n  serial: timberdale: Depend on X86_32\n  serial: st-asc: Fix SysRq char handling\n  Revert \"serial: clps711x: Give a chance to perform useful tasks during wait loop\"\n  serial_core: Fix conditional start_tx on ring buffer not empty\n  serial: efm32: use $vendor,$device scheme for compatible string\n  serial: omap: free the wakeup settings in remove Merge tag 'usb-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a number of tiny USB fixes and new device ids for 3.15-rc2.\n  Nothing major, just issues some people have reported.\n\n  All of these have been in linux-next\"\n\n* tag 'usb-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  uas: fix deadlocky memory allocations\n  uas: fix error handling during scsi_scan()\n  uas: fix GFP_NOIO under spinlock\n  uwb: adds missing error handling\n  USB: cdc-acm: Remove Motorola/Telit H24 serial interfaces from ACM driver\n  USB: ohci-jz4740: FEAT_POWER is a port feature, not a hub feature\n  USB: ohci-jz4740: Fix uninitialized variable warning\n  USB: EHCI: tegra: set txfill_tuning\n  usb: ehci-platform: Return immediately from suspend if ehci_suspend fails\n  usb: ehci-exynos: Return immediately from suspend if ehci_suspend fails\n  USB: fix crash during hotplug of PCI USB controller card\n  USB: cdc-acm: fix double usb_autopm_put_interface() in acm_port_activate()\n  usb: usb-common: fix typo for usb_state_string\n  USB: usb_wwan: fix handling of missing bulk endpoints\n  USB: pl2303: add ids for Hewlett-Packard HP POS pole displays\n  USB: cp210x: Add 8281 (Nanotec Plug & Drive)\n  usb: option driver, add support for Telit UE910v2\n  Revert \"USB: serial: add usbid for dell wwan card to sierra.c\"\n  USB: serial: ftdi_sio: add id for Brainboxes serial cards Merge branch 'akpm' (incoming from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"13 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  thp: close race between split and zap huge pages\n  mm: fix new kernel-doc warning in filemap.c\n  mm: fix CONFIG_DEBUG_VM_RB description\n  mm: use paravirt friendly ops for NUMA hinting ptes\n  mips: export flush_icache_range\n  mm/hugetlb.c: add cond_resched_lock() in return_unused_surplus_pages()\n  wait: explain the shadowing and type inconsistencies\n  Shiraz has moved\n  Documentation/vm/numa_memory_policy.txt: fix wrong document in numa_memory_policy.txt\n  powerpc/mm: fix \".__node_distance\" undefined\n  kernel/watchdog.c:touch_softlockup_watchdog(): use raw_cpu_write()\n  init/Kconfig: move the trusted keyring config option to general setup\n  vmscan: reclaim_clean_pages_from_list() must use mod_zone_page_state() Merge tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband\n\nPull infiniband/rdma updates from Roland Dreier:\n\n - mostly cxgb4 fixes unblocked by the merge of some prerequisites via\n   the net tree\n\n - drop deprecated MSI-X API use.\n\n - a couple other miscellaneous things.\n\n* tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband:\n  RDMA/cxgb4: Fix over-dereference when terminating\n  RDMA/cxgb4: Use uninitialized_var()\n  RDMA/cxgb4: Add missing debug stats\n  RDMA/cxgb4: Initialize reserved fields in a FW work request\n  RDMA/cxgb4: Use pr_warn_ratelimited\n  RDMA/cxgb4: Max fastreg depth depends on DSGL support\n  RDMA/cxgb4: SQ flush fix\n  RDMA/cxgb4: rmb() after reading valid gen bit\n  RDMA/cxgb4: Endpoint timeout fixes\n  RDMA/cxgb4: Use the BAR2/WC path for kernel QPs and T5 devices\n  IB/mlx5: Add block multicast loopback support\n  IB/mthca: Use pci_enable_msix_exact() instead of pci_enable_msix()\n  IB/qib: Use pci_enable_msix_range() instead of pci_enable_msix() Merge tag 'pci-v3.15-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI updates from Bjorn Helgaas:\n \"These are fixes for a powerpc NULL pointer dereference, an OF\n  interrupt mapping issue on some of the new host bridges, and a\n  DesignWare iATU issue.\n\n  Host bridge drivers\n   - Fix OF interrupt mapping for DesignWare, R-Car, Tegra (Lucas Stach)\n   - Fix DesignWare iATU programming (Mohit Kumar)\n\n  Miscellaneous\n    - Fix powerpc NULL dereference from list_for_each_entry() update (Mike Qiu)\"\n\n* tag 'pci-v3.15-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: tegra: Use new OF interrupt mapping when possible\n  PCI: rcar: Use new OF interrupt mapping when possible\n  PCI: designware: Use new OF interrupt mapping when possible\n  PCI: designware: Fix iATU programming for cfg1, io and mem viewport\n  PCI: designware: Fix comment for setting number of lanes\n  powerpc/PCI: Fix NULL dereference in sys_pciconfig_iobase() list traversal Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n - fix for merge window mismerge in hid-sony, from Frank Praznik\n - fix for Surface Type/Touch Cover 2 device, from Benjamin Tissoires\n - quirk for ThinkPad Helix sensor hub from Stephen Chandler Paul\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: core: do not scan constant input report\n  Revert \"HID: microsoft: Add ID's for Surface Type/Touch Cover 2\"\n  HID: sensor-hub: add sensor hub quirk for ThinkPad Helix\n  HID: sony: Fix cancel_work_sync mismerge Merge tag 'sound-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Just a copule of HD-audio device/codec-specific quirks, and a trivial\n  replacement of udelay() with mdelay() in the old es18xx driver code.\n  All should be safe to apply\"\n\n* tag 'sound-3.15-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda/realtek - Add headset Mic support for Dell machine\n  ALSA: hda - add headset mic detect quirk for a Dell laptop\n  ALSA: es18xx driver should use udelay error\n  ALSA: hda/realtek - Add support of ALC288 codec Merge tag 'dt-fixes-for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull devicetree fixes from Rob Herring:\n - fix error handling in of_update_property\n - fix section mismatch warnings in __reserved_mem_check_root\n - add empty of_find_node_by_path for !OF builds\n - add various missing binding documentation\n\n* tag 'dt-fixes-for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  of: add empty of_find_node_by_path() for !OF\n  of: Clean up of_update_property\n  DT: add vendor prefix for EBV Elektronik\n  of: Fix the section mismatch warnings.\n  of: Add vendor prefix for Digi International Inc.\n  DT: I2C: Add trivial bindings used by kirkwood boards\n  DT: Vendor: Add prefixes used by Kirkwood devices\n  DT: bindings: add missing Marvell Kirkwood SoC documentation\n  dt-bindings: add vendor-prefix for Newhaven Display\n  of: add vendor prefix for I2SE GmbH\n  of: add vendor prefix for ISEE 2007 S.L. Merge tag 'xfs-for-linus-3.15-rc2' of git://oss.sgi.com/xfs/xfs\n\nPull xfs bug fixes from Dave Chinner:\n \"The fixes are for data corruption issues, memory corruption and\n  regressions for changes merged in -rc1.\n\n  Data corruption fixes:\n   - fix a bunch of delayed allocation state mismatches\n   - fix collapse/zero range bugs\n   - fix a direct IO block mapping bug @ EOF\n\n  Other fixes:\n   - fix a use after free on metadata IO error\n   - fix a use after free on IO error during unmount\n   - fix an incorrect error sign on direct IO write errors\n   - add missing O_TMPFILE inode security context initialisation\"\n\n* tag 'xfs-for-linus-3.15-rc2' of git://oss.sgi.com/xfs/xfs:\n  xfs: fix tmpfile/selinux deadlock and initialize security\n  xfs: fix buffer use after free on IO error\n  xfs: wrong error sign conversion during failed DIO writes\n  xfs: unmount does not wait for shutdown during unmount\n  xfs: collapse range is delalloc challenged\n  xfs: don't map ranges that span EOF for direct IO\n  xfs: zeroing space needs to punch delalloc blocks\n  xfs: xfs_vm_write_end truncates too much on failure\n  xfs: write failure beyond EOF truncates too much data\n  xfs: kill buffers over failed write ranges properly Merge tag 'trace-fixes-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"This contains two fixes.\n\n  The first is to remove a duplication of creating debugfs files that\n  already exist and causes an error report to be printed due to the\n  failure of the second creation.\n\n  The second is a memory leak fix that was introduced in 3.14\"\n\n* tag 'trace-fixes-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing/uprobes: Fix uprobe_cpu_buffer memory leak\n  tracing: Do not try to recreated toplevel set_ftrace_* files Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"Viresh unearthed the following three hickups in the timer/timekeeping\n  code:\n\n   - Negated check for the result of a clock event selection\n\n   - A missing early exit in the jiffies update path which causes\n     update_wall_time to be called for nothing causing lock contention\n     and wasted cycles in the timer interrupt\n\n   - Checking a variable in the NOHZ code enable code for true which can\n     only be set by that very code after the check succeeds.  That\n     results in a rock solid runtime disablement of that feature\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  tick-sched: Check tick_nohz_enabled in tick_nohz_switch_to_nohz()\n  tick-sched: Don't call update_wall_time() when delta is lesser than tick_period\n  tick-common: Fix wrong check in tick_check_replacement() Merge branch 'parisc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc updates from Helge Deller:\n \"There are two major changes in this patchset:\n\n  The major fix is that the epoll_pwait() syscall for 32bit userspace\n  was not using the compat wrapper on a 64bit kernel.\n\n  Secondly we changed the value of SHMLBA from 4MB to PAGE_SIZE to\n  reflect that we can actually mmap to any multiple of PAGE_SIZE.  The\n  only thing which needs care is that shared mmaps need to be mapped at\n  the same offset inside the 4MB cache window\"\n\n* 'parisc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: fix epoll_pwait syscall on compat kernel\n  parisc: change value of SHMLBA from 0x00400000 to PAGE_SIZE\n  parisc: Replace __get_cpu_var uses for address calculation Merge branch 'ipmi' (emailed ipmi fixes)\n\nMerge ipmi fixes from Corey Minyard:\n \"Things collected since last kernel release.\n\n  Some of these are pretty important.  The first three are bug fixes.\n  The next two are to hopefully make everyone happy about allowing\n  ACPI to be on all the time and not have IPMI have an effect on the\n  system when not in use.  The last is a little cleanup\"\n\n* emailed patches from Corey Minyard <cminyard@mvista.com>:\n  ipmi: boolify some things\n  ipmi: Turn off all activity on an idle ipmi interface\n  ipmi: Turn off default probing of interfaces\n  ipmi: Reset the KCS timeout when starting error recovery\n  ipmi: Fix a race restarting the timer\n  Char: ipmi_bt_sm, fix infinite loop Merge tag 'stable/for-linus-3.15-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen fixes from David Vrabel:\n \"Xen regression and bug fixes for 3.15-rc1:\n\n   - fix completely broken 32-bit PV guests caused by x86 refactoring\n     32-bit thread_info.\n   - only enable ticketlock slow path on Xen (not bare metal)\n   - fix two bugs with PV guests not shutting down when requested\n   - fix a minor memory leak in xen-pciback error path\"\n\n* tag 'stable/for-linus-3.15-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/manage: Poweroff forcefully if user-space is not yet up.\n  xen/xenbus: Avoid synchronous wait on XenBus stalling shutdown/restart.\n  xen/spinlock: Don't enable them unconditionally.\n  xen-pciback: silence an unwanted debug printk\n  xen: fix memory leak in __xen_pcibk_add_pci_dev()\n  x86/xen: Fix 32-bit PV guests's usage of kernel_stack Merge tag '3.15-fixes' of git://neil.brown.name/md\n\nPull md bugfix from Neil Brown:\n \"One BUG fix for md for recent commit\"\n\n* tag '3.15-fixes' of git://neil.brown.name/md:\n  raid5: fix a race of stripe count check Merge tag 'fbdev-reorder-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull fbdev renaming patches from Tomi Valkeinen:\n \"Reorder drivers/video/ directory so that all fbdev drivers are now\n  located in drivers/video/fbdev/ and the fbdev framework core files are\n  located in drivers/video/fbdev/core/\n\n  The drivers/video/Kconfig is modified so that the DRM and the fbdev\n  menu options are in separate submenus, instead of both being mixed in\n  the same 'Graphics support' menu level\"\n\n* tag 'fbdev-reorder-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux:\n  video: Kconfig: move drm and fb into separate menus\n  fbdev: move fbdev core files to separate directory\n  video: move fbdev to drivers/video/fbdev Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"Various fixes:\n\n   - reboot regression fix\n   - build message spam fix\n   - GPU quirk fix\n   - 'make kvmconfig' fix\n\n  plus the wire-up of the renameat2() system call on i386\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: Remove the PCI reboot method from the default chain\n  x86/build: Supress \"Nothing to be done for ...\" messages\n  x86/gpu: Fix sign extension issue in Intel graphics stolen memory quirks\n  x86/platform: Fix \"make O=dir kvmconfig\"\n  i386: Wire up the renameat2() syscall Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Tooling fixes, plus a simple hardware-enablement patch for the Intel\n  RAPL PMU (energy use measurement) on Haswell CPUs, which I hope is\n  still fine at this stage\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf tools: Instead of redirecting flex output, use -o\n  perf tools: Fix double free in perf test 21 (code-reading.c)\n  perf stat: Initialize statistics correctly\n  perf bench: Set more defaults in the 'numa' suite\n  perf bench: Fix segfault at the end of an 'all' execution\n  perf bench: Update manpage to mention numa and futex\n  perf probe: Use dwarf_getcfi_elf() instead of dwarf_getcfi()\n  perf probe: Fix to handle errors in line_range searching\n  perf probe: Fix --line option behavior\n  perf tools: Pick up libdw without explicit LIBDW_DIR\n  MAINTAINERS: Change e-mail to kernel.org one\n  perf callchains: Disable unwind libraries when libelf isn't found\n  tools lib traceevent: Do not call warning() directly\n  tools lib traceevent: Print event name when show warning if possible\n  perf top: Fix documentation of invalid -s option\n  perf/x86: Enable DRAM RAPL support on Intel Haswell Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fix from Ingo Molnar:\n \"ARM VIC (Vectored Irq Controller) irqchip driver fix\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqchip: vic: Properly chain the cascaded IRQs Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking fixes from Ingo Molnar:\n \"liblockdep fixes and mutex debugging fixes\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/mutex: Fix debug_mutexes\n  tools/liblockdep: Add proper versioning to the shared obj\n  tools/liblockdep: Ignore asmlinkage and visible Merge tag 'fbdev-fixes-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull fbdev fixes from Tomi Valkeinen:\n - fix build errors for bf54x-lq043fb and imxfb\n - fbcon fix for da8xx-fb\n - omapdss fixes for hdmi audio, irq handling and fclk calculation\n\n* tag 'fbdev-fixes-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux:\n  video: bf54x-lq043fb: fix build error\n  OMAPDSS: Change struct reg_field to dispc_reg_field\n  OMAPDSS: Take pixelclock unit change into account in hdmi_compute_acr()\n  OMAPDSS: fix shared irq handlers\n  video: imxfb: Select LCD_CLASS_DEVICE unconditionally\n  OMAPDSS: fix rounding when calculating fclk rate\n  video: da8xx-fb: Fix casting of info->pseudo_palette Merge tag 'pinctrl-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pincontrol fixes from Linus Walleij:\n \"A first set of pin control fixes for the v3.15 series:\n\n   - Fix a couple of barnsjukdomar on the Rockchip driver.\n\n   - Remove an idiotic debug print I happened to leave behind in the\n     Nomadik driver.\n\n   - Fixup the Qualcomm MSM interrupt handling code for the TLMM v2.\n\n   - Three patches renaming the Broadcom Capri driver to BCM28155.  This\n     has been falling between the chairs for some time due to some\n     cross-tree synchronization misunderstandings, now I'm fed up with\n     this and just rename it in this -rc1 phase\"\n\n* tag 'pinctrl-v3.15-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: fix typo in bindings documentation\n  Update bcm_defconfig with new pinctrl CONFIG\n  pinctrl: Rename Broadcom Capri pinctrl driver\n  pinctrl: msm: Correct interrupt code for TLMM v2\n  pinctrl: nomadik: delete stray debug print\n  pinctrl: rockchip: handle first half of rk3188-bank0 correctly\n  pinctrl: rockchip: add return value to rockchip_set_mux\n  pinctrl: rockchip: fix offset of mux registers for rk3188 Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 patches from Martin Schwidefsky:\n \"An update to the oops output with additional information about the\n  crash.  The renameat2 system call is enabled.  Two patches in regard\n  to the PTR_ERR_OR_ZERO cleanup.  And a bunch of bug fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/sclp_cmd: replace PTR_RET with PTR_ERR_OR_ZERO\n  s390/sclp: replace PTR_RET with PTR_ERR_OR_ZERO\n  s390/sclp_vt220: Fix kernel panic due to early terminal input\n  s390/compat: fix typo\n  s390/uaccess: fix possible register corruption in strnlen_user_srst()\n  s390: add 31 bit warning message\n  s390: wire up sys_renameat2\n  s390: show_registers() should not map user space addresses to kernel symbols\n  s390/mm: print control registers and page table walk on crash\n  s390/smp: fix smp_stop_cpu() for !CONFIG_SMP\n  s390: fix control register update Merge tag 'please-pull-ia64-erratum' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux\n\nPull itanium erratum fix from Tony Luck:\n \"Small workaround for a rare, but annoying, erratum #237\"\n\n* tag 'please-pull-ia64-erratum' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux:\n  [IA64] Change default PSR.ac from '1' to '0' (Fix erratum #237) Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix BPF filter validation of netlink attribute accesses, from\n    Mathias Kruase.\n\n 2) Netfilter conntrack generation seqcount not initialized properly,\n    from Andrey Vagin.\n\n 3) Fix comparison mask computation on big-endian in nft_cmp_fast(),\n    from Patrick McHardy.\n\n 4) Properly limit MTU over ipv6, from Eric Dumazet.\n\n 5) Fix seccomp system call argument population on 32-bit, from Daniel\n    Borkmann.\n\n 6) skb_network_protocol() should not use hard-coded ETH_HLEN, instead\n    skb->mac_len needs to be used.  From Vlad Yasevich.\n\n 7) We have several cases of using socket based communications to\n    implement a tunnel.  For example, some tunnels are encapsulations\n    over UDP so we use an internal kernel UDP socket to do the\n    transmits.\n\n    These tunnels should behave just like other software devices and\n    pass the packets on down to the next layer.\n\n    Most importantly we want the top-level socket (eg TCP) that created\n    the traffic to be charged for the SKB memory.\n\n    However, once you get into the IP output path, we have code that\n    assumed that whatever was attached to skb->sk is an IP socket.\n\n    To keep the top-level socket being charged for the SKB memory,\n    whilst satisfying the needs of the IP output path, we now pass in an\n    explicit 'sk' argument.\n\n    From Eric Dumazet.\n\n 8) ping_init_sock() leaks group info, from Xiaoming Wang.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (33 commits)\n  cxgb4: use the correct max size for firmware flash\n  qlcnic: Fix MSI-X initialization code\n  ip6_gre: don't allow to remove the fb_tunnel_dev\n  ipv4: add a sock pointer to dst->output() path.\n  ipv4: add a sock pointer to ip_queue_xmit()\n  driver/net: cosa driver uses udelay incorrectly\n  at86rf230: fix __at86rf230_read_subreg function\n  at86rf230: remove check if AVDD settled\n  net: cadence: Add architecture dependencies\n  net: Start with correct mac_len in skb_network_protocol\n  Revert \"net: sctp: Fix a_rwnd/rwnd management to reflect real state of the receiver's buffer\"\n  cxgb4: Save the correct mac addr for hw-loopback connections in the L2T\n  net: filter: seccomp: fix wrong decoding of BPF_S_ANC_SECCOMP_LD_W\n  seccomp: fix populating a0-a5 syscall args in 32-bit x86 BPF\n  qlcnic: Do not disable SR-IOV when VFs are assigned to VMs\n  qlcnic: Fix QLogic application/driver interface for virtual NIC configuration\n  qlcnic: Fix PVID configuration on eSwitch port.\n  qlcnic: Fix max ring count calculation\n  qlcnic: Fix to send INIT_NIC_FUNC as first mailbox.\n  qlcnic: Fix panic due to uninitialzed delayed_work struct in use.\n  ... Merge git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Marcelo Tosatti:\n - Fix for guest triggerable BUG_ON (CVE-2014-0155)\n - CR4.SMAP support\n - Spurious WARN_ON() fix\n\n* git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: x86: remove WARN_ON from get_kernel_ns()\n  KVM: Rename variable smep to cr4_smep\n  KVM: expose SMAP feature to guest\n  KVM: Disable SMAP for guests in EPT realmode and EPT unpaging mode\n  KVM: Add SMAP support when setting CR4\n  KVM: Remove SMAP bit from CR4_RESERVED_BITS\n  KVM: ioapic: try to recover if pending_eoi goes out of range\n  KVM: ioapic: fix assignment of ioapic->rtc_status.pending_eoi (CVE-2014-0155) Merge git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull bmc2835 crypto fix from Herbert Xu:\n \"This fixes a potential boot crash on bcm2835 due to the recent change\n  that now causes hardware RNGs to be accessed on registration\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  hwrng: bcm2835 - fix oops when rng h/w is accessed during registration Linux 3.15-rc1 Merge branch 'slab/next' of git://git.kernel.org/pub/scm/linux/kernel/git/penberg/linux\n\nPull slab changes from Pekka Enberg:\n \"The biggest change is byte-sized freelist indices which reduces slab\n  freelist memory usage:\n\n    https://lkml.org/lkml/2013/12/2/64\"\n\n* 'slab/next' of git://git.kernel.org/pub/scm/linux/kernel/git/penberg/linux:\n  mm: slab/slub: use page->list consistently instead of page->lru\n  mm/slab.c: cleanup outdated comments and unify variables naming\n  slab: fix wrongly used macro\n  slub: fix high order page allocation problem with __GFP_NOFAIL\n  slab: Make allocations with GFP_ZERO slightly more efficient\n  slab: make more slab management structure off the slab\n  slab: introduce byte sized index for the freelist of a slab\n  slab: restrict the number of objects in a slab\n  slab: introduce helper functions to get/set free object\n  slab: factor out calculate nr objects in cache_estimate Merge branch 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild\n\nPull misc kbuild changes from Michal Marek:\n \"Here is the non-critical part of kbuild:\n   - One bogus coccinelle check removed, one check fixed not to suggest\n     the obsolete PTR_RET macro\n   - scripts/tags.sh does not index the generated *.mod.c files\n   - new objdiff tool to list differences between two versions of an\n     object file\n   - A fix for scripts/bootgraph.pl\"\n\n* 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:\n  scripts/coccinelle: Use PTR_ERR_OR_ZERO\n  scripts/bootgraph.pl: Add graphic header\n  scripts: objdiff: detect object code changes between two commits\n  Coccicheck: Remove memcpy to struct assignment test\n  scripts/tags.sh: Ignore *.mod.c Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull yet more networking updates from David Miller:\n\n 1) Various fixes to the new Redpine Signals wireless driver, from\n    Fariya Fatima.\n\n 2) L2TP PPP connect code takes PMTU from the wrong socket, fix from\n    Dmitry Petukhov.\n\n 3) UFO and TSO packets differ in whether they include the protocol\n    header in gso_size, account for that in skb_gso_transport_seglen().\n   From Florian Westphal.\n\n 4) If VLAN untagging fails, we double free the SKB in the bridging\n    output path.  From Toshiaki Makita.\n\n 5) Several call sites of sk->sk_data_ready() were referencing an SKB\n    just added to the socket receive queue in order to calculate the\n    second argument via skb->len.  This is dangerous because the moment\n    the skb is added to the receive queue it can be consumed in another\n    context and freed up.\n\n    It turns out also that none of the sk->sk_data_ready()\n    implementations even care about this second argument.\n\n    So just kill it off and thus fix all these use-after-free bugs as a\n    side effect.\n\n 6) Fix inverted test in tcp_v6_send_response(), from Lorenzo Colitti.\n\n 7) pktgen needs to do locking properly for LLTX devices, from Daniel\n    Borkmann.\n\n 8) xen-netfront driver initializes TX array entries in RX loop :-) From\n    Vincenzo Maffione.\n\n 9) After refactoring, some tunnel drivers allow a tunnel to be\n    configured on top itself.  Fix from Nicolas Dichtel.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (46 commits)\n  vti: don't allow to add the same tunnel twice\n  gre: don't allow to add the same tunnel twice\n  drivers: net: xen-netfront: fix array initialization bug\n  pktgen: be friendly to LLTX devices\n  r8152: check RTL8152_UNPLUG\n  net: sun4i-emac: add promiscuous support\n  net/apne: replace IS_ERR and PTR_ERR with PTR_ERR_OR_ZERO\n  net: ipv6: Fix oif in TCP SYN+ACK route lookup.\n  drivers: net: cpsw: enable interrupts after napi enable and clearing previous interrupts\n  drivers: net: cpsw: discard all packets received when interface is down\n  net: Fix use after free by removing length arg from sk_data_ready callbacks.\n  Drivers: net: hyperv: Address UDP checksum issues\n  Drivers: net: hyperv: Negotiate suitable ndis version for offload support\n  Drivers: net: hyperv: Allocate memory for all possible per-pecket information\n  bridge: Fix double free and memory leak around br_allowed_ingress\n  bonding: Remove debug_fs files when module init fails\n  i40evf: program RSS LUT correctly\n  i40evf: remove open-coded skb_cow_head\n  ixgb: remove open-coded skb_cow_head\n  igbvf: remove open-coded skb_cow_head\n  ... Merge tag 'blackfin-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/realmz6/blackfin-linux\n\nPull blackfin updates from Steven Miao:\n \"Code cleanup, some previously ignored patches, and bug fixes\"\n\n* tag 'blackfin-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/realmz6/blackfin-linux:\n  blackfin: cleanup board files\n  bf609: clock: drop unused clock bit set/clear functions\n  Blackfin: bf537: rename \"CONFIG_ADT75\"\n  Blackfin: bf537: rename \"CONFIG_AD7314\"\n  Blackfin: bf537: rename ad2s120x ->ad2s1200\n  blackfin: bf537: fix typo \"CONFIG_SND_SOC_ADV80X_MODULE\"\n  blackfin: dma: current count mmr is read only\n  bfin_crc: Move architecture independant crc header file out of the blackfin folder.\n  bf54x: drop unuesd HOST status,control,timeout registers bit define macros\n  blackfin: portmux: cleanup head file\n  Blackfin: remove \"config IP_CHECKSUM_L1\"\n  blackfin: Remove GENERIC_GPIO config option again\n  blackfin:Use generic /proc/interrupts implementation\n  blackfin: bf60x: fix typo \"CONFIG_PM_BFIN_WAKE_PA15_POL\" Merge tag 'remoteproc-3.15-cleanups' of git://git.kernel.org/pub/scm/linux/kernel/git/ohad/remoteproc\n\nPull remoteproc cleanups from Ohad Ben-Cohen:\n \"Several remoteproc cleanup patches coming from Jingoo Han, Julia\n  Lawall and Uwe Kleine-König\"\n\n* tag 'remoteproc-3.15-cleanups' of git://git.kernel.org/pub/scm/linux/kernel/git/ohad/remoteproc:\n  remoteproc/ste_modem: staticize local symbols\n  remoteproc/davinci: simplify use of devm_ioremap_resource\n  remoteproc/davinci: drop needless devm_clk_put Merge tag 'llvmlinux-for-v3.15' of git://git.linuxfoundation.org/llvmlinux/kernel\n\nPull llvm patches from Behan Webster:\n \"These are some initial updates to support compiling the kernel with\n  clang.\n\n  These patches have been through the proper reviews to the best of my\n  ability, and have been soaking in linux-next for a few weeks.  These\n  patches by themselves still do not completely allow clang to be used\n  with the kernel code, but lay the foundation for other patches which\n  are still under review.\n\n  Several other of the LLVMLinux patches have been already added via\n  maintainer trees\"\n\n* tag 'llvmlinux-for-v3.15' of git://git.linuxfoundation.org/llvmlinux/kernel:\n  x86: LLVMLinux: Fix \"incomplete type const struct x86cpu_device_id\"\n  x86 kbuild: LLVMLinux: More cc-options added for clang\n  x86, acpi: LLVMLinux: Remove nested functions from Thinkpad ACPI\n  LLVMLinux: Add support for clang to compiler.h and new compiler-clang.h\n  LLVMLinux: Remove warning about returning an uninitialized variable\n  kbuild: LLVMLinux: Fix LINUX_COMPILER definition script for compilation with clang\n  Documentation: LLVMLinux: Update Documentation/dontdiff\n  kbuild: LLVMLinux: Adapt warnings for compilation with clang\n  kbuild: LLVMLinux: Add Kbuild support for building kernel with Clang Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target updates from Nicholas Bellinger:\n \"Here are the target pending updates for v3.15-rc1.  Apologies in\n  advance for waiting until the second to last day of the merge window\n  to send these out.\n\n  The highlights this round include:\n\n   - iser-target support for T10 PI (DIF) offloads (Sagi + Or)\n   - Fix Task Aborted Status (TAS) handling in target-core (Alex Leung)\n   - Pass in transport supported PI at session initialization (Sagi + MKP + nab)\n   - Add WRITE_INSERT + READ_STRIP T10 PI support in target-core (nab + Sagi)\n   - Fix iscsi-target ERL=2 ASYNC_EVENT connection pointer bug (nab)\n   - Fix tcm_fc use-after-free of ft_tpg (Andy Grover)\n   - Use correct ib_sg_dma primitives in ib_isert (Mike Marciniszyn)\n\n  Also, note the virtio-scsi + vhost-scsi changes to expose T10 PI\n  metadata into KVM guest have been left-out for now, as there where a\n  few comments from MST + Paolo that where not able to be addressed in\n  time for v3.15.  Please expect this feature for v3.16-rc1\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (43 commits)\n  ib_srpt: Use correct ib_sg_dma primitives\n  target/tcm_fc: Rename ft_tport_create to ft_tport_get\n  target/tcm_fc: Rename ft_{add,del}_lport to {add,del}_wwn\n  target/tcm_fc: Rename structs and list members for clarity\n  target/tcm_fc: Limit to 1 TPG per wwn\n  target/tcm_fc: Don't export ft_lport_list\n  target/tcm_fc: Fix use-after-free of ft_tpg\n  target: Add check to prevent Abort Task from aborting itself\n  target: Enable READ_STRIP emulation in target_complete_ok_work\n  target/sbc: Add sbc_dif_read_strip software emulation\n  target: Enable WRITE_INSERT emulation in target_execute_cmd\n  target/sbc: Add sbc_dif_generate software emulation\n  target/sbc: Only expose PI read_cap16 bits when supported by fabric\n  target/spc: Only expose PI mode page bits when supported by fabric\n  target/spc: Only expose PI inquiry bits when supported by fabric\n  target: Pass in transport supported PI at session initialization\n  target/iblock: Fix double bioset_integrity_free bug\n  Target/sbc: Initialize COMPARE_AND_WRITE write_sg scatterlist\n  target/rd: T10-Dif: RAM disk is allocating more space than required.\n  iscsi-target: Fix ERL=2 ASYNC_EVENT connection pointer bug\n  ... Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"A series of bug fix patches for v3.15-rc1.  Most are just driver\n  fixes.  There are some changes at remote controller core level, fixing\n  some definitions on a new API added for Kernel v3.15.\n\n  It also adds the missing include at include/uapi/linux/v4l2-common.h,\n  to allow its compilation on userspace, as pointed by you\"\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (24 commits)\n  [media] gpsca: remove the risk of a division by zero\n  [media] stk1160: warrant a NUL terminated string\n  [media] v4l: ti-vpe: retain v4l2_buffer flags for captured buffers\n  [media] v4l: ti-vpe: Set correct field parameter for output and capture buffers\n  [media] v4l: ti-vpe: zero out reserved fields in try_fmt\n  [media] v4l: ti-vpe: Fix initial configuration queue data\n  [media] v4l: ti-vpe: Use correct bus_info name for the device in querycap\n  [media] v4l: ti-vpe: report correct capabilities in querycap\n  [media] v4l: ti-vpe: Allow usage of smaller images\n  [media] v4l: ti-vpe: Use video_device_release_empty\n  [media] v4l: ti-vpe: Make sure in job_ready that we have the needed number of dst_bufs\n  [media] lgdt3305: include sleep functionality in lgdt3304_ops\n  [media] drx-j: use customise option correctly\n  [media] m88rs2000: fix sparse static warnings\n  [media] r820t: fix size and init values\n  [media] rc-core: remove generic scancode filter\n  [media] rc-core: split dev->s_filter\n  [media] rc-core: do not change 32bit NEC scancode format for now\n  [media] rtl28xxu: remove duplicate ID 0458:707f Genius TVGo DVB-T03\n  [media] xc2028: add missing break to switch\n  ... Merge tag 'ntb-3.15' of git://github.com/jonmason/ntb\n\nPull PCIe non-transparent bridge fixes and features from Jon Mason:\n \"NTB driver bug fixes to address issues in list traversal, skb leak in\n  ntb_netdev, a typo, and a leak of msix entries in the error path.\n  Clean ups of the event handling logic, as well as a overall style\n  cleanup.  Finally, the driver was converted to use the new\n  pci_enable_msix_range logic (and the refactoring to go along with it)\"\n\n* tag 'ntb-3.15' of git://github.com/jonmason/ntb:\n  ntb: Use pci_enable_msix_range() instead of pci_enable_msix()\n  ntb: Split ntb_setup_msix() into separate BWD/SNB routines\n  ntb: Use pci_msix_vec_count() to obtain number of MSI-Xs\n  NTB: Code Style Clean-up\n  NTB: client event cleanup\n  ntb: Fix leakage of ntb_device::msix_entries[] array\n  NTB: Fix typo in setting one translation register\n  ntb_netdev: Fix skb free issue in open\n  ntb_netdev: Fix list_for_each_entry exit issue ceph: fix pr_fmt() redefinition\n\nThe vfs merge caused a latent bug to show up:\n\n   In file included from fs/ceph/super.h:4:0,\n                    from fs/ceph/ioctl.c:3:\n   include/linux/ceph/ceph_debug.h:4:0: warning: \"pr_fmt\" redefined [enabled by default]\n    #define pr_fmt(fmt) KBUILD_MODNAME \": \" fmt\n    ^\n   In file included from include/linux/kernel.h:13:0,\n                    from include/linux/uio.h:12,\n                    from include/linux/socket.h:7,\n                    from include/uapi/linux/in.h:22,\n                    from include/linux/in.h:23,\n                    from fs/ceph/ioctl.c:1:\n   include/linux/printk.h:214:0: note: this is the location of the previous definition\n    #define pr_fmt(fmt) fmt\n    ^\n\nwhere the reason is that <linux/ceph_debug.h> is included much too late\nfor the \"pr_fmt()\" define.\n\nThe include of <linux/ceph_debug.h> needs to be the first include in the\nfile, but fs/ceph/ioctl.c had for some reason missed that, and it wasn't\nnoticeable until some unrelated header file changes brought in an\nindirect earlier include of <linux/kernel.h>.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs updates from Al Viro:\n \"The first vfs pile, with deep apologies for being very late in this\n  window.\n\n  Assorted cleanups and fixes, plus a large preparatory part of iov_iter\n  work.  There's a lot more of that, but it'll probably go into the next\n  merge window - it *does* shape up nicely, removes a lot of\n  boilerplate, gets rid of locking inconsistencie between aio_write and\n  splice_write and I hope to get Kent's direct-io rewrite merged into\n  the same queue, but some of the stuff after this point is having\n  (mostly trivial) conflicts with the things already merged into\n  mainline and with some I want more testing.\n\n  This one passes LTP and xfstests without regressions, in addition to\n  usual beating.  BTW, readahead02 in ltp syscalls testsuite has started\n  giving failures since \"mm/readahead.c: fix readahead failure for\n  memoryless NUMA nodes and limit readahead pages\" - might be a false\n  positive, might be a real regression...\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs: (63 commits)\n  missing bits of \"splice: fix racy pipe->buffers uses\"\n  cifs: fix the race in cifs_writev()\n  ceph_sync_{,direct_}write: fix an oops on ceph_osdc_new_request() failure\n  kill generic_file_buffered_write()\n  ocfs2_file_aio_write(): switch to generic_perform_write()\n  ceph_aio_write(): switch to generic_perform_write()\n  xfs_file_buffered_aio_write(): switch to generic_perform_write()\n  export generic_perform_write(), start getting rid of generic_file_buffer_write()\n  generic_file_direct_write(): get rid of ppos argument\n  btrfs_file_aio_write(): get rid of ppos\n  kill the 5th argument of generic_file_buffered_write()\n  kill the 4th argument of __generic_file_aio_write()\n  lustre: don't open-code kernel_recvmsg()\n  ocfs2: don't open-code kernel_recvmsg()\n  drbd: don't open-code kernel_recvmsg()\n  constify blk_rq_map_user_iov() and friends\n  lustre: switch to kernel_sendmsg()\n  ocfs2: don't open-code kernel_sendmsg()\n  take iov_iter stuff to mm/iov_iter.c\n  process_vm_access: tidy up a bit\n  ... Merge tag 'trace-3.15-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull more tracing updates from Steven Rostedt:\n \"This includes the final patch to clean up and fix the issue with the\n  design of tracepoints and how a user could register a tracepoint and\n  have that tracepoint not be activated but no error was shown.\n\n  The design was for an out of tree module but broke in tree users.  The\n  clean up was to remove the saving of the hash table of tracepoint\n  names such that they can be enabled before they exist (enabling a\n  module tracepoint before that module is loaded).  This added more\n  complexity than needed.  The clean up was to remove that code and just\n  enable tracepoints that exist or fail if they do not.\n\n  This removed a lot of code as well as the complexity that it brought.\n  As a side effect, instead of registering a tracepoint by its name, the\n  tracepoint needs to be registered with the tracepoint descriptor.\n  This removes having to duplicate the tracepoint names that are\n  enabled.\n\n  The second patch was added that simplified the way modules were\n  searched for.\n\n  This cleanup required changes that were in the 3.15 queue as well as\n  some changes that were added late in the 3.14-rc cycle.  This final\n  change waited till the two were merged in upstream and then the change\n  was added and full tests were run.  Unfortunately, the test found some\n  errors, but after it was already submitted to the for-next branch and\n  not to be rebased.  Sparse errors were detected by Fengguang Wu's bot\n  tests, and my internal tests discovered that the anonymous union\n  initialization triggered a bug in older gcc compilers.  Luckily, there\n  was a bugzilla for the gcc bug which gave a work around to the\n  problem.  The third and fourth patch handled the sparse error and the\n  gcc bug respectively.\n\n  A final patch was tagged along to fix a missing documentation for the\n  README file\"\n\n* tag 'trace-3.15-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Add missing function triggers dump and cpudump to README\n  tracing: Fix anonymous unions in struct ftrace_event_call\n  tracepoint: Fix sparse warnings in tracepoint.c\n  tracepoint: Simplify tracepoint module search\n  tracepoint: Use struct pointer instead of name hash for reg/unreg tracepoints Merge git://git.infradead.org/users/eparis/audit\n\nPull audit updates from Eric Paris.\n\n* git://git.infradead.org/users/eparis/audit: (28 commits)\n  AUDIT: make audit_is_compat depend on CONFIG_AUDIT_COMPAT_GENERIC\n  audit: renumber AUDIT_FEATURE_CHANGE into the 1300 range\n  audit: do not cast audit_rule_data pointers pointlesly\n  AUDIT: Allow login in non-init namespaces\n  audit: define audit_is_compat in kernel internal header\n  kernel: Use RCU_INIT_POINTER(x, NULL) in audit.c\n  sched: declare pid_alive as inline\n  audit: use uapi/linux/audit.h for AUDIT_ARCH declarations\n  syscall_get_arch: remove useless function arguments\n  audit: remove stray newline from audit_log_execve_info() audit_panic() call\n  audit: remove stray newlines from audit_log_lost messages\n  audit: include subject in login records\n  audit: remove superfluous new- prefix in AUDIT_LOGIN messages\n  audit: allow user processes to log from another PID namespace\n  audit: anchor all pid references in the initial pid namespace\n  audit: convert PPIDs to the inital PID namespace.\n  pid: get pid_t ppid of task in init_pid_ns\n  audit: rename the misleading audit_get_context() to audit_take_context()\n  audit: Add generic compat syscall support\n  audit: Add CONFIG_HAVE_ARCH_AUDITSYSCALL\n  ... Merge branch 'async-scsi-resume' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/isci\n\nPull async SCSI resume support from Dan Williams:\n \"Allow disks and other devices to resume in parallel.\n\n  This provides a tangible speed up for a non-esoteric use case (laptop\n  resume):\n\n    https://01.org/suspendresume/blogs/tebrandt/2013/hard-disk-resume-optimization-simpler-approach\"\n\n* 'async-scsi-resume' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/isci:\n  scsi: async sd resume Merge tag 'md/3.15' of git://neil.brown.name/md\n\nPull md updates from Neil Brown:\n \"Just a few md patches for the 3.15 merge window.\n\n  Not much happening in md/raid at the moment.  Just a few bug fixes\n  (one for -stable) and a couple of performance tweaks\"\n\n* tag 'md/3.15' of git://neil.brown.name/md:\n  raid5: get_active_stripe avoids device_lock\n  raid5: make_request does less prepare wait\n  md: avoid oops on unload if some process is in poll or select.\n  md/raid1: r1buf_pool_alloc: free allocate pages when subsequent allocation fails.\n  md/bitmap: don't abuse i_writecount for bitmap files. Merge git://git.infradead.org/users/willy/linux-nvme\n\nPull NVMe driver updates from Matthew Wilcox:\n \"Various updates to the NVMe driver.  The most user-visible change is\n  that drive hotplugging now works and CPU hotplug while an NVMe drive\n  is installed should also work better\"\n\n* git://git.infradead.org/users/willy/linux-nvme:\n  NVMe: Retry failed commands with non-fatal errors\n  NVMe: Add getgeo to block ops\n  NVMe: Start-stop nvme_thread during device add-remove.\n  NVMe: Make I/O timeout a module parameter\n  NVMe: CPU hot plug notification\n  NVMe: per-cpu io queues\n  NVMe: Replace DEFINE_PCI_DEVICE_TABLE\n  NVMe: Fix divide-by-zero in nvme_trans_io_get_num_cmds\n  NVMe: IOCTL path RCU protect queue access\n  NVMe: RCU protected access to io queues\n  NVMe: Initialize device reference count earlier\n  NVMe: Add CONFIG_PM_SLEEP to suspend/resume functions Merge git://git.kvack.org/~bcrl/aio-next\n\nPull aio ctx->ring_pages migration serialization fix from Ben LaHaise.\n\n* git://git.kvack.org/~bcrl/aio-next:\n  aio: v4 ensure access to ctx->ring_pages is correctly serialised for migration Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull second set of btrfs updates from Chris Mason:\n \"The most important changes here are from Josef, fixing a btrfs\n  regression in 3.14 that can cause corruptions in the extent allocation\n  tree when snapshots are in use.\n\n  Josef also fixed some deadlocks in send/recv and other assorted races\n  when balance is running\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs: (23 commits)\n  Btrfs: fix compile warnings on on avr32 platform\n  btrfs: allow mounting btrfs subvolumes with different ro/rw options\n  btrfs: export global block reserve size as space_info\n  btrfs: fix crash in remount(thread_pool=) case\n  Btrfs: abort the transaction when we don't find our extent ref\n  Btrfs: fix EINVAL checks in btrfs_clone\n  Btrfs: fix unlock in __start_delalloc_inodes()\n  Btrfs: scrub raid56 stripes in the right way\n  Btrfs: don't compress for a small write\n  Btrfs: more efficient io tree navigation on wait_extent_bit\n  Btrfs: send, build path string only once in send_hole\n  btrfs: filter invalid arg for btrfs resize\n  Btrfs: send, fix data corruption due to incorrect hole detection\n  Btrfs: kmalloc() doesn't return an ERR_PTR\n  Btrfs: fix snapshot vs nocow writting\n  btrfs: Change the expanding write sequence to fix snapshot related bug.\n  btrfs: make device scan less noisy\n  btrfs: fix lockdep warning with reclaim lock inversion\n  Btrfs: hold the commit_root_sem when getting the commit root during send\n  Btrfs: remove transaction from send\n  ... Merge tag 'for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/ericvh/v9fs\n\nPull 9p changes from Eric Van Hensbergen:\n \"A bunch of updates and cleanup within the transport layer,\n  particularly with a focus on RDMA\"\n\n* tag 'for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/ericvh/v9fs:\n  9pnet_rdma: check token type before int conversion\n  9pnet: trans_fd : allocate struct p9_trans_fd and struct p9_conn together.\n  9pnet: p9_client->conn field is unused. Remove it.\n  9P: Get rid of REQ_STATUS_FLSH\n  9pnet_rdma: add cancelled()\n  9pnet_rdma: update request status during send\n  9P: Add cancelled() to the transport functions.\n  net: Mark function as static in 9p/client.c\n  9P: Add memory barriers to protect request fields over cb/rpc threads handoff Merge tag 'spi-v3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fixes from Mark Brown:\n \"A few driver specific fixes, the main one being the fix for handling\n  of complete callbacks that are open coded in individual drivers to\n  allow callers to omit the completion.  As we move things into the core\n  that sort of issue should become less and less common\"\n\n* tag 'spi-v3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi: qup: Depend on ARCH_QCOM\n  spi: efm32: Update binding document to make \"efm32,location\" property optional\n  spi: omap2-mcspi: Convert to use devm_kcalloc\n  spi: Always check complete callback before calling it Merge tag 'regulator-v3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"A few driver specific fixes that have come in over the merge window,\n  all only relevant for the specific driver\"\n\n* tag 'regulator-v3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: bcm590xx: Set n_voltages for linear reg\n  regulator: s5m8767: Fix carried over ena_gpio assignment\n  regulator: s2mps11: Don't check enable_shift before setting enable ramp rate\n  regulator: s2mpa01: Don't check enable_shift before setting enable ramp rate Merge tag 'nfs-for-4.14-2' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull more NFS client updates from Trond Myklebust:\n \"Hightlights include:\n\n  Bugfixes:\n   - Various changes relating to reporting IO errors.\n   - pnfs: Use the standard I/O stateid when calling LAYOUTGET\n\n  Features:\n   - Add static NFS I/O tracepoints for debugging\"\n\n* tag 'nfs-for-4.14-2' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  NFS: various changes relating to reporting IO errors.\n  NFS: Add static NFS I/O tracepoints\n  pNFS: Use the standard I/O stateid when calling LAYOUTGET Merge branch 'work.misc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull misc leftovers from Al Viro.\n\n* 'work.misc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix the __user misannotations in asm-generic get_user/put_user\n  fput: Don't reinvent the wheel but use existing llist API\n  namespace.c: Don't reinvent the wheel but use existing llist API Merge branch 'work.read_write' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull nowait read support from Al Viro:\n \"Support IOCB_NOWAIT for buffered reads and block devices\"\n\n* 'work.read_write' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  block_dev: support RFW_NOWAIT on block device nodes\n  fs: support RWF_NOWAIT for buffered reads\n  fs: support IOCB_NOWAIT in generic_file_buffered_read\n  fs: pass iocb to do_generic_file_read Merge branch 'work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull mount flag updates from Al Viro:\n \"Another chunk of fmount preparations from dhowells; only trivial\n  conflicts for that part. It separates MS_... bits (very grotty\n  mount(2) ABI) from the struct super_block ->s_flags (kernel-internal,\n  only a small subset of MS_... stuff).\n\n  This does *not* convert the filesystems to new constants; only the\n  infrastructure is done here. The next step in that series is where the\n  conflicts would be; that's the conversion of filesystems. It's purely\n  mechanical and it's better done after the merge, so if you could run\n  something like\n\n\tlist=$(for i in MS_RDONLY MS_NOSUID MS_NODEV MS_NOEXEC MS_SYNCHRONOUS MS_MANDLOCK MS_DIRSYNC MS_NOATIME MS_NODIRATIME MS_SILENT MS_POSIXACL MS_KERNMOUNT MS_I_VERSION MS_LAZYTIME; do git grep -l $i fs drivers/staging/lustre drivers/mtd ipc mm include/linux; done|sort|uniq|grep -v '^fs/namespace.c$')\n\n\tsed -i -e 's/\\<MS_RDONLY\\>/SB_RDONLY/g' \\\n\t        -e 's/\\<MS_NOSUID\\>/SB_NOSUID/g' \\\n\t        -e 's/\\<MS_NODEV\\>/SB_NODEV/g' \\\n\t        -e 's/\\<MS_NOEXEC\\>/SB_NOEXEC/g' \\\n\t        -e 's/\\<MS_SYNCHRONOUS\\>/SB_SYNCHRONOUS/g' \\\n\t        -e 's/\\<MS_MANDLOCK\\>/SB_MANDLOCK/g' \\\n\t        -e 's/\\<MS_DIRSYNC\\>/SB_DIRSYNC/g' \\\n\t        -e 's/\\<MS_NOATIME\\>/SB_NOATIME/g' \\\n\t        -e 's/\\<MS_NODIRATIME\\>/SB_NODIRATIME/g' \\\n\t        -e 's/\\<MS_SILENT\\>/SB_SILENT/g' \\\n\t        -e 's/\\<MS_POSIXACL\\>/SB_POSIXACL/g' \\\n\t        -e 's/\\<MS_KERNMOUNT\\>/SB_KERNMOUNT/g' \\\n\t        -e 's/\\<MS_I_VERSION\\>/SB_I_VERSION/g' \\\n\t        -e 's/\\<MS_LAZYTIME\\>/SB_LAZYTIME/g' \\\n\t        $list\n\n  and commit it with something along the lines of 'convert filesystems\n  away from use of MS_... constants' as commit message, it would save a\n  quite a bit of headache next cycle\"\n\n* 'work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  VFS: Differentiate mount flags (MS_*) from internal superblock flags\n  VFS: Convert sb->s_flags & MS_RDONLY to sb_rdonly(sb)\n  vfs: Add sb_rdonly(sb) to query the MS_RDONLY flag on s_flags Merge branch 'work.set_fs' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull more set_fs removal from Al Viro:\n \"Christoph's 'use kernel_read and friends rather than open-coding\n  set_fs()' series\"\n\n* 'work.set_fs' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fs: unexport vfs_readv and vfs_writev\n  fs: unexport vfs_read and vfs_write\n  fs: unexport __vfs_read/__vfs_write\n  lustre: switch to kernel_write\n  gadget/f_mass_storage: stop messing with the address limit\n  mconsole: switch to kernel_read\n  btrfs: switch write_buf to kernel_write\n  net/9p: switch p9_fd_read to kernel_write\n  mm/nommu: switch do_mmap_private to kernel_read\n  serial2002: switch serial2002_tty_write to kernel_{read/write}\n  fs: make the buf argument to __kernel_write a void pointer\n  fs: fix kernel_write prototype\n  fs: fix kernel_read prototype\n  fs: move kernel_read to fs/read_write.c\n  fs: move kernel_write to fs/read_write.c\n  autofs4: switch autofs4_write to __kernel_write\n  ashmem: switch to ->read_iter Merge branch 'work.ipc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull ipc compat cleanup and 64-bit time_t from Al Viro:\n \"IPC copyin/copyout sanitizing, including 64bit time_t work from Deepa\n  Dinamani\"\n\n* 'work.ipc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  utimes: Make utimes y2038 safe\n  ipc: shm: Make shmid_kernel timestamps y2038 safe\n  ipc: sem: Make sem_array timestamps y2038 safe\n  ipc: msg: Make msg_queue timestamps y2038 safe\n  ipc: mqueue: Replace timespec with timespec64\n  ipc: Make sys_semtimedop() y2038 safe\n  get rid of SYSVIPC_COMPAT on ia64\n  semtimedop(): move compat to native\n  shmat(2): move compat to native\n  msgrcv(2), msgsnd(2): move compat to native\n  ipc(2): move compat to native\n  ipc: make use of compat ipc_perm helpers\n  semctl(): move compat to native\n  semctl(): separate all layout-dependent copyin/copyout\n  msgctl(): move compat to native\n  msgctl(): split the actual work from copyin/copyout\n  ipc: move compat shmctl to native\n  shmctl: split the work from copyin/copyout Merge branch 'zstd-minimal' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull zstd support from Chris Mason:\n \"Nick Terrell's patch series to add zstd support to the kernel has been\n  floating around for a while. After talking with Dave Sterba, Herbert\n  and Phillip, we decided to send the whole thing in as one pull\n  request.\n\n  zstd is a big win in speed over zlib and in compression ratio over\n  lzo, and the compression team here at FB has gotten great results\n  using it in production. Nick will continue to update the kernel side\n  with new improvements from the open source zstd userland code.\n\n  Nick has a number of benchmarks for the main zstd code in his lib/zstd\n  commit:\n\n      I ran the benchmarks on a Ubuntu 14.04 VM with 2 cores and 4 GiB\n      of RAM. The VM is running on a MacBook Pro with a 3.1 GHz Intel\n      Core i7 processor, 16 GB of RAM, and a SSD. I benchmarked using\n      `silesia.tar` [3], which is 211,988,480 B large. Run the following\n      commands for the benchmark:\n\n        sudo modprobe zstd_compress_test\n        sudo mknod zstd_compress_test c 245 0\n        sudo cp silesia.tar zstd_compress_test\n\n      The time is reported by the time of the userland `cp`.\n      The MB/s is computed with\n\n        1,536,217,008 B / time(buffer size, hash)\n\n      which includes the time to copy from userland.\n      The Adjusted MB/s is computed with\n\n        1,536,217,088 B / (time(buffer size, hash) - time(buffer size, none)).\n\n      The memory reported is the amount of memory the compressor\n      requests.\n\n        | Method   | Size (B) | Time (s) | Ratio | MB/s    | Adj MB/s | Mem (MB) |\n        |----------|----------|----------|-------|---------|----------|----------|\n        | none     | 11988480 |    0.100 |     1 | 2119.88 |        - |        - |\n        | zstd -1  | 73645762 |    1.044 | 2.878 |  203.05 |   224.56 |     1.23 |\n        | zstd -3  | 66988878 |    1.761 | 3.165 |  120.38 |   127.63 |     2.47 |\n        | zstd -5  | 65001259 |    2.563 | 3.261 |   82.71 |    86.07 |     2.86 |\n        | zstd -10 | 60165346 |   13.242 | 3.523 |   16.01 |    16.13 |    13.22 |\n        | zstd -15 | 58009756 |   47.601 | 3.654 |    4.45 |     4.46 |    21.61 |\n        | zstd -19 | 54014593 |  102.835 | 3.925 |    2.06 |     2.06 |    60.15 |\n        | zlib -1  | 77260026 |    2.895 | 2.744 |   73.23 |    75.85 |     0.27 |\n        | zlib -3  | 72972206 |    4.116 | 2.905 |   51.50 |    52.79 |     0.27 |\n        | zlib -6  | 68190360 |    9.633 | 3.109 |   22.01 |    22.24 |     0.27 |\n        | zlib -9  | 67613382 |   22.554 | 3.135 |    9.40 |     9.44 |     0.27 |\n\n      I benchmarked zstd decompression using the same method on the same\n      machine. The benchmark file is located in the upstream zstd repo\n      under `contrib/linux-kernel/zstd_decompress_test.c` [4]. The\n      memory reported is the amount of memory required to decompress\n      data compressed with the given compression level. If you know the\n      maximum size of your input, you can reduce the memory usage of\n      decompression irrespective of the compression level.\n\n        | Method   | Time (s) | MB/s    | Adjusted MB/s | Memory (MB) |\n        |----------|----------|---------|---------------|-------------|\n        | none     |    0.025 | 8479.54 |             - |           - |\n        | zstd -1  |    0.358 |  592.15 |        636.60 |        0.84 |\n        | zstd -3  |    0.396 |  535.32 |        571.40 |        1.46 |\n        | zstd -5  |    0.396 |  535.32 |        571.40 |        1.46 |\n        | zstd -10 |    0.374 |  566.81 |        607.42 |        2.51 |\n        | zstd -15 |    0.379 |  559.34 |        598.84 |        4.61 |\n        | zstd -19 |    0.412 |  514.54 |        547.77 |        8.80 |\n        | zlib -1  |    0.940 |  225.52 |        231.68 |        0.04 |\n        | zlib -3  |    0.883 |  240.08 |        247.07 |        0.04 |\n        | zlib -6  |    0.844 |  251.17 |        258.84 |        0.04 |\n        | zlib -9  |    0.837 |  253.27 |        287.64 |        0.04 |\n\n  I ran a long series of tests and benchmarks on the btrfs side and the\n  gains are very similar to the core benchmarks Nick ran\"\n\n* 'zstd-minimal' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  squashfs: Add zstd support\n  btrfs: Add zstd support\n  lib: Add zstd modules\n  lib: Add xxhash module Merge tag 'kbuild-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild updates from Masahiro Yamada:\n\n - Use Make-builtin $(abspath ...) helper to get absolute path\n\n - Add W=2 extra warning option to detect unused macros\n\n - Use more KCONFIG_CONFIG instead hard-coded .config\n\n - Fix bugs of tar*-pkg targets\n\n* tag 'kbuild-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: buildtar: do not print successful message if tar returns error\n  kbuild: buildtar: fix tar error when CONFIG_MODULES is disabled\n  kbuild: Use KCONFIG_CONFIG in buildtar\n  Kbuild: enable -Wunused-macros warning for \"make W=2\"\n  kbuild: use $(abspath ...) instead of $(shell cd ... && /bin/pwd) Merge tag 'for-4.14/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper updates from Mike Snitzer:\n\n - Some request-based DM core and DM multipath fixes and cleanups\n\n - Constify a few variables in DM core and DM integrity\n\n - Add bufio optimization and checksum failure accounting to DM\n   integrity\n\n - Fix DM integrity to avoid checking integrity of failed reads\n\n - Fix DM integrity to use init_completion\n\n - A couple DM log-writes target fixes\n\n - Simplify DAX flushing by eliminating the unnecessary flush\n   abstraction that was stood up for DM's use.\n\n* tag 'for-4.14/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dax: remove the pmem_dax_ops->flush abstraction\n  dm integrity: use init_completion instead of COMPLETION_INITIALIZER_ONSTACK\n  dm integrity: make blk_integrity_profile structure const\n  dm integrity: do not check integrity for failed read operations\n  dm log writes: fix >512b sectorsize support\n  dm log writes: don't use all the cpu while waiting to log blocks\n  dm ioctl: constify ioctl lookup table\n  dm: constify argument arrays\n  dm integrity: count and display checksum failures\n  dm integrity: optimize writing dm-bufio buffers that are partially changed\n  dm rq: do not update rq partially in each ending bio\n  dm rq: make dm-sq requeuing behavior consistent with dm-mq behavior\n  dm mpath: complain about unsupported __multipath_map_bio() return values\n  dm mpath: avoid that building with W=1 causes gcc 7 to complain about fall-through Merge tag 'fbdev-v4.14' of git://github.com/bzolnier/linux\n\nPull fbdev updates from Bartlomiej Zolnierkiewicz:\n\n - make fbcon a built-time depency for fbdev (fbcon was tristate option\n   before, now it is a bool) - this is a first step in preparations for\n   making console_lock usage saner (currently it acts like the BKL for\n   all things fbdev/fbcon) (Daniel Vetter)\n\n - add fbcon=margin:<color> command line option to select the fbcon\n   margin color (David Lechner)\n\n - add DMI quirk table for x86 systems which need fbcon rotation\n   (devices like Asus T100HA, GPD Pocket, the GPD win and the I.T.Works\n   TW891) (Hans de Goede)\n\n - fix 1bpp logo support for unusual width (needed by LEGO MINDSTORMS\n   EV3) (David Lechner)\n\n - enable Xilinx FB driver for ARM ZynqMP platform (Michal Simek)\n\n - fix use after free in the error path of udlfb driver (Anton Vasilyev)\n\n - fix error return code handling in pxa3xx_gcu driver (Gustavo A. R.\n   Silva)\n\n - fix bootparams.screeninfo arguments checking in vgacon (Jan H.\n   Schönherr)\n\n - do not leak uninitialized padding in clk to userspace in the debug\n   code of atyfb driver (Vladis Dronov)\n\n - fix compiler warnings in fbcon code and matroxfb driver (Arnd\n   Bergmann)\n\n - convert fbdev susbsytem to using %pOF instead of full_name (Rob\n   Herring)\n\n - structures constifications (Arvind Yadav, Bhumika Goyal, Gustavo A.\n   R. Silva, Julia Lawall)\n\n - misc cleanups (Gustavo A. R. Silva, Hyun Kwon, Julia Lawall, Kuninori\n   Morimoto, Lynn Lei)\n\n* tag 'fbdev-v4.14' of git://github.com/bzolnier/linux: (75 commits)\n  video/console: Update BIOS dates list for GPD win console rotation DMI quirk\n  video/console: Add rotated LCD-panel DMI quirk for the VIOS LTH17\n  video: fbdev: sis: fix duplicated code for different branches\n  video: fbdev: make fb_var_screeninfo const\n  video: fbdev: aty: do not leak uninitialized padding in clk to userspace\n  vgacon: Prevent faulty bootparams.screeninfo from causing harm\n  video: fbdev: make fb_videomode const\n  video/console: Add new BIOS date for GPD pocket to dmi quirk table\n  fbcon: remove restriction on margin color\n  video: ARM CLCD: constify amba_id\n  video: fm2fb: constify zorro_device_id\n  video: fbdev: annotate fb_fix_screeninfo with const and __initconst\n  omapfb: constify omap_video_timings structures\n  video: fbdev: udlfb: Fix use after free on dlfb_usb_probe error path\n  fbdev: i810: make fb_ops const\n  fbdev: matrox: make fb_ops const\n  video: fbdev: pxa3xx_gcu: fix error return code in pxa3xx_gcu_probe()\n  video: fbdev: Enable Xilinx FB for ZynqMP\n  video: fbdev: Fix multiple style issues in xilinxfb\n  video: fbdev: udlfb: constify usb_device_id.\n  ... Merge git://www.linux-watchdog.org/linux-watchdog\n\nPull watchdog updates from Wim Van Sebroeck:\n\n - add support for the watchdog on Meson8 and Meson8m2\n\n - add support for MediaTek MT7623 and MT7622 SoC\n\n - add support for the r8a77995 wdt\n\n - explicitly request exclusive reset control for asm9260_wdt,\n   zx2967_wdt, rt2880_wdt and mt7621_wdt\n\n - improvements to asm9260_wdt, aspeed_wdt, renesas_wdt and cadence_wdt\n\n - add support for reading freq via CCF + suspend/resume support for\n   of_xilinx_wdt\n\n - constify watchdog_ops and various device-id structures\n\n - revert of commit 1fccb73011ea (\"iTCO_wdt: all versions count down\n   twice\") (Bug 196509)\n\n* git://www.linux-watchdog.org/linux-watchdog: (40 commits)\n  watchdog: mei_wdt: constify mei_cl_device_id\n  watchdog: sp805: constify amba_id\n  watchdog: ziirave: constify i2c_device_id\n  watchdog: sc1200: constify pnp_device_id\n  dt-bindings: watchdog: renesas-wdt: Add support for the r8a77995 wdt\n  watchdog: renesas_wdt: update copyright dates\n  watchdog: renesas_wdt: make 'clk' a variable local to probe()\n  watchdog: renesas_wdt: consistently use RuntimePM for clock management\n  watchdog: aspeed: Support configuration of external signal properties\n  dt-bindings: watchdog: aspeed: External reset signal properties\n  drivers/watchdog: Add optional ASPEED device tree properties\n  drivers/watchdog: ASPEED reference dev tree properties for config\n  watchdog: da9063_wdt: Simplify by removing unneeded struct...\n  watchdog: bcm7038: Check the return value from clk_prepare_enable()\n  watchdog: qcom: Check for platform_get_resource() failure\n  watchdog: of_xilinx_wdt: Add suspend/resume support\n  watchdog: of_xilinx_wdt: Add support for reading freq via CCF\n  dt-bindings: watchdog: mediatek: add support for MediaTek MT7623 and MT7622 SoC\n  watchdog: max77620_wdt: constify platform_device_id\n  watchdog: pcwd_usb: constify usb_device_id\n  ... Merge branch 'dmi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging\n\nPull dmi update from Jean Delvare:\n \"Mark all struct dmi_system_id instances const\"\n\n* 'dmi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging:\n  dmi: Mark all struct dmi_system_id instances const Merge tag 'pinctrl-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control fixes from Linus Walleij:\n \"This slew of fixes for pin control was noticed and patched up early,\n  so to get the annoyance out of the way for -rc1 it would make sense to\n  send them already.\n\n   - Fix a build include in the Uniphier driver to keep pace with\n     ongoing refactorings.\n\n   - Fix a slew of minor semantic and syntactic issues as well as\n     stricting up Kconfig for the new Spreadtrum driver.\n\n   - Fix the GPIO interrupt set-up on the Marvell 37xx Armada as fallout\n     for dynamically allocating irq descriptors from the core. (Also\n     tagged for stable.)\n\n   - Fix AMD register suspend/resume state spool/unspooling so that\n     wakeup works as it should. (Also tagged for stable.)\"\n\n* tag 'pinctrl-v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl/amd: save pin registers over suspend/resume\n  pinctrl: armada-37xx: Fix gpio interrupt setup\n  pinctrl: sprd: fix off by one bugs\n  pinctrl: sprd: check for allocation failure\n  pinctrl: sprd: Restrict PINCTRL_SPRD to ARCH_SPRD or COMPILE_TEST\n  pinctrl: sprd: fix build errors and dependencies\n  pinctrl: sprd: make three local functions static\n  pinctrl: uniphier: include <linux/build_bug.h> instead of <linux/bug.h> Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"A few leftovers\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm, page_owner: skip unnecessary stack_trace entries\n  arm64: stacktrace: avoid listing stacktrace functions in stacktrace\n  mm: treewide: remove GFP_TEMPORARY allocation flag\n  IB/mlx4: fix sprintf format warning\n  fscache: fix fscache_objlist_show format processing\n  lib/test_bitmap.c: use ULL suffix for 64-bit constants\n  procfs: remove unused variable\n  drivers/media/cec/cec-adap.c: fix build with gcc-4.4.4\n  idr: remove WARN_ON_ONCE() when trying to replace negative ID Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"A handful of tooling fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf stat: Wait for the correct child\n  perf tools: Support running perf binaries with a dash in their name\n  perf config: Check not only section->from_system_config but also item's\n  perf ui progress: Fix progress update\n  perf ui progress: Make sure we always define step value\n  perf tools: Open perf.data with O_CLOEXEC flag\n  tools lib api: Fix make DEBUG=1 build\n  perf tests: Fix compile when libunwind's unwind.h is available\n  tools include linux: Guard against redefinition of some macros Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Three CPU hotplug related fixes and a debugging improvement\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/debug: Add debugfs knob for \"sched_debug\"\n  sched/core: WARN() when migrating to an offline CPU\n  sched/fair: Plug hole between hotplug and active_load_balance()\n  sched/fair: Avoid newidle balance for !active CPUs Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"The main changes are the PCID fixes from Andy, but there's also two\n  hyperv fixes and two paravirt updates\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/hyper-v: Remove duplicated HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED definition\n  x86/hyper-V: Allocate the IDT entry early in boot\n  paravirt: Switch maintainer\n  x86/paravirt: Remove no longer used paravirt functions\n  x86/mm/64: Initialize CR4.PCIDE early\n  x86/hibernate/64: Mask off CR3's PCID bits in the saved CR3\n  x86/mm: Get rid of VM_BUG_ON in switch_tlb_irqs_off() Merge tag 'openrisc-for-linus' of git://github.com/openrisc/linux\n\nPull OpenRISC fixlet from Stafford Horne:\n \"Fix warning for upcoming work to remove linux/vmalloc.h from\n  asm-generic/io.h\"\n\n* tag 'openrisc-for-linus' of git://github.com/openrisc/linux:\n  openrisc: add forward declaration for struct vm_area_struct Merge tag 'modules-for-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux\n\nPull modules updates from Jessica Yu:\n \"Summary of modules changes for the 4.14 merge window:\n\n   - minor code cleanups and fixes\n\n   - modpost: avoid building modules that have names that exceed the\n     size of the name field in struct module\"\n\n* tag 'modules-for-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux:\n  module: Remove const attribute from alias for MODULE_DEVICE_TABLE\n  module: fix ddebug_remove_module()\n  modpost: abort if module name is too long Fix up MAINTAINERS file sorting\n\nAnother merge window, another MAINTAINERS file disaster.\n\nPeople have serious problems with the alphabet and sorting, and poor\nJérôme Glisse and Radim Krčmář get their names mangled by locale issues,\nturning them into some mangled mess (probably others do too, but those\ntwo stood out when sorting things again).\n\nAnd we now have two copies of the same 'AS3645A LED FLASH CONTROLLER\nDRIVER' in the tree and in the MAINTAINERS file, but that's a separate\nissue - the duplication is real, and I left them as two entries for the\nsame name.\n\nThis does not try to sort the actual section pattern entries, although I\nmay end up doing that later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux\n\nPull clk updates from Stephen Boyd:\n \"The diff is dominated by the Allwinner A10/A20 SoCs getting converted\n  to the sunxi-ng framework. Otherwise, the heavy hitters are various\n  drivers for SoCs like AT91, Amlogic, Renesas, and Rockchip. There are\n  some other new clk drivers in here too but overall this is just a\n  bunch of clk drivers for various different pieces of hardware and a\n  collection of non-critical fixes for clk drivers.\n\n  New Drivers:\n   - Allwinner R40 SoCs\n   - Renesas R-Car Gen3 USB 2.0 clock selector PHY\n   - Atmel AT91 audio PLL\n   - Uniphier PXs3 SoCs\n   - ARC HSDK Board PLLs\n   - AXS10X Board PLLs\n   - STMicroelectronics STM32H743 SoCs\n\n  Removed Drivers:\n   - Non-compiling mb86s7x support\n\n  Updates:\n   - Allwinner A10/A20 SoCs converted to sunxi-ng framework\n   - Allwinner H3 CPU clk fixes\n   - Renesas R-Car D3 SoC\n   - Renesas V2H and M3-W modules\n   - Samsung Exynos5420/5422/5800 audio fixes\n   - Rockchip fractional clk approximation fixes\n   - Rockchip rk3126 SoC support within the rk3128 driver\n   - Amlogic gxbb CEC32 and sd_emmc clks\n   - Amlogic meson8b reset controller support\n   - IDT VersaClock 5P49V5925/5P49V6901 support\n   - Qualcomm MSM8996 SMMU clks\n   - Various 'const' applications for struct clk_ops\n   - si5351 PLL reset bugfix\n   - Uniphier audio on LD11/LD20 and ethernet support on LD11/LD20/Pro4/PXs2\n   - Assorted Tegra clk driver fixes\"\n\n* tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux: (120 commits)\n  clk: si5351: fix PLL reset\n  ASoC: atmel-classd: remove aclk clock\n  ASoC: atmel-classd: remove aclk clock from DT binding\n  clk: at91: clk-generated: make gclk determine audio_pll rate\n  clk: at91: clk-generated: create function to find best_diff\n  clk: at91: add audio pll clock drivers\n  dt-bindings: clk: at91: add audio plls to the compatible list\n  clk: at91: clk-generated: remove useless divisor loop\n  clk: mb86s7x: Drop non-building driver\n  clk: ti: check for null return in strrchr to avoid null dereferencing\n  clk: Don't write error code into divider register\n  clk: uniphier: add video input subsystem clock\n  clk: uniphier: add audio system clock\n  clk: stm32h7: Add stm32h743 clock driver\n  clk: gate: expose clk_gate_ops::is_enabled\n  clk: nxp: clk-lpc32xx: rename clk_gate_is_enabled()\n  clk: uniphier: add PXs3 clock data\n  clk: hi6220: change watchdog clock source\n  clk: Kconfig: Name RK805 in Kconfig for COMMON_CLK_RK808\n  clk: cs2000: Add cs2000_set_saved_rate\n  ... Merge tag 'rtc-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux\n\nPull RTC updates from Alexandre Belloni:\n \"Subsystem:\n   - remove .open() and .release() RTC ops\n   - constify i2c_device_id\n\n  New driver:\n   - Realtek RTD1295\n   - Android emulator (goldfish) RTC\n\n  Drivers:\n   - ds1307: Beginning of a huge cleanup\n   - s35390a: handle invalid RTC time\n   - sun6i: external oscillator gate support\"\n\n* tag 'rtc-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux: (40 commits)\n  rtc: ds1307: use octal permissions\n  rtc: ds1307: fix braces\n  rtc: ds1307: fix alignments and blank lines\n  rtc: ds1307: use BIT\n  rtc: ds1307: use u32\n  rtc: ds1307: use sizeof\n  rtc: ds1307: remove regs member\n  rtc: Add Realtek RTD1295\n  dt-bindings: rtc: Add Realtek RTD1295\n  rtc: sun6i: Add support for the external oscillator gate\n  rtc: goldfish: Add RTC driver for Android emulator\n  dt-bindings: Add device tree binding for Goldfish RTC driver\n  rtc: ds1307: add basic support for ds1341 chip\n  rtc: ds1307: remove member nvram_offset from struct ds1307\n  rtc: ds1307: factor out offset to struct chip_desc\n  rtc: ds1307: factor out rtc_ops to struct chip_desc\n  rtc: ds1307: factor out irq_handler to struct chip_desc\n  rtc: ds1307: improve irq setup\n  rtc: ds1307: constify struct chip_desc variables\n  rtc: ds1307: improve trickle charger initialization\n  ... Merge tag 'sound-fix-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Most of the commits are trivial cleanup patches, while one commit is a\n  significant fix for the race at ALSA sequencer that was spotted by\n  syzkaller\"\n\n* tag 'sound-fix-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: seq: Cancel pending autoload work at unbinding device\n  ALSA: firewire: Use common error handling code in snd_motu_stream_start_duplex()\n  ALSA: asihpi: Kill BUG_ON() usages\n  ALSA: core: Use %pS printk format for direct addresses\n  ALSA: ymfpci: Use common error handling code in snd_ymfpci_create()\n  ALSA: ymfpci: Use common error handling code in snd_card_ymfpci_probe()\n  ALSA: 6fire: Use common error handling code in usb6fire_chip_probe()\n  ALSA: usx2y: Use common error handling code in submit_urbs()\n  ALSA: us122l: Use common error handling code in us122l_create_card()\n  ALSA: hdspm: Use common error handling code in snd_hdspm_probe()\n  ALSA: rme9652: Use common code in hdsp_get_iobox_version()\n  ALSA: maestro3: Use common error handling code in two functions Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"A tiny update: one patch corrects a Kconfig problem with the shift of\n  the SAS SMP code to BSG and the other removes a vestige of user space\n  target mode\"\n\n* tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: scsi_transport_sas: select BLK_DEV_BSGLIB\n  scsi: Remove Scsi_Host.uspace_req_q Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"Small collection of fixes that would be nice to have in -rc1. This\n  contains:\n\n   - NVMe pull request form Christoph, mostly with fixes for nvme-pci,\n     host memory buffer in particular.\n\n   - Error handling fixup for cgwb_create(), in case allocation of 'wb'\n     fails. From Christophe Jaillet.\n\n   - Ensure that trace_block_getrq() gets the 'dev' in an appropriate\n     fashion, to avoid a potential NULL deref. From Greg Thelen.\n\n   - Regression fix for dm-mq with blk-mq, fixing a problem with\n     stacking IO schedulers. From me.\n\n   - string.h fixup, fixing an issue with memcpy_and_pad(). This\n     original change came in through an NVMe dependency, which is why\n     I'm including it here. From Martin Wilck.\n\n   - Fix potential int overflow in __blkdev_sectors_to_bio_pages(), from\n     Mikulas.\n\n   - MBR enable fix for sed-opal, from Scott\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  block: directly insert blk-mq request from blk_insert_cloned_request()\n  mm/backing-dev.c: fix an error handling path in 'cgwb_create()'\n  string.h: un-fortify memcpy_and_pad\n  nvme-pci: implement the HMB entry number and size limitations\n  nvme-pci: propagate (some) errors from host memory buffer setup\n  nvme-pci: use appropriate initial chunk size for HMB allocation\n  nvme-pci: fix host memory buffer allocation fallback\n  nvme: fix lightnvm check\n  block: fix integer overflow in __blkdev_sectors_to_bio_pages()\n  block: sed-opal: Set MBRDone on S3 resume path if TPER is MBREnabled\n  block: tolerate tracing of NULL bio Merge tag 'docs-4.14' of git://git.lwn.net/linux\n\nPull documentation fixes from Jonathan Corbet:\n \"A cleanup from Mauro that needed to wait for the media pull, plus a\n  handful of other fixes that wandered in\"\n\n* tag 'docs-4.14' of git://git.lwn.net/linux:\n  kokr/memory-barriers.txt: Apply atomic_t.txt change\n  kokr/doc: Update memory-barriers.txt for read-to-write dependencies\n  docs-rst: don't require adjustbox anymore\n  docs-rst: conf.py: only setup notice box colors if Sphinx < 1.6\n  docs-rst: conf.py: remove lscape from LaTeX preamble Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse\n\nPull fuse updates from Miklos Szeredi:\n \"This fixes a regression (spotted by the Sandstorm.io folks) in the pid\n  namespace handling introduced in 4.12.\n\n  There's also a fix for honoring sync/dsync flags for pwritev2()\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse:\n  fuse: getattr cleanup\n  fuse: honor iocb sync flags on write\n  fuse: allow server to run in different pid_ns Merge branch 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull overlayfs updates from Miklos Szeredi:\n \"This fixes d_ino correctness in readdir, which brings overlayfs on par\n  with normal filesystems regarding inode number semantics, as long as\n  all layers are on the same filesystem.\n\n  There are also some bug fixes, one in particular (random ioctl's\n  shouldn't be able to modify lower layers) that touches some vfs code,\n  but of course no-op for non-overlay fs\"\n\n* 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  ovl: fix false positive ESTALE on lookup\n  ovl: don't allow writing ioctl on lower layer\n  ovl: fix relatime for directories\n  vfs: add flags to d_real()\n  ovl: cleanup d_real for negative\n  ovl: constant d_ino for non-merge dirs\n  ovl: constant d_ino across copy up\n  ovl: fix readdir error value\n  ovl: check snprintf return Merge tag 'f2fs-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've mostly tuned f2fs to provide better user\n  experience for Android. Especially, we've worked on atomic write\n  feature again with SQLite community in order to support it officially.\n  And we added or modified several facilities to analyze and enhance IO\n  behaviors.\n\n  Major changes include:\n   - add app/fs io stat\n   - add inode checksum feature\n   - support project/journalled quota\n   - enhance atomic write with new ioctl() which exposes feature set\n   - enhance background gc/discard/fstrim flows with new gc_urgent mode\n   - add F2FS_IOC_FS{GET,SET}XATTR\n   - fix some quota flows\"\n\n* tag 'f2fs-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (63 commits)\n  f2fs: hurry up to issue discard after io interruption\n  f2fs: fix to show correct discard_granularity in sysfs\n  f2fs: detect dirty inode in evict_inode\n  f2fs: clear radix tree dirty tag of pages whose dirty flag is cleared\n  f2fs: speed up gc_urgent mode with SSR\n  f2fs: better to wait for fstrim completion\n  f2fs: avoid race in between read xattr & write xattr\n  f2fs: make get_lock_data_page to handle encrypted inode\n  f2fs: use generic terms used for encrypted block management\n  f2fs: introduce f2fs_encrypted_file for clean-up\n  Revert \"f2fs: add a new function get_ssr_cost\"\n  f2fs: constify super_operations\n  f2fs: fix to wake up all sleeping flusher\n  f2fs: avoid race in between atomic_read & atomic_inc\n  f2fs: remove unneeded parameter of change_curseg\n  f2fs: update i_flags correctly\n  f2fs: don't check inode's checksum if it was dirtied or writebacked\n  f2fs: don't need to update inode checksum for recovery\n  f2fs: trigger fdatasync for non-atomic_write file\n  f2fs: fix to avoid race in between aio and gc\n  ... Merge tag 'ceph-for-4.14-rc1' of git://github.com/ceph/ceph-client\n\nPull ceph updates from Ilya Dryomov:\n \"The highlights include:\n\n   - a large series of fixes and improvements to the snapshot-handling\n     code (Zheng Yan)\n\n   - individual read/write OSD requests passed down to libceph are now\n     limited to 16M in size to avoid hitting OSD-side limits (Zheng Yan)\n\n   - encode MStatfs v2 message to allow for more accurate space usage\n     reporting (Douglas Fuller)\n\n   - switch to the new writeback error tracking infrastructure (Jeff\n     Layton)\"\n\n* tag 'ceph-for-4.14-rc1' of git://github.com/ceph/ceph-client: (35 commits)\n  ceph: stop on-going cached readdir if mds revokes FILE_SHARED cap\n  ceph: wait on writeback after writing snapshot data\n  ceph: fix capsnap dirty pages accounting\n  ceph: ignore wbc->range_{start,end} when write back snapshot data\n  ceph: fix \"range cyclic\" mode writepages\n  ceph: cleanup local variables in ceph_writepages_start()\n  ceph: optimize pagevec iterating in ceph_writepages_start()\n  ceph: make writepage_nounlock() invalidate page that beyonds EOF\n  ceph: properly get capsnap's size in get_oldest_context()\n  ceph: remove stale check in ceph_invalidatepage()\n  ceph: queue cap snap only when snap realm's context changes\n  ceph: handle race between vmtruncate and queuing cap snap\n  ceph: fix message order check in handle_cap_export()\n  ceph: fix NULL pointer dereference in ceph_flush_snaps()\n  ceph: adjust 36 checks for NULL pointers\n  ceph: delete an unnecessary return statement in update_dentry_lease()\n  ceph: ENOMEM pr_err in __get_or_create_frag() is redundant\n  ceph: check negative offsets in ceph_llseek()\n  ceph: more accurate statfs\n  ceph: properly set snap follows for cap reconnect\n  ... Merge tag 'dma-mapping-4.14' of git://git.infradead.org/users/hch/dma-mapping\n\nPull dma-mapping updates from Christoph Hellwig:\n\n - removal of the old dma_alloc_noncoherent interface\n\n - remove unused flags to dma_declare_coherent_memory\n\n - restrict OF DMA configuration to specific physical busses\n\n - use the iommu mailing list for dma-mapping questions and patches\n\n* tag 'dma-mapping-4.14' of git://git.infradead.org/users/hch/dma-mapping:\n  dma-coherent: fix dma_declare_coherent_memory() logic error\n  ARM: imx: mx31moboard: Remove unused 'dma' variable\n  dma-coherent: remove an unused variable\n  MAINTAINERS: use the iommu list for the dma-mapping subsystem\n  dma-coherent: remove the DMA_MEMORY_MAP and DMA_MEMORY_IO flags\n  dma-coherent: remove the DMA_MEMORY_INCLUDES_CHILDREN flag\n  of: restrict DMA configuration\n  dma-mapping: remove dma_alloc_noncoherent and dma_free_noncoherent\n  i825xx: switch to switch to dma_alloc_attrs\n  au1000_eth: switch to dma_alloc_attrs\n  sgiseeq: switch to dma_alloc_attrs\n  dma-mapping: reduce dma_mapping_error inline bloat Merge tag 'uuid-for-4.14' of git://git.infradead.org/users/hch/uuid\n\nPull uuid updates from Christoph Hellwig:\n \"Just a single conversion to the new UUID API for this merge window\"\n\n* tag 'uuid-for-4.14' of git://git.infradead.org/users/hch/uuid:\n  efi: switch to use new generic UUID API Merge tag 'selinux-pr-20170831' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux\n\nPull selinux updates from Paul Moore:\n \"A relatively quiet period for SELinux, 11 patches with only two/three\n  having any substantive changes.\n\n  These noteworthy changes include another tweak to the NNP/nosuid\n  handling, per-file labeling for cgroups, and an object class fix for\n  AF_UNIX/SOCK_RAW sockets; the rest of the changes are minor tweaks or\n  administrative updates (Stephen's email update explains the file\n  explosion in the diffstat).\n\n  Everything passes the selinux-testsuite\"\n\n[ Also a couple of small patches from the security tree from Tetsuo\n  Handa for Tomoyo and LSM cleanup. The separation of security policy\n  updates wasn't all that clean - Linus ]\n\n* tag 'selinux-pr-20170831' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux:\n  selinux: constify nf_hook_ops\n  selinux: allow per-file labeling for cgroupfs\n  lsm_audit: update my email address\n  selinux: update my email address\n  MAINTAINERS: update the NetLabel and Labeled Networking information\n  selinux: use GFP_NOWAIT in the AVC kmem_caches\n  selinux: Generalize support for NNP/nosuid SELinux domain transitions\n  selinux: genheaders should fail if too many permissions are defined\n  selinux: update the selinux info in MAINTAINERS\n  credits: update Paul Moore's info\n  selinux: Assign proper class to PF_UNIX/SOCK_RAW sockets\n  tomoyo: Update URLs in Documentation/admin-guide/LSM/tomoyo.rst\n  LSM: Remove security_task_create() hook. Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"Two fixes: dead code removal, plus a SME memory encryption fix on\n  32-bit kernels that crashed Xen guests\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/cpu: Remove unused and undefined __generic_processor_info() declaration\n  x86/mm: Make the SME mask a u64 Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Three fixes:\n\n   - fix a suspend/resume cpusets bug\n\n   - fix a !CONFIG_NUMA_BALANCING bug\n\n   - fix a kerneldoc warning\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/fair: Fix nuisance kernel-doc warning\n  sched/cpuset/pm: Fix cpuset vs. suspend-resume bugs\n  sched/fair: Fix wake_affine_llc() balancing rules Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf tooling updates from Ingo Molnar:\n \"Perf tooling updates and fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf annotate browser: Help for cycling thru hottest instructions with TAB/shift+TAB\n  perf stat: Only auto-merge events that are PMU aliases\n  perf test: Add test case for PERF_SAMPLE_PHYS_ADDR\n  perf script: Support physical address\n  perf mem: Support physical address\n  perf sort: Add sort option for physical address\n  perf tools: Support new sample type for physical address\n  perf vendor events powerpc: Remove duplicate events\n  perf intel-pt: Fix syntax in documentation of config option\n  perf test powerpc: Fix 'Object code reading' test\n  perf trace: Support syscall name globbing\n  perf syscalltbl: Support glob matching on syscall names\n  perf report: Calculate the average cycles of iterations Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Ingo Molnar:\n \"A sparse irq race/locking fix, and a MSI irq domains population fix\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Make sparse_irq_lock protect what it should protect\n  genirq/msi: Fix populating multiple interrupts Merge branch 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm\n\nPull ARM updates from Russell King:\n \"Low priority fixes and updates for ARM:\n\n   - add some missing includes\n\n   - efficiency improvements in system call entry code when tracing is\n     enabled\n\n   - ensure ARMv6+ is always built as EABI\n\n   - export save_stack_trace_tsk()\n\n   - fix fatal signal handling during mm fault\n\n   - build translation table base address register from scratch\n\n   - appropriately align the .data section to a word boundary where we\n     rely on that data being word aligned\"\n\n* 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm:\n  ARM: 8691/1: Export save_stack_trace_tsk()\n  ARM: 8692/1: mm: abort uaccess retries upon fatal signal\n  ARM: 8690/1: lpae: build TTB control register value from scratch in v7_ttb_setup\n  ARM: align .data section\n  ARM: always enable AEABI for ARMv6+\n  ARM: avoid saving and restoring registers unnecessarily\n  ARM: move PC value into r9\n  ARM: obtain thread info structure later\n  ARM: use aliases for registers in entry-common\n  ARM: 8689/1: scu: add missing errno include\n  ARM: 8688/1: pm: add missing types include Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull more s390 updates from Martin Schwidefsky:\n \"The second patch set for the 4.14 merge window:\n\n   - Convert the dasd device driver to the blk-mq interface.\n\n   - Provide three zcrypt interfaces for vfio_ap. These will be required\n     for KVM guest access to the crypto cards attached via the AP bus.\n\n   - A couple of memory management bug fixes.\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/dasd: blk-mq conversion\n  s390/mm: use a single lock for the fields in mm_context_t\n  s390/mm: fix race on mm->context.flush_mm\n  s390/mm: fix local TLB flushing vs. detach of an mm address space\n  s390/zcrypt: externalize AP queue interrupt control\n  s390/zcrypt: externalize AP config info query\n  s390/zcrypt: externalize test AP queue\n  s390/mm: use VM_BUG_ON in crst_table_[upgrade|downgrade] Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux\n\nPull thermal updates from Zhang Rui:\n\n - fix resources release in error paths when registering thermal zone.\n   (Christophe Jaillet)\n\n - introduce a new thermal driver for on-chip PVT (Process, Voltage and\n   Temperature) monitoring unit implemented on UniPhier SoCs. This\n   driver supports temperature monitoring and alert function. (Kunihiko\n   Hayashi)\n\n - Add support for mt2712 chip in the mtk_thermal driver. (Louis Yu)\n\n - Add support for RK3328 SOC in rockchip_thermal driver. (Rocky Hao)\n\n - cleanup a couple of platform thermal drivers to constify\n   thermal_zone_of_device_ops structures. (Julia Lawall)\n\n - a couple of fixes in int340x and intel_pch_thermal thermal driver.\n   (Arvind Yadav, Sumeet Pawnikar, Brian Bian, Ed Swierk, Zhang Rui)\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux: (27 commits)\n  Thermal: int3406_thermal: fix thermal sysfs I/F\n  thermal: mediatek: minor mtk_thermal.c cleanups\n  thermal: mediatek: extend calibration data for mt2712 chip\n  thermal: mediatek: add Mediatek thermal driver for mt2712\n  dt-bindings: thermal: Add binding document for Mediatek thermal controller\n  thermal: intel_pch_thermal: Fix enable check on Broadwell-DE\n  thermal: rockchip: Support the RK3328 SOC in thermal driver\n  dt-bindings: rockchip-thermal: Support the RK3328 SoC compatible\n  thermal: bcm2835: constify thermal_zone_of_device_ops structures\n  thermal: exynos: constify thermal_zone_of_device_ops structures\n  thermal: zx2967: constify thermal_zone_of_device_ops structures\n  thermal: rcar_gen3_thermal: constify thermal_zone_of_device_ops structures\n  thermal: qoriq: constify thermal_zone_of_device_ops structures\n  thermal: hisilicon: constify thermal_zone_of_device_ops structures\n  thermal: core: Fix resources release in error paths in thermal_zone_device_register()\n  thermal: core: Use the new 'thermal_zone_destroy_device_groups()' helper function\n  thermal: core: Add some new helper functions to free resources\n  thermal: int3400_thermal: process \"thermal table changed\" event\n  thermal: uniphier: add UniPhier thermal driver\n  dt-bindings: thermal: add binding documentation for UniPhier thermal monitor\n  ... Merge tag 'nfs-for-4.14-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client updates from Trond Myklebust:\n \"Hightlights include:\n\n  Stable bugfixes:\n   - Fix mirror allocation in the writeback code to avoid a use after\n     free\n   - Fix the O_DSYNC writes to use the correct byte range\n   - Fix 2 use after free issues in the I/O code\n\n  Features:\n   - Writeback fixes to split up the inode->i_lock in order to reduce\n     contention\n   - RPC client receive fixes to reduce the amount of time the\n     xprt->transport_lock is held when receiving data from a socket into\n     am XDR buffer.\n   - Ditto fixes to reduce contention between call side users of the\n     rdma rb_lock, and its use in rpcrdma_reply_handler.\n   - Re-arrange rdma stats to reduce false cacheline sharing.\n   - Various rdma cleanups and optimisations.\n   - Refactor the NFSv4.1 exchange id code and clean up the code.\n   - Const-ify all instances of struct rpc_xprt_ops\n\n  Bugfixes:\n   - Fix the NFSv2 'sec=' mount option.\n   - NFSv4.1: don't use machine credentials for CLOSE when using\n     'sec=sys'\n   - Fix the NFSv3 GRANT callback when the port changes on the server.\n   - Fix livelock issues with COMMIT\n   - NFSv4: Use correct inode in _nfs4_opendata_to_nfs4_state() when\n     doing and NFSv4.1 open by filehandle\"\n\n* tag 'nfs-for-4.14-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs: (69 commits)\n  NFS: Count the bytes of skipped subrequests in nfs_lock_and_join_requests()\n  NFS: Don't hold the group lock when calling nfs_release_request()\n  NFS: Remove pnfs_generic_transfer_commit_list()\n  NFS: nfs_lock_and_join_requests and nfs_scan_commit_list can deadlock\n  NFS: Fix 2 use after free issues in the I/O code\n  NFS: Sync the correct byte range during synchronous writes\n  lockd: Delete an error message for a failed memory allocation in reclaimer()\n  NFS: remove jiffies field from access cache\n  NFS: flush data when locking a file to ensure cache coherence for mmap.\n  SUNRPC: remove some dead code.\n  NFS: don't expect errors from mempool_alloc().\n  xprtrdma: Use xprt_pin_rqst in rpcrdma_reply_handler\n  xprtrdma: Re-arrange struct rx_stats\n  NFS: Fix NFSv2 security settings\n  NFSv4.1: don't use machine credentials for CLOSE when using 'sec=sys'\n  SUNRPC: ECONNREFUSED should cause a rebind.\n  NFS: Remove unused parameter gfp_flags from nfs_pageio_init()\n  NFSv4: Fix up mirror allocation\n  SUNRPC: Add a separate spinlock to protect the RPC request receive list\n  SUNRPC: Cleanup xs_tcp_read_common()\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull namespace updates from Eric Biederman:\n \"Life has been busy and I have not gotten half as much done this round\n  as I would have liked. I delayed it so that a minor conflict\n  resolution with the mips tree could spend a little time in linux-next\n  before I sent this pull request.\n\n  This includes two long delayed user namespace changes from Kirill\n  Tkhai. It also includes a very useful change from Serge Hallyn that\n  allows the security capability attribute to be used inside of user\n  namespaces. The practical effect of this is people can now untar\n  tarballs and install rpms in user namespaces. It had been suggested to\n  generalize this and encode some of the namespace information\n  information in the xattr name. Upon close inspection that makes the\n  things that should be hard easy and the things that should be easy\n  more expensive.\n\n  Then there is my bugfix/cleanup for signal injection that removes the\n  magic encoding of the siginfo union member from the kernel internal\n  si_code. The mips folks reported the case where I had used FPE_FIXME\n  me is impossible so I have remove FPE_FIXME from mips, while at the\n  same time including a return statement in that case to keep gcc from\n  complaining about unitialized variables.\n\n  I almost finished the work to get make copy_siginfo_to_user a trivial\n  copy to user. The code is available at:\n\n     git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git neuter-copy_siginfo_to_user-v3\n\n  But I did not have time/energy to get the code posted and reviewed\n  before the merge window opened.\n\n  I was able to see that the security excuse for just copying fields\n  that we know are initialized doesn't work in practice there are buggy\n  initializations that don't initialize the proper fields in siginfo. So\n  we still sometimes copy unitialized data to userspace\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  Introduce v3 namespaced file capabilities\n  mips/signal: In force_fcr31_sig return in the impossible case\n  signal: Remove kernel interal si_code magic\n  fcntl: Don't use ambiguous SIG_POLL si_codes\n  prctl: Allow local CAP_SYS_ADMIN changing exe_file\n  security: Use user_namespace::level to avoid redundant iterations in cap_capable()\n  userns,pidns: Verify the userns for new pid namespaces\n  signal/testing: Don't look for __SI_FAULT in userspace\n  signal/mips: Document a conflict with SI_USER with SIGFPE\n  signal/sparc: Document a conflict with SI_USER with SIGFPE\n  signal/ia64: Document a conflict with SI_USER with SIGFPE\n  signal/alpha: Document a conflict with SI_USER for SIGTRAP Merge tag 'libnvdimm-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm from Dan Williams:\n \"A rework of media error handling in the BTT driver and other updates.\n  It has appeared in a few -next releases and collected some late-\n  breaking build-error and warning fixups as a result.\n\n  Summary:\n\n   - Media error handling support in the Block Translation Table (BTT)\n     driver is reworked to address sleeping-while-atomic locking and\n     memory-allocation-context conflicts.\n\n   - The dax_device lookup overhead for xfs and ext4 is moved out of the\n     iomap hot-path to a mount-time lookup.\n\n   - A new 'ecc_unit_size' sysfs attribute is added to advertise the\n     read-modify-write boundary property of a persistent memory range.\n\n   - Preparatory fix-ups for arm and powerpc pmem support are included\n     along with other miscellaneous fixes\"\n\n* tag 'libnvdimm-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (26 commits)\n  libnvdimm, btt: fix format string warnings\n  libnvdimm, btt: clean up warning and error messages\n  ext4: fix null pointer dereference on sbi\n  libnvdimm, nfit: move the check on nd_reserved2 to the endpoint\n  dax: fix FS_DAX=n BLOCK=y compilation\n  libnvdimm: fix integer overflow static analysis warning\n  libnvdimm, nd_blk: remove mmio_flush_range()\n  libnvdimm, btt: rework error clearing\n  libnvdimm: fix potential deadlock while clearing errors\n  libnvdimm, btt: cache sector_size in arena_info\n  libnvdimm, btt: ensure that flags were also unchanged during a map_read\n  libnvdimm, btt: refactor map entry operations with macros\n  libnvdimm, btt: fix a missed NVDIMM_IO_ATOMIC case in the write path\n  libnvdimm, nfit: export an 'ecc_unit_size' sysfs attribute\n  ext4: perform dax_device lookup at mount\n  ext2: perform dax_device lookup at mount\n  xfs: perform dax_device lookup at mount\n  dax: introduce a fs_dax_get_by_bdev() helper\n  libnvdimm, btt: check memory allocation failure\n  libnvdimm, label: fix index block size calculation\n  ... Merge tag 'pwm/for-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm\n\nPull pwm updates from Thierry Reding:\n \"The changes for this release include a new driver for the PWM\n  controller found on SoCs of the ZTX ZX family. Support for an old\n  SH-Mobile SoC has been dropped and the Rockchip and MediaTek drivers\n  gain support for more generations.\n\n  Other than that there are a bunch of coding style fixes, minor bug\n  fixes and cleanup as well as documentation patches\"\n\n* tag 'pwm/for-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm: (32 commits)\n  pwm: pwm-samsung: fix suspend/resume support\n  pwm: samsung: Remove redundant checks from pwm_samsung_config()\n  pwm: mediatek: Disable clock on PWM configuration failure\n  dt-bindings: pwm: Add MT2712/MT7622 information\n  pwm: mediatek: Fix clock control issue\n  pwm: mediatek: Fix PWM source clock selection\n  pwm: mediatek: Fix Kconfig description\n  pwm: tegra: Explicitly request exclusive reset control\n  pwm: hibvt: Explicitly request exclusive reset control\n  pwm: tiehrpwm: Set driver data before runtime PM enable\n  pwm: tiehrpwm: Miscellaneous coding style fixups\n  pwm: tiecap: Set driver data before runtime PM enable\n  pwm: tiecap: Miscellaneous coding style fixups\n  dt-bindings: pwm: tiecap: Add TI 66AK2G SoC specific compatible\n  pwm: tiehrpwm: fix clock imbalance in probe error path\n  pwm: tiehrpwm: Fix runtime PM imbalance at unbind\n  pwm: Kconfig: Enable pwm-tiecap to be built for Keystone\n  pwm: Add ZTE ZX PWM device driver\n  dt-bindings: pwm: Add bindings doc for ZTE ZX PWM controller\n  pwm: bcm2835: Support for polarity setting via DT\n  ... Merge branch 'bt-fix' (bluetooth fixes from Marcel)\n\nPull bluetooth fix from Marcel Holtmann:\n \"All of our mgmt-tester, l2cap-test and rfcomm-tester unit tests are\n  passing with this patch\"\n\n* emailed patch from Marcel Holtmann <marcel@holtmann.org>:\n  Bluetooth: Properly check L2CAP config option output buffer length Revert \"firmware: add sanity check on shutdown/suspend\"\n\nThis reverts commit 81f95076281fdd3bc382e004ba1bce8e82fccbce.\n\nIt causes random failures of firmware loading at resume time (well,\nrandom for me, it seems to be more reliable for others) because the\nfirmware disabling is not actually synchronous with any particular\nresume event, and at least the btusb driver that uses a workqueue to\nload the firmware at resume seems to occasionally hit the \"firmware\nloading is disabled\" logic because the firmware loader hasn't gotten the\nresume event yet.\n\nSome kind of sanity check for not trying to load firmware when it's not\npossible might be a good thing, but this commit was not it.\n\nGreg seems to have silently suffered the same issue, and pointed to the\nlikely culprit, and Gabriel C verified the revert fixed it for him too.\n\nReported-by: Linus Torvalds <torvalds@linux-foundation.org>\nPointed-at-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nTested-by: Gabriel C <nix.or.die@gmail.com>\nCc: Luis R. Rodriguez <mcgrof@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu\n\nPull m68knommu updates from Greg Ungerer:\n \"Only two changes. One removes unused code, the other makes local clock\n  code arguments consistent with generic clock code\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu:\n  m68knommu: remove dead code\n  m68k: allow NULL clock for clk_get_rate Merge tag 'armsoc-devicetree' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM/arm64 Devicetree updates from Olof Johansson:\n \"As usual, device tree updates is the bulk of our material in this\n  merge window. This time around, 559 patches affecting both 32- and\n  64-bit platforms.\n\n  Changes are too many to list individually, but some of the larger\n  ones:\n\n  New platform/SoC support:\n\n   - Automotive:\n     + Renesas R-Car D3 (R8A77995)\n     + TI DT76x\n     + MediaTek mt2712e\n   - Communication-oriented:\n     + Qualcomm IPQ8074\n     + Broadcom Stingray\n     + Marvell Armada 8080\n   - Set top box:\n     + Uniphier PXs3\n\n  Besides some vendor reference boards for the SoC above, there are also\n  several new boards/machines:\n\n   - TI AM335x Moxa UC-8100-ME-T open platform\n   - TI AM57xx Beaglebone X15 Rev C\n   - Microchip/Atmel sama5d27 SoM1 EK\n   - Broadcom Raspberry Pi Zero W\n   - Gemini-based D-Link DIR-685 router\n   - Freescale i.MX6:\n     + Toradex Apalis module + Apalis and Ixora carrier boards\n     + Engicam GEAM6UL Starter Kit\n   - Freescale i.MX53-based Beckhoff CX9020 Embedded PC\n   - Mediatek mt7623-based BananaPi R2\n   - Several Allwinner-based single-board computers:\n  + Cubietruck plus\n  + Bananapi M3, M2M and M64\n  + NanoPi A64\n  + A64-OLinuXino\n  + Pine64\n   - Rockchip RK3328 Pine64/Rock64 board support\n   - Rockchip RK3399 boards:\n  + RK3399 Sapphire module on Excavator carrier (RK3399 reference design)\n  + Theobroma Systems RK3399-Q7 SoM\n   - ZTE ZX296718 PCBOX Board\"\n\n* tag 'armsoc-devicetree' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (559 commits)\n  ARM: dts: at91: at91sam9g45: add AC97\n  arm64: dts: marvell: mcbin: enable more networking ports\n  arm64: dts: marvell: add a reference to the sysctrl syscon in the ppv2 node\n  arm64: dts: marvell: add TX interrupts for PPv2.2\n  arm64: dts: uniphier: add PXs3 SoC support\n  ARM: dts: uniphier: add pinctrl groups of ethernet phy mode\n  ARM: dts: uniphier: fix size of sdctrl nodes\n  ARM: dts: uniphier: add AIDET nodes\n  arm64: dts: uniphier: fix size of sdctrl node\n  arm64: dts: uniphier: add AIDET nodes\n  Revert \"ARM: dts: sun8i: h3: Enable dwmac-sun8i on the Beelink X2\"\n  arm64: dts: uniphier: add reset controller node of analog amplifier\n  arm64: dts: marvell: add Device Tree files for Armada-8KP\n  arm64: dts: rockchip: add Haikou baseboard with RK3399-Q7 SoM\n  arm64: dts: rockchip: add RK3399-Q7 (Puma) SoM\n  dt-bindings: add rk3399-q7 SoM\n  ARM: dts: rockchip: enable usb for rv1108-evb\n  ARM: dts: rockchip: add usb nodes for rv1108 SoCs\n  dt-bindings: update grf-binding for rv1108 SoCs\n  ARM: dts: aspeed-g4: fix AHB window size of the SMC controllers\n  ... Merge tag 'armsoc-drivers' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC driver updates from Olof Johansson:\n \"This branch contains platform-related driver updates for ARM and ARM64.\n\n  Among them:\n\n   - Reset driver updates:\n     + New API for dealing with arrays of resets\n     + Make unimplemented {de,}assert return success on shared resets\n     + MSDKv1 driver\n     + Removal of obsolete Gemini reset driver\n     + Misc updates for sunxi and Uniphier\n\n   - SoC drivers:\n     + Platform SoC driver registration on Tegra\n     + Shuffle of Qualcomm drivers into a submenu\n     + Allwinner A64 support for SRAM\n     + Renesas R-Car R3 support\n     + Power domains for Rockchip RK3366\n\n   - Misc updates and smaller fixes for TEE and memory driver\n     subsystems\"\n\n* tag 'armsoc-drivers' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (54 commits)\n  firmware: arm_scpi: fix endianness of dev_id in struct dev_pstate_set\n  soc/tegra: fuse: Add missing semi-colon\n  soc/tegra: Restrict SoC device registration to Tegra\n  drivers: soc: sunxi: add support for A64 and its SRAM C\n  drivers: soc: sunxi: add support for remapping func value to reg value\n  drivers: soc: sunxi: fix error processing on base address when claiming\n  dt-bindings: add binding for Allwinner A64 SRAM controller and SRAM C\n  bus: sunxi-rsb: Enable by default for ARM64\n  soc/tegra: Register SoC device\n  firmware: tegra: set drvdata earlier\n  memory: Convert to using %pOF instead of full_name\n  soc: Convert to using %pOF instead of full_name\n  bus: Convert to using %pOF instead of full_name\n  firmware: Convert to using %pOF instead of full_name\n  soc: mediatek: add SCPSYS power domain driver for MediaTek MT7622 SoC\n  soc: mediatek: add header files required for MT7622 SCPSYS dt-binding\n  soc: mediatek: reduce code duplication of scpsys_probe across all SoCs\n  dt-bindings: soc: update the binding document for SCPSYS on MediaTek MT7622 SoC\n  reset: uniphier: add analog amplifiers reset control\n  reset: uniphier: add video input subsystem reset control\n  ... Merge tag 'armsoc-platforms' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM/arm64 SoC platform updates from Olof Johansson: \"This branch\n  contains platform updates for 32- and 64-bit ARM, including defconfig\n  updates to enable new options, drivers and platforms. There are also a\n  few fixes and cleanups for some existing vendors.\n\n  Some of the things worth highlighting here are:\n\n   - Enabling new crypt drivers on arm64 defconfig\n\n   - QCOM IPQ8074 clocks and pinctrl drivers on arm64 defconfig\n\n   - Debug support enabled for Renesas r8a7743\n\n   - Various config updates for Renesas platforms (sound, USB, other\n     drivers)\n\n   - Platform support (including SMP) for TI dra762\n\n   - OMAP cleanups: Move to use generic 8250 debug_ll, removal of stale\n     DMA code\"\n\n* tag 'armsoc-platforms' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (109 commits)\n  ARM: multi_v7_defconfig: make eSDHC driver built-in\n  arm64: defconfig: enable rockchip graphics\n  MAINTAINERS: Update Cavium ThunderX2 entry\n  ARM: config: aspeed: Add I2C, VUART, LPC Snoop\n  ARM: configs: aspeed: Update Aspeed G4 with VMSPLIT_2G\n  ARM: s3c24xx: Fix NAND ECC mode for mini2440 board\n  ARM: davinci_all_defconfig: enable tinydrm and ST7586\n  arm64: defconfig: Enable QCOM IPQ8074 clock and pinctrl\n  ARM: defconfig: tegra: Enable ChipIdea UDC driver\n  ARM: configs: Add Tegra I2S interfaces to multi_v7_defconfig\n  ARM: tegra: Add Tegra I2S interfaces to defconfig\n  ARM: tegra: Update default configuration for v4.13-rc1\n  MAINTAINERS: update ARM/ZTE entry\n  soc: versatile: remove unnecessary static in realview_soc_probe()\n  ARM: Convert to using %pOF instead of full_name\n  ARM: hisi: Fix typo in comment\n  ARM: multi_v7_defconfig: add CONFIG_BRCMSTB_THERMAL\n  arm64: defconfig: add CONFIG_BRCMSTB_THERMAL\n  arm64: defconfig: add recently added crypto drivers as modules\n  arm64: defconfig: enable CONFIG_UNIPHIER_WATCHDOG\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc-next\n\nPull sparc updates from David Miller:\n\n 1) Use register window state adjustment instructions when available,\n    from Anthony Yznaga.\n\n 2) Add VCC console concentrator driver, from Jag Raman.\n\n 3) Add 16GB hugepage support, from Nitin Gupta.\n\n 4) Support cpu 'poke' hypercall, from Vijay Kumar.\n\n 5) Add M7/M8 optimized memcpy/memset/copy_{to,from}_user, from Babu\n    Moger.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc-next: (33 commits)\n  sparc64: Handle additional cases of no fault loads\n  sparc64: speed up etrap/rtrap on NG2 and later processors\n  sparc64: vcc: make ktermios const\n  sparc: leon: grpci1: constify of_device_id\n  sparc: leon: grpci2: constify of_device_id\n  sparc64: vcc: Check for IS_ERR() instead of NULL\n  sparc64: Cleanup hugepage table walk functions\n  sparc64: Add 16GB hugepage support\n  sparc64: Support huge PUD case in get_user_pages\n  sparc64: vcc: Add install & cleanup TTY operations\n  sparc64: vcc: Add break_ctl TTY operation\n  sparc64: vcc: Add chars_in_buffer TTY operation\n  sparc64: vcc: Add write & write_room TTY operations\n  sparc64: vcc: Add hangup TTY operation\n  sparc64: vcc: Add open & close TTY operations\n  sparc64: vcc: Enable LDC event processing engine\n  sparc64: vcc: Add RX & TX timer for delayed LDC operation\n  sparc64: vcc: Create sysfs attribute group\n  sparc64: vcc: Enable VCC port probe and removal\n  sparc64: vcc: TTY driver initialization and cleanup\n  ... Merge tag 'iommu-updates-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU updates from Joerg Roedel:\n \"Slightly more changes than usual this time:\n\n   - KDump Kernel IOMMU take-over code for AMD IOMMU. The code now tries\n     to preserve the mappings of the kernel so that master aborts for\n     devices are avoided. Master aborts cause some devices to fail in\n     the kdump kernel, so this code makes the dump more likely to\n     succeed when AMD IOMMU is enabled.\n\n   - common flush queue implementation for IOVA code users. The code is\n     still optional, but AMD and Intel IOMMU drivers had their own\n     implementation which is now unified.\n\n   - finish support for iommu-groups. All drivers implement this feature\n     now so that IOMMU core code can rely on it.\n\n   - finish support for 'struct iommu_device' in iommu drivers. All\n     drivers now use the interface.\n\n   - new functions in the IOMMU-API for explicit IO/TLB flushing. This\n     will help to reduce the number of IO/TLB flushes when IOMMU drivers\n     support this interface.\n\n   - support for mt2712 in the Mediatek IOMMU driver\n\n   - new IOMMU driver for QCOM hardware\n\n   - system PM support for ARM-SMMU\n\n   - shutdown method for ARM-SMMU-v3\n\n   - some constification patches\n\n   - various other small improvements and fixes\"\n\n* tag 'iommu-updates-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu: (87 commits)\n  iommu/vt-d: Don't be too aggressive when clearing one context entry\n  iommu: Introduce Interface for IOMMU TLB Flushing\n  iommu/s390: Constify iommu_ops\n  iommu/vt-d: Avoid calling virt_to_phys() on null pointer\n  iommu/vt-d: IOMMU Page Request needs to check if address is canonical.\n  arm/tegra: Call bus_set_iommu() after iommu_device_register()\n  iommu/exynos: Constify iommu_ops\n  iommu/ipmmu-vmsa: Make ipmmu_gather_ops const\n  iommu/ipmmu-vmsa: Rereserving a free context before setting up a pagetable\n  iommu/amd: Rename a few flush functions\n  iommu/amd: Check if domain is NULL in get_domain() and return -EBUSY\n  iommu/mediatek: Fix a build warning of BIT(32) in ARM\n  iommu/mediatek: Fix a build fail of m4u_type\n  iommu: qcom: annotate PM functions as __maybe_unused\n  iommu/pamu: Fix PAMU boot crash\n  memory: mtk-smi: Degrade SMI init to module_init\n  iommu/mediatek: Enlarge the validate PA range for 4GB mode\n  iommu/mediatek: Disable iommu clock when system suspend\n  iommu/mediatek: Move pgtable allocation into domain_alloc\n  iommu/mediatek: Merge 2 M4U HWs into one iommu domain\n  ... Merge tag 'for-linus-20170904' of git://git.infradead.org/linux-mtd\n\nPull MTD updates from Boris Brezillon:\n \"General updates:\n   - Constify pci_device_id in various drivers\n   - Constify device_type\n   - Remove pad control code from the Gemini driver\n   - Use %pOF to print OF node full_name\n   - Various fixes in the physmap_of driver\n   - Remove unused vars in mtdswap\n   - Check devm_kzalloc() return value in the spear_smi driver\n   - Check clk_prepare_enable() return code in the st_spi_fsm driver\n   - Create per MTD device debugfs enties\n\n  NAND updates, from Boris Brezillon:\n   - Fix memory leaks in the core\n   - Remove unused NAND locking support\n   - Rename nand.h into rawnand.h (preparing support for spi NANDs)\n   - Use NAND_MAX_ID_LEN where appropriate\n   - Fix support for 20nm Hynix chips\n   - Fix support for Samsung and Hynix SLC NANDs\n   - Various cleanup, improvements and fixes in the qcom driver\n   - Fixes for bugs detected by various static code analysis tools\n   - Fix mxc ooblayout definition\n   - Add a new part_parsers to tmio and sharpsl platform data in order\n     to define a custom list of partition parsers\n   - Request the reset line in exclusive mode in the sunxi driver\n   - Fix a build error in the orion-nand driver when compiled for ARMv4\n   - Allow 64-bit mvebu platforms to select the PXA3XX driver\n\n  SPI NOR updates, from Cyrille Pitchen and Marek Vasut:\n   - add support to the JEDEC JESD216B specification (SFDP tables).\n   - add support to the Intel Denverton SPI flash controller.\n   - fix error recovery for Spansion/Cypress SPI NOR memories.\n   - fix 4-byte address management for the Aspeed SPI controller.\n   - add support to some Microchip SST26 memory parts\n   - remove unneeded pinctrl header Write a message for tag:\"\n\n* tag 'for-linus-20170904' of git://git.infradead.org/linux-mtd: (74 commits)\n  mtd: nand: complain loudly when chip->bits_per_cell is not correctly initialized\n  mtd: nand: make Samsung SLC NAND usable again\n  mtd: nand: tmio: Register partitions using the parsers\n  mfd: tmio: Add partition parsers platform data\n  mtd: nand: sharpsl: Register partitions using the parsers\n  mtd: nand: sharpsl: Add partition parsers platform data\n  mtd: nand: qcom: Support for IPQ8074 QPIC NAND controller\n  mtd: nand: qcom: support for IPQ4019 QPIC NAND controller\n  dt-bindings: qcom_nandc: IPQ8074 QPIC NAND documentation\n  dt-bindings: qcom_nandc: IPQ4019 QPIC NAND documentation\n  dt-bindings: qcom_nandc: fix the ipq806x device tree example\n  mtd: nand: qcom: support for different DEV_CMD register offsets\n  mtd: nand: qcom: QPIC data descriptors handling\n  mtd: nand: qcom: enable BAM or ADM mode\n  mtd: nand: qcom: erased codeword detection configuration\n  mtd: nand: qcom: support for read location registers\n  mtd: nand: qcom: support for passing flags in DMA helper functions\n  mtd: nand: qcom: add BAM DMA descriptor handling\n  mtd: nand: qcom: allocate BAM transaction\n  mtd: nand: qcom: DMA mapping support for register read buffer\n  ... Merge tag 'for-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply\n\nPull power supply and reset changes from Sebastian Reichel:\n \"New chip/feature support:\n   - bq27xxx: support updating battery config from DT\n   - bq24190: support loading battery charge info from DT\n   - LTC2941: add LTC2942/LTC2944 support\n   - max17042: add ACPI support\n   - max1721x: new driver\n\n  Misc:\n   - Move bq27xxx w1 driver from w1 into power-supply subsystem\n   - Introduce power_supply_set_input_current_limit_from_supplier\n   - constify stuff\n   - some minor fixes\"\n\n* tag 'for-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply: (39 commits)\n  power: supply: bq27xxx: enable writing capacity values for bq27421\n  power: supply: bq24190_charger: Get input_current_limit from our supplier\n  power: supply: bq24190_charger: Export 5V boost converter as regulator\n  power: supply: bq24190_charger: Add power_supply_battery_info support\n  power: supply: bq24190_charger: Add property system-minimum-microvolt\n  power: supply: bq24190_charger: Enable devicetree config\n  dt-bindings: power: supply: Add docs for TI BQ24190 battery charger\n  power: supply: bq27xxx: Remove duplicate chip data arrays\n  power: supply: bq27xxx: Enable data memory update for certain chips\n  power: supply: bq27xxx: Add chip IDs for previously shadowed chips\n  power: supply: bq27xxx: Create single chip data table\n  power: supply: bq24190_charger: Add ti,bq24192i to devicetree table\n  power: supply: bq24190_charger: Add input_current_limit property\n  power: supply: Add power_supply_set_input_current_limit_from_supplier helper\n  power: supply: max17042_battery: Fix compiler warning\n  power: supply: core: Delete two error messages for a failed memory allocation in power_supply_check_supplies()\n  power: supply: make device_attribute const\n  power: supply: max17042_battery: Fix ACPI interrupt issues\n  power: supply: max17042_battery: Add support for ACPI enumeration\n  power: supply: lp8788: Make several arrays static const * const\n  ... Merge tag 'rpmsg-v4.14' of git://github.com/andersson/remoteproc\n\nPull rpmsg updates from Bjorn Andersson:\n \"This extends the Qualcomm GLINK implementation to support the\n  additional features used for communicating with modem and DSP\n  coprocessors in modern Qualcomm platforms.\n\n  In addition to this there's support for placing virtio RPMSG buffers\n  in non-System RAM\"\n\n* tag 'rpmsg-v4.14' of git://github.com/andersson/remoteproc: (29 commits)\n  rpmsg: glink: initialize ret to zero to ensure error status check is correct\n  rpmsg: glink: fix null pointer dereference on a null intent\n  dt-bindings: soc: qcom: Extend GLINK to cover SMEM\n  remoteproc: qcom: adsp: Allow defining GLINK edge\n  rpmsg: glink: Export symbols from common code\n  rpmsg: glink: Release idr lock before returning on error\n  rpmsg: glink: Handle remote rx done command\n  rpmsg: glink: Request for intents when unavailable\n  rpmsg: glink: Use the intents passed by remote\n  rpmsg: glink: Receive and store the remote intent buffers\n  rpmsg: glink: Add announce_create ops and preallocate intents\n  rpmsg: glink: Add rx done command\n  rpmsg: glink: Make RX FIFO peak accessor to take an offset\n  rpmsg: glink: Use the local intents when receiving data\n  rpmsg: glink: Add support for TX intents\n  rpmsg: glink: Fix idr_lock from mutex to spinlock\n  rpmsg: glink: Add support for transport version negotiation\n  rpmsg: glink: Introduce glink smem based transport\n  rpmsg: glink: Do a mbox_free_channel in remove\n  rpmsg: glink: Return -EAGAIN when there is no FIFO space\n  ... Merge tag 'rproc-v4.14' of git://github.com/andersson/remoteproc\n\nPull remoteproc updates from Bjorn Andersson:\n \"This adds and improves remoteproc support for TI DA8xx/OMAP-L13x DSP,\n  TI Keystone 66AK2G DSP and iMX6SX/7D Cortex M4 coprocessors. It\n  introduces the Qualcomm restart notifier and a few fixes\"\n\n* tag 'rproc-v4.14' of git://github.com/andersson/remoteproc:\n  remoteproc: Introduce rproc handle accessor for children\n  remoteproc: qcom: Make ssr_notifiers local\n  remoteproc: Stop subdevices in reverse order\n  remoteproc: imx_rproc: add a NXP/Freescale imx_rproc driver\n  remoteproc: dt: Provide bindings for iMX6SX/7D Remote Processor Controller driver\n  remoteproc: qcom: Use PTR_ERR_OR_ZERO\n  remoteproc: st: explicitly request exclusive reset control\n  remoteproc: qcom: explicitly request exclusive reset control\n  remoteproc/keystone: explicitly request exclusive reset control\n  remoteproc/keystone: Add support for Keystone 66AK2G SOCs\n  remoteproc/davinci: Add device tree support for OMAP-L138 DSP\n  dt-bindings: remoteproc: Add bindings for Davinci DSP processors\n  remoteproc/davinci: Add support to parse internal memories\n  remoteproc/davinci: Switch to platform_get_resource_byname()\n  remoteproc: make device_type const\n  soc: qcom: GLINK SSR notifier\n  remoteproc: qcom: Add support for SSR notifications\n  remoteproc: Merge __rproc_boot() with rproc_boot() Merge tag 'vfio-v4.14-rc1' of git://github.com/awilliam/linux-vfio\n\nPull VFIO updates from Alex Williamson:\n\n - Base MSI remapping on either IOMMU domain or IRQ domain support\n   (Robin Murphy)\n\n - Prioritize hardware MSI regions over software defined regions (Robin\n   Murphy)\n\n - Fix no-iommu reference counting (Eric Auger)\n\n - Stall removing last device from group for container cleanup (Alex\n   Williamson)\n\n - Constify amba_id (Arvind Yadav)\n\n* tag 'vfio-v4.14-rc1' of git://github.com/awilliam/linux-vfio:\n  vfio: platform: constify amba_id\n  vfio: Stall vfio_del_group_dev() for container group detach\n  vfio: fix noiommu vfio_iommu_group_get reference count\n  vfio/type1: Give hardware MSI regions precedence\n  vfio/type1: Cope with hardware MSI reserved regions Merge branch 'i2c/for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c updates from Wolfram Sang:\n\n - new drivers for Spreadtrum I2C, Intel Cherry Trail Whiskey Cove SMBUS\n\n - quite some driver updates\n\n - cleanups for the i2c-mux subsystem\n\n - some subsystem-wide constification\n\n - further cleanup of include/linux/i2c\n\n* 'i2c/for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux: (50 commits)\n  i2c: sprd: Fix undefined reference errors\n  i2c: nomadik: constify amba_id\n  i2c: versatile: Make i2c_algo_bit_data const\n  i2c: busses: make i2c_adapter_quirks const\n  i2c: busses: make i2c_adapter const\n  i2c: busses: make i2c_algorithm const\n  i2c: Add Spreadtrum I2C controller driver\n  dt-bindings: i2c: Add Spreadtrum I2C controller documentation\n  i2c-cht-wc: make cht_wc_i2c_adap_driver static\n  MAINTAINERS: Add entry for drivers/i2c/busses/i2c-cht-wc.c\n  i2c: aspeed: Retain delay/setup/hold values when configuring bus frequency\n  dt-bindings: i2c: eeprom: Document vendor to be used and deprecated ones\n  i2c: i801: Restore the presence state of P2SB PCI device after reading BAR\n  MAINTAINERS: drop entry for Blackfin I2C and Sonic's email\n  blackfin: merge the two TWI header files\n  i2c: davinci: Preserve return value of devm_clk_get\n  i2c: mediatek: Add i2c compatible for MediaTek MT7622\n  dt-bindings: i2c: Add MediaTek MT7622 i2c binding\n  dt-bindings: i2c: modify information formats\n  i2c: mux: i2c-arb-gpio-challenge: allow compiling w/o OF support\n  ... Merge tag 'nfsd-4.14' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd updates from Bruce Fields:\n \"More RDMA work and some op-structure constification from Chuck Lever,\n  and a small cleanup to our xdr encoding\"\n\n* tag 'nfsd-4.14' of git://linux-nfs.org/~bfields/linux:\n  svcrdma: Estimate Send Queue depth properly\n  rdma core: Add rdma_rw_mr_payload()\n  svcrdma: Limit RQ depth\n  svcrdma: Populate tail iovec when receiving\n  nfsd: Incoming xdr_bufs may have content in tail buffer\n  svcrdma: Clean up svc_rdma_build_read_chunk()\n  sunrpc: Const-ify struct sv_serv_ops\n  nfsd: Const-ify NFSv4 encoding and decoding ops arrays\n  sunrpc: Const-ify instances of struct svc_xprt_ops\n  nfsd4: individual encoders no longer see error cases\n  nfsd4: skip encoder in trivial error cases\n  nfsd4: define ->op_release for compound ops\n  nfsd4: opdesc will be useful outside nfs4proc.c\n  nfsd4: move some nfsd4 op definitions to xdr4.h Merge branch 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs updates from David Sterba:\n \"The changes range through all types: cleanups, core chagnes, sanity\n  checks, fixes, other user visible changes, detailed list below:\n\n   - deprecated: user transaction ioctl\n\n   - mount option ssd does not change allocation alignments\n\n   - degraded read-write mount is allowed if all the raid profile\n     constraints are met, now based on more accurate check\n\n   - defrag: do not reset compression afterwards; the NOCOMPRESS flag\n     can be now overriden by defrag\n\n   - prep work for better extent reference tracking (related to the\n     qgroup slowness with balance)\n\n   - prep work for compression heuristics\n\n   - memory allocation reductions (may help latencies on a loaded\n     system)\n\n   - better accounting for io waiting states\n\n   - error handling improvements (removed BUGs)\n\n   - added more sanity checks for shared refs\n\n   - fix readdir vs pagefault deadlock under some circumstances\n\n   - fix for 'no-hole' mode, certain combination of compressed and\n     inline extents\n\n   - send: fix emission of invalid clone operations\n\n   - fixup file mode if setting acls fail\n\n   - more fixes from fuzzing\n\n   - oher cleanups\"\n\n* 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux: (104 commits)\n  btrfs: submit superblock io with REQ_META and REQ_PRIO\n  btrfs: remove unnecessary memory barrier in btrfs_direct_IO\n  btrfs: remove superfluous chunk_tree argument from btrfs_alloc_dev_extent\n  btrfs: Remove chunk_objectid parameter of btrfs_alloc_dev_extent\n  btrfs: pass fs_info to btrfs_del_root instead of tree_root\n  Btrfs: add one more sanity check for shared ref type\n  Btrfs: remove BUG_ON in __add_tree_block\n  Btrfs: remove BUG() in add_data_reference\n  Btrfs: remove BUG() in print_extent_item\n  Btrfs: remove BUG() in btrfs_extent_inline_ref_size\n  Btrfs: convert to use btrfs_get_extent_inline_ref_type\n  Btrfs: add a helper to retrive extent inline ref type\n  btrfs: scrub: simplify scrub worker initialization\n  btrfs: scrub: clean up division in scrub_find_csum\n  btrfs: scrub: clean up division in __scrub_mark_bitmap\n  btrfs: scrub: use bool for flush_all_writes\n  btrfs: preserve i_mode if __btrfs_set_acl() fails\n  btrfs: Remove extraneous chunk_objectid variable\n  btrfs: Remove chunk_objectid argument from btrfs_make_block_group\n  btrfs: Remove extra parentheses from condition in copy_items()\n  ... Merge branch 'for-4.14/block-postmerge' of git://git.kernel.dk/linux-block\n\nPull followup block layer updates from Jens Axboe:\n \"I ended up splitting the main pull request for this series into two,\n  mainly because of clashes between NVMe fixes that went into 4.13 after\n  the for-4.14 branches were split off. This pull request is mostly\n  NVMe, but not exclusively. In detail, it contains:\n\n   - Two pull request for NVMe changes from Christoph. Nothing new on\n     the feature front, basically just fixes all over the map for the\n     core bits, transport, rdma, etc.\n\n   - Series from Bart, cleaning up various bits in the BFQ scheduler.\n\n   - Series of bcache fixes, which has been lingering for a release or\n     two. Coly sent this in, but patches from various people in this\n     area.\n\n   - Set of patches for BFQ from Paolo himself, updating both\n     documentation and fixing some corner cases in performance.\n\n   - Series from Omar, attempting to now get the 4k loop support\n     correct. Our confidence level is higher this time.\n\n   - Series from Shaohua for loop as well, improving O_DIRECT\n     performance and fixing a use-after-free\"\n\n* 'for-4.14/block-postmerge' of git://git.kernel.dk/linux-block: (74 commits)\n  bcache: initialize dirty stripes in flash_dev_run()\n  loop: set physical block size to logical block size\n  bcache: fix bch_hprint crash and improve output\n  bcache: Update continue_at() documentation\n  bcache: silence static checker warning\n  bcache: fix for gc and write-back race\n  bcache: increase the number of open buckets\n  bcache: Correct return value for sysfs attach errors\n  bcache: correct cache_dirty_target in __update_writeback_rate()\n  bcache: gc does not work when triggering by manual command\n  bcache: Don't reinvent the wheel but use existing llist API\n  bcache: do not subtract sectors_to_gc for bypassed IO\n  bcache: fix sequential large write IO bypass\n  bcache: Fix leak of bdev reference\n  block/loop: remove unused field\n  block/loop: fix use after free\n  bfq: Use icq_to_bic() consistently\n  bfq: Suppress compiler warnings about comparisons\n  bfq: Check kstrtoul() return value\n  bfq: Declare local functions static\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"The iwlwifi firmware compat fix is in here as well as some other\n  stuff:\n\n  1) Fix request socket leak introduced by BPF deadlock fix, from Eric\n     Dumazet.\n\n  2) Fix VLAN handling with TXQs in mac80211, from Johannes Berg.\n\n  3) Missing __qdisc_drop conversions in prio and qfq schedulers, from\n     Gao Feng.\n\n  4) Use after free in netlink nlk groups handling, from Xin Long.\n\n  5) Handle MTU update properly in ipv6 gre tunnels, from Xin Long.\n\n  6) Fix leak of ipv6 fib tables on netns teardown, from Sabrina Dubroca\n     with follow-on fix from Eric Dumazet.\n\n  7) Need RCU and preemption disabled during generic XDP data patch,\n     from John Fastabend\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (54 commits)\n  bpf: make error reporting in bpf_warn_invalid_xdp_action more clear\n  Revert \"mdio_bus: Remove unneeded gpiod NULL check\"\n  bpf: devmap, use cond_resched instead of cpu_relax\n  bpf: add support for sockmap detach programs\n  net: rcu lock and preempt disable missing around generic xdp\n  bpf: don't select potentially stale ri->map from buggy xdp progs\n  net: tulip: Constify tulip_tbl\n  net: ethernet: ti: netcp_core: no need in netif_napi_del\n  davicom: Display proper debug level up to 6\n  net: phy: sfp: rename dt properties to match the binding\n  dt-binding: net: sfp binding documentation\n  dt-bindings: add SFF vendor prefix\n  dt-bindings: net: don't confuse with generic PHY property\n  ip6_tunnel: fix setting hop_limit value for ipv6 tunnel\n  ip_tunnel: fix setting ttl and tos value in collect_md mode\n  ipv6: fix typo in fib6_net_exit()\n  tcp: fix a request socket leak\n  sctp: fix missing wake ups in some situations\n  netfilter: xt_hashlimit: fix build error caused by 64bit division\n  netfilter: xt_hashlimit: alloc hashtable with right size\n  ... Merge branch 'akpm' (patches from Andrew)\n\nMerge more updates from Andrew Morton:\n\n - most of the rest of MM\n\n - a small number of misc things\n\n - lib/ updates\n\n - checkpatch\n\n - autofs updates\n\n - ipc/ updates\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (126 commits)\n  ipc: optimize semget/shmget/msgget for lots of keys\n  ipc/sem: play nicer with large nsops allocations\n  ipc/sem: drop sem_checkid helper\n  ipc: convert kern_ipc_perm.refcount from atomic_t to refcount_t\n  ipc: convert sem_undo_list.refcnt from atomic_t to refcount_t\n  ipc: convert ipc_namespace.count from atomic_t to refcount_t\n  kcov: support compat processes\n  sh: defconfig: cleanup from old Kconfig options\n  mn10300: defconfig: cleanup from old Kconfig options\n  m32r: defconfig: cleanup from old Kconfig options\n  drivers/pps: use surrounding \"if PPS\" to remove numerous dependency checks\n  drivers/pps: aesthetic tweaks to PPS-related content\n  cpumask: make cpumask_next() out-of-line\n  kmod: move #ifdef CONFIG_MODULES wrapper to Makefile\n  kmod: split off umh headers into its own file\n  MAINTAINERS: clarify kmod is just a kernel module loader\n  kmod: split out umh code into its own file\n  test_kmod: flip INT checks to be consistent\n  test_kmod: remove paranoid UINT_MAX check on uint range processing\n  vfat: deduplicate hex2bin()\n  ... remove gperf left-overs from build system\n\nI removed all the gperf use, but not the Makefile rules.  Sam Ravnborg\nsays I get bonus points for cleaning this up.  I'll hold him to it.\n\nRequested-by: Sam Ravnborg <sam@ravnborg.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'platform-drivers-x86-v4.14-1' of git://git.infradead.org/linux-platform-drivers-x86\n\nPull x86 platform driver updates from Darren Hart:\n \"Several fixes from static analysis and message noise reduction.\n  Correct WMI core and related drivers to evaluate instance number 0x0\n  in accordance with the documentation. Add intel-telemetry support for\n  Gemini Lake. Various individual driver fixes noted below.\n\n  dell-wmi:\n   - Update dell_wmi_check_descriptor_buffer() to new model\n\n  intel-vbtn:\n   - reduce unnecessary messages for normal users\n   - match power button on press rather than release\n\n  intel-hid:\n   - reduce unnecessary messages for normal users\n\n  thinkpad_acpi:\n   - Fix warning about deprecated hwmon_device_register\n\n  wmi:\n   - Fix check for method instance number\n\n  ideapad-laptop:\n   - Expose conservation mode switch\n\n  intel_pmc_core:\n   - Make the driver PCH family agnostic\n\n  peaq-wmi:\n   - Evaluate wmi method with instance number 0x0\n   - silence a static checker warning\n\n  mxm-wmi:\n   - Evaluate wmi method with instance number 0x0\n\n  asus-wmi:\n   - Evaluate wmi method with instance number 0x0\n\n  intel_scu_ipc:\n   - make intel_scu_ipc_pdata_t const\n\n  intel_mid_powerbtn:\n   - make mid_pb_ddata const\n   - fix error return code in mid_pb_probe()\n\n  hp-wmi:\n   - Remove unused macro helper\n   - Correctly determine method id in WMI calls\n\n  dell-wmi:\n   - Fix driver interface version query\n\n  intel_telemetry:\n   - remove redundant macro definition\n   - Add GLK PSS Event Table\n\n  alienware-wmi:\n   - fix format string overflow warning\n\n  ibm_rtl:\n   - remove unnecessary static in ibm_rtl_write()\n\n  msi-wmi:\n   - remove unnecessary static in msi_wmi_notify()\"\n\n* tag 'platform-drivers-x86-v4.14-1' of git://git.infradead.org/linux-platform-drivers-x86: (23 commits)\n  platform/x86: dell-wmi: Update dell_wmi_check_descriptor_buffer() to new model\n  platform/x86: intel-vbtn: reduce unnecessary messages for normal users\n  platform/x86: intel-hid: reduce unnecessary messages for normal users\n  platform/x86: thinkpad_acpi: Fix warning about deprecated hwmon_device_register\n  platform/x86: wmi: Fix check for method instance number\n  platform/x86: ideapad-laptop: Expose conservation mode switch\n  platform/x86: intel_pmc_core: Make the driver PCH family agnostic\n  platform/x86: peaq-wmi: Evaluate wmi method with instance number 0x0\n  platform/x86: mxm-wmi: Evaluate wmi method with instance number 0x0\n  platform/x86: asus-wmi: Evaluate wmi method with instance number 0x0\n  platform/x86: intel_scu_ipc: make intel_scu_ipc_pdata_t const\n  platform/x86: intel_mid_powerbtn: make mid_pb_ddata const\n  platform/x86: intel_mid_powerbtn: fix error return code in mid_pb_probe()\n  platform/x86: hp-wmi: Remove unused macro helper\n  platform/x86: hp-wmi: Correctly determine method id in WMI calls\n  platform/x86: intel-vbtn: match power button on press rather than release\n  platform/x86: dell-wmi: Fix driver interface version query\n  platform/x86: intel_telemetry: remove redundant macro definition\n  platform/x86: intel_telemetry: Add GLK PSS Event Table\n  platform/x86: alienware-wmi: fix format string overflow warning\n  ... Merge tag 'arc-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc\n\nPull ARC updates from Vineet Gupta:\n\n - Support for HSDK board hosting a Quad core HS38x4 based SoC running\n   @1GHz (and some prerrquisite changes such as ability to scoot the\n   kernel code/data from start of memory map etc)\n\n - Quite a few updates for EZChip (Mellanox) platform\n\n - Fixes to fault/exception printing\n\n* tag 'arc-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc: (26 commits)\n  ARC: Re-enable MMU upon Machine Check exception\n  ARC: Show fault information passed to show_kernel_fault_diag()\n  ARC: [plat-hsdk] initial port for HSDK board\n  ARC: mm: Decouple RAM base address from kernel link address\n  ARCv2: IOC: Tighten up the contraints (specifically base / size alignment)\n  ARC: [plat-axs103] refactor the DT fudging code\n  ARC: [plat-axs103] use clk driver #2: Add core pll node to DT to manage cpu clk\n  ARC: [plat-axs103] use clk driver #1: Get rid of platform specific cpu clk setting\n  ARCv2: SLC: provide a line based flush routine for debugging\n  ARC: Hardcode ARCH_DMA_MINALIGN to max line length we may have\n  ARC: [plat-eznps] handle extra aux regs #2: kernel/entry exit\n  ARC: [plat-eznps] handle extra aux regs #1: save/restore on context switch\n  ARC: [plat-eznps] avoid toggling of DPC register\n  ARC: [plat-eznps] Update the init sequence of aux regs per cpu.\n  ARC: [plat-eznps] new command line argument for HW scheduler at MTM\n  ARC: set boot print log level to PR_INFO\n  ARC: [plat-eznps] Handle user memory error same in simulation and silicon\n  ARC: [plat-eznps] use schd.wft instruction instead of sleep at idle task\n  ARC: create cpu specific version of arch_cpu_idle()\n  ARC: [plat-eznps] spinlock aware for MTM\n  ... Merge tag 'pci-v4.14-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI updates from Bjorn Helgaas:\n\n - add enhanced Downstream Port Containment support, which prints more\n   details about Root Port Programmed I/O errors (Dongdong Liu)\n\n - add Layerscape ls1088a and ls2088a support (Hou Zhiqiang)\n\n - add MediaTek MT2712 and MT7622 support (Ryder Lee)\n\n - add MediaTek MT2712 and MT7622 MSI support (Honghui Zhang)\n\n - add Qualcom IPQ8074 support (Varadarajan Narayanan)\n\n - add R-Car r8a7743/5 device tree support (Biju Das)\n\n - add Rockchip per-lane PHY support for better power management (Shawn\n   Lin)\n\n - fix IRQ mapping for hot-added devices by replacing the\n   pci_fixup_irqs() boot-time design with a host bridge hook called at\n   probe-time (Lorenzo Pieralisi, Matthew Minter)\n\n - fix race when enabling two devices that results in upstream bridge\n   not being enabled correctly (Srinath Mannam)\n\n - fix pciehp power fault infinite loop (Keith Busch)\n\n - fix SHPC bridge MSI hotplug events by enabling bus mastering\n   (Aleksandr Bezzubikov)\n\n - fix a VFIO issue by correcting PCIe capability sizes (Alex\n   Williamson)\n\n - fix an INTD issue on Xilinx and possibly other drivers by unifying\n   INTx IRQ domain support (Paul Burton)\n\n - avoid IOMMU stalls by marking AMD Stoney GPU ATS as broken (Joerg\n   Roedel)\n\n - allow APM X-Gene device assignment to guests by adding an ACS quirk\n   (Feng Kan)\n\n - fix driver crashes by disabling Extended Tags on Broadcom HT2100\n   (Extended Tags support is required for PCIe Receivers but not\n   Requesters, and we now enable them by default when Requesters support\n   them) (Sinan Kaya)\n\n - fix MSIs for devices that use phantom RIDs for DMA by assuming MSIs\n   use the real Requester ID (not a phantom RID) (Robin Murphy)\n\n - prevent assignment of Intel VMD children to guests (which may be\n   supported eventually, but isn't yet) by not associating an IOMMU with\n   them (Jon Derrick)\n\n - fix Intel VMD suspend/resume by releasing IRQs on suspend (Scott\n   Bauer)\n\n - fix a Function-Level Reset issue with Intel 750 NVMe by waiting\n   longer (up to 60sec instead of 1sec) for device to become ready\n   (Sinan Kaya)\n\n - fix a Function-Level Reset issue on iProc Stingray by working around\n   hardware defects in the CRS implementation (Oza Pawandeep)\n\n - fix an issue with Intel NVMe P3700 after an iProc reset by adding a\n   delay during shutdown (Oza Pawandeep)\n\n - fix a Microsoft Hyper-V lockdep issue by polling instead of blocking\n   in compose_msi_msg() (Stephen Hemminger)\n\n - fix a wireless LAN driver timeout by clearing DesignWare MSI\n   interrupt status after it is handled, not before (Faiz Abbas)\n\n - fix DesignWare ATU enable checking (Jisheng Zhang)\n\n - reduce Layerscape dependencies on the bootloader by doing more\n   initialization in the driver (Hou Zhiqiang)\n\n - improve Intel VMD performance allowing allocation of more IRQ vectors\n   than present CPUs (Keith Busch)\n\n - improve endpoint framework support for initial DMA mask, different\n   BAR sizes, configurable page sizes, MSI, test driver, etc (Kishon\n   Vijay Abraham I, Stan Drozd)\n\n - rework CRS support to add periodic messages while we poll during\n   enumeration and after Function-Level Reset and prepare for possible\n   other uses of CRS (Sinan Kaya)\n\n - clean up Root Port AER handling by removing unnecessary code and\n   moving error handler methods to struct pcie_port_service_driver\n   (Christoph Hellwig)\n\n - clean up error handling paths in various drivers (Bjorn Andersson,\n   Fabio Estevam, Gustavo A. R. Silva, Harunobu Kurokawa, Jeffy Chen,\n   Lorenzo Pieralisi, Sergei Shtylyov)\n\n - clean up SR-IOV resource handling by disabling VF decoding before\n   updating the corresponding resource structs (Gavin Shan)\n\n - clean up DesignWare-based drivers by unifying quirks to update Class\n   Code and Interrupt Pin and related handling of write-protected\n   registers (Hou Zhiqiang)\n\n - clean up by adding empty generic pcibios_align_resource() and\n   pcibios_fixup_bus() and removing empty arch-specific implementations\n   (Palmer Dabbelt)\n\n - request exclusive reset control for several drivers to allow cleanup\n   elsewhere (Philipp Zabel)\n\n - constify various structures (Arvind Yadav, Bhumika Goyal)\n\n - convert from full_name() to %pOF (Rob Herring)\n\n - remove unused variables from iProc, HiSi, Altera, Keystone (Shawn\n   Lin)\n\n* tag 'pci-v4.14-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (170 commits)\n  PCI: xgene: Clean up whitespace\n  PCI: xgene: Define XGENE_PCI_EXP_CAP and use generic PCI_EXP_RTCTL offset\n  PCI: xgene: Fix platform_get_irq() error handling\n  PCI: xilinx-nwl: Fix platform_get_irq() error handling\n  PCI: rockchip: Fix platform_get_irq() error handling\n  PCI: altera: Fix platform_get_irq() error handling\n  PCI: spear13xx: Fix platform_get_irq() error handling\n  PCI: artpec6: Fix platform_get_irq() error handling\n  PCI: armada8k: Fix platform_get_irq() error handling\n  PCI: dra7xx: Fix platform_get_irq() error handling\n  PCI: exynos: Fix platform_get_irq() error handling\n  PCI: iproc: Clean up whitespace\n  PCI: iproc: Rename PCI_EXP_CAP to IPROC_PCI_EXP_CAP\n  PCI: iproc: Add 500ms delay during device shutdown\n  PCI: Fix typos and whitespace errors\n  PCI: Remove unused \"res\" variable from pci_resource_io()\n  PCI: Correct kernel-doc of pci_vpd_srdt_size(), pci_vpd_srdt_tag()\n  PCI/AER: Reformat AER register definitions\n  iommu/vt-d: Prevent VMD child devices from being remapping targets\n  x86/PCI: Use is_vmd() rather than relying on the domain number\n  ... Merge tag 'kvm-4.14-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM updates from Radim Krčmář:\n \"First batch of KVM changes for 4.14\n\n  Common:\n   - improve heuristic for boosting preempted spinlocks by ignoring\n     VCPUs in user mode\n\n  ARM:\n   - fix for decoding external abort types from guests\n\n   - added support for migrating the active priority of interrupts when\n     running a GICv2 guest on a GICv3 host\n\n   - minor cleanup\n\n  PPC:\n   - expose storage keys to userspace\n\n   - merge kvm-ppc-fixes with a fix that missed 4.13 because of\n     vacations\n\n   - fixes\n\n  s390:\n   - merge of kvm/master to avoid conflicts with additional sthyi fixes\n\n   - wire up the no-dat enhancements in KVM\n\n   - multiple epoch facility (z14 feature)\n\n   - Configuration z/Architecture Mode\n\n   - more sthyi fixes\n\n   - gdb server range checking fix\n\n   - small code cleanups\n\n  x86:\n   - emulate Hyper-V TSC frequency MSRs\n\n   - add nested INVPCID\n\n   - emulate EPTP switching VMFUNC\n\n   - support Virtual GIF\n\n   - support 5 level page tables\n\n   - speedup nested VM exits by packing byte operations\n\n   - speedup MMIO by using hardware provided physical address\n\n   - a lot of fixes and cleanups, especially nested\"\n\n* tag 'kvm-4.14-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (67 commits)\n  KVM: arm/arm64: Support uaccess of GICC_APRn\n  KVM: arm/arm64: Extract GICv3 max APRn index calculation\n  KVM: arm/arm64: vITS: Drop its_ite->lpi field\n  KVM: arm/arm64: vgic: constify seq_operations and file_operations\n  KVM: arm/arm64: Fix guest external abort matching\n  KVM: PPC: Book3S HV: Fix memory leak in kvm_vm_ioctl_get_htab_fd\n  KVM: s390: vsie: cleanup mcck reinjection\n  KVM: s390: use WARN_ON_ONCE only for checking\n  KVM: s390: guestdbg: fix range check\n  KVM: PPC: Book3S HV: Report storage key support to userspace\n  KVM: PPC: Book3S HV: Fix case where HDEC is treated as 32-bit on POWER9\n  KVM: PPC: Book3S HV: Fix invalid use of register expression\n  KVM: PPC: Book3S HV: Fix H_REGISTER_VPA VPA size validation\n  KVM: PPC: Book3S HV: Fix setting of storage key in H_ENTER\n  KVM: PPC: e500mc: Fix a NULL dereference\n  KVM: PPC: e500: Fix some NULL dereferences on error\n  KVM: PPC: Book3S HV: Protect updates to spapr_tce_tables list\n  KVM: s390: we are always in czam mode\n  KVM: s390: expose no-DAT to guest and migration support\n  KVM: s390: sthyi: remove invalid guest write access\n  ... Merge tag 'linux-kselftest-4.14-rc1-update' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest\n\nPull kselftest updates from Shuah Khan:\n\n - TAP13 framework API and converting tests to TAP13 continues. A few\n   more tests are converted and kselftest common RUN_TESTS in lib.mk is\n   enhanced to print TAP13 to cover test shell scripts that won't be\n   able to use kselftest API.\n\n - Several fixes to existing tests to not fail in unsupported cases.\n   This has been an ongoing work based on the feedback from stable\n   release kselftest users.\n\n - A new watchdog test and much needed cleanups to the existing tests\n   from Eugeniu Rosca.\n\n - Changes to kselftest common lib.mk framework to make RUN_TESTS a\n   function to be called from individual test make files to run stress\n   and destructive sub-tests.\n\n* tag 'linux-kselftest-4.14-rc1-update' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest: (41 commits)\n  selftests: Enhance kselftest_harness.h to print which assert failed\n  selftests: lib.mk: change RUN_TESTS to print messages in TAP13 format\n  selftests: change lib.mk RUN_TESTS to take test list as an argument\n  selftests: lib.mk: suppress \"cd\" output from run_tests target\n  selftests: kselftest framework: change skip exit code to 0\n  selftests/timers: make loop consistent with array size\n  selftests: timers: remove rtctest_setdate from run_destructive_tests\n  selftests: timers: Fix run_destructive_tests target to handle skipped tests\n  kselftests: timers: leap-a-day: Change default arguments to help test runs\n  selftests: timers: drop support for !KTEST case\n  rtc: rtctest: Improve support detection\n  selftests/cpu-hotplug: Skip test when there is only one online cpu\n  selftests/cpu-hotplug: exit with failure when test occured unexpected behaviors\n  selftests: futex: convert test to use ksft TAP13 framework\n  selftests: capabilities: convert error output to TAP13 ksft framework\n  selftests: memfd: Align STACK_SIZE for ARM AArch64 system\n  selftests: warn if failure is due to lack of executable bit\n  selftests: kselftest framework: add error counter\n  selftests: capabilities: convert the test to use TAP13 ksft framework\n  selftests: capabilities: fix to run Non-root +ia, sgidroot => i test\n  ... Merge tag 'trace-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing updates from Steven Rostedt:\n \"Nothing new in development for this release. These are mostly fixes\n  that were found during development of changes for the next merge\n  window and fixes that were sent to me late in the last cycle\"\n\n* tag 'trace-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Apply trace_clock changes to instance max buffer\n  tracing: Fix clear of RECORDED_TGID flag when disabling trace event\n  tracing: Add barrier to trace_printk() buffer nesting modification\n  ftrace: Fix memleak when unregistering dynamic ops when tracing disabled\n  ftrace: Fix selftest goto location on error\n  ftrace: Zero out ftrace hashes when a module is removed\n  tracing: Only have rmmod clear buffers that its events were active in\n  ftrace: Fix debug preempt config name in stack_tracer_{en,dis}able genksyms: fix gperf removal conversion\n\nI had stupidly missed one special use of 'is_reserved_word()' when I\nconverted the code to avoid gperf.\n\nI had changed that function to return the token ID directly rather than\na pointer to the token descriptor structure, but that meant that the\ntest for \"is this a reserved word\" changed from checking the return\nvalue against NULL, to checking that it wasn't negative.\n\nAnd while I had converted the main token parser over, I missed the\nspecial case of the typeof phrase handling.  And since our dependency\nchain for genksyms does not include the genksyms program itself\nchanging, my kernel rebuild didn't show the problem.\n\nFixes: bb3290d91695 (\"Remove gperf usage from toolchain\")\nReported-by: Masahiro Yamada <yamada.masahiro@socionext.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> RDMA/netlink: clean up message validity array initializer\n\nThe fix in the parent made me look at that function, and react to how\nillogical and illegible the array initializer was.\n\nUse named array indexes to make it clearer what is going on, and make\nthe initializer not depend silently on the exact index numbers.\n\n[ The initializer now also shows an odd inconsistency in the naming:\n  note the IWCM vs IWPM..   - Linus ]\n\nCc: Leon Romanovsky <leonro@mellanox.com>\nCc: Doug Ledford <dledford@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'gperf-removal'\n\nRemove our use of 'gperf' for generating perfect hashes from some of our\nbuild tools.\n\nThis removal was prompted by Masahiro Yamada sending out a patch that\nremoves all our pre-generated files, and when I tested it, I noticed\nthat the gperf version I have (3.1) apparently generates code that no\nlonger works with out code-base because the function interfaces\ngenerated by gperf have changed.\n\nWe really don't care that much, and the gperf people changed their\ninterfaces in ways that makes it annoying to work with them.  Tools that\nmake it hard to use them should not be used, and the kernel is not at\nall interested in some autoconf mess.  So remove the gperf dependency\nentirely.\n\nIt turns out that if you ignore the pre-generated files, the use of\ngperf apparently saved us a whopping fifteen lines of code.  It\nobviously wasn't worth it, considering that the pre-generated files are\nabout 500 lines.\n\nI sent this out as a patch about three weeks ago, and got absolutely\nzero responses.  So let's see if anybody notices now that I merge it.\nBecause there might be serious bugs here, but it WorksForMe(tm).\n\n* gperf-removal:\n  Remove gperf usage from toolchain Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI updates from James Bottomley:\n \"This is mostly updates of the usual suspects: lpfc, qla2xxx, hisi_sas,\n  megaraid_sas, zfcp and a host of minor updates.\n\n  The major driver change here is the elimination of the block based\n  cciss driver in favour of the SCSI based hpsa driver (which now drives\n  all the legacy cases cciss used to be required for). Plus a reset\n  handler clean up and the redo of the SAS SMP handler to use bsg lib\"\n\n* tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (279 commits)\n  scsi: scsi-mq: Always unprepare before requeuing a request\n  scsi: Show .retries and .jiffies_at_alloc in debugfs\n  scsi: Improve requeuing behavior\n  scsi: Call scsi_initialize_rq() for filesystem requests\n  scsi: qla2xxx: Reset the logo flag, after target re-login.\n  scsi: qla2xxx: Fix slow mem alloc behind lock\n  scsi: qla2xxx: Clear fc4f_nvme flag\n  scsi: qla2xxx: add missing includes for qla_isr\n  scsi: qla2xxx: Fix an integer overflow in sysfs code\n  scsi: aacraid: report -ENOMEM to upper layer from aac_convert_sgraw2()\n  scsi: aacraid: get rid of one level of indentation\n  scsi: aacraid: fix indentation errors\n  scsi: storvsc: fix memory leak on ring buffer busy\n  scsi: scsi_transport_sas: switch to bsg-lib for SMP passthrough\n  scsi: smartpqi: remove the smp_handler stub\n  scsi: hpsa: remove the smp_handler stub\n  scsi: bsg-lib: pass the release callback through bsg_setup_queue\n  scsi: Rework handling of scsi_device.vpd_pg8[03]\n  scsi: Rework the code for caching Vital Product Data (VPD)\n  scsi: rcu: Introduce rcu_swap_protected()\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/pmladek/printk\n\nPull printk updates from Petr Mladek:\n\n - Do not allow use of freed init data and code even when boot consoles\n   are forced to stay. Also check for the init memory more precisely.\n\n - Some code clean up by starting contributors.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/pmladek/printk:\n  printk: Clean up do_syslog() error handling\n  printk/console: Enhance the check for consoles using init memory\n  printk/console: Always disable boot consoles that use init memory before it is freed\n  printk: Modify operators of printed_len and text_len Merge tag 'audit-pr-20170907' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit\n\nPull audit updates from Paul Moore:\n \"A small pull request for audit this time, only four patches and only\n  two with any real code changes.\n\n  Those two changes are the removal of a pointless SELinux AVC\n  initialization audit event and a fix to improve the audit timestamp\n  overhead.\n\n  The other two patches are comment cleanup and administrative updates,\n  nothing very exciting.\n\n  Everything passes our tests\"\n\n* tag 'audit-pr-20170907' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit:\n  audit: update the function comments\n  selinux: remove AVC init audit log message\n  audit: update the audit info in MAINTAINERS\n  audit: Reduce overhead using a coarse clock Merge tag 'secureexec-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull secureexec update from Kees Cook:\n \"This series has the ultimate goal of providing a sane stack rlimit\n  when running set*id processes.\n\n  To do this, the bprm_secureexec LSM hook is collapsed into the\n  bprm_set_creds hook so the secureexec-ness of an exec can be\n  determined early enough to make decisions about rlimits and the\n  resulting memory layouts. Other logic acting on the secureexec-ness of\n  an exec is similarly consolidated. Capabilities needed some special\n  handling, but the refactoring removed other special handling, so that\n  was a wash\"\n\n* tag 'secureexec-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  exec: Consolidate pdeath_signal clearing\n  exec: Use sane stack rlimit under secureexec\n  exec: Consolidate dumpability logic\n  smack: Remove redundant pdeath_signal clearing\n  exec: Use secureexec for clearing pdeath_signal\n  exec: Use secureexec for setting dumpability\n  LSM: drop bprm_secureexec hook\n  commoncap: Move cap_elevated calculation into bprm_set_creds\n  commoncap: Refactor to remove bprm_secureexec hook\n  smack: Refactor to remove bprm_secureexec hook\n  selinux: Refactor to remove bprm_secureexec hook\n  apparmor: Refactor to remove bprm_secureexec hook\n  binfmt: Introduce secureexec flag\n  exec: Correct comments about \"point of no return\"\n  exec: Rename bprm->cred_prepared to called_set_creds Merge tag 'gcc-plugins-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull gcc plugins update from Kees Cook:\n \"This finishes the porting work on randstruct, and introduces a new\n  option to structleak, both noted below:\n\n   - For the randstruct plugin, enable automatic randomization of\n     structures that are entirely function pointers (along with a couple\n     designated initializer fixes).\n\n   - For the structleak plugin, provide an option to perform zeroing\n     initialization of all otherwise uninitialized stack variables that\n     are passed by reference (Ard Biesheuvel)\"\n\n* tag 'gcc-plugins-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  gcc-plugins: structleak: add option to init all vars used as byref args\n  randstruct: Enable function pointer struct detection\n  drivers/net/wan/z85230.c: Use designated initializers\n  drm/amd/powerplay: rv: Use designated initializers Merge tag 'pstore-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull pstore update from Kees Cook:\n \"Make pstore permissions more versatile by removing CAP_SYSLOG\n  requirement and defining more restrictive root directory DAC\n  permissions default (0750, which can be adjust after boot unlike the\n  CAP_SYSLOG check).\n\n  Suggested by Nick Kralevich\"\n\n* tag 'pstore-v4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  Revert \"pstore: Honor dmesg_restrict sysctl on dmesg dumps\"\n  pstore: Make default pstorefs root dir perms 0750 Merge tag '4.14-smb3-xattr-enable' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs update from Steve French:\n \"Enable xattr support for smb3 and also a bugfix\"\n\n* tag '4.14-smb3-xattr-enable' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: Check for timeout on Negotiate stage\n  cifs: Add support for writing attributes on SMB2+\n  cifs: Add support for reading attributes on SMB2+ Merge git://git.kvack.org/~bcrl/aio-next\n\nPull aio fix from Ben LaHaise:\n \"Improve aio-nr counting on large SMP systems.\n\n  It has been in linux-next for quite some time\"\n\n* git://git.kvack.org/~bcrl/aio-next:\n  fs: aio: fix the increment of aio-nr and counting against aio-max-nr Merge branch 'quota_scaling' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull quota scaling updates from Jan Kara:\n \"This contains changes to make the quota subsystem more scalable.\n\n  Reportedly it improves number of files created per second on ext4\n  filesystem on fast storage by about a factor of 2x\"\n\n* 'quota_scaling' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs: (28 commits)\n  quota: Add lock annotations to struct members\n  quota: Reduce contention on dq_data_lock\n  fs: Provide __inode_get_bytes()\n  quota: Inline dquot_[re]claim_reserved_space() into callsite\n  quota: Inline inode_{incr,decr}_space() into callsites\n  quota: Inline functions into their callsites\n  ext4: Disable dirty list tracking of dquots when journalling quotas\n  quota: Allow disabling tracking of dirty dquots in a list\n  quota: Remove dq_wait_unused from dquot\n  quota: Move locking into clear_dquot_dirty()\n  quota: Do not dirty bad dquots\n  quota: Fix possible corruption of dqi_flags\n  quota: Propagate ->quota_read errors from v2_read_file_info()\n  quota: Fix error codes in v2_read_file_info()\n  quota: Push dqio_sem down to ->read_file_info()\n  quota: Push dqio_sem down to ->write_file_info()\n  quota: Push dqio_sem down to ->get_next_id()\n  quota: Push dqio_sem down to ->release_dqblk()\n  quota: Remove locking for writing to the old quota format\n  quota: Do not acquire dqio_sem for dquot overwrites in v2 format\n  ... Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull UDF, reiserfs, quota, fsnotify cleanups from Jan Kara:\n \"Several UDF, reiserfs, quota and fsnotify cleanups.\n\n  Note that there is also a patch updating MAINTAINERS entry for\n  notification subsystem to point to me as a maintainer since current\n  entries are stale\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  fsnotify: make dnotify_fsnotify_ops const\n  isofs: Delete an unnecessary variable initialisation in isofs_read_inode()\n  isofs: Adjust four checks for null pointers\n  isofs: Delete an error message for a failed memory allocation in isofs_read_inode()\n  quota_v2: Delete an error message for a failed memory allocation in v2_read_file_info()\n  fs-udf: Delete an error message for a failed memory allocation in two functions\n  fs-udf: Improve six size determinations\n  fs-udf: Adjust two checks for null pointers\n  reiserfs: fix spelling mistake: \"tranasction\" -> \"transaction\"\n  MAINTAINERS: Update entries for notification subsystem\n  uapi/linux/quota.h: Do not include linux/errno.h Merge tag 'devicetree-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull DeviceTree updates from Rob Herring:\n \"There's a few orphans in the conversion to %pOF printf specifiers\n  included here that no one else picked up.\n\n  Summary:\n\n   - Convert more DT code to use of_property_read_* API.\n\n   - Improve DT overlay support when adding multiple overlays\n\n   - Convert printk's to %pOF format specifiers. Most went via subsystem\n     trees, but picked up the remaining orphans\n\n   - Correct unittests to use preferred \"okay\" for \"status\" property\n     value\n\n   - Add a KASLR seed property\n\n   - Vendor prefixes for Mellanox, Theobroma System, Adaptrum, Moxa\n\n   - Fix modalias buffer handling\n\n   - Clean-up of include paths for building dtbs\n\n   - Add bindings for amc6821, isl1208, tsl2x7x, srf02, and srf10\n     devices\n\n   - Add nvmem bindings for MediaTek MT7623 and MT7622 SoC\n\n   - Add compatible string for Allwinner H5 Mali-450 GPU\n\n   - Fix links to old OpenFirmware docs with new mirror on\n     devicetree.org\n\n   - Remove status property from binding doc examples\"\n\n* tag 'devicetree-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux: (45 commits)\n  devicetree: Adjust status \"ok\" -> \"okay\" under drivers/of/\n  dt-bindings: Remove \"status\" from examples\n  dt-bindings: pinctrl: sh-pfc: Use generic node name\n  dt-bindings: Add vendor Mellanox\n  dt-binding: net/phy: fix interrupts description\n  virt: Convert to using %pOF instead of full_name\n  macintosh: Convert to using %pOF instead of full_name\n  ide: pmac: Convert to using %pOF instead of full_name\n  microblaze: Convert to using %pOF instead of full_name\n  dt-bindings: usb: musb: Grammar s/the/to/, s/is/are/\n  of: Use PLATFORM_DEVID_NONE definition\n  of/device: Fix of_device_get_modalias() buffer handling\n  of/device: Prevent buffer overflow in of_device_modalias()\n  dt-bindings: add amc6821, isl1208 trivial bindings\n  dt-bindings: add vendor prefix for Theobroma Systems\n  of: search scripts/dtc/include-prefixes path for both CPP and DTC\n  of: remove arch/$(SRCARCH)/boot/dts from include search path for CPP\n  of: remove drivers/of/testcase-data from include search path for CPP\n  of: return of_get_cpu_node from of_cpu_device_node_get if CPUs are not registered\n  iio: srf08: add device tree binding for srf02 and srf10\n  ... Merge tag 'drm-intel-next-fixes-2017-09-07' of git://anongit.freedesktop.org/git/drm-intel\n\nPull i916 drm fixes from Rodrigo Vivi:\n \"Since Dave is on paternity leave we are sending drm/i915 fixes for\n  v4.14-rc1 directly to you as he had asked us to do.\n\n  The most critical ones are the GPU reset fix for gen2-4 and GVT fix\n  for a regression that is blocking gvt init to work on your tree.\n\n  The rest is general fixes for patches coming from drm-next\"\n\nAcked-by: Dave Airlie <airlied@redhat.com>\n\n* tag 'drm-intel-next-fixes-2017-09-07' of git://anongit.freedesktop.org/git/drm-intel:\n  drm/i915: Re-enable GTT following a device reset\n  drm/i915: Annotate user relocs with __user\n  drm/i915: Silence sparse by using gfp_t\n  drm/i915: Add __rcu to radix tree slot pointer\n  drm/i915: Fix the missing PPAT cache attributes on CNL\n  drm/i915/gvt: Remove one duplicated MMIO\n  drm/i915: Fix enum pipe vs. enum transcoder for the PCH transcoder\n  drm/i915: Make i2c lock ops static\n  drm/i915: Make i9xx_load_ycbcr_conversion_matrix() static\n  drm/i915/edp: Increase T12 panel delay to 900 ms to fix DP AUX CH timeouts\n  drm/i915: Ignore duplicate VMA stored within the per-object handle LUT\n  drm/i915: Skip fence alignemnt check for the CCS plane\n  drm/i915: Treat fb->offsets[] as a raw byte offset instead of a linear offset\n  drm/i915: Always wake the device to flush the GTT\n  drm/i915: Recreate vmapping even when the object is pinned\n  drm/i915: Quietly cancel FBC activation if CRTC is turned off before worker Merge tag 'leds_for_4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/j.anaszewski/linux-leds\n\nPull LED updates from Jacek Anaszewski:\n \"LED class drivers improvements:\n\n  leds-pca955x:\n   - add Device Tree support and bindings\n   - use devm_led_classdev_register()\n   - add GPIO support\n   - prevent crippled LED class device name\n   - check for I2C errors\n\n  leds-gpio:\n   - add optional retain-state-shutdown DT property\n   - allow LED to retain state at shutdown\n\n  leds-tlc591xx:\n   - merge conditional tests\n   - add missing of_node_put\n\n  leds-powernv:\n   - delete an error message for a failed memory allocation in\n     powernv_led_create()\n\n  leds-is31fl32xx.c\n   - convert to using custom %pOF printf format specifier\n\n  Constify attribute_group structures in:\n   - leds-blinkm\n   - leds-lm3533\n\n  Make several arrays static const in:\n   - leds-aat1290\n   - leds-lp5521\n   - leds-lp5562\n   - leds-lp8501\"\n\n* tag 'leds_for_4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/j.anaszewski/linux-leds:\n  leds: pca955x: check for I2C errors\n  leds: gpio: Allow LED to retain state at shutdown\n  dt-bindings: leds: gpio: Add optional retain-state-shutdown property\n  leds: powernv: Delete an error message for a failed memory allocation in powernv_led_create()\n  leds: lp8501: make several arrays static const\n  leds: lp5562: make several arrays static const\n  leds: lp5521: make several arrays static const\n  leds: aat1290: make array max_mm_current_percent static const\n  leds: pca955x: Prevent crippled LED device name\n  leds: lm3533: constify attribute_group structure\n  dt-bindings: leds: add pca955x\n  leds: pca955x: add GPIO support\n  leds: pca955x: use devm_led_classdev_register\n  leds: pca955x: add device tree support\n  leds: Convert to using %pOF instead of full_name\n  leds: blinkm: constify attribute_group structures.\n  leds: tlc591xx: add missing of_node_put\n  leds: tlc591xx: merge conditional tests Merge tag 'dmaengine-4.14-rc1' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine updates from Vinod Koul:\n \"This one features the usual updates to the drivers and one good part\n  of removing DA_SG from core as it has no users.\n\n  Summary:\n\n   - Remove DMA_SG support as we have no users for this feature\n   - New driver for Altera / Intel mSGDMA IP core\n   - Support for memset in dmatest and qcom_hidma driver\n   - Update for non cyclic mode in k3dma, bunch of update in bam_dma,\n     bcm sba-raid\n   - Constify device ids across drivers\"\n\n* tag 'dmaengine-4.14-rc1' of git://git.infradead.org/users/vkoul/slave-dma: (52 commits)\n  dmaengine: sun6i: support V3s SoC variant\n  dmaengine: sun6i: make gate bit in sun8i's DMA engines a common quirk\n  dmaengine: rcar-dmac: document R8A77970 bindings\n  dmaengine: xilinx_dma: Fix error code format specifier\n  dmaengine: altera: Use macros instead of structs to describe the registers\n  dmaengine: ti-dma-crossbar: Fix dra7 reserve function\n  dmaengine: pl330: constify amba_id\n  dmaengine: pl08x: constify amba_id\n  dmaengine: bcm-sba-raid: Remove redundant SBA_REQUEST_STATE_COMPLETED\n  dmaengine: bcm-sba-raid: Explicitly ACK mailbox message after sending\n  dmaengine: bcm-sba-raid: Add debugfs support\n  dmaengine: bcm-sba-raid: Remove redundant SBA_REQUEST_STATE_RECEIVED\n  dmaengine: bcm-sba-raid: Re-factor sba_process_deferred_requests()\n  dmaengine: bcm-sba-raid: Pre-ack async tx descriptor\n  dmaengine: bcm-sba-raid: Peek mbox when we have no free requests\n  dmaengine: bcm-sba-raid: Alloc resources before registering DMA device\n  dmaengine: bcm-sba-raid: Improve sba_issue_pending() run duration\n  dmaengine: bcm-sba-raid: Increase number of free sba_request\n  dmaengine: bcm-sba-raid: Allow arbitrary number free sba_request\n  dmaengine: bcm-sba-raid: Remove reqs_free_count from sba_device\n  ... Merge tag 'backlight-next-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight\n\nPull backlight updates from Lee Jones:\n \"Fix-ups:\n   - Constification; pwm_bl\n   - Use new GPIO API; gpio_backlight\n   - Remove unused functionality; gpio_backlight\n\n  Bug Fixes:\n   - Fix artificial MAXREG limit; lm3630a_bl\"\n\n* tag 'backlight-next-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight:\n  backlight: gpio_backlight: Delete pdata inversion\n  backlight: gpio_backlight: Convert to use GPIO descriptor\n  backlight: pwm_bl: Make of_device_ids const\n  backlight: lm3630a: Bump REG_MAX value to 0x50 instead of 0x1F Merge tag 'mfd-next-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull MFD updates from Lee Jones:\n \"New Drivers\n   - RK805 Power Management IC (PMIC)\n   - ROHM BD9571MWV-M MFD Power Management IC (PMIC)\n   - Texas Instruments TPS68470 Power Management IC (PMIC) & LEDs\n\n  New Device Support:\n   - Add support for HiSilicon Hi6421v530 to hi6421-pmic-core\n   - Add support for X-Powers AXP806 to axp20x\n   - Add support for X-Powers AXP813 to axp20x\n   - Add support for Intel Sunrise Point LPSS to intel-lpss-pci\n\n  New Functionality:\n   - Amend API to provide register layout; atmel-smc\n\n  Fix-ups:\n   - DT re-work; omap, nokia\n   - Header file location change {I2C => MFD}; dm355evm_msp, tps65010\n   - Fix chip ID formatting issue(s); rk808\n   - Optionally register touchscreen devices; da9052-core\n   - Documentation improvements; twl-core\n   - Constification; rtsx_pcr, ab8500-core, da9055-i2c, da9052-spi\n   - Drop unnecessary static declaration; max8925-i2c\n   - Kconfig changes (missing deps and remove module support)\n   - Slim down oversized licence statement; hi6421-pmic-core\n   - Use managed resources (devm_*); lp87565\n   - Supply proper error checking/handling; t7l66xb\n\n  Bug Fixes:\n   - Fix counter duplication issue; da9052-core\n   - Fix potential NULL deference issue; max8998\n   - Leave SPI-NOR write-protection bit alone; lpc_ich\n   - Ensure device is put into reset during suspend; intel-lpss\n   - Correct register offset variable size; omap-usb-tll\"\n\n* tag 'mfd-next-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (61 commits)\n  mfd: intel_soc_pmic: Differentiate between Bay and Cherry Trail CRC variants\n  mfd: intel_soc_pmic: Export separate mfd-cell configs for BYT and CHT\n  dt-bindings: mfd: Add bindings for ZII RAVE devices\n  mfd: omap-usb-tll: Fix register offsets\n  mfd: da9052: Constify spi_device_id\n  mfd: intel-lpss: Put I2C and SPI controllers into reset state on suspend\n  mfd: da9055: Constify i2c_device_id\n  mfd: intel-lpss: Add missing PCI ID for Intel Sunrise Point LPSS devices\n  mfd: t7l66xb: Handle return value of clk_prepare_enable\n  mfd: Add ROHM BD9571MWV-M PMIC DT bindings\n  mfd: intel_soc_pmic_chtwc: Turn Kconfig option into a bool\n  mfd: lp87565: Convert to use devm_mfd_add_devices()\n  mfd: Add support for TPS68470 device\n  mfd: lpc_ich: Do not touch SPI-NOR write protection bit on Haswell/Broadwell\n  mfd: syscon: atmel-smc: Add helper to retrieve register layout\n  mfd: axp20x: Use correct platform device ID for many PEK\n  dt-bindings: mfd: axp20x: Introduce bindings for AXP813\n  mfd: axp20x: Add support for AXP813 PMIC\n  dt-bindings: mfd: axp20x: Add AXP806 to supported list of chips\n  mfd: Add ROHM BD9571MWV-M MFD PMIC driver\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n\n - a new GPIO bit-banging driver implementing PS/2 protocol\n\n - a new power key driver for Rockchip RK805 PMIC\n\n - bunch of patches constifying various device ID structures\n\n - Elan I2C touchpad driver now supports devices with 2 buttons\n\n - other assorted fixes\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input: (76 commits)\n  Input: byd - make array seq static, reduces object code size\n  Input: xilinx_ps2 - fix multiline comment style\n  Input: pxa27x_keypad - handle return value of clk_prepare_enable\n  Input: tegra-kbc - handle return value of clk_prepare_enable\n  Input: PS/2 gpio bit banging driver for serio bus\n  Input: xen-kbdfront - enable auto repeat for xen keyboard frontend driver\n  Input: ambakmi - constify amba_id\n  Input: atmel_mxt_ts - add support for reset line\n  Input: atmel_mxt_ts - use more managed resources\n  Input: wacom_w8001 - constify serio_device_id\n  Input: tsc40 - constify serio_device_id\n  Input: touchwin - constify serio_device_id\n  Input: touchright - constify serio_device_id\n  Input: touchit213 - constify serio_device_id\n  Input: penmount - constify serio_device_id\n  Input: mtouch - constify serio_device_id\n  Input: inexio - constify serio_device_id\n  Input: hampshire - constify serio_device_id\n  Input: gunze - constify serio_device_id\n  Input: fujitsu_ts - constify serio_device_id\n  ... Merge tag 'mailbox-v4.14' of git://git.linaro.org/landing-teams/working/fujitsu/integration\n\nPull mailbox updates from Jassi Brar:\n \"Just behavorial changes to a controller driver: the Broadcom's Flexrm\n  mailbox driver has been modifified to support debugfs and TX-Done\n  mechanism by ACK.\n\n  Nothing for the core mailbox stack\"\n\n* tag 'mailbox-v4.14' of git://git.linaro.org/landing-teams/working/fujitsu/integration:\n  mailbox: bcm-flexrm-mailbox: Use txdone_ack instead of txdone_poll\n  mailbox: bcm-flexrm-mailbox: Use bitmap instead of IDA\n  mailbox: bcm-flexrm-mailbox: Fix mask used in CMPL_START_ADDR_VALUE()\n  mailbox: bcm-flexrm-mailbox: Add debugfs support\n  mailbox: bcm-flexrm-mailbox: Set IRQ affinity hint for FlexRM ring IRQs Merge tag 'media/v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media updates from Mauro Carvalho Chehab:\n \"Brazil's Independence Day pull request :-)\n\n  This is one of the biggest media pull requests, with 625 patches\n  affecting almost all parts of media (RC, DVB, V4L2, CEC, docs).\n\n  This contains:\n\n   - A lot of new drivers:\n     * DVB frontends: mxl5xx, stv0910, stv6111;\n     * camera flash: as3645a led driver;\n     * HDMI receiver: adv748X;\n     * camera sensor: Omnivision 6650 5M driver (ov6650);\n     * HDMI CEC: ao-cec meson driver;\n     * V4L2: Qualcom camss driver;\n     * Remote controller: gpio-ir-tx, pwm-ir-tx and zx-irdec drivers.\n\n   - The DDbridge DVB driver got a massive update, with makes it in sync\n     with modern hardware from that vendor;\n\n   - There's an important milestone on this series: the DVB\n     documentation was written in 2003, but only started to be updated\n     in 2007. It also used to contain several gaps from the time it was\n     kept out of tree, mentioning error codes and device nodes that\n     never existed upstream. On this series, it received a massive\n     update: all non-deprecated digital TV APIs are now in sync with the\n     current implementation;\n\n   - Some DVB APIs that aren't used by any upstream driver got removed;\n\n   - Other parts of the media documentation algo got updated, fixing\n     some bugs on its PDF output and making it compatible with Sphinx\n     version 1.6.\n\n     As the number of hacks required to build PDF output reduced, I hope\n     we'll have less troubles as newer versions of our documentation\n     toolchain are released (famous last words);\n\n   - As usual, lots of driver cleanups and improvements\"\n\n* tag 'media/v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (624 commits)\n  media: leds: as3645a: add V4L2_FLASH_LED_CLASS dependency\n  media: get rid of removed DMX_GET_CAPS and DMX_SET_SOURCE leftovers\n  media: Revert \"[media] v4l: async: make v4l2 coexist with devicetree nodes in a dt overlay\"\n  media: staging: atomisp: sh_css_calloc shall return a pointer to the allocated space\n  media: Revert \"[media] lirc_dev: remove superfluous get/put_device() calls\"\n  media: add qcom_camss.rst to v4l-drivers rst file\n  media: dvb headers: make checkpatch happier\n  media: dvb uapi: move frontend legacy API to another part of the book\n  media: pixfmt-srggb12p.rst: better format the table for PDF output\n  media: docs-rst: media: Don't use \\small for V4L2_PIX_FMT_SRGGB10 documentation\n  media: index.rst: don't write \"Contents:\" on PDF output\n  media: pixfmt*.rst: replace a two dots by a comma\n  media: vidioc-g-fmt.rst: adjust table format\n  media: vivid.rst: add a blank line to correct ReST format\n  media: v4l2 uapi book: get rid of driver programming's chapter\n  media: format.rst: use the right markup for important notes\n  media: docs-rst: cardlists: change their format to flat-tables\n  media: em28xx-cardlist.rst: update to reflect last changes\n  media: v4l2-event.rst: adjust table to fit on PDF output\n  media: docs: don't show ToC for each part on PDF output\n  ... Merge tag 'sound-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound updates from Takashi Iwai:\n \"We have touched quite a lot of files but with fewer changes at this\n  cycle; as you can see, most of changes are trivial fixes, especially\n  constification patches.\n\n  Among the massive attacks by constification gangs, we had a few core\n  changes (mostly for ASoC core), as well the fixes and the updates by\n  major vendors.\n\n  Some highlights:\n\n  ALSA core:\n\n   - Fix possible races in control API user-TLV codes\n\n   - Small cleanup of PCM core\n\n  ASoC:\n\n   - Continued work for componentization; still half-baked, but we're\n     certainly progressing\n\n   - Use of devres for jack detection GPIOs, rather as a cleanup\n\n   - Jack detection support for Qualcomm MSM8916\n\n   - Support for Allwinner H3, Cirrus Logic CS43130, Intel Kabylake\n     systems with RT5663, Realtek RT274, TI TLV320AIC32x6 and Wolfson\n     WM8523\"\n\n* tag 'sound-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (512 commits)\n  ALSA: hda/ca0132 - Fix memory leak at error path\n  ALSA: hda: Fix forget to free resource in error handling code path in hda_codec_driver_probe\n  ASoC: cs43130: Fix unused compiler warnings for PM runtime\n  ASoC: cs43130: Fix possible Oops with invalid dev_id\n  ASoC: cs43130: fix spelling mistake: \"irq_occurrance\" -> \"irq_occurrence\"\n  ALSA: atmel: Remove leftovers of AVR32 removal\n  ALSA: atmel: convert AC97c driver to GPIO descriptor API\n  ALSA: hda/realtek - Enable jack detection function for Intel ALC700\n  ALSA: hda: Fix regression of hdmi eld control created based on invalid pcm\n  ASoC: Intel: Skylake: Add IPC to configure the copier secondary pins\n  ASoC: add missing compile rule for max98371\n  ASoC: add missing compile rule for sirf-audio-codec\n  ASoC: add missing compile rule for max98371\n  ASoC: cs43130: Add devicetree bindings for CS43130\n  ASoC: cs43130: Add support for CS43130 codec\n  ASoC: make clock direction configurable in asoc-simple\n  ALSA: ctxfi: Remove null check before kfree\n  ASoC: max98927: Changed device property read function\n  ASoC: max98927: Modified DAPM widget and map to enable/disable VI sense path\n  ASoC: max98927: Added PM suspend and resume function\n  ... Merge tag 'md/4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD updates from Shaohua Li:\n \"This update mainly fixes bugs:\n\n   - Make raid5 ppl support several ppl from Pawel\n\n   - Several raid5-cache bug fixes from Song\n\n   - Bitmap fixes from Neil and Me\n\n   - One raid1/10 regression fix since 4.12 from Me\n\n   - Other small fixes and cleanup\"\n\n* tag 'md/4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  md/bitmap: disable bitmap_resize for file-backed bitmaps.\n  raid5-ppl: Recovery support for multiple partial parity logs\n  md: Runtime support for multiple ppls\n  md/raid0: attach correct cgroup info in bio\n  lib/raid6: align AVX512 constants to 512 bits, not bytes\n  raid5: remove raid5_build_block\n  md/r5cache: call mddev_lock/unlock() in r5c_journal_mode_show\n  md: replace seq_release_private with seq_release\n  md: notify about new spare disk in the container\n  md/raid1/10: reset bio allocated from mempool\n  md/raid5: release/flush io in raid5_do_work()\n  md/bitmap: copy correct data for bitmap super Merge tag 'mmc-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC updates from Ulf Hansson:\n \"MMC core:\n   - Continue to refactor the mmc block code to prepare for blkmq\n   - Move mmc block debugfs into block module\n   - Next step for eMMC CMDQ by adding a new mmc host interface for it\n   - Move Kconfig option MMC_DEBUG from core to host\n   - Some additional minor improvements\n\n  MMC host:\n   - Declare structs as const when applicable\n   - Explicitly request exclusive reset control when applicable\n   - Improve some error paths and other various cleanups\n   - sdhci: Preparations to support SDHCI OMAP\n   - sdhci: Improve some PM related code\n   - sdhci: Re-factoring and modernizations\n   - sdhci-xenon: Add runtime PM and system sleep support\n   - sdhci-xenon: Add support for eMMC HS400 Enhanced Strobe\n   - sdhci-cadence: Add system sleep support\n   - sdhci-of-at91: Improve system sleep support\n   - dw_mmc: Add support for Hisilicon hi3660\n   - sunxi: Add support for A83T eMMC\n   - sunxi: Add support for DDR52 mode\n   - meson-gx: Add support for UHS-I SD-cards\n   - meson-gx: Cleanups and improvements\n   - tmio: Fix CMD12 (STOP) handling\n   - tmio: Cleanups and improvements\n   - renesas_sdhi: Add r8a7743/5 support\n   - renesas-sdhi: Add support for R-Car Gen3 SDHI DMAC\n   - renesas_sdhi: Cleanups and improvements\"\n\n* tag 'mmc-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc: (145 commits)\n  mmc: renesas_sdhi: Add r8a7743/5 support\n  mmc: meson-gx: fix __ffsdi2 undefined on arm32\n  mmc: sdhci-xenon: add runtime pm support and reimplement standby\n  mmc: core: Move mmc_start_areq() declaration\n  mmc: mmci: stop building qcom dml as module\n  mmc: sunxi: Reset the device at probe time\n  clk: sunxi-ng: Provide a default reset hook\n  mmc: meson-gx: rework tuning function\n  mmc: meson-gx: change default tx phase\n  mmc: meson-gx: implement voltage switch callback\n  mmc: meson-gx: use CCF to handle the clock phases\n  mmc: meson-gx: implement card_busy callback\n  mmc: meson-gx: simplify interrupt handler\n  mmc: meson-gx: work around clk-stop issue\n  mmc: meson-gx: fix dual data rate mode frequencies\n  mmc: meson-gx: rework clock init function\n  mmc: meson-gx: rework clk_set function\n  mmc: meson-gx: rework set_ios function\n  mmc: meson-gx: cfg init overwrite values\n  mmc: meson-gx: initialize sane clk default before clock register\n  ... Merge branch 'for-4.14/block' of git://git.kernel.dk/linux-block\n\nPull block layer updates from Jens Axboe:\n \"This is the first pull request for 4.14, containing most of the code\n  changes. It's a quiet series this round, which I think we needed after\n  the churn of the last few series. This contains:\n\n   - Fix for a registration race in loop, from Anton Volkov.\n\n   - Overflow complaint fix from Arnd for DAC960.\n\n   - Series of drbd changes from the usual suspects.\n\n   - Conversion of the stec/skd driver to blk-mq. From Bart.\n\n   - A few BFQ improvements/fixes from Paolo.\n\n   - CFQ improvement from Ritesh, allowing idling for group idle.\n\n   - A few fixes found by Dan's smatch, courtesy of Dan.\n\n   - A warning fixup for a race between changing the IO scheduler and\n     device remova. From David Jeffery.\n\n   - A few nbd fixes from Josef.\n\n   - Support for cgroup info in blktrace, from Shaohua.\n\n   - Also from Shaohua, new features in the null_blk driver to allow it\n     to actually hold data, among other things.\n\n   - Various corner cases and error handling fixes from Weiping Zhang.\n\n   - Improvements to the IO stats tracking for blk-mq from me. Can\n     drastically improve performance for fast devices and/or big\n     machines.\n\n   - Series from Christoph removing bi_bdev as being needed for IO\n     submission, in preparation for nvme multipathing code.\n\n   - Series from Bart, including various cleanups and fixes for switch\n     fall through case complaints\"\n\n* 'for-4.14/block' of git://git.kernel.dk/linux-block: (162 commits)\n  kernfs: checking for IS_ERR() instead of NULL\n  drbd: remove BIOSET_NEED_RESCUER flag from drbd_{md_,}io_bio_set\n  drbd: Fix allyesconfig build, fix recent commit\n  drbd: switch from kmalloc() to kmalloc_array()\n  drbd: abort drbd_start_resync if there is no connection\n  drbd: move global variables to drbd namespace and make some static\n  drbd: rename \"usermode_helper\" to \"drbd_usermode_helper\"\n  drbd: fix race between handshake and admin disconnect/down\n  drbd: fix potential deadlock when trying to detach during handshake\n  drbd: A single dot should be put into a sequence.\n  drbd: fix rmmod cleanup, remove _all_ debugfs entries\n  drbd: Use setup_timer() instead of init_timer() to simplify the code.\n  drbd: fix potential get_ldev/put_ldev refcount imbalance during attach\n  drbd: new disk-option disable-write-same\n  drbd: Fix resource role for newly created resources in events2\n  drbd: mark symbols static where possible\n  drbd: Send P_NEG_ACK upon write error in protocol != C\n  drbd: add explicit plugging when submitting batches\n  drbd: change list_for_each_safe to while(list_first_entry_or_null)\n  drbd: introduce drbd_recv_header_maybe_unplug\n  ... Merge tag 'for-linus-4.14b-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen updates from Juergen Gross:\n\n - the new pvcalls backend for routing socket calls from a guest to dom0\n\n - some cleanups of Xen code\n\n - a fix for wrong usage of {get,put}_cpu()\n\n* tag 'for-linus-4.14b-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip: (27 commits)\n  xen/mmu: set MMU_NORMAL_PT_UPDATE in remap_area_mfn_pte_fn\n  xen: Don't try to call xen_alloc_p2m_entry() on autotranslating guests\n  xen/events: events_fifo: Don't use {get,put}_cpu() in xen_evtchn_fifo_init()\n  xen/pvcalls: use WARN_ON(1) instead of __WARN()\n  xen: remove not used trace functions\n  xen: remove unused function xen_set_domain_pte()\n  xen: remove tests for pvh mode in pure pv paths\n  xen-platform: constify pci_device_id.\n  xen: cleanup xen.h\n  xen: introduce a Kconfig option to enable the pvcalls backend\n  xen/pvcalls: implement write\n  xen/pvcalls: implement read\n  xen/pvcalls: implement the ioworker functions\n  xen/pvcalls: disconnect and module_exit\n  xen/pvcalls: implement release command\n  xen/pvcalls: implement poll command\n  xen/pvcalls: implement accept command\n  xen/pvcalls: implement listen command\n  xen/pvcalls: implement bind command\n  xen/pvcalls: implement connect command\n  ... Merge tag 'powerpc-4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc updates from Michael Ellerman:\n \"Nothing really major this release, despite quite a lot of activity.\n  Just lots of things all over the place.\n\n  Some things of note include:\n\n   - Access via perf to a new type of PMU (IMC) on Power9, which can\n     count both core events as well as nest unit events (Memory\n     controller etc).\n\n   - Optimisations to the radix MMU TLB flushing, mostly to avoid\n     unnecessary Page Walk Cache (PWC) flushes when the structure of the\n     tree is not changing.\n\n   - Reworks/cleanups of do_page_fault() to modernise it and bring it\n     closer to other architectures where possible.\n\n   - Rework of our page table walking so that THP updates only need to\n     send IPIs to CPUs where the affected mm has run, rather than all\n     CPUs.\n\n   - The size of our vmalloc area is increased to 56T on 64-bit hash MMU\n     systems. This avoids problems with the percpu allocator on systems\n     with very sparse NUMA layouts.\n\n   - STRICT_KERNEL_RWX support on PPC32.\n\n   - A new sched domain topology for Power9, to capture the fact that\n     pairs of cores may share an L2 cache.\n\n   - Power9 support for VAS, which is a new mechanism for accessing\n     coprocessors, and initial support for using it with the NX\n     compression accelerator.\n\n   - Major work on the instruction emulation support, adding support for\n     many new instructions, and reworking it so it can be used to\n     implement the emulation needed to fixup alignment faults.\n\n   - Support for guests under PowerVM to use the Power9 XIVE interrupt\n     controller.\n\n  And probably that many things again that are almost as interesting,\n  but I had to keep the list short. Plus the usual fixes and cleanups as\n  always.\n\n  Thanks to: Alexey Kardashevskiy, Alistair Popple, Andreas Schwab,\n  Aneesh Kumar K.V, Anju T Sudhakar, Arvind Yadav, Balbir Singh,\n  Benjamin Herrenschmidt, Bhumika Goyal, Breno Leitao, Bryant G. Ly,\n  Christophe Leroy, Cédric Le Goater, Dan Carpenter, Dou Liyang,\n  Frederic Barrat, Gautham R. Shenoy, Geliang Tang, Geoff Levand, Hannes\n  Reinecke, Haren Myneni, Ivan Mikhaylov, John Allen, Julia Lawall,\n  LABBE Corentin, Laurentiu Tudor, Madhavan Srinivasan, Markus Elfring,\n  Masahiro Yamada, Matt Brown, Michael Neuling, Murilo Opsfelder Araujo,\n  Nathan Fontenot, Naveen N. Rao, Nicholas Piggin, Oliver O'Halloran,\n  Paul Mackerras, Rashmica Gupta, Rob Herring, Rui Teng, Sam Bobroff,\n  Santosh Sivaraj, Scott Wood, Shilpasri G Bhat, Sukadev Bhattiprolu,\n  Suraj Jitindar Singh, Tobin C. Harding, Victor Aoqui\"\n\n* tag 'powerpc-4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux: (321 commits)\n  powerpc/xive: Fix section __init warning\n  powerpc: Fix kernel crash in emulation of vector loads and stores\n  powerpc/xive: improve debugging macros\n  powerpc/xive: add XIVE Exploitation Mode to CAS\n  powerpc/xive: introduce H_INT_ESB hcall\n  powerpc/xive: add the HW IRQ number under xive_irq_data\n  powerpc/xive: introduce xive_esb_write()\n  powerpc/xive: rename xive_poke_esb() in xive_esb_read()\n  powerpc/xive: guest exploitation of the XIVE interrupt controller\n  powerpc/xive: introduce a common routine xive_queue_page_alloc()\n  powerpc/sstep: Avoid used uninitialized error\n  axonram: Return directly after a failed kzalloc() in axon_ram_probe()\n  axonram: Improve a size determination in axon_ram_probe()\n  axonram: Delete an error message for a failed memory allocation in axon_ram_probe()\n  powerpc/powernv/npu: Move tlb flush before launching ATSD\n  powerpc/macintosh: constify wf_sensor_ops structures\n  powerpc/iommu: Use permission-specific DEVICE_ATTR variants\n  powerpc/eeh: Delete an error out of memory message at init time\n  powerpc/mm: Use seq_putc() in two functions\n  macintosh: Convert to using %pOF instead of full_name\n  ... Merge branch 'efi-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull EFI updates from Ingo Molnar:\n \"The main changes in this cycle were:\n\n   - Transparently fall back to other poweroff method(s) if EFI poweroff\n     fails (and returns)\n\n   - Use separate PE/COFF section headers for the RX and RW parts of the\n     ARM stub loader so that the firmware can use strict mapping\n     permissions\n\n   - Add support for requesting the firmware to wipe RAM at warm reboot\n\n   - Increase the size of the random seed obtained from UEFI so CRNG\n     fast init can complete earlier\n\n   - Update the EFI framebuffer address if it points to a BAR that gets\n     moved by the PCI resource allocation code\n\n   - Enable \"reset attack mitigation\" of TPM environments: this is\n     enabled if the kernel is configured with\n     CONFIG_RESET_ATTACK_MITIGATION=y.\n\n   - Clang related fixes\n\n   - Misc cleanups, constification, refactoring, etc\"\n\n* 'efi-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  efi/bgrt: Use efi_mem_type()\n  efi: Move efi_mem_type() to common code\n  efi/reboot: Make function pointer orig_pm_power_off static\n  efi/random: Increase size of firmware supplied randomness\n  efi/libstub: Enable reset attack mitigation\n  firmware/efi/esrt: Constify attribute_group structures\n  firmware/efi: Constify attribute_group structures\n  firmware/dcdbas: Constify attribute_group structures\n  arm/efi: Split zImage code and data into separate PE/COFF sections\n  arm/efi: Replace open coded constants with symbolic ones\n  arm/efi: Remove pointless dummy .reloc section\n  arm/efi: Remove forbidden values from the PE/COFF header\n  drivers/fbdev/efifb: Allow BAR to be moved instead of claiming it\n  efi/reboot: Fall back to original power-off method if EFI_RESET_SHUTDOWN returns\n  efi/arm/arm64: Add missing assignment of efi.config_table\n  efi/libstub/arm64: Set -fpie when building the EFI stub\n  efi/libstub/arm64: Force 'hidden' visibility for section markers\n  efi/libstub/arm64: Use hidden attribute for struct screen_info reference\n  efi/arm: Don't mark ACPI reclaim memory as MEMBLOCK_NOMAP Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 platform updates from Ingo Molnar:\n \"The main changes include various Hyper-V optimizations such as faster\n  hypercalls and faster/better TLB flushes - and there's also some\n  Intel-MID cleanups\"\n\n* 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  tracing/hyper-v: Trace hyperv_mmu_flush_tlb_others()\n  x86/hyper-v: Support extended CPU ranges for TLB flush hypercalls\n  x86/platform/intel-mid: Make several arrays static, to make code smaller\n  MAINTAINERS: Add missed file for Hyper-V\n  x86/hyper-v: Use hypercall for remote TLB flush\n  hyper-v: Globalize vp_index\n  x86/hyper-v: Implement rep hypercalls\n  hyper-v: Use fast hypercall for HVCALL_SIGNAL_EVENT\n  x86/hyper-v: Introduce fast hypercall implementation\n  x86/hyper-v: Make hv_do_hypercall() inline\n  x86/hyper-v: Include hyperv/ only when CONFIG_HYPERV is set\n  x86/platform/intel-mid: Make 'bt_sfi_data' const\n  x86/platform/intel-mid: Make IRQ allocation a bit more flexible\n  x86/platform/intel-mid: Group timers callbacks together Try to find optimal dive sample merge offset\n\nWhen we merge dives where the samples have come from different dive\ncomputers, the samples may be offset from each other due to the dive\ncomputers not having decided that the dive starts at quite the same\ntime.\n\nFor example, some dive computers may take a while to wake up when\nsubmerged, or there may be differences in exactly when the dive\ncomputer decides that a dive has started. Different computers tend to\nhave different depths that they consider the start of a real dive.\n\nSo when we merge two dives, look for differences in the sample data,\nand search for the sample time offset that minimizes the differences\n(logic: minimize the sum-of-square of the depth differences over a\ntwo-minute window at the start of the dive).\n\nThis still doesn't really result in perfect merges, since different\ncomputers will give slightly different values anyway, but it improves\nthe dive merging noticeably. To the point that this seems to have\nfound a bug in our Uemis data import (it looks like the Uemis importer\ndoes an incorrect saltwater pressure conversion, and the data is\nactually in centimeter, not in pressure).\n\nSo there is room for improvement, but this is at least a reasonable\napproximation and starting point.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix dive trip merging logic\n\nWe used to have very spotty logic for picking the dive trip when\nmerging two dives. It turns out that that spotty logic almost never\nreally matters, because in practice you'll never hit the situation of\nmerging two dives with different dive trips, but it *can* happen.\n\nIn particular, it happens when you use multiple dive computers, and\nend up loading the dives from one computer on top of the dives of your\nother computer. If the clocks of the dive computers was set\nsufficiently close to each other, the dive merging logic will kick in\nand you may now have slightly different times for the dives that get\nmerged, and the trip merging logic got *really* confused.\n\nThe trip management also depends on the trip dates being updated\ncorrectly when the dives associated with a trip are updated (whether\nadded or removed), and the trip merging code did none of that.\n\nThis fixes it all up. Hopefully correctly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Fix merging of weight systems\n\nI just tried downloading some duplicate dives I had on my second dive\ncomputer, and it all \"just worked\" and subsurface merged them for me.\nAlmost perfectly.\n\nI say \"almost\", because in merging them, it threw my old weightsystem\ndata away, due to that not being merged.\n\nAlso, it was a perfect merge only because the computers are so similar\nthat they just line everything up - same water activation logic, same\nsample interval, same pretty much everything. So while I know the\nsample merging is not really the right thing to do (it was designed to\nget the \"merge the exact same dive from the same computer\" case\nright), it worked well enough for this particular case. I'll look at\nsomething better later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Another Swedish translation update\n\nThis updates the Swedish translation for the new message strings, and\nthe date ordering in particular. It also fixes an incorrect\ntranslation (it incorrectly had translated dive-time as if it was the\nstarting time of the dive, not the duration of the dive).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Minimal Swedish translation update\n\nThis doesn't really improve any of the horrible Swedish texts, but\nupdates it for the message text fuzziness due to the text changes\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Add Swedish translation\n\nThis is a horrible mish-mash of the english and norwegian translation\nand my random odd swedish translations of them.\n\nIt's bad. But it's a starting point. If somebody complains, they\nhopefully say things like \"That should be xyz\" and it can be fixed.\n\n[Dirk Hohndel: minor edit to the .po file to at least no longer claim to\n               be Norwegian...]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Improve on the DivingLog importer a bit\n\nThis adds a few fields that we parse, but more importantly it also tries\nto dynamically decide if the sample temperatures and pressures are in\nimperial or metric units.\n\nDirk suspects that DivingLog generally always does everything in metric,\nand the reason why he has crazy sample data in imperial units (both for\npressure and temperature) may be due to a bug in the early Uemis\nimporter for DivingLog.\n\nWhich would actually make a lot more sense than DivingLog really being\nso insane on purpose.\n\nAnyway, Dirk's brother Jurgen seems to have everything in metric units,\nwhich would be much saner.  Maybe we should throw away the support for\ninsane DivingLog files entirely, since it is possible that the only use\never of the possible source of that bug was Dirk's use of the Uemis\nimporter.\n\nBut for now, we end up just guessing. Current guesses:\n\n - water temperature is below 32 dgC, so 32+ degrees is in Fahrenheit.\n\n - tank pressures are below 400 bar, so higher values than that must be\n   psi.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> New XML format for saving dives\n\nThis patch makes the trips nest, and it also fixes the fact that you never\nsaved the trip notes (you could edit it, but saving would throw it away).\n\nI did *not* change the indentation of the dives, so the trip stuff shows\nup the the beginning of the line, at the same level as the <dive> and\n<dives> thing. I think it's fairly readable xml, though, and we haven't\nreally had proper \"indentation shows nesting\" anyway, since the top-level\n\"<dives>\" thing also didn't indent stuff inside of it.\n\nAnyway, the way I wrote it, it still parses your old \"INTRIP\" stuff etc,\nso as far as I know, it should happily read the old-style XML too. At\nleast it seemed to work with your xml file that already had the old-style\none (I haven't committed my divetrips, exactly because I didn't like the\nnew format).\n\nIt always saves in the new style, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Update cylinder info properly\n\nThe \"cylinders_equal()/copy_cylinders()\" functions were buggered, and\nonly checked (and copied) the cylinder type.  That was on purpose, since\nyou do want to be able to change the type of a cylinder without changing\nthe gasmix of the cylinder.\n\nHOWEVER, the reverse is also true: you may want to change the gasmix of\na cylinder without changing the type.\n\nSo it's not that the type of the cylinder is special - it's that the\ntype and the gasmix should be considered separately.\n\nDo that properly for the equipment editing case.\n\nReported-by: Ďoďo <dodo.sk@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix missing save of (almost empty) cylinder information\n\nIf we have no explicit cylinder info at all (it's normal air, no size or\nworking pressure information, and no beginning/end pressure information),\nwe don't save the cylinders in question because that would be redundant.\n\nSuch non-saved cylinders may still show up in the equipment list because\nthere may be implicit mention of them elsewhere, notably due to sample\ndata, so not saving them is the right thing to do - there is nothing to\nsave.\n\nHowever, we missed one case: if there were other cylinders that *did* have\nexplicit information in it following such an uninteresting cylinder, we do\nneed to save the cylinder information for the useless case - if only in\norder to be able to save the non-useless information for subsequent\ncylinders.\n\nThis patch does that. Now, if you had an air-filled cylinder with no\ninformation as your first cylinder, and a 51% nitrox as your second one,\nit will save that information as\n\n  <cylinder />\n  <cylinder o2='51.0%' />\n\nrather than dropping the cylinder information entirely.\n\nThis bug has been there for a long time, and was hidden by the fact that\nnormally you'd fill in cylinder descriptions etc after importing new\ndives. It also used to be that we saved the cylinder beginning/end\npressure even if that was generated from the sample data, so if you\nimported from a air-integrated computer and had samples for that cylinder,\nwe used to save it even though it was technically redundant.\n\nWe stopped saving redundant air sample information in commit 0089dd8819b7\n(\"Don't save cylinder start/end pressures unless set by hand\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n\nRemoved start and end in save_cylinder_info(). These two variables are no\nlonger used.\n\nSigned-off-by: Dirk Hohndel <dirk@hohndel.org> Don't update the progress bar from the dive computer import thread\n\nThere's no guarantee that gtk is thread-safe (apparently it can be\nbroken at least on Windows, even though it should be fine on top of X).\n\nSo don't update the progress bar directly from the dive computer import\ncode, instead just update the progress information in static variables,\nand let the GUI thread update it while it does the idle loop polling\nanyway.\n\nReported-by: Jef Driesen <jefdriesen@telenet.be>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'divetrip-rewrite' of git://github.com/torvalds/subsurface\n\nMerge the dive trip rewrite by Dirk Hohndel.\n\nThis just merges the dive trip changes with the timestamp handling\nchanges.  There were multiple small data conflicts, along with some\nnewly added 'time_t' cases in the dive trip handling that needed to be\nconverted to 'timestamp_t' along the way.\n\n* 'divetrip-rewrite' of git://github.com/torvalds/subsurface:\n  Convert FIND_TRIP into function\n  Partial rewrite of the dive trip code\n  Check if trip is NULL before calling DIVE_TRIP Merge branch 'time-function'\n\nMerge the 64-bit timestamp_t time function branch.\n\nThis makes subsurface not only safe against the 2038-year problem, but\nalso avoids the use of thread-unsafe gmtime() etc.\n\nWe still use the system time_t for initializing the calendar widget for\nadding a new dive, but that's cosmetic rather than anything fundamental.\n\n* time-function:\n  FIND_TRIP: don't cast a timestamp to a pointer\n  dive-time widget: fix incorrect use of timestamp_t\n  Fix the incorrect data type for DIVE_DATE accesses\n  Use a 64-bit 'timestamp_t' for all timestamps, rather than 'time_t' FIND_TRIP: don't cast a timestamp to a pointer\n\nThe pointer size may not be large enough to contain a timestamp, so make\nFIND_TRIP() just pass the pointer to the timestamp instead.\n\nAnd use an inline function instead of macros with casts.  That gets us\nproper type safety while at it, so that we get a warning if somebody\ndoesn't pass the expected \"timestamp_t *\".  Plus the code actually looks\nsimpler and way more straightforward.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive-time widget: fix incorrect use of timestamp_t\n\nI did a global search-and-replace to make all \"time_t\" users use the\ninternal subsurface 64-bit \"timestamp_t\" type instead, but we have one\ncase that still uses the system time functions: the use of \"localtime()\"\nin the dive_time_widget().\n\nEverywhere else we always just use UTC for all our time handling, and we\ndon't really ever care about the local timezone etc.  However, for the\ndive time widget, we initialize the calendar widget to the current time,\nwhich obviously does want to take the local timezone into account, so\nthere we end up using the whole system time handling code.\n\nSo that one should continue to use time_t, even if it might have the\nyear-2038 problem.  We also don't care about the fact that it's not\nthread-safe, since this is just initializing the widget which definitely\ndoesn't happen threaded.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix the incorrect data type for DIVE_DATE accesses\n\nThis is the same bugfix that Lubomir did in the master branch, but now\non top of the new 64-bit timestamp_t model.  So now we also remove the\ncomment about the year 2038 problem, because it's not true any more.  We\ndo all the date handling in a 64-bit integer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a 64-bit 'timestamp_t' for all timestamps, rather than 'time_t'\n\nThis makes the time type unambiguous, and we can use G_TYPE_INT64 for it\nin the divelist too.\n\nIt also implements a portable (and thread-safe) \"utc_mkdate()\" function\nthat acts kind of like gmtime_r(), but using the 64-bit timestamp_t.  It\nmatches our original \"utc_mktime()\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-work' of git://git.hohndel.org/subsurface\n\nPull small UI updates from Dirk Hohndel:\n \"Not sure if you like the change to the About screen.  :-)\n\n  The other one is simply a small improvement for people importing xml\n  files from the UI - it gets them an at least somewhat sane starting\n  directory to work from.\"\n\n* 'ui-work' of git://git.hohndel.org/subsurface:\n  Set default path for file import to the last path opened\n  Update the About screen Merge branch 'trip3' of git://git.hohndel.org/subsurface\n\nPull more trip handling fixes from Dirk Hohndel.\n\nAnd the \"delete dive\" functionality too.\n\n* 'trip3' of git://git.hohndel.org/subsurface:\n  Implement delete dive option\n  Make \"create trip above\" also add on selected dives\n  Handle new dives correctly if trips exist\n  Merge one or more dives with the trip above Merge branch 'print_selection' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull print selection checkbox update from Pierre-Yves Chibon.\n\nInstead of implicitly always printing selected dives if there are more\nthan one, this makes it print them if the checkbox is selected.\n\n* 'print_selection' of http://ambre.pingoured.fr/cgit/subsurface:\n  Add the 'Print only selection' checkbox in the print options Merge branch 'trip3' of git://git.hohndel.org/subsurface\n\nPull trip manipulation branch from Dirk Hohndel:\n \"I have added yet more of the requested features.\n\n  I am not aware of any outstanding bugs or crashes (except for the Gtk\n  problem that causes the import to crash for some people on Ubuntu and\n  MacOS - but as I mentioned earlier, that bug has been around as long\n  as the import file selector box).\"\n\n* 'trip3' of git://git.hohndel.org/subsurface:\n  Avoid duplicate dive_trip entries\n  More trip manipulations: remove selected dives from trip\n  Add ability to merge trip with trip below\n  Use the infrastructure for moving dives in more places\n  Correct the trip related test dives\n  Fix crash when removing the first dive of a trip\n  Correctly initialize the toggle state of the autogroup menu entry\n  Fix copy_tree_node to no longer overwrite dive duration\n  Add autogen menu command\n  Fix a crash when changing sort column\n  Use truth values with gboolean\n  Allow modification and edits of trips\n  Clean up macros and auxiliary functions\n  Store time_t as long value Make xml (and CSV) parsing use 'g_ascii_strtod()' rather than 'strtod()'\n\nGTK messes up the standard C library locales by default (instead of just\ntaking locale information into account internally).  Which breaks\n'strtod()' and 'printf()' etc.  Since they screwed that up, they then\nadded helper functions for undoing that braindamage.  Use it.\n\nI'd like to blame the GTK people, but the standard C libary people bear\n*some* responsibility for this.  One of the reasons why people do not\nuse \"setlocale()\" in many normal programs is exactly because it messes\nup core libc functionality - with number conversion being the main\nthing.\n\nDoing things like converting numbers in a locale-specific manner is\nsomething people do want to do, but not *always*.  So the C library\nlocale code should always had defaulted to C locale, with some *extra*\nmarker (like a printf/scanf modifier) to say \"print/scan in the current\nlocale\".\n\nBecause many things absoilutely need to be non-localized.  You don't\nwant your internal file format to magically change just because you want\nto show things to the user in France, for example.\n\nReported-by: Ivan Habunek <ivan.habunek@gmail.com>\nRoot-caused-by: Jef Driesen <jefdriesen@telenet.be>\nCc: Dirk Hohndel <dirk@hohndel.org>\nCc: Lubomir I. Ivanov <neolit123@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'separator-line' of git://github.com/henrik242/subsurface\n\nApparently on OS X the separator line is all alone at the end.\n\nAcked-by: Dirk Hohndel <dirk@hohndel.org>\n\n* 'separator-line' of git://github.com/henrik242/subsurface:\n  Remove separator line in MacOSX File menu Add support for printing only the selected dives\n\nRight now we just implicitly decide \"print only selected dives\" when\nthere is more than one dive selected (and then print all dives if only\none dive is selected).\n\nWe probably should have an checkbutton in the dive details page for the\nchoice.  But I wanted to avoid the pain that is gtk as far as possible\nfor the initial implementation.  The code is ready to be changed to just\nuse a checkbutton instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'print_table' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull table printing improvements from Pierre-Yves Chibon:\n \"I cleaned up the print options as asked so that we only have the\n  choice between the \"pretty-print\" and the \"table-print\".\n\n  The table layout has been improved.\"\n\n* 'print_table' of http://ambre.pingoured.fr/cgit/subsurface:\n  Remove the pretty-print without dive profile option.\n  Have a nice table formating with choosing the 'Table print' option.\n  Invert the print 'dive profile' option.\n  Deactivate 'Show profiles' if 'table print' is checked. Merge branch 'divetrip-nr' of git://git.hohndel.org/subsurface\n\nPull divetrip nr cleanup from Dirk Hohndel:\n \"We don't need to manually track this - gtk gives us this number\n  without any problems.\"\n\n* 'divetrip-nr' of git://git.hohndel.org/subsurface:\n  Stop tracking the number of dives in a dive trip Merge branch 'freediving-tweaks' of git://github.com/mguentner/subsurface\n\nMerge freediving tweaks (zoom in on short dives etc) from Maximilian\nGüntner.\n\nTrivial conflicts in display.h due to unrelated printing stuff just\nhappening to be added nearby.\n\n* 'freediving-tweaks' of git://github.com/mguentner/subsurface:\n  moved zoomed_plot to display.h\n  plot the time with a fixed padding (leading zero)\n  updated/corrected comment\n  added \"Zoom\" button and improved scaling\n  fixed indentation\n  use increments that make sense for 600 seconds\n  Plot shorter (apnea) dives with a reasonable scale Merge git://git.tdb.fi/ext/subsurface\n\nPull a few buglet fixes from Mikko Rasa.\n\nSome trivial conflicts due to changes in the dive selection logic, and\nusing the new \"for_each_dive()\" helper.\n\n* git://git.tdb.fi/ext/subsurface:\n  Check if multi-dive editing is actually needed\n  Fix an off-by-one error in buffer allocation Merge branch 'trips' of git://git.hohndel.org/subsurface\n\nMerge the initial 'track trips explicitly' code from Dirk Hohndel.\n\nFix up trivial conflicts in save-xml.c due to the new 'is_attribute'\nflag.\n\n* 'trips' of git://git.hohndel.org/subsurface:\n  Fix an issue with trips that have dives from multiple input files\n  Some simple test dives for the trips code\n  First cut of explicit trip tracking Update for new libdivecomputer interfaces\n\nFor this you need to get the current libdivecomputer tree, reconfigure,\nbuild and install it first.  But this cleans up some of the silly error\nhandling too, and has just a single \"dc_device_close()\" call etc, rather\nthan duplicating that (and the new dc_context_free()).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Only quote the quote characters in xml attributes\n\nThe quoting of single and double quotes is only necessary for\nattributes, and is irritating for other fields in that it makes the\nfields almost unreadable in the xml file.  Single quotes in particular\nare common, and turning \"it's\" into \"it&apos;s\" is just not reasonable\nfor dive notes etc.\n\nSo add a flag to whether the xml quoting is for an attribute or not, and\ntake that into account.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'quoting' of git://git.hohndel.org/subsurface\n\nPull xml quoting fix from Dirk Hohndel.\n\n* 'quoting' of git://git.hohndel.org/subsurface:\n  Add single and double quotes to escaped characters in XML output Do some whitespace cleanup\n\nThe previous commit was a patch from Lubomir, which also had some\nwhitespace fixes (to go with some new whitespace bugs to replace them)\nin it.\n\nI removed the whitespace changes from that patch (don't mix whitespace\nfixes with other fixes, unless they are on the same lines!) but decided\nto look for other whitespace issues, and this is the result.\n\nI left the non-C files alone, some of the spec and script files also\nhave whitespace at the end of lines etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add helper 'for_each_dive()' dive iterator\n\nIt's an easy thing to do, but the for-loop ends up being pretty ugly, so\nhide it behind the macro.\n\nIt would be even prettier with one of the (few) useful C99 features:\nlocal for-loop variables.  However, gcc needs special command line\noptions, and other compilers may not do it at all. So instead of doing\n\n   #define for_each_dive(_x) \\\n      for (int _i = 0; ((_x) = get_dive(_i)) != NULL; _i++)\n\nwe require that the user declare the index iterator too, and the use\nsyntax becomes\n\n   for_each_dive(idx, dive) {\n\t... use idx/dive here ...\n   }\n\nAnd hey, maybe somebody actually will want to use the index, so maybe\nthat's not all bad.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix single-dive editing oddity\n\nThe multi-dive case does fine, but the single-dive case (used when\nadding a dive, for example) was somewhat confused between the dive index\n(which is the location in the dive array) and the dive number.\n\nFix this by just passing the dive pointer instead (where NULL means to\nuse the current dive selection).\n\nReported-by: Jacco van Koll <jacco.van.koll@gmail.com>\nRoot-caused-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a \"Dive details\" widget to the print dialog\n\nOk, so the widget doesn't actually *do* anything, but this is where you\nwould add dive printing settings for things like \"print list\" vs \"print\nprofiles\" etc.\n\nPrinting just a dense dive table (no profiles etc) is being discussed on\nthe list, maybe starting the scaffolding will inspire somebody to do\nsomething about it ...\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve group selection semantics\n\nNow that the last commit tried to avoid changing the child selections if\nthe selected group partially matched, we should always [un]select all\nchildren when we actually decide to change something.\n\nBefore, it would try to minimize selection damage by stopping\n[un]selecting when it hit a child that already matched the selection,\nbut since we minimize damage differently, the all-or-nothing approach is\nbetter, and gets us sane behavior when the group is collapsed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid changing selection status when collapsing/expanding groups\n\nThis tries to avoid the problem mentioned in commit972669d6363c (\"Rework\ndive selection logic\"), where a selection of dives hidden by collapsing\nthe group gets forgotten about by gtk.  It does so by always marking the\ngroup selected when it is collapsed with any selected children.\n\nWe also avoid selecting new children when a group is selected that\nalready has at least *some* children selected already.  This way we do\nminimal damage to existing selections when working with dive group\nselections.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rework dive selection logic\n\nThis completely changes how we keep track of selected dives: instead of\nhaving an array listing the selection (\"selectiontracker\") or trusting\nthe gtk selection information, just save the information about whether a\ndive is selected in the dive itself.\n\nThat makes it trivial to keep track of the state of selection across\ngroup collapse/expand events, or when changing the tree view model.  It\nalso ends up simplifying the code and logic in other ways.\n\nHOWEVER, it does currently (re-)introduce an annoying oddity with gtk:\nif you collapse a dive trip that has individual selections, gtk will\nforget those selections (\"out of sight, out of mind\"), and when you do\n*new* selections, the old hidden ones remain.\n\nSo there's some games required to make gtk do sane things.  We may need\nto either explicitly drop selections when collapsing trips, or make sure\nthe group entry gets selected when collapsing a group that has\nselections in it. Or something.\n\nThere may be other issues introduced by this too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divelist: add 'Expand all' and 'Collapse all' menu items\n\nThis adds the ability to expand/collapse all the dive groupings in the\ndivelist from the divelist right-click context menu.\n\nShould we perhaps add it to the top 'Dive' menu too?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the notebook portion (dive notes/equipment/info) a scrollable window\n\nThis makes things start up with the wrong size, which is somewhat\nannoying, but by doing so avoids a bigger annoyance, namely that the\nthree panes move around when moving between dives.\n\nIn particular, if the initial dive didn't have much of an equipment\nlist, the initial size allocated for the notebook is fairly small and\ndetermined mainly by the size of the the Dive Notes page.  However, when\nyou then scroll around in the dive list, you might hit a dive with lots\nof equipment, and suddenly the panes dividing the different parts of the\nsubsurface application window will jump around to make room.\n\nThat's horribly annoying, and actually makes things like double-clicking\ndives in the dive list not work right, because the first click will\nselect it, and cause the dive to move around (so the second click will\nhit a totally different dive).\n\nNow, making the notebook be in a scrollable window means that if the\nsize of the notebook changes, it might get a scrollbar, but the panes\nthemselves do not move around.\n\nThe initial sizing of that thing being wrong is annoying, though.  We\nneed to figure out a separate solution to that.\n\n[ Side note: currently it uses GTK_POLICY_NEVER for the horizontal\n  scroll-bar, just to avoid the horizontal size also starting out wrong,\n  which is *really* nasty.  If we can solve the initial size issue, we\n  should make the horizontal scroll-bar be GTK_POLICY_AUTOMATIC too. ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Select better (?) default date for adding new dive\n\nWe now pick one hour after the end of the currently selected dive as the\ndefault starting time for the new dive to be added.  If multiple dives\n(or no dives) are selected, we default to current time as before.\n\nThe \"one hour after the end\" is just a random (but not unreasonable)\nassumption for the surface time if you add multiple dives.\n\nSuggested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve divelist group header information\n\nThis shows the number of dives in the grup in the divelist header field,\nand also picks the location from the first dive that *had* a location,\nso that if any dive in the group has a valid location, the group will\nhave a location.\n\nIt also makes double-clicking a dive group expand/collapse that group.\n\nRequested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix uninitialized pointer crash for \"Save As\"\n\nThe \"filename\" variable was only initialized when the user accepted the\nname, so cancelling the file save would randomly use an uninitialized\npointer.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make fill_missing_tank_pressures robust against missing cylinder info\n\nThe code iterates over a list that can be NULL, but happily dereferenced\nit anyway.  Oops.\n\nThis function really should be split up and commented more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make fixup_divep robust against insane dive times\n\nThis fixes the case of the dive duration being zero, or being shorter\nthan the assumed ascent/descent time.\n\nReported-by: Lutz Vieweg <lvml@5t9.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'fixes' of git://git.hohndel.org/subsurface\n\nPull dive selection fixes from Dirk Hohndel.\n\nThis hopefully fixes the common cases.  Dirk is cursing gtk.  We may\nneed some gtk selection guru to explain things.\n\n* 'fixes' of git://git.hohndel.org/subsurface:\n  Another selection fix\n  More fiddling with the selection Merge branch 'misc-fixes' of git://github.com/DataBeaver/subsurface\n\nPull miscellaneous fixes, mostly UI stuff from Mikko Rasa.\n\nBoth this and the pull from Pierre-Yves Chibon created a \"Save As\" menu\nentry and logic.  As a result, there were a fair number of conflicts,\nbut I tried to make the end result somewhat reasonable.  I might have\nmissed some semantic conflict, though.\n\nSeries-acked-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\n\n* 'misc-fixes' of git://github.com/DataBeaver/subsurface:\n  Add a separate \"Save as\" entry to the menu\n  Changes to menu icons\n  Improved depth info for dives without samples\n  Divide the panes evenly in view_three Merge branch 'change_quit2' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull patches to change behavior on exit from Pierre-Yves Chibon.\n\nPierry-Yves explains:\n \"When someone opens a file, change something in it and try to quit, the\n  program asked whether the data should be saved.\n\n  If 'Ok' then it shows the save-window and the user can choose to save\n  the file or rename it.\n\n  My habits in such case would be that since I opened a specific file, I\n  want to save to that specific file, therefore, when I press 'Ok', I\n  want it to save automatically to the file I opened.\n\n  So I have been working on changes that do:\n   - When a file has been opened by the user, save to this same file if\n     the user is 'Ok' while closing.\n   - Add a 'Cancel' option to the pop-up window that offers to save the\n     file while closing.\n   - Add a 'Save As' entry in the file menu.\"\n\n* 'change_quit2' of http://ambre.pingoured.fr/cgit/subsurface:\n  Add a 'Save As' entry in the menu.\n  Allow to cancel while trying to quit and the data was changed.\n  When the file has been opened rely on it to save. multi-dive editing: don't change fields that weren't changed for the master dive\n\nCommit 2f773b97e042 (\"multi-dive editing: don't change already set data\nfor other dives\") didn't get the multi-dive editing quite right: even if\none of the dives in the list of changed dives has an empty field, we\nshould *not* fill it with the edit data unless that edit data was\nactually changed.\n\nSo compare the new data with the original master data, and if they\nmatch, do nothing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'tree2' of git://git.hohndel.org/subsurface\n\nPull selection tracking fixes from Dirk Hohndel:\n \"I just gave up on gtk tracking our selection.  Way too much pain.  The\n  implementation below has seen some testing with the debugging code\n  enabled and seems to work - but it needs more banging onto it, I'm\n  sure.\n\n  Ideally I'd like to leave the debug code in, ask people on the mailing\n  list to play with it and report any inconsistencies.  After that I'll\n  be happy to remove it again.\"\n\n* 'tree2' of git://git.hohndel.org/subsurface:\n  Stop relying on gtk to track which dives are selected multi-dive editing: don't change already set data for other dives\n\nWhen editing multiple dives at the same time, don't change fields that\nhave already been set for a dive, unless the old field contents match\nthe currently selected (\"master\") dive.\n\nSo when you edit multiple dives, you can set the dive master or buddy\n(or suit etc) for all of them in one go, but if one of them already has\nthat field set, it won't be modified just because you set the other\nones.\n\nAcked-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid SIGSEGV when editing multiple dives\n\nThe multi-dive editing is broken if you right-click on the dive\ntext-fields (instead of the divelist).  This just avoids the SIGSEGV, it\ndoesn't really fix the editing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'tree2' of git://git.hohndel.org/subsurface\n\nPull dive-trip grouping from Dirk Hohndel:\n \"This turned into an updated pull request for the tree2 branch where I\n  implemented the date based grouping - but is actually a very different\n  topic: this adds the ability to edit multiple dives (and fixes some\n  issues with the dive editing overall).  The reason for that is that it\n  reuses some of the infrastructure that I implemented in the tree2\n  branch for tracking the selected dives.  More details in the commit\n  messages.\"\n\n* 'tree2' of git://git.hohndel.org/subsurface:\n  Switch from date based to dive trip based grouping\n  Redo dive editing\n  Fix selecting and unselecting summary items\n  Apply sort functions to the correct model, don't select summary entries\n  Maintain selected rows when switching between list model and tree model\n  Create duplicate list model so sorting by columns works again\n  Improve tree model implementation\n  Allow date based grouping Merge branch 'suit' of git://git.hohndel.org/subsurface\n\nPull exposure suit tracking from Dirk Hohndel.\n\n* 'suit' of git://git.hohndel.org/subsurface:\n  Add exposure protection tracking Update for libdivecomputer pkg-config include file changes\n\nSubsurface doesn't compile on OS X any more, because libdivecomputer\nchanged the way the header inclusion works: the include path from\npkg-config no longer includes the final \"libdivecomputer\" component, and\ninstead of doing\n\n  #include <header.h>\n\nfor libdivecomputer headers, we're now supposed to do\n\n  #include <libdivecomputer/header.h>\n\ninstead. Which is cleaner anyway.\n\nThe reason this only bit us on OS X is that I never trusted pkg-config\nthat much for non-system libraries on Linux (maybe it works, maybe it\ndoesn't, I've seen it go both ways), so on Linux we just used our own\nversion of the include path, and thus weren't affected by the\nlibdivecomputer config change.\n\nClean up the includes while at it - we no longer need (or want) the\ndevice-specific header files, since we just use the generic functions.\n\nReported-by: Grischa Toedt <toedt@embl.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix a couple of possible divide-by-zero conditions in statistics\n\nSeveral people reported the average time problem, but there's another\none lurking there too: if the dive duration is zero, you get bogus\naverage depth information too (but because that one was a floating point\ndivide, and by default they are unsignalling on x86, it didn't crash, it\njust resulted in bogus results).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the 'Add Dive' dialog at least slightly less butt-ugly\n\nI still suspect that using spinbuttons for the time handling is the\nwrong way, and I'm a bit surprised the Calendar widget doesn't have a\nmode where you can see/set the time too.\n\nBut this makes things at least minimally prettier, and initializes the\ntime entries to the current time (which is obviously not what anybody\nreally wants, but looks a lot better than defaulting to \"midnight\" or\nsome other random time that *also* won't be what anybody actually\nwants).\n\nI think this might be something we can live with, although I hope\nsomebody with good taste comes along and say \"don't use spinbuttons, do\nthis: xyzzy\" and makes things look better yet.\n\nAlso, I have this suspicion that I should put the time/depth/duration\nstuff to the right of the calendar.  Most displays are wider than they\nare tall, so tall and skinny dialogs are bad especially if you have\nlimited vertical pixels.  I still have flashbacks to my netbook-using\ndays, hating applictions that did that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make it possible to do \"Add Dive\" from just the main dive menu\n\nNo need for right-clicks.  It's inconvenient on lots of laptops etc, so\nallow just using the Dive menu as an alternative.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add depth entry to new dive edit dialog\n\nChrist, if you look up \"Ugly dialog\" on Wikipedia, I think it has a\npicture of this \"New dive\" thing.  Or it should have.\n\nBut it kind of works.  Although with only a \"max depth\" entry, you can't\ncurrently set average depths etc, so SAC-rates etc cannot be calculated\nfor these kinds of dives.\n\nAnd the dive numbering is wrong.  We do auto-number new dives that get\nadded at the end, but we do it as we add them, so when you *edit* the\ndive information (before it has been added) the dive number shows up as\n\"#0\".\n\nSo there's certainly room for improvement here.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rough \"Add new dive\" infrastructure in the divelist\n\nDo a right-click to get a menu with the \"Add dive\" entry.  Should do\ndelete too, but that's for later.\n\nWhat's also apparently for later is to make this *useful*.  It's the\nbutt-ugliest time entry field ever, and there's no way to set depth for\nthe dive either.  So this is more of a RFC than anything truly useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update to new sane libdivecomputer interfaces\n\nThis does mean that you have to build subsurface against a new version\nof libdivecomputer, and that version is likely going to have various\nslightly incompatible changes.  But the new interfaces allow for easily\nadding new supported dive computers without subsurface having to be\nupdated for each new vendor and model, so some slight pain is definitely\nworth it this time.\n\nI'm not even going to try to have some backwards-compatible version\nhere, the libdivecomputer interface changes are so extensive.  Native\nenumeration of devices is just the smallest part of it: the constants\nand types that libdivecomputer uses now have much nicer names that all\nstart with DC_ or dc_, so you don't get the kinds of name clashes we had\nwith \"gasmix_t\" etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix cochran CSV pressure data import\n\nThe cochran CSV pressure data is actually in units of '4 psi', not in\njust psi.  That seems to be the resolution cochran internally keeps\nthings in, and unlike the depth reading there's no conversion to\nstandard units in the export (for depth, the quarter-foot depth\nresolution is converted to tenths of feet when exporting).\n\nYeah, none of this makes any sense to me either, but I knew it was the\ncase.  I had just forgotten that factor-of-four when I did the importer.\n\nWith this fix, I get the same subsurface data (modulo some rounding\ndifferences particularly for temperature) whether I go through David\nMcNett's UDDF converter, or just import the CSV data directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: add support for importing the exported CSV files\n\nThe Cochran Analyst software can export the basic dive information as\nCSV files (comma-separated values).\n\nIndividual CSV files contain just one particular type of information:\ndepth, temperature or cylinder pressure, which is rather inconvenient.\nHowever, the way subsurface works, you can just import these CSV files\nall as individual dives, and then subsurface will automatically merge\nthe dives with the same date and time - and in the process it will also\nmerge all the samples.\n\nSo it turns out that we don't really need any special handling.  You can\nliterally just do\n\n     subsurface <list-your-cochran-export-files-here>\n\nand you're all done.\n\nOf course, the CSV files really *are* pretty useless, since they don't\ncontain all the nice information about where the dive took place etc.\nSo you literally just get the dive profile.  But that's better than\ngetting nothing at all.\n\nI'd love to actually be able to parse the real native Cochran Analyst\nsoftware CAN files, but in the meantime this is at least a starting\npoint.  And if I'm ever able to parse those nasty CAN-files, this makes\ncomparisons with the exports much easier.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a few more conversion helper functions to dive.h\n\nConvert feet to mm, psi to mbar, and F to mkelvin.  We do this elsewhere\ntoo, but I'm going to need it for the Cochran CSV files, so let's do the\nhelpers now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update cochran depth precision: it's in 3-inch increments\n\nThe Cochran CSV depth exports are indeed in tenths of feet, but the\ndecimal is always 0, 3, 5 or 8.  Where the 3 and 8 are obviously 0.25\nand 0.75 rounded up to one decimal place.\n\nSo Cochran does seem to be very much about imperial units, with depth\nand cylinder pressure scaled by four (depth in quarter-foot increments,\npressume in 4-psi increments)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more cochran data parsing code/comments\n\nThe code is pretty useless, the comments perhaps equally so.  I'm trying\nto figure out what the data pattern is for the cochran CAN files.  There\ndefinitely *is* a pattern, but it actually seems to be different for the\nfiles of different people - and it's not obvious in any case.\n\nThere probably are multiple versions of the format, and there might be\nthings like \"David has a high-pressure sensor, and Alex does not\" going\non too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add tankpressure parsing for UDDF files\n\nDavid McNett sent me some example Cochran CAN file data, along with his\nUDDF exports of same.  I still have absolutely no idea how to decode the\nCAN files (although the subsurface decrypting code seems to correctly\ndecrypt the data, and I see binary patters rather than just noise), but\nat least I can make sure we parse the UDDF portion better.\n\nSee also\n\n  https://github.com/nugget/cochran2uddf\n\nfor David's tool to convert the Cochran CSV exports into UDDF.\n\nData-source: David McNett <nugget@macnugget.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Allow overriding the default xslt path\n\nIt's very annoying to have to do \"make install\" to test a new xslt file,\njust because the default xslt path has the standard install path as the\nfirst entry.\n\nAt the same time, we do want to default to just using the standard\ninstall location first.\n\nSo to allow both testing, and having a nice sane default, just add\nsupport for a SUBSURFACE_XSLT_PATH environment variable that overrides\nthe default one if it exists.\n\nSo then you can just do\n\n   SUBSURFACE_XSLT_PATH=xslt ./subsurface\n\nto run subsurface from inside the git tree itself, using the current\nfiles in the git xslt subdirectory.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto SDE conversion: add boat name to notes if it exists\n\nThis is, I think, the last piece of relevant information that I can find\nin Szymon's SDE file.\n\nWhich is not to mean that we get all the conversions right, or that we\nhandle the more complex cases (still no multi-cylinder import, for\nexample). But it should be much better than it used to be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto SDE updates, take 178: add weight and visibility info\n\nThis converts the weight information into subsurface weights, and also\nadds visibility info (if it exists) into the notes for the dive.\n\nMore fall-out from me looking at the nasty suunto xml files, now that I\nhave a few that actually have some info that isn't just from the\ncomputer download.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix more Suunto SDM xml conversion problems\n\nLooking at the XML of the two dives Szymon Kosecki sent out to the\nsubsurface list, I notice that our cylinder size conversion was wrong.\nIt looks like CYLINDERUNITS is what determines whether the cylinder size\nis in metric (0) or imperial (1) units.\n\nOf course, if you gave a cylinder size in cuft and didn't give a working\npressure, subsurface will just ignore the size as the random crap it is.\nWe *could* default to a working pressure of 3000 psi, of course.\n\nThis also picks up the CYLINDERDESCRIPTION value, although neither of\nSzymon's dives actually had any description.\n\nI need more SDE xml files to figure out how multi-cylinder dives look\netc, but I think this gets most *simple* SDE files converted almost\ncorrectly now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix dive notes import from Suundo SDM\n\nThe xslt translation didn't add the <notes> tag for the notes, so while\nit did select the notes from the SDM file, that never made it into the\nsubsurface notes.\n\nAlso added weather info to the notes, mainly as an example.\n\nThere are probably other things we could do, but this fixes at least the\ntrivial test-case from Szymon Kosecki.\n\nReported-by: Szymon Kosecki <skosecki@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divecomputer importing: show the date of the currently importing dive\n\nI'm hoping most other dive computers are quicker to import from than the\nSuunto I have, but mine can take minutes to import all the dives.  Sure,\nwe have that nice progress bar, so it shows that it's doing something,\nbut it's not really showing *what* it is doing.\n\nSo instead of showing just \"Parsing dive X\", let's show the date of the\ndive.  That way, when it takes two minutes to import all the dives, at\nleast you can see \"oh, it's going back to the dives of last year\" and it\nthen feels like you have some good reason for the delay.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive import text updates in the progress bar\n\nInstead of using printf() to print the string updates (\"Parsing sample\ndata\" etc), introduce a function to show those strings in the graphical\nprogress bar itself.\n\nSubsurface hasn't been a text-mode application in a long time ;)\n\nThis partially fixes the second todo entry from commit b0ba22a06879\n(\"Show dive import error messages in the import dialog\") and generally\nmakes for a more helpful import - at least for the largely error-free\ncases.\n\nSadly, the messages that really come from within libdivecomputer itself\n(like \"suunto_vyper2.c:193: Failed to receive the answer.\") when things\ngo really wrong are not caught.  libdivecomputer does have a notion of a\nlogfile (set with \"message_set_logfile()\"), but that ends up being\nreally inconvenient.\n\nMaybe we could use some pipe setup or something. Oh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Change the Dive computer import button from \"Ok\" to \"Retry\" on error\n\nThis was a todo item in commit b0ba22a06879 (\"Show dive import error\nmessages in the import dialog\") which made the import dialog able to\nretry the import on errors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the \"Import\" function from the File menu to the Log menu\n\nSure, you can import a file too, but it really makes more sense to have\nthe actions related to importing new logs under \"Log\", I think.  I don't\nthink of it as a file operation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive import error messages in the import dialog\n\n.. not in the main window.  And leave the import dialog open, so that\nyou can either try doing it again, or cancel.  This makes it much easier\nto re-try a failed dive import, and actually makes the failure more\nobvious too.\n\nTodo:\n\n - make the \"Ok\" button change to \"Retry\" when an error happens\n\n - try to see if we can catch the actual status update messages from\n   libdivecomputer and show them too in the import dialog.  Right now\n   they are printed out to stderr by the library.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remember the default dive computer setting\n\nAlways having to re-select the same dive computer got really annoying\nwhen I had trouble importing the dives.  Let's not force the user to do\nthat, since we could just remember the last dive computer used, and\ndefault to that one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't close config file when changing preferences\n\nOn Linux and MacOS the subsurface_close_conf() doesn't really close the\nconfig file (it flushes writes on MacOS), but on Windows it does\nactually close the registry hkey.\n\nWhich is bad, if you change the settings multiple times - we assume that\nthe config file is open the whole time.\n\nSo add a \"subsurface_flush_conf()\" function, and call *that* when\nchanging configuration parameters.  And call the close function only at\nthe very end.\n\nAlternatively, maybe we should just open the config file separately\nevery time. I don't much care, maybe somebody else does.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make subsurface compile with current libdivecomputer git tree\n\nlibdivecomputer has the absolute worst interfaces to any library *ever*,\nand randomly changes those crappy interfaces when it adds support for\nnew dive computers.\n\nIt would have been much better if the interface was just a \"open this\ndevice\" with a device descriptor structure pointer, so that when Jef\nadds support for new devices, the old descriptors still stay around and\nwork the same way - there's just a new descriptor structure that you\n*can* use if you want.  Along with a data structure to name the devices\nand their descriptors, this would actually mean that users could just\nsupport pretty much any random device that LD supports.\n\nBut no, that's not how libdivecomputer works.  It has random enums and\ncrazy different ad-hoc interfaces for different dive computers.  Or,\nlike in this case, crazy different ad-hoc interfaces for the *same*old*\ndive computer.\n\nRight now, for example, the support for the new Heinrichs Weikamp \"Frog\"\ncomputer added a flag to the interface for the old OSTC_2 support.\nBreaking any libdivecomputer users even if you didn't need Frog support.\n\nAnd is there a version number in the header files to check for? Yes,\nthere's a version number.  But no, it's not useful, since it doesn't\nactually change with the interface changes.  This time, Jef actually did\nchange the version number (from 0.1.0 to 0.2.0) as part of new\ndevelopment version, but there's no reason to believe that it will\nchange in the future  as the interfaces change - it never has before.\n\nSo it's actually safer - and easier to understand - to check for the\nexistence of the new header file inclusion mechanism.  A new version of\nlibdivecomputer that supports the HW Frog computer will include the\n\"ostc_frog.h\" header file when you include the libdivecomputer device.h\nfile, and that will result in HW_FROG_H being defined.\n\nSo we can check whether libdivecomputer has the new interface and\nsupports the Frog by doing an \"#ifdef HW_FROG_H\" hack. Ugh.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make sure to update dive info when it is edited\n\nWe used to not properly update the dive info until we switched to\nanother dive when we edited it.  This should fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Renumber dives when deleting a dive\n\n... but only do it if the numbering of subsequent dives was consecutive\nto begin with.\n\nNote that we do accept unnumbered dives (and will stop the sequence\ncheck if we find one), but in order to renumber dives on delete, we\nrequire that starting with the dive we delete, the subsequent numbered\ndives have to be a nice incrementing series.  If that is the case, then\nwe fix up that numbering as we delete the dive.\n\nPut another way: if the dive numbering was an incrementing sequence\nbefore the delete, then it will be a sane incrementing sequence after it\ntoo.  But if you had missing dives before the delete, we will turn the\ndelete into just another missing dive.\n\nThe basic rule is that we never renumber any dives unless that\nrenumbering is \"obviously correct\".  It's better to leave old numbers\nas-is (and expect that the user is going to do an explicit re-numbering\noperation) than it is to change dive numbers in a sequence that we don't\nunderstand.\n\nI do suspect that we should possibly check the dive number \"backwards\"\ntoo, but this doesn't do that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the ugliest 'delete dive' model ever\n\nThis interface works the same way the \"edit dive\" menu item does: it's a\ntext entry meny item on the dive text entries (ie buddy/divemaster/notes\nsections).  Except you pick the \"Delete\" entry rather than the \"Edit\"\nentry.\n\nIt kind of works, but it really is a pretty horrible interface.  I'll\nneed to add a top-level dive menu entry for just deleting all selected\ndives instead.  And it would be good to be able to get a drop-down menu\nfrom the divelist instead of having to do it from the dive text entries,\nwhich is just insane.\n\nBut that requires gtk work.  I'm not quite ready to get back into that.\nThus the \"exact same insane interface as the explicit 'Edit' mode\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix reference tank information for LP steel tanks.\n\nCommit f9bb3f79106b (\"Clean up reference tank information table\") had\ncleaned up the tank info list so that you could sanely do tanks in\nliters and with a working pressure in bar.\n\nBut the LP steel cylinders had somehow missed out on the \".psi =\" part\nof the equation, and as a result, what was supposed to be their working\npressure instead ended up being interpreted as their size in\nmilli-liters.\n\nOops.\n\nFix that, and also make the standard tank info filling code actually\nverify the sanity of the reference tank table, so that if this happens\nagain, it will complain loudly instead of using nonsensical values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'weight' of git://subsurface.hohndel.org/subsurface\n\nPull weight management from Dirk Hohndel:\n \"This is the fifth or sixth version of this code, I'm begining to lose\n  track.  I still struggle with the balance between code duplication and\n  unnecessary indirectness and complexity.  Maybe I'm just not finding\n  the right level of abstraction.  Maybe I'm just trying too hard.\n\n  The code here is reasonably well tested.  Works for me :-)\n\n  It can import DivingLog xml files with weight systems and correctly\n  parses those.  It obviously can read and write weight systems in its\n  own file format.  It adds a KG/lbs unit default (and correctly stores\n  that).\n\n  The thing I still worry about is the code in equipment.c.  You'll see\n  that I tried to abstract things in a way that weight systems and\n  cylinders share quite a bit of code - but there's more very similar\n  code that isn't shared as my attempts to do so turned into ugly and\n  hard to read code.  It always felt like trying to write C++ in C...\"\n\n* 'weight' of git://subsurface.hohndel.org/subsurface:\n  Add weight system tracking\n\nFix up some trivial conflicts due to various renaming of globals and\nsimplification in function interfaces. Cochran: fix up dive data descrambling\n\nThis seems to do the dive data descrambling right for both files I have\naccess to.  Except it uses a hardcoded (different) offset for the two.\nI have yet to figure out how to automatically detect the offset itself\nproperly, so you have to compile for the right file.\n\nI'll figure it out, but I'm committing this as a reasonable point in the\nprocess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up Cochran dive header decoding offset\n\nIt turns out the odd \"different CAN files have different header offsets\"\ncame from the fact that the decode block was different lengths, and I\nhad not picked the correct place to start - and instead had found two\ndifferent places that were at different offsets due to the decode block\nlength differences.\n\nThis fixes that up, and it looks like the dive header is correctly\ndescrambled (but what the data *means* is unclear, although there is now\nan ASCII date and time visible, so at least one part of it is pretty\nobvious).\n\nThe actual dive data unscrambling is still different for the two\ntest-files I have to play with, I do not know why.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: do a partial header de-scramble\n\nThis descrambles at least parts of the header data.  Some of it has the\nsame pattern of data 4kB apart, it may be that there is a dive hiding in\nthere too (ie what I currently call a \"header\" may in fact be a header\n_plus_ a dive).\n\nBut the 4kB thing may well be an artifact of the crazy scrambling code\nitself.  Who knows what kind of chunking the Cochran Analyst\n\"encryption\" uses.\n\nAs with the dive data, there seems to be some offset differences between\ndifferent CAN files.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: do the full de-scramble for one case\n\nSo this descrambles all the dives in *one* of my cochran test files.  I\nstill don't know what the dive data *means*, but it's not a random\njumble of bytes any more: there are very clear patterns.\n\nHowever, the magic offsets that work for that particular CAN file are\nnot generic, because they don't work for another.  So there is some\nmagic dynamic decoding that I don't know about.  There is probably more\ndecode information in the initial decode block, over and beyond just the\nscrambling bytes.\n\n(The scrambling array is 234 bytes starting at 0x40001, but the first\nactual *dive* data starts at 0x45e03, so there's tons of unknown stuff\nin the file even outside the dives themselves)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cochran debug output a bit easier to use directly\n\nJust do the hex-dump in the program, and print all the results to\nstandard output.  Avoid the need to do 'od' by hand etc to see what\nhappens when you play with the decoder.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some initial cochran CAN file parsing\n\nIt's broken, and currently only writes out a debug output file per dive.\nI'm not sure I'll ever really be able to decode the mess that is the\nCochran ANalyst stuff, but I have a few test files, along with separate\ndepth info from a couple of the dives in question, so in case this ever\nworks I can at least validate it to some degree.\n\nThe file format is definitely very intentionally obscured, though.\nAnnoying.  It's not like the Cochran software is actually all that good\n(it's really quite a horribly nasty Windows-only app, I'm told).\n\nCochran Analyst is very much not the reason why people would buy those\ncomputers.  So Cochran making their computers harder to use with other\nsoftware is just stupid.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Import: always open and read the file before checking the filename extension\n\nMost of the parsers will want the content in memory, so keep them\nsimple.  The fact that the Suunto parser uses \"libzip\" that has to\nre-open the file is annoying and causes us to re-open the file etc.\n\nBut it's the odd man out, so don't design the \"open_by_filename()\"\nfunction around it.  Pretty much everybody else will want to avoid\nhaving to cook up their own IO routines.\n\nAlso, when reading the file, NUL-terminate the buffer.  This allows us\nto just treat text files as large strings if we want to, and doesn't\nmatter for binary files (we still pass in the length explicitly).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix typo ('suundo' instead of 'suunto')\n\nI apparently was so congested that it affected my typing too when I\nwrote that, and then copy-paste meant that the use and declaration\nmatched despite the misspelling.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add \"native\" Suunto SDE zip file reading\n\nYou need to have libzip-devel installed, and pkg-config needs to know about it\nfor the build to pick up on it.\n\nOn at least Fedora, a simple \"yum install libzip-devel\" will make things\nwork, although you may need to force a rebuild of subsurface too (the\n\"file.o\" file in particular - the Makefile doesn't track system\ndependencies).\n\nThen, you can just do\n\n   subsurface my-dives.SDE\n\nto read the data directly from the SDE file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up file reading from 'parse-xml.c' into 'file.c'\n\nWe're going to eventually import non-xml files too, so let's begin\nsplitting the logic up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'info-split' of git://git.hohndel.org/subsurface\n\n* 'info-split' of git://git.hohndel.org/subsurface:\n  Add statistics for longest, shortest, and shallowest dive\n  Create separate single dive and total stats pages\n  Separate out single dive statistics and total statistics First try at converting user-manual to AsciiDoc\n\nYou can do \"make doc\" in the main directory to create the html version,\nand if you want to play around with it, do \"make show\" in the\nDocumentation subdirectory to start firefox on the end result.\n\nIt's by no means perfect, but it gives somewhat reasonable results, and\nthis is enough initial work for people to play around with, I think.\n\nNOTE! You need \"asciidoc\" installed to do this: it's a python program,\nso it should be pretty easy even on non-Linux platforms.  And on Linux,\nmost distributions package it, so you just have to do something like\n\n\tyum install asciidoc\n\nto get it (replace with apt-get/zypper/whatever).\n\nAsciidoc can generate other output too (man-pages, LaTeX, etc), maybe\npeople want to play with that part too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'mac' of git://git.hohndel.org/subsurface\n\n* 'mac' of git://git.hohndel.org/subsurface:\n  Turn subsurface into a real Mac application Move the gasmix cleanups from XML parsing to the generic dive fixup stage\n\nRight now we do certain cylinder info operations only when importing\nfrom an XML file, which is wrong.  In particular, we do the \"is the\ngasmix air\" or \"what is the standard cylinder name\" only at XML read\ntime, which means that if you import a dive directly from the dive\ncomputer, it won't have the air sanitization or the proper default\ncylinder names.\n\nOf course, most dive computers don't actually save enough cylinder\ninformation for us to do the cylinder name lookup anyway, but some do.\nAnd all Nitrox-capable dive computers do have that O2 percentage that\nneeds cleanup too.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://git.tdb.fi/ext/subsurface\n\nPull a few buglet fixes from Mikko Rasa.\n\nSome trivial conflicts due to changes in the dive selection logic, and\nusing the new \"for_each_dive()\" helper.\n\n* git://git.tdb.fi/ext/subsurface:\n  Check if multi-dive editing is actually needed\n  Fix an off-by-one error in buffer allocation Merge branch 'trips' of git://git.hohndel.org/subsurface\n\nMerge the initial 'track trips explicitly' code from Dirk Hohndel.\n\nFix up trivial conflicts in save-xml.c due to the new 'is_attribute'\nflag.\n\n* 'trips' of git://git.hohndel.org/subsurface:\n  Fix an issue with trips that have dives from multiple input files\n  Some simple test dives for the trips code\n  First cut of explicit trip tracking Update for new libdivecomputer interfaces\n\nFor this you need to get the current libdivecomputer tree, reconfigure,\nbuild and install it first.  But this cleans up some of the silly error\nhandling too, and has just a single \"dc_device_close()\" call etc, rather\nthan duplicating that (and the new dc_context_free()).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Only quote the quote characters in xml attributes\n\nThe quoting of single and double quotes is only necessary for\nattributes, and is irritating for other fields in that it makes the\nfields almost unreadable in the xml file.  Single quotes in particular\nare common, and turning \"it's\" into \"it&apos;s\" is just not reasonable\nfor dive notes etc.\n\nSo add a flag to whether the xml quoting is for an attribute or not, and\ntake that into account.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'quoting' of git://git.hohndel.org/subsurface\n\nPull xml quoting fix from Dirk Hohndel.\n\n* 'quoting' of git://git.hohndel.org/subsurface:\n  Add single and double quotes to escaped characters in XML output Do some whitespace cleanup\n\nThe previous commit was a patch from Lubomir, which also had some\nwhitespace fixes (to go with some new whitespace bugs to replace them)\nin it.\n\nI removed the whitespace changes from that patch (don't mix whitespace\nfixes with other fixes, unless they are on the same lines!) but decided\nto look for other whitespace issues, and this is the result.\n\nI left the non-C files alone, some of the spec and script files also\nhave whitespace at the end of lines etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add helper 'for_each_dive()' dive iterator\n\nIt's an easy thing to do, but the for-loop ends up being pretty ugly, so\nhide it behind the macro.\n\nIt would be even prettier with one of the (few) useful C99 features:\nlocal for-loop variables.  However, gcc needs special command line\noptions, and other compilers may not do it at all. So instead of doing\n\n   #define for_each_dive(_x) \\\n      for (int _i = 0; ((_x) = get_dive(_i)) != NULL; _i++)\n\nwe require that the user declare the index iterator too, and the use\nsyntax becomes\n\n   for_each_dive(idx, dive) {\n\t... use idx/dive here ...\n   }\n\nAnd hey, maybe somebody actually will want to use the index, so maybe\nthat's not all bad.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix single-dive editing oddity\n\nThe multi-dive case does fine, but the single-dive case (used when\nadding a dive, for example) was somewhat confused between the dive index\n(which is the location in the dive array) and the dive number.\n\nFix this by just passing the dive pointer instead (where NULL means to\nuse the current dive selection).\n\nReported-by: Jacco van Koll <jacco.van.koll@gmail.com>\nRoot-caused-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a \"Dive details\" widget to the print dialog\n\nOk, so the widget doesn't actually *do* anything, but this is where you\nwould add dive printing settings for things like \"print list\" vs \"print\nprofiles\" etc.\n\nPrinting just a dense dive table (no profiles etc) is being discussed on\nthe list, maybe starting the scaffolding will inspire somebody to do\nsomething about it ...\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve group selection semantics\n\nNow that the last commit tried to avoid changing the child selections if\nthe selected group partially matched, we should always [un]select all\nchildren when we actually decide to change something.\n\nBefore, it would try to minimize selection damage by stopping\n[un]selecting when it hit a child that already matched the selection,\nbut since we minimize damage differently, the all-or-nothing approach is\nbetter, and gets us sane behavior when the group is collapsed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid changing selection status when collapsing/expanding groups\n\nThis tries to avoid the problem mentioned in commit972669d6363c (\"Rework\ndive selection logic\"), where a selection of dives hidden by collapsing\nthe group gets forgotten about by gtk.  It does so by always marking the\ngroup selected when it is collapsed with any selected children.\n\nWe also avoid selecting new children when a group is selected that\nalready has at least *some* children selected already.  This way we do\nminimal damage to existing selections when working with dive group\nselections.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rework dive selection logic\n\nThis completely changes how we keep track of selected dives: instead of\nhaving an array listing the selection (\"selectiontracker\") or trusting\nthe gtk selection information, just save the information about whether a\ndive is selected in the dive itself.\n\nThat makes it trivial to keep track of the state of selection across\ngroup collapse/expand events, or when changing the tree view model.  It\nalso ends up simplifying the code and logic in other ways.\n\nHOWEVER, it does currently (re-)introduce an annoying oddity with gtk:\nif you collapse a dive trip that has individual selections, gtk will\nforget those selections (\"out of sight, out of mind\"), and when you do\n*new* selections, the old hidden ones remain.\n\nSo there's some games required to make gtk do sane things.  We may need\nto either explicitly drop selections when collapsing trips, or make sure\nthe group entry gets selected when collapsing a group that has\nselections in it. Or something.\n\nThere may be other issues introduced by this too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divelist: add 'Expand all' and 'Collapse all' menu items\n\nThis adds the ability to expand/collapse all the dive groupings in the\ndivelist from the divelist right-click context menu.\n\nShould we perhaps add it to the top 'Dive' menu too?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the notebook portion (dive notes/equipment/info) a scrollable window\n\nThis makes things start up with the wrong size, which is somewhat\nannoying, but by doing so avoids a bigger annoyance, namely that the\nthree panes move around when moving between dives.\n\nIn particular, if the initial dive didn't have much of an equipment\nlist, the initial size allocated for the notebook is fairly small and\ndetermined mainly by the size of the the Dive Notes page.  However, when\nyou then scroll around in the dive list, you might hit a dive with lots\nof equipment, and suddenly the panes dividing the different parts of the\nsubsurface application window will jump around to make room.\n\nThat's horribly annoying, and actually makes things like double-clicking\ndives in the dive list not work right, because the first click will\nselect it, and cause the dive to move around (so the second click will\nhit a totally different dive).\n\nNow, making the notebook be in a scrollable window means that if the\nsize of the notebook changes, it might get a scrollbar, but the panes\nthemselves do not move around.\n\nThe initial sizing of that thing being wrong is annoying, though.  We\nneed to figure out a separate solution to that.\n\n[ Side note: currently it uses GTK_POLICY_NEVER for the horizontal\n  scroll-bar, just to avoid the horizontal size also starting out wrong,\n  which is *really* nasty.  If we can solve the initial size issue, we\n  should make the horizontal scroll-bar be GTK_POLICY_AUTOMATIC too. ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Select better (?) default date for adding new dive\n\nWe now pick one hour after the end of the currently selected dive as the\ndefault starting time for the new dive to be added.  If multiple dives\n(or no dives) are selected, we default to current time as before.\n\nThe \"one hour after the end\" is just a random (but not unreasonable)\nassumption for the surface time if you add multiple dives.\n\nSuggested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve divelist group header information\n\nThis shows the number of dives in the grup in the divelist header field,\nand also picks the location from the first dive that *had* a location,\nso that if any dive in the group has a valid location, the group will\nhave a location.\n\nIt also makes double-clicking a dive group expand/collapse that group.\n\nRequested-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix uninitialized pointer crash for \"Save As\"\n\nThe \"filename\" variable was only initialized when the user accepted the\nname, so cancelling the file save would randomly use an uninitialized\npointer.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make fill_missing_tank_pressures robust against missing cylinder info\n\nThe code iterates over a list that can be NULL, but happily dereferenced\nit anyway.  Oops.\n\nThis function really should be split up and commented more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make fixup_divep robust against insane dive times\n\nThis fixes the case of the dive duration being zero, or being shorter\nthan the assumed ascent/descent time.\n\nReported-by: Lutz Vieweg <lvml@5t9.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'fixes' of git://git.hohndel.org/subsurface\n\nPull dive selection fixes from Dirk Hohndel.\n\nThis hopefully fixes the common cases.  Dirk is cursing gtk.  We may\nneed some gtk selection guru to explain things.\n\n* 'fixes' of git://git.hohndel.org/subsurface:\n  Another selection fix\n  More fiddling with the selection Merge branch 'misc-fixes' of git://github.com/DataBeaver/subsurface\n\nPull miscellaneous fixes, mostly UI stuff from Mikko Rasa.\n\nBoth this and the pull from Pierre-Yves Chibon created a \"Save As\" menu\nentry and logic.  As a result, there were a fair number of conflicts,\nbut I tried to make the end result somewhat reasonable.  I might have\nmissed some semantic conflict, though.\n\nSeries-acked-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\n\n* 'misc-fixes' of git://github.com/DataBeaver/subsurface:\n  Add a separate \"Save as\" entry to the menu\n  Changes to menu icons\n  Improved depth info for dives without samples\n  Divide the panes evenly in view_three Merge branch 'change_quit2' of http://ambre.pingoured.fr/cgit/subsurface\n\nPull patches to change behavior on exit from Pierre-Yves Chibon.\n\nPierry-Yves explains:\n \"When someone opens a file, change something in it and try to quit, the\n  program asked whether the data should be saved.\n\n  If 'Ok' then it shows the save-window and the user can choose to save\n  the file or rename it.\n\n  My habits in such case would be that since I opened a specific file, I\n  want to save to that specific file, therefore, when I press 'Ok', I\n  want it to save automatically to the file I opened.\n\n  So I have been working on changes that do:\n   - When a file has been opened by the user, save to this same file if\n     the user is 'Ok' while closing.\n   - Add a 'Cancel' option to the pop-up window that offers to save the\n     file while closing.\n   - Add a 'Save As' entry in the file menu.\"\n\n* 'change_quit2' of http://ambre.pingoured.fr/cgit/subsurface:\n  Add a 'Save As' entry in the menu.\n  Allow to cancel while trying to quit and the data was changed.\n  When the file has been opened rely on it to save. multi-dive editing: don't change fields that weren't changed for the master dive\n\nCommit 2f773b97e042 (\"multi-dive editing: don't change already set data\nfor other dives\") didn't get the multi-dive editing quite right: even if\none of the dives in the list of changed dives has an empty field, we\nshould *not* fill it with the edit data unless that edit data was\nactually changed.\n\nSo compare the new data with the original master data, and if they\nmatch, do nothing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'tree2' of git://git.hohndel.org/subsurface\n\nPull selection tracking fixes from Dirk Hohndel:\n \"I just gave up on gtk tracking our selection.  Way too much pain.  The\n  implementation below has seen some testing with the debugging code\n  enabled and seems to work - but it needs more banging onto it, I'm\n  sure.\n\n  Ideally I'd like to leave the debug code in, ask people on the mailing\n  list to play with it and report any inconsistencies.  After that I'll\n  be happy to remove it again.\"\n\n* 'tree2' of git://git.hohndel.org/subsurface:\n  Stop relying on gtk to track which dives are selected multi-dive editing: don't change already set data for other dives\n\nWhen editing multiple dives at the same time, don't change fields that\nhave already been set for a dive, unless the old field contents match\nthe currently selected (\"master\") dive.\n\nSo when you edit multiple dives, you can set the dive master or buddy\n(or suit etc) for all of them in one go, but if one of them already has\nthat field set, it won't be modified just because you set the other\nones.\n\nAcked-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid SIGSEGV when editing multiple dives\n\nThe multi-dive editing is broken if you right-click on the dive\ntext-fields (instead of the divelist).  This just avoids the SIGSEGV, it\ndoesn't really fix the editing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'tree2' of git://git.hohndel.org/subsurface\n\nPull dive-trip grouping from Dirk Hohndel:\n \"This turned into an updated pull request for the tree2 branch where I\n  implemented the date based grouping - but is actually a very different\n  topic: this adds the ability to edit multiple dives (and fixes some\n  issues with the dive editing overall).  The reason for that is that it\n  reuses some of the infrastructure that I implemented in the tree2\n  branch for tracking the selected dives.  More details in the commit\n  messages.\"\n\n* 'tree2' of git://git.hohndel.org/subsurface:\n  Switch from date based to dive trip based grouping\n  Redo dive editing\n  Fix selecting and unselecting summary items\n  Apply sort functions to the correct model, don't select summary entries\n  Maintain selected rows when switching between list model and tree model\n  Create duplicate list model so sorting by columns works again\n  Improve tree model implementation\n  Allow date based grouping Merge branch 'suit' of git://git.hohndel.org/subsurface\n\nPull exposure suit tracking from Dirk Hohndel.\n\n* 'suit' of git://git.hohndel.org/subsurface:\n  Add exposure protection tracking Update for libdivecomputer pkg-config include file changes\n\nSubsurface doesn't compile on OS X any more, because libdivecomputer\nchanged the way the header inclusion works: the include path from\npkg-config no longer includes the final \"libdivecomputer\" component, and\ninstead of doing\n\n  #include <header.h>\n\nfor libdivecomputer headers, we're now supposed to do\n\n  #include <libdivecomputer/header.h>\n\ninstead. Which is cleaner anyway.\n\nThe reason this only bit us on OS X is that I never trusted pkg-config\nthat much for non-system libraries on Linux (maybe it works, maybe it\ndoesn't, I've seen it go both ways), so on Linux we just used our own\nversion of the include path, and thus weren't affected by the\nlibdivecomputer config change.\n\nClean up the includes while at it - we no longer need (or want) the\ndevice-specific header files, since we just use the generic functions.\n\nReported-by: Grischa Toedt <toedt@embl.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix a couple of possible divide-by-zero conditions in statistics\n\nSeveral people reported the average time problem, but there's another\none lurking there too: if the dive duration is zero, you get bogus\naverage depth information too (but because that one was a floating point\ndivide, and by default they are unsignalling on x86, it didn't crash, it\njust resulted in bogus results).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the 'Add Dive' dialog at least slightly less butt-ugly\n\nI still suspect that using spinbuttons for the time handling is the\nwrong way, and I'm a bit surprised the Calendar widget doesn't have a\nmode where you can see/set the time too.\n\nBut this makes things at least minimally prettier, and initializes the\ntime entries to the current time (which is obviously not what anybody\nreally wants, but looks a lot better than defaulting to \"midnight\" or\nsome other random time that *also* won't be what anybody actually\nwants).\n\nI think this might be something we can live with, although I hope\nsomebody with good taste comes along and say \"don't use spinbuttons, do\nthis: xyzzy\" and makes things look better yet.\n\nAlso, I have this suspicion that I should put the time/depth/duration\nstuff to the right of the calendar.  Most displays are wider than they\nare tall, so tall and skinny dialogs are bad especially if you have\nlimited vertical pixels.  I still have flashbacks to my netbook-using\ndays, hating applictions that did that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make it possible to do \"Add Dive\" from just the main dive menu\n\nNo need for right-clicks.  It's inconvenient on lots of laptops etc, so\nallow just using the Dive menu as an alternative.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add depth entry to new dive edit dialog\n\nChrist, if you look up \"Ugly dialog\" on Wikipedia, I think it has a\npicture of this \"New dive\" thing.  Or it should have.\n\nBut it kind of works.  Although with only a \"max depth\" entry, you can't\ncurrently set average depths etc, so SAC-rates etc cannot be calculated\nfor these kinds of dives.\n\nAnd the dive numbering is wrong.  We do auto-number new dives that get\nadded at the end, but we do it as we add them, so when you *edit* the\ndive information (before it has been added) the dive number shows up as\n\"#0\".\n\nSo there's certainly room for improvement here.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rough \"Add new dive\" infrastructure in the divelist\n\nDo a right-click to get a menu with the \"Add dive\" entry.  Should do\ndelete too, but that's for later.\n\nWhat's also apparently for later is to make this *useful*.  It's the\nbutt-ugliest time entry field ever, and there's no way to set depth for\nthe dive either.  So this is more of a RFC than anything truly useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update to new sane libdivecomputer interfaces\n\nThis does mean that you have to build subsurface against a new version\nof libdivecomputer, and that version is likely going to have various\nslightly incompatible changes.  But the new interfaces allow for easily\nadding new supported dive computers without subsurface having to be\nupdated for each new vendor and model, so some slight pain is definitely\nworth it this time.\n\nI'm not even going to try to have some backwards-compatible version\nhere, the libdivecomputer interface changes are so extensive.  Native\nenumeration of devices is just the smallest part of it: the constants\nand types that libdivecomputer uses now have much nicer names that all\nstart with DC_ or dc_, so you don't get the kinds of name clashes we had\nwith \"gasmix_t\" etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix cochran CSV pressure data import\n\nThe cochran CSV pressure data is actually in units of '4 psi', not in\njust psi.  That seems to be the resolution cochran internally keeps\nthings in, and unlike the depth reading there's no conversion to\nstandard units in the export (for depth, the quarter-foot depth\nresolution is converted to tenths of feet when exporting).\n\nYeah, none of this makes any sense to me either, but I knew it was the\ncase.  I had just forgotten that factor-of-four when I did the importer.\n\nWith this fix, I get the same subsurface data (modulo some rounding\ndifferences particularly for temperature) whether I go through David\nMcNett's UDDF converter, or just import the CSV data directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: add support for importing the exported CSV files\n\nThe Cochran Analyst software can export the basic dive information as\nCSV files (comma-separated values).\n\nIndividual CSV files contain just one particular type of information:\ndepth, temperature or cylinder pressure, which is rather inconvenient.\nHowever, the way subsurface works, you can just import these CSV files\nall as individual dives, and then subsurface will automatically merge\nthe dives with the same date and time - and in the process it will also\nmerge all the samples.\n\nSo it turns out that we don't really need any special handling.  You can\nliterally just do\n\n     subsurface <list-your-cochran-export-files-here>\n\nand you're all done.\n\nOf course, the CSV files really *are* pretty useless, since they don't\ncontain all the nice information about where the dive took place etc.\nSo you literally just get the dive profile.  But that's better than\ngetting nothing at all.\n\nI'd love to actually be able to parse the real native Cochran Analyst\nsoftware CAN files, but in the meantime this is at least a starting\npoint.  And if I'm ever able to parse those nasty CAN-files, this makes\ncomparisons with the exports much easier.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a few more conversion helper functions to dive.h\n\nConvert feet to mm, psi to mbar, and F to mkelvin.  We do this elsewhere\ntoo, but I'm going to need it for the Cochran CSV files, so let's do the\nhelpers now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update cochran depth precision: it's in 3-inch increments\n\nThe Cochran CSV depth exports are indeed in tenths of feet, but the\ndecimal is always 0, 3, 5 or 8.  Where the 3 and 8 are obviously 0.25\nand 0.75 rounded up to one decimal place.\n\nSo Cochran does seem to be very much about imperial units, with depth\nand cylinder pressure scaled by four (depth in quarter-foot increments,\npressume in 4-psi increments)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more cochran data parsing code/comments\n\nThe code is pretty useless, the comments perhaps equally so.  I'm trying\nto figure out what the data pattern is for the cochran CAN files.  There\ndefinitely *is* a pattern, but it actually seems to be different for the\nfiles of different people - and it's not obvious in any case.\n\nThere probably are multiple versions of the format, and there might be\nthings like \"David has a high-pressure sensor, and Alex does not\" going\non too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add tankpressure parsing for UDDF files\n\nDavid McNett sent me some example Cochran CAN file data, along with his\nUDDF exports of same.  I still have absolutely no idea how to decode the\nCAN files (although the subsurface decrypting code seems to correctly\ndecrypt the data, and I see binary patters rather than just noise), but\nat least I can make sure we parse the UDDF portion better.\n\nSee also\n\n  https://github.com/nugget/cochran2uddf\n\nfor David's tool to convert the Cochran CSV exports into UDDF.\n\nData-source: David McNett <nugget@macnugget.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Allow overriding the default xslt path\n\nIt's very annoying to have to do \"make install\" to test a new xslt file,\njust because the default xslt path has the standard install path as the\nfirst entry.\n\nAt the same time, we do want to default to just using the standard\ninstall location first.\n\nSo to allow both testing, and having a nice sane default, just add\nsupport for a SUBSURFACE_XSLT_PATH environment variable that overrides\nthe default one if it exists.\n\nSo then you can just do\n\n   SUBSURFACE_XSLT_PATH=xslt ./subsurface\n\nto run subsurface from inside the git tree itself, using the current\nfiles in the git xslt subdirectory.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto SDE conversion: add boat name to notes if it exists\n\nThis is, I think, the last piece of relevant information that I can find\nin Szymon's SDE file.\n\nWhich is not to mean that we get all the conversions right, or that we\nhandle the more complex cases (still no multi-cylinder import, for\nexample). But it should be much better than it used to be.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Suunto SDE updates, take 178: add weight and visibility info\n\nThis converts the weight information into subsurface weights, and also\nadds visibility info (if it exists) into the notes for the dive.\n\nMore fall-out from me looking at the nasty suunto xml files, now that I\nhave a few that actually have some info that isn't just from the\ncomputer download.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix more Suunto SDM xml conversion problems\n\nLooking at the XML of the two dives Szymon Kosecki sent out to the\nsubsurface list, I notice that our cylinder size conversion was wrong.\nIt looks like CYLINDERUNITS is what determines whether the cylinder size\nis in metric (0) or imperial (1) units.\n\nOf course, if you gave a cylinder size in cuft and didn't give a working\npressure, subsurface will just ignore the size as the random crap it is.\nWe *could* default to a working pressure of 3000 psi, of course.\n\nThis also picks up the CYLINDERDESCRIPTION value, although neither of\nSzymon's dives actually had any description.\n\nI need more SDE xml files to figure out how multi-cylinder dives look\netc, but I think this gets most *simple* SDE files converted almost\ncorrectly now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix dive notes import from Suundo SDM\n\nThe xslt translation didn't add the <notes> tag for the notes, so while\nit did select the notes from the SDM file, that never made it into the\nsubsurface notes.\n\nAlso added weather info to the notes, mainly as an example.\n\nThere are probably other things we could do, but this fixes at least the\ntrivial test-case from Szymon Kosecki.\n\nReported-by: Szymon Kosecki <skosecki@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divecomputer importing: show the date of the currently importing dive\n\nI'm hoping most other dive computers are quicker to import from than the\nSuunto I have, but mine can take minutes to import all the dives.  Sure,\nwe have that nice progress bar, so it shows that it's doing something,\nbut it's not really showing *what* it is doing.\n\nSo instead of showing just \"Parsing dive X\", let's show the date of the\ndive.  That way, when it takes two minutes to import all the dives, at\nleast you can see \"oh, it's going back to the dives of last year\" and it\nthen feels like you have some good reason for the delay.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive import text updates in the progress bar\n\nInstead of using printf() to print the string updates (\"Parsing sample\ndata\" etc), introduce a function to show those strings in the graphical\nprogress bar itself.\n\nSubsurface hasn't been a text-mode application in a long time ;)\n\nThis partially fixes the second todo entry from commit b0ba22a06879\n(\"Show dive import error messages in the import dialog\") and generally\nmakes for a more helpful import - at least for the largely error-free\ncases.\n\nSadly, the messages that really come from within libdivecomputer itself\n(like \"suunto_vyper2.c:193: Failed to receive the answer.\") when things\ngo really wrong are not caught.  libdivecomputer does have a notion of a\nlogfile (set with \"message_set_logfile()\"), but that ends up being\nreally inconvenient.\n\nMaybe we could use some pipe setup or something. Oh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Change the Dive computer import button from \"Ok\" to \"Retry\" on error\n\nThis was a todo item in commit b0ba22a06879 (\"Show dive import error\nmessages in the import dialog\") which made the import dialog able to\nretry the import on errors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the \"Import\" function from the File menu to the Log menu\n\nSure, you can import a file too, but it really makes more sense to have\nthe actions related to importing new logs under \"Log\", I think.  I don't\nthink of it as a file operation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive import error messages in the import dialog\n\n.. not in the main window.  And leave the import dialog open, so that\nyou can either try doing it again, or cancel.  This makes it much easier\nto re-try a failed dive import, and actually makes the failure more\nobvious too.\n\nTodo:\n\n - make the \"Ok\" button change to \"Retry\" when an error happens\n\n - try to see if we can catch the actual status update messages from\n   libdivecomputer and show them too in the import dialog.  Right now\n   they are printed out to stderr by the library.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remember the default dive computer setting\n\nAlways having to re-select the same dive computer got really annoying\nwhen I had trouble importing the dives.  Let's not force the user to do\nthat, since we could just remember the last dive computer used, and\ndefault to that one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't close config file when changing preferences\n\nOn Linux and MacOS the subsurface_close_conf() doesn't really close the\nconfig file (it flushes writes on MacOS), but on Windows it does\nactually close the registry hkey.\n\nWhich is bad, if you change the settings multiple times - we assume that\nthe config file is open the whole time.\n\nSo add a \"subsurface_flush_conf()\" function, and call *that* when\nchanging configuration parameters.  And call the close function only at\nthe very end.\n\nAlternatively, maybe we should just open the config file separately\nevery time. I don't much care, maybe somebody else does.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make subsurface compile with current libdivecomputer git tree\n\nlibdivecomputer has the absolute worst interfaces to any library *ever*,\nand randomly changes those crappy interfaces when it adds support for\nnew dive computers.\n\nIt would have been much better if the interface was just a \"open this\ndevice\" with a device descriptor structure pointer, so that when Jef\nadds support for new devices, the old descriptors still stay around and\nwork the same way - there's just a new descriptor structure that you\n*can* use if you want.  Along with a data structure to name the devices\nand their descriptors, this would actually mean that users could just\nsupport pretty much any random device that LD supports.\n\nBut no, that's not how libdivecomputer works.  It has random enums and\ncrazy different ad-hoc interfaces for different dive computers.  Or,\nlike in this case, crazy different ad-hoc interfaces for the *same*old*\ndive computer.\n\nRight now, for example, the support for the new Heinrichs Weikamp \"Frog\"\ncomputer added a flag to the interface for the old OSTC_2 support.\nBreaking any libdivecomputer users even if you didn't need Frog support.\n\nAnd is there a version number in the header files to check for? Yes,\nthere's a version number.  But no, it's not useful, since it doesn't\nactually change with the interface changes.  This time, Jef actually did\nchange the version number (from 0.1.0 to 0.2.0) as part of new\ndevelopment version, but there's no reason to believe that it will\nchange in the future  as the interfaces change - it never has before.\n\nSo it's actually safer - and easier to understand - to check for the\nexistence of the new header file inclusion mechanism.  A new version of\nlibdivecomputer that supports the HW Frog computer will include the\n\"ostc_frog.h\" header file when you include the libdivecomputer device.h\nfile, and that will result in HW_FROG_H being defined.\n\nSo we can check whether libdivecomputer has the new interface and\nsupports the Frog by doing an \"#ifdef HW_FROG_H\" hack. Ugh.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make sure to update dive info when it is edited\n\nWe used to not properly update the dive info until we switched to\nanother dive when we edited it.  This should fix it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Renumber dives when deleting a dive\n\n... but only do it if the numbering of subsequent dives was consecutive\nto begin with.\n\nNote that we do accept unnumbered dives (and will stop the sequence\ncheck if we find one), but in order to renumber dives on delete, we\nrequire that starting with the dive we delete, the subsequent numbered\ndives have to be a nice incrementing series.  If that is the case, then\nwe fix up that numbering as we delete the dive.\n\nPut another way: if the dive numbering was an incrementing sequence\nbefore the delete, then it will be a sane incrementing sequence after it\ntoo.  But if you had missing dives before the delete, we will turn the\ndelete into just another missing dive.\n\nThe basic rule is that we never renumber any dives unless that\nrenumbering is \"obviously correct\".  It's better to leave old numbers\nas-is (and expect that the user is going to do an explicit re-numbering\noperation) than it is to change dive numbers in a sequence that we don't\nunderstand.\n\nI do suspect that we should possibly check the dive number \"backwards\"\ntoo, but this doesn't do that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the ugliest 'delete dive' model ever\n\nThis interface works the same way the \"edit dive\" menu item does: it's a\ntext entry meny item on the dive text entries (ie buddy/divemaster/notes\nsections).  Except you pick the \"Delete\" entry rather than the \"Edit\"\nentry.\n\nIt kind of works, but it really is a pretty horrible interface.  I'll\nneed to add a top-level dive menu entry for just deleting all selected\ndives instead.  And it would be good to be able to get a drop-down menu\nfrom the divelist instead of having to do it from the dive text entries,\nwhich is just insane.\n\nBut that requires gtk work.  I'm not quite ready to get back into that.\nThus the \"exact same insane interface as the explicit 'Edit' mode\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix reference tank information for LP steel tanks.\n\nCommit f9bb3f79106b (\"Clean up reference tank information table\") had\ncleaned up the tank info list so that you could sanely do tanks in\nliters and with a working pressure in bar.\n\nBut the LP steel cylinders had somehow missed out on the \".psi =\" part\nof the equation, and as a result, what was supposed to be their working\npressure instead ended up being interpreted as their size in\nmilli-liters.\n\nOops.\n\nFix that, and also make the standard tank info filling code actually\nverify the sanity of the reference tank table, so that if this happens\nagain, it will complain loudly instead of using nonsensical values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'weight' of git://subsurface.hohndel.org/subsurface\n\nPull weight management from Dirk Hohndel:\n \"This is the fifth or sixth version of this code, I'm begining to lose\n  track.  I still struggle with the balance between code duplication and\n  unnecessary indirectness and complexity.  Maybe I'm just not finding\n  the right level of abstraction.  Maybe I'm just trying too hard.\n\n  The code here is reasonably well tested.  Works for me :-)\n\n  It can import DivingLog xml files with weight systems and correctly\n  parses those.  It obviously can read and write weight systems in its\n  own file format.  It adds a KG/lbs unit default (and correctly stores\n  that).\n\n  The thing I still worry about is the code in equipment.c.  You'll see\n  that I tried to abstract things in a way that weight systems and\n  cylinders share quite a bit of code - but there's more very similar\n  code that isn't shared as my attempts to do so turned into ugly and\n  hard to read code.  It always felt like trying to write C++ in C...\"\n\n* 'weight' of git://subsurface.hohndel.org/subsurface:\n  Add weight system tracking\n\nFix up some trivial conflicts due to various renaming of globals and\nsimplification in function interfaces. Cochran: fix up dive data descrambling\n\nThis seems to do the dive data descrambling right for both files I have\naccess to.  Except it uses a hardcoded (different) offset for the two.\nI have yet to figure out how to automatically detect the offset itself\nproperly, so you have to compile for the right file.\n\nI'll figure it out, but I'm committing this as a reasonable point in the\nprocess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up Cochran dive header decoding offset\n\nIt turns out the odd \"different CAN files have different header offsets\"\ncame from the fact that the decode block was different lengths, and I\nhad not picked the correct place to start - and instead had found two\ndifferent places that were at different offsets due to the decode block\nlength differences.\n\nThis fixes that up, and it looks like the dive header is correctly\ndescrambled (but what the data *means* is unclear, although there is now\nan ASCII date and time visible, so at least one part of it is pretty\nobvious).\n\nThe actual dive data unscrambling is still different for the two\ntest-files I have to play with, I do not know why.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: do a partial header de-scramble\n\nThis descrambles at least parts of the header data.  Some of it has the\nsame pattern of data 4kB apart, it may be that there is a dive hiding in\nthere too (ie what I currently call a \"header\" may in fact be a header\n_plus_ a dive).\n\nBut the 4kB thing may well be an artifact of the crazy scrambling code\nitself.  Who knows what kind of chunking the Cochran Analyst\n\"encryption\" uses.\n\nAs with the dive data, there seems to be some offset differences between\ndifferent CAN files.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cochran: do the full de-scramble for one case\n\nSo this descrambles all the dives in *one* of my cochran test files.  I\nstill don't know what the dive data *means*, but it's not a random\njumble of bytes any more: there are very clear patterns.\n\nHowever, the magic offsets that work for that particular CAN file are\nnot generic, because they don't work for another.  So there is some\nmagic dynamic decoding that I don't know about.  There is probably more\ndecode information in the initial decode block, over and beyond just the\nscrambling bytes.\n\n(The scrambling array is 234 bytes starting at 0x40001, but the first\nactual *dive* data starts at 0x45e03, so there's tons of unknown stuff\nin the file even outside the dives themselves)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cochran debug output a bit easier to use directly\n\nJust do the hex-dump in the program, and print all the results to\nstandard output.  Avoid the need to do 'od' by hand etc to see what\nhappens when you play with the decoder.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some initial cochran CAN file parsing\n\nIt's broken, and currently only writes out a debug output file per dive.\nI'm not sure I'll ever really be able to decode the mess that is the\nCochran ANalyst stuff, but I have a few test files, along with separate\ndepth info from a couple of the dives in question, so in case this ever\nworks I can at least validate it to some degree.\n\nThe file format is definitely very intentionally obscured, though.\nAnnoying.  It's not like the Cochran software is actually all that good\n(it's really quite a horribly nasty Windows-only app, I'm told).\n\nCochran Analyst is very much not the reason why people would buy those\ncomputers.  So Cochran making their computers harder to use with other\nsoftware is just stupid.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Import: always open and read the file before checking the filename extension\n\nMost of the parsers will want the content in memory, so keep them\nsimple.  The fact that the Suunto parser uses \"libzip\" that has to\nre-open the file is annoying and causes us to re-open the file etc.\n\nBut it's the odd man out, so don't design the \"open_by_filename()\"\nfunction around it.  Pretty much everybody else will want to avoid\nhaving to cook up their own IO routines.\n\nAlso, when reading the file, NUL-terminate the buffer.  This allows us\nto just treat text files as large strings if we want to, and doesn't\nmatter for binary files (we still pass in the length explicitly).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix typo ('suundo' instead of 'suunto')\n\nI apparently was so congested that it affected my typing too when I\nwrote that, and then copy-paste meant that the use and declaration\nmatched despite the misspelling.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add \"native\" Suunto SDE zip file reading\n\nYou need to have libzip-devel installed, and pkg-config needs to know about it\nfor the build to pick up on it.\n\nOn at least Fedora, a simple \"yum install libzip-devel\" will make things\nwork, although you may need to force a rebuild of subsurface too (the\n\"file.o\" file in particular - the Makefile doesn't track system\ndependencies).\n\nThen, you can just do\n\n   subsurface my-dives.SDE\n\nto read the data directly from the SDE file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up file reading from 'parse-xml.c' into 'file.c'\n\nWe're going to eventually import non-xml files too, so let's begin\nsplitting the logic up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'info-split' of git://git.hohndel.org/subsurface\n\n* 'info-split' of git://git.hohndel.org/subsurface:\n  Add statistics for longest, shortest, and shallowest dive\n  Create separate single dive and total stats pages\n  Separate out single dive statistics and total statistics First try at converting user-manual to AsciiDoc\n\nYou can do \"make doc\" in the main directory to create the html version,\nand if you want to play around with it, do \"make show\" in the\nDocumentation subdirectory to start firefox on the end result.\n\nIt's by no means perfect, but it gives somewhat reasonable results, and\nthis is enough initial work for people to play around with, I think.\n\nNOTE! You need \"asciidoc\" installed to do this: it's a python program,\nso it should be pretty easy even on non-Linux platforms.  And on Linux,\nmost distributions package it, so you just have to do something like\n\n\tyum install asciidoc\n\nto get it (replace with apt-get/zypper/whatever).\n\nAsciidoc can generate other output too (man-pages, LaTeX, etc), maybe\npeople want to play with that part too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'mac' of git://git.hohndel.org/subsurface\n\n* 'mac' of git://git.hohndel.org/subsurface:\n  Turn subsurface into a real Mac application Move the gasmix cleanups from XML parsing to the generic dive fixup stage\n\nRight now we do certain cylinder info operations only when importing\nfrom an XML file, which is wrong.  In particular, we do the \"is the\ngasmix air\" or \"what is the standard cylinder name\" only at XML read\ntime, which means that if you import a dive directly from the dive\ncomputer, it won't have the air sanitization or the proper default\ncylinder names.\n\nOf course, most dive computers don't actually save enough cylinder\ninformation for us to do the cylinder name lookup anyway, but some do.\nAnd all Nitrox-capable dive computers do have that O2 percentage that\nneeds cleanup too.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branches 'windows', 'docs' and 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'windows' of git://git.hohndel.org/subsurface:\n  Fixes for the Windows installer\n\n* 'docs' of git://git.hohndel.org/subsurface:\n  Version 0.0.7 of user manual\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Remove unused return value Merge branch 'docs' of git://git.hohndel.org/subsurface\n\n* 'docs' of git://git.hohndel.org/subsurface:\n  Version 0.0.6 of user manual parse-xml: read the file into memory separately\n\nUsing xmlParseFile() was simple, but I'm planning on extending the file\nparsing past just XML, since we want to be able to import other formats\ntoo.  And quite frankly, that means that we'll want to read the file\ninto memory to look at it before we start parsing it.\n\nWe could decide do it by file extensions too, and I'll look at that\napproach as well, but regardless of how we do things it's almost\ncertainly a good idea to do the file access in one place.  The XML\nparsing might as well happen from a memory buffer instead anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use an ellipsis for Nitrox O2% ranges\n\nThe plain dash may look a bit too much like a trimix specification.  Is\nthe ellipsis better? Maybe.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Return is not a function Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Improve Makefile for MacOS\n  Add reasonable default device names for divecomputer import\n  More intuitive label for \"not saving\" when exiting Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Small improvement to plot info debugging code\n  Add three more trimix test dives\n  Make test dive 15 a bit more useful\n  Two test dives I added a couple of months ago\n  Add libxslt to Windows packaging file Pack the star rating on a line of its own\n\nPacking it next to the divemaster/buddy information may work great on a\nbig screen with lots of pixes, but it makes the minimum window size way\nwide for a small screen.  So don't do it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divelist: show/sort nitrox dive oxygen percentage as a range\n\nIf you are diving multiple nitrox cylinders, we now show them as a range\ninstead of just the max.  We'll still sort by max O2 (and for the same\nmax, by min O2).\n\nSo now with trimix dives, we'll show the bottom gas (we assume that\n\"highest He percentage\" is that bottom gas), for nitrox dives we'll show\nthe range of Oxygen percentage, and for all-air dives we'll show just\n\"air\".\n\nFor simple nitrox dives (only a single mix), we'll obviously show just\nthat single percentage.  This should hopefully conclude the whole \"show\nmultiple cylinders in dive list\" mess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive gas record the single highest mix\n\n.. using the regular sorting rules: sort by Helium content first, Oxygen\ncontent second.  Air always sorts last (even behind the theoretical\nhypoxic Nitrox that nobody sane would use).\n\nThis is what Don Kinney implies would be the natural thing for a trimix\ndiver.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add capability of custom sorts to divelist columns\n\n.. and use this for the nitrox column, which can now be more complex\nthan just a single number.\n\nThe rule for the \"nitrox\" column is now:\n\n - we look up the highest Oxygen and Helium mix for the dive\n\n   (Note: we look them up independently, so if you have a EAN50 deco\n   bottle, and a 20% Helium low-oxygen bottle for the deep portion, then\n   we'll consider the dive to be a \"50% Oxygen, 20% Helium\" dive, even\n   though you obviously never used that combination at the same time)\n\n - we sort by Helium first, Oxygen second.  So a dive with a 10% Helium\n   mix is considered to be \"stronger\" than a 50% Nitrox mix.\n\n - If Helium is non-zero, we show \"O2/He\", otherwise we show just \"O2\"\n   (or \"air\").  So \"21/20\" means \"21% oxygen, 20% Helium\", while \"40\"\n   means \"Ean 40\".\n\n - I got rid of the decimals.  We save them, and you can see them in the\n   dive equipment details, but for the dive list we just use rounded\n   percentages.\n\nLet's see how many bugs I introduced.  I don't actually have any trimix\ndives, but I edited a few for (very limited) testing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make sure to update divelist O2 information after editing\n\nThe divelist airmix display is kind of broken: it only looks at the\nfirst cylinder, and it only looks at Oxygen content, not Helium.\n\nBut at least we can make sure to update it when somebody edits the\ncylinder information, instead of leaving it extra broken.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the \"Common European Cylinders\" as per Henrik\n\nThis is Henrik's list of common metric sized cylinders, although my\nexperience differs from this one.  In Cyprus, I was diving double 12L\ncylinders, but they were 200 bar, not the 232 bar ones Henrik has on the\nlist.\n\nAlso, I really think we should just have a checkbox for \"double\" instead\nof naming them explicitly like this.  Henrik does have the 12L 200 bar\nones in his singles list.\n\nBut as a stop-gap, I'm just taking the values from Henrik's patch, but\nconverted to the new cleaned-up reference tank model setup.\n\nBased-on-patch-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up reference tank information table\n\nThis makes the reference tanks (\"struct tank_info\") use a saner format\nwhich specifies explicitly whether the size is in ml or cubic feet, and\nwhether the pressure is in psi or bar.\n\nSo instead of having magic rules (\"size is in cuft if < 1000, otherwise\nmliter\"), just set the size explicitly:\n\n\t{ \"11.1 l\", .ml = 11100 },\n\t{ \"AL80\",  .cuft =  80, .psi = 3000 },\n\nand then the code can just convert to standard measurements without any\nodd rules, and the initialization table becomes self-explanatory too.\n\nThis is in preparation for doing the metric tanks with pressure: Henrik\nAronsen sent a really ugly patch using the previous setup, I just\ncouldn't stand the additional hackery.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the cylinder table columns unsortable\n\nThey were never intended to be sortable, but using common code with the\ndive list picked up that \"sort by index\" thing by mistake.\n\nIf we really want to be able to sort cylinders by O2 percentage (which\nreally doesn't seem to make much sense, considering that you usually\nhave just one or two cylinders) we will need to also handle the case of\nediting the (differently sorted) cylinder table.  Which we don't do now.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Allow editing of Helium values in cylinder info\n\nHenrik Aronsen points out that we've not made it possible to edit the He\npercentages for trimix diving.  It's easy enough to do, I just didn't\nhave any dives that needed it myself.  So here goes.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use common helper function for the \"no cylinder info\" case\n\nMiika fixed the statistics code that didn't properly check for the \"no\ncylinder info\" case - this cleans it up and just uses the helper\nfunction in equipment.c.\n\nRename the helper to be slightly better named while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Subsurface 1.2\n\nWith the whole UI change (three-paned window and different look with new\ncolors), let's just make a new release, as Dirk points out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'stars' of git://git.hohndel.org/subsurface\n\n* 'stars' of git://git.hohndel.org/subsurface:\n  Fix some issues with star rating code\n  Add typical 0 to 5 star rating for dives\n\nStill not great editing, but other than that it looks good. Make view action shortcuts be ctrl-[1-4] instead of Fn keys\n\nSuggested by Henrik Aronsen, and seems much more natural.  Especially\nwith lots of keyboards having function keys oddly mapped.\n\nSuggested-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add shorthand actions for showing just one of the panes\n\nCurrently just tied to F1-F4 (for divelist, profile, info, and \"all\nthree\" respectively), which is just crazy.  But using \"ctrl-P\" for\n\"Profile\" isn't sane either, that's the standard printer keyboard\nshortcut.  So what would be good keyboard shortcuts for these things?\n\nI also wonder how I can get gtk to shut up about the fact that a pane\nbecomes too small for the contents of that pane? We very much want to do\nthat, and it's very intentional.  Gtk does the right thing apart from\nthe whining (and apart from the visually ugly part of a widget that\ndoesn't fit, but making it pretty doesn't really seem possible).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'grid-to-back' of git://github.com/henrik242/subsurface\n\n* 'grid-to-back' of git://github.com/henrik242/subsurface:\n  Move depth/time grid back Merge git://github.com/JoachimSchipper/subsurface\n\n* git://github.com/JoachimSchipper/subsurface:\n  README spelling, capitalization Merge branch 'windows-fixes' of git://git.hohndel.org/subsurface\n\n* 'windows-fixes' of git://git.hohndel.org/subsurface:\n  fix mingw-win32 specific warnings in libdivecomputer.c\n  Fix mingw-make.sh to find correct xslt-config Merge branch 'windows-fixes' of git://git.hohndel.org/subsurface\n\n* 'windows-fixes' of git://git.hohndel.org/subsurface:\n  Add more typecasts for Windows`\n  Fix the Windows preferences support\n  Update the Windows installer creation script Remove stale notebook drag-and-drop support\n\nIt doesn't make sense with the new three-pane layout, and I don't think\nwe're reviving it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'mac-fixes' of git://git.hohndel.org/subsurface\n\n* 'mac-fixes' of git://git.hohndel.org/subsurface:\n  Split reading/writing preferences into OS specific files Merge tag 'regmap-v3.15-nodev' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap\n\nPull regmap fix from Mark Brown:\n \"regmap: Fix for nodev mode\n\n  Add mising braces so that the nodev mode actually works (which was a\n  bit of an oversight)\"\n\nTesting schmesting.  We don't need not steenking testing.  We have\ndeadlines to beat, and new code to write.\n\n* tag 'regmap-v3.15-nodev' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap:\n  regmap: adds missing braces in regmap_init() Merge tag 'pm+acpi-3.15-rc1-3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull more ACPI and power management fixes and updates from Rafael Wysocki:\n \"This is PM and ACPI material that has emerged over the last two weeks\n  and one fix for a CPU hotplug regression introduced by the recent CPU\n  hotplug notifiers registration series.\n\n  Included are intel_idle and turbostat updates from Len Brown (these\n  have been in linux-next for quite some time), a new cpufreq driver for\n  powernv (that might spend some more time in linux-next, but BenH was\n  asking me so nicely to push it for 3.15 that I couldn't resist), some\n  cpufreq fixes and cleanups (including fixes for some silly breakage in\n  a couple of cpufreq drivers introduced during the 3.14 cycle),\n  assorted ACPI cleanups, wakeup framework documentation fixes, a new\n  sysfs attribute for cpuidle and a new command line argument for power\n  domains diagnostics.\n\n  Specifics:\n\n   - Fix for a recently introduced CPU hotplug regression in ARM KVM\n     from Ming Lei.\n\n   - Fixes for breakage in the at32ap, loongson2_cpufreq, and unicore32\n     cpufreq drivers introduced during the 3.14 cycle (-stable material)\n     from Chen Gang and Viresh Kumar.\n\n   - New powernv cpufreq driver from Vaidyanathan Srinivasan, with bits\n     from Gautham R Shenoy and Srivatsa S Bhat.\n\n   - Exynos cpufreq driver fix preventing it from being included into\n     multiplatform builds that aren't supported by it from Sachin Kamat.\n\n   - cpufreq cleanups related to the usage of the driver_data field in\n     struct cpufreq_frequency_table from Viresh Kumar.\n\n   - cpufreq ppc driver cleanup from Sachin Kamat.\n\n   - Intel BayTrail support for intel_idle and ACPI idle from Len Brown.\n\n   - Intel CPU model 54 (Atom N2000 series) support for intel_idle from\n     Jan Kiszka.\n\n   - intel_idle fix for Intel Ivy Town residency targets from Len Brown.\n\n   - turbostat updates (Intel Broadwell support and output cleanups)\n     from Len Brown.\n\n   - New cpuidle sysfs attribute for exporting C-states' target\n     residency information to user space from Daniel Lezcano.\n\n   - New kernel command line argument to prevent power domains enabled\n     by the bootloader from being turned off even if they are not in use\n     (for diagnostics purposes) from Tushar Behera.\n\n   - Fixes for wakeup sysfs attributes documentation from Geert\n     Uytterhoeven.\n\n   - New ACPI video blacklist entry for ThinkPad Helix from Stephen\n     Chandler Paul.\n\n   - Assorted ACPI cleanups and a Kconfig help update from Jonghwan\n     Choi, Zhihui Zhang, Hanjun Guo\"\n\n* tag 'pm+acpi-3.15-rc1-3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (28 commits)\n  ACPI: Update the ACPI spec information in Kconfig\n  arm, kvm: fix double lock on cpu_add_remove_lock\n  cpuidle: sysfs: Export target residency information\n  cpufreq: ppc: Remove duplicate inclusion of fsl_soc.h\n  cpufreq: create another field .flags in cpufreq_frequency_table\n  cpufreq: use kzalloc() to allocate memory for cpufreq_frequency_table\n  cpufreq: don't print value of .driver_data from core\n  cpufreq: ia64: don't set .driver_data to index\n  cpufreq: powernv: Select CPUFreq related Kconfig options for powernv\n  cpufreq: powernv: Use cpufreq_frequency_table.driver_data to store pstate ids\n  cpufreq: powernv: cpufreq driver for powernv platform\n  cpufreq: at32ap: don't declare local variable as static\n  cpufreq: loongson2_cpufreq: don't declare local variable as static\n  cpufreq: unicore32: fix typo issue for 'clk'\n  cpufreq: exynos: Disable on multiplatform build\n  PM / wakeup: Correct presence vs. emptiness of wakeup_* attributes\n  PM / domains: Add pd_ignore_unused to keep power domains enabled\n  ACPI / dock: Drop dock_device_ids[] table\n  ACPI / video: Favor native backlight interface for ThinkPad Helix\n  ACPI / thermal: Fix wrong variable usage in debug statement\n  ... Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPullx86 core platform updates from Peter Anvin:\n \"This is the x86/platform branch with the objectionable IOSF patches\n  removed.\n\n  What is left is proper memory handling for Intel GPUs, and a change to\n  the Calgary IOMMU code which will be required to make kexec work\n  sanely on those platforms after some upcoming kexec changes\"\n\n* 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, calgary: Use 8M TCE table size by default\n  x86/gpu: Print the Intel graphics stolen memory range\n  x86/gpu: Add Intel graphics stolen memory quirk for gen2 platforms\n  x86/gpu: Add vfunc for Intel graphics stolen memory base address Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"This is a collection of minor fixes for x86, plus the IRET information\n  leak fix (forbid the use of 16-bit segments in 64-bit mode)\"\n\nNOTE! We may have to relax the \"forbid the use of 16-bit segments in\n64-bit mode\" part, since there may be people who still run and depend on\n16-bit Windows binaries under Wine.\n\nBut I'm taking this in the current unconditional form for now to see who\n(if anybody) screams bloody murder.  Maybe nobody cares.  And maybe\nwe'll have to update it with some kind of runtime enablement (like our\nvm.mmap_min_addr tunable that people who run dosemu/qemu/wine already\nneed to tweak).\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86-64, modify_ldt: Ban 16-bit segments on 64-bit kernels\n  efi: Pass correct file handle to efi_file_{read,close}\n  x86/efi: Correct EFI boot stub use of code32_start\n  x86/efi: Fix boot failure with EFI stub\n  x86/platform/hyperv: Handle VMBUS driver being a module\n  x86/apic: Reinstate error IRQ Pentium erratum 3AP workaround\n  x86, CMCI: Add proper detection of end of CMCI storms Merge branch 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull second set of ARM changes from Russell King:\n \"This is the remainder of the ARM changes for this merge window.\n  Included in this request are:\n\n   - fixes for kprobes for big-endian support\n   - fix tracing in soft_restart\n   - avoid phys address overflow in kdump code\n   - fix reporting of read-only pmd bits in kernel page table dump\n   - remove unnecessary (and possibly buggy) call to outer_flush_all()\n   - fix a three sparse warnings (missing header file for function\n     prototypes)\n   - fix pj4 crashing single zImage (thanks to arm-soc merging changes\n     which enables this with knowledge that the corresponding fix had\n     not even been submitted for my tree before the merge window opened)\n   - vfp macro cleanups\n   - dump register state on undefined instruction userspace faults when\n     debugging\"\n\n* 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  Dump the registers on undefined instruction userspace faults\n  ARM: 8018/1: Add {inc,dec}_preempt_count asm macros\n  ARM: 8017/1: Move asm macro get_thread_info to asm/assembler.h\n  ARM: 8016/1: Check cpu id in pj4_cp0_init.\n  ARM: 8015/1: Add cpu_is_pj4 to distinguish PJ4 because it has some differences with V7\n  ARM: add missing system_misc.h include to process.c\n  ARM: 8009/1: dcscb.c: remove call to outer_flush_all()\n  ARM: 8014/1: mm: fix reporting of read-only PMD bits\n  ARM: 8012/1: kdump: Avoid overflow when converting pfn to physaddr\n  ARM: 8010/1: avoid tracers in soft_restart\n  ARM: kprobes-test: Workaround GAS .align bug\n  ARM: kprobes-test: use <asm/opcodes.h> for Thumb instruction building\n  ARM: kprobes-test: use <asm/opcodes.h> for ARM instruction building\n  ARM: kprobes-test: use <asm/opcodes.h> for instruction accesses\n  ARM: probes: fix instruction fetch order with <asm/opcodes.h> Merge tag 'microblaze-3.15-rc1' of git://git.monstr.eu/linux-2.6-microblaze\n\nPull Microblaze updates from Michal Simek:\n - use asm-generic/io.h and fix intc/timer code\n - clean platform handling\n - enable some syscalls\n\n* tag 'microblaze-3.15-rc1' of git://git.monstr.eu/linux-2.6-microblaze:\n  microblaze: Use asm-generic/io.h\n  microblaze: Remove platform folder\n  microblaze: Remove generic platform\n  microblaze: Sort Kconfig options\n  microblaze: Move DTS file to common location at boot/dts folder\n  microblaze: Fix compilation failure because of release_thread\n  microblaze: Fix sparse warning because of missing cpu.h header\n  microblaze: Make timer driver endian aware\n  microblaze: Make intc driver endian aware\n  microblaze: Wire-up new system calls sched_setattr/getattr\n  microblaze: Wire-up preadv/pwritev in syscall table\n  microblaze: Enable pselect6 syscall\n  microblaze: Drop architecture-specific declaration of early_printk\n  microblaze: Rename global function heartbeat() Merge branch 'for-linus' of git://git.open-osd.org/linux-open-osd\n\nPull exofs updates from Boaz Harrosh:\n \"Trivial updates to exofs for 3.15-rc1\n\n  Just a few fixes sent by people\"\n\n* 'for-linus' of git://git.open-osd.org/linux-open-osd:\n  MAINTAINERS: Update email address for bhalevy\n  fs: Mark functions as static in exofs/ore_raid.c\n  fs: Mark function as static in exofs/super.c Merge branch 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86\n\nPull x86 platform driver updates from Matthew Garrett:\n \"Support for the new keyboard features on the Thinkpad Carbon, a bunch\n  of updates for the Sony and Toshiba drivers, a new driver for upcoming\n  Alienware hardware and a few misc fixes.  There's a couple of patches\n  that got Acked today but aren't invasive, so I'll send a further PR\n  for them next week\"\n\n* 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86: (28 commits)\n  alienware-wmi: cover some scenarios where memory allocations would fail\n  Add WMI driver for controlling AlienFX features on some Alienware products\n  fujitsu-tablet: add support for Lifebook T901 and T902\n  x86, platform: Make HP_WIRELESS option text more descriptive\n  x86, acpi: LLVMLinux: Remove nested functions from Thinkpad ACPI\n  save and restore adaptive keyboard mode for suspend and,resume\n  support Thinkpad X1 Carbon 2nd generation's adaptive keyboard\n  toshiba_acpi: Fix whitespace\n  toshiba_acpi: Update version and copyright info\n  toshiba_acpi: Add accelerometer support\n  toshiba_acpi: Add ECO mode led support\n  toshiba_acpi: Add touchpad enable/disable support-\n  toshiba_acpi: Add keyboard backlight support\n  toshiba_acpi: Adapt Illumination code to use SCI\n  toshiba_acpi: Add System Configuration Interface\n  thinkpad_acpi: Fix inconsistent mute LED after resume\n  sonypi: Simplify dependencies\n  Revert \"X86 platform: New BayTrail IOSF-SB MBI driver\"\n  sony-laptop: remove useless sony-laptop versioning\n  sony-laptop: add smart connect control function\n  ... Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block layer fixes from Jens Axboe:\n \"A small collection of fixes that should go in before -rc1.  The pull\n  request contains:\n\n   - A two patch fix for a regression with block enabled tagging caused\n     by a commit in the initial pull request.  One patch is from Martin\n     and ensures that SCSI doesn't truncate 64-bit block flags, the\n     other one is from me and prevents us from double using struct\n     request queuelist for both completion and busy tags.  This caused\n     anything from a boot crash for some, to crashes under load.\n\n   - A blk-mq fix for a potential soft stall when hot unplugging CPUs\n     with busy IO.\n\n   - percpu_counter fix is listed in here, that caused a suspend issue\n     with virtio-blk due to percpu counters having an inconsistent state\n     during CPU removal.  Andrew sent this in separately a few days ago,\n     but it's here.  JFYI.\n\n   - A few fixes for block integrity from Martin.\n\n   - A ratelimit fix for loop from Mike Galbraith, to avoid spewing too\n     much in error cases\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  block: fix regression with block enabled tagging\n  scsi: Make sure cmd_flags are 64-bit\n  block: Ensure we only enable integrity metadata for reads and writes\n  block: Fix integrity verification\n  block: Fix for_each_bvec()\n  drivers/block/loop.c: ratelimit error messages\n  blk-mq: fix potential stall during CPU unplug with IO pending\n  percpu_counter: fix bad counter state during suspend Merge tag 'sound-fix-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Here is a bunch of small fixes that have been collected since the\n  previous pull request.  In addition to various misc fixes, the\n  following are included:\n\n   - HD-audio quirks for Dell, HP, Chromebook, and ALC28x codecs\n   - HD-audio AMD HDMI regression fix\n   - Continued PM support/fixes for ice1712 driver\n   - Multiplatform fixes for ASoC samsung drivers\n   - Addition of device id tables to a few ASoC drivers\n   - Bit clock polarity config and error flag fixes in ASoC fsl_sai\"\n\n* tag 'sound-fix-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (32 commits)\n  ALSA: usb-audio: Suppress repetitive debug messages from retire_playback_urb()\n  ALSA: hda - Make full_reset boolean\n  ALSA: hda - add headset mic detect quirk for a Dell laptop\n  sound: dmasound: use module_platform_driver_probe()\n  ALSA: au1x00: use module_platform_driver()\n  ALSA: hda - Use runtime helper to check active state.\n  ALSA: ice1712: Fix boundary checks in PCM pointer ops\n  ASoC: davinci-mcasp: Fix bit clock polarity settings\n  ASoC: samsung: Fix build on multiplatform\n  ASoC: fsl_sai: Fix Bit Clock Polarity configurations\n  ALSA: hda - Do not assign streams in reverse order\n  ALSA: hda/realtek - Add eapd shutup to ALC283\n  ALSA: hda/realtek - Change model name alias for ChromeOS\n  ASoC: da732x: Print correct major id\n  ALSA: hda/realtek - Improve HP depop when system change power state on Chromebook\n  ASoC: cs42l52: Fix mask for REVID\n  sound/oss: Remove uncompilable DBG macro use\n  ALSA: ice1712: Save/restore routing and rate registers\n  ALSA: ice1712: restore AK4xxx volumes on resume\n  ASoC: alc56(23|32): fix undefined return value of probing code\n  ... Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux\n\nPull thermal management updates from Zhang Rui:\n \"We only have a couple of fixes/cleanups for platform thermal drivers\n  this time.\n\n  Specifics:\n\n   - rcar thermal driver: avoid updating the thermal zone in case an IRQ\n     was triggered but the temperature didn't effectively change.  From\n     Patrick Titiano.\n\n   - update the imx thermal driver' formula of converting thermal\n     sensor' raw date to real temperature in degree C.  From Anson\n     Huang.\n\n   - trivial code cleanups of ti soc thermal and rcar thermal driver\n     from Jingoo Han and Patrick Titiano\"\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux:\n  thermal: rcar-thermal: update thermal zone only when temperature changes\n  thermal: rcar-thermal: fix same mask applied twice\n  thermal: ti-soc-thermal: Use SIMPLE_DEV_PM_OPS macro\n  thermal: imx: update formula for thermal sensor Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/cooloney/linux-leds\n\nPull LED updates from Bryan Wu:\n \"This cycle we got:\n   - new driver for leds-mc13783\n   - bug fixes\n   - code cleanup\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/cooloney/linux-leds:\n  leds: make sure we unregister a trigger only once\n  leds: leds-pwm: properly clean up after probe failure\n  leds: clevo-mail: Make probe function __init\n  leds-ot200: Fix dependencies\n  leds-gpio: of: introduce MODULE_DEVICE_TABLE for module autoloading\n  leds: clevo-mail: remove __initdata marker\n  leds: leds-ss4200: remove __initdata marker\n  leds: blinkm: remove unnecessary spaces\n  leds: lp5562: remove unnecessary parentheses\n  leds: leds-ss4200: remove DEFINE_PCI_DEVICE_TABLE macro\n  leds: leds-s3c24xx: Trivial cleanup in header file\n  drivers/leds: delete non-required instances of include <linux/init.h>\n  leds: leds-gpio: add retain-state-suspended property\n  leds: leds-mc13783: Add devicetree support\n  leds: leds-mc13783: Remove unnecessary cleaning of registers on exit\n  leds: leds-mc13783: Use proper \"max_brightness\" value fo LEDs\n  leds: leds-mc13783: Use LED core PM functions\n  leds: leds-mc13783: Add MC34708 LED support\n  leds: Turn off led if blinking is disabled\n  ledtrig-cpu: Handle CPU hot(un)plugging Merge branch 'for-linus' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull slave-dmaengine updates from Vinod Koul:\n - New driver for Qcom bam dma\n - New driver for RCAR peri-peri\n - New driver for FSL eDMA\n - Various odd fixes and updates thru the subsystem\n\n* 'for-linus' of git://git.infradead.org/users/vkoul/slave-dma: (29 commits)\n  dmaengine: add Qualcomm BAM dma driver\n  shdma: add R-Car Audio DMAC peri peri driver\n  dmaengine: sirf: enable generic dt binding for dma channels\n  dma: omap-dma: Implement device_slave_caps callback\n  dmaengine: qcom_bam_dma: Add device tree binding\n  dma: dw: Add suspend and resume handling for PCI mode DW_DMAC.\n  dma: dw: allocate memory in two stages in probe\n  Add new line to test result strings produced in verbose mode\n  dmaengine: pch_dma: use tasklet_kill in teardown\n  dmaengine: at_hdmac: use tasklet_kill in teardown\n  dma: cppi41: start tear down only if channel is busy\n  usb: musb: musb_cppi41: Dont reprogram DMA if tear down is initiated\n  dmaengine: s3c24xx-dma: make phy->irq signed for error handling\n  dma: imx-dma: Add missing module owner field\n  dma: imx-dma: Replace printk with dev_*\n  dma: fsl-edma: fix static checker warning of NULL dereference\n  dma: Remove comment about embedding dma_slave_config into custom structs\n  dma: mmp_tdma: move to generic device tree binding\n  dma: mmp_pdma: add IRQF_SHARED when request irq\n  dma: edma: Fix memory leak in edma_prep_dma_cyclic()\n  ... Merge tag 'backlight-for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight\n\nPull backlight changes from Lee Jones:\n - core: call put_device() instead of kfree()\n - gpio-backlight: add DT support\n - lm3639_bl driver: use managed resources\n\n* tag 'backlight-for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight:\n  backlight: lm3639: Use devm_backlight_device_register()\n  backlight: gpio-backlight: Add DT support\n  backlight: core: Replace kfree with put_device Merge branch 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c updates from Wolfram Sang:\n \"Here is the pull request from the i2c subsystem.  It got a little\n  delayed because I needed to wait for a dependency to be included\n  (commit b424080a9e08: \"reset: Add optional resets and stubs\").  Plus,\n  I had some email problems.  All done now, the highlights are:\n\n   - drivers can now deprecate their use of i2c classes.  That shouldn't\n     be used on embedded platforms anyhow and was often blindly\n     copy&pasted.  This mechanism gives users time to switch away and\n     ultimately boot faster once the use of classes for those drivers is\n     gone for good.\n\n   - new drivers for QUP, Cadence, efm32\n\n   - tracepoint support for I2C and SMBus\n\n   - bigger cleanups for the mv64xxx, nomadik, and designware drivers\n\n  And the usual bugfixes, cleanups, feature additions.  Most stuff has\n  been in linux-next for a while.  Just some hot fixes and new drivers\n  were added a bit more recently.\"\n\n* 'i2c/for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux: (63 commits)\n  i2c: cadence: fix Kconfig dependency\n  i2c: Add driver for Cadence I2C controller\n  i2c: cadence: Document device tree bindings\n  Documentation: i2c: improve section about flags mangling the protocol\n  i2c: qup: use proper type fro clk_freq\n  i2c: qup: off by ones in qup_i2c_probe()\n  i2c: efm32: fix binding doc\n  MAINTAINERS: update I2C web resources\n  i2c: qup: New bus driver for the Qualcomm QUP I2C controller\n  i2c: qup: Add device tree bindings information\n  i2c: i2c-xiic: deprecate class based instantiation\n  i2c: i2c-sirf: deprecate class based instantiation\n  i2c: i2c-mv64xxx: deprecate class based instantiation\n  i2c: i2c-designware-platdrv: deprecate class based instantiation\n  i2c: i2c-davinci: deprecate class based instantiation\n  i2c: i2c-bcm2835: deprecate class based instantiation\n  i2c: mv64xxx: Fix reset controller handling\n  i2c: omap: fix usage of IS_ERR_VALUE with pm_runtime_get_sync\n  i2c: efm32: new bus driver\n  i2c: exynos5: remove unnecessary cast of void pointer\n  ... Merge tag 'mmc-updates-for-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc\n\nPull MMC updates from Chris Ball:\n \"MMC highlights for 3.15:\n\n  Core:\n   - CONFIG_MMC_UNSAFE_RESUME=y is now default behavior\n   - DT bindings for SDHCI UHS, eMMC HS200, high-speed DDR, at 1.8/1.2V\n   - Add GPIO descriptor based slot-gpio card detect API\n\n  Drivers:\n   - dw_mmc: Refactor SOCFPGA support as a variant inside dw_mmc-pltfm.c\n   - mmci: Support HW busy detection on ux500\n   - omap: Support MMC_ERASE\n   - omap_hsmmc: Support MMC_PM_KEEP_POWER, MMC_PM_WAKE_SDIO_IRQ, (a)cmd23\n   - rtsx: Support pre-req/post-req async\n   - sdhci: Add support for Realtek RTS5250 controllers\n   - sdhci-acpi: Add support for 80860F16, fix 80860F14/SDIO card detect\n   - sdhci-msm: Add new driver for Qualcomm SDHCI chipset support\n   - sdhci-pxav3: Add support for Marvell Armada 380 and 385 SoCs\"\n\n* tag 'mmc-updates-for-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc: (102 commits)\n  mmc: sdhci-acpi: Intel SDIO has broken card detect\n  mmc: sdhci-pxav3: add support for the Armada 38x SDHCI controller\n  mmc: sdhci-msm: Add platform_execute_tuning implementation\n  mmc: sdhci-msm: Initial support for Qualcomm chipsets\n  mmc: sdhci-msm: Qualcomm SDHCI binding documentation\n  sdhci: only reprogram retuning timer when flag is set\n  mmc: rename ARCH_BCM to ARCH_BCM_MOBILE\n  mmc: sdhci: Allow for irq being shared\n  mmc: sdhci-acpi: Add device id 80860F16\n  mmc: sdhci-acpi: Fix broken card detect for ACPI HID 80860F14\n  mmc: slot-gpio: Add GPIO descriptor based CD GPIO API\n  mmc: slot-gpio: Split out CD IRQ request into a separate function\n  mmc: slot-gpio: Record GPIO descriptors instead of GPIO numbers\n  Revert \"dts: socfpga: Add support for SD/MMC on the SOCFPGA platform\"\n  mmc: sdhci-spear: use generic card detection gpio support\n  mmc: sdhci-spear: remove support for power gpio\n  mmc: sdhci-spear: simplify resource handling\n  mmc: sdhci-spear: fix platform_data usage\n  mmc: sdhci-spear: fix error handling paths for DT\n  mmc: sdhci-bcm-kona: fix build errors when built-in\n  ... Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull more powerpc updates from Ben Herrenschmidt:\n \"Here are a few more powerpc things for you.\n\n  So you'll find here the conversion of the two new firmware sysfs\n  interfaces to the new API for self-removing files that Greg and Tejun\n  introduced, so they can finally remove the old one.\n\n  I'm also reverting the hwmon driver for powernv.  I shouldn't have\n  merged it, I got a bit carried away here.  I hadn't realized it was\n  never CCed to the relevant maintainer(s) and list(s), and happens to\n  have some issues so I'm taking it out and it will come back via the\n  proper channels.\n\n  The rest is a bunch of LE fixes (argh, some of the new stuff was\n  broken on LE, I really need to start testing LE myself !) and various\n  random fixes here and there.\n\n  Finally one bit that's not strictly a fix, which is the HVC OPAL\n  change to \"kick\" the HVC thread when the firmware tells us there is\n  new incoming data.  I don't feel like waiting for this one, it's\n  simple enough, and it makes a big difference in console responsiveness\n  which is good for my nerves\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (26 commits)\n  powerpc/powernv Adapt opal-elog and opal-dump to new sysfs_remove_file_self\n  Revert \"powerpc/powernv: hwmon driver for power values, fan rpm and temperature\"\n  power, sched: stop updating inside arch_update_cpu_topology() when nothing to be update\n  powerpc/le: Avoid creatng R_PPC64_TOCSAVE relocations for modules.\n  arch/powerpc: Use RCU_INIT_POINTER(x, NULL) in platforms/cell/spu_syscalls.c\n  powerpc/opal: Add missing include\n  powerpc: Convert last uses of __FUNCTION__ to __func__\n  powerpc: Add lq/stq emulation\n  powerpc/powernv: Add invalid OPAL call\n  powerpc/powernv: Add OPAL message log interface\n  powerpc/book3s: Fix mc_recoverable_range buffer overrun issue.\n  powerpc: Remove dead code in sycall entry\n  powerpc: Use of_node_init() for the fakenode in msi_bitmap.c\n  powerpc/mm: NUMA pte should be handled via slow path in get_user_pages_fast()\n  powerpc/powernv: Fix endian issues with sensor code\n  powerpc/powernv: Fix endian issues with OPAL async code\n  tty/hvc_opal: Kick the HVC thread on OPAL console events\n  powerpc/powernv: Add opal_notifier_unregister() and export to modules\n  powerpc/ppc64: Do not turn AIL (reloc-on interrupts) too early\n  powerpc/ppc64: Gracefully handle early interrupts\n  ... futex: avoid race between requeue and wake\n\nJan Stancek reported:\n \"pthread_cond_broadcast/4-1.c testcase from openposix testsuite (LTP)\n  occasionally fails, because some threads fail to wake up.\n\n  Testcase creates 5 threads, which are all waiting on same condition.\n  Main thread then calls pthread_cond_broadcast() without holding mutex,\n  which calls:\n\n      futex(uaddr1, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, uaddr2, ..)\n\n  This immediately wakes up single thread A, which unlocks mutex and\n  tries to wake up another thread:\n\n      futex(uaddr2, FUTEX_WAKE_PRIVATE, 1)\n\n  If thread A manages to call futex_wake() before any waiters are\n  requeued for uaddr2, no other thread is woken up\"\n\nThe ordering constraints for the hash bucket waiter counting are that\nthe waiter counts have to be incremented _before_ getting the spinlock\n(because the spinlock acts as part of the memory barrier), but the\n\"requeue\" operation didn't honor those rules, and nobody had even\nthought about that case.\n\nThis fairly simple patch just increments the waiter count for the target\nhash bucket (hb2) when requeing a futex before taking the locks.  It\nthen decrements them again after releasing the lock - the code that\nactually moves the futex(es) between hash buckets will do the additional\nrequired waiter count housekeeping.\n\nReported-and-tested-by: Jan Stancek <jstancek@redhat.com>\nAcked-by: Davidlohr Bueso <davidlohr@hp.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@vger.kernel.org # 3.14\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-3.15' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd updates from Bruce Fields:\n \"Highlights:\n   - server-side nfs/rdma fixes from Jeff Layton and Tom Tucker\n   - xdr fixes (a larger xdr rewrite has been posted but I decided it\n     would be better to queue it up for 3.16).\n   - miscellaneous fixes and cleanup from all over (thanks especially to\n     Kinglong Mee)\"\n\n* 'for-3.15' of git://linux-nfs.org/~bfields/linux: (36 commits)\n  nfsd4: don't create unnecessary mask acl\n  nfsd: revert v2 half of \"nfsd: don't return high mode bits\"\n  nfsd4: fix memory leak in nfsd4_encode_fattr()\n  nfsd: check passed socket's net matches NFSd superblock's one\n  SUNRPC: Clear xpt_bc_xprt if xs_setup_bc_tcp failed\n  NFSD/SUNRPC: Check rpc_xprt out of xs_setup_bc_tcp\n  SUNRPC: New helper for creating client with rpc_xprt\n  NFSD: Free backchannel xprt in bc_destroy\n  NFSD: Clear wcc data between compound ops\n  nfsd: Don't return NFS4ERR_STALE_STATEID for NFSv4.1+\n  nfsd4: fix nfs4err_resource in 4.1 case\n  nfsd4: fix setclientid encode size\n  nfsd4: remove redundant check from nfsd4_check_resp_size\n  nfsd4: use more generous NFS4_ACL_MAX\n  nfsd4: minor nfsd4_replay_cache_entry cleanup\n  nfsd4: nfsd4_replay_cache_entry should be static\n  nfsd4: update comments with obsolete function name\n  rpc: Allow xdr_buf_subsegment to operate in-place\n  NFSD: Using free_conn free connection\n  SUNRPC: fix memory leak of peer addresses in XPRT\n  ... Merge branch 'akpm' (incoming from Andrew)\n\nMerge a few more patches from Andrew Morton:\n \"A few leftovers\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  fs/ncpfs/dir.c: fix indenting in ncp_lookup()\n  ncpfs/inode.c: fix mismatch printk formats and arguments\n  ncpfs: remove now unused PRINTK macro\n  ncpfs: convert PPRINTK to ncp_vdbg\n  ncpfs: convert DPRINTK/DDPRINTK to ncp_dbg\n  ncpfs: Add pr_fmt and convert printks to pr_<level>\n  arch/x86/mm/kmemcheck/kmemcheck.c: use kstrtoint() instead of sscanf()\n  lib/percpu_counter.c: fix bad percpu counter state during suspend\n  autofs4: check dev ioctl size before allocating\n  mm: vmscan: do not swap anon pages just because free+file is low Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull more networking updates from David Miller:\n\n 1) If a VXLAN interface is created with no groups, we can crash on\n    reception of packets.  Fix from Mike Rapoport.\n\n 2) Missing includes in CPTS driver, from Alexei Starovoitov.\n\n 3) Fix string validations in isdnloop driver, from YOSHIFUJI Hideaki\n    and Dan Carpenter.\n\n 4) Missing irq.h include in bnxw2x, enic, and qlcnic drivers.  From\n    Josh Boyer.\n\n 5) AF_PACKET transmit doesn't statistically count TX drops, from Daniel\n    Borkmann.\n\n 6) Byte-Queue-Limit enabled drivers aren't handled properly in\n    AF_PACKET transmit path, also from Daniel Borkmann.\n\n    Same problem exists in pktgen, and Daniel fixed it there too.\n\n 7) Fix resource leaks in driver probe error paths of new sxgbe driver,\n    from Francois Romieu.\n\n 8) Truesize of SKBs can gradually get more and more corrupted in NAPI\n    packet recycling path, fix from Eric Dumazet.\n\n 9) Fix uniprocessor netfilter build, from Florian Westphal.  In the\n    longer term we should perhaps try to find a way for ARRAY_SIZE() to\n    work even with zero sized array elements.\n\n10) Fix crash in netfilter conntrack extensions due to mis-estimation of\n    required extension space.  From Andrey Vagin.\n\n11) Since we commit table rule updates before trying to copy the\n    counters back to userspace (it's the last action we perform), we\n    really can't signal the user copy with an error as we are beyond the\n    point from which we can unwind everything.  This causes all kinds of\n    use after free crashes and other mysterious behavior.\n\n    From Thomas Graf.\n\n12) Restore previous behvaior of div/mod by zero in BPF filter\n    processing.  From Daniel Borkmann.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (38 commits)\n  net: sctp: wake up all assocs if sndbuf policy is per socket\n  isdnloop: several buffer overflows\n  netdev: remove potentially harmful checks\n  pktgen: fix xmit test for BQL enabled devices\n  net/at91_ether: avoid NULL pointer dereference\n  tipc: Let tipc_release() return 0\n  at86rf230: fix MAX_CSMA_RETRIES parameter\n  mac802154: fix duplicate #include headers\n  sxgbe: fix duplicate #include headers\n  net: filter: be more defensive on div/mod by X==0\n  netfilter: Can't fail and free after table replacement\n  xen-netback: Trivial format string fix\n  net: bcmgenet: Remove unnecessary version.h inclusion\n  net: smc911x: Remove unused local variable\n  bonding: Inactive slaves should keep inactive flag's value\n  netfilter: nf_tables: fix wrong format in request_module()\n  netfilter: nf_tables: set names cannot be larger than 15 bytes\n  netfilter: nf_conntrack: reserve two bytes for nf_ct_ext->len\n  netfilter: Add {ipt,ip6t}_osf aliases for xt_osf\n  netfilter: x_tables: allow to use cgroup match for LOCAL_IN nf hooks\n  ... Merge tag 'staging-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull more staging patches from Greg KH:\n \"Here are some more staging patches for 3.15-rc1.\n\n  They include a late-submission of a wireless driver that a bunch of\n  people seem to have the hardware for now.  As it's stand-alone, it\n  should be fine (now passes the 0-day random build bot tests).\n\n  There are also some fixes for the unisys drivers, as they were causing\n  havoc on a number of different machines.  To resolve all of those\n  issues, we just mark the driver as BROKEN now, and we can fix it up\n  \"properly\" over time\"\n\n* tag 'staging-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: rtl8723au: The 8723 only has two paths\n  Staging: unisys: mark drivers as BROKEN\n  Staging: unisys: verify that a control channel exists\n  staging: unisys: Add missing close parentheses in filexfer.c\n  staging: r8723au: Fix build problem when RFKILL is not selected\n  staging: r8723au: Fix randconfig build errors\n  staging: r8723au: Turn on build of new driver\n  staging: r8723au: Additional source patches\n  staging: r8723au: Add source files for new driver - part 4\n  staging: r8723au: Add source files for new driver - part 3\n  staging: r8723au: Add source files for new driver - part 2\n  staging: r8723au: Add source files for new driver - part 1 Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull second set of arm64 updates from Catalin Marinas:\n \"A second pull request for this merging window, mainly with fixes and\n  docs clarification:\n\n   - Documentation clarification on CPU topology and booting\n     requirements\n   - Additional cache flushing during boot (needed in the presence of\n     external caches or under virtualisation)\n   - DMA range invalidation fix for non cache line aligned buffers\n   - Build failure fix with !COMPAT\n   - Kconfig update for STRICT_DEVMEM\"\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: Fix DMA range invalidation for cache line unaligned buffers\n  arm64: Add missing Kconfig for CONFIG_STRICT_DEVMEM\n  arm64: fix !CONFIG_COMPAT build failures\n  Revert \"arm64: virt: ensure visibility of __boot_cpu_mode\"\n  arm64: Relax the kernel cache requirements for boot\n  arm64: Update the TCR_EL1 translation granule definitions for 16K pages\n  ARM: topology: Make it clear that all CPUs need to be described Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull second set of s390 patches from Martin Schwidefsky:\n \"The second part of Heikos uaccess rework, the page table walker for\n  uaccess is now a thing of the past (yay!)\n\n  The code change to fix the theoretical TLB flush problem allows us to\n  add a TLB flush optimization for zEC12, this machine has new\n  instructions that allow to do CPU local TLB flushes for single pages\n  and for all pages of a specific address space.\n\n  Plus the usual bug fixing and some more cleanup\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/uaccess: rework uaccess code - fix locking issues\n  s390/mm,tlb: optimize TLB flushing for zEC12\n  s390/mm,tlb: safeguard against speculative TLB creation\n  s390/irq: Use defines for external interruption codes\n  s390/irq: Add defines for external interruption codes\n  s390/sclp: add timeout for queued requests\n  kvm/s390: also set guest pages back to stable on kexec/kdump\n  lcs: Add missing destroy_timer_on_stack()\n  s390/tape: Add missing destroy_timer_on_stack()\n  s390/tape: Use del_timer_sync()\n  s390/3270: fix crash with multiple reset device requests\n  s390/bitops,atomic: add missing memory barriers\n  s390/zcrypt: add length check for aligned data to avoid overflow in msg-type 6 Merge branch 'drm-next' of git://people.freedesktop.org/~airlied/linux\n\nPull drm updates from Dave Airlie:\n \"Highlights:\n\n   - drm:\n\n     Generic display port aux features, primary plane support, drm\n     master management fixes, logging cleanups, enforced locking checks\n     (instead of docs), documentation improvements, minor number\n     handling cleanup, pseudofs for shared inodes.\n\n   - ttm:\n\n     add ability to allocate from both ends\n\n   - i915:\n\n     broadwell features, power domain and runtime pm, per-process\n     address space infrastructure (not enabled)\n\n   - msm:\n\n     power management, hdmi audio support\n\n   - nouveau:\n\n     ongoing GPU fault recovery, initial maxwell support, random fixes\n\n   - exynos:\n\n     refactored driver to clean up a lot of abstraction, DP support\n     moved into drm, LVDS bridge support added, parallel panel support\n\n   - gma500:\n\n     SGX MMU support, SGX irq handling, asle irq work fixes\n\n   - radeon:\n\n     video engine bringup, ring handling fixes, use dp aux helpers\n\n   - vmwgfx:\n\n     add rendernode support\"\n\n* 'drm-next' of git://people.freedesktop.org/~airlied/linux: (849 commits)\n  DRM: armada: fix corruption while loading cursors\n  drm/dp_helper: don't return EPROTO for defers (v2)\n  drm/bridge: export ptn3460_init function\n  drm/exynos: remove MODULE_DEVICE_TABLE definitions\n  ARM: dts: exynos4412-trats2: enable exynos/fimd node\n  ARM: dts: exynos4210-trats: enable exynos/fimd node\n  ARM: dts: exynos4412-trats2: add panel node\n  ARM: dts: exynos4210-trats: add panel node\n  ARM: dts: exynos4: add MIPI DSI Master node\n  drm/panel: add S6E8AA0 driver\n  ARM: dts: exynos4210-universal_c210: add proper panel node\n  drm/panel: add ld9040 driver\n  panel/ld9040: add DT bindings\n  panel/s6e8aa0: add DT bindings\n  drm/exynos: add DSIM driver\n  exynos/dsim: add DT bindings\n  drm/exynos: disallow fbdev initialization if no device is connected\n  drm/mipi_dsi: create dsi devices only for nodes with reg property\n  drm/mipi_dsi: add flags to DSI messages\n  Skip intel_crt_init for Dell XPS 8700\n  ... Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull ext3 improvements, cleanups, reiserfs fix from Jan Kara:\n \"various cleanups for ext2, ext3, udf, isofs, a documentation update\n  for quota, and a fix of a race in reiserfs readdir implementation\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  reiserfs: fix race in readdir\n  ext2: acl: remove unneeded include of linux/capability.h\n  ext3: explicitly remove inode from orphan list after failed direct io\n  fs/isofs/inode.c add __init to init_inodecache()\n  ext3: Speedup WB_SYNC_ALL pass\n  fs/quota/Kconfig: Update filesystems\n  ext3: Update outdated comment before ext3_ordered_writepage()\n  ext3: Update PF_MEMALLOC handling in ext3_write_inode()\n  ext2/3: use prandom_u32() instead of get_random_bytes()\n  ext3: remove an unneeded check in ext3_new_blocks()\n  ext3: remove unneeded check in ext3_ordered_writepage()\n  fs: Mark function as static in ext3/xattr_security.c\n  fs: Mark function as static in ext3/dir.c\n  fs: Mark function as static in ext2/xattr_security.c\n  ext3: Add __init macro to init_inodecache\n  ext2: Add __init macro to init_inodecache\n  udf: Add __init macro to init_inodecache\n  fs: udf: parse_options: blocksize check Merge branch 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild\n\nPull kbuild changes from Michal Marek:\n - cleanups in the main Makefiles and Documentation/DocBook/Makefile\n - make O=...  directory is automatically created if needed\n - mrproper/distclean removes the old include/linux/version.h to make\n   life easier when bisecting across the commit that moved the version.h\n   file\n\n* 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:\n  kbuild: docbook: fix the include error when executing \"make help\"\n  kbuild: create a build directory automatically for out-of-tree build\n  kbuild: remove redundant '.*.cmd' pattern from make distclean\n  kbuild: move \"quote\" to Kbuild.include to be consistent\n  kbuild: docbook: use $(obj) and $(src) rather than specific path\n  kbuild: unconditionally clobber include/linux/version.h on distclean\n  kbuild: docbook: specify KERNELDOC dependency correctly\n  kbuild: docbook: include cmd files more simply\n  kbuild: specify build_docproc as a phony target Merge tag 'arc-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc\n\nPull ARC changes from Vineet Gupta:\n - Support for external initrd from Noam\n - Fix broken serial console in nsimosci Virtual Platform\n - Reuse of ENTRY/END assembler macros across hand asm code\n - Other minor fixes here and there\n\n* tag 'arc-v3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:\n  ARC: [nsimosci] Unbork console\n  ARC: [nsimosci] Change .dts to use generic 8250 UART\n  ARC: [SMP] General Fixes\n  ARC: Remove unused DT template file\n  ARC: [clockevent] simplify timer ISR\n  ARC: [clockevent] can't be SoC specific\n  ARC: Remove ARC_HAS_COH_RTSC\n  ARC: switch to generic ENTRY/END assembler annotations\n  ARC: support external initrd\n  ARC: add uImage to .gitignore\n  ARC: [arcfpga] Fix __initconst data const-correctness Merge tag 'stable/for-linus-3.15-tag2' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen build fix from David Vrabel:\n \"Fix arm build of drivers/xen/events/\n\n  The merge of irq-core-for-linus branch broke it\"\n\n* tag 'stable/for-linus-3.15-tag2' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  Xen: do hv callback accounting only on x86 Merge branch 'akpm' (incoming from Andrew)\n\nMerge second patch-bomb from Andrew Morton:\n - the rest of MM\n - zram updates\n - zswap updates\n - exit\n - procfs\n - exec\n - wait\n - crash dump\n - lib/idr\n - rapidio\n - adfs, affs, bfs, ufs\n - cris\n - Kconfig things\n - initramfs\n - small amount of IPC material\n - percpu enhancements\n - early ioremap support\n - various other misc things\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (156 commits)\n  MAINTAINERS: update Intel C600 SAS driver maintainers\n  fs/ufs: remove unused ufs_super_block_third pointer\n  fs/ufs: remove unused ufs_super_block_second pointer\n  fs/ufs: remove unused ufs_super_block_first pointer\n  fs/ufs/super.c: add __init to init_inodecache()\n  doc/kernel-parameters.txt: add early_ioremap_debug\n  arm64: add early_ioremap support\n  arm64: initialize pgprot info earlier in boot\n  x86: use generic early_ioremap\n  mm: create generic early_ioremap() support\n  x86/mm: sparse warning fix for early_memremap\n  lglock: map to spinlock when !CONFIG_SMP\n  percpu: add preemption checks to __this_cpu ops\n  vmstat: use raw_cpu_ops to avoid false positives on preemption checks\n  slub: use raw_cpu_inc for incrementing statistics\n  net: replace __this_cpu_inc in route.c with raw_cpu_inc\n  modules: use raw_cpu_write for initialization of per cpu refcount.\n  mm: use raw_cpu ops for determining current NUMA node\n  percpu: add raw_cpu_ops\n  slub: fix leak of 'name' in sysfs_slab_add\n  ... Merge branch 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fixes from Tejun Heo:\n \"Two patches to fix fallouts from the kernfs conversion:\n\n  Li's patch to stop leaking cgroup_root refs across multiple mounts and\n  the other fixes the 90s hang during shutdown caused by always using\n  root's uid/gid for new cgroup dirs and files.\"\n\n* 'for-3.15-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: newly created dirs and files should be owned by the creator\n  cgroup: fix top cgroup refcnt leak Merge tag 'cpu-hotplug-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull CPU hotplug notifiers registration fixes from Rafael Wysocki:\n \"The purpose of this single series of commits from Srivatsa S Bhat\n  (with a small piece from Gautham R Shenoy) touching multiple\n  subsystems that use CPU hotplug notifiers is to provide a way to\n  register them that will not lead to deadlocks with CPU online/offline\n  operations as described in the changelog of commit 93ae4f978ca7f (\"CPU\n  hotplug: Provide lockless versions of callback registration\n  functions\").\n\n  The first three commits in the series introduce the API and document\n  it and the rest simply goes through the users of CPU hotplug notifiers\n  and converts them to using the new method\"\n\n* tag 'cpu-hotplug-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (52 commits)\n  net/iucv/iucv.c: Fix CPU hotplug callback registration\n  net/core/flow.c: Fix CPU hotplug callback registration\n  mm, zswap: Fix CPU hotplug callback registration\n  mm, vmstat: Fix CPU hotplug callback registration\n  profile: Fix CPU hotplug callback registration\n  trace, ring-buffer: Fix CPU hotplug callback registration\n  xen, balloon: Fix CPU hotplug callback registration\n  hwmon, via-cputemp: Fix CPU hotplug callback registration\n  hwmon, coretemp: Fix CPU hotplug callback registration\n  thermal, x86-pkg-temp: Fix CPU hotplug callback registration\n  octeon, watchdog: Fix CPU hotplug callback registration\n  oprofile, nmi-timer: Fix CPU hotplug callback registration\n  intel-idle: Fix CPU hotplug callback registration\n  clocksource, dummy-timer: Fix CPU hotplug callback registration\n  drivers/base/topology.c: Fix CPU hotplug callback registration\n  acpi-cpufreq: Fix CPU hotplug callback registration\n  zsmalloc: Fix CPU hotplug callback registration\n  scsi, fcoe: Fix CPU hotplug callback registration\n  scsi, bnx2fc: Fix CPU hotplug callback registration\n  scsi, bnx2i: Fix CPU hotplug callback registration\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull Ceph updates from Sage Weil:\n \"The biggest chunk is a series of patches from Ilya that add support\n  for new Ceph osd and crush map features, including some new tunables,\n  primary affinity, and the new encoding that is needed for erasure\n  coding support.  This brings things into parity with the server side\n  and the looming firefly release.  There is also support for allocation\n  hints in RBD that help limit fragmentation on the server side.\n\n  There is also a series of patches from Zheng fixing NFS reexport,\n  directory fragmentation support, flock vs fnctl behavior, and some\n  issues with clustered MDS.\n\n  Finally, there are some miscellaneous fixes from Yunchuan Wen for\n  fscache, Fabian Frederick for ACLs, and from me for fsync(dirfd)\n  behavior\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client: (79 commits)\n  ceph: skip invalid dentry during dcache readdir\n  libceph: dump pool {read,write}_tier to debugfs\n  libceph: output primary affinity values on osdmap updates\n  ceph: flush cap release queue when trimming session caps\n  ceph: don't grabs open file reference for aborted request\n  ceph: drop extra open file reference in ceph_atomic_open()\n  ceph: preallocate buffer for readdir reply\n  libceph: enable PRIMARY_AFFINITY feature bit\n  libceph: redo ceph_calc_pg_primary() in terms of ceph_calc_pg_acting()\n  libceph: add support for osd primary affinity\n  libceph: add support for primary_temp mappings\n  libceph: return primary from ceph_calc_pg_acting()\n  libceph: switch ceph_calc_pg_acting() to new helpers\n  libceph: introduce apply_temps() helper\n  libceph: introduce pg_to_raw_osds() and raw_to_up_osds() helpers\n  libceph: ceph_can_shift_osds(pool) and pool type defines\n  libceph: ceph_osd_{exists,is_up,is_down}(osd) definitions\n  libceph: enable OSDMAP_ENC feature bit\n  libceph: primary_affinity decode bits\n  libceph: primary_affinity infrastructure\n  ... Merge tag 'for-f2fs-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"This patch-set includes the following major enhancement patches.\n   - introduce large directory support\n   - introduce f2fs_issue_flush to merge redundant flush commands\n   - merge write IOs as much as possible aligned to the segment\n   - add sysfs entries to tune the f2fs configuration\n   - use radix_tree for the free_nid_list to reduce in-memory operations\n   - remove costly bit operations in f2fs_find_entry\n   - enhance the readahead flow for CP/NAT/SIT/SSA blocks\n\n  The other bug fixes are as follows:\n   - recover xattr node blocks correctly after sudden-power-cut\n   - fix to calculate the maximum number of node ids\n   - enhance to handle many error cases\n\n  And, there are a bunch of cleanups\"\n\n* tag 'for-f2fs-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (62 commits)\n  f2fs: fix wrong statistics of inline data\n  f2fs: check the acl's validity before setting\n  f2fs: introduce f2fs_issue_flush to avoid redundant flush issue\n  f2fs: fix to cover io->bio with io_rwsem\n  f2fs: fix error path when fail to read inline data\n  f2fs: use list_for_each_entry{_safe} for simplyfying code\n  f2fs: avoid free slab cache under spinlock\n  f2fs: avoid unneeded lookup when xattr name length is too long\n  f2fs: avoid unnecessary bio submit when wait page writeback\n  f2fs: return -EIO when node id is not matched\n  f2fs: avoid RECLAIM_FS-ON-W warning\n  f2fs: skip unnecessary node writes during fsync\n  f2fs: introduce fi->i_sem to protect fi's info\n  f2fs: change reclaim rate in percentage\n  f2fs: add missing documentation for dir_level\n  f2fs: remove unnecessary threshold\n  f2fs: throttle the memory footprint with a sysfs entry\n  f2fs: avoid to drop nat entries due to the negative nr_shrink\n  f2fs: call f2fs_wait_on_page_writeback instead of native function\n  f2fs: introduce nr_pages_to_write for segment alignment\n  ... Merge tag 'fbdev-omap-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull OMAP fbdev changes from Tomi Valkeinen:\n \"This is based on the already pulled fbdev-main changes, and this also\n  merges .dts branch from Tony Lindgren (which has also been pulled), so\n  that I was able to add the display related .dts changes.\n\n  This contains OMAP related fbdev changes for 3.15.  The bulk of the\n  patches are for adding Device Tree support for OMAP Display Subsystem:\n\n   - SoCs: OMAP2/3/4\n\n   - Boards: OMAP4 Panda, OMAP4 SDP, OMAP3 Beagle, OMAP3 Beagle-xM,\n     OMAP3 IGEP0020, OMAP3 N900\n\n   - Devices: TFP410 Encoder, tpd12s015 HDMI companion chip, Sony\n     acx565akm panel, MIPI DSI Command mode panel and HDMI, DVI and\n     Analog TV connectors\"\n\n* tag 'fbdev-omap-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux: (45 commits)\n  OMAPDSS: HDMI: fix interlace output\n  OMAPDSS: add missing __init for dss_init_ports\n  ARM: OMAP2+: remove pdata quirks for displays\n  OMAPDSS: remove DT hacks for regulators\n  Doc/DT: Add DT binding documentation for tpd12s015 encoder\n  Doc/DT: Add DT binding documentation for TFP410 encoder\n  Doc/DT: Add DT binding documentation for Sony acx565akm panel\n  Doc/DT: Add DT binding documentation for MIPI DSI CM Panel\n  Doc/DT: Add DT binding documentation for HDMI Connector\n  Doc/DT: Add DT binding documentation for DVI Connector\n  Doc/DT: Add DT binding documentation for Analog TV Connector\n  ARM: omap3-n900.dts: add display information\n  ARM: omap3-igep0020.dts: add display information\n  ARM: omap3-beagle-xm.dts: add display information\n  ARM: omap3-beagle.dts: add display information\n  ARM: omap4-sdp.dts: add display information\n  Doc/DT: Add DT binding documentation for OMAP DSS\n  OMAPDSS: acx565akm: Add DT support\n  OMAPDSS: connector-analog-tv: Add DT support\n  OMAPDSS: hdmi-connector: Add DT support\n  ... Merge tag 'mfd-for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull MFD updates from Lee Jones:\n \"Changes to existing drivers:\n   - Use of managed resources - omap, twl4030, ti_am335x_tscadc\n   - Advanced error handling - omap\n   - Rework clk management - omap\n   - Device Tree (re-)work - tc3589x, pm8921, da9055, sec\n   - IRC management overhaul and !BROKEN - pm8921\n   - Convert to regmap - ssbi, pm8921\n   - Use simple power-management ops - ucb1x00\n   - Include file clean-up - adp5520, cs5535, janz, lpc_ich,\n      - lpc_sch, max14577, mcp-sa11x0, pcf50633-adc, rc5t583,\n      \trdc321x-southbridge, retu, smsc-ece1099, ti-ssp, ti_am335x_tscadc,\n\ttps65912, vexpress-config, wm8350, ywm8350\n   - Various bug fixes across the subsystem\n      - NULL/invalid pointer dereference prevention\n      - Resource leak mitigation,\n      - Variable used initialised\n      - Staticise various containers\n      - Enforce return value checks\n\n  New drivers/supported devices:\n   - Add support for s2mps14 and s2mpa01 to sec\n   - Add support for da9063 (v5) to da9063\n   - Add support for atom-c2000 to gpio-ich\n   - Add support for come-{mbt10,cbt6,chl6} to kempld\n   - Add support for da9053 to da9052\n   - Add support for itco-wdt (v3) and baytrail to lpc_ich\n   - Add new drivers for tps65218, rtsx_usb, bcm590xx\n\n  (Re-)moved drivers:\n   - twl4030 ==> drivers/iio\n   - ti-ssp  ==> /dev/null\"\n\n* tag 'mfd-for-linus-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (103 commits)\n  mfd: wm5110: Correct default for HEADPHONE_DETECT_1\n  mfd: arizona: Correct small errors in the DT binding documentation\n  mfd: arizona: Mark DSP clocking register as volatile\n  mfd: devicetree: bindings: Add pm8xxx RTC description\n  mfd: kempld-core: Fix potential hang-up during boot\n  mfd: sec-core: Fix uninitialized 'regmap_rtc' on S2MPA01\n  mfd: tps65910: Fix regmap_irq_chip_data leak on mfd_add_devices fail\n  mfd: tps65910: Fix possible invalid pointer dereference on regmap_add_irq_chip fail\n  mfd: sec-core: Fix I2C dummy device resource leak on probe failure\n  mfd: sec-core: Add of_compatible strings for clock MFD cells\n  mfd: Remove obsolete ti-ssp driver\n  Documentation: mfd: s2mps11: Describe S5M8767 and S2MPS14 clocks\n  mfd: bcm590xx: Fix type argument for module device table\n  mfd: lpc_ich: Add support for Intel Bay Trail SoC\n  mfd: lpc_ich: Add support for NM10 GPIO\n  mfd: lpc_ich: Change Avoton to iTCO v3\n  watchdog: iTCO_wdt: Add support for v3 silicon\n  mfd: lpc_ich: Add support for iTCO v3\n  mfd: lpc_ich: Remove lpc_ich_cfg struct use\n  mfd: lpc_ich: Only configure watchdog or GPIO when present\n  ... Merge tag 'for-linus-20140405' of git://git.infradead.org/linux-mtd\n\nPull MTD updates from Brian Norris:\n - A few SPI NOR ID definitions\n - Kill the NAND \"max pagesize\" restriction\n - Fix some x16 bus-width NAND support\n - Add NAND JEDEC parameter page support\n - DT bindings for NAND ECC\n - GPMI NAND updates (subpage reads)\n - More OMAP NAND refactoring\n - New STMicro SPI NOR driver (now in 40 patches!)\n - A few other random bugfixes\n\n* tag 'for-linus-20140405' of git://git.infradead.org/linux-mtd: (120 commits)\n  Fix index regression in nand_read_subpage\n  mtd: diskonchip: mem resource name is not optional\n  mtd: nand: fix mention to CONFIG_MTD_NAND_ECC_BCH\n  mtd: nand: fix GET/SET_FEATURES address on 16-bit devices\n  mtd: omap2: Use devm_ioremap_resource()\n  mtd: denali_dt: Use devm_ioremap_resource()\n  mtd: devices: elm: update DRIVER_NAME as \"omap-elm\"\n  mtd: devices: elm: configure parallel channels based on ecc_steps\n  mtd: devices: elm: clean elm_load_syndrome\n  mtd: devices: elm: check for hardware engine's design constraints\n  mtd: st_spi_fsm: Succinctly reorganise .remove()\n  mtd: st_spi_fsm: Allow loop to run at least once before giving up CPU\n  mtd: st_spi_fsm: Correct vendor name spelling issue - missing \"M\"\n  mtd: st_spi_fsm: Avoid duplicating MTD core code\n  mtd: st_spi_fsm: Remove useless consts from function arguments\n  mtd: st_spi_fsm: Convert ST SPI FSM (NOR) Flash driver to new DT partitions\n  mtd: st_spi_fsm: Move runtime configurable msg sequences into device's struct\n  mtd: st_spi_fsm: Supply the W25Qxxx chip specific configuration call-back\n  mtd: st_spi_fsm: Supply the S25FLxxx chip specific configuration call-back\n  mtd: st_spi_fsm: Supply the MX25xxx chip specific configuration call-back\n  ... Merge tag 'nfs-for-3.15-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client updates from Trond Myklebust:\n \"Highlights include:\n\n   - Stable fix for a use after free issue in the NFSv4.1 open code\n   - Fix the SUNRPC bi-directional RPC code to account for TCP segmentation\n   - Optimise usage of readdirplus when confronted with 'ls -l' situations\n   - Soft mount bugfixes\n   - NFS over RDMA bugfixes\n   - NFSv4 close locking fixes\n   - Various NFSv4.x client state management optimisations\n   - Rename/unlink code cleanups\"\n\n* tag 'nfs-for-3.15-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs: (28 commits)\n  nfs: pass string length to pr_notice message about readdir loops\n  NFSv4: Fix a use-after-free problem in open()\n  SUNRPC: rpc_restart_call/rpc_restart_call_prepare should clear task->tk_status\n  SUNRPC: Don't let rpc_delay() clobber non-timeout errors\n  SUNRPC: Ensure call_connect_status() deals correctly with SOFTCONN tasks\n  SUNRPC: Ensure call_status() deals correctly with SOFTCONN tasks\n  NFSv4: Ensure we respect soft mount timeouts during trunking discovery\n  NFSv4: Schedule recovery if nfs40_walk_client_list() is interrupted\n  NFS: advertise only supported callback netids\n  SUNRPC: remove KERN_INFO from dprintk() call sites\n  SUNRPC: Fix large reads on NFS/RDMA\n  NFS: Clean up: revert increase in READDIR RPC buffer max size\n  SUNRPC: Ensure that call_bind times out correctly\n  SUNRPC: Ensure that call_connect times out correctly\n  nfs: emit a fsnotify_nameremove call in sillyrename codepath\n  nfs: remove synchronous rename code\n  nfs: convert nfs_rename to use async_rename infrastructure\n  nfs: make nfs_async_rename non-static\n  nfs: abstract out code needed to complete a sillyrename\n  NFSv4: Clear the open state flags if the new stateid does not match\n  ... Merge tag 'modules-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux\n\nPull module updates from Rusty Russell:\n \"Nothing major: the stricter permissions checking for sysfs broke a\n  staging driver; fix included.  Greg KH said he'd take the patch but\n  hadn't as the merge window opened, so it's included here to avoid\n  breaking build\"\n\n* tag 'modules-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux:\n  staging: fix up speakup kobject mode\n  Use 'E' instead of 'X' for unsigned module taint flag.\n  VERIFY_OCTAL_PERMISSIONS: stricter checking for sysfs perms.\n  kallsyms: fix percpu vars on x86-64 with relocation.\n  kallsyms: generalize address range checking\n  module: LLVMLinux: Remove unused function warning from __param_check macro\n  Fix: module signature vs tracepoints: add new TAINT_UNSIGNED_MODULE\n  module: remove MODULE_GENERIC_TABLE\n  module: allow multiple calls to MODULE_DEVICE_TABLE() per module\n  module: use pr_cont Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile\n\nPull arch/tile updates from Chris Metcalf:\n \"These fix a few stray build issues seen in linux-next, and also add\n  the minimal required support for perf to tilegx\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:\n  arch/tile: remove unused variable 'devcap'\n  tile: Fix vDSO compilation issue with allyesconfig\n  perf tools: Allow building for tile\n  tile/perf: Support perf_events on tilegx and tilepro\n  tile: Enable NMIs on return from handle_nmi() without errors\n  tile: Add support for handling PMC hardware\n  tile: don't use __get_cpu_var() with structure-typed arguments\n  tile: avoid overflow in ns2cycles Merge tag 'dm-3.15-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper changes from Mike Snitzer:\n\n - Fix dm-cache corruption caused by discard_block_size > cache_block_size\n\n - Fix a lock-inversion detected by LOCKDEP in dm-cache\n\n - Fix a dangling bio bug in the dm-thinp target's process_deferred_bios\n   error path\n\n - Fix corruption due to non-atomic transaction commit which allowed a\n   metadata superblock to be written before all other metadata was\n   successfully written -- this is common to all targets that use the\n   persistent-data library's transaction manager (dm-thinp, dm-cache and\n   dm-era).\n\n - Various small cleanups in the DM core\n\n - Add the dm-era target which is useful for keeping track of which\n   blocks were written within a user defined period of time called an\n   'era'.  Use cases include tracking changed blocks for backup\n   software, and partially invalidating the contents of a cache to\n   restore cache coherency after rolling back a vendor snapshot.\n\n - Improve the on-disk layout of multithreaded writes to the\n   dm-thin-pool by splitting the pool's deferred bio list to be a\n   per-thin device list and then sorting that list using an rb_tree.\n   The subsequent read throughput of the data written via multiple\n   threads improved by ~70%.\n\n - Simplify the multipath target's handling of queuing IO by pushing\n   requests back to the request queue rather than queueing the IO\n   internally.\n\n* tag 'dm-3.15-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm: (24 commits)\n  dm cache: fix a lock-inversion\n  dm thin: sort the per thin deferred bios using an rb_tree\n  dm thin: use per thin device deferred bio lists\n  dm thin: simplify pool_is_congested\n  dm thin: fix dangling bio in process_deferred_bios error path\n  dm mpath: print more useful warnings in multipath_message()\n  dm-mpath: do not activate failed paths\n  dm mpath: remove extra nesting in map function\n  dm mpath: remove map_io()\n  dm mpath: reduce memory pressure when requeuing\n  dm mpath: remove process_queued_ios()\n  dm mpath: push back requests instead of queueing\n  dm table: add dm_table_run_md_queue_async\n  dm mpath: do not call pg_init when it is already running\n  dm: use RCU_INIT_POINTER instead of rcu_assign_pointer in __unbind\n  dm: stop using bi_private\n  dm: remove dm_get_mapinfo\n  dm: make dm_table_alloc_md_mempools static\n  dm: take care to copy the space map roots before locking the superblock\n  dm transaction manager: fix corruption due to non-atomic transaction commit\n  ... Merge tag 'iommu-updates-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU upates from Joerg Roedel:\n \"This time a few more updates queued up.\n\n   - Rework VT-d code to support ACPI devices\n\n   - Improvements for memory and PCI hotplug support in the VT-d driver\n\n   - Device-tree support for OMAP IOMMU\n\n   - Convert OMAP IOMMU to use devm_* interfaces\n\n   - Fixed PASID support for AMD IOMMU\n\n   - Other random cleanups and fixes for OMAP, ARM-SMMU and SHMOBILE\n     IOMMU\n\n  Most of the changes are in the VT-d driver because some rework was\n  necessary for better hotplug and ACPI device support\"\n\n* tag 'iommu-updates-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu: (75 commits)\n  iommu/vt-d: Fix error handling in ANDD processing\n  iommu/vt-d: returning free pointer in get_domain_for_dev()\n  iommu/vt-d: Only call dmar_acpi_dev_scope_init() if DRHD units present\n  iommu/vt-d: Check for NULL pointer in dmar_acpi_dev_scope_init()\n  iommu/amd: Fix logic to determine and checking max PASID\n  iommu/vt-d: Include ACPI devices in iommu=pt\n  iommu/vt-d: Finally enable translation for non-PCI devices\n  iommu/vt-d: Remove to_pci_dev() in intel_map_page()\n  iommu/vt-d: Remove pdev from intel_iommu_attach_device()\n  iommu/vt-d: Remove pdev from iommu_no_mapping()\n  iommu/vt-d: Make domain_add_dev_info() take struct device\n  iommu/vt-d: Make domain_remove_one_dev_info() take struct device\n  iommu/vt-d: Rename 'hwdev' variables to 'dev' now that that's the norm\n  iommu/vt-d: Remove some pointless to_pci_dev() calls\n  iommu/vt-d: Make get_valid_domain_for_dev() take struct device\n  iommu/vt-d: Make iommu_should_identity_map() take struct device\n  iommu/vt-d: Handle RMRRs for non-PCI devices\n  iommu/vt-d: Make get_domain_for_dev() take struct device\n  iommu/vt-d: Make domain_context_mapp{ed,ing}() take struct device\n  iommu/vt-d: Make device_to_iommu() cope with non-PCI devices\n  ... Merge branch 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging\n\nPull hwmon updates from Jean Delvare:\n \"This includes a number of driver conversions to\n  devm_hwmon_device_register_with_groups, a few cleanups, and\n  support for the ITE IT8623E\"\n\n* 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging:\n  hwmon: (it87) Add support for IT8623E\n  hwmon: (it87) Fix IT8603E define name\n  hwmon: (lm90) Convert to use hwmon_device_register_with_groups\n  hwmon: (lm90) Create all sysfs groups in one call\n  hwmon: (lm90) Always use the dev variable in the probe function\n  hwmon: (lm90) Create most optional attributes with sysfs_create_group\n  hwmon: Avoid initializing the same field twice\n  hwmon: (pc87360) Avoid initializing the same field twice\n  hwmon: (lm80) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (adm1021) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (lm63) Avoid initializing the same field twice\n  hwmon: (lm63) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (lm63) Create all sysfs groups in one call\n  hwmon: (lm63) Introduce 'dev' variable to point to client->dev\n  hwmon: (lm63) Add additional sysfs group for temp2_type attribute\n  hwmon: (f71805f) Fix author's address Merge tag 'clk-for-linus-3.15' of git://git.linaro.org/people/mike.turquette/linux\n\nPull clock framework changes from Mike Turquette:\n \"The clock framework changes for 3.15 look similar to past pull\n  requests.  Mostly clock driver updates, more Device Tree support in\n  the form of common functions useful across platforms and a handful of\n  features and fixes to the framework core\"\n\n* tag 'clk-for-linus-3.15' of git://git.linaro.org/people/mike.turquette/linux: (86 commits)\n  clk: shmobile: fix setting paretn clock rate\n  clk: shmobile: rcar-gen2: fix lb/sd0/sd1/sdh clock parent to pll1\n  clk: Fix minor errors in of_clk_init() function comments\n  clk: reverse default clk provider initialization order in of_clk_init()\n  clk: sirf: update copyright years to 2014\n  clk: mmp: try to use closer one when do round rate\n  clk: mmp: fix the wrong calculation formula\n  clk: mmp: fix wrong mask when calculate denominator\n  clk: st: Adds quadfs clock binding\n  clk: st: Adds clockgen-vcc and clockgen-mux clock binding\n  clk: st: Adds clockgen clock binding\n  clk: st: Adds divmux and prediv clock binding\n  clk: st: Support for A9 MUX clocks\n  clk: st: Support for ClockGenA9/DDR/GPU\n  clk: st: Support for QUADFS inside ClockGenB/C/D/E/F\n  clk: st: Support for VCC-mux and MUX clocks\n  clk: st: Support for PLLs inside ClockGenA(s)\n  clk: st: Support for DIVMUX and PreDiv Clocks\n  clk: support hardware-specific debugfs entries\n  clk: s2mps11: Use of_get_child_by_name\n  ... Merge tag 'pwm/for-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm\n\nPull pwm changes from Thierry Reding:\n \"The legacy HAVE_PWM Kconfig symbol is finally being retired.  Thanks a\n  lot to Sascha Hauer for doing that.\n\n  Three new drivers are added: Freescale FTM, Cirrus Logic CLPS711X and\n  Intel Low Power Subsystem.\n\n  An assortment of fixes and cleanups rounds things off for this release\n  cycle\"\n\n* tag 'pwm/for-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm:\n  pwm: pxa: Constify OF match table\n  pwm: pxa: Fix typo \"pwm\" -> \"PWM\"\n  Revert \"pwm: pxa: Use of_match_ptr()\"\n  pwm: add support for Intel Low Power Subsystem PWM\n  pwm: Add CLPS711X PWM support\n  pwm: atmel: correct CDTY calculation\n  pwm: atmel: Fix polarity handling\n  Documentation: Add device tree bindings for Freescale FTM PWM.\n  pwm: Add Freescale FTM PWM driver support\n  pwm: pxa: Use of_match_ptr()\n  pwm: samsung: Use SIMPLE_DEV_PM_OPS macro\n  pwm: renesas-tpu: Add dependency on HAS_IOMEM\n  pwm: Remove obsolete HAVE_PWM Kconfig symbol Merge tag 'tags/cleanup2-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC late cleanups from Arnd Bergmann:\n \"These could not be part of the first cleanup branch, because they\n  either came too late in the cycle, or they have dependencies on other\n  branches.  Important changes are:\n\n   - The integrator platform is almost multiplatform capable after some\n     reorganization (Linus Walleij)\n   - Minor cleanups on Zynq (Michal Simek)\n   - Lots of changes for Exynos and other Samsung platforms, including\n     further preparations for multiplatform support and the clocks\n     bindings are rearranged\"\n\n* tag 'tags/cleanup2-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (54 commits)\n  devicetree: fix newly added exynos sata bindings\n  ARM: EXYNOS: Fix compilation error in cpuidle.c\n  ARM: S5P64X0: Explicitly include linux/serial_s3c.h in mach/pm-core.h\n  ARM: EXYNOS: Remove hardware.h file\n  ARM: SAMSUNG: Remove hardware.h inclusion\n  ARM: S3C24XX: Remove invalid code from hardware.h\n  dt-bindings: clock: Move exynos-audss-clk.h to dt-bindings/clock\n  ARM: dts: Keep some essential LDOs enabled for arndale-octa board\n  ARM: dts: Disable MDMA1 node for arndale-octa board\n  ARM: S3C64XX: Fix build for implicit serial_s3c.h inclusion\n  serial: s3c: Fix build of header without serial_core.h preinclusion\n  ARM: EXYNOS: Allow wake-up using GIC interrupts\n  ARM: EXYNOS: Stop using legacy Samsung PM code\n  ARM: EXYNOS: Remove PM initcalls and useless indirection\n  ARM: EXYNOS: Fix abuse of CONFIG_PM\n  ARM: SAMSUNG: Move s3c_pm_check_* prototypes to plat/pm-common.h\n  ARM: SAMSUNG: Move common save/restore helpers to separate file\n  ARM: SAMSUNG: Move Samsung PM debug code into separate file\n  ARM: SAMSUNG: Consolidate PM debug functions\n  ARM: SAMSUNG: Use debug_ll_addr() to get UART base address\n  ... Merge tag 'sh-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC sh driver change from Arnd Bergmann:\n \"The drivers/sh subdirectory used to get merged through the SH\n  architecture tree, but things are in flux there and some of the\n  drivers are shared with ARM shmobile, we have picked it up for the\n  time being.\n\n  There is only one trivial patch from Laurent Pinchart this time\"\n\n* tag 'sh-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  sh: intc: Enable driver compilation with COMPILE_TEST Merge tag 'drivers-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC driver changes from Arnd Bergmann:\n \"These changes are mostly for ARM specific device drivers that either\n  don't have an upstream maintainer, or that had the maintainer ask us\n  to pick up the changes to avoid conflicts.\n\n  A large chunk of this are clock drivers (bcm281xx, exynos, versatile,\n  shmobile), aside from that, reset controllers for STi as well as a\n  large rework of the Marvell Orion/EBU watchdog driver are notable\"\n\n* tag 'drivers-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (99 commits)\n  Revert \"dts: socfpga: Add DTS entry for adding the stmmac glue layer for stmmac.\"\n  Revert \"net: stmmac: Add SOCFPGA glue driver\"\n  ARM: shmobile: r8a7791: Fix SCIFA3-5 clocks\n  ARM: STi: Add reset controller support to mach-sti Kconfig\n  drivers: reset: stih416: add softreset controller\n  drivers: reset: stih415: add softreset controller\n  drivers: reset: Reset controller driver for STiH416\n  drivers: reset: Reset controller driver for STiH415\n  drivers: reset: STi SoC system configuration reset controller support\n  dts: socfpga: Add sysmgr node so the gmac can use to reference\n  dts: socfpga: Add support for SD/MMC on the SOCFPGA platform\n  reset: Add optional resets and stubs\n  ARM: shmobile: r7s72100: fix bus clock calculation\n  Power: Reset: Generalize qnap-poweroff to work on Synology devices.\n  dts: socfpga: Update clock entry to support multiple parents\n  ARM: socfpga: Update socfpga_defconfig\n  dts: socfpga: Add DTS entry for adding the stmmac glue layer for stmmac.\n  net: stmmac: Add SOCFPGA glue driver\n  watchdog: orion_wdt: Use %pa to print 'phys_addr_t'\n  drivers: cci: Export CCI PMU revision\n  ... Merge tag 'dt-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC device tree changes from Arnd Bergmann:\n \"A large part of the arm-soc patches are nowadays DT changes, adding\n  support for new SoCs, boards and devices without changing kernel\n  source.  The plan is still to move the devicetree files out of the\n  kernel tree and reduce the amount of churn going on here, but we keep\n  finding reasons to delay doing that.\n\n  Changes are really all over the place, with little sticking out\n  particularly.  We have contributions from a total of 116 people in\n  this branch.\n\n  Unfortunately, the size of this branch also causes a significant\n  number of conflicts at the moment, typically when subsystem\n  maintainers merge patches that change the driver at the same time as\n  the dts files.  In most cases this could be avoided because the dts\n  changes are supposed to be compatible in both ways, and we are asking\n  everyone to send ARM dts changes through our tree only\"\n\n* tag 'dt-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (541 commits)\n  dts: stmmac: Document the clocks property in the stmmac base document\n  dts: socfpga: Add DTS entry for adding the stmmac glue layer for stmmac.\n  ARM: STi: stih41x: Add support for the FSM Serial Flash Controller\n  ARM: STi: stih416: Add support for the FSM Serial Flash Controller\n  ARM: tegra: fix Dalmore pinctrl configuration\n  ARM: dts: keystone: use common \"ti,keystone\" compatible instead of -evm\n  ARM: dts: k2hk-evm: set ubifs partition size for 512M NAND\n  ARM: dts: Build all keystone dt blobs\n  ARM: dts: keystone: Fix control register range for clktsip\n  ARM: dts: keystone: Fix domain register range for clkfftc1\n  ARM: dts: bcm28155-ap: leave camldo1 on to fix reboot\n  ARM: dts: add bcm590xx pmu support and enable for bcm28155-ap\n  ARM: dts: bcm21664: Add device tree files.\n  ARM: DT: bcm21664: Device tree bindings\n  ARM: efm32: properly namespace i2c location property\n  ARM: efm32: fix unit address part in USART2 device nodes' names\n  ARM: mvebu: Enable NAND controller in Armada 385-DB\n  ARM: mvebu: Add support for NAND controller in Armada 38x SoC\n  ARM: mvebu: Add the Core Divider clock to Armada 38x SoCs\n  ARM: mvebu: Add a 2 GHz fixed-clock on Armada 38x SoCs\n  ... Merge tag 'boards-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC board changes from Arnd Bergmann:\n \"As we continue to replace board files with device tree descriptions,\n  this part of the ARM support is getting smaller.  We have basically\n  just defconfig changes here this time, and a significant number of\n  Renesas shmobile changes, as Renesas is still in the process of\n  deprecating board file support\"\n\n* tag 'boards-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (92 commits)\n  ARM: enable fhandle in multi_v7_defconfig\n  ARM: tegra: enable fhandle in tegra_defconfig\n  ARM: update multi_v7_defconfig for Tegra\n  ARM: add Marvell Dove and some drivers to multi_v7 defconfig\n  ARM: fix duplicate symbols in multi_v5_defconfig\n  ARM: pxa: add gpio keys information\n  ARM: tegra: defconfig updates\n  ARM: config: keystone: enable AEMIF/NAND support\n  ARM: qcom: Enable basic support for Qualcomm platforms in multi_v7_defconfig\n  ARM: kirkwood: Add HP T5325 devices to {multi|mvebu}_v5_defconfig\n  ARM: config: Add mvebu_v5_defconfig\n  ARM: config: Add a multi_v5_defconfig\n  ARM: shmobile: r7s72100: update defconfig for I2C usage\n  ARM: shmobile: Remove Lager DT reference legacy clock bits\n  ARM: shmobile: Remove Koelsch DT reference legacy clock bits\n  ARM: shmobile: Remove KZM9D board code\n  ARM: mvebu: update defconfigs for Armada 375 and 38x\n  ARM: dove: Enable watchdog support in the defconfig\n  ARM: mvebu: Enable watchdog support in defconfig\n  ARM: config: keystone: enable led support\n  ... Merge tag 'soc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC specific changes from Arnd Bergmann:\n \"Lots of changes specific to one of the SoC families.  Some that stick\n  out are:\n\n   - mach-qcom gains new features, most importantly SMP support for the\n     newer chips (Stephen Boyd, Rohit Vaswani)\n   - mvebu gains support for three new SoCs: Armada 375, 380 and 385\n     (Thomas Petazzoni and Free-electrons team)\n   - SMP support for Rockchips (Heiko Stübner)\n   - Lots of i.MX changes (Shawn Guo)\n   - Added support for BCM5301x SoC (Hauke Mehrtens)\n   - Multiplatform support for Marvell Kirkwood and Dove (Andrew Lunn\n     and Sebastian Hesselbarth doing the final part of a long journey)\n   - Unify davinci platforms and remove obsolete ones (Sekhar Nori, Arnd\n     Bergmann)\"\n\n* tag 'soc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (126 commits)\n  ARM: sunxi: Select HAVE_ARM_ARCH_TIMER\n  ARM: cache-tauros2: remove ARMv6 code\n  ARM: mvebu: don't select CONFIG_NEON\n  ARM: davinci: fix DT booting with default defconfig\n  ARM: configs: bcm_defconfig: enable bcm590xx regulator support\n  ARM: davinci: remove tnetv107x support\n  MAINTAINERS: Update ARM STi maintainers\n  ARM: restrict BCM_KONA_UART to ARCH_BCM_MOBILE\n  ARM: bcm21664: Add board support.\n  ARM: sunxi: Add the new watchog compatibles to the reboot code\n  ARM: enable ARM_HAS_SG_CHAIN for multiplatform\n  ARM: davinci: remove da8xx_omapl_defconfig\n  ARM: davinci: da8xx: fix multiple watchdog device registration\n  ARM: davinci: add da8xx specific configs to davinci_all_defconfig\n  ARM: davinci: enable da8xx build concurrently with older devices\n  ARM: BCM5301X: workaround suppress fault\n  ARM: BCM5301X: add early debugging support\n  ARM: BCM5301X: initial support for the BCM5301X/BCM470X SoCs with ARM CPU\n  ARM: mach-bcm: Remove GENERIC_TIME\n  ARM: shmobile: APMU: Fix warnings due to improper printk formats\n  ... Merge tag 'cleanup-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC cleanups from Arnd Bergmann:\n \"These cleanup patches are mainly move stuff around and should all be\n  harmless.  They are mainly split out so that other branches can be\n  based on top to avoid conflicts.\n\n  Notable changes are:\n\n   - We finally remove all mach/timex.h, after CLOCK_TICK_RATE is no\n     longer used (Uwe Kleine-König)\n   - The Qualcomm MSM platform is split out into legacy mach-msm and\n     new-style mach-qcom, to allow easier maintainance of the new\n     hardware support without regressions (Kumar Gala)\n   - A rework of some of the Kconfig logic to simplify multiplatform\n     support (Rob Herring)\n   - Samsung Exynos gets closer to supporting multiplatform (Sachin\n     Kamat and others)\n   - mach-bcm3528 gets merged into mach-bcm (Stephen Warren)\n   - at91 gains some common clock framework support (Alexandre Belloni,\n     Jean-Jacques Hiblot and other French people)\"\n\n* tag 'cleanup-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (89 commits)\n  ARM: hisi: select HAVE_ARM_SCU only for SMP\n  ARM: efm32: allow uncompress debug output\n  ARM: prima2: build reset code standalone\n  ARM: at91: add PWM clock\n  ARM: at91: move sam9261 SoC to common clk\n  ARM: at91: prepare common clk transition for sam9261 SoC\n  ARM: at91: updated the at91_dt_defconfig with support for the ADS7846\n  ARM: at91: dt: sam9261: Device Tree support for the at91sam9261ek\n  ARM: at91: dt: defconfig: Added the sam9261 to the list of DT-enabled SOCs\n  ARM: at91: dt: Add at91sam9261 dt SoC support\n  ARM: at91: switch sam9rl to common clock framework\n  ARM: at91/dt: define main clk frequency of at91sam9rlek\n  ARM: at91/dt: define at91sam9rl clocks\n  ARM: at91: prepare common clk transition for sam9rl SoCs\n  ARM: at91: prepare sam9 dt boards transition to common clk\n  ARM: at91: dt: sam9rl: Device Tree for the at91sam9rlek\n  ARM: at91/defconfig: Add the sam9rl to the list of DT-enabled SOCs\n  ARM: at91: Add at91sam9rl DT SoC support\n  ARM: at91: prepare at91sam9rl DT transition\n  ARM: at91/defconfig: refresh at91sam9260_9g20_defconfig\n  ... Merge tag 'fixes-non-critical-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC non-critical bug fixes from Arnd Bergmann:\n \"Lots of isolated bug fixes that were not found to be important enough\n  to be submitted before the merge window or backported into stable\n  kernels.\n\n  The vast majority of these came out of Arnd's randconfig testing and\n  just prevents running into build-time bugs in configurations that we\n  do not care about in practice\"\n\n* tag 'fixes-non-critical-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (75 commits)\n  ARM: at91: fix a typo\n  ARM: moxart: fix CPU selection\n  ARM: tegra: fix board DT pinmux setup\n  ARM: nspire: Fix compiler warning\n  IXP4xx: Fix DMA masks.\n  Revert \"ARM: ixp4xx: Make dma_set_coherent_mask common, correct implementation\"\n  IXP4xx: Fix Goramo Multilink GPIO conversion.\n  Revert \"ARM: ixp4xx: fix gpio rework\"\n  ARM: tegra: make debug_ll code build for ARMv6\n  ARM: sunxi: fix build for THUMB2_KERNEL\n  ARM: exynos: add missing include of linux/module.h\n  ARM: exynos: fix l2x0 saved regs handling\n  ARM: samsung: select CRC32 for SAMSUNG_PM_CHECK\n  ARM: samsung: select ATAGS where necessary\n  ARM: samsung: fix SAMSUNG_PM_DEBUG Kconfig logic\n  ARM: samsung: allow serial driver to be disabled\n  ARM: s5pv210: enable IDE support in MACH_TORBRECK\n  ARM: s5p64x0: fix building with only one soc type\n  ARM: s3c64xx: select power domains only when used\n  ARM: s3c64xx: MACH_SMDK6400 needs HSMMC1\n  ... Merge branch 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull ARM changes from Russell King:\n\n - Perf updates from Will Deacon:\n   - Support for Qualcomm Krait processors (run perf on your phone!)\n   - Support for Cortex-A12 (run perf stat on your FPGA!)\n   - Support for perf_sample_event_took, allowing us to automatically decrease\n     the sample rate if we can't handle the PMU interrupts quickly enough\n     (run perf record on your FPGA!).\n\n - Basic uprobes support from David Long:\n     This patch series adds basic uprobes support to ARM. It is based on\n     patches developed earlier by Rabin Vincent. That approach of adding\n     hooks into the kprobes instruction parsing code was not well received.\n     This approach separates the ARM instruction parsing code in kprobes out\n     into a separate set of functions which can be used by both kprobes and\n     uprobes. Both kprobes and uprobes then provide their own semantic action\n     tables to process the results of the parsing.\n\n - ARMv7M (microcontroller) updates from Uwe Kleine-König\n\n - OMAP DMA updates (recently added Vinod's Ack even though they've been\n   sitting in linux-next for a few months) to reduce the reliance of\n   omap-dma on the code in arch/arm.\n\n - SA11x0 changes from Dmitry Eremin-Solenikov and Alexander Shiyan\n\n - Support for Cortex-A12 CPU\n\n - Align support for ARMv6 with ARMv7 so they can cooperate better in a\n   single zImage.\n\n - Addition of first AT_HWCAP2 feature bits for ARMv8 crypto support.\n\n - Removal of IRQ_DISABLED from various ARM files\n\n - Improved efficiency of virt_to_page() for single zImage\n\n - Patch from Ulf Hansson to permit runtime PM callbacks to be available for\n   AMBA devices for suspend/resume as well.\n\n - Finally kill asm/system.h on ARM.\n\n* 'for-linus' of git://ftp.arm.linux.org.uk/~rmk/linux-arm: (89 commits)\n  dmaengine: omap-dma: more consolidation of CCR register setup\n  dmaengine: omap-dma: move IRQ handling to omap-dma\n  dmaengine: omap-dma: move register read/writes into omap-dma.c\n  ARM: omap: dma: get rid of 'p' allocation and clean up\n  ARM: omap: move dma channel allocation into plat-omap code\n  ARM: omap: dma: get rid of errata global\n  ARM: omap: clean up DMA register accesses\n  ARM: omap: remove almost-const variables\n  ARM: omap: remove references to disable_irq_lch\n  dmaengine: omap-dma: cleanup errata 3.3 handling\n  dmaengine: omap-dma: provide register read/write functions\n  dmaengine: omap-dma: use cached CCR value when enabling DMA\n  dmaengine: omap-dma: move barrier to omap_dma_start_desc()\n  dmaengine: omap-dma: move clnk_ctrl setting to preparation functions\n  dmaengine: omap-dma: improve efficiency loading C.SA/C.EI/C.FI registers\n  dmaengine: omap-dma: consolidate clearing channel status register\n  dmaengine: omap-dma: move CCR buffering disable errata out of the fast path\n  dmaengine: omap-dma: provide register definitions\n  dmaengine: omap-dma: consolidate setup of CCR\n  dmaengine: omap-dma: consolidate setup of CSDP\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rkuo/linux-hexagon-kernel\n\nPull Hexagon updates from Richard Kuo:\n \"Mostly cleanups for compilation with allmodconfig and some other\n  miscellaneous fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rkuo/linux-hexagon-kernel:\n  Hexagon: update CR year for elf.h\n  Hexagon: remove SP macro\n  Hexagon:  set ELF_EXEC_PAGESIZE to PAGE_SIZE\n  Hexagon: set the e_flags in user regset view for core dumps\n  Hexagon: fix atomic_set\n  Hexagon: add screen_info for VGA_CONSOLE\n  hexagon: correct type on pgd copy\n  smp, hexagon: kill SMP single function call interrupt\n  arch: hexagon: include: asm: add generic macro 'mmiowb' in \"io.h\"\n  arch: hexagon: kernel: hexagon_ksyms.c: export related symbols which various modules need\n  arch: hexagon: kernel: reset.c: use function pointer instead of function for pm_power_off and export it\n  arch: hexagon: include: asm: add \"vga.h\" in Kbuild\n  arch: hexagon: include: asm: Kbuild: add generic \"serial.h\" in Kbuild\n  arch: hexagon: include: uapi: asm: setup.h add swith macro __KERNEL__\n  arch: hexagon: include: asm: add prefix \"hvm[ci]_\" for all enum members in \"hexagon_vm.h\"\n  arch: hexagon: Kconfig: add HAVE_DMA_ATTR in Kconfig and remove \"linux/dma-mapping.h\" from \"asm/dma-mapping.h\"\n  arch: hexagon: kernel: add export symbol function __delay()\n  hexagon: include: asm: kgdb: extend DBG_MAX_REG_NUM for \"cs0/1\"\n  hexagon: kernel: kgdb: include related header for pass compiling.\n  hexagon: kernel: remove useless variables 'dn', 'r' and 'err' in time_init_deferred() in \"time.c\" Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu\n\nPull m68k fixes from Greg Ungerer:\n \"Just a couple of fixes.  Clean up compile warnings by using correct\n  types in function args, and clean out the removed CONFIG_MTD_PARTITIONS\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu:\n  m68knommu: fix arg types for outs* functions\n  m68k : Kill CONFIG_MTD_PARTITIONS Merge branch 'topic/exynos' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull exynos media updates from Mauro Carvalho Chehab:\n \"These are the remaining patches I have for the merge windows.  It\n  basically adds a new sensor and adds the needed DT bits for it to\n  work\"\n\n* 'topic/exynos' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  [media] s5p-fimc: Remove reference to outdated macro\n  [media] s5p-jpeg: Fix broken indentation in jpeg-regs.h\n  [media] exynos4-is: Add the FIMC-IS ISP capture DMA driver\n  [media] exynos4-is: Add support for asynchronous subdevices registration\n  [media] exynos4-is: Add clock provider for the SCLK_CAM clock outputs\n  [media] exynos4-is: Use external s5k6a3 sensor driver\n  [media] V4L: s5c73m3: Add device tree support\n  [media] V4L: Add driver for s5k6a3 image sensor\n  [media] Documentation: devicetree: Update Samsung FIMC DT binding\n  [media] Documentation: dt: Add binding documentation for S5C73M3 camera\n  [media] Documentation: dt: Add binding documentation for S5K6A3 image sensor Merge tag 'fbdev-main-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull fbdev changes from Tomi Valkeinen:\n \"Various fbdev fixes and improvements, but nothing big\"\n\n* tag 'fbdev-main-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux: (38 commits)\n  fbdev: Make the switch from generic to native driver less alarming\n  Video: atmel: avoid the id of fix screen info is overwritten\n  video: imxfb: Add DT default contrast control register property.\n  video: atmel_lcdfb: ensure the hardware is initialized with the correct mode\n  fbdev: vesafb: add dev->remove() callback\n  fbdev: efifb: add dev->remove() callback\n  video: pxa3xx-gcu: switch to devres functions\n  video: pxa3xx-gcu: provide an empty .open call\n  video: pxa3xx-gcu: pass around struct device *\n  video: pxa3xx-gcu: rename some symbols\n  sisfb: fix 1280x720 resolution support\n  video: fbdev: uvesafb: Remove impossible code path in uvesafb_init_info\n  video: fbdev: uvesafb: Remove redundant NULL check in uvesafb_remove\n  fbdev: FB_OPENCORES should depend on HAS_DMA\n  OMAPDSS: convert pixel clock to common videomode style\n  OMAPDSS: Remove unused get_context_loss_count support\n  OMAPDSS: use DISPC register to detect context loss\n  video: da8xx-fb: Use \"SIMPLE_DEV_PM_OPS\" macro\n  video: imxfb: Convert to SIMPLE_DEV_PM_OPS\n  video: imxfb: Resolve mismatch between backlight/contrast\n  ... Merge tag 'ktest-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-ktest\n\nPull single ktest fix from Steven Rostedt:\n \"This just contains a single update by Satoru Takeuchi, which adds\n  CLOSE_CONSOLE_SIGNAL to the kvm.conf file, as the kvm guest requires a\n  different signal than a normal console uses\"\n\n* tag 'ktest-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-ktest:\n  ktest: Set CLOSE_CONSOLE_SIGNAL in the kvm.conf Merge tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random\n\nPull /dev/random changes from Ted Ts'o:\n \"A number of cleanups plus support for the RDSEED instruction, which\n  will be showing up in Intel Broadwell CPU's\"\n\n* tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random:\n  random: Add arch_has_random[_seed]()\n  random: If we have arch_get_random_seed*(), try it before blocking\n  random: Use arch_get_random_seed*() at init time and once a second\n  x86, random: Enable the RDSEED instruction\n  random: use the architectural HWRNG for the SHA's IV in extract_buf()\n  random: clarify bits/bytes in wakeup thresholds\n  random: entropy_bytes is actually bits\n  random: simplify accounting code\n  random: tighten bound on random_read_wakeup_thresh\n  random: forget lock in lockless accounting\n  random: simplify accounting logic\n  random: fix comment on \"account\"\n  random: simplify loop in random_read\n  random: fix description of get_random_bytes\n  random: fix comment on proc_do_uuid\n  random: fix typos / spelling errors in comments Merge tag 'xfs-for-linus-3.15-rc1' of git://oss.sgi.com/xfs/xfs\n\nPull xfs update from Dave Chinner:\n \"There are a couple of new fallocate features in this request - it was\n  decided that it was easiest to push them through the XFS tree using\n  topic branches and have the ext4 support be based on those branches.\n  Hence you may see some overlap with the ext4 tree merge depending on\n  how they including those topic branches into their tree.  Other than\n  that, there is O_TMPFILE support, some cleanups and bug fixes.\n\n  The main changes in the XFS tree for 3.15-rc1 are:\n\n   - O_TMPFILE support\n   - allowing AIO+DIO writes beyond EOF\n   - FALLOC_FL_COLLAPSE_RANGE support for fallocate syscall and XFS\n     implementation\n   - FALLOC_FL_ZERO_RANGE support for fallocate syscall and XFS\n     implementation\n   - IO verifier cleanup and rework\n   - stack usage reduction changes\n   - vm_map_ram NOIO context fixes to remove lockdep warings\n   - various bug fixes and cleanups\"\n\n* tag 'xfs-for-linus-3.15-rc1' of git://oss.sgi.com/xfs/xfs: (34 commits)\n  xfs: fix directory hash ordering bug\n  xfs: extra semi-colon breaks a condition\n  xfs: Add support for FALLOC_FL_ZERO_RANGE\n  fs: Introduce FALLOC_FL_ZERO_RANGE flag for fallocate\n  xfs: inode log reservations are still too small\n  xfs: xfs_check_page_type buffer checks need help\n  xfs: avoid AGI/AGF deadlock scenario for inode chunk allocation\n  xfs: use NOIO contexts for vm_map_ram\n  xfs: don't leak EFSBADCRC to userspace\n  xfs: fix directory inode iolock lockdep false positive\n  xfs: allocate xfs_da_args to reduce stack footprint\n  xfs: always do log forces via the workqueue\n  xfs: modify verifiers to differentiate CRC from other errors\n  xfs: print useful caller information in xfs_error_report\n  xfs: add xfs_verifier_error()\n  xfs: add helper for updating checksums on xfs_bufs\n  xfs: add helper for verifying checksums on xfs_bufs\n  xfs: Use defines for CRC offsets in all cases\n  xfs: skip pointless CRC updates after verifier failures\n  xfs: Add support FALLOC_FL_COLLAPSE_RANGE for fallocate\n  ... Merge tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 updates from Ted Ts'o:\n \"Major changes for 3.14 include support for the newly added ZERO_RANGE\n  and COLLAPSE_RANGE fallocate operations, and scalability improvements\n  in the jbd2 layer and in xattr handling when the extended attributes\n  spill over into an external block.\n\n  Other than that, the usual clean ups and minor bug fixes\"\n\n* tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4: (42 commits)\n  ext4: fix premature freeing of partial clusters split across leaf blocks\n  ext4: remove unneeded test of ret variable\n  ext4: fix comment typo\n  ext4: make ext4_block_zero_page_range static\n  ext4: atomically set inode->i_flags in ext4_set_inode_flags()\n  ext4: optimize Hurd tests when reading/writing inodes\n  ext4: kill i_version support for Hurd-castrated file systems\n  ext4: each filesystem creates and uses its own mb_cache\n  fs/mbcache.c: doucple the locking of local from global data\n  fs/mbcache.c: change block and index hash chain to hlist_bl_node\n  ext4: Introduce FALLOC_FL_ZERO_RANGE flag for fallocate\n  ext4: refactor ext4_fallocate code\n  ext4: Update inode i_size after the preallocation\n  ext4: fix partial cluster handling for bigalloc file systems\n  ext4: delete path dealloc code in ext4_ext_handle_uninitialized_extents\n  ext4: only call sync_filesystm() when remounting read-only\n  fs: push sync_filesystem() down to the file system's remount_fs()\n  jbd2: improve error messages for inconsistent journal heads\n  jbd2: minimize region locked by j_list_lock in jbd2_journal_forget()\n  jbd2: minimize region locked by j_list_lock in journal_get_create_access()\n  ... Merge tag 'please-pull-pstore' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux\n\nPull pstore fixes from Tony Luck:\n \"Series of small bug fixes for pstore\"\n\n* tag 'please-pull-pstore' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux:\n  pstore: Fix memory leak when decompress using big_oops_buf\n  pstore: Fix buffer overflow while write offset equal to buffer size\n  pstore: Correct the max_dump_cnt clearing of ramoops\n  pstore: Fix NULL pointer fault if get NULL prz in ramoops_get_next_prz\n  pstore: skip zero size persistent ram buffer in traverse\n  pstore: clarify clearing of _read_cnt in ramoops_context Merge tag 'upstream-3.15-rc1' of git://git.infradead.org/linux-ubifs\n\nPull ubifs updates from Artem Bityutskiy:\n \"This pull request includes the 'ubiblock' driver which provides R/O\n  block access to UBI volumes.  It is useful for those who want to use\n  squashfs on top of raw flash devices.  UBI will provide bit-flip\n  handling and wear-levelling in this case (e.g., if there are other UBI\n  volumes with R/W UBIFS too).\n\n  The driver is actually pretty small and it is part of the UBI kernel\n  subsystem.  Delivered by Ezequiel Garcia, along with a piece of\n  documentation on the MTD web site and the user-space tool for creating\n  and removing block devices\"\n\n* tag 'upstream-3.15-rc1' of git://git.infradead.org/linux-ubifs:\n  UBI: block: Remove __initdata from ubiblock_param_ops\n  UBI: make UBI_IOCVOLCRBLK take a parameter for future usage\n  UBI: rename block device ioctls\n  UBI: block: Use ENOSYS as return value when CONFIG_UBIBLOCK=n\n  UBI: block: Add CONFIG_BLOCK dependency\n  UBI: block: Use 'u64' for the 64-bit dividend\n  UBI: block: Mark init-only symbol as __initdata\n  UBI: block: do not use term \"attach\"\n  UBI: R/O block driver on top of UBI volumes Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse\n\nPull fuse update from Miklos Szeredi:\n \"This series adds cached writeback support to fuse, improving write\n  throughput\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse:\n  fuse: fix \"uninitialized variable\" warning\n  fuse: Turn writeback cache on\n  fuse: Fix O_DIRECT operations vs cached writeback misorder\n  fuse: fuse_flush() should wait on writeback\n  fuse: Implement write_begin/write_end callbacks\n  fuse: restructure fuse_readpage()\n  fuse: Flush files on wb close\n  fuse: Trust kernel i_mtime only\n  fuse: Trust kernel i_size only\n  fuse: Connection bit for enabling writeback\n  fuse: Prepare to handle short reads\n  fuse: Linking file to inode helper Merge tag 'dlm-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm\n\nPull dlm updates from David Teigland:\n \"This set includes a couple trivial cleanups and changes recovery log\n  messages from DEBUG to INFO\"\n\n* tag 'dlm-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm:\n  dlm: use INFO for recovery messages\n  fs: Include appropriate header file in dlm/ast.c\n  dlm: silence a harmless use after free warning Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs changes from Chris Mason:\n \"This is a pretty long stream of bug fixes and performance fixes.\n\n  Qu Wenruo has replaced the btrfs async threads with regular kernel\n  workqueues.  We'll keep an eye out for performance differences, but\n  it's nice to be using more generic code for this.\n\n  We still have some corruption fixes and other patches coming in for\n  the merge window, but this batch is tested and ready to go\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs: (108 commits)\n  Btrfs: fix a crash of clone with inline extents's split\n  btrfs: fix uninit variable warning\n  Btrfs: take into account total references when doing backref lookup\n  Btrfs: part 2, fix incremental send's decision to delay a dir move/rename\n  Btrfs: fix incremental send's decision to delay a dir move/rename\n  Btrfs: remove unnecessary inode generation lookup in send\n  Btrfs: fix race when updating existing ref head\n  btrfs: Add trace for btrfs_workqueue alloc/destroy\n  Btrfs: less fs tree lock contention when using autodefrag\n  Btrfs: return EPERM when deleting a default subvolume\n  Btrfs: add missing kfree in btrfs_destroy_workqueue\n  Btrfs: cache extent states in defrag code path\n  Btrfs: fix deadlock with nested trans handles\n  Btrfs: fix possible empty list access when flushing the delalloc inodes\n  Btrfs: split the global ordered extents mutex\n  Btrfs: don't flush all delalloc inodes when we doesn't get s_umount lock\n  Btrfs: reclaim delalloc metadata more aggressively\n  Btrfs: remove unnecessary lock in may_commit_transaction()\n  Btrfs: remove the unnecessary flush when preparing the pages\n  Btrfs: just do dirty page flush for the inode with compression before direct IO\n  ... Merge tag 'gfs2-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw\n\nPull GFS2 updates from Steven Whitehouse:\n \"One of the main highlights this time, is not the patches themselves\n  but instead the widening contributor base.  It is good to see that\n  interest is increasing in GFS2, and I'd like to thank all the\n  contributors to this patch set.\n\n  In addition to the usual set of bug fixes and clean ups, there are\n  patches to improve inode creation performance when xattrs are required\n  and some improvements to the transaction code which is intended to\n  help improve scalability after further changes in due course.\n\n  Journal extent mapping is also updated to make it more efficient and\n  again, this is a foundation for future work in this area.\n\n  The maximum number of ACLs has been increased to 300 (for a 4k block\n  size) which means that even with a few additional xattrs from selinux,\n  everything should fit within a single fs block.\n\n  There is also a patch to bring GFS2's own copy of the writepages code\n  up to the same level as the core VFS.  Eventually we may be able to\n  merge some of this code, since it is fairly similar.\n\n  The other major change this time, is bringing consistency to the\n  printing of messages via fs_<level>, pr_<level> macros\"\n\n* tag 'gfs2-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw: (29 commits)\n  GFS2: Fix address space from page function\n  GFS2: Fix uninitialized VFS inode in gfs2_create_inode\n  GFS2: Fix return value in slot_get()\n  GFS2: inline function gfs2_set_mode\n  GFS2: Remove extraneous function gfs2_security_init\n  GFS2: Increase the max number of ACLs\n  GFS2: Re-add a call to log_flush_wait when flushing the journal\n  GFS2: Ensure workqueue is scheduled after noexp request\n  GFS2: check NULL return value in gfs2_ok_to_move\n  GFS2: Convert gfs2_lm_withdraw to use fs_err\n  GFS2: Use fs_<level> more often\n  GFS2: Use pr_<level> more consistently\n  GFS2: Move recovery variables to journal structure in memory\n  GFS2: global conversion to pr_foo()\n  GFS2: return -E2BIG if hit the maximum limits of ACLs\n  GFS2: Clean up journal extent mapping\n  GFS2: replace kmalloc - __vmalloc / memset 0\n  GFS2: Remove extra \"if\" in gfs2_log_flush()\n  fs: NULL dereference in posix_acl_to_xattr()\n  GFS2: Move log buffer accounting to transaction\n  ... Merge branch 'locks-3.15' of git://git.samba.org/jlayton/linux\n\nPull file locking updates from Jeff Layton:\n \"Highlights:\n\n   - maintainership change for fs/locks.c.  Willy's not interested in\n     maintaining it these days, and is OK with Bruce and I taking it.\n   - fix for open vs setlease race that Al ID'ed\n   - cleanup and consolidation of file locking code\n   - eliminate unneeded BUG() call\n   - merge of file-private lock implementation\"\n\n* 'locks-3.15' of git://git.samba.org/jlayton/linux:\n  locks: make locks_mandatory_area check for file-private locks\n  locks: fix locks_mandatory_locked to respect file-private locks\n  locks: require that flock->l_pid be set to 0 for file-private locks\n  locks: add new fcntl cmd values for handling file private locks\n  locks: skip deadlock detection on FL_FILE_PVT locks\n  locks: pass the cmd value to fcntl_getlk/getlk64\n  locks: report l_pid as -1 for FL_FILE_PVT locks\n  locks: make /proc/locks show IS_FILE_PVT locks as type \"FLPVT\"\n  locks: rename locks_remove_flock to locks_remove_file\n  locks: consolidate checks for compatible filp->f_mode values in setlk handlers\n  locks: fix posix lock range overflow handling\n  locks: eliminate BUG() call when there's an unexpected lock on file close\n  locks: add __acquires and __releases annotations to locks_start and locks_stop\n  locks: remove \"inline\" qualifier from fl_link manipulation functions\n  locks: clean up comment typo\n  locks: close potential race between setlease and open\n  MAINTAINERS: update entry for fs/locks.c Merge branch 'cross-rename' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull renameat2 system call from Miklos Szeredi:\n \"This adds a new syscall, renameat2(), which is the same as renameat()\n  but with a flags argument.\n\n  The purpose of extending rename is to add cross-rename, a symmetric\n  variant of rename, which exchanges the two files.  This allows\n  interesting things, which were not possible before, for example\n  atomically replacing a directory tree with a symlink, etc...  This\n  also allows overlayfs and friends to operate on whiteouts atomically.\n\n  Andy Lutomirski also suggested a \"noreplace\" flag, which disables the\n  overwriting behavior of rename.\n\n  These two flags, RENAME_EXCHANGE and RENAME_NOREPLACE are only\n  implemented for ext4 as an example and for testing\"\n\n* 'cross-rename' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  ext4: add cross rename support\n  ext4: rename: split out helper functions\n  ext4: rename: move EMLINK check up\n  ext4: rename: create ext4_renament structure for local vars\n  vfs: add cross-rename\n  vfs: lock_two_nondirectories: allow directory args\n  security: add flags to rename hooks\n  vfs: add RENAME_NOREPLACE flag\n  vfs: add renameat2 syscall\n  vfs: rename: use common code for dir and non-dir\n  vfs: rename: move d_move() up\n  vfs: add d_is_dir() Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media updates from Mauro Carvalho Chehab:\n \"The main set of series of patches for media subsystem, including:\n   - document RC sysfs class\n   - added an API to setup scancode to allow waking up systems using the\n     Remote Controller\n   - add API for SDR devices.  Drivers are still on staging\n   - some API improvements for getting EDID data from media\n     inputs/outputs\n   - new DVB frontend driver for drx-j (ATSC)\n   - one driver (it913x/it9137) got removed, in favor of an improvement\n     on another driver (af9035)\n   - added a skeleton V4L2 PCI driver at documentation\n   - added a dual flash driver (lm3646)\n   - added a new IR driver (img-ir)\n   - added an IR scancode decoder for the Sharp protocol\n   - some improvements at the usbtv driver, to allow its core to be\n     reused.\n   - added a new SDR driver (rtl2832u_sdr)\n   - added a new tuner driver (msi001)\n   - several improvements at em28xx driver to fix PM support, device\n     removal and to split the V4L2 specific bits into a separate\n     sub-driver\n   - one driver got converted to videobuf2 (s2255drv)\n   - the e4000 tuner driver now follows an improved binding model\n   - some fixes at V4L2 compat32 code\n   - several fixes and enhancements at videobuf2 code\n   - some cleanups at V4L2 API documentation\n   - usual driver enhancements, new board additions and misc fixups\"\n\n[ NOTE! This merge effective drops commit 4329b93b283c (\"of: Reduce\n  indentation in of_graph_get_next_endpoint\").\n\n  The of_graph_get_next_endpoint() function was moved and renamed by\n  commit fd9fdb78a9bf (\"[media] of: move graph helpers from\n  drivers/media/v4l2-core to drivers/of\").  It was originally called\n  v4l2_of_get_next_endpoint() and lived in the file\n  drivers/media/v4l2-core/v4l2-of.c.\n\n  In that original location, it was then fixed to support empty port\n  nodes by commit b9db140c1e46 (\"[media] v4l: of: Support empty port\n  nodes\"), and that commit clashes badly with the dropped \"Reduce\n  intendation\" commit.  I had to choose one or the other, and decided\n  that the \"Support empty port nodes\" commit was more important ]\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (426 commits)\n  [media] em28xx-dvb: fix PCTV 461e tuner I2C binding\n  Revert \"[media] em28xx-dvb: fix PCTV 461e tuner I2C binding\"\n  [media] em28xx: fix PCTV 290e LNA oops\n  [media] em28xx-dvb: fix PCTV 461e tuner I2C binding\n  [media] m88ds3103: fix bug on .set_tone()\n  [media] saa7134: fix WARN_ON during resume\n  [media] v4l2-dv-timings: add module name, description, license\n  [media] videodev2.h: add parenthesis around macro arguments\n  [media] saa6752hs: depends on CRC32\n  [media] si4713: fix Kconfig dependencies\n  [media] Sensoray 2255 uses videobuf2\n  [media] adv7180: free an interrupt on failure paths in init_device()\n  [media] e4000: make VIDEO_V4L2 dependency optional\n  [media] af9033: Don't export functions for the hardware filter\n  [media] af9035: use af9033 PID filters\n  [media] af9033: implement PID filter\n  [media] rtl2832_sdr: do not use dynamic stack allocation\n  [media] e4000: fix 32-bit build error\n  [media] em28xx-audio: make sure audio is unmuted on open()\n  [media] DocBook media: v4l2_format_sdr was renamed to v4l2_sdr_format\n  ... Merge branch 'linux_next' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac\n\nPull sb_edac patches from Mauro Carvalho Chehab:\n \"A couple sb_edac driver improvements, cleaning a little bit the amount\n  of data sent to dmesg, and fixing one error message\"\n\n* 'linux_next' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac:\n  sb_edac: mark MCE messages as KERN_DEBUG\n  sb_edac: use \"event\" instead of \"exception\" when MC wasnt signaled Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n \"The first round of updates for the input subsystem.\n\n  Just new drivers and existing driver fixes, no core changes except for\n  the new uinput IOCTL to allow userspace to fetch sysfs name of the\n  input device that was created\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input: (43 commits)\n  Input: edt-ft5x06 - add a missing condition\n  Input: appletouch - fix jumps when additional fingers are detected\n  Input: appletouch - implement sensor data smoothing\n  Input: add driver for SOC button array\n  Input: pm8xxx-vibrator - add DT match table\n  Input: pmic8xxx-pwrkey - migrate to DT\n  Input: pmic8xxx-keypad - migrate to DT\n  Input: pmic8xxx-keypad - migrate to regmap APIs\n  Input: pmic8xxx-keypad - migrate to devm_* APIs\n  Input: pmic8xxx-keypad - fix build by removing gpio configuration\n  Input: add new driver for ARM CLPS711X keypad\n  Input: edt-ft5x06 - add support for M09 firmware version\n  Input: edt-ft5x06 - ignore touchdown events\n  Input: edt-ft5x06 - adjust delays to conform datasheet\n  Input: edt-ft5x06 - add DT support\n  Input: edt-ft5x06 - several cleanups; no functional change\n  Input: appletouch - dial back fuzz setting\n  Input: remove obsolete tnetv107x drivers\n  Input: sirfsoc-onkey - set the capability of reporting KEY_POWER\n  Input: da9052_onkey - use correct register bit for key status\n  ... Merge tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband\n\nPull infiniband updates from Roland Dreier:\n \"Main batch of InfiniBand/RDMA changes for 3.15:\n\n   - The biggest change is core API extensions and mlx5 low-level driver\n     support for handling DIF/DIX-style protection information, and the\n     addition of PI support to the iSER initiator.  Target support will\n     be arriving shortly through the SCSI target tree.\n\n   - A nice simplification to the \"umem\" memory pinning library now that\n     we have chained sg lists.  Kudos to Yishai Hadas for realizing our\n     code didn't have to be so crazy.\n\n   - Another nice simplification to the sg wrappers used by qib, ipath\n     and ehca to handle their mapping of memory to adapter.\n\n   - The usual batch of fixes to bugs found by static checkers etc.\n     from intrepid people like Dan Carpenter and Yann Droneaud.\n\n   - A large batch of cxgb4, ocrdma, qib driver updates\"\n\n* tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband: (102 commits)\n  RDMA/ocrdma: Unregister inet notifier when unloading ocrdma\n  RDMA/ocrdma: Fix warnings about pointer <-> integer casts\n  RDMA/ocrdma: Code clean-up\n  RDMA/ocrdma: Display FW version\n  RDMA/ocrdma: Query controller information\n  RDMA/ocrdma: Support non-embedded mailbox commands\n  RDMA/ocrdma: Handle CQ overrun error\n  RDMA/ocrdma: Display proper value for max_mw\n  RDMA/ocrdma: Use non-zero tag in SRQ posting\n  RDMA/ocrdma: Memory leak fix in ocrdma_dereg_mr()\n  RDMA/ocrdma: Increment abi version count\n  RDMA/ocrdma: Update version string\n  be2net: Add abi version between be2net and ocrdma\n  RDMA/ocrdma: ABI versioning between ocrdma and be2net\n  RDMA/ocrdma: Allow DPP QP creation\n  RDMA/ocrdma: Read ASIC_ID register to select asic_gen\n  RDMA/ocrdma: SQ and RQ doorbell offset clean up\n  RDMA/ocrdma: EQ full catastrophe avoidance\n  RDMA/cxgb4: Disable DSGL use by default\n  RDMA/cxgb4: rx_data() needs to hold the ep mutex\n  ... Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull second round of hwmon updates from Guenter Roeck:\n \"Add support for AMD F16 M30h processor to k10temp driver.\n\n  This adds one more patch which had secondary dependencies.  The branch\n  point is arbitrary, but I did run a full set of build and qemu tests\n  on it.  While there are some new build failures (6 out of 122 in my\n  builds), none are due to this commit\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (k10temp) Add support for AMD F16 M30h processor Merge tag 'gpio-v3.15-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull bulk of gpio updates from Linus Walleij:\n \"A pretty big chunk of changes this time, but it has all been on\n  rotation in linux-next and had some testing.  Of course there will be\n  some amount of fixes on top...\n\n   - Merged in a branch of irqchip changes from Thomas Gleixner: we need\n     to have new callbacks from the irqchip to determine if the GPIO\n     line will be eligible for IRQs, and this callback must be able to\n     say \"no\".  After some thinking I got the branch from tglx and have\n     switched all current users over to use this.\n\n   - Based on tglx patches, we have added some generic irqchip helpers\n     in the gpiolib core.  These will help centralize code when GPIO\n     drivers have simple chained/cascaded IRQs.  Drivers will still\n     define their irqchip vtables, but the gpiolib core will take care\n     of irqdomain set-up, mapping from local offsets to Linux irqs, and\n     reserve resources by marking the GPIO lines for IRQs.\n\n   - Initially the PL061 and Nomadik GPIO/pin control drivers have been\n     switched over to use the new gpiochip-to-irqchip infrastructure\n     with more drivers expected for the next kernel cycle.  The\n     factoring of just two drivers still makes it worth it so it is\n     already a win.\n\n   - A new driver for the Synopsys DesignWare APB GPIO block.\n\n   - Modify the DaVinci GPIO driver to be reusable also for the new TI\n     Keystone architecture.\n\n   - A new driver for the LSI ZEVIO SoCs.\n\n   - Delete the obsolte tnetv107x driver.\n\n   - Some incremental work on GPIO descriptors: have\n     gpiod_direction_output() use a logical level, respecting assertion\n     polarity through ACTIVE_LOW flags, adding gpiod_direction_output_raw()\n     for the case where you want to set that very value.  Add\n     gpiochip_get_desc() to fetch a GPIO descriptor from a specific\n     offset on a certain chip inside driver code.\n\n   - Switch ACPI GPIO code over to using gpiochip_get_desc() and get rid\n     of gpio_to_desc().\n\n   - The ACPI GPIO event handling code has been reworked after\n     encountering an actual real life implementation.\n\n   - Support for ACPI GPIO operation regions.\n\n   - Generic GPIO chips can now be assigned labels/names from platform\n     data.\n\n   - We now clamp values returned from GPIO drivers to the boolean [0,1]\n     range.\n\n   - Some improved documentation on how to use the polarity flag was\n     added.\n\n   - a large slew of incremental driver updates and non-critical fixes.\n     Some targeted for stable\"\n\n* tag 'gpio-v3.15-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio: (80 commits)\n  gpio: rcar: Add helper variable dev = &pdev->dev\n  gpio-lynxpoint: force gpio_get() to return \"1\" and \"0\" only\n  gpio: unmap gpio irqs properly\n  pch_gpio: set value before enabling output direction\n  gpio: moxart: Actually set output state in moxart_gpio_direction_output()\n  gpio: moxart: Avoid forward declaration\n  gpio: mxs: Allow for recursive enable_irq_wake() call\n  gpio: samsung: Add missing \"break\" statement\n  gpio: twl4030: Remove redundant assignment\n  gpio: dwapb: correct gpio-cells in binding document\n  gpio: iop: fix devm_ioremap_resource() return value checking\n  pinctrl: coh901: convert driver to use gpiolib irqchip\n  pinctrl: nomadik: convert driver to use gpiolib irqchip\n  gpio: pl061: convert driver to use gpiolib irqchip\n  gpio: add IRQ chip helpers in gpiolib\n  pinctrl: nomadik: factor in platform data container\n  pinctrl: nomadik: rename secondary to latent\n  gpio: Driver for SYSCON-based GPIOs\n  gpio: generic: Use platform_device_id->driver_data field for driver flags\n  pinctrl: coh901: move irq line locking to resource callbacks\n  ... Merge branch 'akpm' (incoming from Andrew)\n\nMerge first patch-bomb from Andrew Morton:\n - Various misc bits\n - kmemleak fixes\n - small befs, codafs, cifs, efs, freexxfs, hfsplus, minixfs, reiserfs things\n - fanotify\n - I appear to have become SuperH maintainer\n - ocfs2 updates\n - direct-io tweaks\n - a bit of the MM queue\n - printk updates\n - MAINTAINERS maintenance\n - some backlight things\n - lib/ updates\n - checkpatch updates\n - the rtc queue\n - nilfs2 updates\n - Small Documentation/ updates\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (237 commits)\n  Documentation/SubmittingPatches: remove references to patch-scripts\n  Documentation/SubmittingPatches: update some dead URLs\n  Documentation/filesystems/ntfs.txt: remove changelog reference\n  Documentation/kmemleak.txt: updates\n  fs/reiserfs/super.c: add __init to init_inodecache\n  fs/reiserfs: move prototype declaration to header file\n  fs/hfsplus/attributes.c: add __init to hfsplus_create_attr_tree_cache()\n  fs/hfsplus/extents.c: fix concurrent acess of alloc_blocks\n  fs/hfsplus/extents.c: remove unused variable in hfsplus_get_block\n  nilfs2: update project's web site in nilfs2.txt\n  nilfs2: update MAINTAINERS file entries fix\n  nilfs2: verify metadata sizes read from disk\n  nilfs2: add FITRIM ioctl support for nilfs2\n  nilfs2: add nilfs_sufile_trim_fs to trim clean segs\n  nilfs2: implementation of NILFS_IOCTL_SET_SUINFO ioctl\n  nilfs2: add nilfs_sufile_set_suinfo to update segment usage\n  nilfs2: add struct nilfs_suinfo_update and flags\n  nilfs2: update MAINTAINERS file entries\n  fs/coda/inode.c: add __init to init_inodecache()\n  BEFS: logging cleanup\n  ... Merge tag 'vfio-v3.15-rc1' of git://github.com/awilliam/linux-vfio\n\nPull VFIO updates from Alex Williamson:\n \"VFIO updates for v3.15 include:\n\n   - Allow the vfio-type1 IOMMU to support multiple domains within a\n     container\n   - Plumb path to query whether all domains are cache-coherent\n   - Wire query into kvm-vfio device to avoid KVM x86 WBINVD emulation\n   - Always select CONFIG_ANON_INODES, vfio depends on it (Arnd)\n\n  The first patch also makes the vfio-type1 IOMMU driver completely\n  independent of the bus_type of the devices it's handling, which\n  enables it to be used for both vfio-pci and a future vfio-platform\n  (and hopefully combinations involving both simultaneously)\"\n\n* tag 'vfio-v3.15-rc1' of git://github.com/awilliam/linux-vfio:\n  vfio: always select ANON_INODES\n  kvm/vfio: Support for DMA coherent IOMMUs\n  vfio: Add external user check extension interface\n  vfio/type1: Add extension to test DMA cache coherence of IOMMU\n  vfio/iommu_type1: Multi-IOMMU domain support Merge tag 'stable/for-linus-3.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen features and fixes from David Vrabel:\n \"Support PCI devices with multiple MSIs, performance improvement for\n  kernel-based backends (by not populated m2p overrides when mapping),\n  and assorted minor bug fixes and cleanups\"\n\n* tag 'stable/for-linus-3.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/acpi-processor: fix enabling interrupts on syscore_resume\n  xen/grant-table: Refactor gnttab_[un]map_refs to avoid m2p_override\n  xen: remove XEN_PRIVILEGED_GUEST\n  xen: add support for MSI message groups\n  xen-pciback: Use pci_enable_msix_exact() instead of pci_enable_msix()\n  xen/xenbus: remove unused xenbus_bind_evtchn()\n  xen/events: remove unnecessary call to bind_evtchn_to_cpu()\n  xen/events: remove the unused resend_irq_on_evtchn()\n  drivers:xen-selfballoon:reset 'frontswap_inertia_counter' after frontswap_shrink\n  drivers: xen: Include appropriate header file in pcpu.c\n  drivers: xen: Mark function as static in platform-pci.c Merge branch 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup updates from Tejun Heo:\n \"A lot updates for cgroup:\n\n   - The biggest one is cgroup's conversion to kernfs.  cgroup took\n     after the long abandoned vfs-entangled sysfs implementation and\n     made it even more convoluted over time.  cgroup's internal objects\n     were fused with vfs objects which also brought in vfs locking and\n     object lifetime rules.  Naturally, there are places where vfs rules\n     don't fit and nasty hacks, such as credential switching or lock\n     dance interleaving inode mutex and cgroup_mutex with object serial\n     number comparison thrown in to decide whether the operation is\n     actually necessary, needed to be employed.\n\n     After conversion to kernfs, internal object lifetime and locking\n     rules are mostly isolated from vfs interactions allowing shedding\n     of several nasty hacks and overall simplification.  This will also\n     allow implmentation of operations which may affect multiple cgroups\n     which weren't possible before as it would have required nesting\n     i_mutexes.\n\n   - Various simplifications including dropping of module support,\n     easier cgroup name/path handling, simplified cgroup file type\n     handling and task_cg_lists optimization.\n\n   - Prepatory changes for the planned unified hierarchy, which is still\n     a patchset away from being actually operational.  The dummy\n     hierarchy is updated to serve as the default unified hierarchy.\n     Controllers which aren't claimed by other hierarchies are\n     associated with it, which BTW was what the dummy hierarchy was for\n     anyway.\n\n   - Various fixes from Li and others.  This pull request includes some\n     patches to add missing slab.h to various subsystems.  This was\n     triggered xattr.h include removal from cgroup.h.  cgroup.h\n     indirectly got included a lot of files which brought in xattr.h\n     which brought in slab.h.\n\n  There are several merge commits - one to pull in kernfs updates\n  necessary for converting cgroup (already in upstream through\n  driver-core), others for interfering changes in the fixes branch\"\n\n* 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup: (74 commits)\n  cgroup: remove useless argument from cgroup_exit()\n  cgroup: fix spurious lockdep warning in cgroup_exit()\n  cgroup: Use RCU_INIT_POINTER(x, NULL) in cgroup.c\n  cgroup: break kernfs active_ref protection in cgroup directory operations\n  cgroup: fix cgroup_taskset walking order\n  cgroup: implement CFTYPE_ONLY_ON_DFL\n  cgroup: make cgrp_dfl_root mountable\n  cgroup: drop const from @buffer of cftype->write_string()\n  cgroup: rename cgroup_dummy_root and related names\n  cgroup: move ->subsys_mask from cgroupfs_root to cgroup\n  cgroup: treat cgroup_dummy_root as an equivalent hierarchy during rebinding\n  cgroup: remove NULL checks from [pr_cont_]cgroup_{name|path}()\n  cgroup: use cgroup_setup_root() to initialize cgroup_dummy_root\n  cgroup: reorganize cgroup bootstrapping\n  cgroup: relocate setting of CGRP_DEAD\n  cpuset: use rcu_read_lock() to protect task_cs()\n  cgroup_freezer: document freezer_fork() subtleties\n  cgroup: update cgroup_transfer_tasks() to either succeed or fail\n  cgroup: drop task_lock() protection around task->cgroups\n  cgroup: update how a newly forked task gets associated with css_set\n  ... Merge tag 'trace-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing updates from Steven Rostedt:\n \"Most of the changes were largely clean ups, and some documentation.\n  But there were a few features that were added:\n\n  Uprobes now work with event triggers and multi buffers and have\n  support under ftrace and perf.\n\n  The big feature is that the function tracer can now be used within the\n  multi buffer instances.  That is, you can now trace some functions in\n  one buffer, others in another buffer, all functions in a third buffer\n  and so on.  They are basically agnostic from each other.  This only\n  works for the function tracer and not for the function graph trace,\n  although you can have the function graph tracer running in the top\n  level buffer (or any tracer for that matter) and have different\n  function tracing going on in the sub buffers\"\n\n* tag 'trace-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace: (45 commits)\n  tracing: Add BUG_ON when stack end location is over written\n  tracepoint: Remove unused API functions\n  Revert \"tracing: Move event storage for array from macro to standalone function\"\n  ftrace: Constify ftrace_text_reserved\n  tracepoints: API doc update to tracepoint_probe_register() return value\n  tracepoints: API doc update to data argument\n  ftrace: Fix compilation warning about control_ops_free\n  ftrace/x86: BUG when ftrace recovery fails\n  ftrace: Warn on error when modifying ftrace function\n  ftrace: Remove freelist from struct dyn_ftrace\n  ftrace: Do not pass data to ftrace_dyn_arch_init\n  ftrace: Pass retval through return in ftrace_dyn_arch_init()\n  ftrace: Inline the code from ftrace_dyn_table_alloc()\n  ftrace: Cleanup of global variables ftrace_new_pgs and ftrace_update_cnt\n  tracing: Evaluate len expression only once in __dynamic_array macro\n  tracing: Correctly expand len expressions from __dynamic_array macro\n  tracing/module: Replace include of tracepoint.h with jump_label.h in module.h\n  tracing: Fix event header migrate.h to include tracepoint.h\n  tracing: Fix event header writeback.h to include tracepoint.h\n  tracing: Warn if a tracepoint is not set via debugfs\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto updates from Herbert Xu:\n \"Here is the crypto update for 3.15:\n   - Added 3DES driver for OMAP4/AM43xx\n   - Added AVX2 acceleration for SHA\n   - Added hash-only AEAD algorithms in caam\n   - Removed tegra driver as it is not functioning and the hardware is\n     too slow\n   - Allow blkcipher walks over AEAD (needed for ARM)\n   - Fixed unprotected FPU/SSE access in ghash-clmulni-intel\n   - Fixed highmem crash in omap-sham\n   - Add (zero entropy) randomness when initialising hardware RNGs\n   - Fixed unaligned ahash comletion functions\n   - Added soft module depedency for crc32c for initrds that use crc32c\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6: (60 commits)\n  crypto: ghash-clmulni-intel - use C implementation for setkey()\n  crypto: x86/sha1 - reduce size of the AVX2 asm implementation\n  crypto: x86/sha1 - fix stack alignment of AVX2 variant\n  crypto: x86/sha1 - re-enable the AVX variant\n  crypto: sha - SHA1 transform x86_64 AVX2\n  crypto: crypto_wq - Fix late crypto work queue initialization\n  crypto: caam - add missing key_dma unmap\n  crypto: caam - add support for aead null encryption\n  crypto: testmgr - add aead null encryption test vectors\n  crypto: export NULL algorithms defines\n  crypto: caam - remove error propagation handling\n  crypto: hash - Simplify the ahash_finup implementation\n  crypto: hash - Pull out the functions to save/restore request\n  crypto: hash - Fix the pointer voodoo in unaligned ahash\n  crypto: caam - Fix first parameter to caam_init_rng\n  crypto: omap-sham - Map SG pages if they are HIGHMEM before accessing\n  crypto: caam - Dynamic memory allocation for caam_rng_ctx object\n  crypto: allow blkcipher walks over AEAD data\n  crypto: remove direct blkcipher_walk dependency on transform\n  hwrng: add randomness to system from rng sources\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull security subsystem updates from James Morris:\n \"Apart from reordering the SELinux mmap code to ensure DAC is called\n  before MAC, these are minor maintenance updates\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security: (23 commits)\n  selinux: correctly label /proc inodes in use before the policy is loaded\n  selinux: put the mmap() DAC controls before the MAC controls\n  selinux: fix the output of ./scripts/get_maintainer.pl for SELinux\n  evm: enable key retention service automatically\n  ima: skip memory allocation for empty files\n  evm: EVM does not use MD5\n  ima: return d_name.name if d_path fails\n  integrity: fix checkpatch errors\n  ima: fix erroneous removal of security.ima xattr\n  security: integrity: Use a more current logging style\n  MAINTAINERS: email updates and other misc. changes\n  ima: reduce memory usage when a template containing the n field is used\n  ima: restore the original behavior for sending data with ima template\n  Integrity: Pass commname via get_task_comm()\n  fs: move i_readcount\n  ima: use static const char array definitions\n  security: have cap_dentry_init_security return error\n  ima: new helper: file_inode(file)\n  kernel: Mark function as static in kernel/seccomp.c\n  capability: Use current logging styles\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next\n\nPull networking updates from David Miller:\n \"Here is my initial pull request for the networking subsystem during\n  this merge window:\n\n   1) Support for ESN in AH (RFC 4302) from Fan Du.\n\n   2) Add full kernel doc for ethtool command structures, from Ben\n      Hutchings.\n\n   3) Add BCM7xxx PHY driver, from Florian Fainelli.\n\n   4) Export computed TCP rate information in netlink socket dumps, from\n      Eric Dumazet.\n\n   5) Allow IPSEC SA to be dumped partially using a filter, from Nicolas\n      Dichtel.\n\n   6) Convert many drivers to pci_enable_msix_range(), from Alexander\n      Gordeev.\n\n   7) Record SKB timestamps more efficiently, from Eric Dumazet.\n\n   8) Switch to microsecond resolution for TCP round trip times, also\n      from Eric Dumazet.\n\n   9) Clean up and fix 6lowpan fragmentation handling by making use of\n      the existing inet_frag api for it's implementation.\n\n  10) Add TX grant mapping to xen-netback driver, from Zoltan Kiss.\n\n  11) Auto size SKB lengths when composing netlink messages based upon\n      past message sizes used, from Eric Dumazet.\n\n  12) qdisc dumps can take a long time, add a cond_resched(), From Eric\n      Dumazet.\n\n  13) Sanitize netpoll core and drivers wrt.  SKB handling semantics.\n      Get rid of never-used-in-tree netpoll RX handling.  From Eric W\n      Biederman.\n\n  14) Support inter-address-family and namespace changing in VTI tunnel\n      driver(s).  From Steffen Klassert.\n\n  15) Add Altera TSE driver, from Vince Bridgers.\n\n  16) Optimizing csum_replace2() so that it doesn't adjust the checksum\n      by checksumming the entire header, from Eric Dumazet.\n\n  17) Expand BPF internal implementation for faster interpreting, more\n      direct translations into JIT'd code, and much cleaner uses of BPF\n      filtering in non-socket ocntexts.  From Daniel Borkmann and Alexei\n      Starovoitov\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next: (1976 commits)\n  netpoll: Use skb_irq_freeable to make zap_completion_queue safe.\n  net: Add a test to see if a skb is freeable in irq context\n  qlcnic: Fix build failure due to undefined reference to `vxlan_get_rx_port'\n  net: ptp: move PTP classifier in its own file\n  net: sxgbe: make \"core_ops\" static\n  net: sxgbe: fix logical vs bitwise operation\n  net: sxgbe: sxgbe_mdio_register() frees the bus\n  Call efx_set_channels() before efx->type->dimension_resources()\n  xen-netback: disable rogue vif in kthread context\n  net/mlx4: Set proper build dependancy with vxlan\n  be2net: fix build dependency on VxLAN\n  mac802154: make csma/cca parameters per-wpan\n  mac802154: allow only one WPAN to be up at any given time\n  net: filter: minor: fix kdoc in __sk_run_filter\n  netlink: don't compare the nul-termination in nla_strcmp\n  can: c_can: Avoid led toggling for every packet.\n  can: c_can: Simplify TX interrupt cleanup\n  can: c_can: Store dlc private\n  can: c_can: Reduce register access\n  can: c_can: Make the code readable\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID updates from Jiri Kosina:\n - substantial cleanup of the generic and transport layers, in the\n   direction of an ultimate goal of making struct hid_device completely\n   transport independent, by Benjamin Tissoires\n - cp2112 driver from David Barksdale\n - a lot of fixes and new hardware support (Dualshock 4) to hid-sony\n   driver, by Frank Praznik\n - support for Win 8.1 multitouch protocol by Andrew Duggan\n - other smaller fixes / device ID additions\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid: (75 commits)\n  HID: sony: fix force feedback mismerge\n  HID: sony: Set the quriks flag for Bluetooth controllers\n  HID: sony: Fix Sixaxis cable state detection\n  HID: uhid: Add UHID_CREATE2 + UHID_INPUT2\n  HID: hyperv: fix _raw_request() prototype\n  HID: hyperv: Implement a stub raw_request() entry point\n  HID: hid-sensor-hub: fix sleeping function called from invalid context\n  HID: multitouch: add support for Win 8.1 multitouch touchpads\n  HID: remove hid_output_raw_report transport implementations\n  HID: sony: do not rely on hid_output_raw_report\n  HID: cp2112: remove the last hid_output_raw_report() call\n  HID: cp2112: remove various hid_out_raw_report calls\n  HID: multitouch: add support of other generic collections in hid-mt\n  HID: multitouch: remove pen special handling\n  HID: multitouch: remove registered devices with default behavior\n  HID: hidp: Add a comment that some devices depend on the current behavior of uniq\n  HID: sony: Prevent duplicate controller connections.\n  HID: sony: Perform a boundry check on the sixaxis battery level index.\n  HID: sony: Fix work queue issues\n  HID: sony: Fix multi-line comment styling\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial\n\nPull trivial tree updates from Jiri Kosina:\n \"Usual rocket science -- mostly documentation and comment updates\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial:\n  sparse: fix comment\n  doc: fix double words\n  isdn: capi: fix \"CAPI_VERSION\" comment\n  doc: DocBook: Fix typos in xml and template file\n  Bluetooth: add module name for btwilink\n  driver core: unexport static function create_syslog_header\n  mmc: core: typo fix in printk specifier\n  ARM: spear: clean up editing mistake\n  net-sysfs: fix comment typo 'CONFIG_SYFS'\n  doc: Insert MODULE_ in module-signing macros\n  Documentation: update URL to hfsplus Technote 1150\n  gpio: update path to documentation\n  ixgbe: Fix format string in ixgbe_fcoe.\n  Kconfig: Remove useless \"default N\" lines\n  user_namespace.c: Remove duplicated word in comment\n  CREDITS: fix formatting\n  treewide: Fix typo in Documentation/DocBook\n  mm: Fix warning on make htmldocs caused by slab.c\n  ata: ata-samsung_cf: cleanup in header file\n  idr: remove unused prototype of idr_free() Merge branch 'sched-idle-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull sched/idle changes from Ingo Molnar:\n \"More idle code reorganization, to prepare for more integration.\n\n  (Sent separately because it depended on pending timer work, which is\n  now upstream)\"\n\n* 'sched-idle-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/idle: Add more comments to the code\n  sched/idle: Move idle conditions in cpuidle_idle main function\n  sched/idle: Reorganize the idle loop\n  cpuidle/idle: Move the cpuidle_idle_call function to idle.c\n  idle/cpuidle: Split cpuidle_idle_call main function into smaller functions Merge tag 'kvm-3.15-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm updates from Paolo Bonzini:\n \"PPC and ARM do not have much going on this time.  Most of the cool\n  stuff, instead, is in s390 and (after a few releases) x86.\n\n  ARM has some caching fixes and PPC has transactional memory support in\n  guests.  MIPS has some fixes, with more probably coming in 3.16 as\n  QEMU will soon get support for MIPS KVM.\n\n  For x86 there are optimizations for debug registers, which trigger on\n  some Windows games, and other important fixes for Windows guests.  We\n  now expose to the guest Broadwell instruction set extensions and also\n  Intel MPX.  There's also a fix/workaround for OS X guests, nested\n  virtualization features (preemption timer), and a couple kvmclock\n  refinements.\n\n  For s390, the main news is asynchronous page faults, together with\n  improvements to IRQs (floating irqs and adapter irqs) that speed up\n  virtio devices\"\n\n* tag 'kvm-3.15-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (96 commits)\n  KVM: PPC: Book3S HV: Save/restore host PMU registers that are new in POWER8\n  KVM: PPC: Book3S HV: Fix decrementer timeouts with non-zero TB offset\n  KVM: PPC: Book3S HV: Don't use kvm_memslots() in real mode\n  KVM: PPC: Book3S HV: Return ENODEV error rather than EIO\n  KVM: PPC: Book3S: Trim top 4 bits of physical address in RTAS code\n  KVM: PPC: Book3S HV: Add get/set_one_reg for new TM state\n  KVM: PPC: Book3S HV: Add transactional memory support\n  KVM: Specify byte order for KVM_EXIT_MMIO\n  KVM: vmx: fix MPX detection\n  KVM: PPC: Book3S HV: Fix KVM hang with CONFIG_KVM_XICS=n\n  KVM: PPC: Book3S: Introduce hypervisor call H_GET_TCE\n  KVM: PPC: Book3S HV: Fix incorrect userspace exit on ioeventfd write\n  KVM: s390: clear local interrupts at cpu initial reset\n  KVM: s390: Fix possible memory leak in SIGP functions\n  KVM: s390: fix calculation of idle_mask array size\n  KVM: s390: randomize sca address\n  KVM: ioapic: reinject pending interrupts on KVM_SET_IRQCHIP\n  KVM: Bump KVM_MAX_IRQ_ROUTES for s390\n  KVM: s390: irq routing for adapter interrupts.\n  KVM: s390: adapter interrupt sources\n  ... Merge tag 'virtio-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux\n\nPull virtio updates from Rusty Russell:\n \"Nothing exciting: virtio-blk users might see a bit of a boost from the\n  doubling of the default queue length though\"\n\n* tag 'virtio-next-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux:\n  virtio-blk: base queue-depth on virtqueue ringsize or module param\n  Revert a02bbb1ccfe8: MAINTAINERS: add virtio-dev ML for virtio\n  virtio: fail adding buffer on broken queues.\n  virtio-rng: don't crash if virtqueue is broken.\n  virtio_balloon: don't crash if virtqueue is broken.\n  virtio_blk: don't crash, report error if virtqueue is broken.\n  virtio_net: don't crash if virtqueue is broken.\n  virtio_balloon: don't softlockup on huge balloon changes.\n  virtio: Use pci_enable_msix_exact() instead of pci_enable_msix()\n  MAINTAINERS: virtio-dev is subscribers only\n  tools/virtio: add a missing )\n  tools/virtio: fix missing kmemleak_ignore symbol\n  tools/virtio: update internal copies of headers Merge branch 'for-3.15' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping\n\nPull DMA-mapping updates from Marek Szyprowski:\n \"This contains extension for more efficient handling of io address\n  space for dma-mapping subsystem for ARM architecture\"\n\n* 'for-3.15' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping:\n  arm: dma-mapping: remove order parameter from arm_iommu_create_mapping()\n  arm: dma-mapping: Add support to extend DMA IOMMU mappings Merge tag 'dt-for-linus' of git://git.secretlab.ca/git/linux\n\nPull devicetree changes from Grant Likely:\n \"Updates to devicetree core code.  This branch contains the following\n  notable changes:\n\n   - add reserved memory binding\n   - make struct device_node a kobject and remove legacy\n     /proc/device-tree\n   - ePAPR conformance fixes\n   - update in-kernel DTC copy to version v1.4.0\n   - preparatory changes for dynamic device tree overlays\n   - minor bug fixes and documentation changes\n\n  The most significant change in this branch is the conversion of struct\n  device_node to be a kobject that is exposed via sysfs and removal of\n  the old /proc/device-tree code.  This simplifies the device tree\n  handling code and tightens up the lifecycle on device tree nodes.\n\n  [updated: added fix for dangling select PROC_DEVICETREE]\"\n\n* tag 'dt-for-linus' of git://git.secretlab.ca/git/linux: (29 commits)\n  dt: Remove dangling \"select PROC_DEVICETREE\"\n  of: Add support for ePAPR \"stdout-path\" property\n  of: device_node kobject lifecycle fixes\n  of: only scan for reserved mem when fdt present\n  powerpc: add support for reserved memory defined by device tree\n  arm64: add support for reserved memory defined by device tree\n  of: add missing major vendors\n  of: add vendor prefix for SMSC\n  of: remove /proc/device-tree\n  of/selftest: Add self tests for manipulation of properties\n  of: Make device nodes kobjects so they show up in sysfs\n  arm: add support for reserved memory defined by device tree\n  drivers: of: add support for custom reserved memory drivers\n  drivers: of: add initialization code for dynamic reserved memory\n  drivers: of: add initialization code for static reserved memory\n  of: document bindings for reserved-memory nodes\n  Revert \"of: fix of_update_property()\"\n  kbuild: dtbs_install: new make target\n  ARM: mvebu: Allows to get the SoC ID even without PCI enabled\n  of: Allows to use the PCI translator without the PCI core\n  ... Merge tag 'pm+acpi-3.15-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull more ACPI and power management updates from Rafael Wysocki:\n \"These are commits that were not quite ready when I sent the original\n  pull request for 3.15-rc1 several days ago, but they have spent some\n  time in linux-next since then and appear to be good to go.  All of\n  them are fixes and cleanups.\n\n  Specifics:\n\n   - Remaining changes from upstream ACPICA release 20140214 that\n     introduce code to automatically serialize the execution of methods\n     creating any named objects which really cannot be executed in\n     parallel with each other anyway (previously ACPICA attempted to\n     address that by aborting methods upon conflict detection, but that\n     wasn't reliable enough and led to other issues).  From Bob Moore\n     and Lv Zheng.\n\n   - intel_pstate fix to use del_timer_sync() instead of del_timer() in\n     the exit path before freeing the timer structure from Dirk\n     Brandewie (original patch from Thomas Gleixner).\n\n   - cpufreq fix related to system resume from Viresh Kumar.\n\n   - Serialization of frequency transitions in cpufreq that involve\n     PRECHANGE and POSTCHANGE notifications to avoid ordering issues\n     resulting from race conditions.  From Srivatsa S Bhat and Viresh\n     Kumar.\n\n   - Revert of an ACPI processor driver change that was based on a\n     specific interpretation of the ACPI spec which may not be correct\n     (the relevant part of the spec appears to be incomplete).  From\n     Hanjun Guo.\n\n   - Runtime PM core cleanups and documentation updates from Geert\n     Uytterhoeven.\n\n   - PNP core cleanup from Michael Opdenacker\"\n\n* tag 'pm+acpi-3.15-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  cpufreq: Make cpufreq_notify_transition & cpufreq_notify_post_transition static\n  cpufreq: Convert existing drivers to use cpufreq_freq_transition_{begin|end}\n  cpufreq: Make sure frequency transitions are serialized\n  intel_pstate: Use del_timer_sync in intel_pstate_cpu_stop\n  cpufreq: resume drivers before enabling governors\n  PM / Runtime: Spelling s/competing/completing/\n  PM / Runtime: s/foo_process_requests/foo_process_next_request/\n  PM / Runtime: GENERIC_SUBSYS_PM_OPS is gone\n  PM / Runtime: Correct documented return values for generic PM callbacks\n  PM / Runtime: Split line longer than 80 characters\n  PM / Runtime: dev_pm_info.runtime_error is signed\n  Revert \"ACPI / processor: Make it possible to get APIC ID via GIC\"\n  ACPICA: Enable auto-serialization as a default kernel behavior.\n  ACPICA: Ignore sync_level for methods that have been auto-serialized.\n  ACPICA: Add additional named objects for the auto-serialize method scan.\n  ACPICA: Add auto-serialization support for ill-behaved control methods.\n  ACPICA: Remove global option to serialize all control methods.\n  PNP: remove deprecated IRQF_DISABLED Merge branch 'powernv-cpuidle' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc non-virtualized cpuidle from Ben Herrenschmidt:\n \"This is the branch I mentioned in my other pull request which contains\n  our improved cpuidle support for the \"powernv\" platform\n  (non-virtualized).\n\n  It adds support for the \"fast sleep\" feature of the processor which\n  provides higher power savings than our usual \"nap\" mode but at the\n  cost of losing the timers while asleep, and thus exploits the new\n  timer broadcast framework to work around that limitation.\n\n  It's based on a tip timer tree that you seem to have already merged\"\n\n* 'powernv-cpuidle' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  cpuidle/powernv: Parse device tree to setup idle states\n  cpuidle/powernv: Add \"Fast-Sleep\" CPU idle state\n  powerpc/powernv: Add OPAL call to resync timebase on wakeup\n  powerpc/powernv: Add context management for Fast Sleep\n  powerpc: Split timer_interrupt() into timer handling and interrupt handling routines\n  powerpc: Implement tick broadcast IPI as a fixed IPI message\n  powerpc: Free up the slot of PPC_MSG_CALL_FUNC_SINGLE IPI message Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull main powerpc updates from Ben Herrenschmidt:\n \"This time around, the powerpc merges are going to be a little bit more\n  complicated than usual.\n\n  This is the main pull request with most of the work for this merge\n  window.  I will describe it a bit more further down.\n\n  There is some additional cpuidle driver work, however I haven't\n  included it in this tree as it depends on some work in tip/timer-core\n  which Thomas accidentally forgot to put in a topic branch.  Since I\n  didn't want to carry all of that tip timer stuff in powerpc -next, I\n  setup a separate branch on top of Thomas tree with just that cpuidle\n  driver in it, and Stephen has been carrying that in next separately\n  for a while now.  I'll send a separate pull request for it.\n\n  Additionally, two new pieces in this tree add users for a sysfs API\n  that Tejun and Greg have been deprecating in drivers-core-next.\n  Thankfully Greg reverted the patch that removes the old API so this\n  merge can happen cleanly, but once merged, I will send a patch\n  adjusting our new code to the new API so that Greg can send you the\n  removal patch.\n\n  Now as for the content of this branch, we have a lot of perf work for\n  power8 new counters including support for our new \"nest\" counters\n  (also called 24x7) under pHyp (not natively yet).\n\n  We have new functionality when running under the OPAL firmware\n  (non-virtualized or KVM host), such as access to the firmware error\n  logs and service processor dumps, system parameters and sensors, along\n  with a hwmon driver for the latter.\n\n  There's also a bunch of bug fixes accross the board, some LE fixes,\n  and a nice set of selftests for validating our various types of copy\n  loops.\n\n  On the Freescale side, we see mostly new chip/board revisions, some\n  clock updates, better support for machine checks and debug exceptions,\n  etc...\"\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (70 commits)\n  powerpc/book3s: Fix CFAR clobbering issue in machine check handler.\n  powerpc/compat: 32-bit little endian machine name is ppcle, not ppc\n  powerpc/le: Big endian arguments for ppc_rtas()\n  powerpc: Use default set of netfilter modules (CONFIG_NETFILTER_ADVANCED=n)\n  powerpc/defconfigs: Enable THP in pseries defconfig\n  powerpc/mm: Make sure a local_irq_disable prevent a parallel THP split\n  powerpc: Rate-limit users spamming kernel log buffer\n  powerpc/perf: Fix handling of L3 events with bank == 1\n  powerpc/perf/hv_{gpci, 24x7}: Add documentation of device attributes\n  powerpc/perf: Add kconfig option for hypervisor provided counters\n  powerpc/perf: Add support for the hv 24x7 interface\n  powerpc/perf: Add support for the hv gpci (get performance counter info) interface\n  powerpc/perf: Add macros for defining event fields & formats\n  powerpc/perf: Add a shared interface to get gpci version and capabilities\n  powerpc/perf: Add 24x7 interface headers\n  powerpc/perf: Add hv_gpci interface header\n  powerpc: Add hvcalls for 24x7 and gpci (Get Performance Counter Info)\n  sysfs: create bin_attributes under the requested group\n  powerpc/perf: Enable BHRB access for EBB events\n  powerpc/perf: Add BHRB constraint and IFM MMCRA handling for EBB\n  ... Merge branch 'mips-for-linux-next' of git://git.linux-mips.org/pub/scm/ralf/upstream-sfr\n\nPull MIPS updates from Ralf Baechle:\n - Support for Imgtec's Aptiv family of MIPS cores.\n - Improved detection of BCM47xx configurations.\n - Fix hiberation for certain configurations.\n - Add support for the Chinese Loongson 3 CPU, a MIPS64 R2 core and\n   systems.\n - Detection and support for the MIPS P5600 core.\n - A few more random fixes that didn't make 3.14.\n - Support for the EVA Extended Virtual Addressing\n - Switch Alchemy to the platform PATA driver\n - Complete unification of Alchemy support\n - Allow availability of I/O cache coherency to be runtime detected\n - Improvments to multiprocessing support for Imgtec platforms\n - A few microoptimizations\n - Cleanups of FPU support\n - Paul Gortmaker's fixes for the init stuff\n - Support for seccomp\n\n* 'mips-for-linux-next' of git://git.linux-mips.org/pub/scm/ralf/upstream-sfr: (165 commits)\n  MIPS: CPC: Use __raw_ memory access functions\n  MIPS: CM: use __raw_ memory access functions\n  MIPS: Fix warning when including smp-ops.h with CONFIG_SMP=n\n  MIPS: Malta: GIC IPIs may be used without MT\n  MIPS: smp-mt: Use common GIC IPI implementation\n  MIPS: smp-cmp: Remove incorrect core number probe\n  MIPS: Fix gigaton of warning building with microMIPS.\n  MIPS: Fix core number detection for MT cores\n  MIPS: MT: core_nvpes function to retrieve VPE count\n  MIPS: Provide empty mips_mt_set_cpuoptions when CONFIG_MIPS_MT=n\n  MIPS: Lasat: Replace del_timer by del_timer_sync\n  MIPS: Malta: Setup PM I/O region on boot\n  MIPS: Loongson: Add a Loongson-3 default config file\n  MIPS: Loongson 3: Add CPU hotplug support\n  MIPS: Loongson 3: Add Loongson-3 SMP support\n  MIPS: Loongson: Add Loongson-3 Kconfig options\n  MIPS: Loongson: Add swiotlb to support All-Memory DMA\n  MIPS: Loongson 3: Add serial port support\n  MIPS: Loongson 3: Add IRQ init and dispatch support\n  MIPS: Loongson 3: Add HT-linked PCI support\n  ... Merge branch 'x86-nuke-platforms-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 old platform removal from Peter Anvin:\n \"This patchset removes support for several completely obsolete\n  platforms, where the maintainers either have completely vanished or\n  acked the removal.  For some of them it is questionable if there even\n  exists functional specimens of the hardware\"\n\nGeert Uytterhoeven apparently thought this was a April Fool's pull request ;)\n\n* 'x86-nuke-platforms-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, platforms: Remove NUMAQ\n  x86, platforms: Remove SGI Visual Workstation\n  x86, apic: Remove support for IBM Summit/EXA chipset\n  x86, apic: Remove support for ia32-based Unisys ES7000 Merge branch 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull compat time conversion changes from Peter Anvin:\n \"Despite the branch name this is really neither an x86 nor an\n  x32-specific patchset, although it the implementation of the\n  discussions that followed the x32 security hole a few months ago.\n\n  This removes get/put_compat_timespec/val() and replaces them with\n  compat_get/put_timespec/val() which are savvy as to the current status\n  of COMPAT_USE_64BIT_TIME.\n\n  It removes several unused and/or incorrect/misleading functions (like\n  compat_put_timeval_convert which doesn't in fact do any conversion)\n  and also replaces several open-coded implementations what is now\n  called compat_convert_timespec() with that function\"\n\n* 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  compat: Fix sparse address space warnings\n  compat: Get rid of (get|put)_compat_time(val|spec) Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 vdso changes from Peter Anvin:\n \"This is the revamp of the 32-bit vdso and the associated cleanups.\n\n  This adds timekeeping support to the 32-bit vdso that we already have\n  in the 64-bit vdso.  Although 32-bit x86 is legacy, it is likely to\n  remain in the embedded space for a very long time to come.\n\n  This removes the traditional COMPAT_VDSO support; the configuration\n  variable is reused for simply removing the 32-bit vdso, which will\n  produce correct results but obviously suffer a performance penalty.\n  Only one beta version of glibc was affected, but that version was\n  unfortunately included in one OpenSUSE release.\n\n  This is not the end of the vdso cleanups.  Stefani and Andy have\n  agreed to continue work for the next kernel cycle; in fact Andy has\n  already produced another set of cleanups that came too late for this\n  cycle.\n\n  An incidental, but arguably important, change is that this ensures\n  that unused space in the VVAR page is properly zeroed.  It wasn't\n  before, and would contain whatever garbage was left in memory by BIOS\n  or the bootloader.  Since the VVAR page is accessible to user space\n  this had the potential of information leaks\"\n\n* 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (23 commits)\n  x86, vdso: Fix the symbol versions on the 32-bit vDSO\n  x86, vdso, build: Don't rebuild 32-bit vdsos on every make\n  x86, vdso: Actually discard the .discard sections\n  x86, vdso: Fix size of get_unmapped_area()\n  x86, vdso: Finish removing VDSO32_PRELINK\n  x86, vdso: Move more vdso definitions into vdso.h\n  x86: Load the 32-bit vdso in place, just like the 64-bit vdsos\n  x86, vdso32: handle 32 bit vDSO larger one page\n  x86, vdso32: Disable stack protector, adjust optimizations\n  x86, vdso: Zero-pad the VVAR page\n  x86, vdso: Add 32 bit VDSO time support for 64 bit kernel\n  x86, vdso: Add 32 bit VDSO time support for 32 bit kernel\n  x86, vdso: Patch alternatives in the 32-bit VDSO\n  x86, vdso: Introduce VVAR marco for vdso32\n  x86, vdso: Cleanup __vdso_gettimeofday()\n  x86, vdso: Replace VVAR(vsyscall_gtod_data) by gtod macro\n  x86, vdso: __vdso_clock_gettime() cleanup\n  x86, vdso: Revamp vclock_gettime.c\n  mm: Add new func _install_special_mapping() to mmap.c\n  x86, vdso: Make vsyscall_gtod_data handling x86 generic\n  ... Merge branch 'x86/boot' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 boot changes from Peter Anvin:\n \"This patchset is a set of cleanups aiming at librarize some of the\n  common code from the boot environments.  We currently have three\n  different \"little environments\" (boot, boot/compressed, and\n  realmode/rm) in x86, and we are likely to soon get a fourth one\n  (kexec/purgatory, which will have to be integrated in the kernel to\n  support secure kexec).  This is primarily a cleanup in the\n  anticipation of the latter.\n\n  While Vivek implemented this, he ran into some bugs, in particular the\n  memcmp implementation for when gcc punts from using the builtin would\n  have a misnamed symbol, causing compilation errors if we were ever\n  unlucky enough that gcc didn't want to inline the test\"\n\n* 'x86/boot' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, boot: Move memset() definition in compressed/string.c\n  x86, boot: Move memcmp() into string.h and string.c\n  x86, boot: Move optimized memcpy() 32/64 bit versions to compressed/string.c\n  x86, boot: Create a separate string.h file to provide standard string functions\n  x86, boot: Undef memcmp before providing a new definition Merge tag 'metag-for-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag\n\nPull Metag architecture changes from James Hogan:\n - Remove unused NUMA definition (SD_NODE_INIT)\n - Refactor signal code to use struct ksignal\n - IRQ migration cleanup to use irq_set_affinity\n - Clean up main Kconfig file a little\n\n* tag 'metag-for-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag:\n  sched: remove unused SCHED_INIT_NODE\n  metag: Use get_signal() signal_setup_done()\n  metag: Fix METAG Kconfig symbol select ordering\n  metag: Use irq_set_affinity instead of homebrewn code Merge branch 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata updates from Tejun Heo:\n \"Except for the ahci fix that fixes a boot issue, nothing major in this\n  pull request. Some new platform controller support and device specific\n  changes\"\n\n* 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  libata: zpodd: make arrays cdb static, reduces object code size\n  ahci: don't use MSI for devices with the silly Intel NVMe remapping scheme\n  dt-bindings: ata: add DT bindings for MediaTek SATA controller\n  ata: mediatek: add support for MediaTek SATA controller\n  pata_octeon_cf: use of_property_read_{bool|u32}()\n  cs5536: add support for IDE controller variant\n  ata: sata_gemini: Introduce explicit IDE pin control\n  ata: sata_gemini: Retire custom pin control\n  ata: ahci_platform: Add shutdown handler\n  ata: sata_gemini: explicitly request exclusive reset control\n  ata: Drop unnecessary static\n  ata: Convert to using %pOF instead of full_name Merge branch 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup updates from Tejun Heo:\n \"Several notable changes this cycle:\n\n   - Thread mode was merged. This will be used for cgroup2 support for\n     CPU and possibly other controllers. Unfortunately, CPU controller\n     cgroup2 support didn't make this pull request but most contentions\n     have been resolved and the support is likely to be merged before\n     the next merge window.\n\n   - cgroup.stat now shows the number of descendant cgroups.\n\n   - cpuset now can enable the easier-to-configure v2 behavior on v1\n     hierarchy\"\n\n* 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup: (21 commits)\n  cpuset: Allow v2 behavior in v1 cgroup\n  cgroup: Add mount flag to enable cpuset to use v2 behavior in v1 cgroup\n  cgroup: remove unneeded checks\n  cgroup: misc changes\n  cgroup: short-circuit cset_cgroup_from_root() on the default hierarchy\n  cgroup: re-use the parent pointer in cgroup_destroy_locked()\n  cgroup: add cgroup.stat interface with basic hierarchy stats\n  cgroup: implement hierarchy limits\n  cgroup: keep track of number of descent cgroups\n  cgroup: add comment to cgroup_enable_threaded()\n  cgroup: remove unnecessary empty check when enabling threaded mode\n  cgroup: update debug controller to print out thread mode information\n  cgroup: implement cgroup v2 thread support\n  cgroup: implement CSS_TASK_ITER_THREADED\n  cgroup: introduce cgroup->dom_cgrp and threaded css_set handling\n  cgroup: add @flags to css_task_iter_start() and implement CSS_TASK_ITER_PROCS\n  cgroup: reorganize cgroup.procs / task write path\n  cgroup: replace css_set walking populated test with testing cgrp->nr_populated_csets\n  cgroup: distinguish local and children populated states\n  cgroup: remove now unused list_head @pending in cgroup_apply_cftypes()\n  ... Merge branch 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue updates from Tejun Heo:\n \"Nothing major. I introduced a flag collsion bug during v4.13 cycle\n  which is fixed in this pull request. Fortunately, the flag is for\n  debugging / verification and the bug isn't critical\"\n\n* 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: Fix flag collision\n  workqueue: Use TASK_IDLE\n  workqueue: fix path to documentation\n  workqueue: doc change for ST behavior on NUMA systems Merge branch 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull percpu updates from Tejun Heo:\n \"A lot of changes for percpu this time around. percpu inherited the\n  same area allocator from the original pre-virtual-address-mapped\n  implementation. This was from the time when percpu allocator wasn't\n  used all that much and the implementation was focused on simplicity,\n  with the unfortunate computational complexity of O(number of areas\n  allocated from the chunk) per alloc / free.\n\n  With the increase in percpu usage, we're hitting cases where the lack\n  of scalability is hurting. The most prominent one right now is bpf\n  perpcu map creation / destruction which may allocate and free a lot of\n  entries consecutively and it's likely that the problem will become\n  more prominent in the future.\n\n  To address the issue, Dennis replaced the area allocator with hinted\n  bitmap allocator which is more consistent. While the new allocator\n  does perform a bit worse in some cases, it outperforms the old\n  allocator way more than an order of magnitude in other more common\n  scenarios while staying mostly flat in CPU overhead and completely\n  flat in memory consumption\"\n\n* 'for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu: (27 commits)\n  percpu: update header to contain bitmap allocator explanation.\n  percpu: update pcpu_find_block_fit to use an iterator\n  percpu: use metadata blocks to update the chunk contig hint\n  percpu: update free path to take advantage of contig hints\n  percpu: update alloc path to only scan if contig hints are broken\n  percpu: keep track of the best offset for contig hints\n  percpu: skip chunks if the alloc does not fit in the contig hint\n  percpu: add first_bit to keep track of the first free in the bitmap\n  percpu: introduce bitmap metadata blocks\n  percpu: replace area map allocator with bitmap\n  percpu: generalize bitmap (un)populated iterators\n  percpu: increase minimum percpu allocation size and align first regions\n  percpu: introduce nr_empty_pop_pages to help empty page accounting\n  percpu: change the number of pages marked in the first_chunk pop bitmap\n  percpu: combine percpu address checks\n  percpu: modify base_addr to be region specific\n  percpu: setup_first_chunk rename schunk/dchunk to chunk\n  percpu: end chunk area maps page aligned for the populated bitmap\n  percpu: unify allocation of schunk and dchunk\n  percpu: setup_first_chunk remove dyn_size and consolidate logic\n  ... Merge branch 'akpm' (patches from Andrew)\n\nMerge updates from Andrew Morton:\n\n - various misc bits\n\n - DAX updates\n\n - OCFS2\n\n - most of MM\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (119 commits)\n  mm,fork: introduce MADV_WIPEONFORK\n  x86,mpx: make mpx depend on x86-64 to free up VMA flag\n  mm: add /proc/pid/smaps_rollup\n  mm: hugetlb: clear target sub-page last when clearing huge page\n  mm: oom: let oom_reap_task and exit_mmap run concurrently\n  swap: choose swap device according to numa node\n  mm: replace TIF_MEMDIE checks by tsk_is_oom_victim\n  mm, oom: do not rely on TIF_MEMDIE for memory reserves access\n  z3fold: use per-cpu unbuddied lists\n  mm, swap: don't use VMA based swap readahead if HDD is used as swap\n  mm, swap: add sysfs interface for VMA based swap readahead\n  mm, swap: VMA based swap readahead\n  mm, swap: fix swap readahead marking\n  mm, swap: add swap readahead hit statistics\n  mm/vmalloc.c: don't reinvent the wheel but use existing llist API\n  mm/vmstat.c: fix wrong comment\n  selftests/memfd: add memfd_create hugetlbfs selftest\n  mm/shmem: add hugetlbfs support to memfd_create()\n  mm, devm_memremap_pages: use multi-order radix for ZONE_DEVICE lookups\n  mm/vmalloc.c: halve the number of comparisons performed in pcpu_get_vm_areas()\n  ... Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto updates from Herbert Xu:\n \"Here is the crypto update for 4.14:\n\n  API:\n   - Defer scompress scratch buffer allocation to first use.\n   - Add __crypto_xor that takes separte src and dst operands.\n   - Add ahash multiple registration interface.\n   - Revamped aead/skcipher algif code to fix async IO properly.\n\n  Drivers:\n   - Add non-SIMD fallback code path on ARM for SVE.\n   - Add AMD Security Processor framework for ccp.\n   - Add support for RSA in ccp.\n   - Add XTS-AES-256 support for CCP version 5.\n   - Add support for PRNG in sun4i-ss.\n   - Add support for DPAA2 in caam.\n   - Add ARTPEC crypto support.\n   - Add Freescale RNGC hwrng support.\n   - Add Microchip / Atmel ECC driver.\n   - Add support for STM32 HASH module\"\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6: (116 commits)\n  crypto: af_alg - get_page upon reassignment to TX SGL\n  crypto: cavium/nitrox - Fix an error handling path in 'nitrox_probe()'\n  crypto: inside-secure - fix an error handling path in safexcel_probe()\n  crypto: rockchip - Don't dequeue the request when device is busy\n  crypto: cavium - add release_firmware to all return case\n  crypto: sahara - constify platform_device_id\n  MAINTAINERS: Add ARTPEC crypto maintainer\n  crypto: axis - add ARTPEC-6/7 crypto accelerator driver\n  crypto: hash - add crypto_(un)register_ahashes()\n  dt-bindings: crypto: add ARTPEC crypto\n  crypto: algif_aead - fix comment regarding memory layout\n  crypto: ccp - use dma_mapping_error to check map error\n  lib/mpi: fix build with clang\n  crypto: sahara - Remove leftover from previous used spinlock\n  crypto: sahara - Fix dma unmap direction\n  crypto: af_alg - consolidation of duplicate code\n  crypto: caam - Remove unused dentry members\n  crypto: ccp - select CONFIG_CRYPTO_RSA\n  crypto: ccp - avoid uninitialized variable warning\n  crypto: serpent - improve __serpent_setkey with UBSAN\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next\n\nPull networking updates from David Miller:\n\n 1) Support ipv6 checksum offload in sunvnet driver, from Shannon\n    Nelson.\n\n 2) Move to RB-tree instead of custom AVL code in inetpeer, from Eric\n    Dumazet.\n\n 3) Allow generic XDP to work on virtual devices, from John Fastabend.\n\n 4) Add bpf device maps and XDP_REDIRECT, which can be used to build\n    arbitrary switching frameworks using XDP. From John Fastabend.\n\n 5) Remove UFO offloads from the tree, gave us little other than bugs.\n\n 6) Remove the IPSEC flow cache, from Florian Westphal.\n\n 7) Support ipv6 route offload in mlxsw driver.\n\n 8) Support VF representors in bnxt_en, from Sathya Perla.\n\n 9) Add support for forward error correction modes to ethtool, from\n    Vidya Sagar Ravipati.\n\n10) Add time filter for packet scheduler action dumping, from Jamal Hadi\n    Salim.\n\n11) Extend the zerocopy sendmsg() used by virtio and tap to regular\n    sockets via MSG_ZEROCOPY. From Willem de Bruijn.\n\n12) Significantly rework value tracking in the BPF verifier, from Edward\n    Cree.\n\n13) Add new jump instructions to eBPF, from Daniel Borkmann.\n\n14) Rework rtnetlink plumbing so that operations can be run without\n    taking the RTNL semaphore. From Florian Westphal.\n\n15) Support XDP in tap driver, from Jason Wang.\n\n16) Add 32-bit eBPF JIT for ARM, from Shubham Bansal.\n\n17) Add Huawei hinic ethernet driver.\n\n18) Allow to report MD5 keys in TCP inet_diag dumps, from Ivan\n    Delalande.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next: (1780 commits)\n  i40e: point wb_desc at the nvm_wb_desc during i40e_read_nvm_aq\n  i40e: avoid NVM acquire deadlock during NVM update\n  drivers: net: xgene: Remove return statement from void function\n  drivers: net: xgene: Configure tx/rx delay for ACPI\n  drivers: net: xgene: Read tx/rx delay for ACPI\n  rocker: fix kcalloc parameter order\n  rds: Fix non-atomic operation on shared flag variable\n  net: sched: don't use GFP_KERNEL under spin lock\n  vhost_net: correctly check tx avail during rx busy polling\n  net: mdio-mux: add mdio_mux parameter to mdio_mux_init()\n  rxrpc: Make service connection lookup always check for retry\n  net: stmmac: Delete dead code for MDIO registration\n  gianfar: Fix Tx flow control deactivation\n  cxgb4: Ignore MPS_TX_INT_CAUSE[Bubble] for T6\n  cxgb4: Fix pause frame count in t4_get_port_stats\n  cxgb4: fix memory leak\n  tun: rename generic_xdp to skb_xdp\n  tun: reserve extra headroom only when XDP is set\n  net: dsa: bcm_sf2: Configure IMP port TC2QOS mapping\n  net: dsa: bcm_sf2: Advertise number of egress queues\n  ... Merge tag 'wberr-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux\n\nPull writeback error handling updates from Jeff Layton:\n \"This pile continues the work from last cycle on better tracking\n  writeback errors. In v4.13 we added some basic errseq_t infrastructure\n  and converted a few filesystems to use it.\n\n  This set continues refining that infrastructure, adds documentation,\n  and converts most of the other filesystems to use it. The main\n  exception at this point is the NFS client\"\n\n* tag 'wberr-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux:\n  ecryptfs: convert to file_write_and_wait in ->fsync\n  mm: remove optimizations based on i_size in mapping writeback waits\n  fs: convert a pile of fsync routines to errseq_t based reporting\n  gfs2: convert to errseq_t based writeback error reporting for fsync\n  fs: convert sync_file_range to use errseq_t based error-tracking\n  mm: add file_fdatawait_range and file_write_and_wait\n  fuse: convert to errseq_t based error tracking for fsync\n  mm: consolidate dax / non-dax checks for writeback\n  Documentation: add some docs for errseq_t\n  errseq: rename __errseq_set to errseq_set Merge tag 'locks-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux\n\nPull file locking updates from Jeff Layton:\n \"This pile just has a few file locking fixes from Ben Coddington. There\n  are a couple of cleanup patches + an attempt to bring sanity to the\n  l_pid value that is reported back to userland on an F_GETLK request.\n\n  After a few gyrations, he came up with a way for filesystems to\n  communicate to the VFS layer code whether the pid should be translated\n  according to the namespace or presented as-is to userland\"\n\n* tag 'locks-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux:\n  locks: restore a warn for leaked locks on close\n  fs/locks: Remove fl_nspid and use fs-specific l_pid for remote locks\n  fs/locks: Use allocation rather than the stack in fcntl_getlk() Merge tag 'dlm-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm\n\nPull dlm updates from David Teigland:\n \"This set includes a bunch of minor code cleanups that have\n  accumulated, probably from code analyzers people like to run. There is\n  one nice fix that avoids some socket leaks by switching to use\n  sock_create_lite()\"\n\n* tag 'dlm-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm:\n  dlm: use sock_create_lite inside tcp_accept_from_sock\n  uapi linux/dlm_netlink.h: include linux/dlmconstants.h\n  dlm: avoid double-free on error path in dlm_device_{register,unregister}\n  dlm: constify kset_uevent_ops structure\n  dlm: print log message when cluster name is not set\n  dlm: Delete an unnecessary variable initialisation in dlm_ls_start()\n  dlm: Improve a size determination in two functions\n  dlm: Use kcalloc() in two functions\n  dlm: Use kmalloc_array() in make_member_array()\n  dlm: Delete an error message for a failed memory allocation in dlm_recover_waiters_pre()\n  dlm: Improve a size determination in dlm_recover_waiters_pre()\n  dlm: Use kcalloc() in dlm_scan_waiters()\n  dlm: Improve a size determination in table_seq_start()\n  dlm: Add spaces for better code readability\n  dlm: Replace six seq_puts() calls by seq_putc()\n  dlm: Make dismatch error message more clear\n  dlm: Fix kernel memory disclosure Merge tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 updates from Ted Ts'o:\n \"Scalability improvements when allocating inodes, and some\n  miscellaneous bug fixes and cleanups\"\n\n* tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4:\n  ext4: avoid Y2038 overflow in recently_deleted()\n  ext4: fix fault handling when mounted with -o dax,ro\n  ext4: fix quota inconsistency during orphan cleanup for read-only mounts\n  ext4: fix incorrect quotaoff if the quota feature is enabled\n  ext4: remove useless test and assignment in strtohash functions\n  ext4: backward compatibility support for Lustre ea_inode implementation\n  ext4: remove timebomb in ext4_decode_extra_time()\n  ext4: use sizeof(*ptr)\n  ext4: in ext4_seek_{hole,data}, return -ENXIO for negative offsets\n  ext4: reduce lock contention in __ext4_new_inode\n  ext4: cleanup goto next group\n  ext4: do not unnecessarily allocate buffer in recently_deleted() Merge tag 'xfs-4.14-merge-7' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull XFS updates from Darrick Wong:\n \"Here are the changes for xfs for 4.14. Most of these are cleanups and\n  fixes for bad behavior, as we're mostly focusing on improving\n  reliablity this cycle (read: there's potentially a lot of stuff on the\n  horizon for 4.15 so better to spend a few weeks killing other bugs\n  now).\n\n  Summary:\n\n   - Write unmount record for a ro mount to avoid unnecessary log replay\n\n   - Clean up orphaned inodes when mounting fs readonly\n\n   - Resubmit inode log items when buffer writeback fails to avoid\n     umount hang\n\n   - Fix log recovery corruption problems when log headers wrap around\n     the end\n\n   - Avoid infinite loop searching for free inodes when inode counters\n     are wrong\n\n   - Evict inodes involved with log redo so that we don't leak them\n     later\n\n   - Fix a potential race between reclaim and inode cluster freeing\n\n   - Refactor the inode joining code w.r.t. transaction rolling &\n     deferred ops\n\n   - Fix a bug where the log doesn't properly deal with dirty buffers\n     that are about to become ordered buffers\n\n   - Fix the extent swap code to deal with making dirty buffers ordered\n     properly\n\n   - Consolidate page fault handlers\n\n   - Refactor the incore extent manipulation functions to use the iext\n     abstractions instead of directly modifying with extent data\n\n   - Disable crashy chattr +/-x until we fix it\n\n   - Don't allow us to set S_DAX for v2 inodes\n\n   - Various cleanups\n\n   - Clarify some documentation\n\n   - Fix a problem where fsync and a log commit race to send the disk a\n     flush command, resulting in a small window where power fail data\n     loss could occur\n\n   - Simplify some rmap operations in the fcollapse code\n\n   - Fix some use-after-free problems in async writeback\"\n\n* tag 'xfs-4.14-merge-7' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux: (44 commits)\n  xfs: use kmem_free to free return value of kmem_zalloc\n  xfs: open code end_buffer_async_write in xfs_finish_page_writeback\n  xfs: don't set v3 xflags for v2 inodes\n  xfs: fix compiler warnings\n  fsmap: fix documentation of FMR_OF_LAST\n  xfs: simplify the rmap code in xfs_bmse_merge\n  xfs: remove unused flags arg from xfs_file_iomap_begin_delay\n  xfs: fix incorrect log_flushed on fsync\n  xfs: disable per-inode DAX flag\n  xfs: replace xfs_qm_get_rtblks with a direct call to xfs_bmap_count_leaves\n  xfs: rewrite xfs_bmap_count_leaves using xfs_iext_get_extent\n  xfs: use xfs_iext_*_extent helpers in xfs_bmap_split_extent_at\n  xfs: use xfs_iext_*_extent helpers in xfs_bmap_shift_extents\n  xfs: move some code around inside xfs_bmap_shift_extents\n  xfs: use xfs_iext_get_extent in xfs_bmap_first_unused\n  xfs: switch xfs_bmap_local_to_extents to use xfs_iext_insert\n  xfs: add a xfs_iext_update_extent helper\n  xfs: consolidate the various page fault handlers\n  iomap: return VM_FAULT_* codes from iomap_page_mkwrite\n  xfs: relog dirty buffers during swapext bmbt owner change\n  ... Merge tag 'gfs2-4.14.fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2\n\nPull GFS2 updates from Bob Peterson:\n \"We've got a whopping 29 GFS2 patches for this merge window, mainly\n  because we held some back from the previous merge window until we\n  could get them perfected and well tested. We have a couple patch sets,\n  including my patch set for protecting glock gl_object and Andreas\n  Gruenbacher's patch set to fix the long-standing shrink- slab hang,\n  plus a bunch of assorted bugs and cleanups.\n\n  Summary:\n\n   - I fixed a bug whereby an IO error would lead to a double-brelse.\n\n   - Andreas Gruenbacher made a minor cleanup to call his relatively new\n     function, gfs2_holder_initialized, rather than doing it manually.\n     This was just missed by a previous patch set.\n\n   - Jan Kara fixed a bug whereby the SGID was being cleared when\n     inheriting ACLs.\n\n   - Andreas found a bug and fixed it in his previous patch, \"Get rid of\n     flush_delayed_work in gfs2_evict_inode\". A call to\n     flush_delayed_work was deleted from *gfs2_inode_lookup and added to\n     gfs2_create_inode.\n\n   - Wang Xibo found and fixed a list_add call in inode_go_lock that\n     specified the parameters in the wrong order.\n\n   - Coly Li submitted a patch to add the REQ_PRIO to some of GFS2's\n     metadata reads that were accidentally missing them.\n\n   - I submitted a 4-patch set to protect the glock gl_object field.\n     GFS2 was setting and checking gl_object with no locking mechanism,\n     so the value was occasionally stomped on, which caused file system\n     corruption.\n\n   - I submitted a small cleanup to function gfs2_clear_rgrpd. It was\n     needlessly adding rgrp glocks to the lru list, then pulling them\n     back off immediately. The rgrp glocks don't use the lru list\n     anyway, so doing so was just a waste of time.\n\n   - I submitted a patch that checks the GLOF_LRU flag on a glock before\n     trying to remove it from the lru_list. This avoids a lot of\n     unnecessary spin_lock contention.\n\n   - I submitted a patch to delete GFS2's debugfs files only after we\n     evict all the glocks. Before this patch, GFS2 would delete the\n     debugfs files, and if unmount hung waiting for a glock, there was\n     no way to debug the problem. Now, if a hang occurs during umount,\n     we can examine the debugfs files to figure out why it's hung.\n\n   - Andreas Gruenbacher submitted a patch to fix some trivial typos.\n\n   - Andreas also submitted a five-part patch set to fix the\n     longstanding hang involving the slab shrinker: dlm requires memory,\n     calls the inode shrinker, which calls gfs2's evict, which calls\n     back into DLM before it can evict an inode.\n\n   - Abhi Das submitted a patch to forcibly flush the active items list\n     to relieve memory pressure. This fixes a long-standing bug whereby\n     GFS2 was getting hung permanently in balance_dirty_pages.\n\n   - Thomas Tai submitted a patch to fix a slab corruption problem due\n     to a residual pointer left in the lock_dlm lockstruct.\n\n   - I submitted a patch to withdraw the file system if IO errors are\n     encountered while writing to the journals or statfs system file\n     which were previously not being sent back up. Before, some IO\n     errors were sometimes not be detected for several hours, and at\n     recovery time, the journal errors made journal replay impossible.\n\n   - Andreas has a patch to fix an annoying format-truncation compiler\n     warning so GFS2 compiles cleanly.\n\n   - I have a patch that fixes a handful of sparse compiler warnings.\n\n   - Andreas fixed up an useless gl_object warning caused by an earlier\n     patch.\n\n   - Arvind Yadav added a patch to properly constify our rhashtable\n     params declare.\n\n   - I added a patch to fix a regression caused by the non-recursive\n     delete and truncate patch that caused file system blocks to not be\n     properly freed.\n\n   - Ernesto A. Fernández added a patch to fix a place where GFS2 would\n     send back the wrong return code setting extended attributes.\n\n   - Ernesto also added a patch to fix a case in which GFS2 was\n     improperly setting an inode's i_mode, potentially granting access\n     to the wrong users\"\n\n* tag 'gfs2-4.14.fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2: (29 commits)\n  gfs2: preserve i_mode if __gfs2_set_acl() fails\n  gfs2: don't return ENODATA in __gfs2_xattr_set unless replacing\n  GFS2: Fix non-recursive truncate bug\n  gfs2: constify rhashtable_params\n  GFS2: Fix gl_object warnings\n  GFS2: Fix up some sparse warnings\n  gfs2: Silence gcc format-truncation warning\n  GFS2: Withdraw for IO errors writing to the journal or statfs\n  gfs2: fix slab corruption during mounting and umounting gfs file system\n  gfs2: forcibly flush ail to relieve memory pressure\n  gfs2: Clean up waiting on glocks\n  gfs2: Defer deleting inodes under memory pressure\n  gfs2: gfs2_evict_inode: Put glocks asynchronously\n  gfs2: Get rid of gfs2_set_nlink\n  gfs2: gfs2_glock_get: Wait on freeing glocks\n  gfs2: Fix trivial typos\n  GFS2: Delete debugfs files only after we evict the glocks\n  GFS2: Don't waste time locking lru_lock for non-lru glocks\n  GFS2: Don't bother trying to add rgrps to the lru list\n  GFS2: Clear gl_object when deleting an inode in gfs2_delete_inode\n  ... Merge tag 'devprop-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull device properties framework updates from Rafael Wysocki:\n \"These introduce fwnode operations for all of the separate types of\n  'firmware nodes' that can be handled by the device properties\n  framework, make the framework use const fwnode arguments all over, add\n  a helper for the consolidated handling of node references and switch\n  over the framework to the new UUID API.\n\n  Specifics:\n\n   - Introduce fwnode operations for all of the separate types of\n     'firmware nodes' that can be handled by the device properties\n     framework and drop the type field from struct fwnode_handle (Sakari\n     Ailus, Arnd Bergmann).\n\n   - Make the device properties framework use const fwnode arguments\n     where possible (Sakari Ailus).\n\n   - Add a helper for the consolidated handling of node references to\n     the device properties framework (Sakari Ailus).\n\n   - Switch over the ACPI part of the device properties framework to the\n     new UUID API (Andy Shevchenko)\"\n\n* tag 'devprop-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: device property: Switch to use new generic UUID API\n  device property: export irqchip_fwnode_ops\n  device property: Introduce fwnode_property_get_reference_args\n  device property: Constify fwnode property API\n  device property: Constify argument to pset fwnode backend\n  ACPI: Constify internal fwnode arguments\n  ACPI: Constify acpi_bus helper functions, switch to macros\n  ACPI: Prepare for constifying acpi_get_next_subnode() fwnode argument\n  device property: Get rid of struct fwnode_handle type field\n  ACPI: Use IS_ERR_OR_NULL() instead of non-NULL check in is_acpi_data_node() Merge tag 'acpi-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI updates from Rafael Wysocki:\n \"These include a usual ACPICA code update (this time to upstream\n  revision 20170728), a fix for a boot crash on some systems with\n  Thunderbolt devices connected at boot time, a rework of the handling\n  of PCI bridges when setting up device wakeup, new support for Apple\n  device properties, support for DMA configurations reported via ACPI on\n  ARM64, APEI-related updates, ACPI EC driver updates and assorted minor\n  modifications in several places.\n\n  Specifics:\n\n   - Update the ACPICA code in the kernel to upstream revision 20170728\n     including:\n      * Alias operator handling update (Bob Moore).\n      * Deferred resolution of reference package elements (Bob Moore).\n      * Support for the _DMA method in walk resources (Bob Moore).\n      * Tables handling update and support for deferred table\n        verification (Lv Zheng).\n      * Update of SMMU models for IORT (Robin Murphy).\n      * Compiler and disassembler updates (Alex James, Erik Schmauss,\n        Ganapatrao Kulkarni, James Morse).\n      * Tools updates (Erik Schmauss, Lv Zheng).\n      * Assorted minor fixes and cleanups (Bob Moore, Kees Cook, Lv\n        Zheng, Shao Ming).\n\n   - Rework the initialization of non-wakeup GPEs with method handlers\n     in order to address a boot crash on some systems with Thunderbolt\n     devices connected at boot time where we miss an early hotplug event\n     due to a delay in GPE enabling (Rafael Wysocki).\n\n   - Rework the handling of PCI bridges when setting up ACPI-based\n     device wakeup in order to avoid disabling wakeup for bridges\n     prematurely (Rafael Wysocki).\n\n   - Consolidate Apple DMI checks throughout the tree, add support for\n     Apple device properties to the device properties framework and use\n     these properties for the handling of I2C and SPI devices on Apple\n     systems (Lukas Wunner).\n\n   - Add support for _DMA to the ACPI-based device properties lookup\n     code and make it possible to use the information from there to\n     configure DMA regions on ARM64 systems (Lorenzo Pieralisi).\n\n   - Fix several issues in the APEI code, add support for exporting the\n     BERT error region over sysfs and update APEI MAINTAINERS entry with\n     reviewers information (Borislav Petkov, Dongjiu Geng, Loc Ho, Punit\n     Agrawal, Tony Luck, Yazen Ghannam).\n\n   - Fix a potential initialization ordering issue in the ACPI EC driver\n     and clean it up somewhat (Lv Zheng).\n\n   - Update the ACPI SPCR driver to extend the existing XGENE 8250\n     workaround in it to a new platform (m400) and to work around an\n     Xgene UART clock issue (Graeme Gregory).\n\n   - Add a new utility function to the ACPI core to support using ACPI\n     OEM ID / OEM Table ID / Revision for system identification in\n     blacklisting or similar and switch over the existing code already\n     using this information to this new interface (Toshi Kani).\n\n   - Fix an xpower PMIC issue related to GPADC reads that always return\n     0 without extra pin manipulations (Hans de Goede).\n\n   - Add statements to print debug messages in a couple of places in the\n     ACPI core for easier diagnostics (Rafael Wysocki).\n\n   - Clean up the ACPI processor driver slightly (Colin Ian King, Hanjun\n     Guo).\n\n   - Clean up the ACPI x86 boot code somewhat (Andy Shevchenko).\n\n   - Add a quirk for Dell OptiPlex 9020M to the ACPI backlight driver\n     (Alex Hung).\n\n   - Assorted fixes, cleanups and updates related to ACPI (Amitoj Kaur\n     Chawla, Bhumika Goyal, Frank Rowand, Jean Delvare, Punit Agrawal,\n     Ronald Tschalär, Sumeet Pawnikar)\"\n\n* tag 'acpi-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (75 commits)\n  ACPI / APEI: Suppress message if HEST not present\n  intel_pstate: convert to use acpi_match_platform_list()\n  ACPI / blacklist: add acpi_match_platform_list()\n  ACPI, APEI, EINJ: Subtract any matching Register Region from Trigger resources\n  ACPI: make device_attribute const\n  ACPI / sysfs: Extend ACPI sysfs to provide access to boot error region\n  ACPI: APEI: fix the wrong iteration of generic error status block\n  ACPI / processor: make function acpi_processor_check_duplicates() static\n  ACPI / EC: Clean up EC GPE mask flag\n  ACPI: EC: Fix possible issues related to EC initialization order\n  ACPI / PM: Add debug statements to acpi_pm_notify_handler()\n  ACPI: Add debug statements to acpi_global_event_handler()\n  ACPI / scan: Enable GPEs before scanning the namespace\n  ACPICA: Make it possible to enable runtime GPEs earlier\n  ACPICA: Dispatch active GPEs at init time\n  ACPI: SPCR: work around clock issue on xgene UART\n  ACPI: SPCR: extend XGENE 8250 workaround to m400\n  ACPI / LPSS: Don't abort ACPI scan on missing mem resource\n  mailbox: pcc: Drop uninformative output during boot\n  ACPI/IORT: Add IORT named component memory address limits\n  ... Merge tag 'pm-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management updates from Rafael Wysocki:\n \"This time (again) cpufreq gets the majority of changes which mostly\n  are driver updates (including a major consolidation of intel_pstate),\n  some schedutil governor modifications and core cleanups.\n\n  There also are some changes in the system suspend area, mostly related\n  to diagnostics and debug messages plus some renames of things related\n  to suspend-to-idle. One major change here is that suspend-to-idle is\n  now going to be preferred over S3 on systems where the ACPI tables\n  indicate to do so and provide requsite support (the Low Power Idle S0\n  _DSM in particular). The system sleep documentation and the tools\n  related to it are updated too.\n\n  The rest is a few cpuidle changes (nothing major), devfreq updates,\n  generic power domains (genpd) framework updates and a few assorted\n  modifications elsewhere.\n\n  Specifics:\n\n   - Drop the P-state selection algorithm based on a PID controller from\n     intel_pstate and make it use the same P-state selection method\n     (based on the CPU load) for all types of systems in the active mode\n     (Rafael Wysocki, Srinivas Pandruvada).\n\n   - Rework the cpufreq core and governors to make it possible to take\n     cross-CPU utilization updates into account and modify the schedutil\n     governor to actually do so (Viresh Kumar).\n\n   - Clean up the handling of transition latency information in the\n     cpufreq core and untangle it from the information on which drivers\n     cannot do dynamic frequency switching (Viresh Kumar).\n\n   - Add support for new SoCs (MT2701/MT7623 and MT7622) to the mediatek\n     cpufreq driver and update its DT bindings (Sean Wang).\n\n   - Modify the cpufreq dt-platdev driver to autimatically create\n     cpufreq devices for the new (v2) Operating Performance Points (OPP)\n     DT bindings and update its whitelist of supported systems (Viresh\n     Kumar, Shubhrajyoti Datta, Marc Gonzalez, Khiem Nguyen, Finley\n     Xiao).\n\n   - Add support for Ux500 to the cpufreq-dt driver and drop the\n     obsolete dbx500 cpufreq driver (Linus Walleij, Arnd Bergmann).\n\n   - Add new SoC (R8A7795) support to the cpufreq rcar driver (Khiem\n     Nguyen).\n\n   - Fix and clean up assorted issues in the cpufreq drivers and core\n     (Arvind Yadav, Christophe Jaillet, Colin Ian King, Gustavo Silva,\n     Julia Lawall, Leonard Crestez, Rob Herring, Sudeep Holla).\n\n   - Update the IO-wait boost handling in the schedutil governor to make\n     it less aggressive (Joel Fernandes).\n\n   - Rework system suspend diagnostics to make it print fewer messages\n     to the kernel log by default, add a sysfs knob to allow more\n     suspend-related messages to be printed and add Low Power S0 Idle\n     constraints checks to the ACPI suspend-to-idle code (Rafael\n     Wysocki, Srinivas Pandruvada).\n\n   - Prefer suspend-to-idle over S3 on ACPI-based systems with the\n     ACPI_FADT_LOW_POWER_S0 flag set and the Low Power Idle S0 _DSM\n     interface present in the ACPI tables (Rafael Wysocki).\n\n   - Update documentation related to system sleep and rename a number of\n     items in the code to make it cleare that they are related to\n     suspend-to-idle (Rafael Wysocki).\n\n   - Export a variable allowing device drivers to check the target\n     system sleep state from the core system suspend code (Florian\n     Fainelli).\n\n   - Clean up the cpuidle subsystem to handle the polling state on x86\n     in a more straightforward way and to use %pOF instead of full_name\n     (Rafael Wysocki, Rob Herring).\n\n   - Update the devfreq framework to fix and clean up a few minor issues\n     (Chanwoo Choi, Rob Herring).\n\n   - Extend diagnostics in the generic power domains (genpd) framework\n     and clean it up slightly (Thara Gopinath, Rob Herring).\n\n   - Fix and clean up a couple of issues in the operating performance\n     points (OPP) framework (Viresh Kumar, Waldemar Rymarkiewicz).\n\n   - Add support for RV1108 to the rockchip-io Adaptive Voltage Scaling\n     (AVS) driver (David Wu).\n\n   - Fix the usage of notifiers in CPU power management on some\n     platforms (Alex Shi).\n\n   - Update the pm-graph system suspend/hibernation and boot profiling\n     utility (Todd Brandt).\n\n   - Make it possible to run the cpupower utility without CPU0 (Prarit\n     Bhargava)\"\n\n* tag 'pm-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (87 commits)\n  cpuidle: Make drivers initialize polling state\n  cpuidle: Move polling state initialization code to separate file\n  cpuidle: Eliminate the CPUIDLE_DRIVER_STATE_START symbol\n  cpufreq: imx6q: Fix imx6sx low frequency support\n  cpufreq: speedstep-lib: make several arrays static, makes code smaller\n  PM: docs: Delete the obsolete states.txt document\n  PM: docs: Describe high-level PM strategies and sleep states\n  PM / devfreq: Fix memory leak when fail to register device\n  PM / devfreq: Add dependency on PM_OPP\n  PM / devfreq: Move private devfreq_update_stats() into devfreq\n  PM / devfreq: Convert to using %pOF instead of full_name\n  PM / AVS: rockchip-io: add io selectors and supplies for RV1108\n  cpufreq: ti: Fix 'of_node_put' being called twice in error handling path\n  cpufreq: dt-platdev: Drop few entries from whitelist\n  cpufreq: dt-platdev: Automatically create cpufreq device with OPP v2\n  ARM: ux500: don't select CPUFREQ_DT\n  cpuidle: Convert to using %pOF instead of full_name\n  cpufreq: Convert to using %pOF instead of full_name\n  PM / Domains: Convert to using %pOF instead of full_name\n  cpufreq: Cap the default transition delay value to 10 ms\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID update from Jiri Kosina:\n\n - Wacom driver fixes/updates (device name generation improvements,\n   touch ring status support) from Jason Gerecke\n\n - T100 touchpad support from Hans de Goede\n\n - support for batteries driven by HID input reports, from Dmitry\n   Torokhov\n\n - Arnd pointed out that driver_lock semaphore is superfluous, as driver\n   core already provides all the necessary concurency protection.\n   Removal patch from Binoy Jayan\n\n - logical minimum numbering improvements in sensor-hub driver, from\n   Srinivas Pandruvada\n\n - support for Microsoft Win8 Wireless Radio Controls extensions from\n   João Paulo Rechi Vita\n\n - assorted small fixes and device ID additions\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid: (28 commits)\n  HID: prodikeys: constify snd_rawmidi_ops structures\n  HID: sensor: constify platform_device_id\n  HID: input: throttle battery uevents\n  HID: usbmouse: constify usb_device_id and fix space before '[' error\n  HID: usbkbd: constify usb_device_id and fix space before '[' error.\n  HID: hid-sensor-hub: Force logical minimum to 1 for power and report state\n  HID: wacom: Do not completely map WACOM_HID_WD_TOUCHRINGSTATUS usage\n  HID: asus: Add T100CHI bluetooth keyboard dock touchpad support\n  HID: ntrig: constify attribute_group structures.\n  HID: logitech-hidpp: constify attribute_group structures.\n  HID: sensor: constify attribute_group structures.\n  HID: multitouch: constify attribute_group structures.\n  HID: multitouch: use proper symbolic constant for 0xff310076 application\n  HID: multitouch: Support Asus T304UA media keys\n  HID: multitouch: Support HID_GD_WIRELESS_RADIO_CTLS\n  HID: input: optionally use device id in battery name\n  HID: input: map digitizer battery usage\n  HID: Remove the semaphore driver_lock\n  HID: wacom: add USB_HID dependency\n  HID: add ALWAYS_POLL quirk for Logitech 0xc077\n  ... Merge tag 'gpio-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO updates from Linus Walleij:\n \"This is the bulk of the GPIO changes for the v4.14 cycle.\n\n  Not so much changes this time, phew. David Daney and Bartosz\n  Golaszewski did all the really interesting work in infrastructure\n  improvement across GPIO and IRQ core, hats off for them and to tglx\n  and Marc Z for general help with these patch sets.\n\n  Core changes:\n\n   - Allow the GPIO irqchip to allocate IRQs dynamically. This is an\n     important change on systems where only a restricted number of IRQs,\n     lesser than the number of GPIO lines, can be utilized. Now we can\n     allocate these on a first-come-first-served basis instead of\n     hogging up valuable IRQ lines.\n\n   - Serious fix-up of the kerneldoc documentation and inclusion into\n     the kerneldoc builds.\n\n   - Pulled in the IRQ simulator from the IRQ core tree and use this in\n     the GPIO mockup driver for exhaustive testing of interrupt\n     abilities.\n\n  New drivers:\n\n   - New driver for ThunderX and OCTEON-TX. This is especially\n     interesting as it picks up improvements from the IRQ core that\n     allow us to handle fasteoi ACKs upwards in a hierarchy when there\n     are IRQ flag latches on several levels in a hierarchy. Very\n     interesting work here.\n\n   - New subdriver for Renesas R-Car r8a7745 (RZ/G1E).\n\n  Misc:\n\n   - Several fixes and improvements for Xilinx Zynq GPIO.\n\n   - Support an enablement GPIO for the 74x164 GPIO.\n\n   - Switch a bunch of chips to use devres to allocate irq descriptors.\n\n   - A bunch of constification fixes\"\n\n* tag 'gpio-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio: (63 commits)\n  gpio: mockup: remove unused variable gc\n  gpio: pl061: constify amba_id\n  Revert \"gpiolib: request the gpio before querying its direction\"\n  gpio: twl6040: remove unneeded forward declaration\n  gpio: zevio: make gpio_chip const\n  gpio: add gpio_add_lookup_tables() to add several tables at once\n  gpio: rcar: Add r8a7745 (RZ/G1E) support\n  gpio: brcmstb: check return value of gpiochip_irqchip_add()\n  MAINTAINERS: Add entry for THUNDERX GPIO Driver.\n  gpio: Add gpio driver support for ThunderX and OCTEON-TX\n  gpio: mockup: use irq_sim\n  gpio: mxs: use devres for irq generic chip\n  gpio: mxc: use devres for irq generic chip\n  gpio: pch: use devres for irq generic chip\n  gpio: ml-ioh: use devres for irq generic chip\n  gpio: sta2x11: use devres for irq generic chip\n  gpio: sta2x11: disallow unbinding the driver\n  gpio: mxs: disallow unbinding the driver\n  gpio: mxc: disallow unbinding the driver\n  gpio: aspeed: Remove reference to clock name in debounce warning message\n  ... Merge tag 'pinctrl-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control updates from Linus Walleij:\n \"This is the big bulk of pin control changes for the v4.14 kernel.\n  There are just a few bigger changes (new drivers mostly) and then a\n  lot of small patches all over the place.\n\n  Core changes:\n   - Decision to wrap the sleep mode of the Spreadtrum and in the future\n     others into a specially tagged state. The generic DT bindings and\n     the new Spreadtrum driver conforms to this. Others should be moved\n     over if possible.\n\n  New drivers:\n   - Spreadtrum SoCs especially the SC9860 SoC.\n   - Storlink/Cortina Gemini 3512 and 3516 SoCs.\n\n  New subdrivers:\n   - Intel Denverton subdriver.\n   - Intel Cannon Lake subdriver.\n   - Intel Lewisburg subdriver.\n   - Allwinner sunxi: R40 subdriver for A10.\n   - Socionext uniphier PXs3 subdriver.\n   - Rockchip RK3128 subdriver.\n   - Renesas SH-PFC R8A77995 subdriver.\n\n  Miscellaneous:\n   - Qualcomm APQ8064 can handle general purpose clock muxing.\n   - Mediatek MT7623 PCIe mux data fixed up.\n   - Intel GPIO IRQs are disabled during suspend.\n   - Several fixes and addtions to Renesas r8a7796.\n   - Qualcomm SPMI GPIO supports dtest route and LV/MV subtype.\n   - Input schmitt trigger support in Rockchip RV1108.\n   - Aspeed G4 and G5 USB host/device pin control control added.\n   - Qualcomm IPQ4019 has matured with a few missing pin groups and\n     control bits put in place.\n   - Lots of constification, this is the latest in cocinelle fixes\"\n\n* tag 'pinctrl-v4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl: (147 commits)\n  Revert \"pinctrl: sunxi: Don't enforce bias disable (for now)\"\n  pinctrl: uniphier: fix members of rmii group for Pro4\n  pinctrl: Delete an error message\n  pinctrl: core: Delete an error message\n  pinctrl: intel: Read back TX buffer state\n  pinctrl: rockchip: Add rv1108 recalculated iomux support\n  pinctrl: intel: Decrease indentation in intel_gpio_set()\n  pinctrl: rza1: Remove suffix from gpiochip label\n  pinctrl: qcom: spmi-gpio: Correct power_source range check\n  pinctrl: freescale: make mxs_regs const\n  pinctrl: aspeed: Rework strap register write logic for the AST2500\n  pinctrl: rza1: off by one in rza1_parse_gpiochip()\n  pinctrl: qcom: General Purpose clocks for apq8064\n  pinctrl: sprd: Add Spreadtrum pin control driver\n  dt-bindings: pinctrl: Add DT bindings for Spreadtrum SC9860\n  pinctrl: Add sleep related state to indicate sleep related configs\n  pinctrl: mediatek: update PCIe mux data for MT7623\n  pinctrl: intel: Add Intel Lewisburg GPIO support\n  pinctrl: intel: Add Intel Cannon Lake PCH-H pin controller support\n  pinctrl: aspeed: Fix ast2500 strap register write logic\n  ... Merge tag 'regulator-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator updates from Mark Brown:\n \"This is an extremely quiet release for the regulator subsystem, it's\n  all fairly minor fixes and cleanups plus a few new drivers and ddevice\n  ID additions:\n\n   - Support for MediaTek MT6380, Ricoh RC5T619 and ST Voltage Reference\n     Buffers\"\n\n* tag 'regulator-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator: (24 commits)\n  regulator: Add support for stm32-vrefbuf\n  regulator: Add STM32 Voltage Reference Buffer\n  regulator: pv88090: Exception handling for out of bounds\n  regulator: da9063: Return an error code on probe failure\n  regulator: rn5t618: add RC5T619 PMIC support\n  regulator: ltc3589: constify i2c_device_id\n  regulator: fan53555: fix I2C device ids\n  regulator: add fixes with MT6397 dt-bindings shouldn't reference driver\n  regulator: add fixes with MT6323 dt-bindings shouldn't reference driver\n  regulator: add fixes with MT6311 dt-bindings shouldn't reference driver\n  regulator: Add document for MediaTek MT6380 regulator\n  regulator: mt6380: Add support for MT6380\n  regulator: pwm-regulator: Remove unneeded gpiod NULL check\n  regulator: core: fix a possible race in disable_work handling\n  regulator: fan53555: Use of_device_get_match_data() to simplify probe\n  regulator: of: regulator_of_get_init_data() missing of_node_get()\n  regulator: pwm-regulator: fix example syntax\n  regulator: Convert to using %pOF instead of full_name\n  regulator: cpcap: Add OF mode mapping\n  regulator: cpcap: Fix standby mode\n  ... Merge tag 'spi-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi updates from Mark Brown:\n \"A fairly quiet release for the SPI subsystem:\n\n   - Move to using IDR for allocating bus numbers\n\n   - Modernisation of the ep93xx driver, removing a lot of open coding\n     and using the framework more\n\n   - The tools have been moved to use the standard tools build system\n     and an install target added (there will be a fairly trivial\n     conflict with tip resulting from the changes in the main tools\n     Makefile)\n\n   - A refactoring of the Qualcomm QUP driver which enables new variants\n     to be supported\n\n   - Explicit support for the Freescale i.MX53 and i.MX6 SPI, Renesas\n     R-Car H3 and Rockchip RV1108 controllers\"\n\n* tag 'spi-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi: (71 commits)\n  spi: spi-falcon: drop check of boot select\n  spi: imx: fix use of native chip-selects with devicetree\n  spi: pl022: constify amba_id\n  spi: imx: fix little-endian build\n  spi: omap: Allocate bus number from spi framework\n  spi: Kernel coding style fixes\n  spi: imx: dynamic burst length adjust for PIO mode\n  spi: Pick spi bus number from Linux idr or spi alias\n  spi: rockchip: configure CTRLR1 according to size and data frame\n  spi: altera: Consolidate TX/RX data register access\n  spi: altera: Switch to SPI core transfer queue management\n  spi: rockchip: add compatible string for rv1108 spi\n  spi: qup: fix 64-bit build warning\n  spi: qup: hide warning for uninitialized variable\n  spi: spi-ep93xx: use the default master transfer queueing mechanism\n  spi: spi-ep93xx: remove private data 'current_msg'\n  spi: spi-ep93xx: pass the spi_master pointer around\n  spi: spi-ep93xx: absorb the interrupt enable/disable helpers\n  spi: spi-ep93xx: add spi master prepare_transfer_hardware()\n  spi: spi-ep93xx: use 32-bit read/write for all registers\n  ... Merge tag 'edac_for_4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp\n\nPull EDAC updates from Borislav Petkov:\n\n - pnd2_edac: A minimal sideband driver (Tony Luck)\n\n - small-ish cleanups and fixes all over the place\n\n* tag 'edac_for_4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:\n  EDAC, mce_amd: Get rid of local var in amd_filter_mce()\n  EDAC, mce_amd: Get rid of most struct cpuinfo_x86 uses\n  EDAC, mce_amd: Rename decode_smca_errors() to decode_smca_error()\n  EDAC: Make device_type const\n  EDAC, pnd2: Properly toggle hidden state for P2SB PCI device\n  EDAC, pnd2: Conditionally unhide/hide the P2SB PCI device to read BAR\n  EDAC, pnd2: Mask off the lower four bits of a BAR\n  EDAC, thunderx: Fix error handling path in thunderx_lmc_probe()\n  EDAC, altera: Fix error handling path in altr_edac_device_probe()\n  EDAC, pnd2: Build in a minimal sideband driver for Apollo Lake\n  EDAC, sb_edac: Classify memory mirroring modes\n  EDAC, cpc925, ppc4xx: Convert to using %pOF instead of full_name\n  EDAC: Get rid of mci->mod_ver\n  EDAC: Constify attribute_group structures\n  EDAC, mce_amd: Use cpu_to_node() to find the node ID Merge tag 'char-misc-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver updates from Greg KH:\n \"Here is the big char/misc driver update for 4.14-rc1.\n\n  Lots of different stuff in here, it's been an active development cycle\n  for some reason. Highlights are:\n\n   - updated binder driver, this brings binder up to date with what\n     shipped in the Android O release, plus some more changes that\n     happened since then that are in the Android development trees.\n\n   - coresight updates and fixes\n\n   - mux driver file renames to be a bit \"nicer\"\n\n   - intel_th driver updates\n\n   - normal set of hyper-v updates and changes\n\n   - small fpga subsystem and driver updates\n\n   - lots of const code changes all over the driver trees\n\n   - extcon driver updates\n\n   - fmc driver subsystem upadates\n\n   - w1 subsystem minor reworks and new features and drivers added\n\n   - spmi driver updates\n\n  Plus a smattering of other minor driver updates and fixes.\n\n  All of these have been in linux-next with no reported issues for a\n  while\"\n\n* tag 'char-misc-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (244 commits)\n  ANDROID: binder: don't queue async transactions to thread.\n  ANDROID: binder: don't enqueue death notifications to thread todo.\n  ANDROID: binder: Don't BUG_ON(!spin_is_locked()).\n  ANDROID: binder: Add BINDER_GET_NODE_DEBUG_INFO ioctl\n  ANDROID: binder: push new transactions to waiting threads.\n  ANDROID: binder: remove proc waitqueue\n  android: binder: Add page usage in binder stats\n  android: binder: fixup crash introduced by moving buffer hdr\n  drivers: w1: add hwmon temp support for w1_therm\n  drivers: w1: refactor w1_slave_show to make the temp reading functionality separate\n  drivers: w1: add hwmon support structures\n  eeprom: idt_89hpesx: Support both ACPI and OF probing\n  mcb: Fix an error handling path in 'chameleon_parse_cells()'\n  MCB: add support for SC31 to mcb-lpc\n  mux: make device_type const\n  char: virtio: constify attribute_group structures.\n  Documentation/ABI: document the nvmem sysfs files\n  lkdtm: fix spelling mistake: \"incremeted\" -> \"incremented\"\n  perf: cs-etm: Fix ETMv4 CONFIGR entry in perf.data file\n  nvmem: include linux/err.h from header\n  ... Merge tag 'driver-core-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core update from Greg KH:\n \"Here is the \"big\" driver core update for 4.14-rc1.\n\n  It's really not all that big, the largest thing here being some\n  firmware tests to help ensure that that crazy api is working properly.\n\n  There's also a new uevent for when a driver is bound or unbound from a\n  device, fixing a hole in the driver model that's been there since the\n  very beginning. Many thanks to Dmitry for being persistent and\n  pointing out how wrong I was about this all along :)\n\n  Patches for the new uevents are already in the systemd tree, if people\n  want to play around with them.\n\n  Otherwise just a number of other small api changes and updates here,\n  nothing major. All of these patches have been in linux-next for a\n  while with no reported issues\"\n\n* tag 'driver-core-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (28 commits)\n  driver core: bus: Fix a potential double free\n  Do not disable driver and bus shutdown hook when class shutdown hook is set.\n  base: topology: constify attribute_group structures.\n  base: Convert to using %pOF instead of full_name\n  kernfs: Clarify lockdep name for kn->count\n  fbdev: uvesafb: remove DRIVER_ATTR() usage\n  xen: xen-pciback: remove DRIVER_ATTR() usage\n  driver core: Document struct device:dma_ops\n  mod_devicetable: Remove excess description from structured comment\n  test_firmware: add batched firmware tests\n  firmware: enable a debug print for batched requests\n  firmware: define pr_fmt\n  firmware: send -EINTR on signal abort on fallback mechanism\n  test_firmware: add test case for SIGCHLD on sync fallback\n  initcall_debug: add deferred probe times\n  Input: axp20x-pek - switch to using devm_device_add_group()\n  Input: synaptics_rmi4 - use devm_device_add_group() for attributes in F01\n  Input: gpio_keys - use devm_device_add_group() for attributes\n  driver core: add devm_device_add_group() and friends\n  driver core: add device_{add|remove}_group() helpers\n  ... Merge tag 'staging-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging/IIO driver updates from Greg KH:\n \"Here is the big staging and IIO driver update for 4.14-rc1.\n\n  Lots of staging driver fixes and cleanups, including some reorginizing\n  of the lustre header files to try to impose some sanity on what is,\n  and what is not, the uapi for that filesystem.\n\n  There are some tty core changes in here as well, as the speakup\n  drivers need them, and that's ok with me, they are sane and the\n  speakup code is getting nicer because of it.\n\n  There is also the addition of the obiligatory new wifi driver, just\n  because it has been a release or two since we added our last one...\n\n  Other than that, lots and lots of small coding style fixes, as usual.\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'staging-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging: (612 commits)\n  staging:rtl8188eu:core Fix remove unneccessary else block\n  staging: typec: fusb302: make structure fusb302_psy_desc static\n  staging: unisys: visorbus: make two functions static\n  staging: fsl-dpaa2/eth: fix off-by-one FD ctrl bitmaks\n  staging: r8822be: Simplify deinit_priv()\n  staging: r8822be: Remove some dead code\n  staging: vboxvideo: Use CONFIG_DRM_KMS_FB_HELPER to check for fbdefio availability\n  staging:rtl8188eu Fix comparison to NULL\n  staging: rts5208: rename mmc_ddr_tunning_rx_cmd to mmc_ddr_tuning_rx_cmd\n  Staging: Pi433: style fix - tabs and spaces\n  staging: pi433: fix spelling mistake: \"preample\" -> \"preamble\"\n  staging:rtl8188eu:core Fix Code Indent\n  staging: typec: fusb302: Export current-limit through a power_supply class dev\n  staging: typec: fusb302: Add support for USB2 charger detection through extcon\n  staging: typec: fusb302: Use client->irq as irq if set\n  staging: typec: fusb302: Get max snk mv/ma/mw from device-properties\n  staging: typec: fusb302: Set max supply voltage to 5V\n  staging: typec: tcpm: Add get_current_limit tcpc_dev callback\n  staging:rtl8188eu Use __func__ instead of function name\n  staging: lustre: coding style fixes found by checkpatch.pl\n  ... Merge tag 'tty-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial updates from Greg KH:\n \"Here is the big tty/serial driver update for 4.14-rc1.\n\n  Well, not all that big, just a number of small serial driver fixes,\n  and a new serial driver. Also in here are some much needed goldfish\n  tty driver (emulator) fixes to try to get that codebase under control.\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'tty-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty: (94 commits)\n  tty: goldfish: Implement support for kernel 'earlycon' parameter\n  tty: goldfish: Use streaming DMA for r/w operations on Ranchu platforms\n  tty: goldfish: Refactor constants to better reflect their nature\n  serial: 8250_port: Remove useless NULL checks\n  earlycon: initialise baud field of earlycon device structure\n  tty: hvcs: make ktermios const\n  pty: show associative slave of ptmx in fdinfo\n  tty: n_gsm: Add compat_ioctl\n  tty: hvcs: constify vio_device_id\n  tty: hvc_vio: constify vio_device_id\n  tty: mips_ejtag_fdc: constify mips_cdmm_device_id\n  Introduce 8250_men_mcb\n  mcb: introduce mcb_get_resource()\n  serial: imx: Avoid post-PIO cleanup if TX DMA is started\n  tty: serial: imx: disable irq after suspend\n  serial: 8250_uniphier: add suspend/resume support\n  serial: 8250_uniphier: use CHAR register for canary to detect power-off\n  serial: 8250_uniphier: fix serial port index in private data\n  serial: 8250: of: Add new port type for MediaTek BTIF controller on MT7622/23 SoC\n  dt-bindings: serial: 8250: Add MediaTek BTIF controller bindings\n  ... Merge tag 'usb-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB/PHY driver updates from Greg KH:\n \"Here is the large USB and PHY driver update for 4.14-rc1.\n\n  Not all that exciting, a few new PHY drivers, the usual mess of gadget\n  driver updates and fixes, and of course, xhci updates to try to tame\n  that beast.\n\n  A number of usb-serial updates and other small fixes all over the USB\n  driver tree are in here as well. Full details are in the shortlog.\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'usb-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (171 commits)\n  usbip: vhci-hcd: make vhci_hc_driver const\n  usb: phy: Avoid unchecked dereference warning\n  usb: imx21-hcd: make imx21_hc_driver const\n  usb: host: make ehci_fsl_overrides const and __initconst\n  dt-bindings: mt8173-mtu3: add generic compatible and rename file\n  dt-bindings: mt8173-xhci: add generic compatible and rename file\n  usb: xhci-mtk: add generic compatible string\n  usbip: auto retry for concurrent attach\n  USB: serial: option: simplify 3 D-Link device entries\n  USB: serial: option: add support for D-Link DWM-157 C1\n  usb: core: usbport: fix \"BUG: key not in .data\" when lockdep is enabled\n  usb: chipidea: usb2: check memory allocation failure\n  usb: Add device quirk for Logitech HD Pro Webcam C920-C\n  usb: misc: lvstest: add entry to place port in compliance mode\n  usb: xhci: Support enabling of compliance mode for xhci 1.1\n  usb:xhci:Fix regression when ATI chipsets detected\n  usb: quirks: add delay init quirk for Corsair Strafe RGB keyboard\n  usb: gadget: make snd_pcm_hardware const\n  usb: common: use of_property_read_bool()\n  USB: core: constify vm_operations_struct\n  ... Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 updates from Catalin Marinas:\n\n - VMAP_STACK support, allowing the kernel stacks to be allocated in the\n   vmalloc space with a guard page for trapping stack overflows. One of\n   the patches introduces THREAD_ALIGN and changes the generic\n   alloc_thread_stack_node() to use this instead of THREAD_SIZE (no\n   functional change for other architectures)\n\n - Contiguous PTE hugetlb support re-enabled (after being reverted a\n   couple of times). We now have the semantics agreed in the generic mm\n   layer together with API improvements so that the architecture code\n   can detect between contiguous and non-contiguous huge PTEs\n\n - Initial support for persistent memory on ARM: DC CVAP instruction\n   exposed to user space (HWCAP) and the in-kernel pmem API implemented\n\n - raid6 improvements for arm64: faster algorithm for the delta syndrome\n   and implementation of the recovery routines using Neon\n\n - FP/SIMD refactoring and removal of support for Neon in interrupt\n   context. This is in preparation for full SVE support\n\n - PTE accessors converted from inline asm to cmpxchg so that we can use\n   LSE atomics if available (ARMv8.1)\n\n - Perf support for Cortex-A35 and A73\n\n - Non-urgent fixes and cleanups\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (75 commits)\n  arm64: cleanup {COMPAT_,}SET_PERSONALITY() macro\n  arm64: introduce separated bits for mm_context_t flags\n  arm64: hugetlb: Cleanup setup_hugepagesz\n  arm64: Re-enable support for contiguous hugepages\n  arm64: hugetlb: Override set_huge_swap_pte_at() to support contiguous hugepages\n  arm64: hugetlb: Override huge_pte_clear() to support contiguous hugepages\n  arm64: hugetlb: Handle swap entries in huge_pte_offset() for contiguous hugepages\n  arm64: hugetlb: Add break-before-make logic for contiguous entries\n  arm64: hugetlb: Spring clean huge pte accessors\n  arm64: hugetlb: Introduce pte_pgprot helper\n  arm64: hugetlb: set_huge_pte_at Add WARN_ON on !pte_present\n  arm64: kexec: have own crash_smp_send_stop() for crash dump for nonpanic cores\n  arm64: dma-mapping: Mark atomic_pool as __ro_after_init\n  arm64: dma-mapping: Do not pass data to gen_pool_set_algo()\n  arm64: Remove the !CONFIG_ARM64_HW_AFDBM alternative code paths\n  arm64: Ignore hardware dirty bit updates in ptep_set_wrprotect()\n  arm64: Move PTE_RDONLY bit handling out of set_pte_at()\n  kvm: arm64: Convert kvm_set_s2pte_readonly() from inline asm to cmpxchg()\n  arm64: Convert pte handling from inline asm to using (cmp)xchg\n  arm64: neon/efi: Make EFI fpsimd save/restore variables static\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 updates from Martin Schwidefsky:\n \"The first part of the s390 updates for 4.14:\n\n   - Add machine type 0x3906 for IBM z14\n\n   - Add IBM z14 TLB flushing improvements for KVM guests\n\n   - Exploit the TOD clock epoch extension to provide a continuous TOD\n     clock afer 2042/09/17\n\n   - Add NIAI spinlock hints for IBM z14\n\n   - Rework the vmcp driver and use CMA for the respone buffer of z/VM\n     CP commands\n\n   - Drop some s390 specific asm headers and use the generic version\n\n   - Add block discard for DASD-FBA devices under z/VM\n\n   - Add average request times to DASD statistics\n\n   - A few of those constify patches which seem to be in vogue right now\n\n   - Cleanup and bug fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (50 commits)\n  s390/mm: avoid empty zero pages for KVM guests to avoid postcopy hangs\n  s390/dasd: Add discard support for FBA devices\n  s390/zcrypt: make CPRBX const\n  s390/uaccess: avoid mvcos jump label\n  s390/mm: use generic mm_hooks\n  s390/facilities: fix typo\n  s390/vmcp: simplify vmcp_response_free()\n  s390/topology: Remove the unused parent_node() macro\n  s390/dasd: Change unsigned long long to unsigned long\n  s390/smp: convert cpuhp_setup_state() return code to zero on success\n  s390: fix 'novx' early parameter handling\n  s390/dasd: add average request times to dasd statistics\n  s390/scm: use common completion path\n  s390/pci: log changes to uid checking\n  s390/vmcp: simplify vmcp_ioctl()\n  s390/vmcp: return -ENOTTY for unknown ioctl commands\n  s390/vmcp: split vmcp header file and move to uapi\n  s390/vmcp: make use of contiguous memory allocator\n  s390/cpcmd,vmcp: avoid GFP_DMA allocations\n  s390/vmcp: fix uaccess check and avoid undefined behavior\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha\n\nPull alpha updates from Matt Turner:\n \"This contains some small clean up patches I've neglected, and some\n  build improvements from Ben Hutchings\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha:\n  alpha: math-emu: Fix modular build\n  alpha: Restore symbol versions for symbols exported from assembly\n  alpha: defconfig: Cleanup from old Kconfig options\n  alpha: use kobj_to_dev()\n  alpha: squash lines for immediate return\n  alpha: kernel: Use vma_pages()\n  alpha: silence a buffer overflow warning\n  alpha: marvel: make use of raw_spinlock variants\n  alpha: cleanup: remove __NR_sys_epoll_*, leave __NR_epoll_*\n  alpha: use generic fb.h Merge branch 'parisc-4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc updates from Helge Deller:\n \"Major changes include:\n\n   - Full support of the firmware Page Deallocation Table with\n     MADV_HWPOISON and MADV_SOFT_OFFLINE. A kernel thread scans\n     regularily for new bad memory pages.\n\n   - Full support for self-extracting kernel.\n\n   - Added UBSAN support.\n\n   - Lots of section mismatch fixes across all parisc drivers.\n\n   - Added examples for %pF and %pS usage in printk-formats.txt\"\n\n* 'parisc-4.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux: (28 commits)\n  printk-formats.txt: Add examples for %pF and %pS usage\n  parisc: Fix up devices below a PCI-PCI MegaRAID controller bridge\n  parisc/core: Fix section mismatches\n  parisc/ipmi_si_intf: Fix section mismatches on parisc platform\n  parisc/input/hilkbd: Fix section mismatches\n  parisc/net/lasi_82596: Fix section mismatches\n  parisc/serio: Fix section mismatches in gscps2 and hp_sdc drivers\n  parisc: Fix section mismatches in parisc core drivers\n  parisc/parport_gsc: Fix section mismatches\n  parisc/scsi/lasi700: Fix section mismatches\n  parisc/scsi/zalon: Fix section mismatches\n  parisc/8250_gsc: Fix section mismatches\n  parisc/mux: Fix section mismatches\n  parisc/sticore: Fix section mismatches\n  parisc/harmony: Fix section mismatches\n  parisc: Wire up support for self-extracting kernel\n  parisc: Make existing core files reuseable for bootloader\n  parisc: Add core code for self-extracting kernel\n  parisc: Enable UBSAN support\n  parisc/random: Add machine specific randomness\n  ... Merge tag 'm68k-for-v4.14-tag1' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k\n\nPull m68k updates from Geert Uytterhoeven:\n\n  - restore symbol versions for symbols exported from assembly\n\n  - defconfig updates\n\n  - Mac fixes\n\n* tag 'm68k-for-v4.14-tag1' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k:\n  m68k/mac: Avoid soft-lockup warning after mach_power_off\n  m68k/mac: Don't hang waiting for Cuda power-down command\n  m68k: Restore symbol versions for symbols exported from assembly\n  m68k/defconfig: Update defconfigs for v4.13-rc1 Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 apic updates from Thomas Gleixner:\n \"This update provides:\n\n   - Cleanup of the IDT management including the removal of the extra\n     tracing IDT. A first step to cleanup the vector management code.\n\n   - The removal of the paravirt op adjust_exception_frame. This is a\n     XEN specific issue, but merged through this branch to avoid nasty\n     merge collisions\n\n   - Prevent dmesg spam about the TSC DEADLINE bug, when the CPU has\n     disabled the TSC DEADLINE timer in CPUID.\n\n   - Adjust a debug message in the ioapic code to print out the\n     information correctly\"\n\n* 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (51 commits)\n  x86/idt: Fix the X86_TRAP_BP gate\n  x86/xen: Get rid of paravirt op adjust_exception_frame\n  x86/eisa: Add missing include\n  x86/idt: Remove superfluous ALIGNment\n  x86/apic: Silence \"FW_BUG TSC_DEADLINE disabled due to Errata\" on CPUs without the feature\n  x86/idt: Remove the tracing IDT leftovers\n  x86/idt: Hide set_intr_gate()\n  x86/idt: Simplify alloc_intr_gate()\n  x86/idt: Deinline setup functions\n  x86/idt: Remove unused functions/inlines\n  x86/idt: Move interrupt gate initialization to IDT code\n  x86/idt: Move APIC gate initialization to tables\n  x86/idt: Move regular trap init to tables\n  x86/idt: Move IST stack based traps to table init\n  x86/idt: Move debug stack init to table based\n  x86/idt: Switch early trap init to IDT tables\n  x86/idt: Prepare for table based init\n  x86/idt: Move early IDT setup out of 32-bit asm\n  x86/idt: Move early IDT handler setup to IDT code\n  x86/idt: Consolidate IDT invalidation\n  ... Merge branch 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 cache quality monitoring update from Thomas Gleixner:\n \"This update provides a complete rewrite of the Cache Quality\n  Monitoring (CQM) facility.\n\n  The existing CQM support was duct taped into perf with a lot of issues\n  and the attempts to fix those turned out to be incomplete and\n  horrible.\n\n  After lengthy discussions it was decided to integrate the CQM support\n  into the Resource Director Technology (RDT) facility, which is the\n  obvious choise as in hardware CQM is part of RDT. This allowed to add\n  Memory Bandwidth Monitoring support on top.\n\n  As a result the mechanisms for allocating cache/memory bandwidth and\n  the corresponding monitoring mechanisms are integrated into a single\n  management facility with a consistent user interface\"\n\n* 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (37 commits)\n  x86/intel_rdt: Turn off most RDT features on Skylake\n  x86/intel_rdt: Add command line options for resource director technology\n  x86/intel_rdt: Move special case code for Haswell to a quirk function\n  x86/intel_rdt: Remove redundant ternary operator on return\n  x86/intel_rdt/cqm: Improve limbo list processing\n  x86/intel_rdt/mbm: Fix MBM overflow handler during CPU hotplug\n  x86/intel_rdt: Modify the intel_pqr_state for better performance\n  x86/intel_rdt/cqm: Clear the default RMID during hotcpu\n  x86/intel_rdt: Show bitmask of shareable resource with other executing units\n  x86/intel_rdt/mbm: Handle counter overflow\n  x86/intel_rdt/mbm: Add mbm counter initialization\n  x86/intel_rdt/mbm: Basic counting of MBM events (total and local)\n  x86/intel_rdt/cqm: Add CPU hotplug support\n  x86/intel_rdt/cqm: Add sched_in support\n  x86/intel_rdt: Introduce rdt_enable_key for scheduling\n  x86/intel_rdt/cqm: Add mount,umount support\n  x86/intel_rdt/cqm: Add rmdir support\n  x86/intel_rdt: Separate the ctrl bits from rmdir\n  x86/intel_rdt/cqm: Add mon_data\n  x86/intel_rdt: Prepare for RDT monitor data support\n  ... Merge branch 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull CPU hotplug fix from Thomas Gleixner:\n \"A single fix to handle the removal of the first dynamic CPU hotplug\n  state correctly\"\n\n* 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  smp/hotplug: Handle removal correctly in cpuhp_store_callbacks() Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq updates from Thomas Gleixner:\n \"The interrupt subsystem delivers this time:\n\n   - Refactoring of the GIC-V3 driver to prepare for the GIC-V4 support\n\n   - Initial GIC-V4 support\n\n   - Consolidation of the FSL MSI support\n\n   - Utilize the effective affinity interface in various ARM irqchip\n     drivers\n\n   - Yet another interrupt chip driver (UniPhier AIDET)\n\n   - Bulk conversion of the irq chip driver to use %pOF\n\n   - The usual small fixes and improvements all over the place\"\n\n* 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (77 commits)\n  irqchip/ls-scfg-msi: Add MSI affinity support\n  irqchip/ls-scfg-msi: Add LS1043a v1.1 MSI support\n  irqchip/ls-scfg-msi: Add LS1046a MSI support\n  arm64: dts: ls1046a: Add MSI dts node\n  arm64: dts: ls1043a: Share all MSIs\n  arm: dts: ls1021a: Share all MSIs\n  arm64: dts: ls1043a: Fix typo of MSI compatible string\n  arm: dts: ls1021a: Fix typo of MSI compatible string\n  irqchip/ls-scfg-msi: Fix typo of MSI compatible strings\n  irqchip/irq-bcm7120-l2: Use correct I/O accessors for irq_fwd_mask\n  irqchip/mmp: Make mmp_intc_conf const\n  irqchip/gic: Make irq_chip const\n  irqchip/gic-v3: Advertise GICv4 support to KVM\n  irqchip/gic-v4: Enable low-level GICv4 operations\n  irqchip/gic-v4: Add some basic documentation\n  irqchip/gic-v4: Add VLPI configuration interface\n  irqchip/gic-v4: Add VPE command interface\n  irqchip/gic-v4: Add per-VM VPE domain creation\n  irqchip/gic-v3-its: Set implementation defined bit to enable VLPIs\n  irqchip/gic-v3-its: Allow doorbell interrupts to be injected/cleared\n  ... Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"A rather small update for the time(r) subsystem:\n\n   - A new clocksource driver IMX-TPM\n\n   - Minor fixes to the alarmtimer facility\n\n   - Device tree cleanups for Renesas drivers\n\n   - A new kselftest and fixes for the timer related tests\n\n   - Conversion of the clocksource drivers to use %pOF\n\n   - Use the proper helpers to access rlimits in the posix-cpu-timer\n     code\"\n\n* 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  alarmtimer: Ensure RTC module is not unloaded\n  clocksource: Convert to using %pOF instead of full_name\n  clocksource/drivers/bcm2835: Remove message for a memory allocation failure\n  devicetree: bindings: Remove deprecated properties\n  devicetree: bindings: Remove unused 32-bit CMT bindings\n  devicetree: bindings: Deprecate property, update example\n  devicetree: bindings: r8a73a4 and R-Car Gen2 CMT bindings\n  devicetree: bindings: R-Car Gen2 CMT0 and CMT1 bindings\n  devicetree: bindings: Remove sh7372 CMT binding\n  clocksource/drivers/imx-tpm: Add imx tpm timer support\n  dt-bindings: timer: Add nxp tpm timer binding doc\n  posix-cpu-timers: Use dedicated helper to access rlimit values\n  alarmtimer: Fix unavailable wake-up source in sysfs\n  timekeeping: Use proper timekeeper for debug code\n  kselftests: timers: set-timer-lat: Add one-shot timer test cases\n  kselftests: timers: set-timer-lat: Tweak reporting when timer fires early\n  kselftests: timers: freq-step: Fix build warning\n  kselftests: timers: freq-step: Define ADJ_SETOFFSET if device has older kernel headers Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 mm changes from Ingo Molnar:\n \"PCID support, 5-level paging support, Secure Memory Encryption support\n\n  The main changes in this cycle are support for three new, complex\n  hardware features of x86 CPUs:\n\n   - Add 5-level paging support, which is a new hardware feature on\n     upcoming Intel CPUs allowing up to 128 PB of virtual address space\n     and 4 PB of physical RAM space - a 512-fold increase over the old\n     limits. (Supercomputers of the future forecasting hurricanes on an\n     ever warming planet can certainly make good use of more RAM.)\n\n     Many of the necessary changes went upstream in previous cycles,\n     v4.14 is the first kernel that can enable 5-level paging.\n\n     This feature is activated via CONFIG_X86_5LEVEL=y - disabled by\n     default.\n\n     (By Kirill A. Shutemov)\n\n   - Add 'encrypted memory' support, which is a new hardware feature on\n     upcoming AMD CPUs ('Secure Memory Encryption', SME) allowing system\n     RAM to be encrypted and decrypted (mostly) transparently by the\n     CPU, with a little help from the kernel to transition to/from\n     encrypted RAM. Such RAM should be more secure against various\n     attacks like RAM access via the memory bus and should make the\n     radio signature of memory bus traffic harder to intercept (and\n     decrypt) as well.\n\n     This feature is activated via CONFIG_AMD_MEM_ENCRYPT=y - disabled\n     by default.\n\n     (By Tom Lendacky)\n\n   - Enable PCID optimized TLB flushing on newer Intel CPUs: PCID is a\n     hardware feature that attaches an address space tag to TLB entries\n     and thus allows to skip TLB flushing in many cases, even if we\n     switch mm's.\n\n     (By Andy Lutomirski)\n\n  All three of these features were in the works for a long time, and\n  it's coincidence of the three independent development paths that they\n  are all enabled in v4.14 at once\"\n\n* 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (65 commits)\n  x86/mm: Enable RCU based page table freeing (CONFIG_HAVE_RCU_TABLE_FREE=y)\n  x86/mm: Use pr_cont() in dump_pagetable()\n  x86/mm: Fix SME encryption stack ptr handling\n  kvm/x86: Avoid clearing the C-bit in rsvd_bits()\n  x86/CPU: Align CR3 defines\n  x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages\n  acpi, x86/mm: Remove encryption mask from ACPI page protection type\n  x86/mm, kexec: Fix memory corruption with SME on successive kexecs\n  x86/mm/pkeys: Fix typo in Documentation/x86/protection-keys.txt\n  x86/mm/dump_pagetables: Speed up page tables dump for CONFIG_KASAN=y\n  x86/mm: Implement PCID based optimization: try to preserve old TLB entries using PCID\n  x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y\n  x86/mm: Allow userspace have mappings above 47-bit\n  x86/mm: Prepare to expose larger address space to userspace\n  x86/mpx: Do not allow MPX if we have mappings above 47-bit\n  x86/mm: Rename tasksize_32bit/64bit to task_size_32bit/64bit()\n  x86/xen: Redefine XEN_ELFNOTE_INIT_P2M using PUD_SIZE * PTRS_PER_PUD\n  x86/mm/dump_pagetables: Fix printout of p4d level\n  x86/mm/dump_pagetables: Generalize address normalization\n  x86/boot: Fix memremap() related build failure\n  ... Merge branch 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking updates from Ingo Molnar:\n\n - Add 'cross-release' support to lockdep, which allows APIs like\n   completions, where it's not the 'owner' who releases the lock, to be\n   tracked. It's all activated automatically under\n   CONFIG_PROVE_LOCKING=y.\n\n - Clean up (restructure) the x86 atomics op implementation to be more\n   readable, in preparation of KASAN annotations. (Dmitry Vyukov)\n\n - Fix static keys (Paolo Bonzini)\n\n - Add killable versions of down_read() et al (Kirill Tkhai)\n\n - Rework and fix jump_label locking (Marc Zyngier, Paolo Bonzini)\n\n - Rework (and fix) tlb_flush_pending() barriers (Peter Zijlstra)\n\n - Remove smp_mb__before_spinlock() and convert its usages, introduce\n   smp_mb__after_spinlock() (Peter Zijlstra)\n\n* 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (56 commits)\n  locking/lockdep/selftests: Fix mixed read-write ABBA tests\n  sched/completion: Avoid unnecessary stack allocation for COMPLETION_INITIALIZER_ONSTACK()\n  acpi/nfit: Fix COMPLETION_INITIALIZER_ONSTACK() abuse\n  locking/pvqspinlock: Relax cmpxchg's to improve performance on some architectures\n  smp: Avoid using two cache lines for struct call_single_data\n  locking/lockdep: Untangle xhlock history save/restore from task independence\n  locking/refcounts, x86/asm: Disable CONFIG_ARCH_HAS_REFCOUNT for the time being\n  futex: Remove duplicated code and fix undefined behaviour\n  Documentation/locking/atomic: Finish the document...\n  locking/lockdep: Fix workqueue crossrelease annotation\n  workqueue/lockdep: 'Fix' flush_work() annotation\n  locking/lockdep/selftests: Add mixed read-write ABBA tests\n  mm, locking/barriers: Clarify tlb_flush_pending() barriers\n  locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE and CONFIG_LOCKDEP_COMPLETIONS truly non-interactive\n  locking/lockdep: Explicitly initialize wq_barrier::done::map\n  locking/lockdep: Rename CONFIG_LOCKDEP_COMPLETE to CONFIG_LOCKDEP_COMPLETIONS\n  locking/lockdep: Reword title of LOCKDEP_CROSSRELEASE config\n  locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE part of CONFIG_PROVE_LOCKING\n  locking/refcounts, x86/asm: Implement fast refcount overflow protection\n  locking/lockdep: Fix the rollback and overwrite detection logic in crossrelease\n  ... Merge branch 'x86-syscall-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull syscall updates from Ingo Molnar:\n \"Improve the security of set_fs(): we now check the address limit on a\n  number of key platforms (x86, arm, arm64) before returning to\n  user-space - without adding overhead to the typical system call fast\n  path\"\n\n* 'x86-syscall-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  arm64/syscalls: Check address limit on user-mode return\n  arm/syscalls: Check address limit on user-mode return\n  x86/syscalls: Check address limit on user-mode return Merge branch 'x86-spinlocks-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 spinlock update from Ingo Molnar:\n \"Convert an NMI lock to raw\"\n\n[ Clarification: it's not that the lock itself is NMI-safe, it's about\n  NMI registration called from RT contexts  - Linus ]\n\n* 'x86-spinlocks-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/nmi: Use raw lock Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 microcode loading updates from Ingo Molnar:\n \"Update documentation, improve robustness and fix a memory leak\"\n\n* 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/microcode/intel: Improve microcode patches saving flow\n  x86/microcode: Document the three loading methods\n  x86/microcode/AMD: Free unneeded patch before exit from update_cache() Merge branch 'x86-debug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 debug updates from Ingo Molnar:\n \"Various fixes to the NUMA emulation code\"\n\n* 'x86-debug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/numa_emulation: Recalculate numa_nodes_parsed from emulated nodes\n  x86/numa_emulation: Assign physnode_mask directly from numa_nodes_parsed\n  x86/numa_emulation: Refine the calculation of max_emu_nid and dfl_phys_nid Merge branch 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 cpuid updates from Ingo Molnar:\n \"AMD F17h related updates\"\n\n* 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/cpu/amd: Hide unused legacy_fixup_core_id() function\n  x86/cpu/amd: Derive L3 shared_cpu_map from cpu_llc_shared_mask\n  x86/cpu/amd: Limit cpu_core_id fixup to families older than F17h Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 build updates from Ingo Molnar:\n \"More Clang support related fixes\"\n\n* 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/build: Use cc-option to validate stack alignment parameter\n  x86/build: Fix stack alignment for CLang\n  x86/build: Drop unused mflags-y Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 boot updates from Ingo Molnar:\n \"The main changes are KASL related fixes and cleanups: in particular we\n  now exclude certain physical memory ranges as KASLR randomization\n  targets that have proven to be unreliable (early-)RAM on some firmware\n  versions\"\n\n* 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/boot/KASLR: Work around firmware bugs by excluding EFI_BOOT_SERVICES_* and EFI_LOADER_* from KASLR's choice\n  x86/boot/KASLR: Prefer mirrored memory regions for the kernel physical address\n  efi: Introduce efi_early_memdesc_ptr to get pointer to memmap descriptor\n  x86/boot/KASLR: Rename process_e820_entry() into process_mem_region()\n  x86/boot/KASLR: Switch to pass struct mem_vector to process_e820_entry()\n  x86/boot/KASLR: Wrap e820 entries walking code into new function process_e820_entries() Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 asm updates from Ingo Molnar:\n\n - Introduce the ORC unwinder, which can be enabled via\n   CONFIG_ORC_UNWINDER=y.\n\n   The ORC unwinder is a lightweight, Linux kernel specific debuginfo\n   implementation, which aims to be DWARF done right for unwinding.\n   Objtool is used to generate the ORC unwinder tables during build, so\n   the data format is flexible and kernel internal: there's no\n   dependency on debuginfo created by an external toolchain.\n\n   The ORC unwinder is almost two orders of magnitude faster than the\n   (out of tree) DWARF unwinder - which is important for perf call graph\n   profiling. It is also significantly simpler and is coded defensively:\n   there has not been a single ORC related kernel crash so far, even\n   with early versions. (knock on wood!)\n\n   But the main advantage is that enabling the ORC unwinder allows\n   CONFIG_FRAME_POINTERS to be turned off - which speeds up the kernel\n   measurably:\n\n   With frame pointers disabled, GCC does not have to add frame pointer\n   instrumentation code to every function in the kernel. The kernel's\n   .text size decreases by about 3.2%, resulting in better cache\n   utilization and fewer instructions executed, resulting in a broad\n   kernel-wide speedup. Average speedup of system calls should be\n   roughly in the 1-3% range - measurements by Mel Gorman [1] have shown\n   a speedup of 5-10% for some function execution intense workloads.\n\n   The main cost of the unwinder is that the unwinder data has to be\n   stored in RAM: the memory cost is 2-4MB of RAM, depending on kernel\n   config - which is a modest cost on modern x86 systems.\n\n   Given how young the ORC unwinder code is it's not enabled by default\n   - but given the performance advantages the plan is to eventually make\n   it the default unwinder on x86.\n\n   See Documentation/x86/orc-unwinder.txt for more details.\n\n - Remove lguest support: its intended role was that of a temporary\n   proof of concept for virtualization, plus its removal will enable the\n   reduction (removal) of the paravirt API as well, so Rusty agreed to\n   its removal. (Juergen Gross)\n\n - Clean up and fix FSGS related functionality (Andy Lutomirski)\n\n - Clean up IO access APIs (Andy Shevchenko)\n\n - Enhance the symbol namespace (Jiri Slaby)\n\n* 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (47 commits)\n  objtool: Handle GCC stack pointer adjustment bug\n  x86/entry/64: Use ENTRY() instead of ALIGN+GLOBAL for stub32_clone()\n  x86/fpu/math-emu: Add ENDPROC to functions\n  x86/boot/64: Extract efi_pe_entry() from startup_64()\n  x86/boot/32: Extract efi_pe_entry() from startup_32()\n  x86/lguest: Remove lguest support\n  x86/paravirt/xen: Remove xen_patch()\n  objtool: Fix objtool fallthrough detection with function padding\n  x86/xen/64: Fix the reported SS and CS in SYSCALL\n  objtool: Track DRAP separately from callee-saved registers\n  objtool: Fix validate_branch() return codes\n  x86: Clarify/fix no-op barriers for text_poke_bp()\n  x86/switch_to/64: Rewrite FS/GS switching yet again to fix AMD CPUs\n  selftests/x86/fsgsbase: Test selectors 1, 2, and 3\n  x86/fsgsbase/64: Report FSBASE and GSBASE correctly in core dumps\n  x86/fsgsbase/64: Fully initialize FS and GS state in start_thread_common\n  x86/asm: Fix UNWIND_HINT_REGS macro for older binutils\n  x86/asm/32: Fix regs_get_register() on segment registers\n  x86/xen/64: Rearrange the SYSCALL entries\n  x86/asm/32: Remove a bunch of '& 0xffff' from pt_regs segment reads\n  ... Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler updates from Ingo Molnar:\n \"The main changes in this cycle were:\n\n   - fix affine wakeups (Peter Zijlstra)\n\n   - improve CPU onlining (and general bootup) scalability on systems\n     with ridiculous number (thousands) of CPUs (Peter Zijlstra)\n\n   - sched/numa updates (Rik van Riel)\n\n   - sched/deadline updates (Byungchul Park)\n\n   - sched/cpufreq enhancements and related cleanups (Viresh Kumar)\n\n   - sched/debug enhancements (Xie XiuQi)\n\n   - various fixes\"\n\n* 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (27 commits)\n  sched/debug: Optimize sched_domain sysctl generation\n  sched/topology: Avoid pointless rebuild\n  sched/topology, cpuset: Avoid spurious/wrong domain rebuilds\n  sched/topology: Improve comments\n  sched/topology: Fix memory leak in __sdt_alloc()\n  sched/completion: Document that reinit_completion() must be called after complete_all()\n  sched/autogroup: Fix error reporting printk text in autogroup_create()\n  sched/fair: Fix wake_affine() for !NUMA_BALANCING\n  sched/debug: Intruduce task_state_to_char() helper function\n  sched/debug: Show task state in /proc/sched_debug\n  sched/debug: Use task_pid_nr_ns in /proc/$pid/sched\n  sched/core: Remove unnecessary initialization init_idle_bootup_task()\n  sched/deadline: Change return value of cpudl_find()\n  sched/deadline: Make find_later_rq() choose a closer CPU in topology\n  sched/numa: Scale scan period with tasks in group and shared/private\n  sched/numa: Slow down scan rate if shared faults dominate\n  sched/pelt: Fix false running accounting\n  sched: Mark pick_next_task_dl() and build_sched_domain() as static\n  sched/cpupri: Don't re-initialize 'struct cpupri'\n  sched/deadline: Don't re-initialize 'struct cpudl'\n  ... Merge branch 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RAS fix from Ingo Molnar:\n \"A single change fixing SMCA bank initialization on systems that don't\n  have CPU0 enabled\"\n\n* 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mce/AMD: Allow any CPU to initialize the smca_banks array Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf updates from Ingo Molnar:\n \"Kernel side changes:\n\n   - Add branch type profiling/tracing support. (Jin Yao)\n\n   - Add the PERF_SAMPLE_PHYS_ADDR ABI to allow the tracing/profiling of\n     physical memory addresses, where the PMU supports it. (Kan Liang)\n\n   - Export some PMU capability details in the new\n     /sys/bus/event_source/devices/cpu/caps/ sysfs directory. (Andi\n     Kleen)\n\n   - Aux data fixes and updates (Will Deacon)\n\n   - kprobes fixes and updates (Masami Hiramatsu)\n\n   - AMD uncore PMU driver fixes and updates (Janakarajan Natarajan)\n\n  On the tooling side, here's a (limited!) list of highlights - there\n  were many other changes that I could not list, see the shortlog and\n  git history for details:\n\n  UI improvements:\n\n   - Implement a visual marker for fused x86 instructions in the\n     annotate TUI browser, available now in 'perf report', more work\n     needed to have it available as well in 'perf top' (Jin Yao)\n\n     Further explanation from one of Jin's patches:\n\n             │   ┌──cmpl   $0x0,argp_program_version_hook\n       81.93 │   ├──je     20\n             │   │  lock   cmpxchg %esi,0x38a9a4(%rip)\n             │   │↓ jne    29\n             │   │↓ jmp    43\n       11.47 │20:└─→cmpxch %esi,0x38a999(%rip)\n\n     That means the cmpl+je is a fused instruction pair and they should\n     be considered together.\n\n   - Record the branch type and then show statistics and info about in\n     callchain entries (Jin Yao)\n\n     Example from one of Jin's patches:\n\n        # perf record -g -j any,save_type\n        # perf report --branch-history --stdio --no-children\n\n        38.50%  div.c:45                [.] main                    div\n                |\n                ---main div.c:42 (RET CROSS_2M cycles:2)\n                   compute_flag div.c:28 (cycles:2)\n                   compute_flag div.c:27 (RET CROSS_2M cycles:1)\n                   rand rand.c:28 (cycles:1)\n                   rand rand.c:28 (RET CROSS_2M cycles:1)\n                   __random random.c:298 (cycles:1)\n                   __random random.c:297 (COND_BWD CROSS_2M cycles:1)\n                   __random random.c:295 (cycles:1)\n                   __random random.c:295 (COND_BWD CROSS_2M cycles:1)\n                   __random random.c:295 (cycles:1)\n                   __random random.c:295 (RET CROSS_2M cycles:9)\n\n  namespaces support:\n\n   - Add initial support for namespaces, using setns to access files in\n     namespaces, grabbing their build-ids, etc. (Krister Johansen)\n\n  perf trace enhancements:\n\n   - Beautify pkey_{alloc,free,mprotect} arguments in 'perf trace'\n     (Arnaldo Carvalho de Melo)\n\n   - Add initial 'clone' syscall args beautifier in 'perf trace'\n     (Arnaldo Carvalho de Melo)\n\n   - Ignore 'fd' and 'offset' args for MAP_ANONYMOUS in 'perf trace'\n     (Arnaldo Carvalho de Melo)\n\n   - Beautifiers for the 'cmd' arg of several ioctl types, including:\n     sound, DRM, KVM, vhost virtio and perf_events. (Arnaldo Carvalho de\n     Melo)\n\n   - Add PERF_SAMPLE_CALLCHAIN and PERF_RECORD_MMAP[2] to 'perf data'\n     CTF conversion, allowing CTF trace visualization tools to show\n     callchains and to resolve symbols (Geneviève Bastien)\n\n   - Beautify the fcntl syscall, which is an interesting one in the\n     sense that infrastructure had to be put in place to change the\n     formatters of some arguments according to the value in a previous\n     one, i.e. cmd dictates how arg and the syscall return will be\n     formatted. (Arnaldo Carvalho de Melo\n\n  perf stat enhancements:\n\n   - Use group read for event groups in 'perf stat', reducing overhead\n     when groups are defined in the event specification, i.e. when using\n     {} to enclose a list of events, asking them to be read at the same\n     time, e.g.: \"perf stat -e '{cycles,instructions}'\" (Jiri Olsa)\n\n  pipe mode improvements:\n\n   - Process tracing data in 'perf annotate' pipe mode (David\n     Carrillo-Cisneros)\n\n   - Add header record types to pipe-mode, now this command:\n\n        $ perf record -o - -e cycles sleep 1 | perf report --stdio --header\n\n     Will show the same as in non-pipe mode, i.e. involving a perf.data\n     file (David Carrillo-Cisneros)\n\n  Vendor specific hardware event support updates/enhancements:\n\n   - Update POWER9 vendor events tables (Sukadev Bhattiprolu)\n\n   - Add POWER9 PMU events Sukadev (Bhattiprolu)\n\n   - Support additional POWER8+ PVR in PMU mapfile (Shriya)\n\n   - Add Skylake server uncore JSON vendor events (Andi Kleen)\n\n   - Support exporting Intel PT data to sqlite3 with python perf\n     scripts, this is in addition to the postgresql support that was\n     already there (Adrian Hunter)\"\n\n* 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (253 commits)\n  perf symbols: Fix plt entry calculation for ARM and AARCH64\n  perf probe: Fix kprobe blacklist checking condition\n  perf/x86: Fix caps/ for !Intel\n  perf/core, x86: Add PERF_SAMPLE_PHYS_ADDR\n  perf/core, pt, bts: Get rid of itrace_started\n  perf trace beauty: Beautify pkey_{alloc,free,mprotect} arguments\n  tools headers: Sync cpu features kernel ABI headers with tooling headers\n  perf tools: Pass full path of FEATURES_DUMP\n  perf tools: Robustify detection of clang binary\n  tools lib: Allow external definition of CC, AR and LD\n  perf tools: Allow external definition of flex and bison binary names\n  tools build tests: Don't hardcode gcc name\n  perf report: Group stat values on global event id\n  perf values: Zero value buffers\n  perf values: Fix allocation check\n  perf values: Fix thread index bug\n  perf report: Add dump_read function\n  perf record: Set read_format for inherit_stat\n  perf c2c: Fix remote HITM detection for Skylake\n  perf tools: Fix static build with newer toolchains\n  ... Merge branch 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RCU updates from Ingo Molnad:\n \"The main RCU related changes in this cycle were:\n\n   - Removal of spin_unlock_wait()\n   - SRCU updates\n   - RCU torture-test updates\n   - RCU Documentation updates\n   - Extend the sys_membarrier() ABI with the MEMBARRIER_CMD_PRIVATE_EXPEDITED variant\n   - Miscellaneous RCU fixes\n   - CPU-hotplug fixes\"\n\n* 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (63 commits)\n  arch: Remove spin_unlock_wait() arch-specific definitions\n  locking: Remove spin_unlock_wait() generic definitions\n  drivers/ata: Replace spin_unlock_wait() with lock/unlock pair\n  ipc: Replace spin_unlock_wait() with lock/unlock pair\n  exit: Replace spin_unlock_wait() with lock/unlock pair\n  completion: Replace spin_unlock_wait() with lock/unlock pair\n  doc: Set down RCU's scheduling-clock-interrupt needs\n  doc: No longer allowed to use rcu_dereference on non-pointers\n  doc: Add RCU files to docbook-generation files\n  doc: Update memory-barriers.txt for read-to-write dependencies\n  doc: Update RCU documentation\n  membarrier: Provide expedited private command\n  rcu: Remove exports from rcu_idle_exit() and rcu_idle_enter()\n  rcu: Add warning to rcu_idle_enter() for irqs enabled\n  rcu: Make rcu_idle_enter() rely on callers disabling irqs\n  rcu: Add assertions verifying blocked-tasks list\n  rcu/tracing: Set disable_rcu_irq_enter on rcu_eqs_exit()\n  rcu: Add TPS() protection for _rcu_barrier_trace strings\n  rcu: Use idle versions of swait to make idle-hack clear\n  swait: Add idle variants which don't contribute to load average\n  ... Merge branch 'core-debugobjects-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull debugobjects fix from Ingo Molnar:\n \"A single commit making debugobjects interact better with kmemleak\"\n\n* 'core-debugobjects-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  debugobjects: Make kmemleak ignore debug objects Merge branch 'docs-next' of git://git.lwn.net/linux\n\nPull documentation updates from Jonathan Corbet:\n \"After a fair amount of churn in the last couple of cycles, docs are\n  taking it easier this time around. Lots of fixes and some new\n  documentation, but nothing all that radical. Perhaps the most\n  interesting change for many is the scripts/sphinx-pre-install tool\n  from Mauro; it will tell you exactly which packages you need to\n  install to get a working docs toolchain on your system.\n\n  There are two little patches reaching outside of Documentation/; both\n  just tweak kerneldoc comments to eliminate warnings and fix some\n  dangling doc pointers\"\n\n* 'docs-next' of git://git.lwn.net/linux: (52 commits)\n  Documentation/sphinx: fix kernel-doc decode for non-utf-8 locale\n  genalloc: Fix an incorrect kerneldoc comment\n  doc: Add documentation for the genalloc subsystem\n  assoc_array: fix path to assoc_array documentation\n  kernel-doc parser mishandles declarations split into lines\n  docs: ReSTify table of contents in core.rst\n  docs: process: drop git snapshots from applying-patches.rst\n  Documentation:input: fix typo\n  swap: Remove obsolete sentence\n  sphinx.rst: Allow Sphinx version 1.6 at the docs\n  docs-rst: fix verbatim font size on tables\n  Documentation: stable-kernel-rules: fix broken git urls\n  rtmutex: update rt-mutex\n  rtmutex: update rt-mutex-design\n  docs: fix minimal sphinx version in conf.py\n  docs: fix nested numbering in the TOC\n  NVMEM documentation fix: A minor typo\n  docs-rst: pdf: use same vertical margin on all Sphinx versions\n  doc: Makefile: if sphinx is not found, run a check script\n  docs: Fix paths in security/keys\n  ... Merge tag 'hwmon-for-linus-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon updates from Guenter Roeck:\n\n - new drivers:\n   - Lantiq CPU temperature sensor\n   - IBM CFF power supply\n   - TPS53679 PMBus driver\n\n - new support:\n   - LM5066I (lm25066 PMBus driver)\n   - Intel VID protocol VR13 (PMBus drivers)\n   - CAT34TS02C, GT30TS00, GT34TS02, and CAT34TS04 (jc42 driver)\n\n - cleanup and minor improvements in several drivers\n\n* tag 'hwmon-for-linus-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging: (36 commits)\n  hwmon: (ltq-cputemp) add cpu temp sensor driver\n  hwmon: (ltq-cputemp) add devicetree bindings documentation\n  hwmon: (pmbus) Add support for Texas Instruments tps53679 device\n  hwmon: (asc7621) make several arrays static const\n  hwmon: (pmbus/lm25066) Add support for TI LM5066I\n  hwmon: (pmbus/lm25066) Offset coefficient depends on CL\n  hwmon: (pmbus) Add support for Intel VID protocol VR13\n  Documentation: hwmon: Document the IBM CFF power supply\n  hwmon: (pmbus) Add IBM Common Form Factor (CFF) power supply driver\n  dt-bindings: hwmon: Document the IBM CCF power supply version 1\n  hwmon: (ftsteutates) constify i2c_device_id\n  hwmon: da9052: Add support for TSI channel\n  mfd: da9052: Make touchscreen registration optional\n  hwmon: da9052: Replace S_IRUGO with 0444\n  mfd: da9052: Add register details for TSI\n  hwmon: (aspeed-pwm) add THERMAL dependency\n  hwmon: (pmbus) Add debugfs for status registers\n  hwmon: (aspeed-pwm-tacho) cooling device support.\n  Documentation: dt-bindings: aspeed-pwm-tacho cooling device.\n  hwmon: (pmbus): Add generic alarm bit for iin and pin\n  ... Merge tag 'for-linus-ioctl' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma updates from Doug Ledford:\n \"This is a big pull request.\n\n  Of note is that I'm sending you the new ioctl API for the rdma\n  subsystem. We put it up on linux-api@, but didn't get much response.\n  The API is complex, but it solves two different problems in one go:\n\n   1) The bi-directional nature of the RDMA file write calls, which\n      created the security hole we had to handle (and for which the fix\n      is now causing problems for systems in production, we were a bit\n      over zealous in the fix and the ability to open a device, then\n      fork, then create new queue pairs on the device and use them is\n      broken).\n\n   2) The bloat caused by different vendors implementing extensions to\n      the base verbs API. Each vendor's hardware is slightly different,\n      and the hardware might be suitable for one extension but not\n      another.\n\n      By the time we add generic extensions for all the different ways\n      that the different hardware can offload things, the API becomes\n      bloated. Things like our completion structs have started to exceed\n      a cache line in size because of all the elements needed to support\n      this. That in turn shows up heavily in the performance graphs with\n      a noticable drop in performance on 100Gigabit links as our\n      completion structs go from occupying one cache line to 1+.\n\n      This API makes things like the completion structs modular in a\n      very similar way to netlink so that your structs can only include\n      the items needed for the offloads/features you are actually using\n      on a given queue pair. In that way we support everything, but only\n      use what we need, and our structs stay smaller.\n\n  The ioctl API is better explained by the posting on linux-api@ than I\n  can explain it here, so I'll just leave it at that.\n\n  The rest of the pull request is typical stuff.\n\n  Updates for 4.14 kernel merge window\n\n   - Lots of hfi1 driver updates (mixed with a few qib and core updates\n     as well)\n\n   - rxe updates\n\n   - various mlx updates\n\n   - Set default roce type to RoCEv2\n\n   - Several larger fixes for bnxt_re that were too big for -rc\n\n   - Several larger fixes for qedr that, likewise, were too big for -rc\n\n   - Misc core changes\n\n   - Make the hns_roce driver compilable on arches other than aarch64 so\n     we can more easily debug build issues related to it\n\n   - Add rdma-netlink infrastructure updates\n\n   - Add automatic IRQ affinity infrastructure\n\n   - Add 32bit lid support\n\n   - Lots of misc fixes across the subsystem from random people\n\n   - Autoloading of RDMA netlink modules\n\n   - PCI pool cleanups from Romain Perier\n\n   - mlx5 driver feature additions and fixes\n\n   - Hardware tag matchine feature\n\n   - Fix sleeping in atomic when resolving roce ah\n\n   - Add experimental ioctl interface as posted to linux-api@\"\n\n* tag 'for-linus-ioctl' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma: (328 commits)\n  IB/core: Expose ioctl interface through experimental Kconfig\n  IB/core: Assign root to all drivers\n  IB/core: Add completion queue (cq) object actions\n  IB/core: Add legacy driver's user-data\n  IB/core: Export ioctl enum types to user-space\n  IB/core: Explicitly destroy an object while keeping uobject\n  IB/core: Add macros for declaring methods and attributes\n  IB/core: Add uverbs merge trees functionality\n  IB/core: Add DEVICE object and root tree structure\n  IB/core: Declare an object instead of declaring only type attributes\n  IB/core: Add new ioctl interface\n  RDMA/vmw_pvrdma: Fix a signedness\n  RDMA/vmw_pvrdma: Report network header type in WC\n  IB/core: Add might_sleep() annotation to ib_init_ah_from_wc()\n  IB/cm: Fix sleeping in atomic when RoCE is used\n  IB/core: Add support to finalize objects in one transaction\n  IB/core: Add a generic way to execute an operation on a uobject\n  Documentation: Hardware tag matching\n  IB/mlx5: Support IB_SRQT_TM\n  net/mlx5: Add XRQ support\n  ... Merge tag 'drm-for-v4.14' of git://people.freedesktop.org/~airlied/linux\n\nPull drm updates from Dave Airlie:\n \"This is the main drm pull request for 4.14 merge window.\n\n  I'm sending this early, as my continuing journey into fatherhood is\n  occurring really soon now, I'm going to be mostly useless for the next\n  couple of weeks, though I may be able to read email, I doubt I'll be\n  doing much patch applications or git sending. If anything urgent pops\n  up I've asked Daniel/Jani/Alex/Sean to try and direct stuff towards\n  you.\n\n  Outside drm changes:\n\n  Some rcar-du updates that touch the V4L tree, all acks should be in\n  place. It adds one export to the radix tree code for new i915 use\n  case. There are some minor AGP cleanups (don't see that too often).\n  Changes to the vbox driver in staging to avoid breaking compilation.\n\n  Summary:\n\n  core:\n   - Atomic helper fixes\n   - Atomic UAPI fixes\n   - Add YCBCR 4:2:0 support\n   - Drop set_busid hook\n   - Refactor fb_helper locking\n   - Remove a bunch of internal APIs\n   - Add a bunch of better default handlers\n   - Format modifier/blob plane property added\n   - More internal header refactoring\n   - Make more internal API names consistent\n   - Enhanced syncobj APIs (wait/signal/reset/create signalled)\n\n  bridge:\n   - Add Synopsys Designware MIPI DSI host bridge driver\n\n  tiny:\n   - Add Pervasive Displays RePaper displays\n   - Add support for LEGO MINDSTORMS EV3 LCD\n\n  i915:\n   - Lots of GEN10/CNL  support patches\n   - drm syncobj support\n   - Skylake+ watermark refactoring\n   - GVT vGPU 48-bit ppgtt support\n   - GVT performance improvements\n   - NOA change ioctl\n   - CCS (color compression) scanout support\n   - GPU reset improvements\n\n  amdgpu:\n   - Initial hugepage support\n   - BO migration logic rework\n   - Vega10 improvements\n   - Powerplay fixes\n   - Stop reprogramming the MC\n   - Fixes for ACP audio on stoney\n   - SR-IOV fixes/improvements\n   - Command submission overhead improvements\n\n  amdkfd:\n   - Non-dGPU upstreaming patches\n   - Scratch VA ioctl\n   - Image tiling modes\n   - Update PM4 headers for new firmware\n   - Drop all BUG_ONs.\n\n  nouveau:\n   - GP108 modesetting support.\n   - Disable MSI on big endian.\n\n  vmwgfx:\n   - Add fence fd support.\n\n  msm:\n   - Runtime PM improvements\n\n  exynos:\n   - NV12MT support\n   - Refactor KMS drivers\n\n  imx-drm:\n   - Lock scanout channel to improve memory bw\n   - Cleanups\n\n  etnaviv:\n   - GEM object population fixes\n\n  tegra:\n   - Prep work for Tegra186 support\n   - PRIME mmap support\n\n  sunxi:\n   - HDMI support improvements\n   - HDMI CEC support\n\n  omapdrm:\n   - HDMI hotplug IRQ support\n   - Big driver cleanup\n   - OMAP5 DSI support\n\n  rcar-du:\n   - vblank fixes\n   - VSP1 updates\n\n  arcgpu:\n   - Minor fixes\n\n  stm:\n   - Add STM32 DSI controller driver\n\n  dw_hdmi:\n   - Add support for Rockchip RK3399\n   - HDMI CEC support\n\n  atmel-hlcdc:\n   - Add 8-bit color support\n\n  vc4:\n   - Atomic fixes\n   - New ioctl to attach a label to a buffer object\n   - HDMI CEC support\n   - Allow userspace to dictate rendering order on submit ioctl\"\n\n* tag 'drm-for-v4.14' of git://people.freedesktop.org/~airlied/linux: (1074 commits)\n  drm/syncobj: Add a signal ioctl (v3)\n  drm/syncobj: Add a reset ioctl (v3)\n  drm/syncobj: Add a syncobj_array_find helper\n  drm/syncobj: Allow wait for submit and signal behavior (v5)\n  drm/syncobj: Add a CREATE_SIGNALED flag\n  drm/syncobj: Add a callback mechanism for replace_fence (v3)\n  drm/syncobj: add sync obj wait interface. (v8)\n  i915: Use drm_syncobj_fence_get\n  drm/syncobj: Add a race-free drm_syncobj_fence_get helper (v2)\n  drm/syncobj: Rename fence_get to find_fence\n  drm: kirin: Add mode_valid logic to avoid mode clocks we can't generate\n  drm/vmwgfx: Bump the version for fence FD support\n  drm/vmwgfx: Add export fence to file descriptor support\n  drm/vmwgfx: Add support for imported Fence File Descriptor\n  drm/vmwgfx: Prepare to support fence fd\n  drm/vmwgfx: Fix incorrect command header offset at restart\n  drm/vmwgfx: Support the NOP_ERROR command\n  drm/vmwgfx: Restart command buffers after errors\n  drm/vmwgfx: Move irq bottom half processing to threads\n  drm/vmwgfx: Don't use drm_irq_[un]install\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull misc fixes from Al Viro:\n \"Loose ends and regressions from the last merge window.\n\n  Strictly speaking, only binfmt_flat thing is a build regression per\n  se - the rest is 'only sparse cares about that' stuff\"\n\n[ This came in before the 4.13 release and could have gone there, but it\n  was late in the release and nothing seemed critical enough to care, so\n  I'm pulling it in the 4.14 merge window instead  - Linus ]\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  binfmt_flat: fix arch/m32r and arch/microblaze flat_put_addr_at_rp()\n  compat_hdio_ioctl: Fix a declaration\n  <linux/uaccess.h>: Fix copy_in_user() declaration\n  annotate RWF_... flags\n  teach SYSCALL_DEFINE/COMPAT_SYSCALL_DEFINE to handle __bitwise arguments Linux 4.13 Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"The two indirect syscall fixes have sat in linux-next for a few days.\n  I did check back with a hardware designer to ensure a SYNC is really\n  what's required for the GIC fix and so the GIC fix didn't make it into\n  to linux-next in time for this final pull request.\n\n  It builds in local build tests and passes Imagination's test system\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  irqchip: mips-gic: SYNC after enabling GIC region\n  MIPS: Remove pt_regs adjustments in indirect syscall handler\n  MIPS: seccomp: Fix indirect syscall args Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n\n - Expand the space for uncompressing as the LZ4 worst case does not fit\n   into the currently reserved space\n\n - Validate boot parameters more strictly to prevent out of bound access\n   in the decompressor/boot code\n\n - Fix off by one errors in get_segment_base()\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/boot: Prevent faulty bootparams.screeninfo from causing harm\n  x86/boot: Provide more slack space during decompression\n  x86/ldt: Fix off by one in get_segment_base() Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"A single fix for a thinko in the raw timekeeper update which causes\n  clock MONOTONIC_RAW to run with erratically increased frequency\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  time: Fix ktime_get_raw() incorrect base accumulation Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n\n - Prevent a potential inconistency in the perf user space access which\n   might lead to evading sanity checks.\n\n - Prevent perf recording function trace entries twice\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/ftrace: Fix double traces of perf on ftrace:function\n  perf/core: Fix potential double-fetch bug Merge branch 'for-next' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs version warning fix from Steve French:\n \"As requested, additional kernel warning messages to clarify the\n  default dialect changes\"\n\n[ There is still some discussion about exactly which version should be\n  the new default.  Longer-term we have auto-negotiation coming, but\n  that's not there yet..  - Linus ]\n\n* 'for-next' of git://git.samba.org/sfrench/cifs-2.6:\n  Fix warning messages when mounting to older servers Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"A couple of late-arriving fixes before final 4.13:\n\n   - A few reverts of DT bindings on Allwinner for their ethernet\n     driver. Discussion didn't converge, and since bindings are\n     considered ABI it makes sense to revert instead of having to\n     support two bindings long-term.\n\n   - A fix to enumerate GPIOs properly on Marvell Armada AP806\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  arm64: dts: marvell: fix number of GPIOs in Armada AP806 description\n  arm: dts: sunxi: Revert EMAC changes\n  arm64: dts: allwinner: Revert EMAC changes\n  dt-bindings: net: Revert sun8i dwmac binding Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"The ismt driver had a problem with a rarely used transaction type and\n  the designware driver was made even more robust against non standard\n  ACPI tables\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: designware: Round down ACPI provided clk to nearest supported clk\n  i2c: ismt: Return EMSGSIZE for block reads with bogus length\n  i2c: ismt: Don't duplicate the receive length for block reads Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix handling of pinned BPF map nodes in hash of maps, from Daniel\n    Borkmann.\n\n 2) IPSEC ESP error paths leak memory, from Steffen Klassert.\n\n 3) We need an RCU grace period before freeing fib6_node objects, from\n    Wei Wang.\n\n 4) Must check skb_put_padto() return value in HSR driver, from FLorian\n    Fainelli.\n\n 5) Fix oops on PHY probe failure in ftgmac100 driver, from Andrew\n    Jeffery.\n\n 6) Fix infinite loop in UDP queue when using SO_PEEK_OFF, from Eric\n    Dumazet.\n\n 7) Use after free when tcf_chain_destroy() called multiple times, from\n    Jiri Pirko.\n\n 8) Fix KSZ DSA tag layer multiple free of SKBS, from Florian Fainelli.\n\n 9) Fix leak of uninitialized memory in sctp_get_sctp_info(),\n    inet_diag_msg_sctpladdrs_fill() and inet_diag_msg_sctpaddrs_fill().\n    From Stefano Brivio.\n\n10) L2TP tunnel refcount fixes from Guillaume Nault.\n\n11) Don't leak UDP secpath in udp_set_dev_scratch(), from Yossi\n    Kauperman.\n\n12) Revert a PHY layer change wrt. handling of PHY_HALTED state in\n    phy_stop_machine(), it causes regressions for multiple people. From\n    Florian Fainelli.\n\n13) When packets are sent out of br0 we have to clear the\n    offload_fwdq_mark value.\n\n14) Several NULL pointer deref fixes in packet schedulers when their\n    ->init() routine fails. From Nikolay Aleksandrov.\n\n15) Aquantium devices cannot checksum offload correctly when the packet\n    is <= 60 bytes. From Pavel Belous.\n\n16) Fix vnet header access past end of buffer in AF_PACKET, from\n    Benjamin Poirier.\n\n17) Double free in probe error paths of nfp driver, from Dan Carpenter.\n\n18) QOS capability not checked properly in DCB init paths of mlx5\n    driver, from Huy Nguyen.\n\n19) Fix conflicts between firmware load failure and health_care timer in\n    mlx5, also from Huy Nguyen.\n\n20) Fix dangling page pointer when DMA mapping errors occur in mlx5,\n    from Eran Ben ELisha.\n\n21) ->ndo_setup_tc() in bnxt_en driver doesn't count rings properly,\n    from Michael Chan.\n\n22) Missing MSIX vector free in bnxt_en, also from Michael Chan.\n\n23) Refcount leak in xfrm layer when using sk_policy, from Lorenzo\n    Colitti.\n\n24) Fix copy of uninitialized data in qlge driver, from Arnd Bergmann.\n\n25) bpf_setsockopts() erroneously always returns -EINVAL even on\n    success. Fix from Yuchung Cheng.\n\n26) tipc_rcv() needs to linearize the SKB before parsing the inner\n    headers, from Parthasarathy Bhuvaragan.\n\n27) Fix deadlock between link status updates and link removal in netvsc\n    driver, from Stephen Hemminger.\n\n28) Missed locking of page fragment handling in ESP output, from Steffen\n    Klassert.\n\n29) Fix refcnt leak in ebpf congestion control code, from Sabrina\n    Dubroca.\n\n30) sxgbe_probe_config_dt() doesn't check devm_kzalloc()'s return value,\n    from Christophe Jaillet.\n\n31) Fix missing ipv6 rx_dst_cookie update when rx_dst is updated during\n    early demux, from Paolo Abeni.\n\n32) Several info leaks in xfrm_user layer, from Mathias Krause.\n\n33) Fix out of bounds read in cxgb4 driver, from Stefano Brivio.\n\n34) Properly propagate obsolete state of route upwards in ipv6 so that\n    upper holders like xfrm can see it. From Xin Long.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (118 commits)\n  udp: fix secpath leak\n  bridge: switchdev: Clear forward mark when transmitting packet\n  mlxsw: spectrum: Forbid linking to devices that have uppers\n  wl1251: add a missing spin_lock_init()\n  Revert \"net: phy: Correctly process PHY_HALTED in phy_stop_machine()\"\n  net: dsa: bcm_sf2: Fix number of CFP entries for BCM7278\n  kcm: do not attach PF_KCM sockets to avoid deadlock\n  sch_tbf: fix two null pointer dereferences on init failure\n  sch_sfq: fix null pointer dereference on init failure\n  sch_netem: avoid null pointer deref on init failure\n  sch_fq_codel: avoid double free on init failure\n  sch_cbq: fix null pointer dereferences on init failure\n  sch_hfsc: fix null pointer deref and double free on init failure\n  sch_hhf: fix null pointer dereference on init failure\n  sch_multiq: fix double free on init failure\n  sch_htb: fix crash on init failure\n  net/mlx5e: Fix CQ moderation mode not set properly\n  net/mlx5e: Fix inline header size for small packets\n  net/mlx5: E-Switch, Unload the representors in the correct order\n  net/mlx5e: Properly resolve TC offloaded ipv6 vxlan tunnel source address\n  ... Merge tag 'ceph-for-4.13-rc8' of git://github.com/ceph/ceph-client\n\nPull ceph fix from Ilya Dryomov:\n \"ceph fscache page locking fix from Zheng, marked for stable\"\n\n* tag 'ceph-for-4.13-rc8' of git://github.com/ceph/ceph-client:\n  ceph: fix readpage from fscache Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov:\n \"Just a couple drivers fixes (Synaptics PS/2, Xpad)\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: xpad - fix PowerA init quirk for some gamepad models\n  Input: synaptics - fix device info appearing different on reconnect Merge tag 'mmc-v4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull two more MMC fixes from Ulf Hansson:\n \"MMC core:\n   - Fix block status codes\n\n  MMC host:\n   - sdhci-xenon: Fix SD bus voltage select\"\n\n* tag 'mmc-v4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: sdhci-xenon: add set_power callback\n  mmc: block: Fix block status codes Merge tag 'sound-4.13-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Three regression fixes that should be addressed before the final\n  release: a missing mutex call in OSS PCM emulation ioctl, ASoC rt5670\n  headset detection breakage, and a regression in simple-card parser\n  code\"\n\n* tag 'sound-4.13-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ASoC: simple_card_utils: fix fallback when \"label\" property isn't present\n  ALSA: pcm: Fix power lock unbalance via OSS emulation\n  ASoC: rt5670: Fix GPIO headset detection regression Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Martin Schwidefsky:\n \"Three more bug fixes for v4.13.\n\n  The two memory management related fixes are quite new, they fix kernel\n  crashes that can be triggered by user space.\n\n  The third commit fixes a bug in the vfio ccw translation code\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/mm: fix BUG_ON in crst_table_upgrade\n  s390/mm: fork vs. 5 level page tabel\n  vfio: ccw: fix bad ptr math for TIC cda translation Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n \"This fixes the following issues:\n\n   - Regression in chacha20 handling of chunked input\n\n   - Crash in algif_skcipher when used with async io\n\n   - Potential bogus pointer dereference in lib/mpi\"\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: algif_skcipher - only call put_page on referenced and used pages\n  crypto: testmgr - add chunked test cases for chacha20\n  crypto: chacha20 - fix handling of chunked input\n  lib/mpi: kunmap after finishing accessing buffer Merge tag 'cifs-fixes-for-4.13-rc7-and-stable' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Two cifs bug fixes for stable\"\n\n* tag 'cifs-fixes-for-4.13-rc7-and-stable' of git://git.samba.org/sfrench/cifs-2.6:\n  CIFS: remove endian related sparse warning\n  CIFS: Fix maximum SMB2 header size Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"Unfortunately a few issues that warrant sending another pull request,\n  even if I had hoped to avoid it. This contains:\n\n   - A fix for multiqueue xen-blkback, on tear down / disconnect.\n\n   - A few fixups for NVMe, including a wrong bit definition, fix for\n     host memory buffers, and an nvme rdma page size fix\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  nvme: fix the definition of the doorbell buffer config support bit\n  nvme-pci: use dma memory for the host memory buffer descriptors\n  nvme-rdma: default MR page size to 4k\n  xen-blkback: stop blkback thread of every queue in xen_blkif_disconnect Merge tag 'for-4.13/dm-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n\n - A couple fixes for bugs introduced as part of the blk_status_t block\n   layer changes during the 4.13 merge window\n\n - A printk throttling fix to use discrete rate limiting state for each\n   DM log level\n\n - A stable@ fix for DM multipath that delays request requeueing to\n   avoid CPU lockup if/when the request queue is \"dying\"\n\n* tag 'for-4.13/dm-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm mpath: do not lock up a CPU with requeuing activity\n  dm: fix printk() rate limiting code\n  dm mpath: retry BLK_STS_RESOURCE errors\n  dm: fix the second dec_pending() argument in __split_and_process_bio() Merge branch 'akpm' (patches from Andrew)\n\nMerge more fixes from Andrew Morton:\n \"6 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  scripts/dtc: fix '%zx' warning\n  include/linux/compiler.h: don't perform compiletime_assert with -O0\n  mm, madvise: ensure poisoned pages are removed from per-cpu lists\n  mm, uprobes: fix multiple free of ->uprobes_state.xol_area\n  kernel/kthread.c: kthread_worker: don't hog the cpu\n  mm,page_alloc: don't call __node_reclaim() with oom_lock held. Merge branch 'mmu_notifier_fixes'\n\nMerge mmu_notifier fixes from Jérôme Glisse:\n \"The invalidate_page callback suffered from 2 pitfalls. First it used\n  to happen after page table lock was release and thus a new page might\n  have been setup for the virtual address before the call to\n  invalidate_page().\n\n  This is in a weird way fixed by commit c7ab0d2fdc84 (\"mm: convert\n  try_to_unmap_one() to use page_vma_mapped_walk()\") which moved the\n  callback under the page table lock. Which also broke several existing\n  user of the mmu_notifier API that assumed they could sleep inside this\n  callback.\n\n  The second pitfall was invalidate_page being the only callback not\n  taking a range of address in respect to invalidation but was giving an\n  address and a page. Lot of the callback implementer assumed this could\n  never be THP and thus failed to invalidate the appropriate range for\n  THP pages.\n\n  By killing this callback we unify the mmu_notifier callback API to\n  always take a virtual address range as input.\n\n  There is now two clear API (I am not mentioning the youngess API which\n  is seldomly used):\n\n   - invalidate_range_start()/end() callback (which allow you to sleep)\n\n   - invalidate_range() where you can not sleep but happen right after\n     page table update under page table lock\n\n  Note that a lot of existing user feels broken in respect to\n  range_start/ range_end. Many user only have range_start() callback but\n  there is nothing preventing them to undo what was invalidated in their\n  range_start() callback after it returns but before any CPU page table\n  update take place.\n\n  The code pattern use in kvm or umem odp is an example on how to\n  properly avoid such race. In a nutshell use some kind of sequence\n  number and active range invalidation counter to block anything that\n  might undo what the range_start() callback did.\n\n  If you do not care about keeping fully in sync with CPU page table (ie\n  you can live with CPU page table pointing to new different page for a\n  given virtual address) then you can take a reference on the pages\n  inside the range_start callback and drop it in range_end or when your\n  driver is done with those pages.\n\n  Last alternative is to use invalidate_range() if you can do\n  invalidation without sleeping as invalidate_range() callback happens\n  under the CPU page table spinlock right after the page table is\n  updated.\n\n  The first two patches convert existing mmu_notifier_invalidate_page()\n  calls to mmu_notifier_invalidate_range() and bracket those call with\n  call to mmu_notifier_invalidate_range_start()/end().\n\n  The next ten patches remove existing invalidate_page() callback as it\n  can no longer happen.\n\n  Finally the last page remove the invalidate_page() callback completely\n  so it can RIP.\n\n  Changes since v1:\n   - remove more dead code in kvm (no testing impact)\n   - more accurate end address computation (patch 2) in page_mkclean_one\n     and try_to_unmap_one\n   - added tested-by/reviewed-by gotten so far\"\n\n* emailed patches from Jérôme Glisse <jglisse@redhat.com>:\n  mm/mmu_notifier: kill invalidate_page\n  KVM: update to new mmu_notifier semantic v2\n  xen/gntdev: update to new mmu_notifier semantic\n  sgi-gru: update to new mmu_notifier semantic\n  misc/mic/scif: update to new mmu_notifier semantic\n  iommu/intel: update to new mmu_notifier semantic\n  iommu/amd: update to new mmu_notifier semantic\n  IB/hfi1: update to new mmu_notifier semantic\n  IB/umem: update to new mmu_notifier semantic\n  drm/amdgpu: update to new mmu_notifier semantic\n  powerpc/powernv: update to new mmu_notifier semantic\n  mm/rmap: update to new mmu_notifier semantic v2\n  dax: update to new mmu_notifier semantic Merge branch 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm fix from Dan Williams:\n \"A single patch removing some structure definitions from a uapi header\n  file. These payloads are never processed directly by the kernel they\n  are simply passed through an ioctl as opaque blobs to the ACPI _DSM\n  (Device Specific Method) interface.\n\n  Userspace should not be depending on the kernel to define these\n  payloads. We will instead provide these definitions via the existing\n  libndctl (https://github.com/pmem/ndctl) project that has NVDIMM\n  command helpers and other definitions\"\n\n* 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  libnvdimm: clean up command definitions Merge tag 'drm-fixes-for-v4.13-rc8' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Two fixes (a vmwgfx and core drm fix) in the queue for 4.13 final,\n  hopefully that is it\"\n\n* tag 'drm-fixes-for-v4.13-rc8' of git://people.freedesktop.org/~airlied/linux:\n  drm/vmwgfx: Fix F26 Wayland screen update issue\n  drm/bridge/sii8620: Fix memory corruption Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Three minor fixes: a NULL deref in qedf, an off by one in sg and a fix\n  to IPR to prevent an error on initialisation\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: qedf: Fix a potential NULL pointer dereference\n  scsi: sg: off by one in sg_ioctl()\n  scsi: ipr: Set no_report_opcodes for RAID arrays Merge branch 'for-linus-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml\n\nPull UML fix from Richard Weinberger:\n \"This contains a single fix for a regression which was introduced while\n  the merge window\"\n\n* 'for-linus-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml:\n  um: Fix check for _xstate for older hosts Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha\n\nPull alpha update from Matt Turner:\n \"A few fixes and wires up some additional syscalls.\"\n\n[ Some of this is technically not really rc7 material, but it's alpha,\n  and it all looks safe anyway. Matt explains: \"My alpha has been\n  offline, hence the very late-in-cycle pull request\" and hasn't caused\n  problems before, so he gets to slide.   - Linus ]\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha:\n  alpha: uapi: Add support for __SANE_USERSPACE_TYPES__\n  alpha: Define ioremap_wc\n  alpha: Fix section mismatches\n  alpha: support R_ALPHA_REFLONG relocations for module loading\n  alpha: Fix typo in ev6-copy_user.S\n  alpha: Package string routines together\n  alpha: Update for new syscalls\n  alpha: Fix build error without CONFIG_VGA_HOSE. Merge branch 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fix from Tejun Heo:\n \"A late but obvious fix for cgroup.\n\n  I broke the 'cpuset.memory_pressure' file a long time ago (v4.4) by\n  accidentally deleting its file index, which made it a duplicate of the\n  'cpuset.memory_migrate' file. Spotted and fixed by Waiman\"\n\n* 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cpuset: Fix incorrect memory_pressure control file mapping Merge branch 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Late fixes for libata. There's a minor platform driver fix but the\n  important one is READ LOG PAGE.\n\n  This is a new ATA command which is used to test some optional features\n  but it broke probing of some devices - they locked up instead of\n  failing the unknown command.\n\n  Christoph tried blacklisting, but, after finding out there are\n  multiple devices which fail this way, backed off to testing feature\n  bit in IDENTIFY data first, which is a bit lossy (we can miss features\n  on some devices) but should be a lot safer\"\n\n* 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  Revert \"libata: quirk read log on no-name M.2 SSD\"\n  libata: check for trusted computing in IDENTIFY DEVICE data\n  libata: quirk read log on no-name M.2 SSD\n  sata: ahci-da850: Fix some error handling paths in 'ahci_da850_probe()' Revert \"rmap: do not call mmu_notifier_invalidate_page() under ptl\"\n\nThis reverts commit aac2fea94f7a3df8ad1eeb477eb2643f81fd5393.\n\nIt turns out that that patch was complete and utter garbage, and broke\nKVM, resulting in odd oopses.\n\nQuoting Andrea Arcangeli:\n \"The aforementioned commit has 3 bugs.\n\n  1) mmu_notifier_invalidate_range cannot be used in replacement of\n     mmu_notifier_invalidate_range_start/end.\n\n     For KVM mmu_notifier_invalidate_range is a noop and rightfully so.\n\n     A MMU notifier implementation has to implement either\n     ->invalidate_range method or the invalidate_range_start/end\n     methods, not both. And if you implement invalidate_range_start/end\n     like KVM is forced to do, calling mmu_notifier_invalidate_range in\n     common code is a noop for KVM.\n\n     For those MMU notifiers that can get away only implementing\n     ->invalidate_range, the ->invalidate_range is implicitly called by\n     mmu_notifier_invalidate_range_end(). And only those secondary MMUs\n     that share the same pagetable with the primary MMU (like AMD\n     iommuv2) can get away only implementing ->invalidate_range.\n\n     So all cases (THP on/off) are broken right now.\n\n     To fix this is enough to replace mmu_notifier_invalidate_range with\n     mmu_notifier_invalidate_range_start;mmu_notifier_invalidate_range_end.\n     Either that or call multiple mmu_notifier_invalidate_page like\n     before.\n\n  2) address + (1UL << compound_order(page) is buggy, it should be\n     PAGE_SIZE << compound_order(page), it's bytes not pages, 2M not\n     512.\n\n  3) The whole invalidate_range thing was an attempt to call a single\n     invalidate while walking multiple 4k ptes that maps the same THP\n     (after a pmd virtual split without physical compound page THP\n     split).\n\n     It's unclear if the rmap_walk will always provide an address that\n     is 2M aligned as parameter to try_to_unmap_one, in presence of THP.\n     I think it needs also an address &= (PAGE_SIZE <<\n     compound_order(page)) - 1 to be safe\"\n\nIn general, we should stop making excuses for horrible MMU notifier\nusers.  It's much more important that the core VM is sane and safe, than\nletting MMU notifiers sleep.\n\nSo if some MMU notifier is sleeping under a spinlock, we need to fix the\nnotifier, not try to make excuses for that garbage in the core VM.\n\nReported-and-tested-by: Bernhard Held <berny156@gmx.de>\nReported-and-tested-by: Adam Borowski <kilobyte@angband.pl>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: Radim Krčmář <rkrcmar@redhat.com>\nCc: Wanpeng Li <kernellwp@gmail.com>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Takashi Iwai <tiwai@suse.de>\nCc: Nadav Amit <nadav.amit@gmail.com>\nCc: Mike Galbraith <efault@gmx.de>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: Jérôme Glisse <jglisse@redhat.com>\nCc: axie <axie@amd.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> page waitqueue: always add new entries at the end\n\nCommit 3510ca20ece0 (\"Minor page waitqueue cleanups\") made the page\nqueue code always add new waiters to the back of the queue, which helps\nupcoming patches to batch the wakeups for some horrid loads where the\nwait queues grow to thousands of entries.\n\nHowever, I forgot about the nasrt add_page_wait_queue() special case\ncode that is only used by the cachefiles code.  That one still continued\nto add the new wait queue entries at the beginning of the list.\n\nFix it, because any sane batched wakeup will require that we don't\nsuddenly start getting new entries at the beginning of the list that we\nalready handled in a previous batch.\n\n[ The current code always does the whole list while holding the lock, so\n  wait queue ordering doesn't matter for correctness, but even then it's\n  better to add later entries at the end from a fairness standpoint ]\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming\n\nPull c6x tweaks from Mark Salter.\n\n* tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming:\n  c6x: Convert to using %pOF instead of full_name\n  c6x: defconfig: Cleanup from old Kconfig options Linux 4.13-rc7 Merge tag 'iommu-fixes-v4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fix from Joerg Roedel:\n \"Another fix, this time in common IOMMU sysfs code.\n\n  In the conversion from the old iommu sysfs-code to the\n  iommu_device_register interface, I missed to update the release path\n  for the struct device associated with an IOMMU. It freed the 'struct\n  device', which was a pointer before, but is now embedded in another\n  struct.\n\n  Freeing from the middle of allocated memory had all kinds of nasty\n  side effects when an IOMMU was unplugged. Unfortunatly nobody\n  unplugged and IOMMU until now, so this was not discovered earlier. The\n  fix is to make the 'struct device' a pointer again\"\n\n* tag 'iommu-fixes-v4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu: Fix wrong freeing of iommu_device->dev Merge tag 'char-misc-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc fix from Greg KH:\n \"Here is a single misc driver fix for 4.13-rc7. It resolves a reported\n  problem in the Android binder driver due to previous patches in\n  4.13-rc.\n\n  It's been in linux-next with no reported issues\"\n\n* tag 'char-misc-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  ANDROID: binder: fix proc->tsk check. Merge tag 'staging-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging/iio fixes from Greg KH:\n \"Here are few small staging driver fixes, and some more IIO driver\n  fixes for 4.13-rc7. Nothing major, just resolutions for some reported\n  problems.\n\n  All of these have been in linux-next with no reported problems\"\n\n* tag 'staging-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  iio: magnetometer: st_magn: remove ihl property for LSM303AGR\n  iio: magnetometer: st_magn: fix status register address for LSM303AGR\n  iio: hid-sensor-trigger: Fix the race with user space powering up sensors\n  iio: trigger: stm32-timer: fix get trigger mode\n  iio: imu: adis16480: Fix acceleration scale factor for adis16480\n  PATCH] iio: Fix some documentation warnings\n  staging: rtl8188eu: add RNX-N150NUB support\n  Revert \"staging: fsl-mc: be consistent when checking strcmp() return\"\n  iio: adc: stm32: fix common clock rate\n  iio: adc: ina219: Avoid underflow for sleeping time\n  iio: trigger: stm32-timer: add enable attribute\n  iio: trigger: stm32-timer: fix get/set down count direction\n  iio: trigger: stm32-timer: fix write_raw return value\n  iio: trigger: stm32-timer: fix quadrature mode get routine\n  iio: bmp280: properly initialize device for humidity reading Merge tag 'ntb-4.13-bugfixes' of git://github.com/jonmason/ntb\n\nPull NTB fixes from Jon Mason:\n \"NTB bug fixes to address an incorrect ntb_mw_count reference in the\n  NTB transport, improperly bringing down the link if SPADs are\n  corrupted, and an out-of-order issue regarding link negotiation and\n  data passing\"\n\n* tag 'ntb-4.13-bugfixes' of git://github.com/jonmason/ntb:\n  ntb: ntb_test: ensure the link is up before trying to configure the mws\n  ntb: transport shouldn't disable link due to bogus values in SPADs\n  ntb: use correct mw_count function in ntb_tool and ntb_transport Avoid page waitqueue race leaving possible page locker waiting\n\nThe \"lock_page_killable()\" function waits for exclusive access to the\npage lock bit using the WQ_FLAG_EXCLUSIVE bit in the waitqueue entry\nset.\n\nThat means that if it gets woken up, other waiters may have been\nskipped.\n\nThat, in turn, means that if it sees the page being unlocked, it *must*\ntake that lock and return success, even if a lethal signal is also\npending.\n\nSo instead of checking for lethal signals first, we need to check for\nthem after we've checked the actual bit that we were waiting for.  Even\nif that might then delay the killing of the process.\n\nThis matches the order of the old \"wait_on_bit_lock()\" infrastructure\nthat the page locking used to use (and is still used in a few other\nareas).\n\nNote that if we still return an error after having unsuccessfully tried\nto acquire the page lock, that is ok: that means that some other thread\nwas able to get ahead of us and lock the page, and when that other\nthread then unlocks the page, the wakeup event will be repeated.  So any\nother pending waiters will now get properly woken up.\n\nFixes: 62906027091f (\"mm: add PageWaiters indicating tasks are waiting for a page bit\")\nCc: Nick Piggin <npiggin@gmail.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Mel Gorman <mgorman@techsingularity.net>\nCc: Jan Kara <jack@suse.cz>\nCc: Davidlohr Bueso <dave@stgolabs.net>\nCc: Andi Kleen <ak@linux.intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Minor page waitqueue cleanups\n\nTim Chen and Kan Liang have been battling a customer load that shows\nextremely long page wakeup lists.  The cause seems to be constant NUMA\nmigration of a hot page that is shared across a lot of threads, but the\nactual root cause for the exact behavior has not been found.\n\nTim has a patch that batches the wait list traversal at wakeup time, so\nthat we at least don't get long uninterruptible cases where we traverse\nand wake up thousands of processes and get nasty latency spikes.  That\nis likely 4.14 material, but we're still discussing the page waitqueue\nspecific parts of it.\n\nIn the meantime, I've tried to look at making the page wait queues less\nexpensive, and failing miserably.  If you have thousands of threads\nwaiting for the same page, it will be painful.  We'll need to try to\nfigure out the NUMA balancing issue some day, in addition to avoiding\nthe excessive spinlock hold times.\n\nThat said, having tried to rewrite the page wait queues, I can at least\nfix up some of the braindamage in the current situation. In particular:\n\n (a) we don't want to continue walking the page wait list if the bit\n     we're waiting for already got set again (which seems to be one of\n     the patterns of the bad load).  That makes no progress and just\n     causes pointless cache pollution chasing the pointers.\n\n (b) we don't want to put the non-locking waiters always on the front of\n     the queue, and the locking waiters always on the back.  Not only is\n     that unfair, it means that we wake up thousands of reading threads\n     that will just end up being blocked by the writer later anyway.\n\nAlso add a comment about the layout of 'struct wait_page_key' - there is\nan external user of it in the cachefiles code that means that it has to\nmatch the layout of 'struct wait_bit_key' in the two first members.  It\nso happens to match, because 'struct page *' and 'unsigned long *' end\nup having the same values simply because the page flags are the first\nmember in struct page.\n\nCc: Tim Chen <tim.c.chen@linux.intel.com>\nCc: Kan Liang <kan.liang@intel.com>\nCc: Mel Gorman <mgorman@techsingularity.net>\nCc: Christopher Lameter <cl@linux.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Davidlohr Bueso <dave@stgolabs.net>\nCc: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clarify (and fix) MAX_LFS_FILESIZE macros\n\nWe have a MAX_LFS_FILESIZE macro that is meant to be filled in by\nfilesystems (and other IO targets) that know they are 64-bit clean and\ndon't have any 32-bit limits in their IO path.\n\nIt turns out that our 32-bit value for that limit was bogus.  On 32-bit,\nthe VM layer is limited by the page cache to only 32-bit index values,\nbut our logic for that was confusing and actually wrong.  We used to\ndefine that value to\n\n\t(((loff_t)PAGE_SIZE << (BITS_PER_LONG-1))-1)\n\nwhich is actually odd in several ways: it limits the index to 31 bits,\nand then it limits files so that they can't have data in that last byte\nof a page that has the highest 31-bit index (ie page index 0x7fffffff).\n\nNeither of those limitations make sense.  The index is actually the full\n32 bit unsigned value, and we can use that whole full page.  So the\nmaximum size of the file would logically be \"PAGE_SIZE << BITS_PER_LONG\".\n\nHowever, we do wan tto avoid the maximum index, because we have code\nthat iterates over the page indexes, and we don't want that code to\noverflow.  So the maximum size of a file on a 32-bit host should\nactually be one page less than the full 32-bit index.\n\nSo the actual limit is ULONG_MAX << PAGE_SHIFT.  That means that we will\nnot actually be using the page of that last index (ULONG_MAX), but we\ncan grow a file up to that limit.\n\nThe wrong value of MAX_LFS_FILESIZE actually caused problems for Doug\nNazar, who was still using a 32-bit host, but with a 9.7TB 2 x RAID5\nvolume.  It turns out that our old MAX_LFS_FILESIZE was 8TiB (well, one\nbyte less), but the actual true VM limit is one page less than 16TiB.\n\nThis was invisible until commit c2a9737f45e2 (\"vfs,mm: fix a dead loop\nin truncate_inode_pages_range()\"), which started applying that\nMAX_LFS_FILESIZE limit to block devices too.\n\nNOTE! On 64-bit, the page index isn't a limiter at all, and the limit is\nactually just the offset type itself (loff_t), which is signed.  But for\nclarity, on 64-bit, just use the maximum signed value, and don't make\npeople have to count the number of 'f' characters in the hex constant.\n\nSo just use LLONG_MAX for the 64-bit case.  That was what the value had\nbeen before too, just written out as a hex constant.\n\nFixes: c2a9737f45e2 (\"vfs,mm: fix a dead loop in truncate_inode_pages_range()\")\nReported-and-tested-by: Doug Nazar <nazard@nazar.ca>\nCc: Andreas Dilger <adilger@dilger.ca>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Dave Kleikamp <shaggy@kernel.org>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov:\n\n - a tweak to the IBM Trackpoint driver that helps recognizing\n   trackpoints on never Lenovo Carbons\n\n - a fix to the ALPS driver solving scroll issues on some Dells\n\n - yet another ACPI ID has been added to Elan I2C toucpad driver\n\n - quieted diagnostic message in soc_button_array driver\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: ALPS - fix two-finger scroll breakage in right side on ALPS touchpad\n  Input: soc_button_array - silence -ENOENT error on Dell XPS13 9365\n  Input: trackpoint - add new trackpoint firmware ID\n  Input: elan_i2c - add ELAN0602 ACPI ID to support Lenovo Yoga310 Merge tag 'pci-v4.13-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fix from Bjorn Helgaas:\n \"Remove needlessly alarming MSI affinity warning (this is not actually\n  a bug fix, but the warning prompts unnecessary bug reports)\"\n\n* tag 'pci-v4.13-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI/MSI: Don't warn when irq_create_affinity_masks() returns NULL Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"Two fixes: one for an ldt_struct handling bug and a cherry-picked\n  objtool fix\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mm: Fix use-after-free of ldt_struct\n  objtool: Fix '-mtune=atom' decoding support in objtool 2.0 Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Ingo Molnar:\n \"Fix a timer granularity handling race+bug, which would manifest itself\n  by spuriously increasing timeouts of some timers (from 1 jiffy to ~500\n  jiffies in the worst case measured) in certain nohz states\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  timers: Fix excessive granularity of new timers after a nohz idle Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fix from Ingo Molnar:\n \"A single fix to not allow nonsensical event groups that result in\n  kernel warnings\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/core: Fix group {cpu,task} validation Merge branches 'windows', 'docs' and 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'windows' of git://git.hohndel.org/subsurface:\n  Fixes for the Windows installer\n\n* 'docs' of git://git.hohndel.org/subsurface:\n  Version 0.0.7 of user manual\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Remove unused return value Merge branch 'docs' of git://git.hohndel.org/subsurface\n\n* 'docs' of git://git.hohndel.org/subsurface:\n  Version 0.0.6 of user manual parse-xml: read the file into memory separately\n\nUsing xmlParseFile() was simple, but I'm planning on extending the file\nparsing past just XML, since we want to be able to import other formats\ntoo.  And quite frankly, that means that we'll want to read the file\ninto memory to look at it before we start parsing it.\n\nWe could decide do it by file extensions too, and I'll look at that\napproach as well, but regardless of how we do things it's almost\ncertainly a good idea to do the file access in one place.  The XML\nparsing might as well happen from a memory buffer instead anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use an ellipsis for Nitrox O2% ranges\n\nThe plain dash may look a bit too much like a trimix specification.  Is\nthe ellipsis better? Maybe.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Return is not a function Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Improve Makefile for MacOS\n  Add reasonable default device names for divecomputer import\n  More intuitive label for \"not saving\" when exiting Merge branch 'forlinus' of git://git.hohndel.org/subsurface\n\n* 'forlinus' of git://git.hohndel.org/subsurface:\n  Small improvement to plot info debugging code\n  Add three more trimix test dives\n  Make test dive 15 a bit more useful\n  Two test dives I added a couple of months ago\n  Add libxslt to Windows packaging file Pack the star rating on a line of its own\n\nPacking it next to the divemaster/buddy information may work great on a\nbig screen with lots of pixes, but it makes the minimum window size way\nwide for a small screen.  So don't do it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> divelist: show/sort nitrox dive oxygen percentage as a range\n\nIf you are diving multiple nitrox cylinders, we now show them as a range\ninstead of just the max.  We'll still sort by max O2 (and for the same\nmax, by min O2).\n\nSo now with trimix dives, we'll show the bottom gas (we assume that\n\"highest He percentage\" is that bottom gas), for nitrox dives we'll show\nthe range of Oxygen percentage, and for all-air dives we'll show just\n\"air\".\n\nFor simple nitrox dives (only a single mix), we'll obviously show just\nthat single percentage.  This should hopefully conclude the whole \"show\nmultiple cylinders in dive list\" mess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive gas record the single highest mix\n\n.. using the regular sorting rules: sort by Helium content first, Oxygen\ncontent second.  Air always sorts last (even behind the theoretical\nhypoxic Nitrox that nobody sane would use).\n\nThis is what Don Kinney implies would be the natural thing for a trimix\ndiver.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add capability of custom sorts to divelist columns\n\n.. and use this for the nitrox column, which can now be more complex\nthan just a single number.\n\nThe rule for the \"nitrox\" column is now:\n\n - we look up the highest Oxygen and Helium mix for the dive\n\n   (Note: we look them up independently, so if you have a EAN50 deco\n   bottle, and a 20% Helium low-oxygen bottle for the deep portion, then\n   we'll consider the dive to be a \"50% Oxygen, 20% Helium\" dive, even\n   though you obviously never used that combination at the same time)\n\n - we sort by Helium first, Oxygen second.  So a dive with a 10% Helium\n   mix is considered to be \"stronger\" than a 50% Nitrox mix.\n\n - If Helium is non-zero, we show \"O2/He\", otherwise we show just \"O2\"\n   (or \"air\").  So \"21/20\" means \"21% oxygen, 20% Helium\", while \"40\"\n   means \"Ean 40\".\n\n - I got rid of the decimals.  We save them, and you can see them in the\n   dive equipment details, but for the dive list we just use rounded\n   percentages.\n\nLet's see how many bugs I introduced.  I don't actually have any trimix\ndives, but I edited a few for (very limited) testing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make sure to update divelist O2 information after editing\n\nThe divelist airmix display is kind of broken: it only looks at the\nfirst cylinder, and it only looks at Oxygen content, not Helium.\n\nBut at least we can make sure to update it when somebody edits the\ncylinder information, instead of leaving it extra broken.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the \"Common European Cylinders\" as per Henrik\n\nThis is Henrik's list of common metric sized cylinders, although my\nexperience differs from this one.  In Cyprus, I was diving double 12L\ncylinders, but they were 200 bar, not the 232 bar ones Henrik has on the\nlist.\n\nAlso, I really think we should just have a checkbox for \"double\" instead\nof naming them explicitly like this.  Henrik does have the 12L 200 bar\nones in his singles list.\n\nBut as a stop-gap, I'm just taking the values from Henrik's patch, but\nconverted to the new cleaned-up reference tank model setup.\n\nBased-on-patch-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up reference tank information table\n\nThis makes the reference tanks (\"struct tank_info\") use a saner format\nwhich specifies explicitly whether the size is in ml or cubic feet, and\nwhether the pressure is in psi or bar.\n\nSo instead of having magic rules (\"size is in cuft if < 1000, otherwise\nmliter\"), just set the size explicitly:\n\n\t{ \"11.1 l\", .ml = 11100 },\n\t{ \"AL80\",  .cuft =  80, .psi = 3000 },\n\nand then the code can just convert to standard measurements without any\nodd rules, and the initialization table becomes self-explanatory too.\n\nThis is in preparation for doing the metric tanks with pressure: Henrik\nAronsen sent a really ugly patch using the previous setup, I just\ncouldn't stand the additional hackery.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the cylinder table columns unsortable\n\nThey were never intended to be sortable, but using common code with the\ndive list picked up that \"sort by index\" thing by mistake.\n\nIf we really want to be able to sort cylinders by O2 percentage (which\nreally doesn't seem to make much sense, considering that you usually\nhave just one or two cylinders) we will need to also handle the case of\nediting the (differently sorted) cylinder table.  Which we don't do now.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Allow editing of Helium values in cylinder info\n\nHenrik Aronsen points out that we've not made it possible to edit the He\npercentages for trimix diving.  It's easy enough to do, I just didn't\nhave any dives that needed it myself.  So here goes.\n\nReported-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use common helper function for the \"no cylinder info\" case\n\nMiika fixed the statistics code that didn't properly check for the \"no\ncylinder info\" case - this cleans it up and just uses the helper\nfunction in equipment.c.\n\nRename the helper to be slightly better named while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Subsurface 1.2\n\nWith the whole UI change (three-paned window and different look with new\ncolors), let's just make a new release, as Dirk points out.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'stars' of git://git.hohndel.org/subsurface\n\n* 'stars' of git://git.hohndel.org/subsurface:\n  Fix some issues with star rating code\n  Add typical 0 to 5 star rating for dives\n\nStill not great editing, but other than that it looks good. Make view action shortcuts be ctrl-[1-4] instead of Fn keys\n\nSuggested by Henrik Aronsen, and seems much more natural.  Especially\nwith lots of keyboards having function keys oddly mapped.\n\nSuggested-by: Henrik Brautaset Aronsen <subsurface@henrik.synth.no>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add shorthand actions for showing just one of the panes\n\nCurrently just tied to F1-F4 (for divelist, profile, info, and \"all\nthree\" respectively), which is just crazy.  But using \"ctrl-P\" for\n\"Profile\" isn't sane either, that's the standard printer keyboard\nshortcut.  So what would be good keyboard shortcuts for these things?\n\nI also wonder how I can get gtk to shut up about the fact that a pane\nbecomes too small for the contents of that pane? We very much want to do\nthat, and it's very intentional.  Gtk does the right thing apart from\nthe whining (and apart from the visually ugly part of a widget that\ndoesn't fit, but making it pretty doesn't really seem possible).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'grid-to-back' of git://github.com/henrik242/subsurface\n\n* 'grid-to-back' of git://github.com/henrik242/subsurface:\n  Move depth/time grid back Merge git://github.com/JoachimSchipper/subsurface\n\n* git://github.com/JoachimSchipper/subsurface:\n  README spelling, capitalization Merge branch 'windows-fixes' of git://git.hohndel.org/subsurface\n\n* 'windows-fixes' of git://git.hohndel.org/subsurface:\n  fix mingw-win32 specific warnings in libdivecomputer.c\n  Fix mingw-make.sh to find correct xslt-config Merge branch 'windows-fixes' of git://git.hohndel.org/subsurface\n\n* 'windows-fixes' of git://git.hohndel.org/subsurface:\n  Add more typecasts for Windows`\n  Fix the Windows preferences support\n  Update the Windows installer creation script Remove stale notebook drag-and-drop support\n\nIt doesn't make sense with the new three-pane layout, and I don't think\nwe're reviving it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'mac-fixes' of git://git.hohndel.org/subsurface\n\n* 'mac-fixes' of git://git.hohndel.org/subsurface:\n  Split reading/writing preferences into OS specific files Merge branch 'mac-fixes' of git://git.hohndel.org/subsurface\n\n* 'mac-fixes' of git://git.hohndel.org/subsurface:\n  Preference handling on Mac Remove suunto parsing hacks from parse-xml.c\n\nWe can just depend on Miika's xslt transform instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'multi-pane'\n\n* multi-pane:\n  Experimental hard-coded three-pane layout\n\nOk, so it's not perfect, but I've been using a version of this for the\nlast week or so by now, and every time I go back to the old layout I\njust cringe.\n\nSo the three-pane window approach requires much more display area, and\nprobably wouldn't work wonderfully on low-resolution devices (ie 720x480\nor even 1024x600).  So for anybody doing a cellphone port, you may need\nto play around with the interface.  But this should be usable even on a\nnetbook, although not as good as on a device with more pixels.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do proper rounding in interpolated pressure calculations\n\nWe do all the pressures in mbar, which has plenty of precision for\ninterpolated pressures - even when we then do our discrete integration\nover many samples.\n\nHowever, when we calculate those interpolated pressure points, we should\nmake sure that we round the result correctly, otherwise the consistent\nrounding errors (from truncating the FP value into our integer mbar\nvalues) will result in a final pressure that is noticeably off in ugly\nways (ie \"end pressure set by hand to 750 mbar, but shown as 748\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Revert \"Correctly plot the tank end pressure if it was set manually\"\n\nThis reverts commit abdee5b1b8a97c641bca9bc2ebac9555c3e2ea54.\n\nThere's no point in doing random hacks.  Instead, do the intermediate\npressure calculations with proper rounding instead of always truncating\nto mbar.  With the math done correctly we have enough precision that the\nend result of the pressure interpolation doesn't have the kind of errors\nthat caused Dirk to try to fix things up later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Fix error when gaschange event is one second before next sample Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Correctly plot the tank end pressure if it was set manually Experimental hard-coded three-pane layout\n\nI'm not happy with it, but it looks good and works better than the\nalternatives I've looked at so far.\n\nSo why not happy? It's not configurable, and gtk really doesn't do a\ngreat job with the case of notebook widgets that are shrunk to be\nsmaller than the contents (the cut-off gets ugly, and is outside the\nnotebook page!)\n\nBut committing as a way to keep track of this, and let Dirk use it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Make pressure plot shading by sac rate consistent\n  Improve tank pressure sac coloring\n  Be more consistent in our handling of rgb value tables\n  Remove redundant linear sample tank pressure data Add the cylinder list to the dive info edit dialog\n\nThis way, when you have a new dive that you just imported from your dive\ncomputer, you can just double-click on the dive and fill out all the\nrelevant information: location, notes, buddies and cylinder info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add dive number and date to the dive info edit dialog\n\nIt's pretty basic information, and might be hidden behind the dialog\nespecially on a small screen.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add an 'edit' menu item to the dive info text fields\n\nIt just pops up the dive info edit box.  This way you can be in the dive\ninfo tab, and not have to go to the dive list just to double-click on\nthe dive.\n\nThis thing still needs some polish, but it's now usable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make double-clicking on the dive list bring up the dive editor\n\nNow that the dive info window is read-only, we need to edit the dives\nsome other way.  We bring up a dive info edit dialog when you\ndouble-click on the dive list entry for that dive.\n\nI do want to have an \"edit\" button or keyboard shortcut or something\ntoo, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make all the normal widgets uneditable and non-focusing\n\nWe always keep the focus on the dive list, so that the random gtk focus\nhandling doesn't suddenly randomly make us edit the combo boxes when the\ncursor up/down keys start changing them instead of the dive list.\n\nThis means that dive location, notes and buddy/divemaster aren't\neditable at all any more, but I'll fix that by making a separate dive\nedit popup window.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://github.com/dirkhh/subsurface\n\n* 'sacplot' of git://github.com/dirkhh/subsurface:\n  Color tank pressure plot based on relative sac Merge branch 'sacplot' of git://github.com/dirkhh/subsurface\n\n* 'sacplot' of git://github.com/dirkhh/subsurface:\n  Color pressure plot according to current SAC rate\n  Fix minor coding standard issues introduced by my last commit Remove redundant duplicate pressure samples\n\nAt least the Suunto pressure transmitter seems to be pretty\n\"quantisized\", and it will send identical samples for a while until the\npressure changes enough.  Then subsurface gives this silly flat line\nwith a sudden jump downwards, which *could* be you suddenly taking a\ndeep breath after holding it for a while, but almost certainly it's a\nsensor issue.\n\nSo just remove successive identical pressure readings.  They aren't\ninteresting, and subsurface will actually do a good job of interpolating\nit according to SAC rate instead.  And they just make the XML look\nworse.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dives \"latest-first\" by default\n\nYou can still order them by date by just setting the sort order on the\ndate column, but normally you'd be more interested in the most recent\ndives.\n\nI tried to just scroll down to the last ones automatically instead, but\ngtk makes that *really* hard to do.  If you do it in the natural place\nfor it, the scroll bar wll show up later and then cover up the last\nentry anyway.  So you'd have to do some crazy expose event thing or\nsomething.  Which may be the right thing to do eventually anyway, but\nnot worth the pain right now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show more of the dive location in the dive list\n\nRandomly picked up to 60 characters.  But maybe we should just get rid\nof the limit entirely.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'forlinus' of git://github.com/dirkhh/subsurface\n\n* 'forlinus' of git://github.com/dirkhh/subsurface:\n  Make sure SAC and OTU get recalculated after cylinder info was changed Fix the stupid gtk combo box text reset issue for real\n\nLubomir's solution to fill them with a newline doesn't work.  Well, it\nmay work on some versions of gtk, but on mine it just results in an ugly\nbox for the control character '000a' that tries to show the newline.\n\nSo this is a third approach: if we reset the text to empty, first set it\nto space (to clear it), and then set it to empty.  That seems to work on\nat least one version of gtk, and doesn't have the problem with the space\n*remaining* when you cut-and-paste something into the combo box.\n\nLet's see if it breaks anything else, but at worst it should be no worse\nthan the old \"set it to space\" approach - iow the combo box might\nremember the space, but at least not some random data from the previous\ndive that it happened to show.\n\nLovely gtk bugs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save cylinder O2/He content after the cylinder type description\n\nThis changes the save format xml to be a bit more readable: instead of\nputting the gasmix first, put the cylinder type (size, workpressure and\ndescription) first, then gasmix, then pressure details.\n\nIt makes no difference for machine parsing, but I think it's a lot more\nlogical for humans that actually look at the xml file.  And we really do\nwant to make the xml file readable by humans.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the sample-vs-cylinder pressure check more liberal\n\nThis makes it consider them to be identical if they are within half a\nbar of each other.  If you edit the pressures by hand and set them to\nthe same bar pressure as the samples, they may not be identical to the\nlast milli-bar, but clearly the manually entered cylinder pressure isn't\nsignificantly different from the sample data, so consider it redundant.\n\nWe do want manual overrides of cylinder pressures to take precedence\nover sample data (as Dirk so eloquently puts it, some dive computers\nreally don't have very reliable sample data), but at the same time the\nsample data is the one we are expecting to be fairly accurate.  The\nstarting and ending pressure overrides are for when there is no sample\ndata, or when the sample data is totally wrong for some reason.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove unused 'minpressure/endpressure' fields from plot info\n\n.. and fix the maxpressure to actually look at *all* the cylinders, so\nthat if you don't have sample data, but rely onmanually set cylinder\npressures, it now really is the max of all the cylinders.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'bugfixes' of git://github.com/dirkhh/subsurface\n\n* 'bugfixes' of git://github.com/dirkhh/subsurface:\n  Fix breakage caused by Linus' changes to tank pressure handling Merge branch 'testdata' of git://github.com/dirkhh/subsurface\n\n* 'testdata' of git://github.com/dirkhh/subsurface:\n  Improve temperature text plotting in profile display Merge branch 'testdata' of git://github.com/dirkhh/subsurface\n\n* 'testdata' of git://github.com/dirkhh/subsurface:\n  Correctly plot dives ending below the surface Add \"enable\" button for manual pressure setting\n\nThis grays out the pressure settings in the cylinder editing widget if\nthe pressure data has been taken from the samples.  You can still\nmanually override the data, but you now need to enable that manual\noverride explicitly.\n\nThis makes the semantics of editing start/end pressures of dives with\npressure sample data a bit more intuitive, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Keep the start/end spinbuttons as GtkWidget\n\nFor graying things out, we want a widget, not a spinbutton.  Although\nI'm sure we could just cast things back and forth.  But let's be\nconsistent with what we do, and only ever cast from GtkWidget to\nGtkSpinButton, and have the same logic as for the \"o2\" widget that also\nneeds to be explicitly enabled.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> equipment: clean up cylinder pressure spinbutton setup\n\nThis is just in case I end up doing the graying out of implicit pressure\ninformation: I wanted to clean things up a bit first.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the newly split pressures correctly in the equipment page too\n\nNOTE! When *editing* the cylinder data, the only thing shown is the\nnon-sample pressure.  So the cylinder editing widget will show zero for\nstart/end pressure for a dive that has pressure saples without any\nmanually set pressure data.\n\nThis is intentional, so that you can clearly see that this is not a set\nvalue.  But it may be that we should gray out the spinputton and have an\n\"edit value\" checkbox or something to make it really obvious.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up the statistics page use of pressure data\n\nThe statistics page calculates air use separately, and also needs to be\nfixed up for the split of the pressures into sample-vs-start/end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up air use calculations for new pressure handling\n\nMake sure that we calculate air use by using the proper start/end\npressures, with the manually set ones being used preferentially over any\npossible sample data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save cylinder start/end pressures unless set by hand\n\nKeep the sample pressure start/end data separate from the overall\ncylinder start/end data - and clean the overall cylinder start/end data\nif it matches the samples exactly to avoid the redundancy.\n\nThis breaks all the SAC calculations etc, which expect the cylinder\npressures to always be in the cylinder data.  I'll fix that up\nseparately.\n\nThe reason for this is that we really want to keep the manually entered\ndata separate: the pressure plotting doesn't need the confusion, and\nconsiders end-point data (with interpolation) very different from sample\ndata.  Also, we do not want to pollute the xml save-file with data that\nis computed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> If we don't have cylinder working pressure, we sill want to show the volume\n\n.. although in that case we can only ever show the volume in liters, and\ncannot do a conversion to cubic feet even if the user has set imperial\nunits.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the xslt style sheet finding search a set of possible paths\n\nThis allows us to install the xslt files in multiple places.  Right now\nthe path defaults to the subsurface xslt install directory, the relative\ndirectory \"xslt\" and the current working directory.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Work around some gtk oddity with gtk_combo_box_entries and empty text\n\nSetting the gtk_combo_box_entry test to th eempty string doesn't \"take\":\nthe old text remains.  Which does all kinds of funky things when you\nswitch between dives, and the location (or buddy or divemaster) entry\ncontains some random stale entry from another dive.\n\nThis works around it by using a string with a single space in it\ninstead, and then removing the space when reading.  Not pretty, and\ncertainly not correct, but it pinpoints the odd behavior.  I'm sure\nsomebody will figure out what the magic gtk incantation is for this.\n\nAlso remove the never-used flags for whether the entries have changed.\nThey were designed to be set by change callbacks, but we never bothered\nwith it, and just always read the value of the entries instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Exclude obviously bogus SAC values from statistics calculations Merge branch 'drag-n-drop-fix' of git://github.com/dirkhh/subsurface\n\n* 'drag-n-drop-fix' of git://github.com/dirkhh/subsurface:\n  Fix drag and drop error Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Fix typo that broke min SAC calculation\n  Surface interval is calculated from the END of previous dive Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Add Info & Stats page to the notebook\n  Even more places with pressure and volume conversions\n  Further cleanup of pressure and volume conversions\n  Use unit functions to get column headers, add unit function for pressure\n  More consistency improvements\n  Add new helper function to get temperature and unit Fix 'init_ui()' so that it can change argc/argv\n\nThat's what gtk_init() does with gtk-specific arguments.  IOW, if you do\nthings like\n\n   subsurface --g-fatal-warnings dives.xml\n\nto get a real abort on gtk warnings, gtk_init needs to be able to\nactually change argc/argv.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'macosx-app-bundle-1' of git://github.com/henrik242/subsurface\n\n* 'macosx-app-bundle-1' of git://github.com/henrik242/subsurface:\n  Use the new packaging directory for MacOSX specific files, and provide shell script workaround to make the svg icon reachable.\n  Ignore process serial number argument when run as native MacOSX app\n  Add basic MacOSX app bundle install target Merge branch 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface\n\n* 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface:\n  Fix Windows install destination\n  Get rid of the terminal window that is displayed under Windows\n  Add first cut of the mingw cross build spec file + nsi file\n  Get icons working correctly under Windows Fix up end conditions for dives\n\nWe used to have the dive plot have two \"filler\" entries at the beginning\nand the end, and indeed that is how they are allocated.  However, we fix\nup \"pi->nr\" later to be \"lastindex+1\", where \"lastindex\" is the index of\nthe time we surface.\n\nSo when we loop over the plot entries, we actually need to loop all the\nway to the end: use \"i < pi->nr\" instead of \"i < pi->nr-2\".\n\nWe still do have the two extra filler entries at the beginning, though.\nSo depending on the loop, we might want to start at entry 2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot fake profile for non-sample dives\n\nRight now it just plots something ridiculous, the code is really just\nmeant to be an example.  We migth be able to plot a traditional\nstaircase plot and make it look somewhat saner by taking mean depth into\naccount (if it exists).\n\nRight now it just plots a (skewed) rectangular dive profile using the\nmax depth and total time. Which is obviously insane.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix use of uninitialized variable if there are no samples\n\nWhen creating the plot_info, the 'entry' variable pointing to the last\nplot_info data was not initialized (because there was no data to fill\nin), and was then incorrectly used to fill in the last tank pressure.\n\nWe also used to look at 'dive->sample[0].cylinderindex' even if no\nsample[0] necessarily existed.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branches 'mingw-port-cleanup' and 'combobox-text-entry-fix' of git://github.com/dirkhh/subsurface\n\n* 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface:\n  Use Registry on Windows to store preferences\n\n* 'combobox-text-entry-fix' of git://github.com/dirkhh/subsurface:\n  Update the known locations / buddies / divemasters as user enters them Merge branch 'bugfixes' of git://github.com/dirkhh/subsurface\n\n* 'bugfixes' of git://github.com/dirkhh/subsurface:\n  Updated changes file\n  Create packaging directory and add spec and changes file\n  Makefile fixes Subsurface 1.1\n\nWe've added a fair amount of features since 1.0 (like multi-tank) and\nwe've made things a lot prettier and supports editing much more\ninformation.  So let's make a new release.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui' of git://github.com/dirkhh/subsurface\n\n* 'ui' of git://github.com/dirkhh/subsurface:\n  Disable sorting by dive number\n  Fix oversight in preference implementation\n  Make columns for temperature, cylinder, and nitrox optional\n  Show dive number in dive list\n  Improve time marker handling and add printing of some time labels Handle 'gas change' events correctly\n\nDirk wrote the multi-cylinder support assuming that the dive computer\nalways gives the selected cylinder index in the sample data - that's\nwhat his Uemis does, and it makes sense for any dive computer that\nsupports multiple pressure transmitters.\n\nHowever, the other case is a dive computer where the pressure samples\nare all from cylinder 0, and any other cylinder will have the starting\nand ending pressure set by hand.  And the gas change events show when\nthe cylinder change happened.\n\nSo this creates a \"turn gas change events into pressure sample fixups\"\nphase just before we actually analyze the pressures.  That way the\npressure analysis can alway sdo the right thing, regardless of how the\ndata was originally stores in the dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split the cylinder pressure analysis into a second loop\n\nFor the dive computers that give cylinder change events, we want to\nre-write the cylinder index and pressure information with the event\ninformation before we start analyzing the pressures.  So instead of\nfilling the plot info and analyzing in one loop, split it up into two\nphases.  We'll do the \"fix up cylinder pressure info based on events\" in\nbetween those phases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'plot-multitank' of git://github.com/dirkhh/subsurface\n\n* 'plot-multitank' of git://github.com/dirkhh/subsurface:\n  Plot tank pressures for multiple tanks\n  Change plot_info to use depth (instead of val) for depth value Enable inline completion/selection for the location/buddy/dm fields\n\nThis makes Tab completion work, and seems a whole lot more natural.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Keep the people/location lists sorted\n\nThis makes the combo box entry drop-down list be a whole lot more useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divemaster/buddy/location text entries be combo box entries\n\nThe text entries have completions, but if you want to see the full list\nof possibilities, I'm not seeing how to do that without turning the\nGtkEntry into a GtkComboBoxEntry.\n\nThe list of people/locations are not sorted, though, which makes the\nfull list less than readable.  Will have to do that too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add completions to the dive location, buddy and divemaster entries\n\nThis way you can just type the first few characters of a location you've\nbeen to before, and it will show you a list of possible completions.\nSame for buddies and divemasters (which take the completions from a list\nof people you've used before).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'activate' callback for the cylinder completion\n\nThis makes us fill in the size/pressure data for a cylinder even if we\njust type the name (rather than pick an entry from the list)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a completion for the cylinder type entry combo box\n\nThis allows us to start typing the cylinder description and we'll get a\nmatching list that we can select.  This is similar to selecting one from\nthe model, and works in addition to the explicit selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cylinder data to cylinder model as we record each dive\n\nThis way the cylinder model list will contain all the different\ncylinders that we have ever seen, rather than only containing the models\nthat we have *edited*.\n\nThat makes it much more practical to add new dives with the same\ncylinders that we've used before, because now those cylinders will show\nup as cylinder models even if we haven't looked and edited the old dives\nfirst.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix the reading of the cylinder start/end pressure from cylinder models\n\nThe cylinder model doesn't contain the start/end pressures, they just\ncontain the cylinder type information.  So trying to read the start and\nend pressure from the cylinder model change callback is totally bogus.\n\nWe need to set the start/end pressures from the cylinder info when we\ncreate the cylinder widget, and not touch them when the type changes.\nSo split up the \"set_cylinder_spinbuttons()\" function in two: one that\nsets the type information, and one that sets the start/end pressure.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'minor-fixes' of git://github.com/dirkhh/subsurface\n\n* 'minor-fixes' of git://github.com/dirkhh/subsurface:\n  Fix \"Keep window size for new notebook pages\" to not set minimum size\n  Make the first filename on the command line the default filename Repaint dive after equipment change only after updating the cylinder info\n\nRepainting the dive will end up touching the cylinder list store, so we\nshould finish setting the cylinder info before we repaint it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Repaint the dive after equipment changes\n\nThose changes may have changed cylinder sizes and beginning/end\npressures, so the dive profile and SAC rate may be different.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'multiple_selection' of git://github.com/dirkhh/subsurface Merge branch 'guifixes' of git://github.com/dirkhh/subsurface Add quick hack for \"no sample pressure but tank index changed\" case\n\nThis isn't right if you switch back to the same cylinder multiple times,\nbut for the first time it kind of works - just take the beginning\ncylinder pressure if we have one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up multi-cylinder code as per Dirk\n\nToo much cut-and-paste, as Dirk points out.  With multiple cylinders,\nwe're not necessarily going to start at time zero.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse the xml sample cylinder index properly\n\nWe would save it in the xml file, but then not actually read it back\nproperly.  Oops.  Not that we actually have any multi-tank dives yet, so\nit doesn't matter.  Yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start some rough multi-cylinder pressure data plot infrastructure\n\nIt doesn't actually do multiple cylinders correctly yet, but it should\nbe a nice framework for it.  And accidentally (not) it also ends up\ndrawing the final line for the end pressure of a single-cylinder dive\nthat has been fixed up by hand too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't overwrite the end pressure with sample data if one already exists\n\nIf we have en explicit end pressure in the dive information, we should\nnot change it just because we also have some samples.  The sample data\nmay not be complete (read: \"Linus wireless connection dropped during the\ndive again, and he fixed up the end pressure manually afterwards\").\n\nThe beginning pressure already works correctly, because it will only use\nthe sample data for the first sample if no pressure existed before.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add start/end pressure to cylinder edit dialog\n\nThis finally allows you to set the start/end pressures by hand.\n\nHOWEVER! Right now, if we have samples with pressures, those samples\nwill always end up overriding anything you set manually.  Which can be\nvery annoying if your wireless air integration fails halfway through.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'mac-fixes' of git://git.hohndel.org/subsurface\n\n* 'mac-fixes' of git://git.hohndel.org/subsurface:\n  Preference handling on Mac Remove suunto parsing hacks from parse-xml.c\n\nWe can just depend on Miika's xslt transform instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'multi-pane'\n\n* multi-pane:\n  Experimental hard-coded three-pane layout\n\nOk, so it's not perfect, but I've been using a version of this for the\nlast week or so by now, and every time I go back to the old layout I\njust cringe.\n\nSo the three-pane window approach requires much more display area, and\nprobably wouldn't work wonderfully on low-resolution devices (ie 720x480\nor even 1024x600).  So for anybody doing a cellphone port, you may need\nto play around with the interface.  But this should be usable even on a\nnetbook, although not as good as on a device with more pixels.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do proper rounding in interpolated pressure calculations\n\nWe do all the pressures in mbar, which has plenty of precision for\ninterpolated pressures - even when we then do our discrete integration\nover many samples.\n\nHowever, when we calculate those interpolated pressure points, we should\nmake sure that we round the result correctly, otherwise the consistent\nrounding errors (from truncating the FP value into our integer mbar\nvalues) will result in a final pressure that is noticeably off in ugly\nways (ie \"end pressure set by hand to 750 mbar, but shown as 748\").\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Revert \"Correctly plot the tank end pressure if it was set manually\"\n\nThis reverts commit abdee5b1b8a97c641bca9bc2ebac9555c3e2ea54.\n\nThere's no point in doing random hacks.  Instead, do the intermediate\npressure calculations with proper rounding instead of always truncating\nto mbar.  With the math done correctly we have enough precision that the\nend result of the pressure interpolation doesn't have the kind of errors\nthat caused Dirk to try to fix things up later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Fix error when gaschange event is one second before next sample Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Correctly plot the tank end pressure if it was set manually Experimental hard-coded three-pane layout\n\nI'm not happy with it, but it looks good and works better than the\nalternatives I've looked at so far.\n\nSo why not happy? It's not configurable, and gtk really doesn't do a\ngreat job with the case of notebook widgets that are shrunk to be\nsmaller than the contents (the cut-off gets ugly, and is outside the\nnotebook page!)\n\nBut committing as a way to keep track of this, and let Dirk use it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://git.hohndel.org/subsurface\n\n* 'sacplot' of git://git.hohndel.org/subsurface:\n  Make pressure plot shading by sac rate consistent\n  Improve tank pressure sac coloring\n  Be more consistent in our handling of rgb value tables\n  Remove redundant linear sample tank pressure data Add the cylinder list to the dive info edit dialog\n\nThis way, when you have a new dive that you just imported from your dive\ncomputer, you can just double-click on the dive and fill out all the\nrelevant information: location, notes, buddies and cylinder info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add dive number and date to the dive info edit dialog\n\nIt's pretty basic information, and might be hidden behind the dialog\nespecially on a small screen.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add an 'edit' menu item to the dive info text fields\n\nIt just pops up the dive info edit box.  This way you can be in the dive\ninfo tab, and not have to go to the dive list just to double-click on\nthe dive.\n\nThis thing still needs some polish, but it's now usable.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make double-clicking on the dive list bring up the dive editor\n\nNow that the dive info window is read-only, we need to edit the dives\nsome other way.  We bring up a dive info edit dialog when you\ndouble-click on the dive list entry for that dive.\n\nI do want to have an \"edit\" button or keyboard shortcut or something\ntoo, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make all the normal widgets uneditable and non-focusing\n\nWe always keep the focus on the dive list, so that the random gtk focus\nhandling doesn't suddenly randomly make us edit the combo boxes when the\ncursor up/down keys start changing them instead of the dive list.\n\nThis means that dive location, notes and buddy/divemaster aren't\neditable at all any more, but I'll fix that by making a separate dive\nedit popup window.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'sacplot' of git://github.com/dirkhh/subsurface\n\n* 'sacplot' of git://github.com/dirkhh/subsurface:\n  Color tank pressure plot based on relative sac Merge branch 'sacplot' of git://github.com/dirkhh/subsurface\n\n* 'sacplot' of git://github.com/dirkhh/subsurface:\n  Color pressure plot according to current SAC rate\n  Fix minor coding standard issues introduced by my last commit Remove redundant duplicate pressure samples\n\nAt least the Suunto pressure transmitter seems to be pretty\n\"quantisized\", and it will send identical samples for a while until the\npressure changes enough.  Then subsurface gives this silly flat line\nwith a sudden jump downwards, which *could* be you suddenly taking a\ndeep breath after holding it for a while, but almost certainly it's a\nsensor issue.\n\nSo just remove successive identical pressure readings.  They aren't\ninteresting, and subsurface will actually do a good job of interpolating\nit according to SAC rate instead.  And they just make the XML look\nworse.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dives \"latest-first\" by default\n\nYou can still order them by date by just setting the sort order on the\ndate column, but normally you'd be more interested in the most recent\ndives.\n\nI tried to just scroll down to the last ones automatically instead, but\ngtk makes that *really* hard to do.  If you do it in the natural place\nfor it, the scroll bar wll show up later and then cover up the last\nentry anyway.  So you'd have to do some crazy expose event thing or\nsomething.  Which may be the right thing to do eventually anyway, but\nnot worth the pain right now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show more of the dive location in the dive list\n\nRandomly picked up to 60 characters.  But maybe we should just get rid\nof the limit entirely.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'forlinus' of git://github.com/dirkhh/subsurface\n\n* 'forlinus' of git://github.com/dirkhh/subsurface:\n  Make sure SAC and OTU get recalculated after cylinder info was changed Fix the stupid gtk combo box text reset issue for real\n\nLubomir's solution to fill them with a newline doesn't work.  Well, it\nmay work on some versions of gtk, but on mine it just results in an ugly\nbox for the control character '000a' that tries to show the newline.\n\nSo this is a third approach: if we reset the text to empty, first set it\nto space (to clear it), and then set it to empty.  That seems to work on\nat least one version of gtk, and doesn't have the problem with the space\n*remaining* when you cut-and-paste something into the combo box.\n\nLet's see if it breaks anything else, but at worst it should be no worse\nthan the old \"set it to space\" approach - iow the combo box might\nremember the space, but at least not some random data from the previous\ndive that it happened to show.\n\nLovely gtk bugs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save cylinder O2/He content after the cylinder type description\n\nThis changes the save format xml to be a bit more readable: instead of\nputting the gasmix first, put the cylinder type (size, workpressure and\ndescription) first, then gasmix, then pressure details.\n\nIt makes no difference for machine parsing, but I think it's a lot more\nlogical for humans that actually look at the xml file.  And we really do\nwant to make the xml file readable by humans.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the sample-vs-cylinder pressure check more liberal\n\nThis makes it consider them to be identical if they are within half a\nbar of each other.  If you edit the pressures by hand and set them to\nthe same bar pressure as the samples, they may not be identical to the\nlast milli-bar, but clearly the manually entered cylinder pressure isn't\nsignificantly different from the sample data, so consider it redundant.\n\nWe do want manual overrides of cylinder pressures to take precedence\nover sample data (as Dirk so eloquently puts it, some dive computers\nreally don't have very reliable sample data), but at the same time the\nsample data is the one we are expecting to be fairly accurate.  The\nstarting and ending pressure overrides are for when there is no sample\ndata, or when the sample data is totally wrong for some reason.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove unused 'minpressure/endpressure' fields from plot info\n\n.. and fix the maxpressure to actually look at *all* the cylinders, so\nthat if you don't have sample data, but rely onmanually set cylinder\npressures, it now really is the max of all the cylinders.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'bugfixes' of git://github.com/dirkhh/subsurface\n\n* 'bugfixes' of git://github.com/dirkhh/subsurface:\n  Fix breakage caused by Linus' changes to tank pressure handling Merge branch 'testdata' of git://github.com/dirkhh/subsurface\n\n* 'testdata' of git://github.com/dirkhh/subsurface:\n  Improve temperature text plotting in profile display Merge branch 'testdata' of git://github.com/dirkhh/subsurface\n\n* 'testdata' of git://github.com/dirkhh/subsurface:\n  Correctly plot dives ending below the surface Add \"enable\" button for manual pressure setting\n\nThis grays out the pressure settings in the cylinder editing widget if\nthe pressure data has been taken from the samples.  You can still\nmanually override the data, but you now need to enable that manual\noverride explicitly.\n\nThis makes the semantics of editing start/end pressures of dives with\npressure sample data a bit more intuitive, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Keep the start/end spinbuttons as GtkWidget\n\nFor graying things out, we want a widget, not a spinbutton.  Although\nI'm sure we could just cast things back and forth.  But let's be\nconsistent with what we do, and only ever cast from GtkWidget to\nGtkSpinButton, and have the same logic as for the \"o2\" widget that also\nneeds to be explicitly enabled.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> equipment: clean up cylinder pressure spinbutton setup\n\nThis is just in case I end up doing the graying out of implicit pressure\ninformation: I wanted to clean things up a bit first.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the newly split pressures correctly in the equipment page too\n\nNOTE! When *editing* the cylinder data, the only thing shown is the\nnon-sample pressure.  So the cylinder editing widget will show zero for\nstart/end pressure for a dive that has pressure saples without any\nmanually set pressure data.\n\nThis is intentional, so that you can clearly see that this is not a set\nvalue.  But it may be that we should gray out the spinputton and have an\n\"edit value\" checkbox or something to make it really obvious.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up the statistics page use of pressure data\n\nThe statistics page calculates air use separately, and also needs to be\nfixed up for the split of the pressures into sample-vs-start/end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up air use calculations for new pressure handling\n\nMake sure that we calculate air use by using the proper start/end\npressures, with the manually set ones being used preferentially over any\npossible sample data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save cylinder start/end pressures unless set by hand\n\nKeep the sample pressure start/end data separate from the overall\ncylinder start/end data - and clean the overall cylinder start/end data\nif it matches the samples exactly to avoid the redundancy.\n\nThis breaks all the SAC calculations etc, which expect the cylinder\npressures to always be in the cylinder data.  I'll fix that up\nseparately.\n\nThe reason for this is that we really want to keep the manually entered\ndata separate: the pressure plotting doesn't need the confusion, and\nconsiders end-point data (with interpolation) very different from sample\ndata.  Also, we do not want to pollute the xml save-file with data that\nis computed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> If we don't have cylinder working pressure, we sill want to show the volume\n\n.. although in that case we can only ever show the volume in liters, and\ncannot do a conversion to cubic feet even if the user has set imperial\nunits.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the xslt style sheet finding search a set of possible paths\n\nThis allows us to install the xslt files in multiple places.  Right now\nthe path defaults to the subsurface xslt install directory, the relative\ndirectory \"xslt\" and the current working directory.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Work around some gtk oddity with gtk_combo_box_entries and empty text\n\nSetting the gtk_combo_box_entry test to th eempty string doesn't \"take\":\nthe old text remains.  Which does all kinds of funky things when you\nswitch between dives, and the location (or buddy or divemaster) entry\ncontains some random stale entry from another dive.\n\nThis works around it by using a string with a single space in it\ninstead, and then removing the space when reading.  Not pretty, and\ncertainly not correct, but it pinpoints the odd behavior.  I'm sure\nsomebody will figure out what the magic gtk incantation is for this.\n\nAlso remove the never-used flags for whether the entries have changed.\nThey were designed to be set by change callbacks, but we never bothered\nwith it, and just always read the value of the entries instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Exclude obviously bogus SAC values from statistics calculations Merge branch 'drag-n-drop-fix' of git://github.com/dirkhh/subsurface\n\n* 'drag-n-drop-fix' of git://github.com/dirkhh/subsurface:\n  Fix drag and drop error Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Fix typo that broke min SAC calculation\n  Surface interval is calculated from the END of previous dive Merge branch 'add-info-stats-page' of git://github.com/dirkhh/subsurface\n\n* 'add-info-stats-page' of git://github.com/dirkhh/subsurface:\n  Add Info & Stats page to the notebook\n  Even more places with pressure and volume conversions\n  Further cleanup of pressure and volume conversions\n  Use unit functions to get column headers, add unit function for pressure\n  More consistency improvements\n  Add new helper function to get temperature and unit Fix 'init_ui()' so that it can change argc/argv\n\nThat's what gtk_init() does with gtk-specific arguments.  IOW, if you do\nthings like\n\n   subsurface --g-fatal-warnings dives.xml\n\nto get a real abort on gtk warnings, gtk_init needs to be able to\nactually change argc/argv.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'macosx-app-bundle-1' of git://github.com/henrik242/subsurface\n\n* 'macosx-app-bundle-1' of git://github.com/henrik242/subsurface:\n  Use the new packaging directory for MacOSX specific files, and provide shell script workaround to make the svg icon reachable.\n  Ignore process serial number argument when run as native MacOSX app\n  Add basic MacOSX app bundle install target Merge branch 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface\n\n* 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface:\n  Fix Windows install destination\n  Get rid of the terminal window that is displayed under Windows\n  Add first cut of the mingw cross build spec file + nsi file\n  Get icons working correctly under Windows Fix up end conditions for dives\n\nWe used to have the dive plot have two \"filler\" entries at the beginning\nand the end, and indeed that is how they are allocated.  However, we fix\nup \"pi->nr\" later to be \"lastindex+1\", where \"lastindex\" is the index of\nthe time we surface.\n\nSo when we loop over the plot entries, we actually need to loop all the\nway to the end: use \"i < pi->nr\" instead of \"i < pi->nr-2\".\n\nWe still do have the two extra filler entries at the beginning, though.\nSo depending on the loop, we might want to start at entry 2.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot fake profile for non-sample dives\n\nRight now it just plots something ridiculous, the code is really just\nmeant to be an example.  We migth be able to plot a traditional\nstaircase plot and make it look somewhat saner by taking mean depth into\naccount (if it exists).\n\nRight now it just plots a (skewed) rectangular dive profile using the\nmax depth and total time. Which is obviously insane.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix use of uninitialized variable if there are no samples\n\nWhen creating the plot_info, the 'entry' variable pointing to the last\nplot_info data was not initialized (because there was no data to fill\nin), and was then incorrectly used to fill in the last tank pressure.\n\nWe also used to look at 'dive->sample[0].cylinderindex' even if no\nsample[0] necessarily existed.\n\nReported-by: Miika Turkia <miika.turkia@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branches 'mingw-port-cleanup' and 'combobox-text-entry-fix' of git://github.com/dirkhh/subsurface\n\n* 'mingw-port-cleanup' of git://github.com/dirkhh/subsurface:\n  Use Registry on Windows to store preferences\n\n* 'combobox-text-entry-fix' of git://github.com/dirkhh/subsurface:\n  Update the known locations / buddies / divemasters as user enters them Merge branch 'bugfixes' of git://github.com/dirkhh/subsurface\n\n* 'bugfixes' of git://github.com/dirkhh/subsurface:\n  Updated changes file\n  Create packaging directory and add spec and changes file\n  Makefile fixes Subsurface 1.1\n\nWe've added a fair amount of features since 1.0 (like multi-tank) and\nwe've made things a lot prettier and supports editing much more\ninformation.  So let's make a new release.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui' of git://github.com/dirkhh/subsurface\n\n* 'ui' of git://github.com/dirkhh/subsurface:\n  Disable sorting by dive number\n  Fix oversight in preference implementation\n  Make columns for temperature, cylinder, and nitrox optional\n  Show dive number in dive list\n  Improve time marker handling and add printing of some time labels Handle 'gas change' events correctly\n\nDirk wrote the multi-cylinder support assuming that the dive computer\nalways gives the selected cylinder index in the sample data - that's\nwhat his Uemis does, and it makes sense for any dive computer that\nsupports multiple pressure transmitters.\n\nHowever, the other case is a dive computer where the pressure samples\nare all from cylinder 0, and any other cylinder will have the starting\nand ending pressure set by hand.  And the gas change events show when\nthe cylinder change happened.\n\nSo this creates a \"turn gas change events into pressure sample fixups\"\nphase just before we actually analyze the pressures.  That way the\npressure analysis can alway sdo the right thing, regardless of how the\ndata was originally stores in the dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split the cylinder pressure analysis into a second loop\n\nFor the dive computers that give cylinder change events, we want to\nre-write the cylinder index and pressure information with the event\ninformation before we start analyzing the pressures.  So instead of\nfilling the plot info and analyzing in one loop, split it up into two\nphases.  We'll do the \"fix up cylinder pressure info based on events\" in\nbetween those phases.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'plot-multitank' of git://github.com/dirkhh/subsurface\n\n* 'plot-multitank' of git://github.com/dirkhh/subsurface:\n  Plot tank pressures for multiple tanks\n  Change plot_info to use depth (instead of val) for depth value Enable inline completion/selection for the location/buddy/dm fields\n\nThis makes Tab completion work, and seems a whole lot more natural.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Keep the people/location lists sorted\n\nThis makes the combo box entry drop-down list be a whole lot more useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divemaster/buddy/location text entries be combo box entries\n\nThe text entries have completions, but if you want to see the full list\nof possibilities, I'm not seeing how to do that without turning the\nGtkEntry into a GtkComboBoxEntry.\n\nThe list of people/locations are not sorted, though, which makes the\nfull list less than readable.  Will have to do that too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add completions to the dive location, buddy and divemaster entries\n\nThis way you can just type the first few characters of a location you've\nbeen to before, and it will show you a list of possible completions.\nSame for buddies and divemasters (which take the completions from a list\nof people you've used before).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'activate' callback for the cylinder completion\n\nThis makes us fill in the size/pressure data for a cylinder even if we\njust type the name (rather than pick an entry from the list)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a completion for the cylinder type entry combo box\n\nThis allows us to start typing the cylinder description and we'll get a\nmatching list that we can select.  This is similar to selecting one from\nthe model, and works in addition to the explicit selection.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cylinder data to cylinder model as we record each dive\n\nThis way the cylinder model list will contain all the different\ncylinders that we have ever seen, rather than only containing the models\nthat we have *edited*.\n\nThat makes it much more practical to add new dives with the same\ncylinders that we've used before, because now those cylinders will show\nup as cylinder models even if we haven't looked and edited the old dives\nfirst.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix the reading of the cylinder start/end pressure from cylinder models\n\nThe cylinder model doesn't contain the start/end pressures, they just\ncontain the cylinder type information.  So trying to read the start and\nend pressure from the cylinder model change callback is totally bogus.\n\nWe need to set the start/end pressures from the cylinder info when we\ncreate the cylinder widget, and not touch them when the type changes.\nSo split up the \"set_cylinder_spinbuttons()\" function in two: one that\nsets the type information, and one that sets the start/end pressure.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'minor-fixes' of git://github.com/dirkhh/subsurface\n\n* 'minor-fixes' of git://github.com/dirkhh/subsurface:\n  Fix \"Keep window size for new notebook pages\" to not set minimum size\n  Make the first filename on the command line the default filename Repaint dive after equipment change only after updating the cylinder info\n\nRepainting the dive will end up touching the cylinder list store, so we\nshould finish setting the cylinder info before we repaint it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Repaint the dive after equipment changes\n\nThose changes may have changed cylinder sizes and beginning/end\npressures, so the dive profile and SAC rate may be different.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'multiple_selection' of git://github.com/dirkhh/subsurface Merge branch 'guifixes' of git://github.com/dirkhh/subsurface Add quick hack for \"no sample pressure but tank index changed\" case\n\nThis isn't right if you switch back to the same cylinder multiple times,\nbut for the first time it kind of works - just take the beginning\ncylinder pressure if we have one.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up multi-cylinder code as per Dirk\n\nToo much cut-and-paste, as Dirk points out.  With multiple cylinders,\nwe're not necessarily going to start at time zero.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse the xml sample cylinder index properly\n\nWe would save it in the xml file, but then not actually read it back\nproperly.  Oops.  Not that we actually have any multi-tank dives yet, so\nit doesn't matter.  Yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start some rough multi-cylinder pressure data plot infrastructure\n\nIt doesn't actually do multiple cylinders correctly yet, but it should\nbe a nice framework for it.  And accidentally (not) it also ends up\ndrawing the final line for the end pressure of a single-cylinder dive\nthat has been fixed up by hand too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't overwrite the end pressure with sample data if one already exists\n\nIf we have en explicit end pressure in the dive information, we should\nnot change it just because we also have some samples.  The sample data\nmay not be complete (read: \"Linus wireless connection dropped during the\ndive again, and he fixed up the end pressure manually afterwards\").\n\nThe beginning pressure already works correctly, because it will only use\nthe sample data for the first sample if no pressure existed before.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add start/end pressure to cylinder edit dialog\n\nThis finally allows you to set the start/end pressures by hand.\n\nHOWEVER! Right now, if we have samples with pressures, those samples\nwill always end up overriding anything you set manually.  Which can be\nvery annoying if your wireless air integration fails halfway through.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't use dynamic linking for libdivecomputer\n\nCommit bd8948386d55 (\"Since we don't want configure, use gnumake to find\nlibdivecomputer\") was totally broken.  Sure, using GNU make features is\nfine.  But then hiding in that commit is the fact that it also changed\nit to use \"-ldivecomputer\" instead of just linking with the static\nlibdivecomputer archive.\n\nAnd that's just a really bad idea.  Dynamic linking is useful for things\nlike libc, where it allows sharing of the code pages across all the\nprograms using it.  For something like libdivecomputer it's just a *bad*\nidea, and doesn't even work.  The libdivecomputer interfaces aren't\nstable enough to make it a good idea even if it *did* work, and the\nlibdivecomputer \"make install\" phase doesn't do the proper ldconfig etc\nsetup anyway.\n\nStatic linking is just simpler and better.  It also means that the\nbinary will work even if you move it around to another machine - since\nlibdivecomputer isn't exactly a \"standard library\"..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't drop precision from floating point GP coordinates\n\nUsing '%f' limits the precision to 6 decimals, which may well be\nperfectly ok.  But at least in theory you *could* have higher precision,\nand gps units will report it, so don't mindlessly limit us to what %f\nshows.\n\nThis arbitrarily uses '%.12g' instead.  %g will drop excess zeroes at\nthe end, so it actually results in the same (or shorter) ascii\nrepresentation unless you have the extra precision.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> For a manual renumber, default to the existing first dive number\n\nIf renumbering a list of dives, default the start number to the existing\nfirst dive number.  That way, if you do need to renumber (overlapping\nimport or whatever), but your at least had your really old dives already\nnumbered, we start off with a sane default.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Automatically renumber new dives when they are \"obvious\".\n\nWhen importing (or reading xml from files) new dives, we now renumber\nthem based on preexisting dive data, *if* such re-numbering is obvious.\n\nNOTE! In order to be \"obvious\", there can be no overlap between old and\nnew dives: all the new dives have to come at the end.  That's what\nhappens with a normal libdivecomputer import, since we cut the import\nshort when we find a preexisting dive.\n\nBut if any of the new dives overlap the old dives in any way, or already\nhave been numbered separately, the automatic renumbering is not done,\nand you need to do a manual renumber.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move 'dive_list_update_dives()' call into 'report_dives()'\n\nAll the callers were always calling report_dives first, followed by\ndive_list_update_dives().  And there really was no reason to have the\ncallers call two separate functions for the \"I've added new dives\" case.\nSo just call dive_list_update_dives() directly from report_dives(), and\nremove it from the callers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'uemis-integration' of git://github.com/dirkhh/subsurface\n\n* 'uemis-integration' of git://github.com/dirkhh/subsurface:\n  Much nicer implementation of uemis sample parsing - and add events, too\n  Add working pressure to uemis tank data Merge branch 'uemis-integration' of git://github.com/dirkhh/subsurface\n\n* 'uemis-integration' of git://github.com/dirkhh/subsurface:\n  Remove the ability to 'Import' .SDA files\n  Integrate loading of uemis SDA files into the regular xml parsing\n  First steps towards integrating SDA files into the default XML loading Remove cylinder index from cylinder list model\n\nInstead of having to keep the index up-to-date as we edit entries\naround, just figure out the entry index from the model itself.  Gtk\nseems to make it unnecessarily hard, but what else is new?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cylinders editable with a double-click\n\nYou can still just select them and click the \"Edit\" button too, but now\nyou can double-click them (or select them and press \"enter\") for editing\ntoo.\n\nIt seems to be the natural interface.\n\nAlso, remove the index column (that was there for debugging), and add\ngrid lines.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Change calling convention of 'edit_cylinder_info'\n\nInstead of passing it the model and iterator (which requires that we\ncreate the new entry for an 'add' event even if we then cancel the\noperation), just make the caller do the final cylinder list update.\n\nThis way we can make 'add' work more sanely: if you cancel the add, we\nnow do not create an empty cylinder entry at the end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the cylinder 'delete' action actually delete the cylinder info\n\nIt used to just update the cylinder list widget data, not the actual\ndive information.\n\nIt still needs an \"accept or cancel\" dialog, I suspect.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> First cut at working cylinder editing dialog\n\nThis currently only does the same old things we used to do (so still no\nstart/end pressure or trimix support), but despite that this is already\nmore flexible than the old model:\n\n - we can now add new cylinders, rather than just edit the information of\n   the first two cylinders of the dive\n\n - because the cylinder editing is being done in a edit dialog, it is\n   now much more reasonable to use multiple lines and expand all the\n   things we can edit.\n\nBut to actually make this fully fledged, we'll need to add all the other\ninfo to the cylinder edit dialog, and probably add a confirmation dialog\nfor the \"delete cylinder\" case too.\n\nOh, and right now deleting a cylinder doesn't mark the dive info changed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start hooking up the cylinder editing widget\n\nWe don't actually fill the widget info correctly yet, nor do we take the\nactual size from the changes, but this starts to hook things up.\n\nSoon.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the ability to add new cylinders\n\nThis is totally useless since you cannot actually *edit* the resulting\nnew dive yet, but we'll get there.  And this already conceptually shows\na capability that we didn't use to have with the old interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cylinder list: set edit/delete button sensitivity\n\nThey are only sensitive when there is a cylinder selected.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start re-organizing the cylinder entry in equipment.c\n\nThis leaves the actual editing code unconnected, so now you can only see\nthe cylinder information, not actually edit it.  However, with the big\nre-organization I really do want to have this as a half-way point where\nI have created the new cylinder tree-view.\n\nI now need to connect the \"add/edit\" buttons to dialogs that then use\nthe editing widgets - so I've left that widget code around, because I'll\nbe able to reuse a lot of it.  Not all, but the cylinder type model code\nin particular will be re-used pretty much as-is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up generic code to generate a gtk tree view column\n\nWe used to do this just for the dive list, but the new cylinder view\nwill want to do a lot of the same boilerplate gtk stuff, so make it a\nbit more generic and move it to gtk-gui.c.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> We forgot to pick up the 'value' field of a dive event\n\nJust missed that one entirely in the xml parser for some reason.\nProbably because the fields don't have much semantic meaning, so I\ndidn't even realize that I had missed one of the random integer values\nin an event.\n\nOn my suunto, the 'value' field seems to contain things like the new\nOxygen percentage of a gas change event etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui' of git://github.com/dirkhh/subsurface\n\n* 'ui' of git://github.com/dirkhh/subsurface:\n  The notebook pages can only be dropped back into the main notebook\n  Linus would like to be less on the bleeding edge of Gtk+\n  Use the correct signal to avoid Gtk-CRITICAL error message\n  Clean up the drag and drop code and allow ripping off the Dive Profile Add note on dive computers using the same import engine\n\nLots of dive computers are just variations on a theme, or sometimes even\njust rebadged copies of each others with different manufacturer and\nmodel names.  The import dialog may not mention your exact dive computer\nby name, but that doesn't necessarily mean that you cannot import data\nfrom it.\n\nMake that clearer in the README, and list the rough list of dive\ncomputers supported by libdivecomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add drag-n-drop support to be able to re-integrate the dive list\n\nThis is somewhat hacky, and there is clearly something I still don't\nunderstand about gtk selections and drag-n-drop.  Dropping it back\nworks, but I get a nasty error when I do it:\n\n   (subsurface:8512): Gtk-CRITICAL **: IA__gtk_selection_data_set: assertion `length <= 0' failed\n\neven though I actually never set any selection at all directly.  So\nthere must be some internal gtk rule that I am violating, but I can't\nsee what it is.\n\nI probably shouldn't commit it with a known ugly wart like that, but I\nreally have no clue.  Maybe somebody else can figure out what is up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't mark the divelist window transient\n\nThat also makes it always stay in front of the other window, which is\njust annoying.  I only did it because I wanted to make sure it dies when\nthe main window does, but since we just kill the main loop when closing\neither window, that just isn't an issue.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'otu-tracking-v2' of git://github.com/dirkhh/subsurface\n\n* 'otu-tracking-v2' of git://github.com/dirkhh/subsurface:\n  Store options in gconf\n  Add preference option to chose if SAC and/or OTU should be in divelist\n\nFix up trivial conflicts in gtk-gui.c (cleanup in gtk dialog wrt\ngtk_dialog_get_content_area() having introduced a new 'vbox' widget) Merge branch 'otu-tracking-v2' of git://github.com/dirkhh/subsurface\n\n* 'otu-tracking-v2' of git://github.com/dirkhh/subsurface:\n  Make OTU column invisible by default\n  Add OTU to divelist\n  Calculate OTUs for every dive\n\nFix up trivial conflicts in dive.h (due to dive event handling also\nadding a field to the dive structure) Make the dive list start as a plain notebook page\n\nI've been wondering how to make 'subsurface' work better on a small\nscreen (I used to travel with a crappy netbook - I may have upgraded my\nlaptop since, but it is still a design goal of mine to make sure it all\nworks fine in that kind of environment).\n\nAnd ever since the dive list was made much wider and moved below the\nnotebook, it's annoyed me how much room it all takes if I want to have\nboth a reasonable plot window and several dives visible at the same\ntime.\n\nThe solution seems to be to just make the dive list be a notebook page.\nThat makes the default layout very dense.\n\nAt the same time, when you have the pixels, it's horrible, because you\nwould want to see the dive list and move between dives while at the same\ntime also seeing the dive profile change.  But that is solvable by\nsimply making the dive list notebook page be detachable, so if you have\na nice big screen, just detach the dive list page and now you have\nindependent windows for the dive list and the dive info.\n\nNOTE! I don't have any way to re-attach the dang thing.  I think I'd\nneed to learn about drag-and-drop targets etc.  So once you've detached\nthe dive list, it stays detached.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update Mares IconHd parsing to current libdivecomputer interface\n\nThe libdivecomputer interfaces are pure crap.  There are no generic\n\"open the dive computer\" or \"create a parser for the dive computer\"\ninterfaces, instead each dive computer you support has its own open and\nparser generator interface.\n\nAnd they change.  Happily fairly seldom, but they change.  And two days\nago, Jef changed the interface for the Mares Icon HD computer in order\nto support the newer HD Net Ready variant.\n\nI've asked Jef to make a sane interface for \"open the dive computer\" and\n\"just create the parser\" for libdivecomputer, but he claims that he\ncannot just track the device model details internally.  Which is\nobviously a completely bogus claim, since the way *we* track the model\ndetails is to just feed it back from the silly event.\n\nlibdivecomputer should just do that internally and not bother us with\nits crazy internal model numbers.  But whatever.\n\nIn the meantime, work around this braindamage, and hope that\nlibdivecomputer comes to its senses some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Stop libdivecomputer import when we start seeing old dives\n\nI don't know about other dive computers, but the Suunto Vyper Air is\nslow as hell to import all the dives from.  And libdivecomputer seems to\nbe importing dives \"most recent first\", so this just makes it stop\nimporting dives when it finds a dive that we've already seen.\n\nCaveat: libdivecomputer has this fancy notion of \"dive fingerprints\",\nand claims that's the way to do things.  That seems to be overly\ncomplicated, and not worth the bother.\n\nIf you worry about the import finishing early due to already having some\ndives with the same date in your dive list, just import starting from an\nempty state, and thus get a pure \"dive computer only\" state with no\nearly out.  Then you can just load the old dives afterwards, and depend\non subsurface merging any duplicates.\n\nBut for normal operation, when you just want to import a couple of new\ndives from your dive computer, the \"exit import early when you see a\nduplicate\" is the right thing to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't use dynamic linking for libdivecomputer\n\nCommit bd8948386d55 (\"Since we don't want configure, use gnumake to find\nlibdivecomputer\") was totally broken.  Sure, using GNU make features is\nfine.  But then hiding in that commit is the fact that it also changed\nit to use \"-ldivecomputer\" instead of just linking with the static\nlibdivecomputer archive.\n\nAnd that's just a really bad idea.  Dynamic linking is useful for things\nlike libc, where it allows sharing of the code pages across all the\nprograms using it.  For something like libdivecomputer it's just a *bad*\nidea, and doesn't even work.  The libdivecomputer interfaces aren't\nstable enough to make it a good idea even if it *did* work, and the\nlibdivecomputer \"make install\" phase doesn't do the proper ldconfig etc\nsetup anyway.\n\nStatic linking is just simpler and better.  It also means that the\nbinary will work even if you move it around to another machine - since\nlibdivecomputer isn't exactly a \"standard library\"..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't drop precision from floating point GP coordinates\n\nUsing '%f' limits the precision to 6 decimals, which may well be\nperfectly ok.  But at least in theory you *could* have higher precision,\nand gps units will report it, so don't mindlessly limit us to what %f\nshows.\n\nThis arbitrarily uses '%.12g' instead.  %g will drop excess zeroes at\nthe end, so it actually results in the same (or shorter) ascii\nrepresentation unless you have the extra precision.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> For a manual renumber, default to the existing first dive number\n\nIf renumbering a list of dives, default the start number to the existing\nfirst dive number.  That way, if you do need to renumber (overlapping\nimport or whatever), but your at least had your really old dives already\nnumbered, we start off with a sane default.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Automatically renumber new dives when they are \"obvious\".\n\nWhen importing (or reading xml from files) new dives, we now renumber\nthem based on preexisting dive data, *if* such re-numbering is obvious.\n\nNOTE! In order to be \"obvious\", there can be no overlap between old and\nnew dives: all the new dives have to come at the end.  That's what\nhappens with a normal libdivecomputer import, since we cut the import\nshort when we find a preexisting dive.\n\nBut if any of the new dives overlap the old dives in any way, or already\nhave been numbered separately, the automatic renumbering is not done,\nand you need to do a manual renumber.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move 'dive_list_update_dives()' call into 'report_dives()'\n\nAll the callers were always calling report_dives first, followed by\ndive_list_update_dives().  And there really was no reason to have the\ncallers call two separate functions for the \"I've added new dives\" case.\nSo just call dive_list_update_dives() directly from report_dives(), and\nremove it from the callers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'uemis-integration' of git://github.com/dirkhh/subsurface\n\n* 'uemis-integration' of git://github.com/dirkhh/subsurface:\n  Much nicer implementation of uemis sample parsing - and add events, too\n  Add working pressure to uemis tank data Merge branch 'uemis-integration' of git://github.com/dirkhh/subsurface\n\n* 'uemis-integration' of git://github.com/dirkhh/subsurface:\n  Remove the ability to 'Import' .SDA files\n  Integrate loading of uemis SDA files into the regular xml parsing\n  First steps towards integrating SDA files into the default XML loading Remove cylinder index from cylinder list model\n\nInstead of having to keep the index up-to-date as we edit entries\naround, just figure out the entry index from the model itself.  Gtk\nseems to make it unnecessarily hard, but what else is new?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make cylinders editable with a double-click\n\nYou can still just select them and click the \"Edit\" button too, but now\nyou can double-click them (or select them and press \"enter\") for editing\ntoo.\n\nIt seems to be the natural interface.\n\nAlso, remove the index column (that was there for debugging), and add\ngrid lines.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Change calling convention of 'edit_cylinder_info'\n\nInstead of passing it the model and iterator (which requires that we\ncreate the new entry for an 'add' event even if we then cancel the\noperation), just make the caller do the final cylinder list update.\n\nThis way we can make 'add' work more sanely: if you cancel the add, we\nnow do not create an empty cylinder entry at the end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the cylinder 'delete' action actually delete the cylinder info\n\nIt used to just update the cylinder list widget data, not the actual\ndive information.\n\nIt still needs an \"accept or cancel\" dialog, I suspect.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> First cut at working cylinder editing dialog\n\nThis currently only does the same old things we used to do (so still no\nstart/end pressure or trimix support), but despite that this is already\nmore flexible than the old model:\n\n - we can now add new cylinders, rather than just edit the information of\n   the first two cylinders of the dive\n\n - because the cylinder editing is being done in a edit dialog, it is\n   now much more reasonable to use multiple lines and expand all the\n   things we can edit.\n\nBut to actually make this fully fledged, we'll need to add all the other\ninfo to the cylinder edit dialog, and probably add a confirmation dialog\nfor the \"delete cylinder\" case too.\n\nOh, and right now deleting a cylinder doesn't mark the dive info changed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start hooking up the cylinder editing widget\n\nWe don't actually fill the widget info correctly yet, nor do we take the\nactual size from the changes, but this starts to hook things up.\n\nSoon.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the ability to add new cylinders\n\nThis is totally useless since you cannot actually *edit* the resulting\nnew dive yet, but we'll get there.  And this already conceptually shows\na capability that we didn't use to have with the old interface.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> cylinder list: set edit/delete button sensitivity\n\nThey are only sensitive when there is a cylinder selected.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start re-organizing the cylinder entry in equipment.c\n\nThis leaves the actual editing code unconnected, so now you can only see\nthe cylinder information, not actually edit it.  However, with the big\nre-organization I really do want to have this as a half-way point where\nI have created the new cylinder tree-view.\n\nI now need to connect the \"add/edit\" buttons to dialogs that then use\nthe editing widgets - so I've left that widget code around, because I'll\nbe able to reuse a lot of it.  Not all, but the cylinder type model code\nin particular will be re-used pretty much as-is.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up generic code to generate a gtk tree view column\n\nWe used to do this just for the dive list, but the new cylinder view\nwill want to do a lot of the same boilerplate gtk stuff, so make it a\nbit more generic and move it to gtk-gui.c.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> We forgot to pick up the 'value' field of a dive event\n\nJust missed that one entirely in the xml parser for some reason.\nProbably because the fields don't have much semantic meaning, so I\ndidn't even realize that I had missed one of the random integer values\nin an event.\n\nOn my suunto, the 'value' field seems to contain things like the new\nOxygen percentage of a gas change event etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui' of git://github.com/dirkhh/subsurface\n\n* 'ui' of git://github.com/dirkhh/subsurface:\n  The notebook pages can only be dropped back into the main notebook\n  Linus would like to be less on the bleeding edge of Gtk+\n  Use the correct signal to avoid Gtk-CRITICAL error message\n  Clean up the drag and drop code and allow ripping off the Dive Profile Add note on dive computers using the same import engine\n\nLots of dive computers are just variations on a theme, or sometimes even\njust rebadged copies of each others with different manufacturer and\nmodel names.  The import dialog may not mention your exact dive computer\nby name, but that doesn't necessarily mean that you cannot import data\nfrom it.\n\nMake that clearer in the README, and list the rough list of dive\ncomputers supported by libdivecomputer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add drag-n-drop support to be able to re-integrate the dive list\n\nThis is somewhat hacky, and there is clearly something I still don't\nunderstand about gtk selections and drag-n-drop.  Dropping it back\nworks, but I get a nasty error when I do it:\n\n   (subsurface:8512): Gtk-CRITICAL **: IA__gtk_selection_data_set: assertion `length <= 0' failed\n\neven though I actually never set any selection at all directly.  So\nthere must be some internal gtk rule that I am violating, but I can't\nsee what it is.\n\nI probably shouldn't commit it with a known ugly wart like that, but I\nreally have no clue.  Maybe somebody else can figure out what is up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't mark the divelist window transient\n\nThat also makes it always stay in front of the other window, which is\njust annoying.  I only did it because I wanted to make sure it dies when\nthe main window does, but since we just kill the main loop when closing\neither window, that just isn't an issue.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'otu-tracking-v2' of git://github.com/dirkhh/subsurface\n\n* 'otu-tracking-v2' of git://github.com/dirkhh/subsurface:\n  Store options in gconf\n  Add preference option to chose if SAC and/or OTU should be in divelist\n\nFix up trivial conflicts in gtk-gui.c (cleanup in gtk dialog wrt\ngtk_dialog_get_content_area() having introduced a new 'vbox' widget) Merge branch 'otu-tracking-v2' of git://github.com/dirkhh/subsurface\n\n* 'otu-tracking-v2' of git://github.com/dirkhh/subsurface:\n  Make OTU column invisible by default\n  Add OTU to divelist\n  Calculate OTUs for every dive\n\nFix up trivial conflicts in dive.h (due to dive event handling also\nadding a field to the dive structure) Make the dive list start as a plain notebook page\n\nI've been wondering how to make 'subsurface' work better on a small\nscreen (I used to travel with a crappy netbook - I may have upgraded my\nlaptop since, but it is still a design goal of mine to make sure it all\nworks fine in that kind of environment).\n\nAnd ever since the dive list was made much wider and moved below the\nnotebook, it's annoyed me how much room it all takes if I want to have\nboth a reasonable plot window and several dives visible at the same\ntime.\n\nThe solution seems to be to just make the dive list be a notebook page.\nThat makes the default layout very dense.\n\nAt the same time, when you have the pixels, it's horrible, because you\nwould want to see the dive list and move between dives while at the same\ntime also seeing the dive profile change.  But that is solvable by\nsimply making the dive list notebook page be detachable, so if you have\na nice big screen, just detach the dive list page and now you have\nindependent windows for the dive list and the dive info.\n\nNOTE! I don't have any way to re-attach the dang thing.  I think I'd\nneed to learn about drag-and-drop targets etc.  So once you've detached\nthe dive list, it stays detached.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update Mares IconHd parsing to current libdivecomputer interface\n\nThe libdivecomputer interfaces are pure crap.  There are no generic\n\"open the dive computer\" or \"create a parser for the dive computer\"\ninterfaces, instead each dive computer you support has its own open and\nparser generator interface.\n\nAnd they change.  Happily fairly seldom, but they change.  And two days\nago, Jef changed the interface for the Mares Icon HD computer in order\nto support the newer HD Net Ready variant.\n\nI've asked Jef to make a sane interface for \"open the dive computer\" and\n\"just create the parser\" for libdivecomputer, but he claims that he\ncannot just track the device model details internally.  Which is\nobviously a completely bogus claim, since the way *we* track the model\ndetails is to just feed it back from the silly event.\n\nlibdivecomputer should just do that internally and not bother us with\nits crazy internal model numbers.  But whatever.\n\nIn the meantime, work around this braindamage, and hope that\nlibdivecomputer comes to its senses some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Stop libdivecomputer import when we start seeing old dives\n\nI don't know about other dive computers, but the Suunto Vyper Air is\nslow as hell to import all the dives from.  And libdivecomputer seems to\nbe importing dives \"most recent first\", so this just makes it stop\nimporting dives when it finds a dive that we've already seen.\n\nCaveat: libdivecomputer has this fancy notion of \"dive fingerprints\",\nand claims that's the way to do things.  That seems to be overly\ncomplicated, and not worth the bother.\n\nIf you worry about the import finishing early due to already having some\ndives with the same date in your dive list, just import starting from an\nempty state, and thus get a pure \"dive computer only\" state with no\nearly out.  Then you can just load the old dives afterwards, and depend\non subsurface merging any duplicates.\n\nBut for normal operation, when you just want to import a couple of new\ndives from your dive computer, the \"exit import early when you see a\nduplicate\" is the right thing to do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a copy of the GPL v2 to the project\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the version to the Makefile\n\nNot quite the same format as for the kernel, but I want to do the normal\n\"edit the makefile before making a release\" model that I'm used to.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update README to reflect the fact that /dev/ttyUSB0 is no longer hardcoded\n\nYay.  It's not like we're all done, but the hardcoded dive computer\nlocation was one of those \"I don't want to release 1.0 with this\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a GtkEntry to allow editing of the device name\n\nOk, so some file chooser widget with a popup dialog would have been more\nprofessional, but I'm lazy.  Plus I suspect the popup would look\nhorrible when populated with /dev entries, and I don't think there is\nany sane filter function.\n\nSo this works, and means that you don't *have* to recompile the whole\nprogram just because you have your dive computer on something else than\na USB serial line.\n\nI suspect I should save the default name as a config variable too.\nMaybe a setting in the preferences dialog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a \"Dive Computer\" frame around the dive computer choice in import\n\nI'll add a widget to allow the user to select the device too, so let's\nname things to make them more obvious.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a xml file filter to the file open dialog\n\nMy home directory is a mess.  Don't show all the crap, just the stuff\nthat might be relevant.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add an 'About' dialog\n\nIt's really just about the logo, but whatever.  Dirk tells me I need one\nof these in order to call it 1.0.  And I'm not going to fall into the\ntrap of thinking that 1.0 needs to be something polished, it just needs\nto be working well enough..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'gtk_dialog_get_content_area()' instead of accessing dialog directly\n\nI'm reading gtk docs, and trying to clean things up a bit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show events on the dive profile\n\nThis is *really* ugly.  We really should just create some kind of widget\nthat when moused over will show the event.  Or something.  Rather than\nputting text on top of other text: the events - when they happen - are\nusually bunched together (PO2 warnings, max depth, fast ascent leading\nto mandatory safety stop, you name it).\n\nBut at least this way we see that the data is there, even if we see it\nin ugly ways.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cheesy \"install\" target\n\nIt just puts the subsurface binary in $(HOME)/bin.\n\n.. and then the binary won't find the icon file, so this is really not\nenough of an install to get it really working, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Drop surface events when reading from an XML file too\n\nRemember those useless surface events that we ignore when we import a\ndive from a dive computer? Yeah, they exist in the libdivelog xml files\ntoo.  So ignore them when we see them there too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge latitude and longitude data properly\n\nWhen merging two identical dives and one of them has lat/long data, pick\nit up correctly for the merged dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge dive events correctly too\n\nIt's very similar to the sample merging.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start handling dive events\n\nParse them, save them, take them from libdivecomputer.\n\nThis doesn't merge them or show them in the profile yet, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly merge dive buddies and divemaster information\n\nWhen we merge dives, we didn't merge these fields properly. Do it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve libdivecomputer event printout\n\nIgnore surface events - they are meaningless anyway and just add noise.\n\nPrint out other events properly, including correct time offset etc.\n\nWe still don't actually *save* the events, but now it might be worth\ndoign so.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up event handling from libdivecomputer\n\nThis just moves the event handling out into its own helper function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix progress bar during libdivecomputer imports\n\nAs reported by Mauro Dreissig, the progress bar doesn't work and causes\na SIGSEGV due to a missing allocation.  The code broke when Dirk\nseparated out the GUI from the core code, and I hadn't tried\ndivecomputer downloads since.\n\nReported-by: Mauro Dreissig <mukadr@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the README a bit\n\nUpdate for the current library situation, and notes about\nlibdivecomputer installation location.\n\nAnd remove the \"we don't interface directly with libdivecomputer\", since\nthat is obviously not true any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'alignment-change' of git://github.com/dirkhh/subsurface\n\n* 'alignment-change' of git://github.com/dirkhh/subsurface:\n  Minor change to the alignment of the divelist columns Clean up library handling\n\n.. and pick up libusb-1.0 automatically if it's installed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Put the location last in the dive list\n\nThe whole auto-expansion of an entry in the middle thing really doesn't\nwork very well in gtk. Give up on it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Put the default focus on the dive list at startup\n\nThis is some crazy stuff.  Apparently the only sane way to do this is by\nhooking into the \"realize\" callback for the dive list widget.\n\nWhatever. Dirk did the googling to figure this all out.\n\nSuggested-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up some minor whitespace issues\n\nDirk clearly isn't as anal as I am about pretty whitespace.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Select the first dive after filling the dive list\n\nWe should always strive to have a dive selected, so pick the first one\n(that was how the dive list logic worked anyway, it just wasn't truly\nselected at the tree-view level, so it wasn't *visibly* the selected\ndive).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive list searching act on the location\n\nIt used to be \"index 0\" which originally was the date string, but not\nonly has that changed (it's now just the dive index), it's kind of\npointless to search for a date string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't do individual 'gtk_widget_show()' calls\n\nThis is left-overs from an earlier age when we did this.  But we just do\nthe \"show_all\" at the end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> In divelist maxdepth column, only show depth unit\n\nShow \"m\" or \"ft\" instead of \"max/m\" vs \"max/ft\".  The column really\ndoesn't want to be that wide.  The column header is already the widest\npart of it even with this short name (due to the sort order arrow\nthing).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> In summary printout, show divemaster if there was no buddy\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'quit-handling' of git://github.com/dirkhh/subsurface\n\n* 'quit-handling' of git://github.com/dirkhh/subsurface:\n  Use the last (or only) filename on command line as default for saving\n  Show the \"save changes\" dialog before the main window is destroyed\n  Check for changes at regular 'quit' events as well\n  Catch changes to the info of the current dive when quitting\n  Tracking changes to tanks is trivial\n  Simplistic first attempt to get changes saved when quitting subsurface Small printing tweaks\n\nIt's getting to the point where I'm happy with this.  This just makes\nthe spacing between the location and the notes a bit bigger to visually\nseparate them more, and adds units (\"min\") to the dive duration (and\nremoves the seconds, that really didn't make any sense at an overview\nlevel).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add helper function for doing depth unit calculations\n\n.. and use it for printing too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix dive location width problem\n\nFor really long dive locations, we now limit the width to the same size\nas the date and time, and force it to a single line - with an ellipsis\nif it ends up being too big.\n\nAlso, since we no longer use any markup anywhere, we migth as well show\nthe dive buddy information too, as we don't need no stinking quoting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do the pango text layout in multiple chunks\n\nThis way we can avoid the need for quoting, since we can just use text\nrendering instead of markup for the free-form fields.  And we will want\nto make the pango layout width different for the date and location,\nsince we want to fit the depth/duration to the right of them.\n\nI still haven't set the different width for the date/location, but this\nat least is going in the rigth direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Sue me: I'm not a fan of Serif\n\nThe default cairo font seems to be sans, but the default pango font is\nserif.  Maybe it has something to do with my system font settings, but I\ndoubt it: my desktop font settings are all sans-serif.  So I think pango\nis just showing bad taste.\n\nAnyway, this just hardcodes the font to \"Sans\".  Maybe somebody wants to\nmake this all part of preferences some day, or pick it from their\ndesktop font preferences.  In the meantime, just fix the pango brain-damage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix array underrun when calculating velocity\n\nThat code is messy. And it was buggy. Noticed by valgrind.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up printing some more\n\nThis makes things slightly prettier and adds back the depth and duration\ndetails to the printout.\n\nStill a few known problems: font choice, and the depth/duration thing\ncan end up overlapping with a long location name.  But it looks pretty\ngood on the whole.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix 'struct plot_info' memory leak\n\nThe plot_info was never freed, so every time you'd plot something, we'd\nleak memory.\n\nI'm running valgrind to see if there's anything bad going on.  So far it\nall looks fairly benign.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Printing: use pango markup for text generation\n\nThis gets us text wrapping etc.  I think I have some serious memory leak\nsomewhere, though, because if I print out all my dives it eventually\nends up with broken dives and doesn't complete.  But I am going to\ncommit this as a \"it kind of works\" point.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add completely BS dive text printing\n\nThe layout is crap, the handling of long lines in notes (or location) is\nwrong, the dive number handling is wrong.\n\nThe thing is just a toy.\n\nBut it's a toy that kind of works, and gives a much better idea of what\na real dive log printout might look like.  With the right kind of dive\nnotes, it looks fine.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Try printing six dives per page\n\nOk, so this may be too much, but I'm just playing around with layout.\nIt could be a runtime choice too, of course.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up printing some more\n\nUse the actual degree sign for temperatures (°F and °C), and make sure\neverything uses the proper \"set_source_rgb[a]()\" wrappers to set the\ncolors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Print out only simplified depth profile\n\nNone of the colors, nothing like that.  Just a gray fill and a plain\nblack depth line.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up and simplify depth plot\n\nDirk wrote this before we have the 'plot_info' structure with the\ncleaned-up dive info.  No need to maintain that separate array of depths\nand seconds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start fleshing out the dive printing a bit more\n\nFour dives per page sounds good.  Maybe even six? But dangit, the\ndefault font choice for cairo printing sucks.  And I need to learn about\npango for actually printing the dive info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org Don't show the smoothed dive profile or the min/max info\n\nIt was good for debugging, it's not something we really want to show people.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix divelist sorting\n\nThat was stupid.  The divelist column generation cleanup (commit\nd3feb78df527: \"Make helper function for creating TreeView columns in the\ndive list\") had a but too much copy-paste going on, and didn't always\nhave the right column indexes..  t still *looked* right, but sorting\ndidn't work at all.\n\nReported-by: Chris Lewis <chrislewis915@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix preferences dialog\n\nDirk took some old code when he did the merge of the newly split gui\ncode. Fix it up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divelist font configurable\n\nInstead of the hardcoding to \"Sans 8\", allow people to set it in the\npreferences.\n\nAlso, make the unit choice be a frame in the preferences dialog instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://github.com/sirowain/subsurface\n\n* git://github.com/sirowain/subsurface:\n  Fix Segmentation fault when trying to print an empty plot.\n  Provide an icon for subsurface.\n  Added a comment about libusb dependency in Makefile. Merge branch 'for-linus' of git://github.com/dirkhh/subsurface\n\n* 'for-linus' of git://github.com/dirkhh/subsurface:\n  Attempt to get the location column to resize in a sensible way\n  Minor tweaks to column headers\n\n[ Fixed up minor semantic merge conflict due to the change to make\n  'dive_list' internal to divelist.c ] Make 'struct DiveList' entirely internal to divelist.c\n\nPassing it around is just annoying, and we only ever have one.  Let's\nnot burden all the users with the silly thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add \"Apply\"/\"Cancel\" buttons to dive equipment page\n\nIt's too damn easy to make mistakes and not even notice them (odd gtk\nwidget selection and keyboard input), or just start editing a cylinder\nthing and realize it was wrong.\n\nSo instead of always saving the equipment information implicitly, add\nexplicit \"Apply\" and \"Cancel\" buttons that save the information (or\nre-load it from the dive data structure)\n\nSo now you need to press an extra button for your changes to *really*\ntake effect.  It can be a bit annoying, but it's better than the silent\naccidental equipment change that could happen before.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make a separate \"Log\" menu\n\nInstead o fhaving everything in the \"File\" menu, make a separate menu\nfor things that are very much specific about divelogs, rather than\n\"generic\" things like open/save/import.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Reinstate the main window title\n\nIt got removed by some of my overly aggressive cleanup in commit\nfefcbf125e89 (\"Remove dive info frame\") because the dive info frame\ninitialization also initialized the main window title..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Switch the dive list and dive profile panes around\n\nIt looks better this way, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Hacky hard-coded font for dive list entries\n\nThis really is too wrong for words, but I do think the dive list may\nlook better with a smaller font.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make helper function for creating TreeView columns in the dive list\n\nLet's not repeat the boiler-plate code more than necessary.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cylinder description to dive list\n\nAnd I *really* would want to make the dive list be a ComboBox or\nsomething like that, rather than a ListView.  I need to really\nunderstand those things, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn the rest of the duplicate string fields to use render functions\n\nSo instead of having a depth field (in mm) for sorting, and the text\nfield that contains the same thing in text, we now have all the fields\nwe use in \"native\" format, and we just render them as text dynamically.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use renderer function for divelist depth field too\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a renderer function on the date field\n\nInstead of creatign an extra column containing the date text, use a\nrenderer function to create the text dynamically.\n\nJust the date right now, but we'll do them all this way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops, fix typo. EAN, not EAD\n\nTypo turned EAN (Enriched Air Nitrox) to EAD.  Which does mean something\ntoo, just to confuse people - but while it's still nitrox-related, it's\nentirely the wrong thing (Equivalent Air Depth).  I don't think anybody\nwould ever care to see *that*. With computers, why would you care?\n\nAnyway, Dirk noticed it, and suggested I just use O2% instead.  It's not\nlike EAN is all that readable either.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the divelist when dive info changes\n\nThis flushes the dive changes to the dive list, the way the old dive\ninfo frame would update as you update dive fields.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add air usage calculations to dive list\n\nHey, now you can sort your dives by how good your SAC is.  Which sounds\nmore useful than it probably actually is.  But maybe you can see\npatterns in what makes your SAC suck..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add location to divelist too\n\nSure, it's visible elsewhere, but this way you can search and sort for\nit, and see several entries at once.  So again, having it visible in the\ndive list is a good thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up divelist generation some more\n\n.. and make the date string much more readable, now that we aren't\nactually size-constrained any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start filling in temperature and nitrox data in dive list\n\nStill more to go, but it's slowly fleshing out..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add temp/nitrox/sac entries to divelist\n\nThis doesn't really fill them, it just adds them to the possible\nentries.  I'll get to it later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the pane split be vertical rather than horizontal\n\nOk, this makes that dive list look empty and ugly, but as mentioned, we\nreally should start filling it with all the useful information that we\ncan sort by, like temperature and air use.\n\nAnd even stuff that might not make sense to sort by (would you want to\nsort by cylinder size or name? Or by nitrox percentage) could still be\n*shown* in the list fairly naturally.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove dive info frame\n\nIt has always been problematic, and I've been moving things in and out\nof it.\n\nAnd it just isn't a very powerful widget.  You can't *do* anything with\nit.  The information it shows you may be useful, but the core stuff\nalready shows up in the dive list.\n\nAnd the dive list is actually a much superior widget over that static\ndive info frame.  The information that shows up in the dive list can be\nsorted by column, for example.\n\nSo when we show temperatures or SAC numbers in the dive info frame,\nthat's actually a very bad place to show them: we would be much better\noff showing it in the dive list, and then we could sort by SAC or by\ntemperature.\n\nIn other words: just remove the thing.  Instead, plan to extend the dive\nlist to contain all the information.  That will probably mean that we\nneed to change the current pane widget to be a vertical pane, rather\nthan a horizontal one, but what's wrong with that?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divelist column naming clearer\n\nCurrently we use random hard-coded integers, and it's not always clear\nwhat is going on.  Make it much more explicit with an enumeration of the\ndifferent divelist columns.\n\nAnd change the column order to make it more logical, and make sure we\nactually catch all uses while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Dirk can't count to ten\n\nThat's ok, Dirk. I've got your back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"6 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm/memblock.c: reversed logic in memblock_discard()\n  fork: fix incorrect fput of ->exe_file causing use-after-free\n  mm/madvise.c: fix freeing of locked page with MADV_FREE\n  dax: fix deadlock due to misaligned PMD faults\n  mm, shmem: fix handling /sys/kernel/mm/transparent_hugepage/shmem_enabled\n  PM/hibernate: touch NMI watchdog when creating snapshot Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull Paolo Bonzini:\n \"Bugfixes for x86, PPC and s390\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: PPC: Book3S: Fix race and leak in kvm_vm_ioctl_create_spapr_tce()\n  KVM, pkeys: do not use PKRU value in vcpu->arch.guest_fpu.state\n  KVM: x86: simplify handling of PKRU\n  KVM: x86: block guest protection keys unless the host has them enabled\n  KVM: PPC: Book3S HV: Add missing barriers to XIVE code and document them\n  KVM: PPC: Book3S HV: Workaround POWER9 DD1.0 bug causing IPB bit loss\n  KVM: PPC: Book3S HV: Use msgsync with hypervisor doorbells on POWER9\n  KVM: s390: sthyi: fix specification exception detection\n  KVM: s390: sthyi: fix sthyi inline assembly Merge tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost\n\nPull virtio fixes from Michael Tsirkin:\n \"Fixes two obvious bugs in virtio pci\"\n\n* tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:\n  virtio_pci: fix cpu affinity support\n  virtio_blk: fix incorrect message when disk is resized Merge tag 'powerpc-4.13-8' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fix from Michael Ellerman:\n \"Just one fix, to add a barrier in the switch_mm() code to make sure\n  the mm cpumask update is ordered vs the MMU starting to load\n  translations. As far as we know no one's actually hit the bug, but\n  that's just luck.\n\n  Thanks to Benjamin Herrenschmidt, Nicholas Piggin\"\n\n* tag 'powerpc-4.13-8' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/mm: Ensure cpumask update is ordered Merge tag 'nfsd-4.13-2' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd fixes from Bruce Fields:\n \"Two nfsd bugfixes, neither 4.13 regressions, but both potentially\n  serious\"\n\n* tag 'nfsd-4.13-2' of git://linux-nfs.org/~bfields/linux:\n  net: sunrpc: svcsock: fix NULL-pointer exception\n  nfsd: Limit end of page list when decoding NFSv4 WRITE Merge tag 'cifs-fixes-for-4.13-rc6-and-stable' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Some bug fixes for stable for cifs\"\n\n* tag 'cifs-fixes-for-4.13-rc6-and-stable' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: return ENAMETOOLONG for overlong names in cifs_open()/cifs_lookup()\n  cifs: Fix df output for users with quota limits Merge tag 'for-linus-20170825' of git://git.infradead.org/linux-mtd\n\nPull MTD fixes from Brian Norris:\n \"Two fixes - one for a 4.13 regression, and the other for an older one:\n\n   - Atmel NAND: since we started utilizing ONFI timings, we found that\n     we were being too restrict at rejecting them, partly due to\n     discrepancies in ONFI 4.0 and earlier versions. Relax the\n     restriction to keep these platforms booting. This is a 4.13-rc1\n     regression.\n\n   - nandsim: repeated probe/removal may not work after a failed init,\n     because we didn't free up our debugfs files properly on the failure\n     path. This has been around since 3.8, but it's nice to get this\n     fixed now in a nice easy patch that can target -stable, since\n     there's already refactoring work (that also fixes the issue)\n     targeted for the next merge window\"\n\n* tag 'for-linus-20170825' of git://git.infradead.org/linux-mtd:\n  mtd: nand: atmel: Relax tADL_min constraint\n  mtd: nandsim: remove debugfs entries in error path Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A small batch of fixes that should be included for the 4.13 release.\n  This contains:\n\n   - Revert of the 4k loop blocksize support. Even with a recent batch\n     of 4 fixes, we're still not really happy with it. Rather than be\n     stuck with an API issue, let's revert it and get it right for 4.14.\n\n   - Trivial patch from Bart, adding a few flags to the blk-mq debugfs\n     exports that were added in this release, but not to the debugfs\n     parts.\n\n   - Regression fix for bsg, fixing a potential kernel panic. From\n     Benjamin.\n\n   - Tweak for the blk throttling, improving how we account discards.\n     From Shaohua\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  blk-mq-debugfs: Add names for recently added flags\n  bsg-lib: fix kernel panic resulting from missing allocation of reply-buffer\n  Revert \"loop: support 4k physical blocksize\"\n  blk-throttle: cap discard request size Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"I2C has some bugfixes for you: mainly Jarkko fixed up a few things in\n  the designware driver regarding the new slave mode. But Ulf also fixed\n  a long-standing and now agreed suspend problem. Plus, some simple\n  stuff which nonetheless needs fixing\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: designware: Fix runtime PM for I2C slave mode\n  i2c: designware: Remove needless pm_runtime_put_noidle() call\n  i2c: aspeed: fixed potential null pointer dereference\n  i2c: simtec: use release_mem_region instead of release_resource\n  i2c: core: Make comment about I2C table requirement to reflect the code\n  i2c: designware: Fix standard mode speed when configuring the slave mode\n  i2c: designware: Fix oops from i2c_dw_irq_handler_slave\n  i2c: designware: Fix system suspend Merge tag 'mmc-v4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fix from Ulf Hansson:\n \"MMC core: don't return error code R1_OUT_OF_RANGE for open-ending mode\"\n\n* tag 'mmc-v4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: block: prevent propagating R1_OUT_OF_RANGE for open-ending mode Merge tag 'sound-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"We're keeping in a good shape, this batch contains just a few small\n  fixes (a regression fix for ASoC rt5677 codec, NULL dereference and\n  error-path fixes in firewire, and a corner-case ioctl error fix for\n  user TLV), as well as usual quirks for USB-audio and HD-audio\"\n\n* tag 'sound-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ASoC: rt5677: Reintroduce I2C device IDs\n  ALSA: hda - Add stereo mic quirk for Lenovo G50-70 (17aa:3978)\n  ALSA: core: Fix unexpected error at replacing user TLV\n  ALSA: usb-audio: Add delay quirk for H650e/Jabra 550a USB headsets\n  ALSA: firewire-motu: destroy stream data surely at failure of card initialization\n  ALSA: firewire: fix NULL pointer dereference when releasing uninitialized data of iso-resource Merge tag 'dmaengine-fix-4.13-rc7' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine fix from Vinod Koul:\n \"A single fix for tegra210-adma driver to check of_irq_get() error\"\n\n* tag 'dmaengine-fix-4.13-rc7' of git://git.infradead.org/users/vkoul/slave-dma:\n  dmaengine: tegra210-adma: fix of_irq_get() error check Merge tag 'drm-fixes-for-v4.13-rc7' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Fixes for rc7, nothing too crazy, some core, i915, and sunxi fixes,\n  Intel CI has been responsible for some of these fixes being required\"\n\n* tag 'drm-fixes-for-v4.13-rc7' of git://people.freedesktop.org/~airlied/linux:\n  drm/i915/gvt: Fix the kernel null pointer error\n  drm: Release driver tracking before making the object available again\n  drm/i915: Clear lost context-switch interrupts across reset\n  drm/i915/bxt: use NULL for GPIO connection ID\n  drm/i915/cnl: Fix LSPCON support.\n  drm/i915/vbt: ignore extraneous child devices for a port\n  drm/i915: Initialize 'data' in intel_dsi_dcs_backlight.c\n  drm/atomic: If the atomic check fails, return its value first\n  drm/atomic: Handle -EDEADLK with out-fences correctly\n  drm: Fix framebuffer leak\n  drm/imx: ipuv3-plane: fix YUV framebuffer scanout on the base plane\n  gpu: ipu-v3: add DRM dependency\n  drm/rockchip: Fix suspend crash when drm is not bound\n  drm/sun4i: Implement drm_driver lastclose to restore fbdev console Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull more rdma fixes from Doug Ledford:\n \"Well, I thought we were going to be done for this -rc cycle. I should\n  have known better than to say so though.\n\n  We have four additional items that trickled in.\n\n  One was a simple mistake on my part. I took a patch into my for-next\n  thinking that the issue was less severe than it was. I was then\n  notified that it needed to be in my -rc area instead.\n\n  The other three were just found late in testing.\n\n  Summary:\n\n   - One core fix accidentally applied first to for-next and then cherry\n     picked back because it needed to be in the -rc cycles instead\n\n   - Another core fix\n\n   - Two mlx5 fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:\n  IB/mlx5: Always return success for RoCE modify port\n  IB/mlx5: Fix Raw Packet QP event handler assignment\n  IB/core: Avoid accessing non-allocated memory when inferring port type\n  RDMA/uverbs: Initialize cq_context appropriately Merge tag 'acpi-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fixes from Rafael Wysocki:\n \"These fix two recent regressions (in ACPICA and in the ACPI EC driver)\n  and one bug in code introduced during the 4.12 cycle (ACPI device\n  properties library routine).\n\n  Specifics:\n\n   - Fix a regression in the ACPI EC driver causing a kernel to crash\n     during initialization on some systems due to a code ordering issue\n     exposed by a recent change (Lv Zheng).\n\n   - Fix a recent regression in ACPICA due to a change of the behavior\n     of a library function in a way that is not backwards compatible\n     with some existing callers of it (Rafael Wysocki).\n\n   - Fix a coding mistake in a library function related to the handling\n     of ACPI device properties introduced during the 4.12 cycle (Sakari\n     Ailus)\"\n\n* tag 'acpi-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: device property: Fix node lookup in acpi_graph_get_child_prop_value()\n  ACPICA: Fix acpi_evaluate_object_typed()\n  ACPI: EC: Fix regression related to wrong ECDT initialization order Merge tag 'kbuild-fixes-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild fixes from Masahiro Yamada:\n\n - fix linker script regression caused by dead code elimination support\n\n - fix typos and outdated comments\n\n - specify kselftest-clean as a PHONY target\n\n - fix \"make dtbs_install\" when $(srctree) includes shell special\n   characters like '~'\n\n - Move -fshort-wchar to the global option list because defining it\n   partially emits warnings\n\n* tag 'kbuild-fixes-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: update comments of Makefile.asm-generic\n  kbuild: Do not use hyphen in exported variable name\n  Makefile: add kselftest-clean to PHONY target list\n  Kbuild: use -fshort-wchar globally\n  fixdep: trivial: typo fix and correction\n  kbuild: trivial cleanups on the comments\n  kbuild: linker script do not match C names unless LD_DEAD_CODE_DATA_ELIMINATION is configured Merge branch 'for-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fix from David Sterba:\n \"We have one more fixup that stems from the blk_status_t conversion\n  that did not quite cover everything.\n\n  The normal cases were not affected because the code is 0, but any\n  error and retries could mix up new and old values\"\n\n* 'for-4.13-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  Btrfs: fix blk_status_t/errno confusion Merge tag 'trace-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"Various bug fixes:\n\n   - Two small memory leaks in error paths.\n\n   - A missed return error code on an error path.\n\n   - A fix to check the tracing ring buffer CPU when it doesn't exist\n     (caused by setting maxcpus on the command line that is less than\n     the actual number of CPUs, and then onlining them manually).\n\n   - A fix to have the reset of boot tracers called by lateinit_sync()\n     instead of just lateinit(). As some of the tracers register via\n     lateinit(), and if the clear happens before the tracer is\n     registered, it will never start even though it was told to via the\n     kernel command line\"\n\n* tag 'trace-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix freeing of filter in create_filter() when set_str is false\n  tracing: Fix kmemleak in tracing_map_array_free()\n  ftrace: Check for null ret_stack on profile function graph entry function\n  ring-buffer: Have ring_buffer_alloc_read_page() return error on offline CPU\n  tracing: Missing error code in tracer_alloc_buffers()\n  tracing: Call clear_boot_tracer() at lateinit_sync Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Arnd Bergmann:\n \"A small number of bugfixes, again nothing serious.\n\n   - Alexander Dahl found multiple bugs in the Atmel memory interface\n     driver\n\n   - A randconfig build fix for at91 was incomplete, the second attempt\n     fixes the remaining corner case\n\n   - One fix for the TI Keystone queue handler\n\n   - The Odroid XU4 HDMI port (added in 4.13) needs a small DT fix\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: dts: exynos: add needs-hpd for Odroid-XU3/4\n  ARM: at91: don't select CONFIG_ARM_CPU_SUSPEND for old platforms\n  soc: ti: knav: Add a NULL pointer check for kdev in knav_pool_create\n  memory: atmel-ebi: Fix smc cycle xlate converter\n  memory: atmel-ebi: Allow t_DF timings of zero ns\n  memory: atmel-ebi: Fix smc timing return value evaluation Revert \"pty: fix the cached path of the pty slave file descriptor in the master\"\n\nThis reverts commit c8c03f1858331e85d397bacccd34ef409aae993c.\n\nIt turns out that while fixing the ptmx file descriptor to have the\ncorrect 'struct path' to the associated slave pty is a really good\nthing, it breaks some user space tools for a very annoying reason.\n\nThe problem is that /dev/ptmx and its associated slave pty (/dev/pts/X)\nare on different mounts.  That was what caused us to have the wrong path\nin the first place (we would mix up the vfsmount of the 'ptmx' node,\nwith the dentry of the pty slave node), but it also means that now while\nwe use the right vfsmount, having the pty master open also keeps the pts\nmount busy.\n\nAnd it turn sout that that makes 'pbuilder' very unhappy, as noted by\nStefan Lippers-Hollmann:\n\n \"This patch introduces a regression for me when using pbuilder\n  0.228.7[2] (a helper to build Debian packages in a chroot and to\n  create and update its chroots) when trying to umount /dev/ptmx (inside\n  the chroot) on Debian/ unstable (full log and pbuilder configuration\n  file[3] attached).\n\n  [...]\n  Setting up build-essential (12.3) ...\n  Processing triggers for libc-bin (2.24-15) ...\n  I: unmounting dev/ptmx filesystem\n  W: Could not unmount dev/ptmx: umount: /var/cache/pbuilder/build/1340/dev/ptmx: target is busy\n          (In some cases useful info about processes that\n           use the device is found by lsof(8) or fuser(1).)\"\n\napparently pbuilder tries to unmount the /dev/pts filesystem while still\nholding at least one master node open, which is arguably not very nice,\nbut we don't break user space even when fixing other bugs.\n\nSo this commit has to be reverted.\n\nI'll try to figure out a way to avoid caching the path to the slave pty\nin the master pty.  The only thing that actually wants that slave pty\npath is the \"TIOCGPTPEER\" ioctl, and I think we could just recreate the\npath at that time.\n\nReported-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>\nCc: Eric W Biederman <ebiederm@xmission.com>\nCc: Christian Brauner <christian.brauner@canonical.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Will Deacon:\n \"Late arm64 fixes.\n\n  They fix very early boot failures with KASLR where the early mapping\n  of the kernel is incorrect, so the failure mode looks like a hang with\n  no output. There's also a signal-handling fix when a uaccess routine\n  faults with a fatal signal pending, which could be used to create\n  unkillable user tasks using userfaultfd and finally a state leak fix\n  for the floating pointer registers across a call to exec().\n\n  We're still seeing some random issues crop up (inode memory corruption\n  and spinlock recursion) but we've not managed to reproduce things\n  reliably enough to debug or bisect them yet.\n\n  Summary:\n\n   - Fix very early boot failures with KASLR enabled\n\n   - Fix fatal signal handling on userspace access from kernel\n\n   - Fix leakage of floating point register state across exec()\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: kaslr: Adjust the offset to avoid Image across alignment boundary\n  arm64: kaslr: ignore modulo offset when validating virtual displacement\n  arm64: mm: abort uaccess retries upon fatal signal\n  arm64: fpsimd: Prevent registers leaking across exec Merge tag 'gpio-v4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fixes from Linus Walleij:\n \"Here are the (hopefully) last GPIO fixes for v4.13:\n\n   - an important core fix to reject invalid GPIOs *before* trying to\n     obtain a GPIO descriptor for it.\n\n   - a driver fix for the mvebu driver IRQ handling\"\n\n* tag 'gpio-v4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: mvebu: Fix cause computation in irq handler\n  gpio: reject invalid gpio before getting gpio_desc Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Six minor and error leg fixes, plus one major change: the reversion of\n  scsi-mq as the default.\n\n  We're doing the latter temporarily (with a backport to stable) to give\n  us time to fix all the issues that turned up with this default before\n  trying again\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: cxgb4i: call neigh_event_send() to update MAC address\n  Revert \"scsi: default to scsi-mq\"\n  scsi: sd_zbc: Write unlock zone from sd_uninit_cmnd()\n  scsi: aacraid: Fix out of bounds in aac_get_name_resp\n  scsi: csiostor: fail probe if fw does not support FCoE\n  scsi: megaraid_sas: fix error handle in megasas_probe_one Merge tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 fixes from Ted Ts'o:\n \"Fix a clang build regression and an potential xattr corruption bug\"\n\n* tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4:\n  ext4: add missing xattr hash update\n  ext4: fix clang build regression Merge tag 'mfd-fixes-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull MFD fix from Lee Jones:\n \"Revert duplicate commit in da9062-core\"\n\n* tag 'mfd-fixes-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd:\n  Revert \"mfd: da9061: Fix to remove BBAT_CONT register from chip model\" Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n \"Just a couple small fixes, two of which have to do with gcc-7:\n\n   1) Don't clobber kernel fixed registers in __multi4 libgcc helper.\n\n   2) Fix a new uninitialized variable warning on sparc32 with gcc-7,\n      from Thomas Petazzoni.\n\n   3) Adjust pmd_t initializer on sparc32 to make gcc happy.\n\n   4) If ATU isn't available, don't bark in the logs. From Tushar Dave\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc: kernel/pcic: silence gcc 7.x warning in pcibios_fixup_bus()\n  sparc64: remove unnecessary log message\n  sparc64: Don't clibber fixed registers in __multi4.\n  mm: add pmd_t initializer __pmd() to work around a GCC bug. Merge tag 'arc-4.13-rc7-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc\n\nPull ARC fixes from Vineet Gupta:\n\n - PAE40 related updates\n\n - SLC errata for region ops\n\n - intc line masking by default\n\n* tag 'arc-4.13-rc7-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:\n  arc: Mask individual IRQ lines during core INTC init\n  ARCv2: PAE40: set MSB even if !CONFIG_ARC_HAS_PAE40 but PAE exists in SoC\n  ARCv2: PAE40: Explicitly set MSB counterpart of SLC region ops addresses\n  ARC: dma: implement dma_unmap_page and sg variant\n  ARCv2: SLC: Make sure busy bit is set properly for region ops\n  ARC: [plat-sim] Include this platform unconditionally\n  ARC: [plat-axs10x]: prepare dts files for enabling PAE40 on axs103\n  ARC: defconfig: Cleanup from old Kconfig options Merge tag 'rtc-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux\n\nPull RTC fix from Alexandre Belloni:\n \"Fix regmap configuration for ds1307\"\n\n* tag 'rtc-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux:\n  rtc: ds1307: fix regmap config Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix IGMP handling wrt VRF, from David Ahern.\n\n 2) Fix timer access to freed object in dccp, from Eric Dumazet.\n\n 3) Use kmalloc_array() in ptr_ring to avoid overflow cases which are\n    triggerable by userspace. Also from Eric Dumazet.\n\n 4) Fix infinite loop in unmapping cleanup of nfp driver, from Colin Ian\n    King.\n\n 5) Correct datagram peek handling of empty SKBs, from Matthew Dawson.\n\n 6) Fix use after free in TIPC, from Eric Dumazet.\n\n 7) When replacing a route in ipv6 we need to reset the round robin\n    pointer, from Wei Wang.\n\n 8) Fix bug in pci_find_pcie_root_port() which was unearthed by the\n    relaxed ordering changes, from Thierry Redding. I made sure to get\n    an explicit ACK from Bjorn this time around :-)\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (27 commits)\n  ipv6: repair fib6 tree in failure case\n  net_sched: fix order of queue length updates in qdisc_replace()\n  tools lib bpf: improve warning\n  switchdev: documentation: minor typo fixes\n  bpf, doc: also add s390x as arch to sysctl description\n  net: sched: fix NULL pointer dereference when action calls some targets\n  rxrpc: Fix oops when discarding a preallocated service call\n  irda: do not leak initialized list.dev to userspace\n  net/mlx4_core: Enable 4K UAR if SRIOV module parameter is not enabled\n  PCI: Allow PCI express root ports to find themselves\n  tcp: when rearming RTO, if RTO time is in past then fire RTO ASAP\n  net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set\n  ipv6: reset fn->rr_ptr when replacing route\n  sctp: fully initialize the IPv6 address in sctp_v6_to_addr()\n  tipc: fix use-after-free\n  tun: handle register_netdevice() failures properly\n  datagram: When peeking datagrams with offset < 0 don't skip empty skbs\n  bpf, doc: improve sysctl knob description\n  netxen: fix incorrect loop counter decrement\n  nfp: fix infinite loop on umapping cleanup\n  ... Linux 4.13-rc6 Sanitize 'move_pages()' permission checks\n\nThe 'move_paghes()' system call was introduced long long ago with the\nsame permission checks as for sending a signal (except using\nCAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).\n\nThat turns out to not be a great choice - while the system call really\nonly moves physical page allocations around (and you need other\ncapabilities to do a lot of it), you can check the return value to map\nout some the virtual address choices and defeat ASLR of a binary that\nstill shares your uid.\n\nSo change the access checks to the more common 'ptrace_may_access()'\nmodel instead.\n\nThis tightens the access checks for the uid, and also effectively\nchanges the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely that\nanybody really _uses_ this legacy system call any more (we hav ebetter\nNUMA placement models these days), so I expect nobody to notice.\n\nFamous last words.\n\nReported-by: Otto Ebeling <otto.ebeling@iki.fi>\nAcked-by: Eric W. Biederman <ebiederm@xmission.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"Another pile of small fixes and updates for x86:\n\n   - Plug a hole in the SMAP implementation which misses to clear AC on\n     NMI entry\n\n   - Fix the norandmaps/ADDR_NO_RANDOMIZE logic so the command line\n     parameter works correctly again\n\n   - Use the proper accessor in the startup64 code for next_early_pgt to\n     prevent accessing of invalid addresses and faulting in the early\n     boot code.\n\n   - Prevent CPU hotplug lock recursion in the MTRR code\n\n   - Unbreak CPU0 hotplugging\n\n   - Rename overly long CPUID bits which got introduced in this cycle\n\n   - Two commits which mark data 'const' and restrict the scope of data\n     and functions to file scope by making them 'static'\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: Constify attribute_group structures\n  x86/boot/64/clang: Use fixup_pointer() to access 'next_early_pgt'\n  x86/elf: Remove the unnecessary ADDR_NO_RANDOMIZE checks\n  x86: Fix norandmaps/ADDR_NO_RANDOMIZE\n  x86/mtrr: Prevent CPU hotplug lock recursion\n  x86: Mark various structures and functions as 'static'\n  x86/cpufeature, kvm/svm: Rename (shorten) the new \"virtualized VMSAVE/VMLOAD\" CPUID flag\n  x86/smpboot: Unbreak CPU0 hotplug\n  x86/asm/64: Clear AC on NMI entries Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"A few small fixes for timer drivers:\n\n   - Prevent infinite recursion in the arm architected timer driver with\n     ftrace\n\n   - Propagate error codes to the caller in case of failure in EM STI\n     driver\n\n   - Adjust a bogus loop iteration in the arm architected timer driver\n\n   - Add a missing Kconfig dependency to the pistachio clocksource to\n     prevent build failures\n\n   - Correctly check for IS_ERR() instead of NULL in the shared timer-of\n     code\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource/drivers/arm_arch_timer: Avoid infinite recursion when ftrace is enabled\n  clocksource/drivers/Kconfig: Fix CLKSRC_PISTACHIO dependencies\n  clocksource/drivers/timer-of: Checking for IS_ERR() instead of NULL\n  clocksource/drivers/em_sti: Fix error return codes in em_sti_probe()\n  clocksource/drivers/arm_arch_timer: Fix mem frame loop initialization Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n \"Two fixes for the perf subsystem:\n\n   - Fix an inconsistency of RDPMC mm struct tagging across exec() which\n     causes RDPMC to fault.\n\n   - Correct the timestamp mechanics across IOC_DISABLE/ENABLE which\n     causes incorrect timestamps and total time calculations\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/core: Fix time on IOC_ENABLE\n  perf/x86: Fix RDPMC vs. mm_struct tracking Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"A pile of smallish changes all over the place:\n\n   - Add a missing ISB in the GIC V1 driver\n\n   - Remove an ACPI version check in the GIC V3 ITS driver\n\n   - Add the missing irq_pm_shutdown function for BRCMSTB-L2 to avoid\n     spurious wakeups\n\n   - Remove the artifical limitation of ITS instances to the number of\n     NUMA nodes which prevents utilizing the ITS hardware correctly\n\n   - Prevent a infinite parsing loop in the GIC-V3 ITS/MSI code\n\n   - Honour the force affinity argument in the GIC-V3 driver which is\n     required to make perf work correctly\n\n   - Correctly report allocation failures in GIC-V2/V3 to avoid using\n     half allocated and initialized interrupts.\n\n   - Fixup checks against nr_cpu_ids in the generic IPI code\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq/ipi: Fixup checks against nr_cpu_ids\n  genirq: Restore trigger settings in irq_modify_status()\n  MAINTAINERS: Remove Jason Cooper's irqchip git tree\n  irqchip/gic-v3-its-platform-msi: Fix msi-parent parsing loop\n  irqchip/gic-v3-its: Allow GIC ITS number more than MAX_NUMNODES\n  irqchip: brcmstb-l2: Define an irq_pm_shutdown function\n  irqchip/gic: Ensure we have an ISB between ack and ->handle_irq\n  irqchip/gic-v3-its: Remove ACPICA version check for ACPI NUMA\n  irqchip/gic-v3: Honor forced affinity setting\n  irqchip/gic-v3: Report failures in gic_irq_domain_alloc\n  irqchip/gic-v2: Report failures in gic_irq_domain_alloc\n  irqchip/atmel-aic: Remove root argument from ->fixup() prototype\n  irqchip/atmel-aic: Fix unbalanced refcount in aic_common_rtc_irq_fixup()\n  irqchip/atmel-aic: Fix unbalanced of_node_put() in aic_common_irq_fixup() Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull watchdog fix from Thomas Gleixner:\n \"A fix for the hardlockup watchdog to prevent false positives with\n  extreme Turbo-Modes which make the perf/NMI watchdog fire faster than\n  the hrtimer which is used to verify.\n\n  Slightly larger than the minimal fix, which just would increase the\n  hrtimer frequency, but comes with extra overhead of more watchdog\n  timer interrupts and thread wakeups for all users.\n\n  With this change we restrict the overhead to the extreme Turbo-Mode\n  systems\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  kernel/watchdog: Prevent false positives with turbo modes Remove gperf usage from toolchain\n\nIt turns out that gperf-3.1 changed types in the generated code in ways\nthat aren't even trivially detectable without having to generate a test-file.\n\nIt's just not worth using tools and libraries from clowns that don't\nunderstand or care about compatibility.  So get rid of gperf.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"14 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm: revert x86_64 and arm64 ELF_ET_DYN_BASE base changes\n  mm/vmalloc.c: don't unconditonally use __GFP_HIGHMEM\n  mm/mempolicy: fix use after free when calling get_mempolicy\n  mm/cma_debug.c: fix stack corruption due to sprintf usage\n  signal: don't remove SIGNAL_UNKILLABLE for traced tasks.\n  mm, oom: fix potential data corruption when oom_reaper races with writer\n  mm: fix double mmap_sem unlock on MMF_UNSTABLE enforced SIGBUS\n  slub: fix per memcg cache leak on css offline\n  mm: discard memblock data later\n  test_kmod: fix description for -s -and -c parameters\n  kmod: fix wait on recursive loop\n  wait: add wait_event_killable_timeout()\n  kernel/watchdog: fix Kconfig constraints for perf hardlockup watchdog\n  mm: memcontrol: fix NULL pointer crash in test_clear_page_writeback() Merge tag 'xfs-4.13-fixes-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n \"A handful more bug fixes for you today.\n\n  Changes since last time:\n\n   - Don't leak resources when mount fails\n\n   - Don't accidentally clobber variables when looking for free inodes\"\n\n* tag 'xfs-4.13-fixes-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: don't leak quotacheck dquots when cow recovery\n  xfs: clear MS_ACTIVE after finishing log recovery\n  iomap: fix integer truncation issues in the zeroing and dirtying helpers\n  xfs: fix inobt inode allocation search optimization Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A small set of fixes that should go into this release. This contains:\n\n   - An NVMe pull request from Christoph, with a few select fixes.\n\n     One of them fix a polling regression in this series, in which it's\n     trivial to cause the kernel to disable most of the hardware queue\n     interrupts.\n\n   - Fixup for a blk-mq queue usage imbalance on request allocation,\n     from Keith.\n\n   - A xen block pull request from Konrad, fixing two issues with\n     xen/xen-blkfront\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  blk-mq-pci: add a fallback when pci_irq_get_affinity returns NULL\n  nvme-pci: set cqe_seen on polled completions\n  nvme-fabrics: fix reporting of unrecognized options\n  nvmet-fc: eliminate incorrect static markers on local variables\n  nvmet-fc: correct use after free on list teardown\n  nvmet: don't overwrite identify sn/fr with 0-bytes\n  xen-blkfront: use a right index when checking requests\n  xen: fix bio vec merging\n  blk-mq: Fix queue usage on failed request allocation Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n \"Fourth set of -rc fixes for 4.13 cycle. This is all of the -rc fixes\n  that we know of. I suspect this will be the last rc pull request, but\n  you never know, I could be wrong.\n\n  Nothing major here. There are the i40iw patches I mentioned in my last\n  pull request minus one that I pulled out because it wasn't a fix and\n  not appropriate for the rc cycle. Then a few other items trickled in\n  and were added to the pull request. It's fairly small aside from those\n  five i40iw patches\n\n   - Set of five i40iw fixes (the first of these is rather large by line\n     count consideration, but I decided to send it because if fixes a\n     legitimate issue and the line count is because it does so by\n     creating a new function and using it where needed instead of just\n     patching up a few lines...a smaller fix could probably be done, but\n     the larger fix is the better code solution)\n\n   - One vmw_pvrdma fix\n\n   - One hns_roce fix (this silences a checker warning, but can't\n     actually happen, I expect a patch to remove this from all drivers\n     that share this same check in for-next)\n\n   - One iw_cxgb4 fix\n\n   - Two IB core fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:\n  IB/uverbs: Fix NULL pointer dereference during device removal\n  IB/core: Protect sysfs entry on ib_unregister_device\n  iw_cxgb4: fix misuse of integer variable\n  IB/hns: fix memory leak on ah on error return path\n  i40iw: Fix potential fcn_id_array out of bounds\n  i40iw: Use correct alignment for CQ0 memory\n  i40iw: Fix typecast of tcp_seq_num\n  i40iw: Correct variable names\n  i40iw: Fix parsing of query/commit FPM buffers\n  RDMA/vmw_pvrdma: Report CQ missed events Merge tag 'powerpc-4.13-7' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"A bug in the VSX register saving that could cause userspace FP/VMX\n  register corruption.\n\n  Never seen to happen (that we know of), was found by code inspection,\n  but still tagged for stable given the consequences\"\n\n* tag 'powerpc-4.13-7' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc: Fix VSX enabling/flushing to also test MSR_FP and MSR_VEC Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Arnd Bergmann:\n \"A small number of bugfixes, nothing serious this time. Here is a full\n  list.\n\n  4.13 regression fix:\n\n   - imx7d-sdb pinctrl support regressed in 4.13 due to an incomplete\n     patch\n\n  DT fixes for recently added devices:\n\n   - badly copied DT entries on imx6qdl-nitrogen6_som broke PCI reset\n\n   - sama5d2 memory controller had the wrong ID and registers\n\n   - imx7 power domains did not work correctly with deferred probing\n     (driver added in 4.12)\n\n   - Allwinner H5 pinctrl (added in 4.12) did not work right with GPIO\n     interrupts\n\n  Fixes for older bugs that just got noticed:\n\n   - i.MX25 ADC support (added in 4.6) apparently never worked right due\n     to a missing 'ranges' property in DT.\n\n   - Renesas Salvador Audio support (added in v4.5) was broken for\n     device repeated bind/unbind due to a naming conflict.\n\n   - Various allwinner boards are missing an 'ethernet' alias in DT,\n     leading to unstable device naming.\n\n  Preventive bugfix:\n\n   - TI Keystone needs a fix to prevent a NULL pointer dereference with\n     an upcoming PM change\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  soc: ti: ti_sci_pm_domains: Populate name for genpd\n  ARM: dts: imx6qdl-nitrogen6_som2: fix PCIe reset\n  arm64: allwinner: h5: fix pinctrl IRQs\n  arm64: allwinner: a64: sopine: add missing ethernet0 alias\n  arm64: allwinner: a64: pine64: add missing ethernet0 alias\n  arm64: allwinner: a64: bananapi-m64: add missing ethernet0 alias\n  arm64: renesas: salvator-common: avoid audio_clkout naming conflict\n  ARM: dts: i.MX25: add ranges to tscadc\n  soc: imx: gpcv2: fix regulator deferred probe\n  ARM: dts: at91: sama5d2: fix EBI/NAND controllers declaration\n  ARM: dts: at91: sama5d2: use sama5d2 compatible string for SMC\n  ARM: dts: imx7d-sdb: Put pinctrl_spi4 in the correct location Merge tag 'sound-4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A collection of small fixes, mostly for regression fixes (sequencer\n  kconfig and emu10k1 probe) and device-specific quirks (three for USB\n  and one for HD-audio).\n\n  One significant change is a fix for races in ALSA sequencer core,\n  which covers over the previous incomplete fix\"\n\n* tag 'sound-4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: emu10k1: Fix forgotten user-copy conversion in init code\n  ALSA: usb-audio: add DSD support for new Amanero PID\n  ALSA: usb-audio: Add mute TLV for playback volumes on C-Media devices\n  ALSA: usb-audio: Apply sample rate quirk to Sennheiser headset\n  ALSA: seq: 2nd attempt at fixing race creating a queue\n  ALSA: hda/realtek - Fix pincfg for Dell XPS 13 9370\n  ALSA: seq: Fix CONFIG_SND_SEQ_MIDI dependency Merge tag 'dma-mapping-4.13-3' of git://git.infradead.org/users/hch/dma-mapping\n\nPull dma-mapping fix from Christoph Hellwig:\n \"Another dma-mapping regression fix\"\n\n* tag 'dma-mapping-4.13-3' of git://git.infradead.org/users/hch/dma-mapping:\n  of: fix DMA mask generation Merge tag 'drm-fixes-for-v4.13-rc6' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Seems to be slowing down nicely, just one amdgpu fix, and a bunch of\n  i915 fixes\"\n\n* tag 'drm-fixes-for-v4.13-rc6' of git://people.freedesktop.org/~airlied/linux:\n  drm/amdgpu: save list length when fence is signaled\n  drm/i915: Avoid the gpu reset vs. modeset deadlock\n  drm/i915: Suppress switch_mm emission between the same aliasing_ppgtt\n  drm/i915: Return correct EDP voltage swing table for 0.85V\n  drm/i915/cnl: Add slice and subslice information to debugfs.\n  drm/i915: Perform an invalidate prior to executing golden renderstate\n  drm/i915: remove unused function declaration Merge tag 'pm-4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These fix two issues related to exposing the current CPU frequency to\n  user space on x86.\n\n  Specifics:\n\n   - Disable interrupts around reading IA32_APERF and IA32_MPERF in\n     aperfmperf_snapshot_khz() (introduced recently) to avoid excessive\n     delays between the reads that may result from interrupt handling\n     (Doug Smythies).\n\n   - Fix the computation of the CPU frequency to be reported through the\n     pstate_sample tracepoint in intel_pstate (Doug Smythies)\"\n\n* tag 'pm-4.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  cpufreq: x86: Disable interrupts during MSRs reading\n  cpufreq: intel_pstate: report correct CPU frequencies during trace Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: elan_i2c - Add antoher Lenovo ACPI ID for upcoming Lenovo NB\n  Input: elan_i2c - add ELAN0608 to the ACPI table\n  Input: trackpoint - assume 3 buttons when buttons detection fails Merge branch 'parisc-4.13-5' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n\n - Fix PCI memory bar assignments with 64-bit kernels on machines with\n   Dino/Cujo PCI chipsets. This makes PCI graphic cards work on such\n   machines (from Thomas Bogendoerfer).\n\n - Fix documentation to be more clear about the difference between %pF\n   and %pS printk format usage. There are still many places in the\n   kernel which have it wrong (from Petr Mladek, Sergey Senozhatsky &\n   me).\n\n* 'parisc-4.13-5' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  printk-formats.txt: Better describe the difference between %pS and %pF\n  parisc: pci memory bar assignment fails with 64bit kernels on dino/cujo Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull quota fix from Jan Kara:\n \"A fix of a check for quota limit\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  quota: correct space limit check pty: fix the cached path of the pty slave file descriptor in the master\n\nChristian Brauner reported that if you use the TIOCGPTPEER ioctl() to\nget a slave pty file descriptor, the resulting file descriptor doesn't\nlook right in /proc/<pid>/fd/<fd>.  In particular, he wanted to use\nreadlink() on /proc/self/fd/<fd> to get the pathname of the slave pty\n(basically implementing \"ptsname{_r}()\").\n\nThe reason for that was that we had generated the wrong 'struct path'\nwhen we create the pty in ptmx_open().\n\nIn particular, the dentry was correct, but the vfsmount pointed to the\nmount of the ptmx node. That _can_ be correct - in case you use\n\"/dev/pts/ptmx\" to open the master - but usually is not.  The normal\ncase is to use /dev/ptmx, which then looks up the pts/ directory, and\nthen the vfsmount of the ptmx node is obviously the /dev directory, not\nthe /dev/pts/ directory.\n\nWe actually did have the right vfsmount available, but in the wrong\nplace (it gets looked up in 'devpts_acquire()' when we get a reference\nto the pts filesystem), and so ptmx_open() used the wrong mnt pointer.\n\nThe end result of this confusion was that the pty worked fine, but when\nif you did TIOCGPTPEER to get the slave side of the pty, end end result\nwould also work, but have that dodgy 'struct path'.\n\nAnd then when doing \"d_path()\" on to get the pathname, the vfsmount\nwould not match the root of the pts directory, and d_path() would return\nan empty pathname thinking that the entry had escaped a bind mount into\nanother mount.\n\nThis fixes the problem by making devpts_acquire() return the vfsmount\nfor the pts filesystem, allowing ptmx_open() to trivially just use the\nright mount for the pts dentry, and create the proper 'struct path'.\n\nReported-by: Christian Brauner <christian.brauner@ubuntu.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nAcked-by: Eric Biederman <ebiederm@xmission.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"A couple of minor fixes (st, ses) and some bigger driver fixes for\n  qla2xxx (crash triggered by fw dump) and ipr (lockdep problems with\n  mq)\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: ses: Fix wrong page error\n  scsi: ipr: Fix scsi-mq lockdep issue\n  scsi: st: fix blk_get_queue usage\n  scsi: qla2xxx: Fix system crash while triggering FW dump Merge tag 'audit-pr-20170816' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit\n\nPull audit fixes from Paul Moore:\n \"Two small fixes to the audit code, both explained well in the\n  respective patch descriptions, but the quick summary is one\n  use-after-free fix, and one silly fanotify notification flag fix\"\n\n* tag 'audit-pr-20170816' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit:\n  audit: Receive unmount event\n  audit: Fix use after free in audit_remove_watch_rule() Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix TCP checksum offload handling in iwlwifi driver, from Emmanuel\n    Grumbach.\n\n 2) In ksz DSA tagging code, free SKB if skb_put_padto() fails. From\n    Vivien Didelot.\n\n 3) Fix two regressions with bonding on wireless, from Andreas Born.\n\n 4) Fix build when busypoll is disabled, from Daniel Borkmann.\n\n 5) Fix copy_linear_skb() wrt. SO_PEEK_OFF, from Eric Dumazet.\n\n 6) Set SKB cached route properly in inet_rtm_getroute(), from Florian\n    Westphal.\n\n 7) Fix PCI-E relaxed ordering handling in cxgb4 driver, from Ding\n    Tianhong.\n\n 8) Fix module refcnt leak in ULP code, from Sabrina Dubroca.\n\n 9) Fix use of GFP_KERNEL in atomic contexts in AF_KEY code, from Eric\n    Dumazet.\n\n10) Need to purge socket write queue in dccp_destroy_sock(), also from\n    Eric Dumazet.\n\n11) Make bpf_trace_printk() work properly on 32-bit architectures, from\n    Daniel Borkmann.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (47 commits)\n  bpf: fix bpf_trace_printk on 32 bit archs\n  PCI: fix oops when try to find Root Port for a PCI device\n  sfc: don't try and read ef10 data on non-ef10 NIC\n  net_sched: remove warning from qdisc_hash_add\n  net_sched/sfq: update hierarchical backlog when drop packet\n  net_sched: reset pointers to tcf blocks in classful qdiscs' destructors\n  ipv4: fix NULL dereference in free_fib_info_rcu()\n  net: Fix a typo in comment about sock flags.\n  ipv6: fix NULL dereference in ip6_route_dev_notify()\n  tcp: fix possible deadlock in TCP stack vs BPF filter\n  dccp: purge write queue in dccp_destroy_sock()\n  udp: fix linear skb reception with PEEK_OFF\n  ipv6: release rt6->rt6i_idev properly during ifdown\n  af_key: do not use GFP_KERNEL in atomic contexts\n  tcp: ulp: avoid module refcnt leak in tcp_set_ulp\n  net/cxgb4vf: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag\n  net/cxgb4: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag\n  PCI: Disable Relaxed Ordering Attributes for AMD A1100\n  PCI: Disable Relaxed Ordering for some Intel processors\n  PCI: Disable PCIe Relaxed Ordering if unsupported\n  ... Merge tag 'linux-kselftest-4.13-rc6-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest\n\nPull kselftest fixes from Shuah Khan:\n \"This update consists of important compile and run-time error fixes to\n  timers/freq-step, kmod, and sysctl tests\"\n\n* tag 'linux-kselftest-4.13-rc6-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest:\n  selftests: timers: freq-step: fix compile error\n  selftests: futex: fix run_tests target\n  test_sysctl: fix sysctl.sh by making it executable\n  test_kmod: fix kmod.sh by making it executable Merge tag 'md/4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD fixes from Shaohua Li:\n \"Fix several bugs:\n\n   - fix a rcu stall issue introduced in 4.12 (Neil Brown)\n\n   - fix two raid5 cache race conditions (Song Liu)\"\n\n* tag 'md/4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  MD: not clear ->safemode for external metadata array\n  md/r5cache: fix io_unit handling in r5l_log_endio()\n  md/r5cache: call mddev_lock/unlock() in r5c_journal_mode_set\n  md: fix test in md_write_start()\n  md: always clear ->safemode when md_check_recovery gets the mddev lock. Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n \"Fix an error path bug in ixp4xx as well as a read overrun in\n sha1-avx2\"\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: x86/sha1 - Fix reads beyond the number of blocks passed\n  crypto: ixp4xx - Fix error handling path in 'aead_perform()' Linux 4.13-rc5 Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"Another round of MIPS fixes:\n\n   - compressed boot: Ignore a generated .c file\n\n   - VDSO: Fix a register clobber list\n\n   - DECstation: Fix an int-handler.S CPU_DADDI_WORKAROUNDS regression\n\n   - Octeon: Fix recent cleanups that cleaned away a bit too much thus\n     breaking the arch side of the EDAC and USB drivers.\n\n   - uasm: Fix duplicate const in \"const struct foo const bar[]\" which\n     GCC 7.1 no longer accepts.\n\n   - Fix race on setting and getting cpu_online_mask\n\n   - Fix preemption issue. To do so cleanly introduce macro to get the\n     size of L3 cache line.\n\n   - Revert include cleanup that sometimes results in build error\n\n   - MicroMIPS uses bit 0 of the PC to indicate microMIPS mode. Make\n     sure this bit is set for kernel entry as well.\n\n   - Prevent configuring the kernel for both microMIPS and MT. There are\n     no such CPUs currently and thus the combination is unsupported and\n     results in build errors.\n\n  This has been sitting in linux-next for a few days and has survived\n  automated testing by Imagination's test farm. No known regressions\n  pending except a number of issues that crept up due to lots of people\n  switching to GCC 7.1\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: Set ISA bit in entry-y for microMIPS kernels\n  MIPS: Prevent building MT support for microMIPS kernels\n  MIPS: PCI: Fix smp_processor_id() in preemptible\n  MIPS: Introduce cpu_tcache_line_size\n  MIPS: DEC: Fix an int-handler.S CPU_DADDI_WORKAROUNDS regression\n  MIPS: VDSO: Fix clobber lists in fallback code paths\n  Revert \"MIPS: Don't unnecessarily include kmalloc.h into <asm/cache.h>.\"\n  MIPS: OCTEON: Fix USB platform code breakage.\n  MIPS: Octeon: Fix broken EDAC driver.\n  MIPS: gitignore: ignore generated .c files\n  MIPS: Fix race on setting and getting cpu_online_mask\n  MIPS: mm: remove duplicate \"const\" qualifier on insn_table Merge tag 'driver-core-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fixes from Greg KH:\n \"Here are three firmware core fixes for 4.13-rc5.\n\n  All three of these fix reported issues and have been floating around\n  for a few weeks. They have been in linux-next with no reported\n  problems\"\n\n* tag 'driver-core-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  firmware: avoid invalid fallback aborts by using killable wait\n  firmware: fix batched requests - send wake up on failure on direct lookups\n  firmware: fix batched requests - wake all waiters Merge tag 'char-misc-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc fixes from Greg KH:\n \"Here are two patches for 4.13-rc5.\n\n  One is a fix for a reported thunderbolt issue, and the other a fix for\n  an MEI driver issue. Both have been in linux-next with no reported\n  issues\"\n\n* tag 'char-misc-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  thunderbolt: Do not enumerate more ports from DROM than the controller has\n  mei: exclude device from suspend direct complete optimization Merge tag 'tty-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial fixes from Greg KH:\n \"Here are two tty serial driver fixes for 4.13-rc5. One is a revert of\n  a -rc1 patch that turned out to not be a good idea, and the other is a\n  fix for the pl011 serial driver.\n\n  Both have been in linux-next with no reported issues\"\n\n* tag 'tty-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  Revert \"serial: Delete dead code for CIR serial ports\"\n  tty: pl011: fix initialization order of QDF2400 E44 Merge tag 'staging-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging/iio fixes from Greg KH:\n \"Here are some Staging and IIO driver fixes for 4.13-rc5.\n\n  Nothing major, just a number of small fixes for reported issues. All\n  of these have been in linux-next for a while now with no reported\n  issues. Full details are in the shortlog\"\n\n* tag 'staging-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: comedi: comedi_fops: do not call blocking ops when !TASK_RUNNING\n  iio: aspeed-adc: wait for initial sequence.\n  iio: accel: bmc150: Always restore device to normal mode after suspend-resume\n  staging:iio:resolver:ad2s1210 fix negative IIO_ANGL_VEL read\n  iio: adc: axp288: Fix the GPADC pin reading often wrongly returning 0\n  iio: adc: vf610_adc: Fix VALT selection value for REFSEL bits\n  iio: accel: st_accel: add SPI-3wire support\n  iio: adc: Revert \"axp288: Drop bogus AXP288_ADC_TS_PIN_CTRL register modifications\"\n  iio: adc: sun4i-gpadc-iio: fix unbalanced irq enable/disable\n  iio: pressure: st_pressure_core: disable multiread by default for LPS22HB\n  iio: light: tsl2563: use correct event code Merge tag 'usb-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a number of small USB driver fixes and new device ids for\n  4.13-rc5. There is the usual gadget driver fixes, some new quirks for\n  \"messy\" hardware, and some new device ids.\n\n  All have been in linux-next with no reported issues\"\n\n* tag 'usb-4.13-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  USB: serial: pl2303: add new ATEN device id\n  usb: quirks: Add no-lpm quirk for Moshi USB to Ethernet Adapter\n  USB: Check for dropped connection before switching to full speed\n  usb:xhci:Add quirk for Certain failing HP keyboard on reset after resume\n  usb: renesas_usbhs: gadget: fix unused-but-set-variable warning\n  usb: renesas_usbhs: Fix UGCTRL2 value for R-Car Gen3\n  usb: phy: phy-msm-usb: Fix usage of devm_regulator_bulk_get()\n  usb: gadget: udc: renesas_usb3: Fix usb_gadget_giveback_request() calling\n  usb: dwc3: gadget: Correct ISOC DATA PIDs for short packets\n  USB: serial: option: add D-Link DWM-222 device ID\n  usb: musb: fix tx fifo flush handling again\n  usb: core: unlink urbs from the tail of the endpoint's urb_list\n  usb-storage: fix deadlock involving host lock and scsi_done\n  uas: Add US_FL_IGNORE_RESIDUE for Initio Corporation INIC-3069\n  USB: hcd: Mark secondary HCD as dead if the primary one died\n  USB: serial: cp210x: add support for Qivicon USB ZigBee dongle Merge tag 'for-linus-20170812' of git://git.infradead.org/linux-mtd\n\nPull another MTD fix from Brian Norris:\n \"An mtdblock regression occurred in -rc1 (all writes were broken!), in\n  the process of some block subsystem refactoring. Noticed and fixed\n  last week, but I'm a little slow on the uptake\"\n\n* tag 'for-linus-20170812' of git://git.infradead.org/linux-mtd:\n  mtd: blkdevs: Fix mtd block write failure Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target fixes from Nicholas Bellinger:\n \"The highlights include:\n\n   - Fix iscsi-target payload memory leak during\n     ISCSI_FLAG_TEXT_CONTINUE (Varun Prakash)\n\n   - Fix tcm_qla2xxx incorrect use of tcm_qla2xxx_free_cmd during ABORT\n     (Pascal de Bruijn + Himanshu Madhani + nab)\n\n   - Fix iscsi-target long-standing issue with parallel delete of a\n     single network portal across multiple target instances (Gary Guo +\n     nab)\n\n   - Fix target dynamic se_node GPF during uncached shutdown regression\n     (Justin Maggard + nab)\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  target: Fix node_acl demo-mode + uncached dynamic shutdown regression\n  iscsi-target: Fix iscsi_np reset hung task during parallel delete\n  qla2xxx: Fix incorrect tcm_qla2xxx_free_cmd use during TMR ABORT (v2)\n  cxgbit: fix sg_nents calculation\n  iscsi-target: fix invalid flags in text response\n  iscsi-target: fix memory leak in iscsit_setup_text_cmd()\n  cxgbit: add missing __kfree_skb()\n  tcmu: free old string on reconfig\n  tcmu: Fix possible to/from address overflow when doing the memcpy Merge tag 'for-linus-4.13b-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixes from Juergen Gross:\n \"Some fixes for Xen:\n\n   - a fix for a regression introduced in 4.13 for a Xen HVM-guest\n     configured with KASLR\n\n   - a fix for a possible deadlock in the xenbus driver when booting the\n     system\n\n   - a fix for lost interrupts in Xen guests\"\n\n* tag 'for-linus-4.13b-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/events: Fix interrupt lost during irq_disable and irq_enable\n  xen: avoid deadlock in xenbus\n  xen: fix hvm guest with kaslr enabled\n  xen: split up xen_hvm_init_shared_info()\n  x86: provide an init_mem_mapping hypervisor hook Merge tag 'nfs-for-4.13-5' of git://git.linux-nfs.org/projects/anna/linux-nfs\n\nPull NFS client fixes from Anna Schumaker:\n \"A few more NFS client bugfixes from me for rc5.\n\n  Dros has a stable fix for flexfiles to prevent leaking the\n  nfs4_ff_ds_version arrays when freeing a layout, Trond fixed a\n  potential recovery loop situation with the TEST_STATEID operation, and\n  Christoph fixed up the pNFS blocklayout Kconfig options to prevent\n  unsafe use with kernels that don't have large block device support.\n  Summary:\n\n  Stable fix:\n   - fix leaking nfs4_ff_ds_version array\n\n  Other fixes:\n   - improve TEST_STATEID OLD_STATEID handling to prevent recovery loop\n\n   - require 64-bit sector_t for pNFS blocklayout to prevent 32-bit\n     compile errors\"\n\n* tag 'nfs-for-4.13-5' of git://git.linux-nfs.org/projects/anna/linux-nfs:\n  pnfs/blocklayout: require 64-bit sector_t\n  NFSv4: Ignore NFS4ERR_OLD_STATEID in nfs41_check_open_stateid()\n  nfs/flexfiles: fix leak of nfs4_ff_ds_version arrays Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A set of fixes that should go into this series. This contains:\n\n   - Fix from Bart for blk-mq requeue queue running, preventing a\n     continued loop of run/restart.\n\n   - Fix for a bio/blk-integrity issue, in two parts. One from\n     Christoph, fixing where verification happens, and one from Milan,\n     for a NULL profile.\n\n   - NVMe pull request, most of the changes being for nvme-fc, but also\n     a few trivial core/pci fixes\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  nvme: fix directive command numd calculation\n  nvme: fix nvme reset command timeout handling\n  nvme-pci: fix CMB sysfs file removal in reset path\n  lpfc: support nvmet_fc defer_rcv callback\n  nvmet_fc: add defer_req callback for deferment of cmd buffer return\n  nvme: strip trailing 0-bytes in wwid_show\n  block: Make blk_mq_delay_kick_requeue_list() rerun the queue at a quiet time\n  bio-integrity: only verify integrity on the lowest stacked driver\n  bio-integrity: Fix regression if profile verify_fn is NULL Merge tag 'mmc-v4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"MMC core:\n\n   - fix lockdep splat when removing mmc_block module\n\n   - fix the logic for setting eMMC HS400ES signal voltage\n\n  MMC host:\n\n   - omap_hsmmc: add CMD23 capability to fix -EIO errors\"\n\n* tag 'mmc-v4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: block: fix lockdep splat when removing mmc_block module\n  mmc: mmc: correct the logic for setting HS400ES signal voltage\n  mmc: host: omap_hsmmc: Add CMD23 capability to omap_hsmmc driver Merge tag 'fbdev-v4.13-rc5' of git://github.com/bzolnier/linux\n\nPull fbdev fixes from Bartlomiej Zolnierkiewicz:\n\n - allow user to disable write combined mapping in efifb driver (Dave\n   Airlie)\n\n - fix use after free bugs on driver removal in imxfb driver (Dan\n   Carpenter)\n\n - fix unused variable warning in omapfb driver (Arnd Bergmann)\n\n* tag 'fbdev-v4.13-rc5' of git://github.com/bzolnier/linux:\n  efifb: allow user to disable write combined mapping.\n  fbdev: omapfb: remove unused variable\n  video: fbdev: imxfb: use after free in imxfb_remove() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse\n\nPull fuse fixes from Miklos Szeredi:\n \"Fix a few bugs in fuse\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse:\n  fuse: set mapping error in writepage_locked when it fails\n  fuse: Dont call set_page_dirty_lock() for ITER_BVEC pages for async_dio\n  fuse: initialize the flock flag in fuse_file on allocation Merge tag 'iommu-fixes-v4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fix from Joerg Roedel:\n \"Fix a NULL-pointer dereference in arm_smmu_add_device\"\n\n* tag 'iommu-fixes-v4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/arm-smmu: fix null-pointer dereference in arm_smmu_add_device Merge tag 'powerpc-4.13-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"All fixes for code that went in this cycle.\n\n   - a revert of an optimisation to the syscall exit path, which could\n     lead to an oops on either older machines or machines with > 1TB of\n     memory\n\n   - disable some deep idle states if the firmware configuration for\n     them fails\n\n   - re-enable HARD/SOFT lockup detectors in defconfigs after a Kconfig\n     change\n\n   - six fairly small patches fixing bugs in our new watchdog code\n\n  Thanks to: Gautham R Shenoy, Nicholas Piggin\"\n\n* tag 'powerpc-4.13-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/watchdog: add locking around init/exit functions\n  powerpc/watchdog: Fix marking of stuck CPUs\n  powerpc/watchdog: Fix final-check recovered case\n  powerpc/watchdog: Moderate touch_nmi_watchdog overhead\n  powerpc/watchdog: Improve watchdog lock primitive\n  powerpc: NMI IPI improve lock primitive\n  powerpc/configs: Re-enable HARD/SOFT lockup detectors\n  powerpc/powernv/idle: Disable LOSE_FULL_CONTEXT states when stop-api fails\n  Revert \"powerpc/64: Avoid restore_math call if possible in syscall exit\" Merge tag 'drm-fixes-for-v4.13-rc5' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Nothing too earth shattering here, it just seems like lots of little\n  things all over the place.\n\n  msm has probably the larger amount of changes, but they all seem fine,\n  otherwise, some rockchip, i915, etnaviv and exynos fixes, along with\n  one nouveau regression fix for some older GPUs\"\n\n* tag 'drm-fixes-for-v4.13-rc5' of git://people.freedesktop.org/~airlied/linux: (35 commits)\n  drm/nouveau/disp/nv04: avoid creation of output paths\n  drm: make DRM_STM default n\n  drm/exynos: forbid creating framebuffers from too small GEM buffers\n  drm/etnaviv: Fix off-by-one error in reloc checking\n  drm/i915: fix backlight invert for non-zero minimum brightness\n  drm/i915/shrinker: Wrap need_resched() inside preempt-disable\n  drm/i915/perf: fix flex eu registers programming\n  drm/i915: Fix out-of-bounds array access in bdw_load_gamma_lut\n  drm/i915/gvt: Change the max length of mmio_reg_rw from 4 to 8\n  drm/i915/gvt: Initialize MMIO Block with HW state\n  drm/rockchip: vop: report error when check resource error\n  drm/rockchip: vop: round_up pitches to word align\n  drm/rockchip: vop: fix NV12 video display error\n  drm/rockchip: vop: fix iommu page fault when resume\n  drm/i915/gvt: clean workload queue if error happened\n  drm/i915/gvt: change resetting to resetting_eng\n  drm/msm: gpu: don't abuse dma_alloc for non-DMA allocations\n  drm/msm: gpu: call qcom_mdt interfaces only for ARCH_QCOM\n  drm/msm/adreno: Prevent unclocked access when retrieving timestamps\n  drm/msm: Remove __user from __u64 data types\n  ... Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"21 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (21 commits)\n  userfaultfd: replace ENOSPC with ESRCH in case mm has gone during copy/zeropage\n  zram: rework copy of compressor name in comp_algorithm_store()\n  rmap: do not call mmu_notifier_invalidate_page() under ptl\n  mm: fix list corruptions on shmem shrinklist\n  mm/balloon_compaction.c: don't zero ballooned pages\n  MAINTAINERS: copy virtio on balloon_compaction.c\n  mm: fix KSM data corruption\n  mm: fix MADV_[FREE|DONTNEED] TLB flush miss problem\n  mm: make tlb_flush_pending global\n  mm: refactor TLB gathering API\n  Revert \"mm: numa: defer TLB flush for THP migration as long as possible\"\n  mm: migrate: fix barriers around tlb_flush_pending\n  mm: migrate: prevent racy access to tlb_flush_pending\n  fault-inject: fix wrong should_fail() decision in task context\n  test_kmod: fix small memory leak on filesystem tests\n  test_kmod: fix the lock in register_test_dev_kmod()\n  test_kmod: fix bug which allows negative values on two config options\n  test_kmod: fix spelling mistake: \"EMTPY\" -> \"EMPTY\"\n  userfaultfd: hugetlbfs: remove superfluous page unlock in VM_SHARED case\n  mm: ratelimit PFNs busy info message\n  ... Merge tag 'pci-v4.13-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fix from Bjorn Helgaas:\n \"Work around Renesas uPD72020x 32-bit DMA issue\"\n\n* tag 'pci-v4.13-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  xhci: Reset Renesas uPD72020x USB controller for 32-bit DMA issue\n  PCI: Add pci_reset_function_locked() Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix handling of initial STATE message in TIPC, from Jon Paul Maloy.\n\n 2) Fix stats handling in bcm_sysport_get_stats(), from Florian\n    Fainelli.\n\n 3) Reject 16777215 VNI value in geneve_validate(), from Girish\n    Moodalbail.\n\n 4) Fix initial IGMP sysctl setting regression, from Nikolay Borisov.\n\n 5) Once a UFO fragmented frame is treated as UFO, we should continue\n    doing so. Likewise once a frame has been segmented, we should\n    continue doing that and not try to convert it to a UFO frame. From\n    Willem de Bruijn.\n\n 6) Test the AF_PACKET RX/TX ring pg_vec state under the socket lock to\n    prevent races. From Willem de Bruijn.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net:\n  packet: fix tp_reserve race in packet_set_ring\n  udp: consistently apply ufo or fragmentation\n  net: sched: set xt_tgchk_param par.nft_compat as 0 in ipt_init_target\n  igmp: Fix regression caused by igmp sysctl namespace code.\n  geneve: maximum value of VNI cannot be used\n  net: systemport: Fix software statistics for SYSTEMPORT Lite\n  tipc: remove premature ESTABLISH FSM event at link synchronization Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc updates from David Miller:\n\n 1) Recognize M8 cpus, just basic chip ID matching, from Allen Pais.\n\n 2) Prevent crashes when bringing up sunvdc virtual block devices in\n    some environments. From Jim Quigley.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sunvdc: prevent sunvdc panic when mpgroup disk added to guest domain\n  sparc64: Increase max_phys_bits to 51 and VA bits to 53 for M8.\n  sparc64: recognize and support sparc M8 cpu type\n  sparc64: properly name the cpu constants Merge tag 'pinctrl-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control fixes from Linus Walleij:\n \"These are the pin control fixes I have gathered since the return from\n  my vacation. They boiled in -next a while so let's get them in.\n\n  Apart from the documentation build it is purely driver fixes. Which is\n  nice. The Intel fixes seem kind of important.\n\n   - Fix the documentation build as the docs were moved\n\n   - Correct the UART pin list on the Intel Merrifield\n\n   - Fix pin assignment and number of pins on the Marvell Armada 37xx\n     pin controller\n\n   - Cover the Setzer models in the Chromebook DMI quirk in the Intel\n     cheryview driver so they start working\n\n   - Add the missing \"sim\" function to the sunxi driver\n\n   - Fix USB pin definitions on Uniphier Pro4\n\n   - Smatch fix for invalid reference in the zx pin control driver\"\n\n* tag 'pinctrl-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: generic: update references to Documentation/pinctrl.txt\n  pinctrl: intel: merrifield: Correct UART pin lists\n  pinctrl: armada-37xx: Fix number of pin in south bridge\n  pinctrl: armada-37xx: Fix the pin 23 on south bridge\n  pinctrl: cherryview: Add Setzer models to the Chromebook DMI quirk\n  pinctrl: sunxi: add a missing function of A10/A20 pinctrl driver\n  pinctrl: uniphier: fix USB3 pin assignment for Pro4\n  pinctrl: zte: fix dereference of 'data' in zx_set_mux() Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"The main thing is to allow empty id_tables for ACPI to make some\n  drivers get probed again. It looks a bit bigger than usual because it\n  needs some internal renaming, too.\n\n  Other than that, there is a fix for broken DSTDs, a super simple\n  enablement for ARM MPS, and two documentation fixes which I'd like to\n  see in v4.13 already\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: rephrase explanation of I2C_CLASS_DEPRECATED\n  i2c: allow i2c-versatile for ARM MPS platforms\n  i2c: designware: Some broken DSTDs use 1MiHz instead of 1MHz\n  i2c: designware: Print clock freq on invalid clock freq error\n  i2c: core: Allow empty id_table in ACPI case as well\n  i2c: mux: pinctrl: mention correct module name in Kconfig help text Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"Three patches that should go into this release.\n\n  Two of them are from Paolo and fix up some corner cases with BFQ, and\n  the last patch is from Ming and fixes up a potential usage count\n  imbalance regression due to the recent NOWAIT work\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  blk-mq: don't leak preempt counter/q_usage_counter when allocating rq failed\n  block, bfq: consider also in_service_entity to state whether an entity is active\n  block, bfq: reset in_service_entity if it becomes idle Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n \"Fix two regressions in the inside-secure driver with respect to\n  hmac(sha1)\"\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: inside-secure - fix the sha state length in hmac_sha1_setkey\n  crypto: inside-secure - fix invalidation check in hmac_sha1_setkey Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"The pull requests are getting smaller, that's progress I suppose :-)\n\n   1) Fix infinite loop in CIPSO option parsing, from Yujuan Qi.\n\n   2) Fix remote checksum handling in VXLAN and GUE tunneling drivers,\n      from Koichiro Den.\n\n   3) Missing u64_stats_init() calls in several drivers, from Florian\n      Fainelli.\n\n   4) TCP can set the congestion window to an invalid ssthresh value\n      after congestion window reductions, from Yuchung Cheng.\n\n   5) Fix BPF jit branch generation on s390, from Daniel Borkmann.\n\n   6) Correct MIPS ebpf JIT merge, from David Daney.\n\n   7) Correct byte order test in BPF test_verifier.c, from Daniel\n      Borkmann.\n\n   8) Fix various crashes and leaks in ASIX driver, from Dean Jenkins.\n\n   9) Handle SCTP checksums properly in mlx4 driver, from Davide\n      Caratti.\n\n  10) We can potentially enter tcp_connect() with a cached route\n      already, due to fastopen, so we have to explicitly invalidate it.\n\n  11) skb_warn_bad_offload() can bark in legitimate situations, fix from\n      Willem de Bruijn\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (52 commits)\n  net: avoid skb_warn_bad_offload false positives on UFO\n  qmi_wwan: fix NULL deref on disconnect\n  ppp: fix xmit recursion detection on ppp channels\n  rds: Reintroduce statistics counting\n  tcp: fastopen: tcp_connect() must refresh the route\n  net: sched: set xt_tgchk_param par.net properly in ipt_init_target\n  net: dsa: mediatek: add adjust link support for user ports\n  net/mlx4_en: don't set CHECKSUM_COMPLETE on SCTP packets\n  qed: Fix a memory allocation failure test in 'qed_mcp_cmd_init()'\n  hysdn: fix to a race condition in put_log_buffer\n  s390/qeth: fix L3 next-hop in xmit qeth hdr\n  asix: Fix small memory leak in ax88772_unbind()\n  asix: Ensure asix_rx_fixup_info members are all reset\n  asix: Add rx->ax_skb = NULL after usbnet_skb_return()\n  bpf: fix selftest/bpf/test_pkt_md_access on s390x\n  netvsc: fix race on sub channel creation\n  bpf: fix byte order test in test_verifier\n  xgene: Always get clk source, but ignore if it's missing for SGMII ports\n  MIPS: Add missing file for eBPF JIT.\n  bpf, s390: fix build for libbpf and selftest suite\n  ... Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n \"Third set of -rc fixes for 4.13 cycle\n\n   - small set of miscellanous fixes\n\n   - a reasonably sizable set of IPoIB fixes that deal with multiple\n     long standing issues\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:\n  IB/hns: checking for IS_ERR() instead of NULL\n  RDMA/mlx5: Fix existence check for extended address vector\n  IB/uverbs: Fix device cleanup\n  RDMA/uverbs: Prevent leak of reserved field\n  IB/core: Fix race condition in resolving IP to MAC\n  IB/ipoib: Notify on modify QP failure only when relevant\n  Revert \"IB/core: Allow QP state transition from reset to error\"\n  IB/ipoib: Remove double pointer assigning\n  IB/ipoib: Clean error paths in add port\n  IB/ipoib: Add get statistics support to SRIOV VF\n  IB/ipoib: Add multicast packets statistics\n  IB/ipoib: Set IPOIB_NEIGH_TBL_FLUSH after flushed completion initialization\n  IB/ipoib: Prevent setting negative values to max_nonsrq_conn_qp\n  IB/ipoib: Make sure no in-flight joins while leaving that mcast\n  IB/ipoib: Use cancel_delayed_work_sync when needed\n  IB/ipoib: Fix race between light events and interface restart Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Two small fixes, one re-fix of a previous fix and five patches sorting\n  out hotplug in the bnx2X class of drivers. The latter is rather\n  involved, but necessary because these drivers have started dropping\n  lockdep recursion warnings on the hotplug lock because of its\n  conversion to a percpu rwsem\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: sg: only check for dxfer_len greater than 256M\n  scsi: aacraid: reading out of bounds\n  scsi: qedf: Limit number of CQs\n  scsi: bnx2i: Simplify cpu hotplug code\n  scsi: bnx2fc: Simplify CPU hotplug code\n  scsi: bnx2i: Prevent recursive cpuhotplug locking\n  scsi: bnx2fc: Prevent recursive cpuhotplug locking\n  scsi: bnx2fc: Plug CPU hotplug race Merge tag 'xtensa-20170807' of git://github.com/jcmvbkbc/linux-xtensa\n\nPull Xtensa fixes from Max Filippov:\n\n - use asm-generic instances of asm/param.h and asm/device.h instead of\n   exact copies in arch/xtensa/include/asm;\n\n - fix build error for xtensa cores with aliasing WT cache: define cache\n   flushing functions and copy_{to,from}_user_page;\n\n - add missing EXPORT_SYMBOLs for clear_user_highpage, copy_user_highpage,\n   flush_dcache_page, local_flush_cache_range, local_flush_cache_page,\n   csum_partial and csum_partial_copy_generic.\n\n* tag 'xtensa-20170807' of git://github.com/jcmvbkbc/linux-xtensa:\n  xtensa: mm/cache: add missing EXPORT_SYMBOLs\n  xtensa: don't limit csum_partial export by CONFIG_NET\n  xtensa: fix cache aliasing handling code for WT cache\n  xtensa: remove wrapper header for asm/param.h\n  xtensa: remove wrapper header for asm/device.h Merge tag 'for-linus-20170807' of git://git.infradead.org/linux-mtd\n\nPull MTD fixes from Brian Norris:\n \"I missed getting these out for rc4, but here are some MTD fixes.\n\n  Just NAND fixes (in both the core handling, and a few drivers). Notes\n  stolen from Boris:\n\n  Core fixes:\n\n   - fix data interface setup for ONFI NANDs that do not support the SET\n     FEATURES command\n\n   - fix a kernel doc header\n\n   - fix potential integer overflow when retrieving timing information\n     from the parameter page\n\n   - fix wrong OOB layout for small page NANDs\n\n  Driver fixes:\n\n   - fix potential division-by-zero bug\n\n   - fix backward compat with old atmel-nand DT bindings\n\n   - fix ->setup_data_interface() in the atmel NAND driver\"\n\n* tag 'for-linus-20170807' of git://git.infradead.org/linux-mtd:\n  mtd: nand: atmel: Fix EDO mode check\n  mtd: nand: Declare tBERS, tR and tPROG as u64 to avoid integer overflow\n  mtd: nand: Fix timing setup for NANDs that do not support SET FEATURES\n  mtd: nand: Fix a docs build warning\n  mtd: nand: sunxi: fix potential divide-by-zero error\n  nand: fix wrong default oob layout for small pages using soft ecc\n  mtd: nand: atmel: Fix DT backward compatibility in pmecc.c Merge tag 'xfs-4.13-fixes-3' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n \"I have a couple more bug fixes for you today:\n\n   - fix memory leak when issuing discard\n\n   - fix propagation of the dax inode flag\"\n\n* tag 'xfs-4.13-fixes-3' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: Fix per-inode DAX flag inheritance\n  xfs: Fix leak of discard bio Linux 4.13-rc4 Merge tag 'platform-drivers-x86-v4.13-4' of git://git.infradead.org/linux-platform-drivers-x86\n\nPull x86 platform driver fix from Darren Hart:\n \"Fix loop preventing some platforms from waking up via the power button\n  in s2idle:\n\n   - intel-vbtn: match power button on press rather than release\"\n\n* tag 'platform-drivers-x86-v4.13-4' of git://git.infradead.org/linux-platform-drivers-x86:\n  platform/x86: intel-vbtn: match power button on press rather than release Merge tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 fixes from Ted Ts'o:\n \"A large number of ext4 bug fixes and cleanups for v4.13\"\n\n* tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4:\n  ext4: fix copy paste error in ext4_swap_extents()\n  ext4: fix overflow caused by missing cast in ext4_resize_fs()\n  ext4, project: expand inode extra size if possible\n  ext4: cleanup ext4_expand_extra_isize_ea()\n  ext4: restructure ext4_expand_extra_isize\n  ext4: fix forgetten xattr lock protection in ext4_expand_extra_isize\n  ext4: make xattr inode reads faster\n  ext4: inplace xattr block update fails to deduplicate blocks\n  ext4: remove unused mode parameter\n  ext4: fix warning about stack corruption\n  ext4: fix dir_nlink behaviour\n  ext4: silence array overflow warning\n  ext4: fix SEEK_HOLE/SEEK_DATA for blocksize < pagesize\n  ext4: release discard bio after sending discard commands\n  ext4: convert swap_inode_data() over to use swap() on most of the fields\n  ext4: error should be cleared if ea_inode isn't added to the cache\n  ext4: Don't clear SGID when inheriting ACLs\n  ext4: preserve i_mode if __ext4_set_acl() fails\n  ext4: remove unused metadata accounting variables\n  ext4: correct comment references to ext4_ext_direct_IO() Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"This fixes two build issues for ralink platforms, both due to missing\n  #includes which used to be included indirectly via other headers\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: ralink: mt7620: Add missing header\n  MIPS: ralink: Fix build error due to missing header Merge tag 'media/v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"This series is larger than I would like to submit for -rc4. My\n  original intent were to sent it to either -rc2 or -rc3. Unfortunately,\n  due to my vacations, I got a lot of pending stuff after my return, and\n  had to do some biz trips, with prevented me to send this earlier.\n\n  Several fixes:\n\n   - some fixes at atomisp staging driver\n\n   - several gcc 7 warning fixes\n\n   - cleanup media SVG files, in order to fix PDF build on some distros\n\n   - fix random Kconfig build of venus driver\n\n   - some fixes for the venus driver\n\n   - some changes from semaphone to mutex in ngene's driver\n\n   - some locking fixes at dib0700 driver\n\n   - several fixes on ngene's driver and frontends to make it properly\n     support some new boards added on Kernel 4.13\n\n   - some fixes to CEC drivers\n\n   - omap_vout: vrfb: convert to dmaengine\n\n   - docs-rst: document EBUSY for VIDIOC_S_FMT\n\n  Please notice that the big diffstat changes here are at the SVG files.\n\n  Visually, the images look the same, but the file size is now a lot\n  smaller than before, and they don't use some XML tags that would cause\n  them to be badly parsed by some ImageMagick versions, or to require a\n  lot of memory by TeTex, with would break PDF output on some\n  distributions\"\n\n* tag 'media/v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (68 commits)\n  media: atomisp2: array underflow in imx_enum_frame_size()\n  media: atomisp2: array underflow in ap1302_enum_frame_size()\n  media: atomisp2: Array underflow in atomisp_enum_input()\n  media: platform: davinci: drop VPFE_CMD_S_CCDC_RAW_PARAMS\n  media: platform: davinci: return -EINVAL for VPFE_CMD_S_CCDC_RAW_PARAMS ioctl\n  media: venus: don't abuse dma_alloc for non-DMA allocations\n  media: venus: hfi: fix error handling in hfi_sys_init_done()\n  media: venus: fix compile-test build on non-qcom ARM platform\n  media: venus: mark PM functions as __maybe_unused\n  media: cec-notifier: small improvements\n  media: pulse8-cec: persistent_config should be off by default\n  media: cec: cec_transmit_attempt_done: ignore CEC_TX_STATUS_MAX_RETRIES\n  media: staging: atomisp: array underflow in ioctl\n  media: lirc: LIRC_GET_REC_RESOLUTION should return microseconds\n  media: svg: avoid too long lines\n  media: svg files: simplify files\n  media: selection.svg: simplify the SVG file\n  media: vimc: set id_table for platform drivers\n  media: staging: atomisp: disable warnings with cc-disable-warning\n  media: davinci: variable 'common' set but not used\n  ... Merge tag 'gpio-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fixes from Linus Walleij:\n\n - LP87565: set the proper output level for direction_output.\n\n - stm32: fix the kernel build by selecting the hierarchical irqdomain\n   symbol properly - this happens to be done in the pin control\n   framework but whatever, it had dependencies to GPIO so we need to\n   apply it here.\n\n - Select the hierarchical IRQ domain also for Xgene.\n\n - Fix wakeups to work on MXC.\n\n - Fix up the device tree binding on Exar that went astray, also add the\n   right bindings.\n\n - Fix the unwanted events for edges from the library.\n\n - Fix the unbalanced chanined IRQ on the Tegra.\n\n* tag 'gpio-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: tegra: fix unbalanced chained_irq_enter/exit\n  gpiolib: skip unwanted events, don't convert them to opposite edge\n  gpio: exar: Use correct property prefix and document bindings\n  gpio: gpio-mxc: Fix: higher 16 GPIOs usable as wake source\n  gpio: xgene-sb: select IRQ_DOMAIN_HIERARCHY\n  pinctrl: stm32: select IRQ_DOMAIN_HIERARCHY instead of depends on\n  gpio: lp87565: Set proper output level and direction for direction_output\n  MAINTAINERS: Add entry for Whiskey Cove PMIC GPIO driver Merge tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux\n\nPull clk fixes from Stephen Boyd:\n \"A handful of critical fixes for changes introduce this merge window.\n\n   - The TI sci_clk_get() API was pretty broken and nobody noticed.\n\n   - There were some CPUfreq crashes on C.H.I.P devices because we\n     failed to propagate rates up the clk tree.\n\n   - Also, the Intel Atom PMC clk driver needs to mark a clk critical if\n     the firmware has it enabled already so that audio doesn't get\n     killed on Baytrail.\n\n   - Gemini devices have a dead serial console because the reset control\n     usage in the serial driver assume one method of reset that gemini\n     doesn't support (this will be fixed in the next version in the\n     reset framework so this is the small fix for -rc series).\n\n   - Finally we have two rate calculation fixes, one for Exynos and one\n     for Meson SoCs, that fix rate inconsistencies\"\n\n* tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux:\n  clk: keystone: sci-clk: Fix sci_clk_get\n  clk: meson: mpll: fix mpll0 fractional part ignored\n  clk: samsung: exynos5420: The EPLL rate table corrections\n  clk: sunxi-ng: sun5i: Add clk_set_rate_parent to the CPU clock\n  clk: x86: Do not gate clocks enabled by the firmware\n  clk: gemini: Fix reset regression Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Radim Krčmář:\n \"ARM:\n\n   - Yet another race with VM destruction plugged\n\n   - A set of small vgic fixes\n\n  x86:\n\n   - Preserve pending INIT\n\n   - RCU fixes in paravirtual async pf, VM teardown, and VMXOFF\n     emulation\n\n   - nVMX interrupt injection and dirty tracking fixes\n\n   - initialize to make UBSAN happy\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: arm/arm64: vgic: Use READ_ONCE fo cmpxchg\n  KVM: nVMX: Fix interrupt window request with \"Acknowledge interrupt on exit\"\n  KVM: nVMX: mark vmcs12 pages dirty on L2 exit\n  kvm: nVMX: don't flush VMCS12 during VMXOFF or VCPU teardown\n  KVM: nVMX: do not pin the VMCS12\n  KVM: avoid using rcu_dereference_protected\n  KVM: X86: init irq->level in kvm_pv_kick_cpu_op\n  KVM: X86: Fix loss of pending INIT due to race\n  KVM: async_pf: make rcu irq exit if not triggered from idle task\n  KVM: nVMX: fixes to nested virt interrupt injection\n  KVM: nVMX: do not fill vm_exit_intr_error_code in prepare_vmcs12\n  KVM: arm/arm64: Handle hva aging while destroying the vm\n  KVM: arm/arm64: PMU: Fix overflow interrupt injection\n  KVM: arm/arm64: Fix bug in advertising KVM_CAP_MSI_DEVID capability Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fix from Thomas Gleixner:\n \"The recent irq core changes unearthed API abuse in the HPET code,\n  which manifested itself in a suspend/resume regression.\n\n  The fix replaces the cruft with the proper function calls and cures\n  the regression\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/hpet: Cure interface abuse in the resume path Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"A single fix for a multiplication overflow in the timer code on 32bit\n  systems\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  timers: Fix overflow in get_next_timer_interrupt Merge tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Arnd Bergmann:\n \"This comes a bit later than I planned, and as a consequence is a\n  larger than it should be.\n\n  Most of the changes are devicetree fixes, across lots of platforms:\n  Renesas, Samsung Exynos, Marvell EBU, TI OMAP, Rockchips, Amlogic\n  Meson, Sigma Desings Tango, Allwinner SUNxi and TI Davinci.\n\n  Also across many platforms, I applied an older series of simple\n  randconfig build fixes. This includes making the CONFIG_MTD_XIP option\n  compile again, which had been broken for many years and probably has\n  not been missed, but it felt wrong to just remove it completely.\n\n  The only other changes are:\n\n   - We enable HWSPINLOCK in defconfig to get some Qualcomm boards to\n     work out of the box.\n\n   - A few regression fixes for Texas Instruments OMAP2+.\n\n   - A boot regression fix for the Renesas regulator quirk.\n\n   - A suspend/resume fix for Uniphier SoCs, fixing the resume of the\n     system bus\"\n\n* tag 'armsoc-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (43 commits)\n  ARM: dts: tango4: Request RGMII RX and TX clock delays\n  bus: uniphier-system-bus: set up registers when resuming\n  ARM64: dts: marvell: armada-37xx: Fix the number of GPIO on south bridge\n  ARM: shmobile: rcar-gen2: Fix deadlock in regulator quirk\n  arm64: defconfig: enable missing HWSPINLOCK\n  ARM: pxa: select both FB and FB_W100 for eseries\n  ARM: ixp4xx: fix ioport_unmap definition\n  ARM: ep93xx: use ARM_PATCH_PHYS_VIRT correctly\n  ARM: mmp: mark usb_dma_mask as __maybe_unused\n  ARM: omap2: mark unused functions as __maybe_unused\n  ARM: omap1: avoid unused variable warning\n  ARM: sirf: mark sirfsoc_init_late as __maybe_unused\n  ARM: ixp4xx: use normal prototype for {read,write}s{b,w,l}\n  ARM: omap1/ams-delta: warn about failed regulator enable\n  ARM: rpc: rename RAM_SIZE macro\n  ARM: w90x900: normalize clk API\n  ARM: ep93xx: normalize clk API\n  ARM: dts: sun8i: a83t: Switch to CCU device tree binding macros\n  arm64: allwinner: sun50i-a64: Correct emac register size\n  ARM: dts: sunxi: h3/h5: Correct emac register size\n  ... Add a copy of the GPL v2 to the project\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the version to the Makefile\n\nNot quite the same format as for the kernel, but I want to do the normal\n\"edit the makefile before making a release\" model that I'm used to.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update README to reflect the fact that /dev/ttyUSB0 is no longer hardcoded\n\nYay.  It's not like we're all done, but the hardcoded dive computer\nlocation was one of those \"I don't want to release 1.0 with this\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a GtkEntry to allow editing of the device name\n\nOk, so some file chooser widget with a popup dialog would have been more\nprofessional, but I'm lazy.  Plus I suspect the popup would look\nhorrible when populated with /dev entries, and I don't think there is\nany sane filter function.\n\nSo this works, and means that you don't *have* to recompile the whole\nprogram just because you have your dive computer on something else than\na USB serial line.\n\nI suspect I should save the default name as a config variable too.\nMaybe a setting in the preferences dialog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a \"Dive Computer\" frame around the dive computer choice in import\n\nI'll add a widget to allow the user to select the device too, so let's\nname things to make them more obvious.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a xml file filter to the file open dialog\n\nMy home directory is a mess.  Don't show all the crap, just the stuff\nthat might be relevant.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add an 'About' dialog\n\nIt's really just about the logo, but whatever.  Dirk tells me I need one\nof these in order to call it 1.0.  And I'm not going to fall into the\ntrap of thinking that 1.0 needs to be something polished, it just needs\nto be working well enough..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'gtk_dialog_get_content_area()' instead of accessing dialog directly\n\nI'm reading gtk docs, and trying to clean things up a bit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show events on the dive profile\n\nThis is *really* ugly.  We really should just create some kind of widget\nthat when moused over will show the event.  Or something.  Rather than\nputting text on top of other text: the events - when they happen - are\nusually bunched together (PO2 warnings, max depth, fast ascent leading\nto mandatory safety stop, you name it).\n\nBut at least this way we see that the data is there, even if we see it\nin ugly ways.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cheesy \"install\" target\n\nIt just puts the subsurface binary in $(HOME)/bin.\n\n.. and then the binary won't find the icon file, so this is really not\nenough of an install to get it really working, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Drop surface events when reading from an XML file too\n\nRemember those useless surface events that we ignore when we import a\ndive from a dive computer? Yeah, they exist in the libdivelog xml files\ntoo.  So ignore them when we see them there too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge latitude and longitude data properly\n\nWhen merging two identical dives and one of them has lat/long data, pick\nit up correctly for the merged dive.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge dive events correctly too\n\nIt's very similar to the sample merging.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start handling dive events\n\nParse them, save them, take them from libdivecomputer.\n\nThis doesn't merge them or show them in the profile yet, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly merge dive buddies and divemaster information\n\nWhen we merge dives, we didn't merge these fields properly. Do it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve libdivecomputer event printout\n\nIgnore surface events - they are meaningless anyway and just add noise.\n\nPrint out other events properly, including correct time offset etc.\n\nWe still don't actually *save* the events, but now it might be worth\ndoign so.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up event handling from libdivecomputer\n\nThis just moves the event handling out into its own helper function.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix progress bar during libdivecomputer imports\n\nAs reported by Mauro Dreissig, the progress bar doesn't work and causes\na SIGSEGV due to a missing allocation.  The code broke when Dirk\nseparated out the GUI from the core code, and I hadn't tried\ndivecomputer downloads since.\n\nReported-by: Mauro Dreissig <mukadr@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the README a bit\n\nUpdate for the current library situation, and notes about\nlibdivecomputer installation location.\n\nAnd remove the \"we don't interface directly with libdivecomputer\", since\nthat is obviously not true any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'alignment-change' of git://github.com/dirkhh/subsurface\n\n* 'alignment-change' of git://github.com/dirkhh/subsurface:\n  Minor change to the alignment of the divelist columns Clean up library handling\n\n.. and pick up libusb-1.0 automatically if it's installed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Put the location last in the dive list\n\nThe whole auto-expansion of an entry in the middle thing really doesn't\nwork very well in gtk. Give up on it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Put the default focus on the dive list at startup\n\nThis is some crazy stuff.  Apparently the only sane way to do this is by\nhooking into the \"realize\" callback for the dive list widget.\n\nWhatever. Dirk did the googling to figure this all out.\n\nSuggested-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up some minor whitespace issues\n\nDirk clearly isn't as anal as I am about pretty whitespace.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Select the first dive after filling the dive list\n\nWe should always strive to have a dive selected, so pick the first one\n(that was how the dive list logic worked anyway, it just wasn't truly\nselected at the tree-view level, so it wasn't *visibly* the selected\ndive).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive list searching act on the location\n\nIt used to be \"index 0\" which originally was the date string, but not\nonly has that changed (it's now just the dive index), it's kind of\npointless to search for a date string.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't do individual 'gtk_widget_show()' calls\n\nThis is left-overs from an earlier age when we did this.  But we just do\nthe \"show_all\" at the end.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> In divelist maxdepth column, only show depth unit\n\nShow \"m\" or \"ft\" instead of \"max/m\" vs \"max/ft\".  The column really\ndoesn't want to be that wide.  The column header is already the widest\npart of it even with this short name (due to the sort order arrow\nthing).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> In summary printout, show divemaster if there was no buddy\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'quit-handling' of git://github.com/dirkhh/subsurface\n\n* 'quit-handling' of git://github.com/dirkhh/subsurface:\n  Use the last (or only) filename on command line as default for saving\n  Show the \"save changes\" dialog before the main window is destroyed\n  Check for changes at regular 'quit' events as well\n  Catch changes to the info of the current dive when quitting\n  Tracking changes to tanks is trivial\n  Simplistic first attempt to get changes saved when quitting subsurface Small printing tweaks\n\nIt's getting to the point where I'm happy with this.  This just makes\nthe spacing between the location and the notes a bit bigger to visually\nseparate them more, and adds units (\"min\") to the dive duration (and\nremoves the seconds, that really didn't make any sense at an overview\nlevel).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add helper function for doing depth unit calculations\n\n.. and use it for printing too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix dive location width problem\n\nFor really long dive locations, we now limit the width to the same size\nas the date and time, and force it to a single line - with an ellipsis\nif it ends up being too big.\n\nAlso, since we no longer use any markup anywhere, we migth as well show\nthe dive buddy information too, as we don't need no stinking quoting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do the pango text layout in multiple chunks\n\nThis way we can avoid the need for quoting, since we can just use text\nrendering instead of markup for the free-form fields.  And we will want\nto make the pango layout width different for the date and location,\nsince we want to fit the depth/duration to the right of them.\n\nI still haven't set the different width for the date/location, but this\nat least is going in the rigth direction.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Sue me: I'm not a fan of Serif\n\nThe default cairo font seems to be sans, but the default pango font is\nserif.  Maybe it has something to do with my system font settings, but I\ndoubt it: my desktop font settings are all sans-serif.  So I think pango\nis just showing bad taste.\n\nAnyway, this just hardcodes the font to \"Sans\".  Maybe somebody wants to\nmake this all part of preferences some day, or pick it from their\ndesktop font preferences.  In the meantime, just fix the pango brain-damage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix array underrun when calculating velocity\n\nThat code is messy. And it was buggy. Noticed by valgrind.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up printing some more\n\nThis makes things slightly prettier and adds back the depth and duration\ndetails to the printout.\n\nStill a few known problems: font choice, and the depth/duration thing\ncan end up overlapping with a long location name.  But it looks pretty\ngood on the whole.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix 'struct plot_info' memory leak\n\nThe plot_info was never freed, so every time you'd plot something, we'd\nleak memory.\n\nI'm running valgrind to see if there's anything bad going on.  So far it\nall looks fairly benign.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Printing: use pango markup for text generation\n\nThis gets us text wrapping etc.  I think I have some serious memory leak\nsomewhere, though, because if I print out all my dives it eventually\nends up with broken dives and doesn't complete.  But I am going to\ncommit this as a \"it kind of works\" point.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add completely BS dive text printing\n\nThe layout is crap, the handling of long lines in notes (or location) is\nwrong, the dive number handling is wrong.\n\nThe thing is just a toy.\n\nBut it's a toy that kind of works, and gives a much better idea of what\na real dive log printout might look like.  With the right kind of dive\nnotes, it looks fine.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Try printing six dives per page\n\nOk, so this may be too much, but I'm just playing around with layout.\nIt could be a runtime choice too, of course.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up printing some more\n\nUse the actual degree sign for temperatures (°F and °C), and make sure\neverything uses the proper \"set_source_rgb[a]()\" wrappers to set the\ncolors.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Print out only simplified depth profile\n\nNone of the colors, nothing like that.  Just a gray fill and a plain\nblack depth line.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up and simplify depth plot\n\nDirk wrote this before we have the 'plot_info' structure with the\ncleaned-up dive info.  No need to maintain that separate array of depths\nand seconds.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start fleshing out the dive printing a bit more\n\nFour dives per page sounds good.  Maybe even six? But dangit, the\ndefault font choice for cairo printing sucks.  And I need to learn about\npango for actually printing the dive info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org Don't show the smoothed dive profile or the min/max info\n\nIt was good for debugging, it's not something we really want to show people.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix divelist sorting\n\nThat was stupid.  The divelist column generation cleanup (commit\nd3feb78df527: \"Make helper function for creating TreeView columns in the\ndive list\") had a but too much copy-paste going on, and didn't always\nhave the right column indexes..  t still *looked* right, but sorting\ndidn't work at all.\n\nReported-by: Chris Lewis <chrislewis915@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix preferences dialog\n\nDirk took some old code when he did the merge of the newly split gui\ncode. Fix it up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divelist font configurable\n\nInstead of the hardcoding to \"Sans 8\", allow people to set it in the\npreferences.\n\nAlso, make the unit choice be a frame in the preferences dialog instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge git://github.com/sirowain/subsurface\n\n* git://github.com/sirowain/subsurface:\n  Fix Segmentation fault when trying to print an empty plot.\n  Provide an icon for subsurface.\n  Added a comment about libusb dependency in Makefile. Merge branch 'for-linus' of git://github.com/dirkhh/subsurface\n\n* 'for-linus' of git://github.com/dirkhh/subsurface:\n  Attempt to get the location column to resize in a sensible way\n  Minor tweaks to column headers\n\n[ Fixed up minor semantic merge conflict due to the change to make\n  'dive_list' internal to divelist.c ] Make 'struct DiveList' entirely internal to divelist.c\n\nPassing it around is just annoying, and we only ever have one.  Let's\nnot burden all the users with the silly thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add \"Apply\"/\"Cancel\" buttons to dive equipment page\n\nIt's too damn easy to make mistakes and not even notice them (odd gtk\nwidget selection and keyboard input), or just start editing a cylinder\nthing and realize it was wrong.\n\nSo instead of always saving the equipment information implicitly, add\nexplicit \"Apply\" and \"Cancel\" buttons that save the information (or\nre-load it from the dive data structure)\n\nSo now you need to press an extra button for your changes to *really*\ntake effect.  It can be a bit annoying, but it's better than the silent\naccidental equipment change that could happen before.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make a separate \"Log\" menu\n\nInstead o fhaving everything in the \"File\" menu, make a separate menu\nfor things that are very much specific about divelogs, rather than\n\"generic\" things like open/save/import.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Reinstate the main window title\n\nIt got removed by some of my overly aggressive cleanup in commit\nfefcbf125e89 (\"Remove dive info frame\") because the dive info frame\ninitialization also initialized the main window title..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Switch the dive list and dive profile panes around\n\nIt looks better this way, I think.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Hacky hard-coded font for dive list entries\n\nThis really is too wrong for words, but I do think the dive list may\nlook better with a smaller font.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make helper function for creating TreeView columns in the dive list\n\nLet's not repeat the boiler-plate code more than necessary.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add cylinder description to dive list\n\nAnd I *really* would want to make the dive list be a ComboBox or\nsomething like that, rather than a ListView.  I need to really\nunderstand those things, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn the rest of the duplicate string fields to use render functions\n\nSo instead of having a depth field (in mm) for sorting, and the text\nfield that contains the same thing in text, we now have all the fields\nwe use in \"native\" format, and we just render them as text dynamically.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use renderer function for divelist depth field too\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a renderer function on the date field\n\nInstead of creatign an extra column containing the date text, use a\nrenderer function to create the text dynamically.\n\nJust the date right now, but we'll do them all this way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops, fix typo. EAN, not EAD\n\nTypo turned EAN (Enriched Air Nitrox) to EAD.  Which does mean something\ntoo, just to confuse people - but while it's still nitrox-related, it's\nentirely the wrong thing (Equivalent Air Depth).  I don't think anybody\nwould ever care to see *that*. With computers, why would you care?\n\nAnyway, Dirk noticed it, and suggested I just use O2% instead.  It's not\nlike EAN is all that readable either.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the divelist when dive info changes\n\nThis flushes the dive changes to the dive list, the way the old dive\ninfo frame would update as you update dive fields.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add air usage calculations to dive list\n\nHey, now you can sort your dives by how good your SAC is.  Which sounds\nmore useful than it probably actually is.  But maybe you can see\npatterns in what makes your SAC suck..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add location to divelist too\n\nSure, it's visible elsewhere, but this way you can search and sort for\nit, and see several entries at once.  So again, having it visible in the\ndive list is a good thing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up divelist generation some more\n\n.. and make the date string much more readable, now that we aren't\nactually size-constrained any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start filling in temperature and nitrox data in dive list\n\nStill more to go, but it's slowly fleshing out..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add temp/nitrox/sac entries to divelist\n\nThis doesn't really fill them, it just adds them to the possible\nentries.  I'll get to it later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the pane split be vertical rather than horizontal\n\nOk, this makes that dive list look empty and ugly, but as mentioned, we\nreally should start filling it with all the useful information that we\ncan sort by, like temperature and air use.\n\nAnd even stuff that might not make sense to sort by (would you want to\nsort by cylinder size or name? Or by nitrox percentage) could still be\n*shown* in the list fairly naturally.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove dive info frame\n\nIt has always been problematic, and I've been moving things in and out\nof it.\n\nAnd it just isn't a very powerful widget.  You can't *do* anything with\nit.  The information it shows you may be useful, but the core stuff\nalready shows up in the dive list.\n\nAnd the dive list is actually a much superior widget over that static\ndive info frame.  The information that shows up in the dive list can be\nsorted by column, for example.\n\nSo when we show temperatures or SAC numbers in the dive info frame,\nthat's actually a very bad place to show them: we would be much better\noff showing it in the dive list, and then we could sort by SAC or by\ntemperature.\n\nIn other words: just remove the thing.  Instead, plan to extend the dive\nlist to contain all the information.  That will probably mean that we\nneed to change the current pane widget to be a vertical pane, rather\nthan a horizontal one, but what's wrong with that?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the divelist column naming clearer\n\nCurrently we use random hard-coded integers, and it's not always clear\nwhat is going on.  Make it much more explicit with an enumeration of the\ndifferent divelist columns.\n\nAnd change the column order to make it more logical, and make sure we\nactually catch all uses while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Dirk can't count to ten\n\nThat's ok, Dirk. I've got your back.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Put the dive number and location in the window title bar\n\nI suspect the \"info\" area is better used for actual values, so move the\ndive location into the window title instead (using date if no location\ninfo), and title the info frame with date and time.\n\nThis just means that the date/time gets removed from inside the frame:\nwe may want to put air consumption info in there instead?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak plot scaling a bit\n\nChange the duration max rounding as noted by Dirk, and move the air\nconsumption down further towards the bottom right corner.  In\nparticular, I make the text positions not scale with the window size,\npurely by the size of the text.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use plot_info for final remaining temperature and pressure data plots too\n\nOk, this is pretty much it now.  Instead of having various random checks\nfor \"is the time of the sample past the end of the dive\" hacks, we not\nplot all graphs from the cleaned-up plot_info structure instead of the\nraw samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot pressure data based on 'struct plot_info' rather than raw dive data\n\nFurther movement to using the sanitized and cleaned-up plot info rather\nthan the raw data.\n\nThe raw dive data contains samples from the end of the dive that we\ndon't want to drop, but that we also don't want to actually use for\nplotting the dive.  So the eventual end goal here is to not ever use the\nraw dive samples directly for plotting, but use the diveplot data that\nwe have analyzed for min/max (properly ignoring final entries) etc.\n\nThere's still some data that we take from the samples when plotting, but\nit's getting rarer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do min/max pressure and temperature based on the non-surface data\n\nDo the min/max calculations only *after* we have removed the extra\nsurface events at the end.\n\nThe Uemis data in particular has a lot of surface events after the dive,\nand we don't really want to take them into account since we won't be\nplotting them anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot temperature info using 'struct plot_info' rather than the raw dive samples\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start using 'plot_info' more for dive-time limits\n\n.. I'll want to move pressure limit calculations into the 'plot_info',\nso that we can do several passes of analysis and change dive limits etc\nwithout having to actually modify the dive data itself (or add new\nfields to 'struct dive' just for plotting).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do libdivecomputer imports in a separate thread\n\nThis is the hackiest thing ever, unless you count the previous code that\nwas even hackier (and just called the gtk main routine at random\nplaces).\n\nThe libdivecomputer library is not really set up to be part of the gtk\nmain loop, and cannot afford (for example) to have lots of mainloop\nevents while it's parsing.  Some dive computers are very timing\nsensitive for the communication.\n\nSo just start a thread for doing the libdivecomputer stuff, and just\ncontinually call the gtk main loop while that thread is running.  I'm\nsure we could actually use some gtk signalling thing to make the thread\nexit do the right thing, but instead we just poll the status every\n100ms.\n\nI did say it was hacky.  It does seem to work, though.  No more\ntemporary graying out of the windows when they don't react in a timely\nmanner because libdivecomputer does some blocking operation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Support gps coordinates for the location info\n\nSadly, no way to show them yet.  But it would be nice to let people\nenter them (and it would be doubly nice to have a dive computer that\ndoes it at the surface), and then perhaps just do the \"point browser at\ngoogle maps\" thing.\n\nSaving/parsing tested by hand-feeding the location of Enenui (Molokini\nCrater) from google maps by hand into my divelog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename the project 'subsurface'\n\nI never really liked 'diveclog' as a name - it's not like the C part is\nall that important.  And while I could try to just make up another slang\nword for despicable person (in the tradition of naming all my projects\nafter myself), I just can't see it.\n\nSo let's just call it \"subsurface\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Flush any pending changes at notebook 'switch-page' time\n\nDirk points out that equipment changes (cylinder size etc) do not cause\na proper repaint of the dive profile with new SAC information.  The\nreason? We haven't flushed the changes when the notebook changes from\nthe equipment page to the dive profile page.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> I'm trying to figure something out that prints reasonably..\n\nI'll get there.  Shrink it down a bit, start adding notes and location,\nand maybe put three per page. That might work.\n\n.. or maybe I should just take a look at how others have done this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the printout look different\n\nNot *better* mint you. Just different.\n\nI suck at graphs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the capability to print a dive profile\n\nOk, this is the ugliest f*&$ing printout I have ever seen in my life,\nbut think of it as a \"the concept of printing works\" commit, and you'll\nbe able to hold your lunch down and not gouge out your eyeballs with a\nspoon.  Maybe.\n\nI'm just doing the cairo display as-is for the printout, which is a\nseriously bad idea.  I need to not try to do colors etc, and instead of\nhaving white lines on a black background I just need to make thelines be\nblack on white paper.\n\nBut that would involve actually changing the current \"plot()\" routine,\nwhich is against the point of the exercise right now.  This really is\njust a demonstration of how to add printing capabilities.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add divemaster/buddy field and text entry\n\nI have it in some of my notes, and Dirk seems to fill that in too, so\nlet's just show it, save it, and allow editing of it..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Separate the notion of creating the cylinder widgets from showing them\n\nNow we always create the MAX_CYLINDER sets of cylinder widgets.  But we\ndon't actually pack them into the frame - that's a separate phase.\n\nRight now we still do the stupid \"always just pack two cylinders\" thing,\nbut the idea is that we can pack just as many as the dive needs on a\nper-dive basis.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make multiple cylinders actually work\n\nThis just always shows two cylinders, which is obviously bogus, but it's\na good test-case for the multi-cylinder case.\n\nI need to figure out how to dynamically show the right number of\ncylinders, but that also involves the notion of adding a cylinder in\norder to fill out information that didn't use to exist.\n\nThat's lower priority - now the infrastructure seems to be there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> More work on abstracting the gtk cylinder widget thing\n\nOk, now we have an array of them, and most of the time we pass the right\npointer back and forth.\n\nThere's still a couple of places that hardcode \"gtk_cylinder[0]\" as the\ndata, but by now they are mostly things that should iterate over all the\ncylinders.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start abstracting out the cylinder equipment widgets\n\nCreate a \"struct cylinder_widget\" so that when we handle multiple\ncylinders, we can match them up with the actual cylinder data;\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Always pack the widgets into boxes, not frames\n\nLet's try to be consistent about this.  Make the parent of each widget\nbe a box.  Maybe the frames come with boxes, but since I have no clue\nabout gtk, I'm going to just always create them by hand.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a checkbox for nitrox settings\n\nGrey out the nitrox value unless the user explicitly checks the checkbox.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use round line noins and caps\n\nIt doesn't really make much of a difference, but it can be visible\nespecially with lots of tight samples.  Miter joins really look horrible\nfor acute angles.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Label the temperature graph\n\nOooh, pretty.\n\nOr not.  The temperature graph is usually ugly as hell, but Dirk has the\ncool dive computer with lots and lots of temperature readings.  Which\nmakes the graph a pretty graph, rather than a butt-ugly staircase like\nmine.\n\nNext time: get a dive computer with an OLED screen, and that can draw\npretty temperature graphs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot a sick kind of temperature curve\n\n.. without the actual text, because I'm a \"random plots that cannot\nactually be interpreted\" kind of guy.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the README about libdivecomputer\n\nThe build instructions are in the git commit log too, but let's make\nthem a bit easier to find.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save empty cylinder descriptions in the xml\n\nThey get created when the equipment thing doesn't have a name for the\ncylinder, but we don't want to save that lack of description.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do some basic sanity testing on the libdivecomputer gasmix data\n\nIt's quite often obvious crap for the \"doesn't exist\" or \"plain air\" case.\n\nSo if it's reporting 100% O2, we just ignore it.  Sure, it could be\nright, but for the dives I have I know it's just libdivecomputer being\nwrong.\n\nSame goes for obvious crap like 255% Helium.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-3.15/drivers' of git://git.kernel.dk/linux-block\n\nPull block driver update from Jens Axboe:\n \"On top of the core pull request, here's the pull request for the\n  driver related changes for 3.15.  It contains:\n\n   - Improvements for msi-x registration for block drivers (mtip32xx,\n     skd, cciss, nvme) from Alexander Gordeev.\n\n   - A round of cleanups and improvements for drbd from Andreas\n     Gruenbacher and Rashika Kheria.\n\n   - A round of clanups and improvements for bcache from Kent.\n\n   - Removal of sleep_on() and friends in DAC960, ataflop, swim3 from\n     Arnd Bergmann.\n\n   - Bug fix for a bug in the mtip32xx async completion code from Sam\n     Bradshaw.\n\n   - Bug fix for accidentally bouncing IO on 32-bit platforms with\n     mtip32xx from Felipe Franciosi\"\n\n* 'for-3.15/drivers' of git://git.kernel.dk/linux-block: (103 commits)\n  bcache: remove nested function usage\n  bcache: Kill bucket->gc_gen\n  bcache: Kill unused freelist\n  bcache: Rework btree cache reserve handling\n  bcache: Kill btree_io_wq\n  bcache: btree locking rework\n  bcache: Fix a race when freeing btree nodes\n  bcache: Add a real GC_MARK_RECLAIMABLE\n  bcache: Add bch_keylist_init_single()\n  bcache: Improve priority_stats\n  bcache: Better alloc tracepoints\n  bcache: Kill dead cgroup code\n  bcache: stop moving_gc marking buckets that can't be moved.\n  bcache: Fix moving_pred()\n  bcache: Fix moving_gc deadlocking with a foreground write\n  bcache: Fix discard granularity\n  bcache: Fix another bug recovering from unclean shutdown\n  bcache: Fix a bug recovering from unclean shutdown\n  bcache: Fix a journalling reclaim after recovery bug\n  bcache: Fix a null ptr deref in journal replay\n  ... Merge branch 'for-3.15/core' of git://git.kernel.dk/linux-block\n\nPull core block layer updates from Jens Axboe:\n \"This is the pull request for the core block IO bits for the 3.15\n  kernel.  It's a smaller round this time, it contains:\n\n   - Various little blk-mq fixes and additions from Christoph and\n     myself.\n\n   - Cleanup of the IPI usage from the block layer, and associated\n     helper code.  From Frederic Weisbecker and Jan Kara.\n\n   - Duplicate code cleanup in bio-integrity from Gu Zheng.  This will\n     give you a merge conflict, but that should be easy to resolve.\n\n   - blk-mq notify spinlock fix for RT from Mike Galbraith.\n\n   - A blktrace partial accounting bug fix from Roman Pen.\n\n   - Missing REQ_SYNC detection fix for blk-mq from Shaohua Li\"\n\n* 'for-3.15/core' of git://git.kernel.dk/linux-block: (25 commits)\n  blk-mq: add REQ_SYNC early\n  rt,blk,mq: Make blk_mq_cpu_notify_lock a raw spinlock\n  blk-mq: support partial I/O completions\n  blk-mq: merge blk_mq_insert_request and blk_mq_run_request\n  blk-mq: remove blk_mq_alloc_rq\n  blk-mq: don't dump CPU -> hw queue map on driver load\n  blk-mq: fix wrong usage of hctx->state vs hctx->flags\n  blk-mq: allow blk_mq_init_commands() to return failure\n  block: remove old blk_iopoll_enabled variable\n  blktrace: fix accounting of partially completed requests\n  smp: Rename __smp_call_function_single() to smp_call_function_single_async()\n  smp: Remove wait argument from __smp_call_function_single()\n  watchdog: Simplify a little the IPI call\n  smp: Move __smp_call_function_single() below its safe version\n  smp: Consolidate the various smp_call_function_single() declensions\n  smp: Teach __smp_call_function_single() to check for offline cpus\n  smp: Remove unused list_head from csd\n  smp: Iterate functions through llist_for_each_entry_safe()\n  block: Stop abusing rq->csd.list in blk-softirq\n  block: Remove useless IPI struct initialization\n  ... Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull first round of SCSI updates from James Bottomley:\n \"This patch consists of the usual driver updates (megaraid_sas,\n  scsi_debug, qla2xxx, qla4xxx, lpfc, bnx2fc, be2iscsi, hpsa, ipr) plus\n  an assortment of minor fixes and the first precursors of SCSI-MQ (the\n  code path simplifications) and the bug fix for the USB oops on remove\n  (which involves an infrastructure change, so is sent via the main tree\n  with a delayed backport after a cycle in which it is shown to\n  introduce no new bugs)\"\n\n* tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (196 commits)\n  [SCSI] sd: Quiesce mode sense error messages\n  [SCSI] add support for per-host cmd pools\n  [SCSI] simplify command allocation and freeing a bit\n  [SCSI] megaraid: simplify internal command handling\n  [SCSI] ses: Use vpd information from scsi_device\n  [SCSI] Add EVPD page 0x83 and 0x80 to sysfs\n  [SCSI] Return VPD page length in scsi_vpd_inquiry()\n  [SCSI] scsi_sysfs: Implement 'is_visible' callback\n  [SCSI] hpsa: update driver version to 3.4.4-1\n  [SCSI] hpsa: fix bad endif placement in RAID 5 mapper code\n  [SCSI] qla2xxx: Fix build errors related to invalid print fields on some architectures.\n  [SCSI] bfa: Replace large udelay() with mdelay()\n  [SCSI] vmw_pvscsi: Some improvements in pvscsi driver.\n  [SCSI] vmw_pvscsi: Add support for I/O requests coalescing.\n  [SCSI] vmw_pvscsi: Fix pvscsi_abort() function.\n  [SCSI] remove deprecated IRQF_DISABLED from SCSI\n  [SCSI] bfa: Updating Maintainers email ids\n  [SCSI] ipr: Add new CCIN definition for Grand Canyon support\n  [SCSI] ipr: Format HCAM overlay ID 0x21\n  [SCSI] ipr: Use pci_enable_msi_range() and pci_enable_msix_range()\n  ... Merge tag 'usb-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB patches from Greg KH:\n \"Here's the big USB pull request for 3.15-rc1.\n\n  The normal set of patches, lots of controller driver updates, and a\n  smattering of individual USB driver updates as well.\n\n  All have been in linux-next for a while\"\n\n* tag 'usb-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (249 commits)\n  xhci: Transition maintainership to Mathias Nyman.\n  USB: disable reset-resume when USB_QUIRK_RESET is set\n  USB: unbind all interfaces before rebinding any\n  usb: phy: Add ulpi IDs for SMSC USB3320 and TI TUSB1210\n  usb: gadget: tcm_usb_gadget: stop format strings\n  usb: gadget: f_fs: add missing spinlock and mutex unlock\n  usb: gadget: composite: switch over to ERR_CAST()\n  usb: gadget: inode: switch over to memdup_user()\n  usb: gadget: f_subset: switch over to PTR_RET\n  usb: gadget: lpc32xx_udc: fix wrong clk_put() sequence\n  USB: keyspan: remove dead debugging code\n  USB: serial: add missing newlines to dev_<level> messages.\n  USB: serial: add missing braces\n  USB: serial: continue to write on errors\n  USB: serial: continue to read on errors\n  USB: serial: make bulk_out_size a lower limit\n  USB: cypress_m8: fix potential scheduling while atomic\n  devicetree: bindings: document lsi,zevio-usb\n  usb: chipidea: add support for USB OTG controller on LSI Zevio SoCs\n  usb: chipidea: imx: Use dev_name() for ci_hdrc name to distinguish USBs\n  ... Merge tag 'tty-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial driver update from Greg KH:\n \"Here's the big tty/serial driver update for 3.15-rc1.\n\n  Nothing major, a number of serial driver updates and a few tty core\n  fixes as well.\n\n  All have been in linux-next for a while\"\n\n* tag 'tty-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty: (71 commits)\n  tty/serial: omap: empty the RX FIFO at the end of half-duplex TX\n  tty/serial: omap: fix RX interrupt enable/disable in half-duplex TX\n  serial: sh-sci: Neaten dev_<level> uses\n  serial: sh-sci: Replace hardcoded 3 by UART_PM_STATE_OFF\n  serial: sh-sci: Add more register documentation\n  serial: sh-sci: Remove useless casts\n  serial: sh-sci: Replace printk() by pr_*()\n  serial_core: Avoid NULL pointer dereference in uart_close()\n  serial_core: Get a reference for port->tty in uart_remove_one_port()\n  serial: clps711x: Give a chance to perform useful tasks during wait loop\n  serial_core: Grammar s/ports/port's/\n  serial_core: Spelling s/contro/control/\n  serial: efm32: properly namespace location property\n  serial: max310x: Add missing #include <linux/uaccess.h>\n  synclink: fix info leak in ioctl\n  serial: 8250: Clean up the locking for -rt\n  serial: 8250_pci: change BayTrail default uartclk\n  serial: 8250_pci: more BayTrail error-free bauds\n  serial: sh-sci: Add missing call to uart_remove_one_port() in failure path\n  serial_core: Unregister console in uart_remove_one_port()\n  ... Merge tag 'staging-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver updates from Greg KH:\n \"Here's the huge drivers/staging/ update for 3.15-rc1.\n\n  Loads of cleanup fixes, a few drivers removed, and some new ones\n  added.\n\n  All have been in linux-next for a while\"\n\n* tag 'staging-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging: (1375 commits)\n  staging: xillybus: XILLYBUS_PCIE depends on PCI_MSI\n  staging: xillybus: Added \"select CRC32\" for XILLYBUS in Kconfig\n  staging: comedi: poc: remove obsolete driver\n  staging: unisys: replace kzalloc/kfree with UISMALLOC/UISFREE\n  staging: octeon-usb: prevent memory corruption\n  staging: usbip: fix line over 80 characters\n  staging: usbip: fix quoted string split across lines\n  Staging: unisys: Remove RETINT macro\n  Staging: unisys: Remove FAIL macro\n  Staging: unisys: Remove RETVOID macro\n  Staging: unisys: Remove RETPTR macro\n  Staging: unisys: Remove RETBOOL macro\n  Staging: unisys: Remove FAIL_WPOSTCODE_1 macro\n  Staging: unisys: Cleanup macros to get rid of goto statements\n  Staging: unisys: include: Remove unused macros from timskmod.h\n  staging: dgap: fix the rest of the checkpatch warnings in dgap.c\n  Staging: bcm: Remove unnecessary parentheses\n  staging: wlags49_h2: Delete unnecessary braces\n  staging: wlags49_h2: Do not use assignment in if condition\n  staging: wlags49_h2: Enclose macro in a do-while loop\n  ... Merge tag 'driver-core-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core and sysfs updates from Greg KH:\n \"Here's the big driver core / sysfs update for 3.15-rc1.\n\n  Lots of kernfs updates to make it useful for other subsystems, and a\n  few other tiny driver core patches.\n\n  All have been in linux-next for a while\"\n\n* tag 'driver-core-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (42 commits)\n  Revert \"sysfs, driver-core: remove unused {sysfs|device}_schedule_callback_owner()\"\n  kernfs: cache atomic_write_len in kernfs_open_file\n  numa: fix NULL pointer access and memory leak in unregister_one_node()\n  Revert \"driver core: synchronize device shutdown\"\n  kernfs: fix off by one error.\n  kernfs: remove duplicate dir.c at the top dir\n  x86: align x86 arch with generic CPU modalias handling\n  cpu: add generic support for CPU feature based module autoloading\n  sysfs: create bin_attributes under the requested group\n  driver core: unexport static function create_syslog_header\n  firmware: use power efficient workqueue for unloading and aborting fw load\n  firmware: give a protection when map page failed\n  firmware: google memconsole driver fixes\n  firmware: fix google/gsmi duplicate efivars_sysfs_init()\n  drivers/base: delete non-required instances of include <linux/init.h>\n  kernfs: fix kernfs_node_from_dentry()\n  ACPI / platform: drop redundant ACPI_HANDLE check\n  kernfs: fix hash calculation in kernfs_rename_ns()\n  kernfs: add CONFIG_KERNFS\n  sysfs, kobject: add sysfs wrapper for kernfs_enable_ns()\n  ... Merge tag 'char-misc-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver patches from Greg KH:\n \"Here's the big char/misc driver updates for 3.15-rc1.\n\n  Lots of various things here, including the new mcb driver subsystem.\n\n  All of these have been in linux-next for a while\"\n\n* tag 'char-misc-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (118 commits)\n  extcon: Move OF helper function to extcon core and change function name\n  extcon: of: Remove unnecessary function call by using the name of device_node\n  extcon: gpio: Use SIMPLE_DEV_PM_OPS macro\n  extcon: palmas: Use SIMPLE_DEV_PM_OPS macro\n  mei: don't use deprecated DEFINE_PCI_DEVICE_TABLE macro\n  mei: amthif: fix checkpatch error\n  mei: client.h fix checkpatch errors\n  mei: use cl_dbg where appropriate\n  mei: fix Unnecessary space after function pointer name\n  mei: report consistently copy_from/to_user failures\n  mei: drop pr_fmt macros\n  mei: make me hw headers private to me hw.\n  mei: fix memory leak of pending write cb objects\n  mei: me: do not reset when less than expected data is received\n  drivers: mcb: Fix build error discovered by 0-day bot\n  cs5535-mfgpt: Simplify dependencies\n  spmi: pm: drop bus-level PM suspend/resume routines\n  spmi: pmic_arb: make selectable on ARCH_QCOM\n  Drivers: hv: vmbus: Increase the limit on the number of pfns we can handle\n  pch_phub: Report error writing MAC back to user\n  ... Merge tag 'sound-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound updates from Takashi Iwai:\n \"There have been lots of changes in ALSA core, HD-audio and ASoC, also\n  most of PCI drivers touched by conversions of printks.  All these\n  resulted in a high volume and wide ranged patch sets in this release.\n  Many changes are fairly trivial, but also lots of nice cleanups and\n  refactors.  There are a few new drivers, most notably, the Intel\n  Haswell and Baytrail ASoC driver.\n\n  Core changes:\n   - A bit modernization; embed the device struct into snd_card struct,\n     so that it may be referred from the beginning.  A new\n     snd_card_new() function is introduced for that, and all drivers\n     have been converted.\n\n   - Simplification in the device management code in ALSA core; now\n     managed by a simple priority list instead\n\n   - Converted many kernel messages to use the standard dev_err() & co;\n     this would be the pretty visible difference, especially for\n     HD-audio.\n\n  HD-audio:\n   - Conexant codecs use the auto-parser as default now; the old static\n     code still remains in case of regressions.  Some old quirks have\n     been rewritten with the fixups for auto-parser.\n\n   - C-Media codecs also use the auto-parser as default now, too.\n\n   - A device struct is assigned to each HD-audio codec, and the\n     formerly hwdep attributes are accessible over the codec sysfs, too.\n     hwdep attributes still remain for compatibility.\n\n   - Split the PCI-specific stuff for HD-audio controller into a\n     separate module, ane make a helper module for the generic\n     controller driver.  This is a preliminary change for supporting\n     Tegra HDMI controller in near future, which slipped from 3.15\n     merge.\n\n   - Device-specific fixes: mute LED support for Lenovo Ideapad, mic LED\n     fix for HP laptops, more ASUS subwoofer quirks, yet more Dell\n     laptop headset quirks\n\n   - Make the HD-audio codec response a bit more robust\n\n   - A few improvements on Realtek ALC282 / 283 about the pop noises\n\n   - A couple of Intel HDMI fixes\n\n  ASoC:\n   - Lots of cleanups for enumerations; refactored lots of error prone\n     original codes to use more modern APIs\n\n   - Elimination of the ASoC level wrappers for I2C and SPI moving us\n     closer to converting to regmap completely and avoiding some\n     randconfig hassle\n\n   - Provide both manually and transparently locked DAPM APIs rather\n     than a mix of the two fixing some concurrency issues\n\n   - Start converting CODEC drivers to use separate bus interface\n     drivers rather than having them all in one file helping avoid\n     dependency issues\n\n   - DPCM support for Intel Haswell and Bay Trail platforms, lots of\n     fixes\n\n   - Lots of work on improvements for simple-card, DaVinci and the\n     Renesas rcar drivers.\n\n   - New drivers for Analog Devices ADAU1977, TI PCM512x and parts of\n     the CSR SiRF SoC, TLV320AIC31XXX, Armada 370 DB, Cirrus cs42xx8\n\n   - Fixes for the simple-card DAI format DT mess\n\n   - DT support for a couple more devices.\n\n   - Use of the tdm_slot mapping in a few drivers\n\n  Others:\n   - Support of reset_resume callback for improved S4 in USB-audio\n     driver; the device with boot quirks have been little tested, which\n     we need to watch out in this development cycle\n\n   - Add PM support for ICE1712 driver (finally!); it's still pretty\n     partial support, only for M-Audio devices\"\n\n* tag 'sound-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (610 commits)\n  ALSA: ice1712: Add suspend support for M-Audio ICE1712-based cards\n  ALSA: ice1712: add suspend support for ICE1712 chip\n  ALSA: hda - Enable beep for ASUS 1015E\n  ALSA: asihpi: fix some indenting in snd_card_asihpi_pcm_new()\n  ALSA: hda - add headset mic detect quirks for three Dell laptops\n  ASoC: tegra: move AC97 clock handling to the machine driver\n  ASoC: simple-card: Handle many DAI links\n  ASoC: simple-card: Add DT documentation for multi-DAI links\n  ASoC: simple-card: dynamically allocate the DAI link and properties\n  ASoC: imx-ssi: Add .xlate_tdm_slot_mask() support.\n  ASoC: fsl-esai: Add .xlate_tdm_slot_mask() support.\n  ASoC: fsl-utils: Add fsl_asoc_xlate_tdm_slot_mask() support.\n  ASoC: core: remove the 'of_' prefix of of_xlate_tdm_slot_mask.\n  ASoC: rcar: subnode tidyup for renesas,rsnd.txt\n  ASoC: Remove name_prefix unset during DAI link init hack\n  ALSA: hda - Inform the unexpectedly ignored pins by auto-parser\n  ASoC: rcar: bugfix: it cares about the non-src case\n  ARM: bockw: fixup SND_SOC_DAIFMT_CBx_CFx flags\n  ASoC: pcm: Drop incorrect double/extra frees\n  ASoC: mfld_machine: Fix compile error\n  ... Merge tag 'pci-v3.15-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI changes from Bjorn Helgaas:\n \"Enumeration\n   - Increment max correctly in pci_scan_bridge() (Andreas Noever)\n   - Clarify the \"scan anyway\" comment in pci_scan_bridge() (Andreas Noever)\n   - Assign CardBus bus number only during the second pass (Andreas Noever)\n   - Use request_resource_conflict() instead of insert_ for bus numbers (Andreas Noever)\n   - Make sure bus number resources stay within their parents bounds (Andreas Noever)\n   - Remove pci_fixup_parent_subordinate_busnr() (Andreas Noever)\n   - Check for child busses which use more bus numbers than allocated (Andreas Noever)\n   - Don't scan random busses in pci_scan_bridge() (Andreas Noever)\n   - x86: Drop pcibios_scan_root() check for bus already scanned (Bjorn Helgaas)\n   - x86: Use pcibios_scan_root() instead of pci_scan_bus_with_sysdata() (Bjorn Helgaas)\n   - x86: Use pcibios_scan_root() instead of pci_scan_bus_on_node() (Bjorn Helgaas)\n   - x86: Merge pci_scan_bus_on_node() into pcibios_scan_root() (Bjorn Helgaas)\n   - x86: Drop return value of pcibios_scan_root() (Bjorn Helgaas)\n\n  NUMA\n   - x86: Add x86_pci_root_bus_node() to look up NUMA node from PCI bus (Bjorn Helgaas)\n   - x86: Use x86_pci_root_bus_node() instead of get_mp_bus_to_node() (Bjorn Helgaas)\n   - x86: Remove mp_bus_to_node[], set_mp_bus_to_node(), get_mp_bus_to_node() (Bjorn Helgaas)\n   - x86: Use NUMA_NO_NODE, not -1, for unknown node (Bjorn Helgaas)\n   - x86: Remove acpi_get_pxm() usage (Bjorn Helgaas)\n   - ia64: Use NUMA_NO_NODE, not MAX_NUMNODES, for unknown node (Bjorn Helgaas)\n   - ia64: Remove acpi_get_pxm() usage (Bjorn Helgaas)\n   - ACPI: Fix acpi_get_node() prototype (Bjorn Helgaas)\n\n  Resource management\n   - i2o: Fix and refactor PCI space allocation (Bjorn Helgaas)\n   - Add resource_contains() (Bjorn Helgaas)\n   - Add %pR support for IORESOURCE_UNSET (Bjorn Helgaas)\n   - Mark resources as IORESOURCE_UNSET if we can't assign them (Bjorn Helgaas)\n   - Don't clear IORESOURCE_UNSET when updating BAR (Bjorn Helgaas)\n   - Check IORESOURCE_UNSET before updating BAR (Bjorn Helgaas)\n   - Don't try to claim IORESOURCE_UNSET resources (Bjorn Helgaas)\n   - Mark 64-bit resource as IORESOURCE_UNSET if we only support 32-bit (Bjorn Helgaas)\n   - Don't enable decoding if BAR hasn't been assigned an address (Bjorn Helgaas)\n   - Add \"weak\" generic pcibios_enable_device() implementation (Bjorn Helgaas)\n   - alpha, microblaze, sh, sparc, tile: Use default pcibios_enable_device() (Bjorn Helgaas)\n   - s390: Use generic pci_enable_resources() (Bjorn Helgaas)\n   - Don't check resource_size() in pci_bus_alloc_resource() (Bjorn Helgaas)\n   - Set type in __request_region() (Bjorn Helgaas)\n   - Check all IORESOURCE_TYPE_BITS in pci_bus_alloc_from_region() (Bjorn Helgaas)\n   - Change pci_bus_alloc_resource() type_mask to unsigned long (Bjorn Helgaas)\n   - Log IDE resource quirk in dmesg (Bjorn Helgaas)\n   - Revert \"[PATCH] Insert GART region into resource map\" (Bjorn Helgaas)\n\n  PCI device hotplug\n   - Make check_link_active() non-static (Rajat Jain)\n   - Use link change notifications for hot-plug and removal (Rajat Jain)\n   - Enable link state change notifications (Rajat Jain)\n   - Don't disable the link permanently during removal (Rajat Jain)\n   - Don't check adapter or latch status while disabling (Rajat Jain)\n   - Disable link notification across slot reset (Rajat Jain)\n   - Ensure very fast hotplug events are also processed (Rajat Jain)\n   - Add hotplug_lock to serialize hotplug events (Rajat Jain)\n   - Remove a non-existent card, regardless of \"surprise\" capability (Rajat Jain)\n   - Don't turn slot off when hot-added device already exists (Yijing Wang)\n\n  MSI\n   - Keep pci_enable_msi() documentation (Alexander Gordeev)\n   - ahci: Fix broken single MSI fallback (Alexander Gordeev)\n   - ahci, vfio: Use pci_enable_msi_range() (Alexander Gordeev)\n   - Check kmalloc() return value, fix leak of name (Greg Kroah-Hartman)\n   - Fix leak of msi_attrs (Greg Kroah-Hartman)\n   - Fix pci_msix_vec_count() htmldocs failure (Masanari Iida)\n\n  Virtualization\n   - Device-specific ACS support (Alex Williamson)\n\n  Freescale i.MX6\n   - Wait for retraining (Marek Vasut)\n\n  Marvell MVEBU\n   - Use Device ID and revision from underlying endpoint (Andrew Lunn)\n   - Fix incorrect size for PCI aperture resources (Jason Gunthorpe)\n   - Call request_resource() on the apertures (Jason Gunthorpe)\n   - Fix potential issue in range parsing (Jean-Jacques Hiblot)\n\n  Renesas R-Car\n   - Check platform_get_irq() return code (Ben Dooks)\n   - Add error interrupt handling (Ben Dooks)\n   - Fix bridge logic configuration accesses (Ben Dooks)\n   - Register each instance independently (Magnus Damm)\n   - Break out window size handling (Magnus Damm)\n   - Make the Kconfig dependencies more generic (Magnus Damm)\n\n  Synopsys DesignWare\n   - Fix RC BAR to be single 64-bit non-prefetchable memory (Mohit Kumar)\n\n  Miscellaneous\n   - Remove unused SR-IOV VF Migration support (Bjorn Helgaas)\n   - Enable INTx if BIOS left them disabled (Bjorn Helgaas)\n   - Fix hex vs decimal typo in cpqhpc_probe() (Dan Carpenter)\n   - Clean up par-arch object file list (Liviu Dudau)\n   - Set IORESOURCE_ROM_SHADOW only for the default VGA device (Sander Eikelenboom)\n   - ACPI, ARM, drm, powerpc, pcmcia, PCI: Use list_for_each_entry() for bus traversal (Yijing Wang)\n   - Fix pci_bus_b() build failure (Paul Gortmaker)\"\n\n* tag 'pci-v3.15-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (108 commits)\n  Revert \"[PATCH] Insert GART region into resource map\"\n  PCI: Log IDE resource quirk in dmesg\n  PCI: Change pci_bus_alloc_resource() type_mask to unsigned long\n  PCI: Check all IORESOURCE_TYPE_BITS in pci_bus_alloc_from_region()\n  resources: Set type in __request_region()\n  PCI: Don't check resource_size() in pci_bus_alloc_resource()\n  s390/PCI: Use generic pci_enable_resources()\n  tile PCI RC: Use default pcibios_enable_device()\n  sparc/PCI: Use default pcibios_enable_device() (Leon only)\n  sh/PCI: Use default pcibios_enable_device()\n  microblaze/PCI: Use default pcibios_enable_device()\n  alpha/PCI: Use default pcibios_enable_device()\n  PCI: Add \"weak\" generic pcibios_enable_device() implementation\n  PCI: Don't enable decoding if BAR hasn't been assigned an address\n  PCI: Enable INTx in pci_reenable_device() only when MSI/MSI-X not enabled\n  PCI: Mark 64-bit resource as IORESOURCE_UNSET if we only support 32-bit\n  PCI: Don't try to claim IORESOURCE_UNSET resources\n  PCI: Check IORESOURCE_UNSET before updating BAR\n  PCI: Don't clear IORESOURCE_UNSET when updating BAR\n  PCI: Mark resources as IORESOURCE_UNSET if we can't assign them\n  ...\n\nConflicts:\n\tarch/x86/include/asm/topology.h\n\tdrivers/ata/ahci.c Merge tag 'edac_for_3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp\n\nPull EDAC updates from Borislav Petkov:\n \"A bunch of EDAC updates all over the place:\n\n   - Support for new AMD models, along with more graceful fallback for\n     unsupported hw.\n\n   - Bunch of fixes from SUSE accumulated from bug reports\n\n   - Misc other fixes and cleanups\"\n\n* tag 'edac_for_3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:\n  amd64_edac: Add support for newer F16h models\n  i7core_edac: Drop unused variable\n  i82875p_edac: Drop redundant call to pci_get_device()\n  amd8111_edac: Fix leaks in probe error paths\n  e752x_edac: Drop pvt->bridge_ck\n  MCE, AMD: Fix decoding module loading on unsupported hw\n  i5100_edac: Remove an unneeded condition in i5100_init_csrows()\n  sb_edac: Degrade log level for device registration\n  amd64_edac: Fix logic to determine channel for F15 M30h processors\n  edac/85xx: Remove deprecated IRQF_DISABLED\n  i3200_edac: Add a missing pci_disable_device() on the exit path\n  i5400_edac: Disable device when unloading module\n  e752x_edac: Simplify call to pci_get_device() Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon updates from Guenter Roeck:\n - New drivers for ADC128D818, LTC2945, LTC4260, and LTC4222\n - Added support for LTM4676 to ltc2978 driver\n - Converted several drivers to use devm_hwmon_device_register_with_groups\n - Various cleanup in several drivers\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging: (36 commits)\n  hwmon: (pmbus/ltc2978) Add support for LTM4676\n  hwmon: (pmbus/ltc2978) Add new chip ID for LTC2974\n  hwmon: Do not accept invalid name attributes\n  hwmon: (max6639) Use SIMPLE_DEV_PM_OPS macro\n  hwmon: (lm95245) Make temp2_crit_hyst read-only\n  hwmon: (lm95245) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (lm95245) Drop useless debug message\n  hwmon: (lm95245) Fix hysteresis temperatures\n  hwmon: (max6639) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (max6639) Introduce local dev variable, and reduce noisiness\n  hwmon: (max6650) Introduce local 'dev' variable\n  hwmon: (max6650) Drop error message after memory allocation failures\n  hwmon: (max6650) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (max6650) Rearrange code to no longer require forward declarations\n  hwmon: (ltc4215) Convert to devm_hwmon_device_register_with_groups\n  hwmon: (coretemp) Convert to use devm_hwmon_device_register_with_groups\n  hwmon: (coretemp) Allocate platform data with devm_kzalloc\n  hwmon: (coretemp) Use sysfs_create_group to create sysfs attributes\n  hwmon: (ltc4245) Remove devicetree conditionals\n  hwmon: (ltc4245) Drop debug messages\n  ... Merge git://www.linux-watchdog.org/linux-watchdog\n\nPull watchdog updates from Wim Van Sebroeck:\n \"This patchset contains:\n   - Various small clean-ups and fixes\n   - boot logic hanegs for mpc8xxx_wdt\n   - it87_wdt: Work around non-working CIR interrupts\n   - iTCO_wdt: Fix the parent device\n   - Kconfig dependencies\n   - simplification of code with devm_ioremap_resource() or\n     platform_driver_probe()\n   - conversion of xilinx watchdog driver to Generic watchdog Framework\n   - addition of extra functionality and devices for the xilinx watchdog\n     driver\n   - Addition of Tegra watchdog\"\n\n* git://www.linux-watchdog.org/linux-watchdog: (38 commits)\n  watchdog: Fix Elan SC520 dependencies\n  watchdog: ib700wdt: Use platform_driver_probe\n  watchdog: geodewdt: Use platform_driver_probe\n  watchdog: advantechwdt: Use platform_driver_probe\n  watchdog: acquirewdt: Use platform_driver_probe\n  watchdog: iTCO_wdt: Fix the parent device\n  watchdog: it87_wdt: Work around non-working CIR interrupts\n  watchdog: bcm281xx: Fix Kconfig dependency\n  watchdog: s3c2410_wdt: Check return value of clk_prepare_enable\n  watchdog: s3c2410_wdt: Remove unneeded initialization\n  watchdog: sunxi: Change compatibles\n  watchdog: orion: prepare new Dove DT Kconfig variable\n  watchdog: fix checkpatch warnings and error\n  watchdog: Add tegra watchdog\n  watchdog: xilinx: Remove no_timeout variable\n  watchdog: xilinx: Enable this driver for Zynq\n  watchdog: xilinx: Add missing binding\n  watchdog: xilinx: Use correct comment indentation\n  watchdog: xilinx: Use of_property_read_u32\n  watchdog: xilinx: Fix all printk messages\n  ... Merge tag 'spi-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi Updates from Mark Brown:\n \"A busy release for both cleanups and new drivers this time along with\n  further factoring out of replicated code into the core:\n\n   - Provide support in the core for DMA mapping transfers - essentially\n     all drivers weren't implementing this properly, now there's no\n     excuse.\n   - Dual and quad mode support for spidev.\n   - Fix handling of cs_change in the generic implementation.\n   - Remove the S3C_DMA code from the s3c64xx driver now that all the\n     platforms using it have been converted to dmaengine.\n   - Lots of improvements to the Renesas SPI controllers.\n   - Drivers for Allwinner A10 and A31, Qualcomm QUP and Xylinx xtfpga.\n   - Removal of the bitrotted ti-ssp driver\"\n\n* tag 'spi-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi: (199 commits)\n  spi: Fix handling of cs_change in core implementation\n  spi: bitbang: Make spi_bitbang_stop() return void\n  spi: mpc52xx: Convert to use bits_per_word_mask\n  spi: omap-100k: Fix memory leak\n  spi: dw: Don't call kfree for memory allocated by devm_kzalloc\n  spi: fsl-dspi: Fix memory leak\n  spi: omap-uwire: add missing iounmap\n  spi: clps711x: Convert to use master->max_speed_hz\n  spi: clps711x: Enable driver compilation with COMPILE_TEST\n  spi: omap-uwire: Remove full duplex check\n  spi: Do not require a completion\n  spi: topcliff-pch: Transform noisy message to dev_vdbg\n  spi: coldfire-qspi: Simplify the code to set register bits for transfer speed\n  spi: bcm63xx: Remove unused define for PFX\n  spi: efm32: use $vendor,$device scheme for compatible string\n  spi: clps711x: Remove <mach/hardware.h> dependency\n  spi: topcliff-pch: Properly unregister platform devices on probe() error paths\n  spi: fsl-espi: Remove unused bits_per_word variable in fsl_espi_bufs\n  spi: altera: Remove the code to get unused platform_data\n  spi: fsl-lib: Fix memory leak of pinfo\n  ... Merge tag 'regulator-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator updates from Mark Brown:\n \"This release has lots and lots of small cleanups and fixes in the\n  regulator subsystem, mainly cleaning up some bad patterns that got\n  duplicated in DT code, but otherwise very little of note outside of\n  the scope of the relevant drivers:\n\n   - Support for configuration of the initial state for gpio regulators\n     with multi-voltage support.\n   - Support for calling regulator_set_voltage() on fixed regulators.\n   - New drivers for Broadcom BCM590xx, Freescale pfuze200, Samsung\n     S2MPA01 & S2MPS11/4, some PWM controlled regulators found on some\n     ST boards and TI TPS65218\"\n\n* tag 'regulator-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator: (154 commits)\n  regulator: aat2870: Use regulator_map_voltage_ascend\n  regulator: st-pwm: Convert to get_voltage_sel\n  regulator: Add new driver for ST's PWM controlled voltage regulators\n  regulator: bcm590xx: Remove **rdev from struct bcm590xx_reg\n  regulator: bcm590xx: Make the modalias matches the driver name\n  regulator: s5m8767: Convert to use regulator_[enable|disable|is_enabled]_regmap\n  regulator: db8500-prcmu: Set 1.8V as a fixed voltage for vsmps2\n  regulator: s2mps11: Add missing of_node_put\n  regulator: s2mps11: Use of_get_child_by_name\n  Documentation: mfd: s2mps11: Document support for S2MPS14\n  regulator: s2mps11: Add set_suspend_disable for S2MPS14\n  regulator: s2mps11: Add support for S2MPS14 regulators\n  regulator: max8660: Fix brace alignment\n  regulator: dbx500: use seq_puts() instead of seq_printf()\n  regulator: dbx500-prcmu: Silence checkpatch warnings\n  regulator: anatop: Remove checking control_reg in [set|get]_voltage_sel\n  regulator: max8952: Silence checkpatch warning\n  regulator: max8925: Silence checkpatch warning\n  regulator: max8660: Silence checkpatch warnings\n  regulator: arizona-ldo1: Correct default regulator init_data\n  ... Merge tag 'regmap-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap\n\nPull regmap updates from Mark Brown:\n \"Quite a busy release for regmap this time around, the standout changes\n  are:\n\n   - A real implementation of regmap_multi_write() and a bypassed\n     version of it for use by drivers doing patch-like things with more\n     open coding for surrounding startup sequences.\n   - Support fast_io on bulk operations.\n   - Support split device binding and map initialisation for use by\n     devices required in early init (mainly system controllers).\n   - Fixes for some operations on maps with strides set.\n   - Export the value parsing operations to help generic code built on\n     top of the API.\n   - Support for MMIO regmaps with non-32 bit register sizes.\n\n  plus a few smaller fixes\"\n\n* tag 'regmap-v3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap: (22 commits)\n  regmap: mmio: Add regmap_mmio_regbits_check.\n  regmap: mmio: Add support for 1/2/8 bytes wide register address.\n  regmap: mmio: add regmap_mmio_{regsize, count}_check.\n  regmap: cache: Don't attempt to sync non-writeable registers\n  regmap: cache: Step by stride in default sync\n  regmap: Fix possible sleep-in-atomic in regmap_bulk_write()\n  regmap: Ensure regmap_register_patch() is compatible with fast_io\n  regmap: irq: Set data pointer only on regmap_add_irq_chip success\n  regmap: Implementation for regmap_multi_reg_write\n  regmap: add regmap_parse_val api\n  mfd: arizona: Use new regmap features for manual register patch\n  regmap: Base regmap_register_patch on _regmap_multi_reg_write\n  regmap: Add bypassed version of regmap_multi_reg_write\n  regmap: Mark reg_defaults in regmap_multi_reg_write as const\n  regmap: fix coccinelle warnings\n  regmap: Check stride of register patch as we register it\n  regmap: Clean up _regmap_update_bits()\n  regmap: Separate regmap dev initialization\n  regmap: Check readable regs in _regmap_read\n  regmap: irq: Remove domain on exit\n  ... Merge tag 'pinctrl-v3.15-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control bulk changes from Linus Walleij:\n \"Pin control bulk changes for the v3.15 series, no new core\n  functionality this time, just incremental driver updates:\n\n   - A large refactoring of the MVEBU (Marvell) driver.\n\n   - A large refactoring of the Tegra (nVidia) driver.\n\n   - GPIO interrupt including soft edges support in the STi driver.\n\n   - Misc updates to PFC (Renesas), AT91, ADI2 (Blackfin),\n     pinctrl-single, sirf (CSR), msm (Qualcomm), Exynos (Samsung), sunxi\n     (AllWinner), i.MX (Freescale), Baytrail\"\n\n* tag 'pinctrl-v3.15-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl: (72 commits)\n  pinctrl: tegra: add some missing Tegra114 entries\n  pinctrl: tegra: fix some mistakes in Tegra124\n  pinctrl: msm: fix up out-of-order merge conflict\n  pinctrl: st: Fix error check for of_irq_to_resource usage\n  pinctrl: tegra: consistency cleanup\n  pinctrl: tegra: dynamically calculate function list of groups\n  pinctrl: tegra: init Tegra20/30 at module_init time\n  pinctrl: st: Use ARRAY_SIZE instead of raw value for number of delays\n  pinctrl: st: add pinctrl support for the STiH407 SoC\n  pinctrl: st: Enhance the controller to manage unavailable registers\n  pinctrl: msm: Simplify msm_config_reg() and callers\n  pinctrl: msm: Remove impossible WARN_ON()s\n  pinctrl: msm: Replace lookup tables with math\n  pinctrl: msm: Drop OF_IRQ dependency\n  pinctrl: msm: Drop unused includes\n  pinctrl: msm: Check for ngpios > MAX_NR_GPIO\n  pinctrl: msm: Silence recursive lockdep warning\n  pinctrl: mvebu: silence WARN to dev_warn\n  pinctrl: msm: drop wake_irqs bitmap\n  pinctrl-baytrail: add function mux checking in gpio pin request\n  ... Merge tag 'pm+acpi-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management updates from Rafael Wysocki:\n \"The majority of this material spent some time in linux-next, some of\n  it even several weeks.  There are a few relatively fresh commits in\n  it, but they are mostly fixes and simple cleanups.\n\n  ACPI took the lead this time, both in terms of the number of commits\n  and the number of modified lines of code, cpufreq follows and there\n  are a few changes in the PM core and in cpuidle too.\n\n  A new feature that already got some LWN.net's attention is the device\n  PM QoS extension allowing latency tolerance requirements to be\n  propagated from leaf devices to their ancestors with hardware\n  interfaces for specifying latency tolerance.  That should help systems\n  with hardware-driven power management to avoid going too far with it\n  in cases when there are latency tolerance constraints.\n\n  There also are some significant changes in the ACPI core related to\n  the way in which hotplug notifications are handled.  They affect PCI\n  hotplug (ACPIPHP) and the ACPI dock station code too.  The bottom line\n  is that all those notification now go through the root notify handler\n  and are propagated to the interested subsystems by means of callbacks\n  instead of having to install a notify handler for each device object\n  that we can potentially get hotplug notifications for.\n\n  In addition to that ACPICA will now advertise \"Windows 2013\"\n  compatibility for _OSI, because some systems out there don't work\n  correctly if that is not done (some of them don't even boot).\n\n  On the system suspend side of things, all of the device suspend and\n  resume callbacks, except for ->prepare() and ->complete(), are now\n  going to be executed asynchronously as that turns out to speed up\n  system suspend and resume on some platforms quite significantly and we\n  have a few more optimizations in that area.\n\n  Apart from that, there are some new device IDs and fixes and cleanups\n  all over.  In particular, the system suspend and resume handling by\n  cpufreq should be improved and the cpuidle menu governor should be a\n  bit more robust now.\n\n  Specifics:\n\n   - Device PM QoS support for latency tolerance constraints on systems\n     with hardware interfaces allowing such constraints to be specified.\n     That is necessary to prevent hardware-driven power management from\n     becoming overly aggressive on some systems and to prevent power\n     management features leading to excessive latencies from being used\n     in some cases.\n\n   - Consolidation of the handling of ACPI hotplug notifications for\n     device objects.  This causes all device hotplug notifications to go\n     through the root notify handler (that was executed for all of them\n     anyway before) that propagates them to individual subsystems, if\n     necessary, by executing callbacks provided by those subsystems\n     (those callbacks are associated with struct acpi_device objects\n     during device enumeration).  As a result, the code in question\n     becomes both smaller in size and more straightforward and all of\n     those changes should not affect users.\n\n   - ACPICA update, including fixes related to the handling of _PRT in\n     cases when it is broken and the addition of \"Windows 2013\" to the\n     list of supported \"features\" for _OSI (which is necessary to\n     support systems that work incorrectly or don't even boot without\n     it).  Changes from Bob Moore and Lv Zheng.\n\n   - Consolidation of ACPI _OST handling from Jiang Liu.\n\n   - ACPI battery and AC fixes allowing unusual system configurations to\n     be handled by that code from Alexander Mezin.\n\n   - New device IDs for the ACPI LPSS driver from Chiau Ee Chew.\n\n   - ACPI fan and thermal optimizations related to system suspend and\n     resume from Aaron Lu.\n\n   - Cleanups related to ACPI video from Jean Delvare.\n\n   - Assorted ACPI fixes and cleanups from Al Stone, Hanjun Guo, Lan\n     Tianyu, Paul Bolle, Tomasz Nowicki.\n\n   - Intel RAPL (Running Average Power Limits) driver cleanups from\n     Jacob Pan.\n\n   - intel_pstate fixes and cleanups from Dirk Brandewie.\n\n   - cpufreq fixes related to system suspend/resume handling from Viresh\n     Kumar.\n\n   - cpufreq core fixes and cleanups from Viresh Kumar, Stratos\n     Karafotis, Saravana Kannan, Rashika Kheria, Joe Perches.\n\n   - cpufreq drivers updates from Viresh Kumar, Zhuoyu Zhang, Rob\n     Herring.\n\n   - cpuidle fixes related to the menu governor from Tuukka Tikkanen.\n\n   - cpuidle fix related to coupled CPUs handling from Paul Burton.\n\n   - Asynchronous execution of all device suspend and resume callbacks,\n     except for ->prepare and ->complete, during system suspend and\n     resume from Chuansheng Liu.\n\n   - Delayed resuming of runtime-suspended devices during system suspend\n     for the PCI bus type and ACPI PM domain.\n\n   - New set of PM helper routines to allow device runtime PM callbacks\n     to be used during system suspend and resume more easily from Ulf\n     Hansson.\n\n   - Assorted fixes and cleanups in the PM core from Geert Uytterhoeven,\n     Prabhakar Lad, Philipp Zabel, Rashika Kheria, Sebastian Capella.\n\n   - devfreq fix from Saravana Kannan\"\n\n* tag 'pm+acpi-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (162 commits)\n  PM / devfreq: Rewrite devfreq_update_status() to fix multiple bugs\n  PM / sleep: Correct whitespace errors in <linux/pm.h>\n  intel_pstate: Set core to min P state during core offline\n  cpufreq: Add stop CPU callback to cpufreq_driver interface\n  cpufreq: Remove unnecessary braces\n  cpufreq: Fix checkpatch errors and warnings\n  cpufreq: powerpc: add cpufreq transition latency for FSL e500mc SoCs\n  MAINTAINERS: Reorder maintainer addresses for PM and ACPI\n  PM / Runtime: Update runtime_idle() documentation for return value meaning\n  video / output: Drop display output class support\n  fujitsu-laptop: Drop unneeded include\n  acer-wmi: Stop selecting VIDEO_OUTPUT_CONTROL\n  ACPI / gpu / drm: Stop selecting VIDEO_OUTPUT_CONTROL\n  ACPI / video: fix ACPI_VIDEO dependencies\n  cpufreq: remove unused notifier: CPUFREQ_{SUSPENDCHANGE|RESUMECHANGE}\n  cpufreq: Do not allow ->setpolicy drivers to provide ->target\n  cpufreq: arm_big_little: set 'physical_cluster' for each CPU\n  cpufreq: arm_big_little: make vexpress driver depend on bL core driver\n  ACPI / button: Add ACPI Button event via netlink routine\n  ACPI: Remove duplicate definitions of PREFIX\n  ... Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq code updates from Thomas Gleixner:\n \"The irq department proudly presents:\n\n   - Another tree wide sweep of irq infrastructure abuse.  Clear winner\n     of the trainwreck engineering contest was:\n         #include \"../../../kernel/irq/settings.h\"\n\n   - Tree wide update of irq_set_affinity() callbacks which miss a cpu\n     online check when picking a single cpu out of the affinity mask.\n\n   - Tree wide consolidation of interrupt statistics.\n\n   - Updates to the threaded interrupt infrastructure to allow explicit\n     wakeup of the interrupt thread and a variant of synchronize_irq()\n     which synchronizes only the hard interrupt handler.  Both are\n     needed to replace the homebrewn thread handling in the mmc/sdhci\n     code.\n\n   - New irq chip callbacks to allow proper support for GPIO based irqs.\n     The GPIO based interrupts need to request/release GPIO resources\n     from request/free_irq.\n\n   - A few new ARM interrupt chips.  No revolutionary new hardware, just\n     differently wreckaged variations of the scheme.\n\n   - Small improvments, cleanups and updates all over the place\"\n\nI was hoping that that trainwreck engineering contest was a April Fools'\njoke.  But no.\n\n* 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (68 commits)\n  irqchip: sun7i/sun6i: Disable NMI before registering the handler\n  ARM: sun7i/sun6i: dts: Fix IRQ number for sun6i NMI controller\n  ARM: sun7i/sun6i: irqchip: Update the documentation\n  ARM: sun7i/sun6i: dts: Add NMI irqchip support\n  ARM: sun7i/sun6i: irqchip: Add irqchip driver for NMI controller\n  genirq: Export symbol no_action()\n  arm: omap: Fix typo in ams-delta-fiq.c\n  m68k: atari: Fix the last kernel_stat.h fallout\n  irqchip: sun4i: Simplify sun4i_irq_ack\n  irqchip: sun4i: Use handle_fasteoi_irq for all interrupts\n  genirq: procfs: Make smp_affinity values go+r\n  softirq: Add linux/irq.h to make it compile again\n  m68k: amiga: Add linux/irq.h to make it compile again\n  irqchip: sun4i: Don't ack IRQs > 0, fix acking of IRQ 0\n  irqchip: sun4i: Fix a comment about mask register initialization\n  irqchip: sun4i: Fix irq 0 not working\n  genirq: Add a new IRQCHIP_EOI_THREADED flag\n  genirq: Document IRQCHIP_ONESHOT_SAFE flag\n  ARM: sunxi: dt: Convert to the new irq controller compatibles\n  irqchip: sunxi: Change compatibles\n  ... Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer changes from Thomas Gleixner:\n \"This assorted collection provides:\n\n   - A new timer based timer broadcast feature for systems which do not\n     provide a global accessible timer device.  That allows those\n     systems to put CPUs into deep idle states where the per cpu timer\n     device stops.\n\n   - A few NOHZ_FULL related improvements to the timer wheel\n\n   - The usual updates to timer devices found in ARM SoCs\n\n   - Small improvements and updates all over the place\"\n\n* 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (44 commits)\n  tick: Remove code duplication in tick_handle_periodic()\n  tick: Fix spelling mistake in tick_handle_periodic()\n  x86: hpet: Use proper destructor for delayed work\n  workqueue: Provide destroy_delayed_work_on_stack()\n  clocksource: CMT, MTU2, TMU and STI should depend on GENERIC_CLOCKEVENTS\n  timer: Remove code redundancy while calling get_nohz_timer_target()\n  hrtimer: Rearrange comments in the order struct members are declared\n  timer: Use variable head instead of &work_list in __run_timers()\n  clocksource: exynos_mct: silence a static checker warning\n  arm: zynq: Add support for cpufreq\n  arm: zynq: Don't use arm_global_timer with cpufreq\n  clocksource/cadence_ttc: Overhaul clocksource frequency adjustment\n  clocksource/cadence_ttc: Call clockevents_update_freq() with IRQs enabled\n  clocksource: Add Kconfig entries for CMT, MTU2, TMU and STI\n  sh: Remove Kconfig entries for TMU, CMT and MTU2\n  ARM: shmobile: Remove CMT, TMU and STI Kconfig entries\n  clocksource: armada-370-xp: Use atomic access for shared registers\n  clocksource: orion: Use atomic access for shared registers\n  clocksource: timer-keystone: Delete unnecessary variable\n  clocksource: timer-keystone: introduce clocksource driver for Keystone\n  ... Merge branch 'x86-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 iommu quirk fix from Thomas Gleixner:\n \"A quirk for the iommu quirk to include silicon which was assumed not\n  to be out in the wild.\n\n  This time with the correct logic applied\"\n\n* 'x86-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: Adjust irq remapping quirk for older revisions of 5500/5520 chipsets Merge branch 'x86-threadinfo-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 threadinfo changes from Ingo Molnar:\n \"The main change here is the consolidation/unification of 32 and 64 bit\n  thread_info handling methods, from Steve Rostedt\"\n\n* 'x86-threadinfo-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, threadinfo: Redo \"x86: Use inline assembler to get sp\"\n  x86: Clean up dumpstack_64.c code\n  x86: Keep thread_info on thread stack in x86_32\n  x86: Prepare removal of previous_esp from i386 thread_info structure\n  x86: Nuke GET_THREAD_INFO_WITH_ESP() macro for i386\n  x86: Nuke the supervisor_stack field in i386 thread_info Merge branch 'timers-nohz-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer updates from Ingo Molnar:\n \"The main purpose is to fix a full dynticks bug related to\n  virtualization, where steal time accounting appears to be zero in\n  /proc/stat even after a few seconds of competing guests running busy\n  loops in a same host CPU.  It's not a regression though as it was\n  there since the beginning.\n\n  The other commits are preparatory work to fix the bug and various\n  cleanups\"\n\n* 'timers-nohz-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  arch: Remove stub cputime.h headers\n  sched: Remove needless round trip nsecs <-> tick conversion of steal time\n  cputime: Fix jiffies based cputime assumption on steal accounting\n  cputime: Bring cputime -> nsecs conversion\n  cputime: Default implementation of nsecs -> cputime conversion\n  cputime: Fix nsecs_to_cputime() return type cast Merge branch 'x86-cpufeature-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 cpufeature update from Ingo Molnar:\n \"Two refinements to clflushopt support\"\n\n* 'x86-cpufeature-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, cpufeature: If we disable CLFLUSH, we should disable CLFLUSHOPT\n  x86, cpufeature: Rename X86_FEATURE_CLFLSH to X86_FEATURE_CLFLUSH Merge branch 'x86-reboot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 reboot changes from Ingo Molnar:\n \"Refine the reboot logic around the CF9 and EFI reboot methods, to make\n  it more robust.  The expectation is for no working system to break,\n  and for a couple of reboot-force systems to start rebooting\n  automatically again\"\n\n* 'x86-reboot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, reboot: Only use CF9_COND automatically, not CF9\n  x86, reboot: Add EFI and CF9 reboot methods into the default list Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 mm change from Ingo Molnar:\n \"A micro-optimization for acpi_numa_slit_init()\"\n\n* 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mm: Avoid duplicated pxm_to_node() calls Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/egtvedt/linux-avr32\n\nPull AVR32 updates from Hans-Christian Egtvedt.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/egtvedt/linux-avr32:\n  avr32: replace simple_strtoul() with kstrtoul()\n  arch/avr32/mm/cache.c: export symbol flush_icache_range() for module using\n  avr32: remove cpu_data macro to fix compiles Merge branch 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata updates from Tejun Heo:\n \"A lot of activities on libata side this time.\n\n   - A lot of changes around ahci.  Various embedded platforms are\n     implementing ahci controllers.  Some were built atop ahci_platform,\n     others were doing their own things.  Hans made some structural\n     changes to libahci and librarized ahci_platform so that ahci\n     platform drivers can share more common code.  A couple platform\n     drivers are added on top of that and several are added to replace\n     older drivers which were doing their own things (older ones are\n     scheduled to be removed).\n\n   - Dan finishes the patchset to make libata PM operations\n     asynchronous.  Combined with one patch being routed through scsi,\n     this should speed resume measurably.\n\n   - Various fixes and cleanups from Bartlomiej and others\"\n\n* 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata: (61 commits)\n  ata: fix Marvell SATA driver dependencies\n  ata: fix ARASAN CompactFlash PATA driver dependencies\n  ata: remove superfluous casts\n  ata: sata_highbank: remove superfluous cast\n  ata: fix Calxeda Highbank SATA driver dependencies\n  ata: fix R-Car SATA driver dependencies\n  ARM: davinci: da850: update SATA AHCI support\n  ata: add new-style AHCI platform driver for DaVinci DA850 AHCI controller\n  ata: move library code from ahci_platform.c to libahci_platform.c\n  ata: ahci_platform: fix ahci_platform_data->suspend method handling\n  libata: remove unused ata_sas_port_async_resume() stub\n  libata.h: add stub for ata_sas_port_resume\n  libata: async resume\n  libata, libsas: kill pm_result and related cleanup\n  ata: Fix compiler warning with APM X-Gene host controller driver\n  arm64: Add APM X-Gene SoC AHCI SATA host controller DTS entries\n  ata: Add APM X-Gene SoC AHCI SATA host controller driver\n  Documentation: Add documentation for the APM X-Gene SoC SATA host controller DTS binding\n  arm64: Add APM X-Gene SoC 15Gbps Multi-purpose PHY DTS entries\n  ata: ahci_sunxi: fix code formatting\n  ... Merge branch 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue changes from Tejun Heo:\n \"PREPARE_[DELAYED_]WORK() were used to change the work function of work\n  items without fully reinitializing it; however, this makes workqueue\n  consider the work item as a different one from before and allows the\n  work item to start executing before the previous instance is finished\n  which can lead to extremely subtle issues which are painful to debug.\n\n  The interface has never been popular.  This pull request contains\n  patches to remove existing usages and kill the interface.  As one of\n  the changes was routed during the last devel cycle and another\n  depended on a pending change in nvme, for-3.15 contains a couple merge\n  commits.\n\n  In addition, interfaces which were deprecated quite a while ago -\n  __cancel_delayed_work() and WQ_NON_REENTRANT - are removed too\"\n\n* 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: remove deprecated WQ_NON_REENTRANT\n  workqueue: Spelling s/instensive/intensive/\n  workqueue: remove PREPARE_[DELAYED_]WORK()\n  staging/fwserial: don't use PREPARE_WORK\n  afs: don't use PREPARE_WORK\n  nvme: don't use PREPARE_WORK\n  usb: don't use PREPARE_DELAYED_WORK\n  floppy: don't use PREPARE_[DELAYED_]WORK\n  ps3-vuart: don't use PREPARE_WORK\n  wireless/rt2x00: don't use PREPARE_WORK in rt2800usb.c\n  workqueue: Remove deprecated __cancel_delayed_work() Merge branch 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu\n\nPull percpu changes from Tejun Heo:\n \"The percpu allocation is now popular enough for the extremely naive\n  range allocator to cause scalability issues.\n\n  The existing allocator linearly scanned the allocation map on both\n  alloc and free without making use of hint or anything.  Al\n  reimplemented the range allocator so that it can use binary search\n  instead of linear scan during free and alloc path uses simple hinting\n  to avoid scanning in common cases.  Combined, the new allocator\n  resolves the scalability issue percpu allocator was showing during\n  container benchmark workload\"\n\n* 'for-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:\n  percpu: renew the max_contig if we merge the head and previous block\n  percpu: allocation size should be even\n  percpu: speed alloc_pcpu_area() up\n  percpu: store offsets instead of lengths in ->map[]\n  perpcu: fold pcpu_split_block() into the only caller Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull ARM64 updates from Catalin Marinas:\n - KGDB support for arm64\n - PCI I/O space extended to 16M (in preparation of PCIe support\n   patches)\n - Dropping ZONE_DMA32 in favour of ZONE_DMA (we only need one for the\n   time being), together with swiotlb late initialisation to correctly\n   setup the bounce buffer\n - DMA API cache maintenance support (not all ARMv8 platforms have\n   hardware cache coherency)\n - Crypto extensions advertising via ELF_HWCAP2 for compat user space\n - Perf support for dwarf unwinding in compat mode\n - asm/tlb.h converted to the generic mmu_gather code\n - asm-generic rwsem implementation\n - Code clean-up\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (42 commits)\n  arm64: Remove pgprot_dmacoherent()\n  arm64: Support DMA_ATTR_WRITE_COMBINE\n  arm64: Implement custom mmap functions for dma mapping\n  arm64: Fix __range_ok macro\n  arm64: Fix duplicated Kconfig entries\n  arm64: mm: Route pmd thp functions through pte equivalents\n  arm64: rwsem: use asm-generic rwsem implementation\n  asm-generic: rwsem: de-PPCify rwsem.h\n  arm64: enable generic CPU feature modalias matching for this architecture\n  arm64: smp: make local symbol static\n  arm64: debug: make local symbols static\n  ARM64: perf: support dwarf unwinding in compat mode\n  ARM64: perf: add support for frame pointer unwinding in compat mode\n  ARM64: perf: add support for perf registers API\n  arm64: Add boot time configuration of Intermediate Physical Address size\n  arm64: Do not synchronise I and D caches for special ptes\n  arm64: Make DMA coherent and strongly ordered mappings not executable\n  arm64: barriers: add dmb barrier\n  arm64: topology: Implement basic CPU topology support\n  arm64: advertise ARMv8 extensions to 32-bit compat ELF binaries\n  ... Merge tag 'please-pull-misc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux\n\nPull ia64 updates from Tony Luck:\n \"Miscellaneous ia64 fixes for 3.15 merge window\"\n\n* tag 'please-pull-misc-3.15' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux:\n  [IA64] Keep format strings from leaking into printk\n  Fix warning in make defconfig\n  [IA64] sba_iommu: fix section mismatch To: linux-kernel@vger.kernel.org Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k\n\nPull m68k updates from Geert Uytterhoeven.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k:\n  m68k: Update defconfigs for v3.14-rc1\n  [SCSI] atari_scsi: Fix sleep_on race\n  m68k: head.S - Remove bogus L prefix in comment\n  m68k: Remove dead code\n  m68k: Remove CONSOLE_PENGUIN macro, adopt CONFIG_LOGO Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 updates from Martin Schwidefsky:\n \"There are two memory management related changes, the CMMA support for\n  KVM to avoid swap-in of freed pages and the split page table lock for\n  the PMD level.  These two come with common code changes in mm/.\n\n  A fix for the long standing theoretical TLB flush problem, this one\n  comes with a common code change in kernel/sched/.\n\n  Another set of changes is Heikos uaccess work, included is the initial\n  set of patches with more to come.\n\n  And fixes and cleanups as usual\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (36 commits)\n  s390/con3270: optionally disable auto update\n  s390/mm: remove unecessary parameter from pgste_ipte_notify\n  s390/mm: remove unnecessary parameter from gmap_do_ipte_notify\n  s390/mm: fixing comment so that parameter name match\n  s390/smp: limit number of cpus in possible cpu mask\n  hypfs: Add clarification for \"weight_min\" attribute\n  s390: update defconfigs\n  s390/ptrace: add support for PTRACE_SINGLEBLOCK\n  s390/perf: make print_debug_cf() static\n  s390/topology: Remove call to update_cpu_masks()\n  s390/compat: remove compat exec domain\n  s390: select CONFIG_TTY for use of tty in unconditional keyboard driver\n  s390/appldata_os: fix cpu array size calculation\n  s390/checksum: remove memset() within csum_partial_copy_from_user()\n  s390/uaccess: remove copy_from_user_real()\n  s390/sclp_early: Return correct HSA block count also for zero\n  s390: add some drivers/subsystems to the MAINTAINERS file\n  s390: improve debug feature usage\n  s390/airq: add support for irq ranges\n  s390/mm: enable split page table lock for PMD level\n  ... Merge branch 'compat' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 compat wrapper rework from Heiko Carstens:\n \"S390 compat system call wrapper simplification work.\n\n  The intention of this work is to get rid of all hand written assembly\n  compat system call wrappers on s390, which perform proper sign or zero\n  extension, or pointer conversion of compat system call parameters.\n  Instead all of this should be done with C code eg by using Al's\n  COMPAT_SYSCALL_DEFINEx() macro.\n\n  Therefore all common code and s390 specific compat system calls have\n  been converted to the COMPAT_SYSCALL_DEFINEx() macro.\n\n  In order to generate correct code all compat system calls may only\n  have eg compat_ulong_t parameters, but no unsigned long parameters.\n  Those patches which change parameter types from unsigned long to\n  compat_ulong_t parameters are separate in this series, but shouldn't\n  cause any harm.\n\n  The only compat system calls which intentionally have 64 bit\n  parameters (preadv64 and pwritev64) in support of the x86/32 ABI\n  haven't been changed, but are now only available if an architecture\n  defines __ARCH_WANT_COMPAT_SYS_PREADV64/PWRITEV64.\n\n  System calls which do not have a compat variant but still need proper\n  zero extension on s390, like eg \"long sys_brk(unsigned long brk)\" will\n  get a proper wrapper function with the new s390 specific\n  COMPAT_SYSCALL_WRAPx() macro:\n\n     COMPAT_SYSCALL_WRAP1(brk, unsigned long, brk);\n\n  which generates the following code (simplified):\n\n     asmlinkage long sys_brk(unsigned long brk);\n     asmlinkage long compat_sys_brk(long brk)\n     {\n         return sys_brk((u32)brk);\n     }\n\n  Given that the C file which contains all the COMPAT_SYSCALL_WRAP lines\n  includes both linux/syscall.h and linux/compat.h, it will generate\n  build errors, if the declaration of sys_brk() doesn't match, or if\n  there exists a non-matching compat_sys_brk() declaration.\n\n  In addition this will intentionally result in a link error if\n  somewhere else a compat_sys_brk() function exists, which probably\n  should have been used instead.  Two more BUILD_BUG_ONs make sure the\n  size and type of each compat syscall parameter can be handled\n  correctly with the s390 specific macros.\n\n  I converted the compat system calls step by step to verify the\n  generated code is correct and matches the previous code.  In fact it\n  did not always match, however that was always a bug in the hand\n  written asm code.\n\n  In result we get less code, less bugs, and much more sanity checking\"\n\n* 'compat' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (44 commits)\n  s390/compat: add copyright statement\n  compat: include linux/unistd.h within linux/compat.h\n  s390/compat: get rid of compat wrapper assembly code\n  s390/compat: build error for large compat syscall args\n  mm/compat: convert to COMPAT_SYSCALL_DEFINE with changing parameter types\n  kexec/compat: convert to COMPAT_SYSCALL_DEFINE with changing parameter types\n  net/compat: convert to COMPAT_SYSCALL_DEFINE with changing parameter types\n  ipc/compat: convert to COMPAT_SYSCALL_DEFINE with changing parameter types\n  fs/compat: convert to COMPAT_SYSCALL_DEFINE with changing parameter types\n  ipc/compat: convert to COMPAT_SYSCALL_DEFINE\n  fs/compat: convert to COMPAT_SYSCALL_DEFINE\n  security/compat: convert to COMPAT_SYSCALL_DEFINE\n  mm/compat: convert to COMPAT_SYSCALL_DEFINE\n  net/compat: convert to COMPAT_SYSCALL_DEFINE\n  kernel/compat: convert to COMPAT_SYSCALL_DEFINE\n  fs/compat: optional preadv64/pwrite64 compat system calls\n  ipc/compat_sys_msgrcv: change msgtyp type from long to compat_long_t\n  s390/compat: partial parameter conversion within syscall wrappers\n  s390/compat: automatic zero, sign and pointer conversion of syscalls\n  s390/compat: add sync_file_range and fallocate compat syscalls\n  ... Merge branch 'x86-asmlinkage-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 LTO changes from Peter Anvin:\n \"More infrastructure work in preparation for link-time optimization\n  (LTO).  Most of these changes is to make sure symbols accessed from\n  assembly code are properly marked as visible so the linker doesn't\n  remove them.\n\n  My understanding is that the changes to support LTO are still not\n  upstream in binutils, but are on the way there.  This patchset should\n  conclude the x86-specific changes, and remaining patches to actually\n  enable LTO will be fed through the Kbuild tree (other than keeping up\n  with changes to the x86 code base, of course), although not\n  necessarily in this merge window\"\n\n* 'x86-asmlinkage-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (25 commits)\n  Kbuild, lto: Handle basic LTO in modpost\n  Kbuild, lto: Disable LTO for asm-offsets.c\n  Kbuild, lto: Add a gcc-ld script to let run gcc as ld\n  Kbuild, lto: add ld-version and ld-ifversion macros\n  Kbuild, lto: Drop .number postfixes in modpost\n  Kbuild, lto, workaround: Don't warn for initcall_reference in modpost\n  lto: Disable LTO for sys_ni\n  lto: Handle LTO common symbols in module loader\n  lto, workaround: Add workaround for initcall reordering\n  lto: Make asmlinkage __visible\n  x86, lto: Disable LTO for the x86 VDSO\n  initconst, x86: Fix initconst mistake in ts5500 code\n  initconst: Fix initconst mistake in dcdbas\n  asmlinkage: Make trace_hardirqs_on/off_caller visible\n  asmlinkage, x86: Fix 32bit memcpy for LTO\n  asmlinkage Make __stack_chk_failed and memcmp visible\n  asmlinkage: Mark rwsem functions that can be called from assembler asmlinkage\n  asmlinkage: Make main_extable_sort_needed visible\n  asmlinkage, mutex: Mark __visible\n  asmlinkage: Make trace_hardirq visible\n  ... Merge branch 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 kaslr update from Ingo Molnar:\n \"This adds kernel module load address randomization\"\n\n* 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, kaslr: fix module lock ordering problem\n  x86, kaslr: randomize module base load address Merge branch 'x86-hyperv-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 hyperv change from Ingo Molnar:\n \"Skip the timer_irq_works() check on hyperv systems\"\n\n* 'x86-hyperv-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, hyperv: Bypass the timer_irq_works() check Merge branch 'x86-hash-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 hashing changes from Ingo Molnar:\n \"Small fixes and cleanups to the librarized arch_fast_hash() methods,\n  used by the net/openvswitch code\"\n\n* 'x86-hash-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, hash: Simplify switch, add __init annotation\n  x86, hash: Swap arguments passed to crc32_u32()\n  x86, hash: Fix build failure with older binutils Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 EFI changes from Ingo Molnar:\n \"The main changes:\n\n  - Add debug code to the dump EFI pagetable - Borislav Petkov\n\n  - Make 1:1 runtime mapping robust when booting on machines with lots\n    of memory - Borislav Petkov\n\n  - Move the EFI facilities bits out of 'x86_efi_facility' and into\n    efi.flags which is the standard architecture independent place to\n    keep EFI state, by Matt Fleming.\n\n  - Add 'EFI mixed mode' support: this allows 64-bit kernels to be\n    booted from 32-bit firmware.  This needs a bootloader that supports\n    the 'EFI handover protocol'.  By Matt Fleming\"\n\n* 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (31 commits)\n  x86, efi: Abstract x86 efi_early calls\n  x86/efi: Restore 'attr' argument to query_variable_info()\n  x86/efi: Rip out phys_efi_get_time()\n  x86/efi: Preserve segment registers in mixed mode\n  x86/boot: Fix non-EFI build\n  x86, tools: Fix up compiler warnings\n  x86/efi: Re-disable interrupts after calling firmware services\n  x86/boot: Don't overwrite cr4 when enabling PAE\n  x86/efi: Wire up CONFIG_EFI_MIXED\n  x86/efi: Add mixed runtime services support\n  x86/efi: Firmware agnostic handover entry points\n  x86/efi: Split the boot stub into 32/64 code paths\n  x86/efi: Add early thunk code to go from 64-bit to 32-bit\n  x86/efi: Build our own EFI services pointer table\n  efi: Add separate 32-bit/64-bit definitions\n  x86/efi: Delete dead code when checking for non-native\n  x86/mm/pageattr: Always dump the right page table in an oops\n  x86, tools: Consolidate #ifdef code\n  x86/boot: Cleanup header.S by removing some #ifdefs\n  efi: Use NULL instead of 0 for pointer\n  ... Merge branch 'x86-debug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 debug cleanup from Ingo Molnar:\n \"A single trivial cleanup\"\n\n* 'x86-debug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  i386: Remove unneeded test of 'task' in dump_trace() (again) Merge branch 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 cpu handling changes from Ingo Molnar:\n \"Bigger changes:\n\n   - Intel CPU hardware-enablement: new vector instructions support\n     (AVX-512), by Fenghua Yu.\n\n   - Support the clflushopt instruction and use it in appropriate\n     places.  clflushopt is similar to clflush but with more relaxed\n     ordering, by Ross Zwisler.\n\n   - MSR accessor cleanups, by Borislav Petkov.\n\n   - 'forcepae' boot flag for those who have way too much time to spend\n     on way too old Pentium-M systems and want to live way too\n     dangerously, by Chris Bainbridge\"\n\n* 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, cpu: Add forcepae parameter for booting PAE kernels on PAE-disabled Pentium M\n  Rename TAINT_UNSAFE_SMP to TAINT_CPU_OUT_OF_SPEC\n  x86, intel: Make MSR_IA32_MISC_ENABLE bit constants systematic\n  x86, Intel: Convert to the new bit access MSR accessors\n  x86, AMD: Convert to the new bit access MSR accessors\n  x86: Add another set of MSR accessor functions\n  x86: Use clflushopt in drm_clflush_virt_range\n  x86: Use clflushopt in drm_clflush_page\n  x86: Use clflushopt in clflush_cache_range\n  x86: Add support for the clflushopt instruction\n  x86, AVX-512: Enable AVX-512 States Context Switch\n  x86, AVX-512: AVX-512 Feature Detection Merge branch 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 cleanups from Ingo Molnar:\n \"Various smaller cleanups\"\n\n* 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, pageattr: Correct WBINVD spelling in comment\n  x86, crash: Unify ifdef\n  x86, boot: Correct max ramdisk size name Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 build change from Ingo Molnar:\n \"Explicitly disable x87 FPU instructions, to catch mistaken floating\n  point use at build time, instead of crashing or misbehaving during run\n  time\"\n\n* 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: Disable generation of traditional x87 instructions Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 apic changes from Ingo Molnar:\n \"An xAPIC CPU hotplug race fix, plus cleanups and minor fixes\"\n\n* 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/apic: Plug racy xAPIC access of CPU hotplug code\n  x86/apic: Always define nox2apic and define it as initdata\n  x86/apic: Remove unused function prototypes\n  x86/apic: Switch wait_for_init_deassert() to a bool flag\n  x86/apic: Only use default_wait_for_init_deassert() Merge branch 'x86-acpi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 acpi numa fix from Ingo Molnar:\n \"A single NUMA CPU hotplug fix\"\n\n* 'x86-acpi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, acpi: Fix bug in associating hot-added CPUs with corresponding NUMA node Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler changes from Ingo Molnar:\n \"Bigger changes:\n\n   - sched/idle restructuring: they are WIP preparation for deeper\n     integration between the scheduler and idle state selection, by\n     Nicolas Pitre.\n\n   - add NUMA scheduling pseudo-interleaving, by Rik van Riel.\n\n   - optimize cgroup context switches, by Peter Zijlstra.\n\n   - RT scheduling enhancements, by Thomas Gleixner.\n\n  The rest is smaller changes, non-urgnt fixes and cleanups\"\n\n* 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (68 commits)\n  sched: Clean up the task_hot() function\n  sched: Remove double calculation in fix_small_imbalance()\n  sched: Fix broken setscheduler()\n  sparc64, sched: Remove unused sparc64_multi_core\n  sched: Remove unused mc_capable() and smt_capable()\n  sched/numa: Move task_numa_free() to __put_task_struct()\n  sched/fair: Fix endless loop in idle_balance()\n  sched/core: Fix endless loop in pick_next_task()\n  sched/fair: Push down check for high priority class task into idle_balance()\n  sched/rt: Fix picking RT and DL tasks from empty queue\n  trace: Replace hardcoding of 19 with MAX_NICE\n  sched: Guarantee task priority in pick_next_task()\n  sched/idle: Remove stale old file\n  sched: Put rq's sched_avg under CONFIG_FAIR_GROUP_SCHED\n  cpuidle/arm64: Remove redundant cpuidle_idle_call()\n  cpuidle/powernv: Remove redundant cpuidle_idle_call()\n  sched, nohz: Exclude isolated cores from load balancing\n  sched: Fix select_task_rq_fair() description comments\n  workqueue: Replace hardcoding of -20 and 19 with MIN_NICE and MAX_NICE\n  sys: Replace hardcoding of -20 and 19 with MIN_NICE and MAX_NICE\n  ... Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf changes from Ingo Molnar:\n \"Main changes:\n\n  Kernel side changes:\n\n   - Add SNB/IVB/HSW client uncore memory controller support (Stephane\n     Eranian)\n\n   - Fix various x86/P4 PMU driver bugs (Don Zickus)\n\n  Tooling, user visible changes:\n\n   - Add several futex 'perf bench' microbenchmarks (Davidlohr Bueso)\n\n   - Speed up thread map generation (Don Zickus)\n\n   - Introduce 'perf kvm --list-cmds' command line option for use by\n     scripts (Ramkumar Ramachandra)\n\n   - Print the evsel name in the annotate stdio output, prep to fix\n     support outputting annotation for multiple events, not just for the\n     first one (Arnaldo Carvalho de Melo)\n\n   - Allow setting preferred callchain method in .perfconfig (Jiri Olsa)\n\n   - Show in what binaries/modules 'perf probe's are set (Masami\n     Hiramatsu)\n\n   - Support distro-style debuginfo for uprobe in 'perf probe' (Masami\n     Hiramatsu)\n\n  Tooling, internal changes and fixes:\n\n   - Use tid in mmap/mmap2 events to find maps (Don Zickus)\n\n   - Record the reason for filtering an address_location (Namhyung Kim)\n\n   - Apply all filters to an addr_location (Namhyung Kim)\n\n   - Merge al->filtered with hist_entry->filtered in report/hists\n     (Namhyung Kim)\n\n   - Fix memory leak when synthesizing thread records (Namhyung Kim)\n\n   - Use ui__has_annotation() in 'report' (Namhyung Kim)\n\n   - hists browser refactorings to reuse code accross UIs (Namhyung Kim)\n\n   - Add support for the new DWARF unwinder library in elfutils (Jiri\n     Olsa)\n\n   - Fix build race in the generation of bison files (Jiri Olsa)\n\n   - Further streamline the feature detection display, trimming it a bit\n     to show just the libraries detected, using VF=1 gets a more verbose\n     output, showing the less interesting feature checks as well (Jiri\n     Olsa).\n\n   - Check compatible symtab type before loading dso (Namhyung Kim)\n\n   - Check return value of filename__read_debuglink() (Stephane Eranian)\n\n   - Move some hashing and fs related code from tools/perf/util/ to\n     tools/lib/ so that it can be used by more tools/ living utilities\n     (Borislav Petkov)\n\n   - Prepare DWARF unwinding code for using an elfutils alternative\n     unwinding library (Jiri Olsa)\n\n   - Fix DWARF unwind max_stack processing (Jiri Olsa)\n\n   - Add dwarf unwind 'perf test' entry (Jiri Olsa)\n\n   - 'perf probe' improvements including memory leak fixes, sharing the\n     intlist class with other tools, uprobes/kprobes code sharing and\n     use of ref_reloc_sym (Masami Hiramatsu)\n\n   - Shorten sample symbol resolving by adding cpumode to struct\n     addr_location (Arnaldo Carvalho de Melo)\n\n   - Fix synthesizing mmaps for threads (Don Zickus)\n\n   - Fix invalid output on event group stdio report (Namhyung Kim)\n\n   - Fixup header alignment in 'perf sched latency' output (Ramkumar\n     Ramachandra)\n\n   - Fix off-by-one error in 'perf timechart record' argv handling\n     (Ramkumar Ramachandra)\n\n  Tooling, cleanups:\n\n   - Remove unused thread__find_map function (Jiri Olsa)\n\n   - Remove unused simple_strtoul() function (Ramkumar Ramachandra)\n\n  Tooling, documentation updates:\n\n   - Update function names in debug messages (Ramkumar Ramachandra)\n\n   - Update some code references in design.txt (Ramkumar Ramachandra)\n\n   - Clarify load-latency information in the 'perf mem' docs (Andi\n     Kleen)\n\n   - Clarify x86 register naming in 'perf probe' docs (Andi Kleen)\"\n\n* 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (96 commits)\n  perf tools: Remove unused simple_strtoul() function\n  perf tools: Update some code references in design.txt\n  perf evsel: Update function names in debug messages\n  perf tools: Remove thread__find_map function\n  perf annotate: Print the evsel name in the stdio output\n  perf report: Use ui__has_annotation()\n  perf tools: Fix memory leak when synthesizing thread records\n  perf tools: Use tid in mmap/mmap2 events to find maps\n  perf report: Merge al->filtered with hist_entry->filtered\n  perf symbols: Apply all filters to an addr_location\n  perf symbols: Record the reason for filtering an address_location\n  perf sched: Fixup header alignment in 'latency' output\n  perf timechart: Fix off-by-one error in 'record' argv handling\n  perf machine: Factor machine__find_thread to take tid argument\n  perf tools: Speed up thread map generation\n  perf kvm: introduce --list-cmds for use by scripts\n  perf ui hists: Pass evsel to hpp->header/width functions explicitly\n  perf symbols: Introduce thread__find_cpumode_addr_location\n  perf session: Change header.misc dump from decimal to hex\n  perf ui/tui: Reuse generic __hpp__fmt() code\n  ... Merge branch 'core-types-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull hweight type fix from Ingo Molnar:\n \"This lone commit makes sure that __const_hweight8() is unsigned, which\n  addresses a build warning if code is built with -Wsign-compare.\n\n  I hope the type cast in this cleanup is fine - another option would be\n  to eliminate the double unary negation and use a construct with more\n  obvious integer type characteristics, along the lines of:\n\n        ((w) & (1ULL << 1) ? 1U : 0U)\n\n  or so\"\n\n* 'core-types-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  bitops: Fix signedness of compile-time hweight implementations Merge branch 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RCU updates from Ingo Molnar:\n \"Main changes:\n\n   - Torture-test changes, including refactoring of rcutorture and\n     introduction of a vestigial locktorture.\n\n   - Real-time latency fixes.\n\n   - Documentation updates.\n\n   - Miscellaneous fixes\"\n\n* 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (77 commits)\n  rcu: Provide grace-period piggybacking API\n  rcu: Ensure kernel/rcu/rcu.h can be sourced/used stand-alone\n  rcu: Fix sparse warning for rcu_expedited from kernel/ksysfs.c\n  notifier: Substitute rcu_access_pointer() for rcu_dereference_raw()\n  Documentation/memory-barriers.txt: Clarify release/acquire ordering\n  rcutorture: Save kvm.sh output to log\n  rcutorture: Add a lock_busted to test the test\n  rcutorture: Place kvm-test-1-run.sh output into res directory\n  rcutorture: Rename TREE_RCU-Kconfig.txt\n  locktorture: Add kvm-recheck.sh plug-in for locktorture\n  rcutorture: Gracefully handle NULL cleanup hooks\n  locktorture: Add vestigial locktorture configuration\n  rcutorture: Introduce \"rcu\" directory level underneath configs\n  rcutorture: Rename kvm-test-1-rcu.sh\n  rcutorture: Remove RCU dependencies from ver_functions.sh API\n  rcutorture: Create CFcommon file for common Kconfig parameters\n  rcutorture: Create config files for scripted test-the-test testing\n  rcutorture: Add an rcu_busted to test the test\n  locktorture: Add a lock-torture kernel module\n  rcutorture: Abstract kvm-recheck.sh\n  ... Merge branch 'core-locking-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull core locking updates from Ingo Molnar:\n \"The biggest change is the MCS spinlock generalization changes from Tim\n  Chen, Peter Zijlstra, Jason Low et al.  There's also lockdep\n  fixes/enhancements from Oleg Nesterov, in particular a false negative\n  fix related to lockdep_set_novalidate_class() usage\"\n\n* 'core-locking-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (22 commits)\n  locking/mutex: Fix debug checks\n  locking/mutexes: Add extra reschedule point\n  locking/mutexes: Introduce cancelable MCS lock for adaptive spinning\n  locking/mutexes: Unlock the mutex without the wait_lock\n  locking/mutexes: Modify the way optimistic spinners are queued\n  locking/mutexes: Return false if task need_resched() in mutex_can_spin_on_owner()\n  locking: Move mcs_spinlock.h into kernel/locking/\n  m68k: Skip futex_atomic_cmpxchg_inatomic() test\n  futex: Allow architectures to skip futex_atomic_cmpxchg_inatomic() test\n  Revert \"sched/wait: Suppress Sparse 'variable shadowing' warning\"\n  lockdep: Change lockdep_set_novalidate_class() to use _and_name\n  lockdep: Change mark_held_locks() to check hlock->check instead of lockdep_no_validate\n  lockdep: Don't create the wrong dependency on hlock->check == 0\n  lockdep: Make held_lock->check and \"int check\" argument bool\n  locking/mcs: Allow architecture specific asm files to be used for contended case\n  locking/mcs: Order the header files in Kbuild of each architecture in alphabetical order\n  sched/wait: Suppress Sparse 'variable shadowing' warning\n  hung_task/Documentation: Fix hung_task_warnings description\n  locking/mcs: Allow architectures to hook in to contended paths\n  locking/mcs: Micro-optimize the MCS code, add extra comments\n  ... Linux 3.14 Merge branch 'for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"Switch mnt_hash to hlist, turning the races between __lookup_mnt() and\n  hash modifications into false negatives from __lookup_mnt() (instead\n  of hangs)\"\n\nOn the false negatives from __lookup_mnt():\n \"The *only* thing we care about is not getting stuck in __lookup_mnt().\n  If it misses an entry because something in front of it just got moved\n  around, etc, we are fine.  We'll notice that mount_lock mismatch and\n  that'll be it\"\n\n* 'for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  switch mnt_hash to hlist\n  don't bother with propagate_mnt() unless the target is shared\n  keep shadowed vfsmounts together\n  resizable namespace.c hashes Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n \"Some more updates for the input subsystem.\n\n  You will get a fix for race in mousedev that has been causing quite a\n  few oopses lately and a small fixup for force feedback support in\n  evdev\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: mousedev - fix race when creating mixed device\n  Input: don't modify the id of ioctl-provided ff effect on upload failure Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Ingo Molnar:\n \"A late breaking fix from John.  (The bug fixed has a hard lockup\n  potential, but that was not observed, warnings were)\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  time: Revert to calling clock_was_set_delayed() while in irq context Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull Ceph fix from Sage Weil:\n \"This drops a bad assert that a few users have been hitting but we've\n  only recently been able to track down\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  rbd: drop an unsafe assertion Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) We've discovered a common error in several networking drivers, they\n    put VLAN offload features into ->vlan_features, which would suggest\n    that they support offloading 2 or more levels of VLAN encapsulation.\n    Not only do these devices not do that, but we don't have the\n    infrastructure yet to handle that at all.\n\n    Fixes from Vlad Yasevich.\n\n 2) Fix tcpdump crash with bridging and vlans, also from Vlad.\n\n 3) Some MAINTAINERS updates for random32 and bonding.\n\n 4) Fix late reseeds of prandom generator, from Sasha Levin.\n\n 5) Bridge doesn't handle stacked vlans properly, fix from Toshiaki\n    Makita.\n\n 6) Fix deadlock in openvswitch, from Flavio Leitner.\n\n 7) get_timewait4_sock() doesn't report delay times correctly, fix from\n    Eric Dumazet.\n\n 8) Duplicate address detection and addrconf verification need to run in\n    contexts where RTNL can be obtained.  Move them to run from a\n    workqueue.  From Hannes Frederic Sowa.\n\n 9) Fix route refcount leaking in ip tunnels, from Pravin B Shelar.\n\n10) Don't return -EINTR from non-blocking recvmsg() on AF_UNIX sockets,\n    from Eric Dumazet.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (28 commits)\n  vlan: Warn the user if lowerdev has bad vlan features.\n  veth: Turn off vlan rx acceleration in vlan_features\n  ifb: Remove vlan acceleration from vlan_features\n  qlge: Do not propaged vlan tag offloads to vlans\n  bridge: Fix crash with vlan filtering and tcpdump\n  net: Account for all vlan headers in skb_mac_gso_segment\n  MAINTAINERS: bonding: change email address\n  MAINTAINERS: bonding: change email address\n  ipv6: move DAD and addrconf_verify processing to workqueue\n  tcp: fix get_timewait4_sock() delay computation on 64bit\n  openvswitch: fix a possible deadlock and lockdep warning\n  bridge: Fix handling stacked vlan tags\n  bridge: Fix inabillity to retrieve vlan tags when tx offload is disabled\n  vhost: validate vhost_get_vq_desc return value\n  vhost: fix total length when packets are too short\n  random32: avoid attempt to late reseed if in the middle of seeding\n  random32: assign to network folks in MAINTAINERS\n  net/mlx4_core: pass pci_device_id.driver_data to __mlx4_init_one during reset\n  core, nfqueue, openvswitch: Orphan frags in skb_zerocopy and handle errors\n  vlan: Set hard_header_len according to available acceleration\n  ... Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge two fixes from Andrew Morton:\n \"The x86 fix should come from x86 guys but they appear to be\n  conferencing or otherwise distracted.\n\n  The ocfs2 fix is a bit of a mess - the code runs into an immediate\n  NULL deref and we're trying to work out how this got through test and\n  review, but we haven't heard from Goldwyn in the past few days.\n  Sasha's patch fixes the oops, but the feature as a whole is probably\n  broken.  So this is a stopgap for 3.14 - I'll aim to get the real\n  fixes into 3.14.x\"\n\n* emailed patches from Andrew Morton akpm@linux-foundation.org>:\n  x86: fix boot on uniprocessor systems\n  ocfs2: check if cluster name exists before deref Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input subsystem fixes from Dmitry Torokhov:\n \"Updates to Synaptics touchpad to better cope with devices in Lenovo\n  laptops, and a couple more fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: synaptics - add manual min/max quirk for ThinkPad X240\n  Input: synaptics - add manual min/max quirk\n  Input: cypress_ps2 - don't report as a button pads\n  Input: da9052_onkey - use correct register bit for key status\n  Input: adp5588-keys - get value from data out when dir is out Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"I didn't want these to wait for stable cycle.\n\n  The nouveau and radeon ones are the same problem, where the runtime pm\n  stuff broke non-runtime pm managed secondary GPUs.\n\n  The udl fix is for an oops on unplug, and the i915 fix is for a\n  regression on Sandybridge even though it may break haswell (regression\n  wins)\"\n\nDaniel Vetter comments:\n \"My apologies for the i915 regression fumble, that thing somehow fell\n  through the cracks here for almost half a year :( Imo that's more than\n  enough flailing to just go ahead with the revert, and the re-broken\n  hsw should get peoples attention ...\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/i915: Undo gtt scratch pte unmapping again\n  drm/radeon: fix runtime suspend breaking secondary GPUs\n  drm/nouveau: fail runtime pm properly.\n  drm/udl: take reference to device struct for dma-bufs Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c build fix from Wolfram Sang:\n \"The build fix from my last request unveiled another build problem\n  which is fixed with this patch\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: cpm: Fix build by adding of_address.h and of_irq.h Merge tag 'stable/for-linus-3.14-rc8-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen bugfixes from David Vrabel:\n \"Fix two bugs that cause x86 PV guest crashes.\n\n  1. Ballooning a 32-bit guest would eventually crash it.\n\n  2. Revert a broken fix for a regression with NUMA_BALACING.  The bad\n     fix caused PV guests to crash after migration.  This is not ideal\n     but unpicking the madness that is _PAGE_NUMA == _PAGE_PROTNONE will\n     take a while longer\"\n\n* tag 'stable/for-linus-3.14-rc8-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  Revert \"xen: properly account for _PAGE_NUMA during xen pte translations\"\n  xen/balloon: flush persistent kmaps in correct position Merge tag 'trace-fixes-v3.14-rc7-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fix from Steven Rostedt:\n \"While on my flight to Linux Collaboration Summit, I was working on my\n  slides for the event trigger tutorial.  I booted a 3.14-rc7 kernel to\n  perform what I wanted to teach and cut and paste it into my slides.\n  When I tried the traceon event trigger with a condition attached to it\n  (turns tracing on only if a field of the trigger event matches a\n  condition set by the user), nothing happened.  Tracing would not turn\n  on.  I stopped working on my presentation in order to find what was\n  wrong.\n\n  It ended up being the way trace event triggers work when they have\n  conditions.  Instead of copying the fields, the condition code just\n  looks at the fields that were copied into the ring buffer.  This works\n  great, unless tracing is off.  That's because when the event is\n  reserved on the ring buffer, the ring buffer returns a NULL pointer,\n  this tells the tracing code that the ring buffer is disabled.  This\n  ends up being a problem for the traceon trigger if it is using this\n  information to check its condition.\n\n  Luckily the code that checks if tracing is on returns the ring buffer\n  to use (because the ring buffer is determined by the event file also\n  passed to that field).  I was able to easily solve this bug by\n  checking in that helper function if the returned ring buffer entry is\n  NULL, and if so, also check the file flag if it has a trace event\n  trigger condition, and if so, to pass back a temp ring buffer to use.\n  This will allow the trace event trigger condition to still test the\n  event fields, but nothing will be recorded\"\n\n* tag 'trace-fixes-v3.14-rc7-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix traceon trigger condition to actually turn tracing on fs: remove now stale label in anon_inode_init()\n\nThe previous commit removed the register_filesystem() call and the\nassociated error handling, but left the label for the error path that no\nlonger exists.  Remove that too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'nfsd-next' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd fix frm Bruce Fields:\n \"J R Okajima sent this early and I was just slow to pass it along,\n  apologies.  Fortunately it's a simple fix\"\n\n* 'nfsd-next' of git://linux-nfs.org/~bfields/linux:\n  nfsd: fix lost nfserrno() call in nfsd_setattr() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"These four commits are obvious fixes (a couple of fdget_pos()-related\n  ones from Eric Biggers, prepend_name() fix, missing checks for false\n  negatives from __lookup_mnt() in fs/namei.c)\"\n\nFor now I'm pulling just the four obvious fixes, there's another four\npending in Al's 'for-linus' branch wrt the mnt_hash list that were more\ninvolved.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  rcuwalk: recheck mount_lock after mountpoint crossing attempts\n  make prepend_name() work correctly when called with negative *buflen\n  vfs: Don't let __fdget_pos() get FMODE_PATH files\n  vfs: atomic f_pos access in llseek() Linux 3.14-rc8 Merge branch 'parisc-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc updates from Helge Deller:\n - revert parts of the latest patch regarding font selection with STICON\n   console\n - wire up the utimes() syscall for parisc\n - remove the unused parisc tmpalias code and unnecessary arch*relax\n   defines\n\n* 'parisc-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: locks: remove redundant arch_*_relax operations\n  parisc: wire up sys_utimes\n  parisc: Remove unused CONFIG_PARISC_TMPALIAS code\n  partly revert commit 8a10bc9: parisc/sti_console: prefer Linux fonts over built-in ROM fonts Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n\n 1) Do serial locking in a way that makes things clear that these are\n    IRQ spinlocks.\n\n 2) Conversion to generic idle loop broke first generation Niagara\n    machines, need to have %pil interrupts enabled during cpu yield\n    hypervisor call.\n\n 3) Do not use magic constants for iterations over tsb tables, from Doug\n    Wilson.\n\n 4) Fix erroneous truncation of 64-bit system call return values to\n    32-bit.  From Dave Kleikamp.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: Make sure %pil interrupts are enabled during hypervisor yield.\n  sparc64:tsb.c:use array size macro rather than number\n  sparc64: don't treat 64-bit syscall return codes as 32-bit\n  sparc: serial: Clean up the locking for -rt Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) OpenVswitch's lookup_datapath() returns error pointers, so don't\n    check against NULL.  From Jiri Pirko.\n\n 2) pfkey_compile_policy() code path tries to do a GFP_KERNEL allocation\n    under RCU locks, fix by using GFP_ATOMIC when necessary.  From\n    Nikolay Aleksandrov.\n\n 3) phy_suspend() indirectly passes uninitialized data into the ethtool\n    get wake-on-land implementations.  Fix from Sebastian Hesselbarth.\n\n 4) CPSW driver unregisters CPTS twice, fix from Benedikt Spranger.\n\n 5) If SKB allocation of reply packet fails, vxlan's arp_reduce() defers\n    a NULL pointer.  Fix from David Stevens.\n\n 6) IPV6 neigh handling in vxlan doesn't validate the destination\n    address properly, and it builds a packet with the src and dst\n    reversed.  Fix also from David Stevens.\n\n 7) Fix spinlock recursion during subscription failures in TIPC stack,\n    from Erik Hugne.\n\n 8) Revert buggy conversion of davinci_emac to devm_request_irq, from\n    Chrstian Riesch.\n\n 9) Wrong flags passed into forwarding database netlink notifications,\n    from Nicolas Dichtel.\n\n10) The netpoll neighbour soliciation handler checks wrong ethertype,\n    needs to be ETH_P_IPV6 rather than ETH_P_ARP.  Fix from Li RongQing.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (34 commits)\n  tipc: fix spinlock recursion bug for failed subscriptions\n  vxlan: fix nonfunctional neigh_reduce()\n  net: davinci_emac: Fix rollback of emac_dev_open()\n  net: davinci_emac: Replace devm_request_irq with request_irq\n  netpoll: fix the skb check in pkt_is_ns\n  net: micrel : ks8851-ml: add vdd-supply support\n  ip6mr: fix mfc notification flags\n  ipmr: fix mfc notification flags\n  rtnetlink: fix fdb notification flags\n  tcp: syncookies: do not use getnstimeofday()\n  netlink: fix setsockopt in mmap examples in documentation\n  openvswitch: Correctly report flow used times for first 5 minutes after boot.\n  via-rhine: Disable device in error path\n  ATHEROS-ATL1E: Convert iounmap to pci_iounmap\n  vxlan: fix potential NULL dereference in arp_reduce()\n  cnic: Update version to 2.5.20 and copyright year.\n  cnic,bnx2i,bnx2fc: Fix inconsistent use of page size\n  cnic: Use proper ulp_ops for per device operations.\n  net: cdc_ncm: fix control message ordering\n  ipv6: ip6_append_data_mtu do not handle the mtu of the second fragment properly\n  ... Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Two oneliner 'perf bench' tooling fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf bench: Fix NULL pointer dereference in \"perf bench all\"\n  perf bench numa: Make no args mean 'run all tests' Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"Only two patches this time, one to fix ethernet probe order on at91\n  (better fix with proper device aliasing will be done for 3.15, this is\n  stop-gap), and one update to MAINTAINERS due to Freescale moving their\n  repo to kernel.org\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: at91: fix network interface ordering for sama5d36\n  MAINTAINERS: update IMX kernel git tree Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Some final few intel fixes, all regressions, all stable cc, and one\n  exynos oops fixer.\n\n  The biggest is probably the intel display error irqs one, but it seems\n  to fix a few crashes on startup, and one use after free in drm core\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/exynos: Fix (more) freeing issues in exynos_drm_drv.c\n  drm/i915: Disable stolen memory when DMAR is active\n  Revert \"drm/i915: don't touch the VDD when disabling the panel\"\n  drm: Fix use-after-free in the shadow-attache exit code\n  drm/i915: Don't enable display error interrupts from the start\n  drm/i915: Fix scanline counter fixup on BDW\n  drm/i915: Add a workaround for HSW scanline counter weirdness\n  drm/i915: Fix PSR programming futex: revert back to the explicit waiter counting code\n\nSrikar Dronamraju reports that commit b0c29f79ecea (\"futexes: Avoid\ntaking the hb->lock if there's nothing to wake up\") causes java threads\ngetting stuck on futexes when runing specjbb on a power7 numa box.\n\nThe cause appears to be that the powerpc spinlocks aren't using the same\nticket lock model that we use on x86 (and other) architectures, which in\nturn result in the \"spin_is_locked()\" test in hb_waiters_pending()\noccasionally reporting an unlocked spinlock even when there are pending\nwaiters.\n\nSo this reinstates Davidlohr Bueso's original explicit waiter counting\ncode, which I had convinced Davidlohr to drop in favor of figuring out\nthe pending waiters by just using the existing state of the spinlock and\nthe wait queue.\n\nReported-and-tested-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>\nOriginal-code-by: Davidlohr Bueso <davidlohr@hp.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'trace-fixes-v3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull trace fix from Steven Rostedt:\n \"Vaibhav Nagarnaik discovered that since 3.10 a clean-up patch made the\n  array index in the trace event format bogus.\n\n  He supplied an elegant solution that uses __stringify() and also\n  removes the need for the event_storage and event_storage_mutex and\n  also cuts off a few K of overhead from the trace events\"\n\n* tag 'trace-fixes-v3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix array size mismatch in format string Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"Another set of five fixes.  The most interesting one is a fix for race\n  condition in the local_irq_disable() implementation used by .S code\n  for pre-MIPS R2 processors only.  It leaves a race that's hard but not\n  impossible to hit; the others fairly obvious\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: Make local_irq_disable macro safe for non-Mipsr2\n  MIPS: Octeon: Fix warning in of_device_alloc on cn3xxx\n  MIPS: ftrace: Tweak safe_load()/safe_store() macros\n  MIPS: BCM47XX: Check all (32) GPIOs when looking for a pin\n  MIPS: Fix possible build error with transparent hugepages enabled Merge tag 'sound-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Just two minor bug fixes: a fix for a regression in oxygen driver that\n  was introduced in 3.14-rc1, and a stable fix for the return value of\n  compress offload open callback\"\n\n* tag 'sound-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: compress: Pass through return value of open ops callback\n  ALSA: oxygen: Xonar DG(X): fix Stereo Upmixing regression Merge tag 'pci-v3.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI resource management fix from Bjorn Helgaas:\n \"This is a fix for an AGP regression exposed by e501b3d87f00 (\"agp:\n  Support 64-bit APBASE\"), which we merged in v3.14-rc1.\n\n  We've warned about the conflict between the GART and PCI resources and\n  cleared out the PCI resource for a long time, but after e501b3d87f00,\n  we still *use* that cleared-out PCI resource.  I think the GART\n  resource is incorrect, so this patch removes it\"\n\n* tag 'pci-v3.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  Revert \"[PATCH] Insert GART region into resource map\" Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fix from Tejun Heo:\n \"One really late cgroup patch to fix error path in create_css().\n  Hitting this bug would be pretty rare but still possible and it gets\n  delayed we'd need to backport it through -stable anyway.  It only\n  updates error path in create_css() and has low chance of new\n  breakages\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: fix a failure path in create_css() Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"A single bugfix: make the scheduler clock on Vybrid SoCs count\n  forward\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource: vf_pit_timer: use complement for sched_clock reading Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull another kvm fix from Paolo Bonzini:\n \"A fix for a PowerPC bug that was introduced during the 3.14 merge\n  window\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: PPC: Book3S HV: Fix register usage when loading/saving VRSAVE\n  KVM: PPC: Book3S HV: Remove bogus duplicate code Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull final final block IO fixes from Jens Axboe:\n \"Yes, the last round was final. This one is final final.\n\n  The mtip32xx fix could have waited, but it's so simple and gets rid of\n  two warning spewages on load.  The two block flush fixes are critical\n  for blk-mq, and are the primary reason for this late pull request\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  mtip32xx: fix bad use of smp_processor_id()\n  block: change flush sequence list addition back to front add\n  block: fix q->flush_rq NULL pointer crash on dm-mpath flush Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS updates from Ralf Baechle:\n \"A fair number of fixes all across arch/mips.  Nothing really stands\n  out though APRP, the FPU code and syscall tracing code received\n  multiple patches those all were small\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: mark O32+FP64 experimental for now\n  MIPS: ftrace: Fix icache flush range error\n  MIPS: Fix syscall tracing interface\n  MIPS: asm: syscall: Fix copying system call arguments\n  MIPS: Octeon: Fix fall through on bar type OCTEON_DMA_BAR_TYPE_SMALL\n  MIPS: FPU: Fix conflict of register usage\n  MIPS: Replace CONFIG_MIPS64 and CONFIG_MIPS32_R2\n  MIPS: math-emu: Fix prefx detection and COP1X function field definition\n  MIPS: APRP: Choose the correct VPE loader by fixing the linking\n  MIPS: APRP: Unregister rtlx interrupt hook at module exit\n  MIPS: APRP: Fix the linking of rtlx interrupt hook\n  MIPS: bcm47xx: Include missing errno.h for ENXIO\n  MIPS: Alchemy: Fix unchecked kstrtoul return value\n  MIPS: Fix randconfig build error. Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n\n - fix for ordering of device removal actions in hidraw, by Fernando\n   Luis Vázquez Cao\n\n - fix for uninitialized workqueue usage in hid-sony, by Frank Praznik\n\n - device ID addition for new variant of Logitech G27, from Simon Wood\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: hid-lg4ff: Support new version of G27\n  HID: hidraw: fix warning destroying hidraw device files after parent\n  HID: sony: Fix work queue issues. Linux 3.14-rc7 Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Three small fixes\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/clock: Prevent tracing recursion in sched_clock_cpu()\n  stop_machine: Fix^2 race between stop_two_cpus() and stop_cpus()\n  sched/deadline: Deny unprivileged users to set/change SCHED_DEADLINE policy Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Misc smaller fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86: Fix leak in uncore_type_init failure paths\n  perf machine: Use map as success in ip__resolve_ams\n  perf symbols: Fix crash in elf_section_by_name\n  perf trace: Decode architecture-specific signal numbers Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"This is a set of six fixes.  Two are instant crash/null deref types\n  (storvsc and isci).  The two qla2xxx are initialisation problems that\n  cause MSI-X failures and card misdetection, the isci erroneous macro\n  is actually illegal C that's causing a miscompile with certain gcc\n  versions and the be2iscsi bad if expression is a static checker fix\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  [SCSI] storvsc: NULL pointer dereference fix\n  [SCSI] qla2xxx: Poll during initialization for ISP25xx and ISP83xx\n  [SCSI] isci: correct erroneous for_each_isci_host macro\n  [SCSI] isci: fix reset timeout handling\n  [SCSI] be2iscsi: fix bad if expression\n  [SCSI] qla2xxx: Fix multiqueue MSI-X registration. Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"Two x86 fixes: Suresh's eager FPU fix, and a fix to the NUMA quirk for\n  AMD northbridges.\n\n  This only includes Suresh's fix patch, not the \"mostly a cleanup\"\n  patch which had __init issues\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/amd/numa: Fix northbridge quirk to assign correct NUMA node\n  x86, fpu: Check tsk_used_math() in kernel_fpu_end() for eager FPU Merge tag 'pm+acpi-3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"Three of these are regression fixes, for two recent regressions and\n  one introduced during the 3.13 cycle, and the fourth one is a working\n  version of the fix that had to be reverted last time.\n\n  Specifics:\n\n   - A recent ACPI resources handling fix overlooked the fact that it\n     had to update the ACPI PNP subsystem's resources parsing too and\n     caused confusing warning messages to be printed during system\n     intialization on some systems (with arguably buggy ACPI tables).\n     Fix from Zhang Rui.\n\n   - Moving the early ACPI initialization before timekeeping_init()\n     earlier in this cycle broke fast TSC calibration on at least one\n     system, so it needs to be done later, but still before\n     efi_enter_virtual_mode() to allow the EFI initialization to refer\n     to ACPI.\n\n   - A change related to code duplication reduction in the cpufreq core\n     inadvertently caused cpufreq intialization to fail for some CPUs\n     handled by intel_pstate by adding checks that may fail for that\n     driver, but aren't even necessary when it is used.  The issue is\n     addressed by preventing those checks from run in the configurations\n     in which they aren't needed.\n\n   - If the Hardware Reduced ACPI flag is set in the ACPI tables, system\n     suspend, hibernation and ACPI power off will only work when special\n     sleep control and sleep status registeres are provided (their\n     addresses in the ACPI tables are not zero).  If those registers are\n     not available, the features in question have no chances to work, so\n     they shouldn't even be regarded as supported.  That helps with\n     power off in particular, because alternative power off methods may\n     be used then and they may actually work\"\n\n* tag 'pm+acpi-3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / sleep: Add extra checks for HW Reduced ACPI mode sleep states\n  ACPI / init: Invoke early ACPI initialization later\n  cpufreq: Skip current frequency initialization for ->setpolicy drivers\n  PNP / ACPI: proper handling of ACPI IO/Memory resource parsing failures Merge tag 'dm-3.14-fixes-4' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device-mapper fixes form Mike Snitzer:\n \"Two small fixes for the DM cache target:\n\n   - fix corruption with >2TB fast device due to truncation bug\n   - fix access beyond end of origin device due to a partial block\"\n\n* tag 'dm-3.14-fixes-4' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm cache: fix access beyond end of origin device\n  dm cache: fix truncation bug when copying a block to/from >2TB fast device Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Pretty minor set of fixes for radeon, ttm and vmwgfx.  The ttm ones\n  are a regression and an oops seen on server chipsets\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/vmwgfx: Fix a surface reference corner-case in legacy emulation mode\n  drm/radeon/cik: properly set compute ring status on disable\n  drm/radeon/cik: stop the sdma engines in the enable() function\n  drm/radeon/cik: properly set sdma ring status on disable\n  drm/radeon: fix runpm disabling on non-PX harder\n  drm/ttm: don't oops if no invalidate_caches()\n  drm/ttm: Work around performance regression with VM_PFNMAP Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c Kconfig fix from Wolfram Sang.\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: Remove usage of orphaned symbol OF_I2C Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"I know this is a bit more than you want to see, and I've told the\n  wireless folks under no uncertain terms that they must severely scale\n  back the extent of the fixes they are submitting this late in the\n  game.\n\n  Anyways:\n\n   1) vmxnet3's netpoll doesn't perform the equivalent of an ISR, which\n      is the correct implementation, like it should.  Instead it does\n      something like a NAPI poll operation.  This leads to crashes.\n\n      From Neil Horman and Arnd Bergmann.\n\n   2) Segmentation of SKBs requires proper socket orphaning of the\n      fragments, otherwise we might access stale state released by the\n      release callbacks.\n\n      This is a 5 patch fix, but the initial patches are giving\n      variables and such significantly clearer names such that the\n      actual fix itself at the end looks trivial.\n\n      From Michael S.  Tsirkin.\n\n   3) TCP control block release can deadlock if invoked from a timer on\n      an already \"owned\" socket.  Fix from Eric Dumazet.\n\n   4) In the bridge multicast code, we must validate that the\n      destination address of general queries is the link local all-nodes\n      multicast address.  From Linus Lüssing.\n\n   5) The x86 BPF JIT support for negative offsets puts the parameter\n      for the helper function call in the wrong register.  Fix from\n      Alexei Starovoitov.\n\n   6) The descriptor type used for RTL_GIGA_MAC_VER_17 chips in the\n      r8169 driver is incorrect.  Fix from Hayes Wang.\n\n   7) The xen-netback driver tests skb_shinfo(skb)->gso_type bits to see\n      if a packet is a GSO frame, but that's not the correct test.  It\n      should use skb_is_gso(skb) instead.  Fix from Wei Liu.\n\n   8) Negative msg->msg_namelen values should generate an error, from\n      Matthew Leach.\n\n   9) at86rf230 can deadlock because it takes the same lock from it's\n      ISR and it's hard_start_xmit method, without disabling interrupts\n      in the latter.  Fix from Alexander Aring.\n\n  10) The FEC driver's restart doesn't perform operations in the correct\n      order, so promiscuous settings can get lost.  Fix from Stefan\n      Wahren.\n\n  11) Fix SKB leak in SCTP cookie handling, from Daniel Borkmann.\n\n  12) Reference count and memory leak fixes in TIPC from Ying Xue and\n      Erik Hugne.\n\n  13) Forced eviction in inet_frag_evictor() must strictly make sure all\n      frags are deleted, otherwise module unload (f.e.  6lowpan) can\n      crash.  Fix from Florian Westphal.\n\n  14) Remove assumptions in AF_UNIX's use of csum_partial() (which it\n      uses as a hash function), which breaks on PowerPC.  From Anton\n      Blanchard.\n\n      The main gist of the issue is that csum_partial() is defined only\n      as a value that, once folded (f.e.  via csum_fold()) produces a\n      correct 16-bit checksum.  It is legitimate, therefore, for\n      csum_partial() to produce two different 32-bit values over the\n      same data if their respective alignments are different.\n\n  15) Fix endiannes bug in MAC address handling of ibmveth driver, also\n      from Anton Blanchard.\n\n  16) Error checks for ipv6 exthdrs offload registration are reversed,\n      from Anton Nayshtut.\n\n  17) Externally triggered ipv6 addrconf routes should count against the\n      garbage collection threshold.  Fix from Sabrina Dubroca.\n\n  18) The PCI shutdown handler added to the bnx2 driver can wedge the\n      chip if it was not brought up earlier already, which in particular\n      causes the firmware to shut down the PHY.  Fix from Michael Chan.\n\n  19) Adjust the sanity WARN_ON_ONCE() in qdisc_list_add() because as\n      currently coded it can and does trigger in legitimate situations.\n      From Eric Dumazet.\n\n  20) BNA driver fails to build on ARM because of a too large udelay()\n      call, fix from Ben Hutchings.\n\n  21) Fair-Queue qdisc holds locks during GFP_KERNEL allocations, fix\n      from Eric Dumazet.\n\n  22) The vlan passthrough ops added in the previous release causes a\n      regression in source MAC address setting of outgoing headers in\n      some circumstances.  Fix from Peter Boström\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (70 commits)\n  ipv6: Avoid unnecessary temporary addresses being generated\n  eth: fec: Fix lost promiscuous mode after reconnecting cable\n  bonding: set correct vlan id for alb xmit path\n  at86rf230: fix lockdep splats\n  net/mlx4_en: Deregister multicast vxlan steering rules when going down\n  vmxnet3: fix building without CONFIG_PCI_MSI\n  MAINTAINERS: add networking selftests to NETWORKING\n  net: socket: error on a negative msg_namelen\n  MAINTAINERS: Add tools/net to NETWORKING [GENERAL]\n  packet: doc: Spelling s/than/that/\n  net/mlx4_core: Load the IB driver when the device supports IBoE\n  net/mlx4_en: Handle vxlan steering rules for mac address changes\n  net/mlx4_core: Fix wrong dump of the vxlan offloads device capability\n  xen-netback: use skb_is_gso in xenvif_start_xmit\n  r8169: fix the incorrect tx descriptor version\n  tools/net/Makefile: Define PACKAGE to fix build problems\n  x86: bpf_jit: support negative offsets\n  bridge: multicast: enable snooping on general queries only\n  bridge: multicast: add sanity check for general query destination\n  tcp: tcp_release_cb() should release socket ownership\n  ... Merge tag 'pci-v3.14-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n \"These are two important regression fixes for bugs we've introduced so\n  far in v3.14.\n\n  One of the resource allocation changes from the merge window is broken\n  for 32-bit kernels where we don't use _CRS for PCI host bridges\n  (mostly pre-2008 machines), so there's a fix for that.\n\n  The INTx enable change we put in after the merge window turned out to\n  break pciehp because we re-enable INTx on the hotplug bridge, which\n  apparently breaks MSI for future hotplug events\"\n\n* tag 'pci-v3.14-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: Don't check resource_size() in pci_bus_alloc_resource()\n  PCI: Enable INTx in pci_reenable_device() only when MSI/MSI-X not enabled Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n \"The ARM patch fixes a build breakage with randconfig.  The x86 one\n  fixes Windows guests on AMD processors\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: SVM: fix cr8 intercept window\n  ARM: KVM: fix non-VGIC compilation Merge tag 'sound-3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A few fixes for ASoC (N810 DT init fix, DPCM error path fix and a\n  couple of MFD init fixes), and a fix for a Lenovo laptop.  All small\n  and trivial fixes, suitable for rc7\"\n\n* tag 'sound-3.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ASoC: 88pm860: Fix IO setup\n  ASoC: si476x: Fix IO setup\n  ALSA: hda - Fix loud click noise with IdeaPad 410Y\n  ASoC: pcm: free path list before exiting from error conditions\n  ASoC: n810: fix init with DT boot Merge branch 'for-next' of git://git.samba.org/sfrench/cifs-2.6\n\nPull CIFS fixes from Steve French:\n \"A fix for the problem which Al spotted in cifs_writev and a followup\n  (noticed when fixing CVE-2014-0069) patch to ensure that cifs never\n  sends more than the smb frame length over the socket (as we saw with\n  that cifs_iovec_write problem that Jeff fixed last month)\"\n\n* 'for-next' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: mask off top byte in get_rfc1002_length()\n  cifs: sanity check length of data to send before sending\n  CIFS: Fix wrong pos argument of cifs_find_lock_conflict Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull audit namespace fixes from Eric Biederman:\n \"Starting with 3.14-rc1 the audit code is faulty (think oopses and\n  races) with respect to how it computes the network namespace of which\n  socket to reply to, and I happened to notice by chance when reading\n  through the code.\n\n  My testing and the automated build bots don't find any problems with\n  these fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  audit: Update kdoc for audit_send_reply and audit_list_rules_send\n  audit: Send replies in the proper network namespace.\n  audit: Use struct net not pid_t to remember the network namespce to reply in Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge misc fixes from Andrew Morton:\n \"Nine fixes\"\n\n* emailed patches from Andrew Morton akpm@linux-foundation.org>:\n  cris: convert ffs from an object-like macro to a function-like macro\n  hfsplus: add HFSX subfolder count support\n  tools/testing/selftests/ipc/msgque.c: handle msgget failure return correctly\n  MAINTAINERS: blackfin: add git repository\n  revert \"kallsyms: fix absolute addresses for kASLR\"\n  mm/Kconfig: fix URL for zsmalloc benchmark\n  fs/proc/base.c: fix GPF in /proc/$PID/map_files\n  mm/compaction: break out of loop on !PageBuddy in isolate_freepages_block\n  mm: fix GFP_THISNODE callers and clarify Put the dive number and location in the window title bar\n\nI suspect the \"info\" area is better used for actual values, so move the\ndive location into the window title instead (using date if no location\ninfo), and title the info frame with date and time.\n\nThis just means that the date/time gets removed from inside the frame:\nwe may want to put air consumption info in there instead?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak plot scaling a bit\n\nChange the duration max rounding as noted by Dirk, and move the air\nconsumption down further towards the bottom right corner.  In\nparticular, I make the text positions not scale with the window size,\npurely by the size of the text.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use plot_info for final remaining temperature and pressure data plots too\n\nOk, this is pretty much it now.  Instead of having various random checks\nfor \"is the time of the sample past the end of the dive\" hacks, we not\nplot all graphs from the cleaned-up plot_info structure instead of the\nraw samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot pressure data based on 'struct plot_info' rather than raw dive data\n\nFurther movement to using the sanitized and cleaned-up plot info rather\nthan the raw data.\n\nThe raw dive data contains samples from the end of the dive that we\ndon't want to drop, but that we also don't want to actually use for\nplotting the dive.  So the eventual end goal here is to not ever use the\nraw dive samples directly for plotting, but use the diveplot data that\nwe have analyzed for min/max (properly ignoring final entries) etc.\n\nThere's still some data that we take from the samples when plotting, but\nit's getting rarer.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do min/max pressure and temperature based on the non-surface data\n\nDo the min/max calculations only *after* we have removed the extra\nsurface events at the end.\n\nThe Uemis data in particular has a lot of surface events after the dive,\nand we don't really want to take them into account since we won't be\nplotting them anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot temperature info using 'struct plot_info' rather than the raw dive samples\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start using 'plot_info' more for dive-time limits\n\n.. I'll want to move pressure limit calculations into the 'plot_info',\nso that we can do several passes of analysis and change dive limits etc\nwithout having to actually modify the dive data itself (or add new\nfields to 'struct dive' just for plotting).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do libdivecomputer imports in a separate thread\n\nThis is the hackiest thing ever, unless you count the previous code that\nwas even hackier (and just called the gtk main routine at random\nplaces).\n\nThe libdivecomputer library is not really set up to be part of the gtk\nmain loop, and cannot afford (for example) to have lots of mainloop\nevents while it's parsing.  Some dive computers are very timing\nsensitive for the communication.\n\nSo just start a thread for doing the libdivecomputer stuff, and just\ncontinually call the gtk main loop while that thread is running.  I'm\nsure we could actually use some gtk signalling thing to make the thread\nexit do the right thing, but instead we just poll the status every\n100ms.\n\nI did say it was hacky.  It does seem to work, though.  No more\ntemporary graying out of the windows when they don't react in a timely\nmanner because libdivecomputer does some blocking operation.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Support gps coordinates for the location info\n\nSadly, no way to show them yet.  But it would be nice to let people\nenter them (and it would be doubly nice to have a dive computer that\ndoes it at the surface), and then perhaps just do the \"point browser at\ngoogle maps\" thing.\n\nSaving/parsing tested by hand-feeding the location of Enenui (Molokini\nCrater) from google maps by hand into my divelog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename the project 'subsurface'\n\nI never really liked 'diveclog' as a name - it's not like the C part is\nall that important.  And while I could try to just make up another slang\nword for despicable person (in the tradition of naming all my projects\nafter myself), I just can't see it.\n\nSo let's just call it \"subsurface\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Flush any pending changes at notebook 'switch-page' time\n\nDirk points out that equipment changes (cylinder size etc) do not cause\na proper repaint of the dive profile with new SAC information.  The\nreason? We haven't flushed the changes when the notebook changes from\nthe equipment page to the dive profile page.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> I'm trying to figure something out that prints reasonably..\n\nI'll get there.  Shrink it down a bit, start adding notes and location,\nand maybe put three per page. That might work.\n\n.. or maybe I should just take a look at how others have done this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the printout look different\n\nNot *better* mint you. Just different.\n\nI suck at graphs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add the capability to print a dive profile\n\nOk, this is the ugliest f*&$ing printout I have ever seen in my life,\nbut think of it as a \"the concept of printing works\" commit, and you'll\nbe able to hold your lunch down and not gouge out your eyeballs with a\nspoon.  Maybe.\n\nI'm just doing the cairo display as-is for the printout, which is a\nseriously bad idea.  I need to not try to do colors etc, and instead of\nhaving white lines on a black background I just need to make thelines be\nblack on white paper.\n\nBut that would involve actually changing the current \"plot()\" routine,\nwhich is against the point of the exercise right now.  This really is\njust a demonstration of how to add printing capabilities.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add divemaster/buddy field and text entry\n\nI have it in some of my notes, and Dirk seems to fill that in too, so\nlet's just show it, save it, and allow editing of it..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Separate the notion of creating the cylinder widgets from showing them\n\nNow we always create the MAX_CYLINDER sets of cylinder widgets.  But we\ndon't actually pack them into the frame - that's a separate phase.\n\nRight now we still do the stupid \"always just pack two cylinders\" thing,\nbut the idea is that we can pack just as many as the dive needs on a\nper-dive basis.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make multiple cylinders actually work\n\nThis just always shows two cylinders, which is obviously bogus, but it's\na good test-case for the multi-cylinder case.\n\nI need to figure out how to dynamically show the right number of\ncylinders, but that also involves the notion of adding a cylinder in\norder to fill out information that didn't use to exist.\n\nThat's lower priority - now the infrastructure seems to be there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> More work on abstracting the gtk cylinder widget thing\n\nOk, now we have an array of them, and most of the time we pass the right\npointer back and forth.\n\nThere's still a couple of places that hardcode \"gtk_cylinder[0]\" as the\ndata, but by now they are mostly things that should iterate over all the\ncylinders.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start abstracting out the cylinder equipment widgets\n\nCreate a \"struct cylinder_widget\" so that when we handle multiple\ncylinders, we can match them up with the actual cylinder data;\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Always pack the widgets into boxes, not frames\n\nLet's try to be consistent about this.  Make the parent of each widget\nbe a box.  Maybe the frames come with boxes, but since I have no clue\nabout gtk, I'm going to just always create them by hand.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a checkbox for nitrox settings\n\nGrey out the nitrox value unless the user explicitly checks the checkbox.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use round line noins and caps\n\nIt doesn't really make much of a difference, but it can be visible\nespecially with lots of tight samples.  Miter joins really look horrible\nfor acute angles.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Label the temperature graph\n\nOooh, pretty.\n\nOr not.  The temperature graph is usually ugly as hell, but Dirk has the\ncool dive computer with lots and lots of temperature readings.  Which\nmakes the graph a pretty graph, rather than a butt-ugly staircase like\nmine.\n\nNext time: get a dive computer with an OLED screen, and that can draw\npretty temperature graphs.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot a sick kind of temperature curve\n\n.. without the actual text, because I'm a \"random plots that cannot\nactually be interpreted\" kind of guy.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the README about libdivecomputer\n\nThe build instructions are in the git commit log too, but let's make\nthem a bit easier to find.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save empty cylinder descriptions in the xml\n\nThey get created when the equipment thing doesn't have a name for the\ncylinder, but we don't want to save that lack of description.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do some basic sanity testing on the libdivecomputer gasmix data\n\nIt's quite often obvious crap for the \"doesn't exist\" or \"plain air\" case.\n\nSo if it's reporting 100% O2, we just ignore it.  Sure, it could be\nright, but for the dives I have I know it's just libdivecomputer being\nwrong.\n\nSame goes for obvious crap like 255% Helium.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Libdivecomputer: start actually importing the dive data\n\nSo this actually reports the dive data that libdivecomputer generates.\nIt doesn't import special events etc, but neither do we for the xml\nimporter.\n\nIt is also slow as heck, since it doesn't try to do the \"hey, I already\nhave this dive\" logic and always imports everything, but the basics are\ndefinitely there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Abstract out dive/sample allocation a bit\n\nWe're going to start to want to allocate dives and samples for the\nlibdivecomputer import too, so let's clean things up a bit for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> libdivecomputer integration: add a progress bar\n\nInstead of writing out the progress events, use them to update a real\nprogress bar.\n\nAlso, we need to handle gtk events while busy with the dive computer\nreading.  That should *probably* be done with a threading model, because\nlibdivecomputer does seem to have some timing sensitivity - I'm getting\n\"failure to read memory block\" if I make that loop do the standard\n\n\twhile (gtk_events_pending())\n\t\t  gtk_main_iteration();\n\nthing.  Besides, even if we did do that loop, it would still cause\nproblems when the libdivecomputer code is stuck reading a serial line\nthat doesn't respond or whatever.\n\nBut for now this ugly hack is \"good enough\" to get further.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Libdivecomputer integration, part n+1\n\nThis actually gets me far enough that it prints out all the dives on my\ndive computer.  It doesn't actually turn them into real dives yet,\nthough - only a series of ugly 'printf's so far.\n\nAnd it hangs after printing the last dive. So I'm doing something wrong.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> More libdivecomputer boilerplate stuff\n\n.. fill in the event parsing.  This doesn't generate the fingerprint\nlike the example does, I just don't care about that yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Further work on libdivecomputer integration\n\n.. this now registers the dive parsing callback, and starts to parse the\ndata.  So I can see the last divetime on my Suunto Vyper Air now.\n\nStill a lot more boilerplate stuff to go, though.  The libdivecomputer\ninterfaces really are pretty insane: why should the caller set up the\ndive parsing for each computer type, when libdivecomputer knows what\ntypes it has? IOW, much of that boilerplate should be hidden inside of\nlibdivecomputer, rather than exposed to the user.\n\nBut whatever.  I'm taking pieces from \"examples/universal.c\" as I go\nalong (it's under LGPL 2.1).  I want to do it in small chunks just to\nfeel that I understand what's going on, rather than just blindly copying\nit all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Flesh out the libdivecomputer interfaces some more\n\n.. start some error reporting, and register some early (empty)\ncallbacks.\n\nThis still doesn't actually do anything.  But commit early, commit\noften: when I start seriously breaking things, I want to have a \"hey,\nthis still at least compiled\" state.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make 'report_error()' usable from outside of main.c\n\nThe dive computer import code will want to show errors too..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid using type 'gasmix_t': use 'struct gasmix' instead\n\nlibdivecomputer already uses 'gasmix_t' for its own gasmix thing.  I\ndon't like th eway we step on each others name spaces, but hey, might as\nwell just use 'struct gasmix' and avoid the typedef.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start some very initial libdivecomputer integration\n\nOk, so this is quite broken right now: it doesn't actually really *do*\nanything, and it now requires that you have libdivecomputer all set up\nand installed.\n\nThat is fairly easy:\n\n\tmkdir ../src\n\tcd ../src\n\tgit clone git://libdivecomputer.git.sourceforge.net/gitroot/libdivecomputer/libdivecomputer\n\tcd libdivecomputer\n\tautoreconf --install\n\t./configure\n\tmake\n\tsudo make install\n\nbut you may feel that this is not exactly useful considering that\nnothing actually *works* yet.\n\nSome day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up dive info box too\n\nMake it denser by putting the dive number/location in the frame label,\nand make it size up and down more naturally.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Accept a smaller profile window\n\nI'm trying to make sure that we can shrink the main window and still get\na useful experience.  Sometimes you have small bad netbooks when diving..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a 'Renumber' menu choice\n\nIf you want to re-number your dives - either because they didn't have\nany numbering at all, or because you forgot about other dives - you now\ncan.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Pack all the equipment widgets into boxes\n\nWe really do want to \"pack\" them, rather than use up the whole size.  I\nthink.\n\nI may end up playing around more with this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops. Fix 'buffered dive' information\n\nWhen fixing the unit changes, I broke the dive buffering logic entirely\nfor switching between dives. Duh.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Work around more Diving Log bugs..\n\nThe Diving Log temperature reading is in Fahrenheit for the samples (for\nthe per-dive water/air temperature it's in Celsius).  But it seems to\nhave a bug where a lack of a sample has been turned into 32 Fahrenheit\n(which is 0 celsius).  This is despite the dive itself having a water\ntemperature of 8 degF.\n\nJust throw away those bogus freezing temperatures.  Sure, they can\nhappen, and ice divers are crazy - but in this case I know it's just an\nerror in the log, and it looks very much like a Diving Log bug.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Call an LP85 an LP85 even when it's \"10% extra\".\n\nThe LP85+ name is not something we'd normally want to recognize.  The LP\ncylinder names all tend to be by the \"+\" pressure anyway, and that's\nwhat we do in the equipment handling naming.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Be more careful about unit changes\n\nWhen we change units, we need to flush any currently active dive\ninformation in the old units, and then carefully reload it in the new\nunits.\n\nOtherwise crazy stuff happens - like having current cylinder working\npressure values that are in PSI because that *used* to be the output\nunit, but then interpreting those values as BAR, because we changed the\nunits.\n\nAlso, since we now properly import working pressure from Diving Log,\nstop importing the (useless) cylinder description.  The Diving Log\ncylinder descriptions are things like \"Alu\" or \"Steel\".  We're better\noff just making up our own.\n\nFinally, since Diving Log has cylinder size in metric, make sure that we\ndo the \"match standard cylinder sizes\" *after* we've done all the\ncylinder size conversions to proper units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse 'Diving Log' cylinder working pressure\n\nOh Gods. Why are all other scuba programs so f*&% messed up?\n\nThe Diving Log cylinder working pressure is in bar - which is all good.\nBut their pressure *samples* are in PSI.  Why the h*ll do people mix up\nunits in the same damn file like that? I despair at the pure\nincompetence sometimes.\n\nI suspect the pressure samples aren't \"really\" in PSI: they are probably\nin some user-specified units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up dive number naming\n\nUse \"dive->number\" instead of \"dive->nr\". And make the XML match too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive number (if it exists) in the location note\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save and restore a \"dive number\"\n\nSome people want to know how many dives they have under their belt, so\nlet's save and restore the dive number if it exists.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add more static cylinder types - and pick them up from the dive log\n\nThis adds a few more predefined cylinder types to the static list, but\nperhaps more importantly, if we try to show a cylinder description that\nwe haven't seen before, we automatically add that description to the\nlist as well.\n\nThis way, if people have their own cylinder types, our cylinder\nmanagement will automatically figure them out and make it easy to enter\nthem.\n\nNOTE! It might be best to add the new cylinder description at dive log\nload time, rather than at 'show' time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add new cylinder models to the cylinder model store\n\nWe also need to actually fill the model store with the cylinder models\nwe have in our dive lists to begin with.\n\nThis makes it all *trivial* to add a new cylinder model: just use a new\ndescription, fill in the size and working pressure, and you're done.\nThe type automatically gets filled in, unless that description already\nexisted (in which case we leave it alone).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Let people manage their cylinders in cuft and psi\n\nIf the output units are set to cuft and psi, then we should show the\ncylinder size and pressure properly.\n\nNOTE! In the absense of pressure data, we *always* show the cylinder\nvolume in liter.  There's no way to convert it to imperial units, since\nthe imperial units are not in physical size, but in air volume\nnormalized to surface pressure..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Declare 'update_dive()' properly\n\nAvoid a compiler warning..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Now that we don't mess up import, we can save the cylinder working pressure\n\nWe used to have the heuristic that if we saw a cylinder working\npressure, then the cylinder size would be in cuft.  Which meant that we\ncouldn't export our working pressures, because it would mess things up\non import.\n\nBut working pressure is actually nice to know, if you ever work with\ncylinders in imperial units.  So now that the import is fixed, add the\nworking pressure to the export.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't guess input cylinder size as cubic feet\n\nThat just screws up the good xml files that have everything in\nwell-defined units and chose the sane metric units.\n\nSo do the cuft -> liter conversion only if the input units are\nexplicitly CUFT, or known ambiguous input (SUUNTO).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Actually connect the cylinder configuration with the dive\n\nIt seems to be sufficiently useful to be worth updating the dive\ninformation now.\n\nThis still doesn't handle multiple cylinders in any way.  I need to\nthink about the interface for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Getting closer to a usable cylinder management interface\n\nNot quite there yet, though. And never mind multiple cylinders..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> First (broken) try at actually tracking cylinder types\n\nThis doesn't actually change the cylinder type info in the dive, because\nit's too broken for that.  Instead it prints out what it would change\nthings to.\n\nThe gtk2 notion of text input focus is *really* odd.  Why is the\ncylinder type sometimes selected, and sometimes not?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename 'cylinder.c' as 'equipment.c'\n\nMake it about general equipment management, and start hooking up\nfunctions to show new equipment information when changing dives (and to\nflush changes to equipment information for the previously active dive).\n\nNothing is hooked up yet, and it's now showing just one (really big)\ncylinder choice, so this is all broken.  But it should make it possible\nto at least get somewhere some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show tank type and O2 mix for air usage\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a notebook for cylinder information\n\nOk, so it's not connected to anything yet, and the tank choices (that\ndon't do anything) are some random hardcoded collection, but maybe it\nwill do something some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use the analyzed local minima/maxima for depth text plotting\n\nInstead of relying on our ad-hoc minmax finder, just use the local\nminima/maxima information directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use an indirect pointer to min/max entry rather than value\n\nThis way we can always find the actual min/max entry that generated the\nlocal minima/maxima.  Which is useful for visualization.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save default units using GConf\n\nThat seems to be the gtk2 way.  Whatever.  diveclog ends up defaulting\nto metric units, because we all know that's the right thing to do.\nHowever, I learnt to dive in the US, so I'm used to seeing psi and feet.\n\nSo despite the sane defaults, I want diveclog to use the broken imperial\nunits for me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the min/max data in funky purple shading\n\nDirk likes purple. I mean - Dirk REALLY likes purple.\n\nAnd what's better than \"purple\"? You got it: \"funky purple\".\n\nSo this shows the one- two- and three-minute min/max information in some\nseriously funky purple fringing.  It's not really necessarily meant to\nbe serious, but it's a quick hack to visualize the data until we figure\nout what to *really* do with it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start analyzing depth profile: smoothing and time-based min/max/avg\n\nThis turns the depth profile into a generic \"plot_info\" and calculates\nminima, maxima and averages over 1-, 2- and 3-minute intervals for each\npoint.  It also creates a smoothed version.\n\nWe currently don't actually show the results, but that's the next step..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the shallow points of the dive too\n\n.. unless they are so shallow that they are basically at the surface.\n\nThese show up automatically in out min/max logic, so just go ahead and\nshow them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move text rendering function upwards\n\nNo change in semantics, I'm just contemplating doing some text renderign\nfrom within the \"minmax\" function itself.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add font size to the text_render_options structure\n\nOk, so it's really a 'double', but for now we're only using integer font\nsizes, so let's see if we ever want to do anything but that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn tail recursion back into a loop\n\nI still think there should be some way to partition the space\nautomatically, but the algorithm that worked best was the simple\ntail-recursive one.\n\nWhich might as well be expressed as a loop.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of timelimit code and corner cases\n\nThe recursive minmax is now robust without them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up plot_text_samples() further\n\nWe don't actually use the 'dive' structure any more, since we now always\nhave the sample pointers directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Simplify/clean up depth min/max finder\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up horribly broken cairo scaling\n\nThe way cairo does scaling is really really inconvenient, and one of the\nthings in cairo that is fundamentally mis-designed.\n\nCairo scaling always affects both coordinates and object sizes, and the\ntwo can apparently never be split apart.  Which is very much not what we\nwant: we want just coordinate scaling.\n\nSo we cannot use 'cairo_scale()' to scale our canvas, because that\nscrews up lines and text size too.  And no, you cannot \"fix\" that by\nde-scaling the line size etc - because line size is one-dimensional, so\nyou can't undo the (different) scaling in X/Y.\n\nSad.  I realize that often you do want to scale object size with\ncoordinate transformation, but quite often you *don't* want to.\n\nYeah, we could do random context save/restore in odd places etc, but\nthat's just a sign of the bad design of cairo scaling.\n\nWork around it by introducing our own graphics context with scaling,\nwhich does it right.  I don't like this, but it seems to be better than\nthe alternatives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a recursive (instead of iterative) minmax depth finder\n\nThis is a bit more natural, and makes it much easier to do scale\nindependence.  In particular, I want to make it possible to grow and\nshrink the graph, and this should make it particularly simple to react\nby giving more or fewer minmax points.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak depth next_minmax() interface\n\nUse start/end sample pointers to make a recursive algorithm possible.\n\nAlso, clean up the end condition - we don't want to return an\nuninteresting minmax result just because we ran out of samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the dive units without destroyng and rebuilding the dive list\n\nJust iterate over the dive list entries, updating them one by one.\n\nThis avoids the \"selection destroyed\" when the dive units are changed.\nAnd it's cleaner anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add Ok/Cancel buttons to unit dialog\n\n.. instead of just having a live running dialog all the time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do output unit conversion in the dive info window too\n\nThis should take care of it all, unless I missed some case.\n\nNow we should just save the default units somewhere, and I should do the\ndivelist update much cleaner (instead of re-doing the divelist entirely,\nit should just repaint it - now we lose the highlited dive etc).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Honor depth unit settings when plotting the depth profile\n\nThis shows the depth properly in meter or feet depending on unit\nselection.\n\nIt also changes the horizontal depth rulers to be at 10m/30ft intervals\nrather than the previous 15ft.  With the textual depth markers, the\nhorizontal lines aren't as important any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make divelist honor the length units\n\nShow dives in meter or feet depending on the output unit setting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add GtkTreeViewColumn information to 'struct DiveList'\n\nWe will need the column information in order to update the naming when\nthe units change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add radio buttons for temperature and volume\n\n.. and clean up some of the conversions.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make a 'units' dialog window\n\nSet the output units to feet/meter or psi/bar.\n\nOf course, we only actually react to the psi/bar one right now, but it's\nall coming some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start doing gas management using output units\n\nOk, it's an odd place to start, but this now shows the pressure curve\ndetails and the air usage in the proper units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up type handling of cylinder pressure plot\n\nSoon we'll show things in psi or bar depending on user choice.  Let's\nnot get confused about units before we do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start \"output unit management\" support\n\nThis doesn't actually *do* anything yet, but it introduces the notion of\noutput units, and allows you to pick metric or imperial.\n\nOf course, since the output doesn't currently care, the units you pick\nare irrelevant.  But just wait..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Minimally parse some UDDF format dives\n\nDive dates (at least partial parsing), depths and times.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add framework for UDDF importer\n\nThere are several sample UDDF files around on the net, so we might as\nwell start importing some of it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'cairo_translate()' instead of manual translation\n\nI'd like to do 'cairo_scale()' too, but that messes up line sizes.  I'll\nthink about it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'dirk'\n\n* dirk:\n  Print starting and ending pressures\n\nFix up conflicts in profile.c due to different ways to set the text\nformatting.  Dirk's 'text_format_options' thing is prettier than mine.\nUse it. Add some information about properly formatted commit messages\n\nIt does seem like a lot of github users are not used to good commit\nmessage rules, and may never have used git for a project that actually\ncares about good logs and nice summary lines.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'patch-1' of git://github.com/schacon/diveclog\n\n* 'patch-1' of git://github.com/schacon/diveclog:\n  Add more explicit contributing explanation Add some air usage statistics to the dive plot\n\nShow \"absolute volume\" used, and SAC/m (surface-equivalent per minute).\n\nI'm not going to guarantee the calculations.  And I show the result in\ncubic feet.  Sue me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do cylinder pressure plot first, then depth, then text notes\n\nText notes need to be last, so that they don't get stepped on by the\nother graph elements.\n\nAlso, separate the depth text plot out into a function of its own.\nTidier that way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak the \"show depth in text\" heuristic a bit\n\nUse a 10-minute window *or* when the depth has reversed sufficiently to\nmake the max we've found interesting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot some numerical depth markers\n\nAdd some actual numbers to the depth plot too.  Do it by finding the\ndeepest points (within a five-minute rolling window), and show the\ndepths of those points.\n\nSure, we could have just labeled the depth markers, but this seems\nnicer. But what do I know - I'm not exactly famous for my GUI design.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Repaint the dives in dive_list_update_dives() instead of in callers\n\nEach caller ends up needing it, and I missed another one.  So rather\nthan update the other caller, just do it in dive_list_update_dives() and\nwe can stop worrying about it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update dive info and profile after loading files\n\nWe did this when loading from the command line, but not when loading\nthrough the file load menu item.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'open-files' of git://github.com/nathansamson/diveclog\n\n* 'open-files' of git://github.com/nathansamson/diveclog:\n  Report errors when opening files\n  Make it possible to load multiple files at once.\n  Open File works. I refactored the code and introduced a new type. I never used it as a pointer (their was no real reason), but I'm not really satisfied. Libdivecomputer: start actually importing the dive data\n\nSo this actually reports the dive data that libdivecomputer generates.\nIt doesn't import special events etc, but neither do we for the xml\nimporter.\n\nIt is also slow as heck, since it doesn't try to do the \"hey, I already\nhave this dive\" logic and always imports everything, but the basics are\ndefinitely there.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Abstract out dive/sample allocation a bit\n\nWe're going to start to want to allocate dives and samples for the\nlibdivecomputer import too, so let's clean things up a bit for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> libdivecomputer integration: add a progress bar\n\nInstead of writing out the progress events, use them to update a real\nprogress bar.\n\nAlso, we need to handle gtk events while busy with the dive computer\nreading.  That should *probably* be done with a threading model, because\nlibdivecomputer does seem to have some timing sensitivity - I'm getting\n\"failure to read memory block\" if I make that loop do the standard\n\n\twhile (gtk_events_pending())\n\t\t  gtk_main_iteration();\n\nthing.  Besides, even if we did do that loop, it would still cause\nproblems when the libdivecomputer code is stuck reading a serial line\nthat doesn't respond or whatever.\n\nBut for now this ugly hack is \"good enough\" to get further.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Libdivecomputer integration, part n+1\n\nThis actually gets me far enough that it prints out all the dives on my\ndive computer.  It doesn't actually turn them into real dives yet,\nthough - only a series of ugly 'printf's so far.\n\nAnd it hangs after printing the last dive. So I'm doing something wrong.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> More libdivecomputer boilerplate stuff\n\n.. fill in the event parsing.  This doesn't generate the fingerprint\nlike the example does, I just don't care about that yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Further work on libdivecomputer integration\n\n.. this now registers the dive parsing callback, and starts to parse the\ndata.  So I can see the last divetime on my Suunto Vyper Air now.\n\nStill a lot more boilerplate stuff to go, though.  The libdivecomputer\ninterfaces really are pretty insane: why should the caller set up the\ndive parsing for each computer type, when libdivecomputer knows what\ntypes it has? IOW, much of that boilerplate should be hidden inside of\nlibdivecomputer, rather than exposed to the user.\n\nBut whatever.  I'm taking pieces from \"examples/universal.c\" as I go\nalong (it's under LGPL 2.1).  I want to do it in small chunks just to\nfeel that I understand what's going on, rather than just blindly copying\nit all.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Flesh out the libdivecomputer interfaces some more\n\n.. start some error reporting, and register some early (empty)\ncallbacks.\n\nThis still doesn't actually do anything.  But commit early, commit\noften: when I start seriously breaking things, I want to have a \"hey,\nthis still at least compiled\" state.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make 'report_error()' usable from outside of main.c\n\nThe dive computer import code will want to show errors too..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Avoid using type 'gasmix_t': use 'struct gasmix' instead\n\nlibdivecomputer already uses 'gasmix_t' for its own gasmix thing.  I\ndon't like th eway we step on each others name spaces, but hey, might as\nwell just use 'struct gasmix' and avoid the typedef.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start some very initial libdivecomputer integration\n\nOk, so this is quite broken right now: it doesn't actually really *do*\nanything, and it now requires that you have libdivecomputer all set up\nand installed.\n\nThat is fairly easy:\n\n\tmkdir ../src\n\tcd ../src\n\tgit clone git://libdivecomputer.git.sourceforge.net/gitroot/libdivecomputer/libdivecomputer\n\tcd libdivecomputer\n\tautoreconf --install\n\t./configure\n\tmake\n\tsudo make install\n\nbut you may feel that this is not exactly useful considering that\nnothing actually *works* yet.\n\nSome day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up dive info box too\n\nMake it denser by putting the dive number/location in the frame label,\nand make it size up and down more naturally.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Accept a smaller profile window\n\nI'm trying to make sure that we can shrink the main window and still get\na useful experience.  Sometimes you have small bad netbooks when diving..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a 'Renumber' menu choice\n\nIf you want to re-number your dives - either because they didn't have\nany numbering at all, or because you forgot about other dives - you now\ncan.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Pack all the equipment widgets into boxes\n\nWe really do want to \"pack\" them, rather than use up the whole size.  I\nthink.\n\nI may end up playing around more with this.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops. Fix 'buffered dive' information\n\nWhen fixing the unit changes, I broke the dive buffering logic entirely\nfor switching between dives. Duh.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Work around more Diving Log bugs..\n\nThe Diving Log temperature reading is in Fahrenheit for the samples (for\nthe per-dive water/air temperature it's in Celsius).  But it seems to\nhave a bug where a lack of a sample has been turned into 32 Fahrenheit\n(which is 0 celsius).  This is despite the dive itself having a water\ntemperature of 8 degF.\n\nJust throw away those bogus freezing temperatures.  Sure, they can\nhappen, and ice divers are crazy - but in this case I know it's just an\nerror in the log, and it looks very much like a Diving Log bug.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Call an LP85 an LP85 even when it's \"10% extra\".\n\nThe LP85+ name is not something we'd normally want to recognize.  The LP\ncylinder names all tend to be by the \"+\" pressure anyway, and that's\nwhat we do in the equipment handling naming.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Be more careful about unit changes\n\nWhen we change units, we need to flush any currently active dive\ninformation in the old units, and then carefully reload it in the new\nunits.\n\nOtherwise crazy stuff happens - like having current cylinder working\npressure values that are in PSI because that *used* to be the output\nunit, but then interpreting those values as BAR, because we changed the\nunits.\n\nAlso, since we now properly import working pressure from Diving Log,\nstop importing the (useless) cylinder description.  The Diving Log\ncylinder descriptions are things like \"Alu\" or \"Steel\".  We're better\noff just making up our own.\n\nFinally, since Diving Log has cylinder size in metric, make sure that we\ndo the \"match standard cylinder sizes\" *after* we've done all the\ncylinder size conversions to proper units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse 'Diving Log' cylinder working pressure\n\nOh Gods. Why are all other scuba programs so f*&% messed up?\n\nThe Diving Log cylinder working pressure is in bar - which is all good.\nBut their pressure *samples* are in PSI.  Why the h*ll do people mix up\nunits in the same damn file like that? I despair at the pure\nincompetence sometimes.\n\nI suspect the pressure samples aren't \"really\" in PSI: they are probably\nin some user-specified units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up dive number naming\n\nUse \"dive->number\" instead of \"dive->nr\". And make the XML match too.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show dive number (if it exists) in the location note\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save and restore a \"dive number\"\n\nSome people want to know how many dives they have under their belt, so\nlet's save and restore the dive number if it exists.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add more static cylinder types - and pick them up from the dive log\n\nThis adds a few more predefined cylinder types to the static list, but\nperhaps more importantly, if we try to show a cylinder description that\nwe haven't seen before, we automatically add that description to the\nlist as well.\n\nThis way, if people have their own cylinder types, our cylinder\nmanagement will automatically figure them out and make it easy to enter\nthem.\n\nNOTE! It might be best to add the new cylinder description at dive log\nload time, rather than at 'show' time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add new cylinder models to the cylinder model store\n\nWe also need to actually fill the model store with the cylinder models\nwe have in our dive lists to begin with.\n\nThis makes it all *trivial* to add a new cylinder model: just use a new\ndescription, fill in the size and working pressure, and you're done.\nThe type automatically gets filled in, unless that description already\nexisted (in which case we leave it alone).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Let people manage their cylinders in cuft and psi\n\nIf the output units are set to cuft and psi, then we should show the\ncylinder size and pressure properly.\n\nNOTE! In the absense of pressure data, we *always* show the cylinder\nvolume in liter.  There's no way to convert it to imperial units, since\nthe imperial units are not in physical size, but in air volume\nnormalized to surface pressure..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Declare 'update_dive()' properly\n\nAvoid a compiler warning..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Now that we don't mess up import, we can save the cylinder working pressure\n\nWe used to have the heuristic that if we saw a cylinder working\npressure, then the cylinder size would be in cuft.  Which meant that we\ncouldn't export our working pressures, because it would mess things up\non import.\n\nBut working pressure is actually nice to know, if you ever work with\ncylinders in imperial units.  So now that the import is fixed, add the\nworking pressure to the export.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't guess input cylinder size as cubic feet\n\nThat just screws up the good xml files that have everything in\nwell-defined units and chose the sane metric units.\n\nSo do the cuft -> liter conversion only if the input units are\nexplicitly CUFT, or known ambiguous input (SUUNTO).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Actually connect the cylinder configuration with the dive\n\nIt seems to be sufficiently useful to be worth updating the dive\ninformation now.\n\nThis still doesn't handle multiple cylinders in any way.  I need to\nthink about the interface for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Getting closer to a usable cylinder management interface\n\nNot quite there yet, though. And never mind multiple cylinders..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> First (broken) try at actually tracking cylinder types\n\nThis doesn't actually change the cylinder type info in the dive, because\nit's too broken for that.  Instead it prints out what it would change\nthings to.\n\nThe gtk2 notion of text input focus is *really* odd.  Why is the\ncylinder type sometimes selected, and sometimes not?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename 'cylinder.c' as 'equipment.c'\n\nMake it about general equipment management, and start hooking up\nfunctions to show new equipment information when changing dives (and to\nflush changes to equipment information for the previously active dive).\n\nNothing is hooked up yet, and it's now showing just one (really big)\ncylinder choice, so this is all broken.  But it should make it possible\nto at least get somewhere some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show tank type and O2 mix for air usage\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a notebook for cylinder information\n\nOk, so it's not connected to anything yet, and the tank choices (that\ndon't do anything) are some random hardcoded collection, but maybe it\nwill do something some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use the analyzed local minima/maxima for depth text plotting\n\nInstead of relying on our ad-hoc minmax finder, just use the local\nminima/maxima information directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use an indirect pointer to min/max entry rather than value\n\nThis way we can always find the actual min/max entry that generated the\nlocal minima/maxima.  Which is useful for visualization.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save default units using GConf\n\nThat seems to be the gtk2 way.  Whatever.  diveclog ends up defaulting\nto metric units, because we all know that's the right thing to do.\nHowever, I learnt to dive in the US, so I'm used to seeing psi and feet.\n\nSo despite the sane defaults, I want diveclog to use the broken imperial\nunits for me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the min/max data in funky purple shading\n\nDirk likes purple. I mean - Dirk REALLY likes purple.\n\nAnd what's better than \"purple\"? You got it: \"funky purple\".\n\nSo this shows the one- two- and three-minute min/max information in some\nseriously funky purple fringing.  It's not really necessarily meant to\nbe serious, but it's a quick hack to visualize the data until we figure\nout what to *really* do with it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start analyzing depth profile: smoothing and time-based min/max/avg\n\nThis turns the depth profile into a generic \"plot_info\" and calculates\nminima, maxima and averages over 1-, 2- and 3-minute intervals for each\npoint.  It also creates a smoothed version.\n\nWe currently don't actually show the results, but that's the next step..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the shallow points of the dive too\n\n.. unless they are so shallow that they are basically at the surface.\n\nThese show up automatically in out min/max logic, so just go ahead and\nshow them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move text rendering function upwards\n\nNo change in semantics, I'm just contemplating doing some text renderign\nfrom within the \"minmax\" function itself.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add font size to the text_render_options structure\n\nOk, so it's really a 'double', but for now we're only using integer font\nsizes, so let's see if we ever want to do anything but that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn tail recursion back into a loop\n\nI still think there should be some way to partition the space\nautomatically, but the algorithm that worked best was the simple\ntail-recursive one.\n\nWhich might as well be expressed as a loop.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of timelimit code and corner cases\n\nThe recursive minmax is now robust without them.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up plot_text_samples() further\n\nWe don't actually use the 'dive' structure any more, since we now always\nhave the sample pointers directly.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Simplify/clean up depth min/max finder\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up horribly broken cairo scaling\n\nThe way cairo does scaling is really really inconvenient, and one of the\nthings in cairo that is fundamentally mis-designed.\n\nCairo scaling always affects both coordinates and object sizes, and the\ntwo can apparently never be split apart.  Which is very much not what we\nwant: we want just coordinate scaling.\n\nSo we cannot use 'cairo_scale()' to scale our canvas, because that\nscrews up lines and text size too.  And no, you cannot \"fix\" that by\nde-scaling the line size etc - because line size is one-dimensional, so\nyou can't undo the (different) scaling in X/Y.\n\nSad.  I realize that often you do want to scale object size with\ncoordinate transformation, but quite often you *don't* want to.\n\nYeah, we could do random context save/restore in odd places etc, but\nthat's just a sign of the bad design of cairo scaling.\n\nWork around it by introducing our own graphics context with scaling,\nwhich does it right.  I don't like this, but it seems to be better than\nthe alternatives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a recursive (instead of iterative) minmax depth finder\n\nThis is a bit more natural, and makes it much easier to do scale\nindependence.  In particular, I want to make it possible to grow and\nshrink the graph, and this should make it particularly simple to react\nby giving more or fewer minmax points.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak depth next_minmax() interface\n\nUse start/end sample pointers to make a recursive algorithm possible.\n\nAlso, clean up the end condition - we don't want to return an\nuninteresting minmax result just because we ran out of samples.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update the dive units without destroyng and rebuilding the dive list\n\nJust iterate over the dive list entries, updating them one by one.\n\nThis avoids the \"selection destroyed\" when the dive units are changed.\nAnd it's cleaner anyway.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add Ok/Cancel buttons to unit dialog\n\n.. instead of just having a live running dialog all the time.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do output unit conversion in the dive info window too\n\nThis should take care of it all, unless I missed some case.\n\nNow we should just save the default units somewhere, and I should do the\ndivelist update much cleaner (instead of re-doing the divelist entirely,\nit should just repaint it - now we lose the highlited dive etc).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Honor depth unit settings when plotting the depth profile\n\nThis shows the depth properly in meter or feet depending on unit\nselection.\n\nIt also changes the horizontal depth rulers to be at 10m/30ft intervals\nrather than the previous 15ft.  With the textual depth markers, the\nhorizontal lines aren't as important any more.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make divelist honor the length units\n\nShow dives in meter or feet depending on the output unit setting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add GtkTreeViewColumn information to 'struct DiveList'\n\nWe will need the column information in order to update the naming when\nthe units change.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add radio buttons for temperature and volume\n\n.. and clean up some of the conversions.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make a 'units' dialog window\n\nSet the output units to feet/meter or psi/bar.\n\nOf course, we only actually react to the psi/bar one right now, but it's\nall coming some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start doing gas management using output units\n\nOk, it's an odd place to start, but this now shows the pressure curve\ndetails and the air usage in the proper units.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up type handling of cylinder pressure plot\n\nSoon we'll show things in psi or bar depending on user choice.  Let's\nnot get confused about units before we do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start \"output unit management\" support\n\nThis doesn't actually *do* anything yet, but it introduces the notion of\noutput units, and allows you to pick metric or imperial.\n\nOf course, since the output doesn't currently care, the units you pick\nare irrelevant.  But just wait..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Minimally parse some UDDF format dives\n\nDive dates (at least partial parsing), depths and times.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add framework for UDDF importer\n\nThere are several sample UDDF files around on the net, so we might as\nwell start importing some of it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'cairo_translate()' instead of manual translation\n\nI'd like to do 'cairo_scale()' too, but that messes up line sizes.  I'll\nthink about it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'dirk'\n\n* dirk:\n  Print starting and ending pressures\n\nFix up conflicts in profile.c due to different ways to set the text\nformatting.  Dirk's 'text_format_options' thing is prettier than mine.\nUse it. Add some information about properly formatted commit messages\n\nIt does seem like a lot of github users are not used to good commit\nmessage rules, and may never have used git for a project that actually\ncares about good logs and nice summary lines.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'patch-1' of git://github.com/schacon/diveclog\n\n* 'patch-1' of git://github.com/schacon/diveclog:\n  Add more explicit contributing explanation Add some air usage statistics to the dive plot\n\nShow \"absolute volume\" used, and SAC/m (surface-equivalent per minute).\n\nI'm not going to guarantee the calculations.  And I show the result in\ncubic feet.  Sue me.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do cylinder pressure plot first, then depth, then text notes\n\nText notes need to be last, so that they don't get stepped on by the\nother graph elements.\n\nAlso, separate the depth text plot out into a function of its own.\nTidier that way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Tweak the \"show depth in text\" heuristic a bit\n\nUse a 10-minute window *or* when the depth has reversed sufficiently to\nmake the max we've found interesting.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot some numerical depth markers\n\nAdd some actual numbers to the depth plot too.  Do it by finding the\ndeepest points (within a five-minute rolling window), and show the\ndepths of those points.\n\nSure, we could have just labeled the depth markers, but this seems\nnicer. But what do I know - I'm not exactly famous for my GUI design.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Repaint the dives in dive_list_update_dives() instead of in callers\n\nEach caller ends up needing it, and I missed another one.  So rather\nthan update the other caller, just do it in dive_list_update_dives() and\nwe can stop worrying about it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update dive info and profile after loading files\n\nWe did this when loading from the command line, but not when loading\nthrough the file load menu item.\n\nReported-by: Dirk Hohndel <dirk@hohndel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'open-files' of git://github.com/nathansamson/diveclog\n\n* 'open-files' of git://github.com/nathansamson/diveclog:\n  Report errors when opening files\n  Make it possible to load multiple files at once.\n  Open File works. I refactored the code and introduced a new type. I never used it as a pointer (their was no real reason), but I'm not really satisfied. Add support from importing from Diving Log xml files\n\nThis is just a very rough draft.  It imports all the main stuff I\nnoticed, but I'm sure it drops a ton of other stuff.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the import source an enumeration\n\nInstead of having each import source recognition routine set a separate\nflag for that import source, just enumerate them and set them in one\nvariable.\n\nI'm adding yet another xml importer - divinglog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse Uemis cylinder data correctly.\n\nThere's a big comment there now about what is going on.  It took me a\nwhile to understand how the crazy seven-tank uemis dive computer\ninformation actually works.\n\nSo the Uemis computer has 4 different \"tank profiles\":\n - single tank air (0)\n - single tank nitrox (1)\n - two-tank nitrox (2)\n - three-tank nitrox (3)\nand the computer always lists all seven tank cases (because that's how\nyou fill them in).\n\nDepending on the \"gas.template\" you are supposed to then *use* just one\nparticular profile.  Why the computer doesn't just give you the tanks\nfor that one profile, who knows? It seems to be more of the same \"Uemis\ndive data isn't so much about the dive, it's about dive computer state\"\nmentality.\n\nSo we first get the profile information, and then based on that we need\nto pick the right tanks from the set of seven that we're presented with.\n\nAll clear?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn dive depth, temperature and duration into xml attributes\n\nThis makes the xml save-file look way nicer: it's both smaller and\nbetter organized.  Using individual xml nodes for random small details\nis silly.\n\nThe duration even parses exactly the same, because it still ends up\nbeing '.depth.duration' (now it's the 'duration' attribute of the dive\nnode, it used to be the 'duration' child node of the dive node).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Sanitize and fix cylinder pressure overview\n\nDoing per-dive cylinder start/end pressures is insane, when we can have\nup to eight cylinders.  The cylinder start/end pressure cannot be per\ndive, it needs to be per cylinder.\n\nThis makes the save format cleaner too, we have all the cylinder data in\njust one place.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Zebra-color the divelist\n\n..as suggested by Nathan:\n\n  \"I also wanted to \"zebra\" color the divelist by setting the rules-hint\n   to TRUE.  but I noticed it was already set explicitly to FALSE (even\n   if this is the default).\n\n   If this is just an accidental copy paste from some tutorial you can\n   experiment (set it to TRUE) and see what you like most.\"\n\nIt was indeed just copy-paste from some tutorial, and the zebra-coloring\ndoes look nicer, doesn't it?\n\nSuggested-by: Nathan Samson <nathansamson@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'more-divelist-goodness' of https://github.com/nathansamson/diveclog\n\n* 'more-divelist-goodness' of https://github.com/nathansamson/diveclog:\n  Right align the numbers Save milli-units with variable precision\n\nInstead of always using three decimal digits, use 1-3 digits.  But do\nuse at least one, even for integer numbers, just because it makes it so\nmuch clearer that we're dealing with potential fractional values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use common helper for printing milli-units\n\nI don't necessarily want to show three decimal digits when one or two\nwould do. So prepare for that by using a helper. This doesn't actually\nchange the printout yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly save/restore cylinder description string\n\nWe saved it under the wrong name, and didn't restore it at all. Fix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse uemis cylinder data\n\nThis is some seriously crazy stuff.  Instead of making sense as a\ndivelog, the uemis xml makes more sense as a \"dive computer settings\ndump\".\n\nAnd I guess I can see why they'd do that.  But it makes parsing it just\nincredibly annoying.  The thing is more of a \"these are the\nconfigurations I support as a dive computer thing\" than a \"this was the\ntank you were diving with\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-tweaks' of https://github.com/nathansamson/diveclog\n\n* 'ui-tweaks' of https://github.com/nathansamson/diveclog:\n  Some UI beauty patches: Make a guess at the cylinder description from the size and pressure\n\nI'll want to also add a way to override/set the cylinder type: both\nmanually by just setting a size in liters, and by picking from some list\nof standard cylinder sizes.\n\nFor example, it looks like most of my dives are marked as having\n12-liter cylinders.  That is probably some default from Suunto Dive\nManager, or from whatever Dirk did.  It's almost certainly not right for\nany of them: as far as I know, the standard cylinders for Lahaina Divers\n(which is likely most of the warm water dives) are AL72's for air, and\nAL80's for Nitrox.\n\nThat would be a 10L and a 11.1L tank respectively, afaik.  I don't know\nwhat a 12-liter tank would be or where that size comes from.\n\nAnyway, the LP85+ tank designation for some of the dives looks more\nlikely: that's one of the common sizes I've used for local dives.  So\nthe size of that thing is much more probably correct.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up 'fixup_dive()' a bit\n\nWe don't want to override potentially more exact values for water\ntemperature etc either.  The sample save interval may be longer than\nsome internally kept state of key per-dive values like that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate date string for the dive list dynamically\n\n.. and sort based on the 'time_t' value itself.\n\nThis allows us to use a more compact date format that doesn't need to\nsort alphabetically, because sorting by date is always based on the date\nvalue.  So we can use just a two-digit year, and skip the seconds, to\nkeep the column narrow, while still sorting correctly.\n\nAlso, \"Depth\" is a nice header string, but it is wider than the column\nitself, which makes the whole column wider than necessary.  So put the\nunits in the header instead of in the string, keeping things narrow.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-improvements' of https://github.com/nathansamson/diveclog\n\n* 'ui-improvements' of https://github.com/nathansamson/diveclog:\n  Split the dive list in columns. Columns are sortable now (name = date, depth, duration)\n  Remove the redundant frames in the notebook. Closes #9\n  Use a pane so the dive list can be made wider or smaller to the users wishes Merge branch 'compiler-warning' of https://github.com/nathansamson/diveclog\n\n* 'compiler-warning' of https://github.com/nathansamson/diveclog:\n  Removed the unused startemp and enttemp calculations. This fixes a compiler warning too.\n\nFix up trivial conflict in dive.c due to the temperature simplification\n(commit 9961c7f89ce6: \"Remove redundant temperature readings\"). Add placeholder for cylinder type description\n\nSo we don't want to save working pressure, but cylinder type knowledge\nwould be lovely and useful.  And we can probably make a good initial\nguess, or at least let people fill it in later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save cylinder working pressure\n\nIt was a mistake to save it - and I did it just because other dive\nmanagers did.  It's a totally nonsensical measure, and nobody cares.\nThe only thing that matters is the size of the cylinder, and the\n*actual* pressures.  Those give actual air consumption numbers, and are\nmeaningful and unambiguous.\n\nSo the \"working pressure\" for a cylinder is pointless except for two\nthings:\n\n - if you don't know the actual physical size, you need the \"working\n   pressure\" along with the air size (eg \"85 cuft\") in order to compute\n   the physical size.  So we do use the working pressure on *input* from\n   systems that report cylinder sizes that way.\n\n - People may well want to know what kind of cylinder they were diving,\n   and again, you can make a good guess about this from the working\n   pressure.  So saving information like \"HP100+\" for the cylinder would\n   be a good thing.\n\nBut notice how in neither case do we actually want to save the working\npressure itself.  And in fact saving it actually makes the output format\nambiguous: if we give both size and working pressure, what does 'size'\nmean? Is it physical size in liters, or air size in cu ft?\n\nSo saving working pressure is just wrong. Get rid of it.\n\nI'm going to add some kind of \"cylinder description\" thing, which we can\nsave instead (and perhaps guess standard cylinders from input like the\nworking pressure from dive logs that don't do this sanely - which is all\nof them, as far as I can tell).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove redundant temperature readings\n\nI'm aiming to really differentiate in dive log software by making my XML\nexport files be *clean*, dammit.\n\nThat means that we don't have random names, we don't have crazy random\nunits, and we don't have redundant information.\n\nSo when the temperature doesn't change, just don't report it.  That's\nalready what \"no sample\" means, just clean things up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix typo in Makefile (LDLAGS -> LDFLAGS)\n\nReported-by: Konrad Delong <https://github.com/konryd>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'fix-entries' of https://github.com/nathansamson/diveclog\n\n* 'fix-entries' of https://github.com/nathansamson/diveclog:\n  Word wrap the info textview. Also do not show the scrollbars if not necessary.\n  Change location to a text entry instead of text view. Update gitignore for the name-change of the executable\n\nIt's not called 'parse' any more.  And I think I should rename 'divelog'\ntoo to something more unique.  Right now the working name for the\nproject is 'diveclog' (kind of like 'jdivelog') , but I'm not convinced\nthat the \"C implementation\" part is really important enough to make a\npoint of long-term.\n\n\"subsurface\"? I don't know.  Maybe I should follow the \"name all\nprojects after myself\" mantra.  \"divenut\"?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops. I forgot to 'fclose()' the file after saving the xml\n\nIt never actually triggered anything for me, but any buffered data might\nbe lost, especially if you force-exit the application after saving a\ndive log.\n\nThis probably explains a corrupted (truncated) dive file report from\nNathan Samson.\n\nReported-by: Nathan Samson <https://github.com/nathansamson>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'Quit' menu item, and fix invisible \"File\" on gtk2\n\nI didn't even notice that the \"File\" part of the file menu no longer\nshowed up, since the keyboard accelerator for ^S worked fine..  But\napparently there's no default label associated with GTK_STOCK_FILE in\ngtk2, so the \"File\" text went away with the conversion to GtkUIManager\nin commit 4d62478e14fe (\"Use the newer GtkUIManager for menu creation.\")\n\nThe addition of a Quit menu entry with the associated keyboard\naccelerator also makes ^Q \"just work\".\n\nOf course, if we actually tracked dirty state etc, we could perhaps ask\nthe user whether they wanted to save or something.  But I'm not exactly\nfamous for my GUI chops, so ..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge https://github.com/mrjbq7/diveclog\n\n* https://github.com/mrjbq7/diveclog:\n  dive.c: Fix spelling. Don't bother saving n2 percentage\n\nIt's all calculated anyway, and for the same reason we don't bother even\nparsing it at load time, we really shouldn't bother saving it either.\n\nThe only thing you can do with that value is \"check if the percentages\nadd up to 100%\", and so what?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Will Deacon:\n \"Here are some more arm64 fixes for 4.13. The main one is the PTE race\n  with the hardware walker, but there are a couple of other things too.\n\n   - Report correct timer frequency to userspace when trapping\n     CNTFRQ_EL0\n\n   - Fix race with hardware page table updates when updating access\n     flags\n\n   - Silence clang overflow warning in VA_START and PAGE_OFFSET\n     calculations\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: avoid overflow in VA_START and PAGE_OFFSET\n  arm64: Fix potential race with hardware DBM in ptep_set_access_flags()\n  arm64: Use arch_timer_get_rate when trapping CNTFRQ_EL0 Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n\n - block interrupts properly across the entire MMU context change (both\n   the hw MMU context change and the TSB table change) so that we don't\n   get a perf event interrupt in the middle. From Rob Gardner.\n\n - be sure to register hugepages early enough, from Nitin Gupta.\n\n - UltraSPARC-III user copy exception handling would return garbage for\n   the copied length in some circumstances.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: Fix exception handling in UltraSPARC-III memcpy.\n  sbus: Convert to using %pOF instead of full_name\n  sparc: defconfig: Cleanup from old Kconfig options\n  sparc64: Register hugepages during arch init\n  sparc64: Prevent perf from running during super critical sections Merge tag 'ceph-for-4.13-rc4' of git://github.com/ceph/ceph-client\n\nPull ceph fixes from Ilya Dryomov:\n \"A bunch of fixes and follow-ups for -rc1 Luminous patches: issues with\n  ->reencode_message() and last minute RADOS semantic changes in\n  v12.1.2\"\n\n* tag 'ceph-for-4.13-rc4' of git://github.com/ceph/ceph-client:\n  libceph: make RECOVERY_DELETES feature create a new interval\n  libceph: upmap semantic changes\n  crush: assume weight_set != null imples weight_set_size > 0\n  libceph: fallback for when there isn't a pool-specific choose_arg\n  libceph: don't call ->reencode_message() more than once per message\n  libceph: make encode_request_*() work with r_mempool requests Merge tag 'sound-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Now we hit the usual ASoC-fix-flood in the middle of release.\n\n  Most of the changes are trivial and device-specific, while one\n  significant change is the fix for unbalanced of_graph_*() refcounts.\n  This involved a change in the graph API itself that had been a bit\n  messy\"\n\n* tag 'sound-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Fix speaker output from VAIO VPCL14M1R\n  device property: Fix usecount for of_graph_get_port_parent()\n  ASoC: rt5665: fix wrong register for bclk ratio control\n  ASoC: Intel: Use MCLK instead of BLCK as the sysclock for RT5514 codec on kabylake platform\n  ASoC: Intel: Enabling ASRC for RT5663 codec on kabylake platform\n  ASoC: codecs: msm8916-analog: fix DIG_CLK_CTL_RXD3_CLK_EN define\n  ASoC: Intel: Skylake: Fix missing sentinels in sst_acpi_mach\n  ASoC: sh: hac: add missing \"int ret\"\n  ASoC: samsung: odroid: Fix EPLL frequency values\n  ASoC: sgtl5000: Use snd_soc_kcontrol_codec()\n  ASoC: rt5665: fix GPIO6 pin function define\n  ASoC: ux500: Restore platform DAI assignments\n  ASoC: fix pcm-creation regression\n  ASoC: do not close shared backend dailink\n  ASoC: pxa: SND_PXA2XX_SOC should depend on HAS_DMA\n  ASoC: Intel: Skylake: Fix default dma_buffer_size\n  ASoC: rt5663: Update the HW default values based on the shipping version\n  ASoC: imx-ssi: add check on platform_get_irq return value Merge tag 'iommu-fixes-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fixes from Joerg Roedel:\n\n - fix a scheduling-while-atomic bug in the AMD IOMMU driver. It was\n   found after the checker was enabled earlier.\n\n - a fix for the virtual APIC code in the AMD IOMMU driver which\n   delivers device interrupts directly into KVM guests for assigned\n   devices.\n\n - fixes for the recently merged lock-less page-table code for ARM. The\n   redundant TLB syncs got reverted and locks added again around the TLB\n   sync code.\n\n - fix for error handling in arm_smmu_add_device()\n\n - address sanitization fix for arm io-pgtable code\n\n* tag 'iommu-fixes-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  iommu/amd: Fix schedule-while-atomic BUG in initialization code\n  iommu/amd: Enable ga_log_intr when enabling guest_mode\n  iommu/io-pgtable: Sanitise map/unmap addresses\n  iommu/arm-smmu: Fix the error path in arm_smmu_add_device\n  Revert \"iommu/io-pgtable: Avoid redundant TLB syncs\"\n  iommu/mtk: Avoid redundant TLB syncs locally\n  iommu/arm-smmu: Reintroduce locking around TLB sync operations Merge tag 'mmc-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"A couple of mmc fixes intended for v4.13-rc4.\n\n  MMC core:\n   - Fix NULL pointer dereference for block I/O during hotplug\n\n  MMC host:\n   - sdhci-of-at91: Fix card detect for non-removable cards\"\n\n* tag 'mmc-v4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: block: bypass the queue even if usage is present for hotplug\n  mmc: sdhci-of-at91: force card detect value for non removable devices Merge tag 'drm-fixes-for-v4.13-rc4' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Either my email ate everything or everyone is on holidays, either way\n  all I can find is some lonely AMD fixes\"\n\n[ Europe might be on vacation, and the Pacific NW is too hot for work. ]\n\n* tag 'drm-fixes-for-v4.13-rc4' of git://people.freedesktop.org/~airlied/linux:\n  drm/amdgpu: Use list_del_init in amdgpu_mn_unregister\n  drm/amdgpu: Fix undue fallthroughs in golden registers initialization\n  drm/amdgpu: fix header on gfx9 clear state Merge tag 'powerpc-4.13-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"Fixes for recently merged code:\n   - a fix for the _PAGE_DEVMAP support, which was breaking KVM on\n     Power9 radix\n   - avoid a (harmless) lockdep warning in the early SMP code\n   - return failure for some uses of dma_set_mask() rather than falling\n     back to 32-bits\n   - fix stack setup in watchdog soft_nmi_common() to use emergency\n     stack\n   - fix of_irq_to_resource() error check in of_fsl_spi_probe()\n\n  Two fixes going to stable:\n   - fix saving of Transactional Memory SPRs in core dump\n   - fix __check_irq_replay missing decrementer interrupt\n\n  And two misc:\n   - fix 64-bit boot wrapper build with non-biarch compiler\n   - work around a POWER9 PMU hang after state-loss idle\n\n  Thanks to: Alistair Popple, Aneesh Kumar K.V, Cyril Bur, Gustavo\n  Romero, Jose Ricardo Ziviani, Laurent Vivier, Nicholas Piggin, Oliver\n  O'Halloran, Sergei Shtylyov, Suraj Jitindar Singh, Thomas Gleixner\"\n\n* tag 'powerpc-4.13-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/64: Fix __check_irq_replay missing decrementer interrupt\n  powerpc/perf: POWER9 PMU stops after idle workaround\n  powerpc/83xx/mpc832x_rdb: fix of_irq_to_resource() error check\n  powerpc/64s: Fix stack setup in watchdog soft_nmi_common()\n  powerpc/powernv/pci: Return failure for some uses of dma_set_mask()\n  powerpc/boot: Fix 64-bit boot wrapper build with non-biarch compiler\n  powerpc/smp: Call smp_ops->setup_cpu() directly on the boot CPU\n  powerpc/tm: Fix saving of TM SPRs in core dump\n  powerpc/mm: Fix pmd/pte_devmap() on non-leaf entries Merge tag 'vfio-v4.13-rc4' of git://github.com/awilliam/linux-vfio\n\nPull VFIO fixes from Alex Williamson:\n\n - SPAPR/EEH config build fix (Murilo Opsfelder Araujo)\n\n - Fix possible device lock deadlock (Alex Williamson)\n\n - Correctly size integrated endpoint PCIe capabilities (Alex\n   Williamson)\n\n* tag 'vfio-v4.13-rc4' of git://github.com/awilliam/linux-vfio:\n  vfio/pci: Fix handling of RC integrated endpoint PCIe capability size\n  vfio/pci: Use pci_try_reset_function() on initial open\n  include/linux/vfio.h: Guard powerpc-specific functions with CONFIG_VFIO_SPAPR_EEH Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"15 fixes\"\n\n[ This does not merge the \"fortify: use WARN instead of BUG for now\"\n  patch, which needs a bit of extra work to build cleanly with all\n  configurations. Arnd is on it.   - Linus ]\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  ocfs2: don't clear SGID when inheriting ACLs\n  mm: allow page_cache_get_speculative in interrupt context\n  userfaultfd: non-cooperative: flush event_wqh at release time\n  ipc: add missing container_of()s for randstruct\n  cpuset: fix a deadlock due to incomplete patching of cpusets_enabled()\n  userfaultfd_zeropage: return -ENOSPC in case mm has gone\n  mm: take memory hotplug lock within numa_zonelist_order_handler()\n  mm/page_io.c: fix oops during block io poll in swapin path\n  zram: do not free pool->size_class\n  kthread: fix documentation build warning\n  kasan: avoid -Wmaybe-uninitialized warning\n  userfaultfd: non-cooperative: notify about unmap of destination during mremap\n  mm, mprotect: flush TLB if potentially racing with a parallel reclaim leaving stale TLB entries\n  pid: kill pidhash_size in pidhash_init()\n  mm/hugetlb.c: __get_user_pages ignores certain follow_hugetlb_page errors Merge tag 'acpi-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fixes from Rafael Wysocki:\n \"These fix two issues in the ACPI SoC drivers (Intel LPSS and AMD APD),\n  a crash in the PCC mailbox initialization code and a WDAT watchdog\n  initialization failure.\n\n  Specifics:\n\n   - Fix a device ID of Hisilicon Hip07/08 in the ACPI APD (AMD SoC)\n     driver (Hanjun Guo).\n\n   - Fix list corruption (introduced during the 4.11 cycle) in the ACPI\n     LPSS (Intel SoC) driver (Hans de Goede).\n\n   - Fix PCC mailbox handling code crash during initialization when PCCT\n     is not present and PCC channel 0 is requested (Hoan Tran).\n\n   - Fix a WDAT watchdog initialization issue causing platform device\n     creation to fail due to partially overlapping address ranges in\n     resources (Ryan Kennedy)\"\n\n* tag 'acpi-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: APD: Fix HID for Hisilicon Hip07/08\n  mailbox: pcc: Fix crash when request PCC channel 0\n  ACPI / watchdog: Fix init failure with overlapping register regions\n  ACPI / LPSS: Only call pwm_add_table() for the first PWM controller Merge tag 'pm-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These fix two cpufreq issues, one introduced recently and one related\n  to recent changes, fix cpufreq documentation, fix up recently added\n  code in the Thunderbolt driver and update runtime PM framework\n  documentation.\n\n  Specifics:\n\n   - Fix the handling of the scaling_cur_freq cpufreq policy attribute\n     on x86 systems with the MPERF/APERF registers present to make it\n     behave more as expected after recent changes (Rafael Wysocki).\n\n   - Drop a leftover callback from the intel_pstate driver which also\n     prevents the cpuinfo_cur_freq cpufreq policy attribute from being\n     incorrectly exposed when intel_pstate works in the active mode\n     (Rafael Wysocki).\n\n   - Add a missing piece describing the cpuinfo_cur_freq policy\n     attribute to cpufreq documentation (Rafael Wysocki).\n\n   - Fix up a recently added part of the Thunderbolt driver to avoid\n     aborting system suspends if its mailbox commands time out (Rafael\n     Wysocki).\n\n   - Update device runtime PM framework documentation to reflect the\n     current behavior of the code (Johan Hovold)\"\n\n* tag 'pm-4.13-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  thunderbolt: icm: Ignore mailbox errors in icm_suspend()\n  cpufreq: x86: Make scaling_cur_freq behave more as expected\n  PM / runtime: Document new pm_runtime_set_suspended() constraint\n  cpufreq: docs: Add missing cpuinfo_cur_freq description\n  cpufreq: intel_pstate: Drop ->get from intel_pstate structure Merge tag 'nfs-for-4.13-4' of git://git.linux-nfs.org/projects/anna/linux-nfs\n\nPull NFS client fixes from Anna Schumaker:\n \"Two fixes from Trond this time, now that he's back from his vacation.\n  The first is a stable fix for the EXCHANGE_ID issue on the mailing\n  list, and the other fixes a double-free situation that he found at the\n  same time.\n\n  Stable fix:\n   - Fix EXCHANGE_ID corrupt verifier issue\n\n  Other fix:\n   - Fix double frees in nfs4_test_session_trunk()\"\n\n* tag 'nfs-for-4.13-4' of git://git.linux-nfs.org/projects/anna/linux-nfs:\n  NFSv4: Fix double frees in nfs4_test_session_trunk()\n  NFSv4: Fix EXCHANGE_ID corrupt verifier issue Merge tag 'platform-drivers-x86-v4.13-3' of git://git.infradead.org/linux-platform-drivers-x86\n\nPull x86 platform driver fixes from Darren Hart:\n \"Fix two bugs under error or abnormal usage conditions. Correct a\n  config dependency:\n\n  dell-wmi:\n   - Fix driver interface version query\n\n  wmi:\n   - Fix error handling in acpi_wmi_init()\n\n  peaq-wmi:\n   - select INPUT_POLLDEV\"\n\n* tag 'platform-drivers-x86-v4.13-3' of git://git.infradead.org/linux-platform-drivers-x86:\n  platform/x86: dell-wmi: Fix driver interface version query\n  platform/x86: wmi: Fix error handling in acpi_wmi_init()\n  platform/x86: peaq-wmi: select INPUT_POLLDEV Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"These seven patches are mostly minor build, Kconfig and error leg\n  fixes\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: qedi: Fix return code in qedi_ep_connect()\n  scsi: lpfc: fix linking against modular NVMe support\n  scsi: scsi_transport_fc: return -EBUSY for deleted vport\n  scsi: libcxgbi: add check for valid cxgbi_task_data\n  scsi: aic7xxx: fix firmware build with O=path\n  scsi: megaraid_sas: fix memleak in megasas_alloc_cmdlist_fusion\n  scsi: qedi: Add ISCSI_BOOT_SYSFS to Kconfig Merge branch 'parisc-4.13-4' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parsic fixes from Helge Deller:\n\n - Our cache flushing code ran into a BUG in case context is not\n   current. Fix it by flushing the whole cache in such rare situations\n   (by Dave Anglin).\n\n - Fix a \"sleeping function called from invalid context BUG\" in our\n   pdc_stable driver by rearranging our locks (by James Bottomley)\n\n - The thread and irq stacks require more than 16 KB since kernel 4.11.\n   Increase both to 32 KB.\n\n - Define CONFIG_CPU_BIG_ENDIAN unconditionally on parisc to avoid wrong\n   behaviour in qrwlock functions (by Babu Moger).\n\n* 'parisc-4.13-4' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Define CONFIG_CPU_BIG_ENDIAN\n  parisc: pdc_stable: Fix locking when creating sysfs links\n  parisc: Increase thread and stack size to 32kb\n  parisc: Handle vma's whose context is not current in flush_cache_range Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Handle notifier registry failures properly in tun/tap driver, from\n    Tonghao Zhang.\n\n 2) Fix bpf verifier handling of subtraction bounds and add a testcase\n    for this, from Edward Cree.\n\n 3) Increase reset timeout in ftgmac100 driver, from Ben Herrenschmidt.\n\n 4) Fix use after free in prd_retire_rx_blk_timer_exired() in AF_PACKET,\n    from Cong Wang.\n\n 5) Fix SElinux regression due to recent UDP optimizations, from Paolo\n    Abeni.\n\n 6) We accidently increment IPSTATS_MIB_FRAGFAILS in the ipv6 code\n    paths, fix from Stefano Brivio.\n\n 7) Fix some mem leaks in dccp, from Xin Long.\n\n 8) Adjust MDIO_BUS kconfig deps to avoid build errors, from Arnd\n    Bergmann.\n\n 9) Mac address length check and buffer size fixes from Cong Wang.\n\n10) Don't leak sockets in ipv6 udp early demux, from Paolo Abeni.\n\n11) Fix return value when copy_from_user() fails in\n    bpf_prog_get_info_by_fd(), from Daniel Borkmann.\n\n12) Handle PHY_HALTED properly in phy library state machine, from\n    Florian Fainelli.\n\n13) Fix OOPS in fib_sync_down_dev(), from Ido Schimmel.\n\n14) Fix truesize calculation in virtio_net which led to performance\n    regressions, from Michael S Tsirkin.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (76 commits)\n  samples/bpf: fix bpf tunnel cleanup\n  udp6: fix jumbogram reception\n  ppp: Fix a scheduling-while-atomic bug in del_chan\n  Revert \"net: bcmgenet: Remove init parameter from bcmgenet_mii_config\"\n  virtio_net: fix truesize for mergeable buffers\n  mv643xx_eth: fix of_irq_to_resource() error check\n  MAINTAINERS: Add more files to the PHY LIBRARY section\n  ipv4: fib: Fix NULL pointer deref during fib_sync_down_dev()\n  net: phy: Correctly process PHY_HALTED in phy_stop_machine()\n  sunhme: fix up GREG_STAT and GREG_IMASK register offsets\n  bpf: fix bpf_prog_get_info_by_fd to dump correct xlated_prog_len\n  tcp: avoid bogus gcc-7 array-bounds warning\n  net: tc35815: fix spelling mistake: \"Intterrupt\" -> \"Interrupt\"\n  bpf: don't indicate success when copy_from_user fails\n  udp6: fix socket leak on early demux\n  net: thunderx: Fix BGX transmit stall due to underflow\n  Revert \"vhost: cache used event for better performance\"\n  team: use a larger struct for mac address\n  net: check dev->addr_len for dev_set_mac_address()\n  phy: bcm-ns-usb3: fix MDIO_BUS dependency\n  ... Merge branch 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fixes from Tejun Heo:\n \"Several cgroup bug fixes.\n\n   - cgroup core was calling a migration callback on empty migrations,\n     which could make cpuset crash.\n\n   - There was a very subtle bug where the controller interface files\n     aren't created directly when cgroup2 is mounted. Because later\n     operations create them, this bug didn't get noticed earlier.\n\n   - Failed writes to cgroup.subtree_control were incorrectly returning\n     zero\"\n\n* 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: fix error return value from cgroup_subtree_control()\n  cgroup: create dfl_root files on subsys registration\n  cgroup: don't call migration methods if there are no tasks to migrate Merge branch 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fixes from Tejun Heo:\n \"Two notable fixes.\n\n   - While adding NUMA affinity support to unbound workqueues, the\n     assumption that an unbound workqueue with max_active == 1 is\n     ordered was broken.\n\n     The plan was to use explicit alloc_ordered_workqueue() for those\n     cases. Unfortunately, I forgot to update the documentation properly\n     and we grew a handful of use cases which depend on that assumption.\n\n     While we want to convert them to alloc_ordered_workqueue(), we\n     don't really lose anything by enforcing ordered execution on\n     unbound max_active == 1 workqueues and it doesn't make sense to\n     risk subtle bugs. Restore the assumption.\n\n   - Workqueue assumes that CPU <-> NUMA node mapping remains static.\n\n     This is a general assumption - we don't have any synchronization\n     mechanism around CPU <-> node mapping. Unfortunately, powerpc may\n     change the mapping dynamically leading to crashes. Michael added a\n     workaround so that we at least don't crash while powerpc hotplug\n     code gets updated\"\n\n* 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: Work around edge cases for calc of pool's cpumask\n  workqueue: implicit ordered attribute should be overridable\n  workqueue: restore WQ_UNBOUND/max_active==1 to be ordered Merge branch 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Dan found a really old bug where libata hotplug code wasn't sanitizing\n  index value from userland and may end up indexing with a negative\n  number. It is scary but fortunately can only be triggered by root.\n\n  Other than that, minor fixes\"\n\n* 'for-4.13-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  libata: fix a couple of doc build warnings\n  libata: array underflow in ata_find_dev()\n  ata: sata_rcar: add gen[23] fallback compatibility strings\n  libata: remove unused rc in ata_eh_handle_port_resume\n  libata: Cleanup ata_read_log_page()\n  ata: fix gemini Kconfig dependencies Linux 4.13-rc3 Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"A small set of x86 fixes:\n\n   - prevent the kernel from using the EFI reboot method when EFI is\n     disabled.\n\n   - two patches addressing clang issues\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/boot: Disable the address-of-packed-member compiler warning\n  x86/efi: Fix reboot_mode when EFI runtime services are disabled\n  x86/boot: #undef memcpy() et al in string.c Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Thomas Gleixner:\n \"Two patches addressing build warnings caused by inconsistent kernel\n  doc comments\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/wait: Clean up some documentation warnings\n  sched/core: Fix some documentation build warnings Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n \"A couple of fixes for performance counters and kprobes:\n\n   - a series of small patches which make the uncore performance\n     counters on Skylake server systems work correctly\n\n   - add a missing instruction slot release to the failure path of\n     kprobes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  kprobes/x86: Release insn_slot in failure path\n  perf/x86/intel/uncore: Fix missing marker for skx_uncore_cha_extra_regs\n  perf/x86/intel/uncore: Fix SKX CHA event extra regs\n  perf/x86/intel/uncore: Remove invalid Skylake server CHA filter field\n  perf/x86/intel/uncore: Fix Skylake server CHA LLC_LOOKUP event umask\n  perf/x86/intel/uncore: Fix Skylake server PCU PMU event format\n  perf/x86/intel/uncore: Fix Skylake UPI PMU event masks Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fix from Thomas Gleixner:\n \"Fix for a regression caused by the conversion of x86 to the generic\n  hotplug code.\n\n  Instead of doing a plain single line revert, this adds a pile of\n  comments so the semantics of the force argument are clear\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq/cpuhotplug: Revert \"Set force affinity flag on hotplug migration\" Merge tag 'devicetree-fixes-for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull DeviceTree fixes from Rob Herring:\n \"Two small DT fixes:\n\n   - Fix error handling in of_irq_to_resource_table() due to\n     of_irq_to_resource() error return changes.\n\n   - Fix dtx_diff script due to dts include path changes\"\n\n* tag 'devicetree-fixes-for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  of: irq: fix of_irq_to_resource() error check\n  scripts/dtc: dtx_diff - update include dts paths to match build Merge tag 'nfs-for-4.13-3' of git://git.linux-nfs.org/projects/anna/linux-nfs\n\nPull NFS client fixes from Anna Schumaker:\n \"More NFS client bugfixes for 4.13.\n\n  Most of these fix locking bugs that Ben and Neil noticed, but I also\n  have a patch to fix one more access bug that was reported after last\n  week.\n\n  Stable fixes:\n   - Fix a race where CB_NOTIFY_LOCK fails to wake a waiter\n   - Invalidate file size when taking a lock to prevent corruption\n\n  Other fixes:\n   - Don't excessively generate tiny writes with fallocate\n   - Use the raw NFS access mask in nfs4_opendata_access()\"\n\n* tag 'nfs-for-4.13-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:\n  NFSv4.1: Fix a race where CB_NOTIFY_LOCK fails to wake a waiter\n  NFS: Optimize fallocate by refreshing mapping when needed.\n  NFS: invalidate file size when taking a lock.\n  NFS: Use raw NFS access mask in nfs4_opendata_access() Merge tag 'xfs-4.13-fixes-2' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs fixes from Darrick Wong:\n\n - fix firstfsb variables that we left uninitialized, which could lead\n   to locking problems.\n\n - check for NULL metadata buffer pointers before using them.\n\n - don't allow btree cursor manipulation if the btree block is corrupt.\n   Better to just shut down.\n\n - fix infinite loop problems in quotacheck.\n\n - fix buffer overrun when validating directory blocks.\n\n - fix deadlock problem in bunmapi.\n\n* tag 'xfs-4.13-fixes-2' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  xfs: fix multi-AG deadlock in xfs_bunmapi\n  xfs: check that dir block entries don't off the end of the buffer\n  xfs: fix quotacheck dquot id overflow infinite loop\n  xfs: check _alloc_read_agf buffer pointer before using\n  xfs: set firstfsb to NULLFSBLOCK before feeding it to _bmapi_write\n  xfs: check _btree_check_block value Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n \"s390:\n   - SRCU fix\n\n  PPC:\n   - host crash fixes\n\n  x86:\n   - bugfixes, including making nested posted interrupts really work\n\n  Generic:\n   - tweaks to kvm_stat and to uevents\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: LAPIC: Fix reentrancy issues with preempt notifiers\n  tools/kvm_stat: add '-f help' to get the available event list\n  tools/kvm_stat: use variables instead of hard paths in help output\n  KVM: nVMX: Fix loss of L2's NMI blocking state\n  KVM: nVMX: Fix posted intr delivery when vcpu is in guest mode\n  x86: irq: Define a global vector for nested posted interrupts\n  KVM: x86: do mask out upper bits of PAE CR3\n  KVM: make pid available for uevents without debugfs\n  KVM: s390: take srcu lock when getting/setting storage keys\n  KVM: VMX: remove unused field\n  KVM: PPC: Book3S HV: Fix host crash on changing HPT size\n  KVM: PPC: Book3S HV: Enable TM before accessing TM registers Merge tag 'for-linus-4.13b-rc3-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixes from Juergen Gross:\n \"Three minor cleanups for xen related drivers\"\n\n* tag 'for-linus-4.13b-rc3-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen: dont fiddle with event channel masking in suspend/resume\n  xen: selfballoon: remove unnecessary static in frontswap_selfshrink()\n  xen: Drop un-informative message during boot Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Will Deacon:\n \"I'd been collecting these whilst we debugged a CPU hotplug failure,\n  but we ended up diagnosing that one to tglx, who has taken a fix via\n  the -tip tree separately.\n\n  We're seeing some NFS issues that we haven't gotten to the bottom of\n  yet, and we've uncovered some issues with our backtracing too so there\n  might be another fixes pull before we're done.\n\n  Summary:\n\n   - Ensure we have a guard page after the kernel image in vmalloc\n\n   - Fix incorrect prefetch stride in copy_page\n\n   - Ensure irqs are disabled in die()\n\n   - Fix for event group validation in QCOM L2 PMU driver\n\n   - Fix requesting of PMU IRQs on AMD Seattle\n\n   - Minor cleanups and fixes\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: mmu: Place guard page after mapping of kernel image\n  drivers/perf: arm_pmu: Request PMU SPIs with IRQF_PER_CPU\n  arm64: sysreg: Fix unprotected macro argmuent in write_sysreg\n  perf: qcom_l2: fix column exclusion check\n  arm64/lib: copy_page: use consistent prefetch stride\n  arm64/numa: Drop duplicate message\n  perf: Convert to using %pOF instead of full_name\n  arm64: Convert to using %pOF instead of full_name\n  arm64: traps: disable irq in die()\n  arm64: atomics: Remove '&' from '+&' asm constraint in lse atomics\n  arm64: uaccess: Remove redundant __force from addr cast in __range_ok Merge tag 'powerpc-4.13-4' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"The highlight is Ben's patch to work around a host killing bug when\n  running KVM guests with the Radix MMU on Power9. See the long change\n  log of that commit for more detail.\n\n  And then three fairly minor fixes:\n\n   - fix of_node_put() underflow during reconfig remove, using old DLPAR\n     tools.\n\n   - fix recently introduced ld version check with 64-bit LE-only\n     toolchain.\n\n   - free the subpage_prot_table correctly, avoiding a memory leak.\n\n  Thanks to: Aneesh Kumar K.V, Benjamin Herrenschmidt, Laurent Vivier\"\n\n* tag 'powerpc-4.13-4' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/mm/hash: Free the subpage_prot_table correctly\n  powerpc/Makefile: Fix ld version check with 64-bit LE-only toolchain\n  powerpc/pseries: Fix of_node_put() underflow during reconfig remove\n  powerpc/mm/radix: Workaround prefetch issue with KVM Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n\n - remove broken dt bindings in inside-secure\n\n - fix authencesn crash when used with digest_null\n\n - fix cavium/nitrox firmware path\n\n - fix SHA3 failure in brcm\n\n - fix Kconfig dependency for brcm\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: authencesn - Fix digest_null crash\n  crypto: brcm - remove BCM_PDC_MBOX dependency in Kconfig\n  Documentation/bindings: crypto: remove the dma-mask property\n  crypto: inside-secure - do not parse the dma mask from dt\n  crypto: cavium/nitrox - Change in firmware path.\n  crypto: brcm - Fix SHA3-512 algorithm failure Merge branch 'for-4.13-part3' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fixes from David Sterba:\n \"Fixes addressing problems reported by users, and there's one more\n  regression fix\"\n\n* 'for-4.13-part3' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  btrfs: round down size diff when shrinking/growing device\n  Btrfs: fix early ENOSPC due to delalloc\n  btrfs: fix lockup in find_free_extent with read-only block groups\n  Btrfs: fix dir item validation when replaying xattr deletes Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD fixes from Shaohua Li:\n \"This fixes several bugs, three of them are marked for stable:\n\n   - an initialization issue fixed by Ming\n\n   - a bio clone race issue fixed by me\n\n   - an async tx flush issue fixed by Ofer\n\n   - other cleanups\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  MD: fix warnning for UP case\n  md/raid5: add thread_group worker async_tx_issue_pending_all\n  md: simplify code with bio_io_error\n  md/raid1: fix writebehind bio clone\n  md: raid1-10: move raid1/raid10 common code into raid1-10.c\n  md: raid1/raid10: initialize bvec table via bio_add_page()\n  md: remove 'idx' from 'struct resync_pages' Merge tag 'for-4.13/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n\n - a few DM integrity fixes that improve performance. One that address\n   inefficiencies in the on-disk journal device layout. Another that\n   makes use of the block layer's on-stack plugging when writing the\n   journal.\n\n - a dm-bufio fix for the blk_status_t conversion that went in during\n   the merge window.\n\n - a few DM raid fixes that address correctness when suspending the\n   device and a validation fix for validation that occurs during device\n   activation.\n\n - a couple DM zoned target fixes. Important one being the fix to not\n   use GFP_KERNEL in the IO path due to concerns about deadlock in\n   low-memory conditions (e.g. swap over a DM zoned device, etc).\n\n - a DM DAX device fix to make sure dm_dax_flush() is called if the\n   underlying DAX device is operating as a write cache.\n\n* tag 'for-4.13/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm, dax: Make sure dm_dax_flush() is called if device supports it\n  dm verity fec: fix GFP flags used with mempool_alloc()\n  dm zoned: use GFP_NOIO in I/O path\n  dm zoned: remove test for impossible REQ_OP_FLUSH conditions\n  dm raid: bump target version\n  dm raid: avoid mddev->suspended access\n  dm raid: fix activation check in validate_raid_redundancy()\n  dm raid: remove WARN_ON() in raid10_md_layout_to_format()\n  dm bufio: fix error code in dm_bufio_write_dirty_buffers()\n  dm integrity: test for corrupted disk format during table load\n  dm integrity: WARN_ON if variables representing journal usage get out of sync\n  dm integrity: use plugging when writing the journal\n  dm integrity: fix inefficient allocation of journal space Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A small collection of fixes that should go into this series. This\n  contains:\n\n   - NVMe pull request from Christoph, with various fixes for nvme\n     proper and nvme-fc.\n\n   - disable runtime PM for blk-mq for now.\n\n     With scsi now defaulting to using blk-mq, this reared its head as\n     an issue. Longer term we'll fix up runtime PM for blk-mq, for now\n     just disable it to prevent a hang on laptop resume for some folks.\n\n   - blk-mq CPU <-> hw queue map fix from Christoph.\n\n   - xen/blkfront pull request from Konrad, with two small fixes for the\n     blkfront driver.\n\n   - a few fixups for nbd from Joseph.\n\n   - a stable fix for pblk from Javier\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  lightnvm: pblk: advance bio according to lba index\n  nvme: validate admin queue before unquiesce\n  nbd: clear disconnected on reconnect\n  nvme-pci: fix HMB size calculation\n  nvme-fc: revise TRADDR parsing\n  nvme-fc: address target disconnect race conditions in fcp io submit\n  nvme: fabrics commands should use the fctype field for data direction\n  nvme: also provide a UUID in the WWID sysfs attribute\n  xen/blkfront: always allocate grants first from per-queue persistent grants\n  xen-blkfront: fix mq start/stop race\n  blk-mq: map queues to all present CPUs\n  block: disable runtime-pm for blk-mq\n  xen-blkfront: Fix handling of non-supported operations\n  nbd: only set sndtimeo if we have a timeout set\n  nbd: take tx_lock before disconnecting\n  nbd: allow multiple disconnects to be sent Merge tag 'mmc-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"Here are a couple of mmc fixes intended for v4.13-rc1.\n\n  I have also included a couple of cleanup patches in this pull request\n  for OMAP2+, related to the omap_hsmmc driver. The reason is because of\n  the changes are also depending on OMAP SoC specific code, so this\n  simplifies how to deal with this.\n\n  Summary:\n\n  MMC host:\n   - sunxi: Correct time phase settings\n   - omap_hsmmc: Clean up some dead code\n   - dw_mmc: Fix message printed for deprecated num-slots DT binding\n   - dw_mmc: Fix DT documentation\"\n\n* tag 'mmc-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  Documentation: dw-mshc: deprecate num-slots\n  mmc: dw_mmc: fix the wrong condition check of getting num-slots from DT\n  mmc: host: omap_hsmmc: remove unused platform callbacks\n  ARM: OMAP2+: hsmmc.c: Remove dead code\n  mmc: sunxi: Keep default timing phase settings for new timing mode Merge tag 'drm-fixes-for-v4.13-rc3' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"These iare the fixes for 4.13-rc3: vmwgfx, exynos, i915, amdgpu,\n  nouveau, host1x and displayport fixes.\n\n  As expected people woke up this week, i915 didn't do an -rc2 pull so\n  got a bumper -rc3 pull, and Ben resurfaced on nouveau and fixed a\n  bunch of major crashers seen on Fedora 26, and there are a few vmwgfx\n  fixes as well.\n\n  Otherwise exynos had some regression fixes/cleanups, and amdgpu has an\n  rcu locking regression fix and a couple of minor fixes\"\n\n* tag 'drm-fixes-for-v4.13-rc3' of git://people.freedesktop.org/~airlied/linux: (44 commits)\n  drm/i915: Fix bad comparison in skl_compute_plane_wm.\n  drm/i915: Force CPU synchronisation even if userspace requests ASYNC\n  drm/i915: Only skip updating execobject.offset after error\n  drm/i915: Only mark the execobject as pinned on success\n  drm/i915: Remove assertion from raw __i915_vma_unpin()\n  drm/i915/cnl: Fix loadgen select programming on ddi vswing sequence\n  drm/i915: Fix scaler init during CRTC HW state readout\n  drm/i915/selftests: Fix an error handling path in 'mock_gem_device()'\n  drm/i915: Unbreak gpu reset vs. modeset locking\n  gpu: host1x: Free the IOMMU domain when there is no device to attach\n  drm/i915: Fix cursor updates on some platforms\n  drm/i915: Fix user ptr check size in eb_relocate_vma()\n  drm: exynos: mark pm functions as __maybe_unused\n  drm/exynos: select CEC_CORE if CEC_NOTIFIER\n  drm/exynos/hdmi: fix disable sequence\n  drm/exynos: mic: add a bridge at probe\n  drm/exynos/dsi: Remove error handling for bridge_node DT parsing\n  drm/exynos: dsi: do not try to find bridge\n  drm: exynos: hdmi: make of_device_ids const.\n  drm: exynos: constify mixer_match_types and *_mxr_drv_data.\n  ... Merge tag 'acpi-4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fixes from Rafael Wysocki:\n \"These are two fixups for the suspend-to-idle handling in the ACPI\n  subsystem after recent changes in that area and two simple fixes of\n  the ACPI NUMA code.\n\n  Specifics:\n\n   - Add an ACPI module parameter to allow users to override the new\n     default behavior on some systems where the EC GPE is not disabled\n     during suspend-to-idle in case the EC on their systems generates\n     excessive wakeup events and they want to sacrifice some\n     functionality (like power button wakeups) for extra battery life\n     while suspended (Rafael Wysocki).\n\n   - Fix flushing of the outstanding EC work in the ACPI core\n     suspend-to-idle code (Rafael Wysocki).\n\n   - Add a missing include and fix a messed-up comment in the ACPI NUMA\n     code (Ross Zwisler)\"\n\n* tag 'acpi-4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI: NUMA: Fix typo in the full name of SRAT\n  ACPI: NUMA: add missing include in acpi_numa.h\n  ACPI / PM / EC: Flush all EC work in acpi_freeze_sync()\n  ACPI / EC: Add parameter to force disable the GPE on suspend Merge branch 'parisc-4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc fixes from Helge Deller:\n\n - The majority of lines changed are due to regenerated defconfig files.\n\n - The support for the Page Deallocation Table (PDT) which was merged in\n   the merge window for 4.13 contained a bug which crashes the kernel if\n   a bad page is reported by firmware. This is now fixed and the kernel\n   messages will show which memory slot holds the broken DIMM.\n\n - Commit 3a166fc2d4ef (\"kbuild: handle libs-y archives separately from\n   built-in.o archives\") broke linking the parisc kernel due to\n   millicode symbols which can't be reached then any longer. This was\n   fixed by modifying the parisc vmlinux.lds linker script.\n\n - If the stack checker panics on stack overflow, avoid recursive\n   panics.\n\n - Some parisc machines can't physically power off and thus instead\n   start after some time to flood the console by presumably detected\n   soft lockups. Avoid this by disabling the lockup detectors before\n   entering the endless for-next loop.\n\n - Dave Anglin provided fixes which prevents TLB speculation on flushed\n   pages on PA8800/PA9000 CPUs.\n\n - Arvind Yadav sent a trivial patch to constify the attribute_group\n   structure in our firmware on-board-flash storage driver\n   (pdc_stable.c)\n\n* 'parisc-4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: Extend disabled preemption in copy_user_page\n  parisc: Prevent TLB speculation on flushed pages on CPUs that only support equivalent aliases\n  parisc: Suspend lockup detectors before system halt\n  parisc: Show DIMM slot number which holds broken memory module\n  parisc: Add function to return DIMM slot of physical address\n  parisc: Fix crash when calling PDC_PAT_MEM PDT firmware function\n  parisc: regenerate defconfig files\n  parisc: pdc_stable: constify attribute_group structures.\n  parisc: Merge millicode routines via linker script\n  parisc: Disable further stack checks when panic occurs during stack check Merge tag 'sound-4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"This is a pretty boring pull request, containing a few HD-audio quirks\n  and ID updates as usual suspects, as well as a fix for a regression of\n  FM801 chip on ia64 (what a legacy combination!)\"\n\n* tag 'sound-4.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Add mute led support for HP ProBook 440 G4\n  ALSA: hda/realtek - No loopback on ALC225/ALC295 codec\n  ALSA: hda/realtek - Update headset mode for ALC225\n  ALSA: fm801: Initialize chip after IRQ handler is registered\n  ALSA: hda/realtek - Update headset mode for ALC298\n  ALSA: hda - Add missing NVIDIA GPU codec IDs to patch table Merge branch 'fixes' of git://git.armlinux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"Two areas addressed by these fixes:\n\n   - Fixes from Dave Martin for the signal frames that were broken with\n     certain configurations. No one noticed until recently.\n\n   - More kexec fixes to ensure that the crashkernel region is correctly\n     allocated, and a fix for the location of the device tree when\n     several kexec kernels are loaded\"\n\n* 'fixes' of git://git.armlinux.org.uk/~rmk/linux-arm:\n  ARM: 8687/1: signal: Fix unparseable iwmmxt_sigframe in uc_regspace[]\n  ARM: 8686/1: iwmmxt: Add missing __user annotations to sigframe accessors\n  ARM: kexec: fix failure to boot crash kernel\n  ARM: kexec: avoid allocating crashkernel region outside lowmem Merge tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost\n\nPull virtio fixes and cleanups from Michael Tsirkin:\n \"Fixes some minor issues all over the codebase\"\n\n* tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:\n  virtio-net: fix module unloading\n  virtio-balloon: coding format cleanup\n  virtio-balloon: deflate via a page list\n  virtio_blk: Use sysfs_match_string() helper Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Three small fixes.\n\n  The transfer size fixes are actually correcting some performance drops\n  on the hpsa and smartpqi cards. The cards actually have an internal\n  cache for request speed up but bypass it for transfers > 1MB. Since\n  4.3 the efficiency of our merges has rendered the cache mostly unused,\n  so limit transfers to under 1MB to recover the cache boost\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: sg: fix static checker warning in sg_is_valid_dxfer\n  scsi: smartpqi: limit transfer length to 1MB\n  scsi: hpsa: limit transfer length to 1MB Merge tag 'uuid-for-4.13-2' of git://git.infradead.org/users/hch/uuid\n\nPull uuid fixes from Christoph Hellwig:\n\n - add a missing \"!\" in the uuid tests\n\n - remove the last remaining user of the uuid_be type, and then the type\n   and its helpers\n\n* tag 'uuid-for-4.13-2' of git://git.infradead.org/users/hch/uuid:\n  uuid: remove uuid_be\n  thunderbolt: use uuid_t instead of uuid_be\n  uuid: fix incorrect uuid_equal conversion in test_uuid_test Merge tag 'dma-mapping-4.13-2' of git://git.infradead.org/users/hch/dma-mapping\n\nPull dma mapping fixes from Christoph Hellwig:\n \"split the global dma coherent pool from the per-device pool.\n\n  This fixes a regression in the earlier 4.13 pull requests where the\n  global pool would override a per-device CMA pool (Vladimir Murzin)\"\n\n* tag 'dma-mapping-4.13-2' of git://git.infradead.org/users/hch/dma-mapping:\n  ARM: NOMMU: Wire-up default DMA interface\n  dma-coherent: introduce interface for default DMA pool Merge tag 'jfs-4.13' of git://github.com/kleikamp/linux-shaggy\n\nPull JFS fixes from David Kleikamp.\n\n* tag 'jfs-4.13' of git://github.com/kleikamp/linux-shaggy:\n  jfs: preserve i_mode if __jfs_set_acl() fails\n  jfs: Don't clear SGID when inheriting ACLs\n  jfs: atomically read inode size Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n\n - regression fix (missing IRQs) for devices that require 'always poll'\n   quirk, from Dmitry Torokhov\n\n - new device ID addition to Ortek driver, from Benjamin Tissoires\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: ortek: add one more buggy device\n  HID: usbhid: fix \"always poll\" quirk Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Martin Schwidefsky:\n \"Three bug fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/mm: set change and reference bit on lazy key enablement\n  s390: chp: handle CRW_ERC_INIT for channel-path status change\n  s390/perf: fix problem state detection Linux 4.13-rc2 Properly alphabetize MAINTAINERS file\n\nThis adds a perl script to actually parse the MAINTAINERS file, clean up\nsome whitespace in it, warn about errors in it, and then properly sort\nthe end result.\n\nMy perl-fu is atrocious, so the script has basically been created by\nrandomly putting various characters in a pile, mixing them around, and\nthen looking it the end result does anything interesting when used as a\nperl script.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up MAINTAINERS file problems\n\nPrepping for scripting the MAINTAINERS file cleanup (and possible split)\nshowed a couple of cases where the headers for a couple of entries were\nbogus.\n\nThere's a few different kinds of bogosities:\n\n - the X-GENE SOC EDAC case was confused and split over two lines\n\n - there were four entries for \"GREYBUS PROTOCOLS DRIVERS\" that were all\n   different things.\n\n - the NOKIA N900 CAMERA SUPPORT\" was duplicated\n\nall of which were more obvious when you started doing associative arrays\nin perl to track these things by the header (so that we can alphabetize\nthis thing properly, and so that we might split it up by the data too).\n\nCc: Joe Perches <joe@perches.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'for-linus-4.13b-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen fixes from Juergen Gross:\n \"Some fixes and cleanups for running under Xen\"\n\n* tag 'for-linus-4.13b-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/balloon: don't online new memory initially\n  xen/x86: fix cpu hotplug\n  xen/grant-table: log the lack of grants\n  xen/x86: Don't BUG on CPU0 offlining Merge tag 'hwmon-for-linus-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fix from Guenter Roeck:\n \"Avoid buffer overruns in applesmc driver\"\n\n* tag 'hwmon-for-linus-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (applesmc) Avoid buffer overruns Merge tag 'tty-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial fixes from Greg KH:\n \"Here are some small tty and serial driver fixes for 4.13-rc2. Nothing\n  huge at all, a revert of a patch that turned out to break things, a\n  fix up for a new tty ioctl we added in 4.13-rc1 to get the uapi\n  definition correct, and a few minor serial driver fixes for reported\n  issues.\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'tty-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  tty: Fix TIOCGPTPEER ioctl definition\n  tty: hide unused pty_get_peer function\n  tty: serial: lpuart: Fix the logic for detecting the 32-bit type UART\n  serial: imx: Prevent TX buffer PIO write when a DMA has been started\n  Revert \"serial: imx-serial - move DMA buffer configuration to DT\"\n  serial: sh-sci: Uninitialized variables in sysfs files\n  serial: st-asc: Potential error pointer dereference Merge tag 'char-misc-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver fixes from Greg KH:\n \"Here are some small char and misc driver fixes for 4.13-rc2. All fix\n  reported problems with 4.13-rc1 or older kernels (like the binder\n  fixes). Full details in the shortlog.\n\n  All have been in linux-next with no reported issues\"\n\n* tag 'char-misc-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  w1: omap-hdq: fix error return code in omap_hdq_probe()\n  regmap: regmap-w1: Fix build troubles\n  w1: Fix slave count on 1-Wire bus (resend)\n  mux: mux-core: unregister mux_class in mux_exit()\n  mux: remove the Kconfig question for the subsystem\n  nvmem: rockchip-efuse: amend compatible rk322x-efuse to rk3228-efuse\n  drivers/fsi: fix fsi_slave_mode prototype\n  fsi: core: register with postcore_initcall\n  thunderbolt: Correct access permissions for active NVM contents\n  vmbus: re-enable channel tasklet\n  spmi: pmic-arb: Always allocate ppid_to_apid table\n  MAINTAINERS: Add entry for SPMI subsystem\n  spmi: Include OF based modalias in device uevent\n  binder: Use wake up hint for synchronous transactions.\n  binder: use group leader instead of open thread\n  Revert \"android: binder: Sanity check at binder ioctl\" Merge tag 'usb-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are some small USB fixes for 4.13-rc2.\n\n  The usual batch, gadget fixes for reported issues, as well as xhci\n  fixes, and a small random collection of other fixes for reported\n  issues.\n\n  All have been in linux-next with no reported issues\"\n\n* tag 'usb-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (25 commits)\n  xhci: fix memleak in xhci_run()\n  usb: xhci: fix spinlock recursion for USB2 test mode\n  xhci: fix 20000ms port resume timeout\n  usb: xhci: Issue stop EP command only when the EP state is running\n  xhci: Bad Ethernet performance plugged in ASM1042A host\n  xhci: Fix NULL pointer dereference when cleaning up streams for removed host\n  usb: renesas_usbhs: gadget: disable all eps when the driver stops\n  usb: renesas_usbhs: fix usbhsc_resume() for !USBHSF_RUNTIME_PWCTRL\n  usb: gadget: udc: renesas_usb3: protect usb3_ep->started in usb3_start_pipen()\n  usb: gadget: udc: renesas_usb3: fix zlp transfer by the dmac\n  usb: gadget: udc: renesas_usb3: fix free size in renesas_usb3_dma_free_prd()\n  usb: gadget: f_uac2: endianness fixes.\n  usb: gadget: f_uac1: endianness fixes.\n  include: usb: audio: specify exact endiannes of descriptors\n  usb: gadget: udc: start_udc() can be static\n  usb: dwc2: gadget: On USB RESET reset device address to zero\n  usb: storage: return on error to avoid a null pointer dereference\n  usb: typec: include linux/device.h in ucsi.h\n  USB: cdc-acm: add device-id for quirky printer\n  usb: dwc3: gadget: only unmap requests from DMA if mapped\n  ... Merge tag 'staging-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver fixes from Greg KH:\n \"Here are some small staging driver fixes for reported issues for\n  4.13-rc2.\n\n  Also in here is a new driver, the virtualbox DRM driver. It's\n  stand-alone and got acks from the DRM developers to go in through this\n  tree. It's a new thing, but it should be fine for this point in the rc\n  cycle due to it being independent.\n\n  All of this has been in linux-next for a while with no reported\n  issues\"\n\n* tag 'staging-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: rtl8188eu: add TL-WN722N v2 support\n  staging: speakup: safely register and unregister ldisc\n  staging: speakup: add functions to register and unregister ldisc\n  staging: speakup: safely close tty\n  staging: sm750fb: avoid conflicting vesafb\n  staging: lustre: ko2iblnd: check copy_from_iter/copy_to_iter return code\n  staging: vboxvideo: Add vboxvideo to drivers/staging\n  staging: sm750fb: fixed a assignment typo\n  staging: rtl8188eu: memory leak in rtw_free_cmd_obj()\n  staging: vchiq_arm: fix error codes in probe\n  staging: comedi: ni_mio_common: fix AO timer off-by-one regression Merge tag 'nfs-for-4.13-2' of git://git.linux-nfs.org/projects/anna/linux-nfs\n\nPull NFS client bugfixes from Anna Schumaker:\n \"Stable bugfix:\n   - Fix error reporting regression\n\n  Bugfixes:\n   - Fix setting filelayout ds address race\n   - Fix subtle access bug when using ACLs\n   - Fix setting mnt3_counts array size\n   - Fix a couple of pNFS commit races\"\n\n* tag 'nfs-for-4.13-2' of git://git.linux-nfs.org/projects/anna/linux-nfs:\n  NFS/filelayout: Fix racy setting of fl->dsaddr in filelayout_check_deviceid()\n  NFS: Be more careful about mapping file permissions\n  NFS: Store the raw NFS access mask in the inode's access cache\n  NFSv3: Convert nfs3_proc_access() to use nfs_access_set_mask()\n  NFS: Refactor NFS access to kernel access mask calculation\n  net/sunrpc/xprt_sock: fix regression in connection error reporting.\n  nfs: count correct array for mnt3_counts array size\n  Revert commit 722f0b891198 (\"pNFS: Don't send COMMITs to the DSes if...\")\n  pNFS/flexfiles: Handle expired layout segments in ff_layout_initiate_commit()\n  NFS: Fix another COMMIT race in pNFS\n  NFS: Fix a COMMIT race in pNFS\n  mount: copy the port field into the cloned nfs_server structure.\n  NFS: Don't run wake_up_bit() when nobody is waiting...\n  nfs: add export operations Merge branch 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull overlayfs fixes from Miklos Szeredi:\n \"This fixes a crash with SELinux and several other old and new bugs\"\n\n* 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  ovl: check for bad and whiteout index on lookup\n  ovl: do not cleanup directory and whiteout index entries\n  ovl: fix xattr get and set with selinux\n  ovl: remove unneeded check for IS_ERR()\n  ovl: fix origin verification of index dir\n  ovl: mark parent impure on ovl_link()\n  ovl: fix random return value on mount Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"A small set of fixes for -rc2 - two fixes for BFQ, documentation and\n  code, and a removal of an unused variable in nbd. Outside of that, a\n  small collection of fixes from the usual crew on the nvme side\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  nvmet: don't report 0-bytes in serial number\n  nvmet: preserve controller serial number between reboots\n  nvmet: Move serial number from controller to subsystem\n  nvmet: prefix version configfs file with attr\n  nvme-pci: Fix an error handling path in 'nvme_probe()'\n  nvme-pci: Remove nvme_setup_prps BUG_ON\n  nvme-pci: add another device ID with stripe quirk\n  nvmet-fc: fix byte swapping in nvmet_fc_ls_create_association\n  nvme: fix byte swapping in the streams code\n  nbd: kill unused ret in recv_work\n  bfq: dispatch request to prevent queue stalling after the request completion\n  bfq: fix typos in comments about B-WF2Q+ algorithm Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull more rdma fixes from Doug Ledford:\n \"As per my previous pull request, there were two drivers that each had\n  a rather large number of legitimate fixes still to be sent.\n\n  As it turned out, I also missed a reasonably large set of fixes from\n  one person across the stack that are all important fixes. All in all,\n  the bnxt_re, i40iw, and Dan Carpenter are 3/4 to 2/3rds of this pull\n  request.\n\n  There were some other random fixes that I didn't send in the last pull\n  request that I added to this one. This catches the rdma stack up to\n  the fixes from up to about the beginning of this week. Any more fixes\n  I'll wait and batch up later in the -rc cycle. This will give us a\n  good base to start with for basing a for-next branch on -rc2.\n\n  Summary:\n\n   - i40iw fixes\n\n   - bnxt_re fixes\n\n   - Dan Carpenter bugfixes across stack\n\n   - ten more random fixes, no more than two from any one person\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma: (37 commits)\n  RDMA/core: Initialize port_num in qp_attr\n  RDMA/uverbs: Fix the check for port number\n  IB/cma: Fix reference count leak when no ipv4 addresses are set\n  RDMA/iser: don't send an rkey if all data is written as immadiate-data\n  rxe: fix broken receive queue draining\n  RDMA/qedr: Prevent memory overrun in verbs' user responses\n  iw_cxgb4: don't use WR keys/addrs for 0 byte reads\n  IB/mlx4: Fix CM REQ retries in paravirt mode\n  IB/rdmavt: Setting of QP timeout can overflow jiffies computation\n  IB/core: Fix sparse warnings\n  RDMA/bnxt_re: Fix the value reported for local ack delay\n  RDMA/bnxt_re: Report MISSED_EVENTS in req_notify_cq\n  RDMA/bnxt_re: Fix return value of poll routine\n  RDMA/bnxt_re: Enable atomics only if host bios supports\n  RDMA/bnxt_re: Specify RDMA component when allocating stats context\n  RDMA/bnxt_re: Fixed the max_rd_atomic support for initiator and destination QP\n  RDMA/bnxt_re: Report supported value to IB stack in query_device\n  RDMA/bnxt_re: Do not free the ctx_tbl entry if delete GID fails\n  RDMA/bnxt_re: Fix WQE Size posted to HW to prevent it from throwing error\n  RDMA/bnxt_re: Free doorbell page index (DPI) during dealloc ucontext\n  ... Merge tag 'drm-fixes-for-v4.13-rc2' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"A bunch of fixes for rc2: two imx regressions, vc4 fix, dma-buf fix,\n  some displayport mst fixes, and an amdkfd fix.\n\n  Nothing too crazy, I assume we just haven't see much rc1 testing yet\"\n\n* tag 'drm-fixes-for-v4.13-rc2' of git://people.freedesktop.org/~airlied/linux:\n  drm/mst: Avoid processing partially received up/down message transactions\n  drm/mst: Avoid dereferencing a NULL mstb in drm_dp_mst_handle_up_req()\n  drm/mst: Fix error handling during MST sideband message reception\n  drm/imx: parallel-display: Accept drm_of_find_panel_or_bridge failure\n  drm/imx: fix typo in ipu_plane_formats[]\n  drm/vc4: Fix VBLANK handling in crtc->enable() path\n  dma-buf/fence: Avoid use of uninitialised timestamp\n  drm/amdgpu: Remove unused field kgd2kfd_shared_resources.num_mec\n  drm/radeon: Remove initialization of shared_resources.num_mec\n  drm/amdkfd: Remove unused references to shared_resources.num_mec\n  drm/amdgpu: Fix KFD oversubscription by tracking queues correctly Merge tag 'trace-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"Three minor updates\n\n   - Use the new GFP_RETRY_MAYFAIL to be more aggressive in allocating\n     memory for the ring buffer without causing OOMs\n\n   - Fix a memory leak in adding and removing instances\n\n   - Add __rcu annotation to be able to debug RCU usage of function\n     tracing a bit better\"\n\n* tag 'trace-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  trace: fix the errors caused by incompatible type of RCU variables\n  tracing: Fix kmemleak in instance_rmdir\n  tracing/ring_buffer: Try harder to allocate Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Radim Krčmář:\n \"A bunch of small fixes for x86\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  kvm: x86: hyperv: avoid livelock in oneshot SynIC timers\n  KVM: VMX: Fix invalid guest state detection after task-switch emulation\n  x86: add MULTIUSER dependency for KVM\n  KVM: nVMX: Disallow VM-entry in MOV-SS shadow\n  KVM: nVMX: track NMI blocking state separately for each VMCS\n  KVM: x86: masking out upper bits Merge tag 'powerpc-4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"A handful of fixes, mostly for new code:\n\n   - some reworking of the new STRICT_KERNEL_RWX support to make sure we\n     also remove executable permission from __init memory before it's\n     freed.\n\n   - a fix to some recent optimisations to the hypercall entry where we\n     were clobbering r12, this was breaking nested guests (PR KVM).\n\n   - a fix for the recent patch to opal_configure_cores(). This could\n     break booting on bare metal Power8 boxes if the kernel was built\n     without CONFIG_JUMP_LABEL_FEATURE_CHECK_DEBUG.\n\n   - .. and finally a workaround for spurious PMU interrupts on Power9\n     DD2.\n\n  Thanks to: Nicholas Piggin, Anton Blanchard, Balbir Singh\"\n\n* tag 'powerpc-4.13-3' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/mm: Mark __init memory no-execute when STRICT_KERNEL_RWX=y\n  powerpc/mm/hash: Refactor hash__mark_rodata_ro()\n  powerpc/mm/radix: Refactor radix__mark_rodata_ro()\n  powerpc/64s: Fix hypercall entry clobbering r12 input\n  powerpc/perf: Avoid spurious PMU interrupts after idle\n  powerpc/powernv: Fix boot on Power8 bare metal due to opal_configure_cores() Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"Half of the fixes are for various build time warnings triggered by\n  randconfig builds. Most (but not all...) were harmless.\n\n  There's also:\n\n   - ACPI boundary condition fixes\n\n   - UV platform fixes\n\n   - defconfig updates\n\n   - an AMD K6 CPU init fix\n\n   - a %pOF printk format related preparatory change\n\n   - .. and a warning fix related to the tlb/PCID changes\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/devicetree: Convert to using %pOF instead of ->full_name\n  x86/platform/uv/BAU: Disable BAU on single hub configurations\n  x86/platform/intel-mid: Fix a format string overflow warning\n  x86/platform: Add PCI dependency for PUNIT_ATOM_DEBUG\n  x86/build: Silence the build with \"make -s\"\n  x86/io: Add \"memory\" clobber to insb/insw/insl/outsb/outsw/outsl\n  x86/fpu/math-emu: Avoid bogus -Wint-in-bool-context warning\n  x86/fpu/math-emu: Fix possible uninitialized variable use\n  perf/x86: Shut up false-positive -Wmaybe-uninitialized warning\n  x86/defconfig: Remove stale, old Kconfig options\n  x86/ioapic: Pass the correct data to unmask_ioapic_irq()\n  x86/acpi: Prevent out of bound access caused by broken ACPI tables\n  x86/mm, KVM: Fix warning when !CONFIG_PREEMPT_COUNT\n  x86/platform/uv/BAU: Fix congested_response_us not taking effect\n  x86/cpu: Use indirect call to measure performance in init_amd_k6() Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Ingo Molnar:\n \"A timer_irq_init() clocksource API robustness fix\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  clocksource/drivers/timer-of: Handle of_irq_get_byname() result correctly Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"A cputime fix and code comments/organization fix to the deadline\n  scheduler\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/deadline: Fix confusing comments about selection of top pi-waiter\n  sched/cputime: Don't use smp_processor_id() in preemptible context Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Two hw-enablement patches, two race fixes, three fixes for regressions\n  of semantics, plus a number of tooling fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/intel: Add proper condition to run sched_task callbacks\n  perf/core: Fix locking for children siblings group read\n  perf/core: Fix scheduling regression of pinned groups\n  perf/x86/intel: Fix debug_store reset field for freq events\n  perf/x86/intel: Add Goldmont Plus CPU PMU support\n  perf/x86/intel: Enable C-state residency events for Apollo Lake\n  perf symbols: Accept zero as the kernel base address\n  Revert \"perf/core: Drop kernel samples even though :u is specified\"\n  perf annotate: Fix broken arrow at row 0 connecting jmp instruction to its target\n  perf evsel: State in the default event name if attr.exclude_kernel is set\n  perf evsel: Fix attr.exclude_kernel setting for default cycles:p Merge branch 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking fixlet from Ingo Molnar:\n \"Remove an unnecessary priority adjustment in the rtmutex code\"\n\n* 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/rtmutex: Remove unnecessary priority adjustment Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Ingo Molnar:\n \"A resume_irq() fix, plus a number of static declaration fixes\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqchip/digicolor: Drop unnecessary static\n  irqchip/mips-cpu: Drop unnecessary static\n  irqchip/gic/realview: Drop unnecessary static\n  irqchip/mips-gic: Remove population of irq domain names\n  genirq/PM: Properly pretend disabled state when force resuming interrupts Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull core fixes from Ingo Molnar:\n \"A fix to WARN_ON_ONCE() done by modules, plus a MAINTAINERS update\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  debug: Fix WARN_ON_ONCE() for modules\n  MAINTAINERS: Update the PTRACE entry Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) BPF verifier signed/unsigned value tracking fix, from Daniel\n    Borkmann, Edward Cree, and Josef Bacik.\n\n 2) Fix memory allocation length when setting up calls to\n    ->ndo_set_mac_address, from Cong Wang.\n\n 3) Add a new cxgb4 device ID, from Ganesh Goudar.\n\n 4) Fix FIB refcount handling, we have to set it's initial value before\n    the configure callback (which can bump it). From David Ahern.\n\n 5) Fix double-free in qcom/emac driver, from Timur Tabi.\n\n 6) A bunch of gcc-7 string format overflow warning fixes from Arnd\n    Bergmann.\n\n 7) Fix link level headroom tests in ip_do_fragment(), from Vasily\n    Averin.\n\n 8) Fix chunk walking in SCTP when iterating over error and parameter\n    headers. From Alexander Potapenko.\n\n 9) TCP BBR congestion control fixes from Neal Cardwell.\n\n10) Fix SKB fragment handling in bcmgenet driver, from Doug Berger.\n\n11) BPF_CGROUP_RUN_PROG_SOCK_OPS needs to check for null __sk, from Cong\n    Wang.\n\n12) xmit_recursion in ppp driver needs to be per-device not per-cpu,\n    from Gao Feng.\n\n13) Cannot release skb->dst in UDP if IP options processing needs it.\n    From Paolo Abeni.\n\n14) Some netdev ioctl ifr_name[] NULL termination fixes. From Alexander\n    Levin and myself.\n\n15) Revert some rtnetlink notification changes that are causing\n    regressions, from David Ahern.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (83 commits)\n  net: bonding: Fix transmit load balancing in balance-alb mode\n  rds: Make sure updates to cp_send_gen can be observed\n  net: ethernet: ti: cpsw: Push the request_irq function to the end of probe\n  ipv4: initialize fib_trie prior to register_netdev_notifier call.\n  rtnetlink: allocate more memory for dev_set_mac_address()\n  net: dsa: b53: Add missing ARL entries for BCM53125\n  bpf: more tests for mixed signed and unsigned bounds checks\n  bpf: add test for mixed signed and unsigned bounds checks\n  bpf: fix up test cases with mixed signed/unsigned bounds\n  bpf: allow to specify log level and reduce it for test_verifier\n  bpf: fix mixed signed/unsigned derived min/max value bounds\n  ipv6: avoid overflow of offset in ip6_find_1stfragopt\n  net: tehuti: don't process data if it has not been copied from userspace\n  Revert \"rtnetlink: Do not generate notifications for CHANGEADDR event\"\n  net: dsa: mv88e6xxx: Enable CMODE config support for 6390X\n  dt-binding: ptp: Add SoC compatibility strings for dte ptp clock\n  NET: dwmac: Make dwmac reset unconditional\n  net: Zero terminate ifr_name in dev_ifname().\n  wireless: wext: terminate ifr name coming from userspace\n  netfilter: fix netfilter_net_init() return\n  ... Merge tag 'pm-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These are two stable-candidate fixes for the intel_pstate driver and\n  the generic power domains (genpd) framework.\n\n  Specifics:\n\n   - Fix the average CPU load computations in the intel_pstate driver on\n     Knights Landing (Xeon Phi) processors that require an extra factor\n     to compensate for a rate change differences between the TSC and\n     MPERF which is missing (Srinivas Pandruvada).\n\n   - Fix an initialization ordering issue in the generic power domains\n     (genpd) framework (Sudeep Holla)\"\n\n* tag 'pm-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  PM / Domains: defer dev_pm_domain_set() until genpd->attach_dev succeeds if present\n  cpufreq: intel_pstate: Correct the busy calculation for KNL x86: mark kprobe templates as character arrays, not single characters\n\nThey really are, and the \"take the address of a single character\" makes\nthe string fortification code unhappy (it believes that you can now only\nacccess one byte, rather than a byte range, and then raises errors for\nthe memory copies going on in there).\n\nWe could now remove a few 'addressof' operators (since arrays naturally\ndegrade to pointers), but this is the minimal patch that just changes\nthe C prototypes of those template arrays (the templates themselves are\ndefined in inline asm).\n\nReported-by: kernel test robot <xiaolong.ye@intel.com>\nAcked-and-tested-by: Masami Hiramatsu <mhiramat@kernel.org>\nCc: Daniel Micay <danielmicay@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull misc filesystem fixes from Jan Kara:\n \"Several ACL related fixes for ext2, reiserfs, and hfsplus.\n\n  And also one minor isofs cleanup\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  hfsplus: Don't clear SGID when inheriting ACLs\n  isofs: Fix off-by-one in 'session' mount option parsing\n  reiserfs: preserve i_mode if __reiserfs_set_acl() fails\n  ext2: preserve i_mode if ext2_set_acl() fails\n  ext2: Don't clear SGID when inheriting ACLs\n  reiserfs: Don't clear SGID when inheriting ACLs Merge tag 'for-f2fs-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs fixes from Jaegeuk Kim:\n \"We've filed some bug fixes:\n\n   - missing f2fs case in terms of stale SGID bit, introduced by Jan\n\n   - build error for seq_file.h\n\n   - avoid cpu lockup\n\n   - wrong inode_unlock in error case\"\n\n* tag 'for-f2fs-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs:\n  f2fs: avoid cpu lockup\n  f2fs: include seq_file.h for sysfs.c\n  f2fs: Don't clear SGID when inheriting ACLs\n  f2fs: remove extra inode_unlock() in error path Merge branch 'stable-4.13' of git://git.infradead.org/users/pcmoore/audit\n\nPull audit fix from Paul Moore:\n \"A small audit fix, just a single line, to plug a memory leak in some\n  audit error handling code\"\n\n* 'stable-4.13' of git://git.infradead.org/users/pcmoore/audit:\n  audit: fix memleak in auditd_send_unicast_skb. Merge tag 'libnvdimm-fixes-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm fixes from Dan Williams:\n \"A handful of small fixes for 4.13-rc2. Three of these fixes are tagged\n  for -stable. They have all appeared in at least one -next release with\n  no reported issues\n\n   - Fix handling of media errors that span a sector\n\n   - Fix support of multiple namespaces in a libnvdimm region being in\n     device-dax mode\n\n   - Clean up the machine check notifier properly when the nfit driver\n     fails to register\n\n   - Address a static analysis (smatch) report in device-dax\"\n\n* tag 'libnvdimm-fixes-4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  device-dax: fix sysfs duplicate warnings\n  MAINTAINERS: list drivers/acpi/nfit/ files for libnvdimm sub-system\n  acpi/nfit: Fix memory corruption/Unregister mce decoder on failure\n  device-dax: fix 'passing zero to ERR_PTR()' warning\n  libnvdimm: fix badblock range handling of ARS range Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID fixes from Jiri Kosina:\n\n - HID multitouch 4.12 regression fix from Dmitry Torokhov\n\n - error handling fix for HID++ driver from Gustavo A. R. Silva\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: hid-logitech-hidpp: add NULL check on devm_kmemdup() return value\n  HID: multitouch: do not blindly set EV_KEY or EV_ABS bits Merge tag 'gcc-plugins-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull structure randomization updates from Kees Cook:\n \"Now that IPC and other changes have landed, enable manual markings for\n  randstruct plugin, including the task_struct.\n\n  This is the rest of what was staged in -next for the gcc-plugins, and\n  comes in three patches, largest first:\n\n   - mark \"easy\" structs with __randomize_layout\n\n   - mark task_struct with an optional anonymous struct to isolate the\n     __randomize_layout section\n\n   - mark structs to opt _out_ of automated marking (which will come\n     later)\n\n  And, FWIW, this continues to pass allmodconfig (normal and patched to\n  enable gcc-plugins) builds of x86_64, i386, arm64, arm, powerpc, and\n  s390 for me\"\n\n* tag 'gcc-plugins-v4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  randstruct: opt-out externally exposed function pointer structs\n  task_struct: Allow randomized layout\n  randstruct: Mark various structs for randomization Merge tag 'ceph-for-4.13-rc2' of git://github.com/ceph/ceph-client\n\nPull ceph fixes from Ilya Dryomov:\n \"A number of small fixes for -rc1 Luminous changes plus a readdir race\n  fix, marked for stable\"\n\n* tag 'ceph-for-4.13-rc2' of git://github.com/ceph/ceph-client:\n  libceph: potential NULL dereference in ceph_msg_data_create()\n  ceph: fix race in concurrent readdir\n  libceph: don't call encode_request_finish() on MOSDBackoff messages\n  libceph: use alloc_pg_mapping() in __decode_pg_upmap_items()\n  libceph: set -EINVAL in one place in crush_decode()\n  libceph: NULL deref on osdmap_apply_incremental() error path\n  libceph: fix old style declaration warnings Merge tag 'md/4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD fixes from Shaohua Li:\n\n - raid5-ppl fix by Artur. This one is introduced in this release cycle.\n\n - raid5 reshape fix by Xiao. This is an old bug and will be added to\n   stable.\n\n - bitmap fix by Guoqing.\n\n* tag 'md/4.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  raid5-ppl: use BIOSET_NEED_BVECS when creating bioset\n  Raid5 should update rdev->sectors after reshape\n  md/bitmap: don't read page from device with Bitmap_sync Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma\n\nPull rdma fixes from Doug Ledford:\n \"First set of -rc fixes for 4.13 cycle:\n\n   - misc iSER fixes\n\n   - namespace fixups\n\n   - fix the fact that IPoIB didn't use the proper API for noio mem allocs\n\n   - rxe driver fixes\n\n   - hns_roce fixes\n\n   - misc core fixes\n\n   - misc IPoIB fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma: (27 commits)\n  IB/core: Allow QP state transition from reset to error\n  IB/hns: Fix for checkpatch.pl comment style warnings\n  IB/hns: Fix the bug with modifying the MAC address without removing the driver\n  IB/hns: Fix the bug with rdma operation\n  IB/hns: Fix the bug with wild pointer when destroy rc qp\n  IB/hns: Fix the bug of polling cq failed for loopback Qps\n  IB/rxe: Set dma_mask and coherent_dma_mask\n  IB/rxe: Fix kernel panic from skb destructor\n  IB/ipoib: Let lower driver handle get_stats64 call\n  IB/core: Add ordered workqueue for RoCE GID management\n  IB/mlx5: Clean mr_cache debugfs in case of failure\n  IB/core: Remove NOIO QP create flag\n  {net, IB}/mlx4: Remove gfp flags argument\n  IB/{rdmavt, qib, hfi1}: Remove gfp flags argument\n  IB/IPoIB: Convert IPoIB to memalloc_noio_* calls\n  IB/IPoIB: Forward MTU change to driver below\n  IB: Convert msleep below 20ms to usleep_range\n  IB/uverbs: Make use of ib_modify_qp variant to avoid resolving DMAC\n  IB/core: Introduce modify QP operation with udata\n  IB/core: Don't resolve IP address to the loopback device\n  ... Merge tag 'nfsd-4.13-1' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd fix from Bruce Fields:\n \"One fix for a problem introduced in the most recent merge window and\n  found by Dave Jones and KASAN\"\n\n* tag 'nfsd-4.13-1' of git://linux-nfs.org/~bfields/linux:\n  nfsd: Fix a memory scribble in the callback channel Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n\n - Fix DMA regression in 4.13 merge window, only certain chips can do\n   64-bit DMA. From Dave Dushar.\n\n - Correct cpu cross-call algorithm to correctly detect stalled or stuck\n   remote cpus, from Jane Chu.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: Measure receiver forward progress to avoid send mondo timeout\n  SPARC64: Fix sun4v DMA panic Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fix from Thomas Gleixner:\n \"Fix the fallout from reworking the locking and resource management in\n  request/free_irq()\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Keep chip buslock across irq_request/release_resources() Merge branch 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull SMP fix from Thomas Gleixner:\n \"Replace the bogus BUG_ON in the cpu hotplug code\"\n\n* 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  smp/hotplug: Replace BUG_ON and react useful Merge tag 'regmap-fix-w1-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap\n\nPull regmap fix from Mark Brown:\n \"Fix build due to w1 header refactoring\n\n  The regmap support for w1 was added shortly before a reorganization of\n  the w1 headers. While this was noticed before the merge window and\n  efforts made to get it resolved in what was sent that managed to fall\n  through the cracks, this cleans up and updates things so we look for\n  the header in the new location.\n\n  It didn't cause build failures as the driver that's going to be the\n  first user got held up with other review issues\"\n\n* tag 'regmap-fix-w1-merge-window' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap:\n  regmap: regmap-w1: Fix build troubles Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"This is actually just a small set of mainly bug fixes for the original\n  merge window code plus a few trivial updates and qedi boot from SAN\n  support feature patch\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: libfc: pass an error pointer to fc_disc_error()\n  scsi: hisi_sas: make several const arrays static\n  scsi: qla2xxx: Off by one in qlt_ctio_to_cmd()\n  scsi: sg: fix SG_DXFER_FROM_DEV transfers\n  scsi: virtio_scsi: always read VPD pages for multiqueue too\n  scsi: qedf: fix spelling mistake: \"offlading\" -> \"offloading\"\n  scsi: qedi: fix another spelling mistake: \"alloction\" -> \"allocation\"\n  scsi: isci: fix typo in function names\n  scsi: cxlflash: return -EFAULT if copy_from_user() fails\n  scsi: qedi: Add support for Boot from SAN over iSCSI offload Linux v4.13-rc1 Merge tag 'standardize-docs' of git://git.lwn.net/linux\n\nPull documentation format standardization from Jonathan Corbet:\n \"This series converts a number of top-level documents to the RST format\n  without incorporating them into the Sphinx tree. The hope is to bring\n  some uniformity to kernel documentation and, perhaps more importantly,\n  have our existing docs serve as an example of the desired formatting\n  for those that will be added later.\n\n  Mauro has gone through and fixed up a lot of top-level documentation\n  files to make them conform to the RST format, but without moving or\n  renaming them in any way. This will help when we incorporate the ones\n  we want to keep into the Sphinx doctree, but the real purpose is to\n  bring a bit of uniformity to our documentation and let the top-level\n  docs serve as examples for those writing new ones\"\n\n* tag 'standardize-docs' of git://git.lwn.net/linux: (84 commits)\n  docs: kprobes.txt: Fix whitespacing\n  tee.txt: standardize document format\n  cgroup-v2.txt: standardize document format\n  dell_rbu.txt: standardize document format\n  zorro.txt: standardize document format\n  xz.txt: standardize document format\n  xillybus.txt: standardize document format\n  vfio.txt: standardize document format\n  vfio-mediated-device.txt: standardize document format\n  unaligned-memory-access.txt: standardize document format\n  this_cpu_ops.txt: standardize document format\n  svga.txt: standardize document format\n  static-keys.txt: standardize document format\n  smsc_ece1099.txt: standardize document format\n  SM501.txt: standardize document format\n  siphash.txt: standardize document format\n  sgi-ioc4.txt: standardize document format\n  SAK.txt: standardize document format\n  rpmsg.txt: standardize document format\n  robust-futexes.txt: standardize document format\n  ... Merge tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random\n\nPull random updates from Ted Ts'o:\n \"Add wait_for_random_bytes() and get_random_*_wait() functions so that\n  callers can more safely get random bytes if they can block until the\n  CRNG is initialized.\n\n  Also print a warning if get_random_*() is called before the CRNG is\n  initialized. By default, only one single-line warning will be printed\n  per boot. If CONFIG_WARN_ALL_UNSEEDED_RANDOM is defined, then a\n  warning will be printed for each function which tries to get random\n  bytes before the CRNG is initialized. This can get spammy for certain\n  architecture types, so it is not enabled by default\"\n\n* tag 'random_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random:\n  random: reorder READ_ONCE() in get_random_uXX\n  random: suppress spammy warnings about unseeded randomness\n  random: warn when kernel uses unseeded randomness\n  net/route: use get_random_int for random counter\n  net/neighbor: use get_random_u32 for 32-bit hash random\n  rhashtable: use get_random_u32 for hash_rnd\n  ceph: ensure RNG is seeded before using\n  iscsi: ensure RNG is seeded before use\n  cifs: use get_random_u32 for 32-bit lock random\n  random: add get_random_{bytes,u32,u64,int,long,once}_wait family\n  random: add wait_for_random_bytes() API Merge branch 'work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull ->s_options removal from Al Viro:\n \"Preparations for fsmount/fsopen stuff (coming next cycle). Everything\n  gets moved to explicit ->show_options(), killing ->s_options off +\n  some cosmetic bits around fs/namespace.c and friends. Basically, the\n  stuff needed to work with fsmount series with minimum of conflicts\n  with other work.\n\n  It's not strictly required for this merge window, but it would reduce\n  the PITA during the coming cycle, so it would be nice to have those\n  bits and pieces out of the way\"\n\n* 'work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  isofs: Fix isofs_show_options()\n  VFS: Kill off s_options and helpers\n  orangefs: Implement show_options\n  9p: Implement show_options\n  isofs: Implement show_options\n  afs: Implement show_options\n  affs: Implement show_options\n  befs: Implement show_options\n  spufs: Implement show_options\n  bpf: Implement show_options\n  ramfs: Implement show_options\n  pstore: Implement show_options\n  omfs: Implement show_options\n  hugetlbfs: Implement show_options\n  VFS: Don't use save/replace_mount_options if not using generic_show_options\n  VFS: Provide empty name qstr\n  VFS: Make get_filesystem() return the affected filesystem\n  VFS: Clean up whitespace in fs/namespace.c and fs/super.c\n  Provide a function to create a NUL-terminated string from unterminated data Merge branch 'work.__copy_to_user' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull more __copy_.._user elimination from Al Viro.\n\n* 'work.__copy_to_user' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  drm_dp_aux_dev: switch to read_iter/write_iter Merge branch 'work.uaccess-unaligned' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull uacess-unaligned removal from Al Viro:\n \"That stuff had just one user, and an exotic one, at that - binfmt_flat\n  on arm and m68k\"\n\n* 'work.uaccess-unaligned' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  kill {__,}{get,put}_user_unaligned()\n  binfmt_flat: flat_{get,put}_addr_from_rp() should be able to fail Merge branch 'misc.compat' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull network field-by-field copy-in updates from Al Viro:\n \"This part of the misc compat queue was held back for review from\n  networking folks and since davem has jus ACKed those...\"\n\n* 'misc.compat' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  get_compat_bpf_fprog(): don't copyin field-by-field\n  get_compat_msghdr(): get rid of field-by-field copyin\n  copy_msghdr_from_user(): get rid of field-by-field copyin Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS updates from Ralf Baechle:\n \"Boston platform support:\n   - Document DT bindings\n   - Add CLK driver for board clocks\n\n  CM:\n   - Avoid per-core locking with CM3 & higher\n   - WARN on attempt to lock invalid VP, not BUG\n\n  CPS:\n   - Select CONFIG_SYS_SUPPORTS_SCHED_SMT for MIPSr6\n   - Prevent multi-core with dcache aliasing\n   - Handle cores not powering down more gracefully\n   - Handle spurious VP starts more gracefully\n\n  DSP:\n   - Add lwx & lhx missaligned access support\n\n  eBPF:\n   - Add MIPS support along with many supporting change to add the\n     required infrastructure\n\n  Generic arch code:\n   - Misc sysmips MIPS_ATOMIC_SET fixes\n   - Drop duplicate HAVE_SYSCALL_TRACEPOINTS\n   - Negate error syscall return in trace\n   - Correct forced syscall errors\n   - Traced negative syscalls should return -ENOSYS\n   - Allow samples/bpf/tracex5 to access syscall arguments for sane\n     traces\n   - Cleanup from old Kconfig options in defconfigs\n   - Fix PREF instruction usage by memcpy for MIPS R6\n   - Fix various special cases in the FPU eulation\n   - Fix some special cases in MIPS16e2 support\n   - Fix MIPS I ISA /proc/cpuinfo reporting\n   - Sort MIPS Kconfig alphabetically\n   - Fix minimum alignment requirement of IRQ stack as required by\n     ABI / GCC\n   - Fix special cases in the module loader\n   - Perform post-DMA cache flushes on systems with MAARs\n   - Probe the I6500 CPU\n   - Cleanup cmpxchg and add support for 1 and 2 byte operations\n   - Use queued read/write locks (qrwlock)\n   - Use queued spinlocks (qspinlock)\n   - Add CPU shared FTLB feature detection\n   - Handle tlbex-tlbp race condition\n   - Allow storing pgd in C0_CONTEXT for MIPSr6\n   - Use current_cpu_type() in m4kc_tlbp_war()\n   - Support Boston in the generic kernel\n\n  Generic platform:\n   - yamon-dt: Pull YAMON DT shim code out of SEAD-3 board\n   - yamon-dt: Support > 256MB of RAM\n   - yamon-dt: Use serial* rather than uart* aliases\n   - Abstract FDT fixup application\n   - Set RTC_ALWAYS_BCD to 0\n   - Add a MAINTAINERS entry\n\n  core kernel:\n   - qspinlock.c: include linux/prefetch.h\n\n  Loongson 3:\n   - Add support\n\n  Perf:\n   - Add I6500 support\n\n  SEAD-3:\n   - Remove GIC timer from DT\n   - Set interrupt-parent per-device, not at root node\n   - Fix GIC interrupt specifiers\n\n  SMP:\n   - Skip IPI setup if we only have a single CPU\n\n  VDSO:\n   - Make comment match reality\n   - Improvements to time code in VDSO\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus: (86 commits)\n  locking/qspinlock: Include linux/prefetch.h\n  MIPS: Fix MIPS I ISA /proc/cpuinfo reporting\n  MIPS: Fix minimum alignment requirement of IRQ stack\n  MIPS: generic: Support MIPS Boston development boards\n  MIPS: DTS: img: Don't attempt to build-in all .dtb files\n  clk: boston: Add a driver for MIPS Boston board clocks\n  dt-bindings: Document img,boston-clock binding\n  MIPS: Traced negative syscalls should return -ENOSYS\n  MIPS: Correct forced syscall errors\n  MIPS: Negate error syscall return in trace\n  MIPS: Drop duplicate HAVE_SYSCALL_TRACEPOINTS select\n  MIPS16e2: Provide feature overrides for non-MIPS16 systems\n  MIPS: MIPS16e2: Report ASE presence in /proc/cpuinfo\n  MIPS: MIPS16e2: Subdecode extended LWSP/SWSP instructions\n  MIPS: MIPS16e2: Identify ASE presence\n  MIPS: VDSO: Fix a mismatch between comment and preprocessor constant\n  MIPS: VDSO: Add implementation of gettimeofday() fallback\n  MIPS: VDSO: Add implementation of clock_gettime() fallback\n  MIPS: VDSO: Fix conversions in do_monotonic()/do_monotonic_coarse()\n  MIPS: Use current_cpu_type() in m4kc_tlbp_war()\n  ... Do better cylinder information management\n\nInstead of just tracking gasmix, track the size and workng pressure of\nthe cylinder too.\n\nAnd use \"cylinder\" instead of \"tank\" throughout.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'mean depth' marker on dive plot\n\nJust because I can.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Only update mean/max depths with computed ones if they are way off\n\nThe computer may track \"real\" max depth more closely than it tracks\nsamples.  So we trust the non-computed mean/max depths more than the\ncomputed ones.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add various dive fixups, and show pressure (if any) in the plot\n\nNow the dive profile plot *really* needs some units.  The pressure is\njust a random line otherwise.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update README a bit\n\n..since this is now on github, might as well tell people what they need\nto compile it, and warn them about the state of the project.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add location note to the top bar too.\n\nI really don't understand the packing rules.  This does not look like\nwhat I intended.\n\nOh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do a dive de-dup pass\n\nIf given multiple dives at the same time, just de-dup the dives.  This\nhappens when you've dumped the whole dive-computer several times, and\nsome dives show up in multiple dumps.\n\nWhen de-duping, try to avoid dropping data.  So if one dive has notes\nattached to it, and the other one does not, pick the notes from the dive\nthat does have them.  Obvious stuff like that.\n\nThe sample merge is also written so that it should be possible to merge\ntwo dives. Which we don't actually do yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve uemis xml parsing a bit\n\nIt looks like the \"units.pressure\" setting is only about the units that\nthings are *shown* in on the wrist computer: the units in the file are\nalways in bar (or rather, centi-bar).\n\nWhich is definitely the right thing to do, and means that we shouldn't\ncare about parsing the units setting.  It's purely about how something\nis shown, not about parsing.\n\nThat's probably true of the other units too, but let's see when I have\nmore data to go on.\n\nAlso, parse water temperatures and tank pressure.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Silently ignore zero pressure\n\nDon't complain about them, they're just missing values\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'units' value instead of guessing based on integer/FP\n\nWe still end up guessing based on magnitude of the value, though: it\nmight be 'bar' or 'mbar', we end up picking one or the other based on\njust how big the value is.\n\nI should make it look at any possible explicit units too, since at least\nwith good xml, they exist.  Of course, the only good xml I've seen so\nfar is the one we generate ourselves ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Hack up some very rudimentary support for the Uemis xml format\n\nI think I'll need to re-organize the handling of per-format code, but\nfor now we just mix it all up.\n\nThe uemis conversion is also questionable even for just the small parts\nI do.  Does it really do \"centiPSI\"? That sounds crazy.  I'm waiting for\nDirk to send me some actual human-readable output from the dives, right\nnow some of it is just rough guesses.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show temperature in the info summary\n\nIf it exists, it really does help identify the dive.  At least it does\nfor me: \"local or Maui\"?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate 'watertemp' field from samples if required\n\nSure, it's redundant, but it's convenient for the general dive info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix wrongly nested watertemp xml entry\n\nToo much cut-and-paste: the ending tag said \"airtemp\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> We can't save escape characters.\n\nI think it should be legal xml, but whatever.  libxml2 is very unhappy,\nand complains when loading - even if I escape them.  So let's just\nreplace the low escape characters with '?'.\n\nThe only thing to ever care was my test-case, I suspect.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save and parse notes and locations\n\nIt's pretty rough, but it seems to work.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do gasmix as an empty element XML too\n\nLet's make it a goal that the XML we output is pretty.  That clearly was\nnever a goal for the Suunto XML, but we can be oh-so-much-better than that.\n\nI still don't love XML, but let's try to make the best of a bad situation,\nand take pride in what we do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up save-file output a bit\n\nUse the \"empty element\" form for samples that don't have any events\nassociated with them (and none do, right now).  This avoids that\nannoying \"</sample>\" crud.\n\nAnd output the units in the output helpers, so that you can't forget\nthem even if you try.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Always use proper units when saving.\n\nWhen we see a number like 23.145, we'd better always also see a unit.\nIt's just good practice.  So add 'min' to duration (and use only two\ndigits for number of seconds), and 'm' to depth.\n\nAnd write the date in international standard format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the date parser to also parse the international standard date format\n\nThe standard way to write a date is yyyy-mm-dd, which is unambiguous and\nsorts correctly.\n\nWe parsed that right in the 'datetime' case, but not in the normal date\ncase.  And we do want to use that in our output format, exactly because\nit's standard.\n\nAnd also parse 'duration' for the dive duration.  It's what we use when\nsaving, it just so happened that we ended up not parsing it right, but\nthen picking it up from the samples instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save everything in our current dives and samples into the xml file\n\nNow, as we start parsing more, we just need to also add the code to save\nit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up small details in input/output\n\nBe more careful with FP conversions, and with the Kelvin<->C offset.\nAnd make sure to use the same names when saving as when parsing.\n\nNow when we save a set of dives, then re-load them, and save again, the\nsecond save image is identical to the first one.\n\nOf course, we don't actually save everything we load, so we still do\nlose information when we load and then save the result.  But at least we\nnow don't lose the information that we *do* save.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add ability to 'save' dives\n\nThis just generates another xml file.  Don't get me wrong: I still don't\nlike xml, but this way we can save in the same format we load things\nfrom.  Except the save-format is a *lot* cleaner than the abortion that\nis Suunto or libdivecomputer xml.\n\nDon't bother with some crazy xml library crap for saving. Just do it!\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> gasmix: stop tracking nitrogen percentages\n\nThe only thing you can do with that thing is screw things up (like\nlibdivecomputer did).  There's no value in tracking the \"filler\" gas,\nsince you can always just calculate it from the gases that actually\nmatter.\n\nSo just track Oxygen and Helium - and make sure they have sane values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> libdivecomputer does crazy gas mixes too\n\nDid I just say \"In comparison, the libdivecomputer output is nice and\nsane\"?\n\nIt turns out that libdivecomputer has been doing some drugs too when it\ncomes to gas mixes.  Like showing O2 percentages as 255.0% and N2\npercentages as -155.0%.\n\nClearly libdivecomputer uses a 'unsigned char' for oxygen percentage,\nand makes \"-1\" be \"undefined\".  And then it prints that non-existing mix\nout, and in the process does MATH on the damn thing (\"100-O2\") to\n\"calculate\" the nitrogen percentage.\n\nChrist.\n\nJust make the parser silently ignore the craziness, because printing out\n\"Strange percentage reading -155.0\" a few hundred times just doesn't\nmake anything any better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing gas mixes\n\nThe suunto xml is just completely crazy.  What's the helium percentage\ncompanion to \"o2pct\"? Would it be \"hepct\"? No. It's \"hepct_0\".\n\nOk, so they didn't number the first o2pct, which could be seen as sane:\nthat's the only mix value that should always exist.  And they clearly\nstarted their indexing with 0.  So with multiple mixes, you'd then\nexpect \"o2pct_1\" and \"hepct_1\", right?\n\nWrong! Because XML people are crazy, the second O2 mix percentage is\nobviously \"o2pct_2\".  So the O2 percentages are one-based, with an\nimplicit one.  But the He percentages are zero-based with an explicit\nzero.  So the second mix is \"o2pct_2\" and \"hepct_1\".\n\nI'd like to ask what drugs Suunto people are on, but hey, it's a Finnish\ncompany.  No need to ask.  Vodka explains everything.  LOTS AND LOTS OF\nVODKA.\n\nIn comparison, the libdivecomputer output is nice and sane, and uses a\n'gasmix' node.  Of course, now we have so many different XML nesting\nnodes to check that I just made it an array of different noces.  That\nalso allows me to mark the suunto case, so that we only do the \"check\nfor crazy alcoholic xml entries\" when it's a suunto file.\n\nThe \"type of file\" thing is probably a good idea for deciding on default\nunits too. Some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of our 'ignore' rules\n\nI'll start doing some kind of \"save unparsed things as extended items\"\nthing, and the ignore rules were just there to get rid of some of the\nnoise from early parsing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> xml parsing: start traversing properties too\n\nThis requires us to change the way we match things up, because now we\ncan have things like\n\n   dives.dive.sample.event.time\n\nand\n\n   dives.dive.sample.time\n\nand they are different things (that \"sample.event.time\" is a 'time'\nproperty of the 'event').\n\nNow, this is always going to be ambiguous, since our linearized name of\nthe xml doesn't really care whether it's a xml node \"child\" or a\n\"property\", but quite frankly, I don't care. XML just isn't worth the pain.\n\nIn fact, maybe this ambiguity can end up being a good thing.  We will\nparse these two different lines of XML the same way:\n\n  <dive><sample><time>50</time><depth>10.8</depth></sample></dive>\n\n  <dive><sample time=\"50\" depth=\"10.8\"></sample></dive>\n\nand the attribute approach seems to be the nicer one.  Maybe I'll use\nthat for the output format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename some files to be more appropriate\n\nThe executable is now called 'divelog'.  If this gets useful enough to\nactually *use*, I guess I'll have to come up with a real name some day.\n\nAdd a silly README, rename 'parse' to 'parse-xml'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some extended dive info fields\n\n.. and tweak the basic info layout a bit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the main display saner\n\nThis tweaks:\n - packing to be what you'd kind of expect\n - makes the \"summary info\" always visible\n - the \"extended info\" is now on a notebook page of its own\n - dive profile the first notebook page, since the summary\n   information is visible regardless.\nwhich all just seems a lot more logical.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Boiler-plate code for opening/saving a file\n\nAll just copied from the gtk docs.  No actual loading or saving is\ntaking place, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a top 'File' menu\n\nIt doesn't actually *do* anything, but what else is new?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do something half-way sane (no SIGSEGV) when there are no dives\n\nIt just leaves ugly blank areas, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start cleaning up dive accessors\n\nI'm going to add a menu to import (and eventually export) dives, and so\nwe'd like to be able to start out with no dives at all.  Right now we\ncroak if that happens - it's not like the code has been written with\nactual end users in mind.\n\nSo start cleaning things up.  First make the 'current_dive' macro work\nright even for invalid dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a 'notebook' for Info vs Profile\n\nI dunno.  This seems a better interface at least if we get more info for\nthe dive, but I suspect I'll want to the add basic info to the profile\npage too.\n\nThis makes the 'table' approach to layout be kind of pointless again,\nand the table has become a fancy vbox.  Maybe I'll put the core info\nback, and use the notebook 'Info' page for extended information.\n\nI should just bite the bullet and start saving the dive data, and adding\nediting functions for adding information.  But instead I'm playing\naround with random gtk widgets.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more dive info - and actually update it\n\nIt's still the ugliest application ever, but now it at least gives you\nsome basic dive info.\n\nI'd love to add a way to edit the dives to add new data (name, buddies,\nlocation etc), but that would also require the ability to save the end\nresult.  Maybe some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive parsing: enforce maxdepth and dive duration\n\nIf we see samples from past the dive duration, update the dive duration.\nLikewise with maxdepth.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive profile plot: use saner minimum limits\n\nThe time minimum was in seconds, not minutes, and we really do want to\nshow at least to 90ft to make shallow dives look shallow rather than\nscaled to some full depth.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> plot a fancier 'filled' depth profile\n\nNow I'm just dicking around with cairo.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot dive profile slightly more intelligently.\n\nThis actually creates a bounding box and some scale markers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add fake 'info' frame contents\n\nIt should have depth, time, place etc information, but right now it only\nhas a fake depth that doesn't even get updated.  Just to show the idea\nof the table usage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a gtk table instead of hbox\n\nWe'll want to add various dive statistics, so...  Without them, it all\nlooks pretty much the same, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'repaint_dive()' prototype, and fix dependencies\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the thing to actually track the currently selected dive\n\n.. and repaint the profile when the selection changes.\n\nNow, if it just wasn't so ugly, it might even be useful.  Except it\nobviously needs to also show all the other dive information.  And allow\nthe user to fill in details.  And save the end results.\n\nSo no, it's not useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Re-do the tree selection code with a selection callback\n\nLearnign gtk by looking at cairo examples? It's one way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't newline-terminate the dive name\n\nThat resulted in ugly lists, and it was wrong to begin with.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up divelist scroll window generation into its own file\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of now unused 'show_dive()' function\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up profile frame generation into its own file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Draw some kind of profile for the (first) dive\n\nThis is all kinds of broken: it doesn't actually follow the selected\ndive, and the profile isn't scaled properly etc.  But it shows something\nnew, and not just text.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix depth parsing\n\nThe \"decimal: it's meters, integer: it's feet\" logic doesn't work.  It's\njust always meters, because the xml ends up sometimes having whole meters.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive list scrollable (and put it in a vbox)\n\nThis means you can actually see them all, and walk through them.\n\nIt doesn't make any of this *useful*, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the dives as a gtk list/tree widget\n\nOk, so I'm not very good at this.  I'll need to enclose the dang thing\nin a scrollable window, and then make that scrollable thing just part of\nthe whole window.\n\nBut hey, it's pixels on the screen.  Pixels that show the names of the\ndives we've parsed.  At least as many as will fit on screen at one time ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate a default name for a dive, if it doesn't have one already\n\nThe name is a string containint date, time, depth and length.  So it's\nuseful even with nothing else going on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Create a gtk window\n\nIt doesn't *do* anything, but some day it will.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add .gitignore file for current state\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start moving some of the non-parsing stuff out of 'parse.c'\n\nCreate a 'main.c' with the main routine and argument \"parsing\" etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up dive data structure declarations into 'dive.h'\n\nThe dive parser should eventually be just a part of the program, not the\nwhole thing. So start preparing for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up dive reporting\n\nShow date, max depth, and time by default.  The stuff that matters and\nshould always exist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more parsing functions\n\n.. and fix the 'duration' parsing: it can be either in seconds, or in\nmm:ss format.  Floating point doesn't make any sense.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't report dives as they are parsed: sort them at the end and report them then\n\nThis makes it much easier to see the duplicates, but more importantly,\nwe do need to actually save the dives off to do any real work with them.\n\nAlso, require a verbosity level of 1 (-v) to show all the samples.\nWhile (-vv) shows unparsed entries.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'datetime' parsing for libdivecomputer xml files\n\nI think this gets me dates on all my dives.  So now I could start\nsorting them and removing duplicates.\n\nBut before I try to remove dups, I guess I should compare the\nlibdivecomputer ones against the suunto ones.  Because I bet they have\nvarious \"interesting\" issues like using Bar vs Atm etc.\n\n\"But XML is portable\". Crazy people.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up temperature conversion\n\nOops. No, the water temperature wasn't really 500 degC.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start actually reporting the numbers we parsed\n\n.. which also showed that the sampletime thing had gotten a bit too much\ncopy-paste from the temperature parsing ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'verbose' flag\n\nNow that we actually parse some of the dives, don't spam stdout with the\nlist of stuff we can't parse by default.\n\nAdd a 'verbose' flag, which enables that output when set.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing numeric fields\n\nDepth, pressure, and sample times.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing dive dates\n\n.. only the suunto XML format, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the \"text\" nodename hackery out of 'nodename()'\n\nIt's better to do it in the caller.  Debug users may well want the full\nnode name.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix stupid mis-initialization of current sample\n\n.. nice compiler warning hidden by the crazy gcc pointer sign warnings\nthat nobody wants to see (yes, we really do want to do 'strlen()' even\non unsigned strings, don't complain, crazy bitch compiler).\n\nSo this also makes our CFLAGS set -Wno-pointer-sign.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start showing unparsed entries\n\n(ie all of them)\n\nThis also shows the type of entry, which makes it clear that I've\nscrewed up the sample matching.  Oh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fill in dummy parse target code\n\n.. but don't actually parse anything yet.  But hey - now it tells you\nhow many samples it (hasn't) parsed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the parser closer to being usable\n\nOk, so we have the dive split and the sample splits, so now we could\nreally just start filling in data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn the XML into something almost parseable.\n\nOf course, now the problem is that the different XML files have\ndifferent node names, but at least we've turned it into a half-way sane\nformat, and have a nice callback place per value.\n\nSoon we could use that to actually fill in useful information.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the multi-dive files valid XML\n\nThey had multiple \"root\" entries (all called 'dive'), which makes baby\nJesus cry.\n\nSo just enclose them all in one root entry (called 'dives') that\nmagically turns it all into parseable xml.\n\nYeah, that really helps make the world a better place.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add crazy (bad) xml parser thing\n\nIt only works for the Suunto \"one xml file per dive\" format, not for the\nlibdivecomputer one that just puts many dives in one file.\n\nMaybe there is some way for libxml2 to handle concatenated xml files\n(start again on errors), but I don't know it yet.\n\nI need to get stinking drunk before I look at more xml mess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start archiving the stupid XML files\n\n(and add a reminder of how they came to be)\n\nGaah.  XML is *stupid*.  It's not easy to parse for humans or for\ncomputers, and some of these XML files are just disgusting.  But maybe\nthey can be turned into something usable with libxml.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add support from importing from Diving Log xml files\n\nThis is just a very rough draft.  It imports all the main stuff I\nnoticed, but I'm sure it drops a ton of other stuff.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the import source an enumeration\n\nInstead of having each import source recognition routine set a separate\nflag for that import source, just enumerate them and set them in one\nvariable.\n\nI'm adding yet another xml importer - divinglog.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse Uemis cylinder data correctly.\n\nThere's a big comment there now about what is going on.  It took me a\nwhile to understand how the crazy seven-tank uemis dive computer\ninformation actually works.\n\nSo the Uemis computer has 4 different \"tank profiles\":\n - single tank air (0)\n - single tank nitrox (1)\n - two-tank nitrox (2)\n - three-tank nitrox (3)\nand the computer always lists all seven tank cases (because that's how\nyou fill them in).\n\nDepending on the \"gas.template\" you are supposed to then *use* just one\nparticular profile.  Why the computer doesn't just give you the tanks\nfor that one profile, who knows? It seems to be more of the same \"Uemis\ndive data isn't so much about the dive, it's about dive computer state\"\nmentality.\n\nSo we first get the profile information, and then based on that we need\nto pick the right tanks from the set of seven that we're presented with.\n\nAll clear?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Turn dive depth, temperature and duration into xml attributes\n\nThis makes the xml save-file look way nicer: it's both smaller and\nbetter organized.  Using individual xml nodes for random small details\nis silly.\n\nThe duration even parses exactly the same, because it still ends up\nbeing '.depth.duration' (now it's the 'duration' attribute of the dive\nnode, it used to be the 'duration' child node of the dive node).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Sanitize and fix cylinder pressure overview\n\nDoing per-dive cylinder start/end pressures is insane, when we can have\nup to eight cylinders.  The cylinder start/end pressure cannot be per\ndive, it needs to be per cylinder.\n\nThis makes the save format cleaner too, we have all the cylinder data in\njust one place.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Zebra-color the divelist\n\n..as suggested by Nathan:\n\n  \"I also wanted to \"zebra\" color the divelist by setting the rules-hint\n   to TRUE.  but I noticed it was already set explicitly to FALSE (even\n   if this is the default).\n\n   If this is just an accidental copy paste from some tutorial you can\n   experiment (set it to TRUE) and see what you like most.\"\n\nIt was indeed just copy-paste from some tutorial, and the zebra-coloring\ndoes look nicer, doesn't it?\n\nSuggested-by: Nathan Samson <nathansamson@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'more-divelist-goodness' of https://github.com/nathansamson/diveclog\n\n* 'more-divelist-goodness' of https://github.com/nathansamson/diveclog:\n  Right align the numbers Save milli-units with variable precision\n\nInstead of always using three decimal digits, use 1-3 digits.  But do\nuse at least one, even for integer numbers, just because it makes it so\nmuch clearer that we're dealing with potential fractional values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use common helper for printing milli-units\n\nI don't necessarily want to show three decimal digits when one or two\nwould do. So prepare for that by using a helper. This doesn't actually\nchange the printout yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Properly save/restore cylinder description string\n\nWe saved it under the wrong name, and didn't restore it at all. Fix.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Parse uemis cylinder data\n\nThis is some seriously crazy stuff.  Instead of making sense as a\ndivelog, the uemis xml makes more sense as a \"dive computer settings\ndump\".\n\nAnd I guess I can see why they'd do that.  But it makes parsing it just\nincredibly annoying.  The thing is more of a \"these are the\nconfigurations I support as a dive computer thing\" than a \"this was the\ntank you were diving with\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-tweaks' of https://github.com/nathansamson/diveclog\n\n* 'ui-tweaks' of https://github.com/nathansamson/diveclog:\n  Some UI beauty patches: Make a guess at the cylinder description from the size and pressure\n\nI'll want to also add a way to override/set the cylinder type: both\nmanually by just setting a size in liters, and by picking from some list\nof standard cylinder sizes.\n\nFor example, it looks like most of my dives are marked as having\n12-liter cylinders.  That is probably some default from Suunto Dive\nManager, or from whatever Dirk did.  It's almost certainly not right for\nany of them: as far as I know, the standard cylinders for Lahaina Divers\n(which is likely most of the warm water dives) are AL72's for air, and\nAL80's for Nitrox.\n\nThat would be a 10L and a 11.1L tank respectively, afaik.  I don't know\nwhat a 12-liter tank would be or where that size comes from.\n\nAnyway, the LP85+ tank designation for some of the dives looks more\nlikely: that's one of the common sizes I've used for local dives.  So\nthe size of that thing is much more probably correct.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up 'fixup_dive()' a bit\n\nWe don't want to override potentially more exact values for water\ntemperature etc either.  The sample save interval may be longer than\nsome internally kept state of key per-dive values like that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate date string for the dive list dynamically\n\n.. and sort based on the 'time_t' value itself.\n\nThis allows us to use a more compact date format that doesn't need to\nsort alphabetically, because sorting by date is always based on the date\nvalue.  So we can use just a two-digit year, and skip the seconds, to\nkeep the column narrow, while still sorting correctly.\n\nAlso, \"Depth\" is a nice header string, but it is wider than the column\nitself, which makes the whole column wider than necessary.  So put the\nunits in the header instead of in the string, keeping things narrow.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'ui-improvements' of https://github.com/nathansamson/diveclog\n\n* 'ui-improvements' of https://github.com/nathansamson/diveclog:\n  Split the dive list in columns. Columns are sortable now (name = date, depth, duration)\n  Remove the redundant frames in the notebook. Closes #9\n  Use a pane so the dive list can be made wider or smaller to the users wishes Merge branch 'compiler-warning' of https://github.com/nathansamson/diveclog\n\n* 'compiler-warning' of https://github.com/nathansamson/diveclog:\n  Removed the unused startemp and enttemp calculations. This fixes a compiler warning too.\n\nFix up trivial conflict in dive.c due to the temperature simplification\n(commit 9961c7f89ce6: \"Remove redundant temperature readings\"). Add placeholder for cylinder type description\n\nSo we don't want to save working pressure, but cylinder type knowledge\nwould be lovely and useful.  And we can probably make a good initial\nguess, or at least let people fill it in later.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't save cylinder working pressure\n\nIt was a mistake to save it - and I did it just because other dive\nmanagers did.  It's a totally nonsensical measure, and nobody cares.\nThe only thing that matters is the size of the cylinder, and the\n*actual* pressures.  Those give actual air consumption numbers, and are\nmeaningful and unambiguous.\n\nSo the \"working pressure\" for a cylinder is pointless except for two\nthings:\n\n - if you don't know the actual physical size, you need the \"working\n   pressure\" along with the air size (eg \"85 cuft\") in order to compute\n   the physical size.  So we do use the working pressure on *input* from\n   systems that report cylinder sizes that way.\n\n - People may well want to know what kind of cylinder they were diving,\n   and again, you can make a good guess about this from the working\n   pressure.  So saving information like \"HP100+\" for the cylinder would\n   be a good thing.\n\nBut notice how in neither case do we actually want to save the working\npressure itself.  And in fact saving it actually makes the output format\nambiguous: if we give both size and working pressure, what does 'size'\nmean? Is it physical size in liters, or air size in cu ft?\n\nSo saving working pressure is just wrong. Get rid of it.\n\nI'm going to add some kind of \"cylinder description\" thing, which we can\nsave instead (and perhaps guess standard cylinders from input like the\nworking pressure from dive logs that don't do this sanely - which is all\nof them, as far as I can tell).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Remove redundant temperature readings\n\nI'm aiming to really differentiate in dive log software by making my XML\nexport files be *clean*, dammit.\n\nThat means that we don't have random names, we don't have crazy random\nunits, and we don't have redundant information.\n\nSo when the temperature doesn't change, just don't report it.  That's\nalready what \"no sample\" means, just clean things up.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix typo in Makefile (LDLAGS -> LDFLAGS)\n\nReported-by: Konrad Delong <https://github.com/konryd>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'fix-entries' of https://github.com/nathansamson/diveclog\n\n* 'fix-entries' of https://github.com/nathansamson/diveclog:\n  Word wrap the info textview. Also do not show the scrollbars if not necessary.\n  Change location to a text entry instead of text view. Update gitignore for the name-change of the executable\n\nIt's not called 'parse' any more.  And I think I should rename 'divelog'\ntoo to something more unique.  Right now the working name for the\nproject is 'diveclog' (kind of like 'jdivelog') , but I'm not convinced\nthat the \"C implementation\" part is really important enough to make a\npoint of long-term.\n\n\"subsurface\"? I don't know.  Maybe I should follow the \"name all\nprojects after myself\" mantra.  \"divenut\"?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Oops. I forgot to 'fclose()' the file after saving the xml\n\nIt never actually triggered anything for me, but any buffered data might\nbe lost, especially if you force-exit the application after saving a\ndive log.\n\nThis probably explains a corrupted (truncated) dive file report from\nNathan Samson.\n\nReported-by: Nathan Samson <https://github.com/nathansamson>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'Quit' menu item, and fix invisible \"File\" on gtk2\n\nI didn't even notice that the \"File\" part of the file menu no longer\nshowed up, since the keyboard accelerator for ^S worked fine..  But\napparently there's no default label associated with GTK_STOCK_FILE in\ngtk2, so the \"File\" text went away with the conversion to GtkUIManager\nin commit 4d62478e14fe (\"Use the newer GtkUIManager for menu creation.\")\n\nThe addition of a Quit menu entry with the associated keyboard\naccelerator also makes ^Q \"just work\".\n\nOf course, if we actually tracked dirty state etc, we could perhaps ask\nthe user whether they wanted to save or something.  But I'm not exactly\nfamous for my GUI chops, so ..\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge https://github.com/mrjbq7/diveclog\n\n* https://github.com/mrjbq7/diveclog:\n  dive.c: Fix spelling. Don't bother saving n2 percentage\n\nIt's all calculated anyway, and for the same reason we don't bother even\nparsing it at load time, we really shouldn't bother saving it either.\n\nThe only thing you can do with that value is \"check if the percentages\nadd up to 100%\", and so what?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do better cylinder information management\n\nInstead of just tracking gasmix, track the size and workng pressure of\nthe cylinder too.\n\nAnd use \"cylinder\" instead of \"tank\" throughout.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'mean depth' marker on dive plot\n\nJust because I can.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Only update mean/max depths with computed ones if they are way off\n\nThe computer may track \"real\" max depth more closely than it tracks\nsamples.  So we trust the non-computed mean/max depths more than the\ncomputed ones.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add various dive fixups, and show pressure (if any) in the plot\n\nNow the dive profile plot *really* needs some units.  The pressure is\njust a random line otherwise.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Update README a bit\n\n..since this is now on github, might as well tell people what they need\nto compile it, and warn them about the state of the project.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add location note to the top bar too.\n\nI really don't understand the packing rules.  This does not look like\nwhat I intended.\n\nOh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do a dive de-dup pass\n\nIf given multiple dives at the same time, just de-dup the dives.  This\nhappens when you've dumped the whole dive-computer several times, and\nsome dives show up in multiple dumps.\n\nWhen de-duping, try to avoid dropping data.  So if one dive has notes\nattached to it, and the other one does not, pick the notes from the dive\nthat does have them.  Obvious stuff like that.\n\nThe sample merge is also written so that it should be possible to merge\ntwo dives. Which we don't actually do yet.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Improve uemis xml parsing a bit\n\nIt looks like the \"units.pressure\" setting is only about the units that\nthings are *shown* in on the wrist computer: the units in the file are\nalways in bar (or rather, centi-bar).\n\nWhich is definitely the right thing to do, and means that we shouldn't\ncare about parsing the units setting.  It's purely about how something\nis shown, not about parsing.\n\nThat's probably true of the other units too, but let's see when I have\nmore data to go on.\n\nAlso, parse water temperatures and tank pressure.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Silently ignore zero pressure\n\nDon't complain about them, they're just missing values\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use 'units' value instead of guessing based on integer/FP\n\nWe still end up guessing based on magnitude of the value, though: it\nmight be 'bar' or 'mbar', we end up picking one or the other based on\njust how big the value is.\n\nI should make it look at any possible explicit units too, since at least\nwith good xml, they exist.  Of course, the only good xml I've seen so\nfar is the one we generate ourselves ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Hack up some very rudimentary support for the Uemis xml format\n\nI think I'll need to re-organize the handling of per-format code, but\nfor now we just mix it all up.\n\nThe uemis conversion is also questionable even for just the small parts\nI do.  Does it really do \"centiPSI\"? That sounds crazy.  I'm waiting for\nDirk to send me some actual human-readable output from the dives, right\nnow some of it is just rough guesses.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show temperature in the info summary\n\nIf it exists, it really does help identify the dive.  At least it does\nfor me: \"local or Maui\"?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate 'watertemp' field from samples if required\n\nSure, it's redundant, but it's convenient for the general dive info.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix wrongly nested watertemp xml entry\n\nToo much cut-and-paste: the ending tag said \"airtemp\".\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> We can't save escape characters.\n\nI think it should be legal xml, but whatever.  libxml2 is very unhappy,\nand complains when loading - even if I escape them.  So let's just\nreplace the low escape characters with '?'.\n\nThe only thing to ever care was my test-case, I suspect.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save and parse notes and locations\n\nIt's pretty rough, but it seems to work.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do gasmix as an empty element XML too\n\nLet's make it a goal that the XML we output is pretty.  That clearly was\nnever a goal for the Suunto XML, but we can be oh-so-much-better than that.\n\nI still don't love XML, but let's try to make the best of a bad situation,\nand take pride in what we do.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up save-file output a bit\n\nUse the \"empty element\" form for samples that don't have any events\nassociated with them (and none do, right now).  This avoids that\nannoying \"</sample>\" crud.\n\nAnd output the units in the output helpers, so that you can't forget\nthem even if you try.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Always use proper units when saving.\n\nWhen we see a number like 23.145, we'd better always also see a unit.\nIt's just good practice.  So add 'min' to duration (and use only two\ndigits for number of seconds), and 'm' to depth.\n\nAnd write the date in international standard format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the date parser to also parse the international standard date format\n\nThe standard way to write a date is yyyy-mm-dd, which is unambiguous and\nsorts correctly.\n\nWe parsed that right in the 'datetime' case, but not in the normal date\ncase.  And we do want to use that in our output format, exactly because\nit's standard.\n\nAnd also parse 'duration' for the dive duration.  It's what we use when\nsaving, it just so happened that we ended up not parsing it right, but\nthen picking it up from the samples instead.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Save everything in our current dives and samples into the xml file\n\nNow, as we start parsing more, we just need to also add the code to save\nit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up small details in input/output\n\nBe more careful with FP conversions, and with the Kelvin<->C offset.\nAnd make sure to use the same names when saving as when parsing.\n\nNow when we save a set of dives, then re-load them, and save again, the\nsecond save image is identical to the first one.\n\nOf course, we don't actually save everything we load, so we still do\nlose information when we load and then save the result.  But at least we\nnow don't lose the information that we *do* save.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add ability to 'save' dives\n\nThis just generates another xml file.  Don't get me wrong: I still don't\nlike xml, but this way we can save in the same format we load things\nfrom.  Except the save-format is a *lot* cleaner than the abortion that\nis Suunto or libdivecomputer xml.\n\nDon't bother with some crazy xml library crap for saving. Just do it!\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> gasmix: stop tracking nitrogen percentages\n\nThe only thing you can do with that thing is screw things up (like\nlibdivecomputer did).  There's no value in tracking the \"filler\" gas,\nsince you can always just calculate it from the gases that actually\nmatter.\n\nSo just track Oxygen and Helium - and make sure they have sane values.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> libdivecomputer does crazy gas mixes too\n\nDid I just say \"In comparison, the libdivecomputer output is nice and\nsane\"?\n\nIt turns out that libdivecomputer has been doing some drugs too when it\ncomes to gas mixes.  Like showing O2 percentages as 255.0% and N2\npercentages as -155.0%.\n\nClearly libdivecomputer uses a 'unsigned char' for oxygen percentage,\nand makes \"-1\" be \"undefined\".  And then it prints that non-existing mix\nout, and in the process does MATH on the damn thing (\"100-O2\") to\n\"calculate\" the nitrogen percentage.\n\nChrist.\n\nJust make the parser silently ignore the craziness, because printing out\n\"Strange percentage reading -155.0\" a few hundred times just doesn't\nmake anything any better.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing gas mixes\n\nThe suunto xml is just completely crazy.  What's the helium percentage\ncompanion to \"o2pct\"? Would it be \"hepct\"? No. It's \"hepct_0\".\n\nOk, so they didn't number the first o2pct, which could be seen as sane:\nthat's the only mix value that should always exist.  And they clearly\nstarted their indexing with 0.  So with multiple mixes, you'd then\nexpect \"o2pct_1\" and \"hepct_1\", right?\n\nWrong! Because XML people are crazy, the second O2 mix percentage is\nobviously \"o2pct_2\".  So the O2 percentages are one-based, with an\nimplicit one.  But the He percentages are zero-based with an explicit\nzero.  So the second mix is \"o2pct_2\" and \"hepct_1\".\n\nI'd like to ask what drugs Suunto people are on, but hey, it's a Finnish\ncompany.  No need to ask.  Vodka explains everything.  LOTS AND LOTS OF\nVODKA.\n\nIn comparison, the libdivecomputer output is nice and sane, and uses a\n'gasmix' node.  Of course, now we have so many different XML nesting\nnodes to check that I just made it an array of different noces.  That\nalso allows me to mark the suunto case, so that we only do the \"check\nfor crazy alcoholic xml entries\" when it's a suunto file.\n\nThe \"type of file\" thing is probably a good idea for deciding on default\nunits too. Some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of our 'ignore' rules\n\nI'll start doing some kind of \"save unparsed things as extended items\"\nthing, and the ignore rules were just there to get rid of some of the\nnoise from early parsing.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> xml parsing: start traversing properties too\n\nThis requires us to change the way we match things up, because now we\ncan have things like\n\n   dives.dive.sample.event.time\n\nand\n\n   dives.dive.sample.time\n\nand they are different things (that \"sample.event.time\" is a 'time'\nproperty of the 'event').\n\nNow, this is always going to be ambiguous, since our linearized name of\nthe xml doesn't really care whether it's a xml node \"child\" or a\n\"property\", but quite frankly, I don't care. XML just isn't worth the pain.\n\nIn fact, maybe this ambiguity can end up being a good thing.  We will\nparse these two different lines of XML the same way:\n\n  <dive><sample><time>50</time><depth>10.8</depth></sample></dive>\n\n  <dive><sample time=\"50\" depth=\"10.8\"></sample></dive>\n\nand the attribute approach seems to be the nicer one.  Maybe I'll use\nthat for the output format.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Rename some files to be more appropriate\n\nThe executable is now called 'divelog'.  If this gets useful enough to\nactually *use*, I guess I'll have to come up with a real name some day.\n\nAdd a silly README, rename 'parse' to 'parse-xml'.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some extended dive info fields\n\n.. and tweak the basic info layout a bit.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the main display saner\n\nThis tweaks:\n - packing to be what you'd kind of expect\n - makes the \"summary info\" always visible\n - the \"extended info\" is now on a notebook page of its own\n - dive profile the first notebook page, since the summary\n   information is visible regardless.\nwhich all just seems a lot more logical.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Boiler-plate code for opening/saving a file\n\nAll just copied from the gtk docs.  No actual loading or saving is\ntaking place, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add a top 'File' menu\n\nIt doesn't actually *do* anything, but what else is new?\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Do something half-way sane (no SIGSEGV) when there are no dives\n\nIt just leaves ugly blank areas, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start cleaning up dive accessors\n\nI'm going to add a menu to import (and eventually export) dives, and so\nwe'd like to be able to start out with no dives at all.  Right now we\ncroak if that happens - it's not like the code has been written with\nactual end users in mind.\n\nSo start cleaning things up.  First make the 'current_dive' macro work\nright even for invalid dives.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a 'notebook' for Info vs Profile\n\nI dunno.  This seems a better interface at least if we get more info for\nthe dive, but I suspect I'll want to the add basic info to the profile\npage too.\n\nThis makes the 'table' approach to layout be kind of pointless again,\nand the table has become a fancy vbox.  Maybe I'll put the core info\nback, and use the notebook 'Info' page for extended information.\n\nI should just bite the bullet and start saving the dive data, and adding\nediting functions for adding information.  But instead I'm playing\naround with random gtk widgets.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more dive info - and actually update it\n\nIt's still the ugliest application ever, but now it at least gives you\nsome basic dive info.\n\nI'd love to add a way to edit the dives to add new data (name, buddies,\nlocation etc), but that would also require the ability to save the end\nresult.  Maybe some day.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive parsing: enforce maxdepth and dive duration\n\nIf we see samples from past the dive duration, update the dive duration.\nLikewise with maxdepth.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> dive profile plot: use saner minimum limits\n\nThe time minimum was in seconds, not minutes, and we really do want to\nshow at least to 90ft to make shallow dives look shallow rather than\nscaled to some full depth.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> plot a fancier 'filled' depth profile\n\nNow I'm just dicking around with cairo.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Plot dive profile slightly more intelligently.\n\nThis actually creates a bounding box and some scale markers.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add fake 'info' frame contents\n\nIt should have depth, time, place etc information, but right now it only\nhas a fake depth that doesn't even get updated.  Just to show the idea\nof the table usage.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Use a gtk table instead of hbox\n\nWe'll want to add various dive statistics, so...  Without them, it all\nlooks pretty much the same, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'repaint_dive()' prototype, and fix dependencies\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Teach the thing to actually track the currently selected dive\n\n.. and repaint the profile when the selection changes.\n\nNow, if it just wasn't so ugly, it might even be useful.  Except it\nobviously needs to also show all the other dive information.  And allow\nthe user to fill in details.  And save the end results.\n\nSo no, it's not useful.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Re-do the tree selection code with a selection callback\n\nLearnign gtk by looking at cairo examples? It's one way.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't newline-terminate the dive name\n\nThat resulted in ugly lists, and it was wrong to begin with.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up divelist scroll window generation into its own file\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Get rid of now unused 'show_dive()' function\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up profile frame generation into its own file.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Draw some kind of profile for the (first) dive\n\nThis is all kinds of broken: it doesn't actually follow the selected\ndive, and the profile isn't scaled properly etc.  But it shows something\nnew, and not just text.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix depth parsing\n\nThe \"decimal: it's meters, integer: it's feet\" logic doesn't work.  It's\njust always meters, because the xml ends up sometimes having whole meters.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the dive list scrollable (and put it in a vbox)\n\nThis means you can actually see them all, and walk through them.\n\nIt doesn't make any of this *useful*, but whatever.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Show the dives as a gtk list/tree widget\n\nOk, so I'm not very good at this.  I'll need to enclose the dang thing\nin a scrollable window, and then make that scrollable thing just part of\nthe whole window.\n\nBut hey, it's pixels on the screen.  Pixels that show the names of the\ndives we've parsed.  At least as many as will fit on screen at one time ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Generate a default name for a dive, if it doesn't have one already\n\nThe name is a string containint date, time, depth and length.  So it's\nuseful even with nothing else going on.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Create a gtk window\n\nIt doesn't *do* anything, but some day it will.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add .gitignore file for current state\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start moving some of the non-parsing stuff out of 'parse.c'\n\nCreate a 'main.c' with the main routine and argument \"parsing\" etc.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Split up dive data structure declarations into 'dive.h'\n\nThe dive parser should eventually be just a part of the program, not the\nwhole thing. So start preparing for that.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Clean up dive reporting\n\nShow date, max depth, and time by default.  The stuff that matters and\nshould always exist.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add some more parsing functions\n\n.. and fix the 'duration' parsing: it can be either in seconds, or in\nmm:ss format.  Floating point doesn't make any sense.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Don't report dives as they are parsed: sort them at the end and report them then\n\nThis makes it much easier to see the duplicates, but more importantly,\nwe do need to actually save the dives off to do any real work with them.\n\nAlso, require a verbosity level of 1 (-v) to show all the samples.\nWhile (-vv) shows unparsed entries.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'datetime' parsing for libdivecomputer xml files\n\nI think this gets me dates on all my dives.  So now I could start\nsorting them and removing duplicates.\n\nBut before I try to remove dups, I guess I should compare the\nlibdivecomputer ones against the suunto ones.  Because I bet they have\nvarious \"interesting\" issues like using Bar vs Atm etc.\n\n\"But XML is portable\". Crazy people.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix up temperature conversion\n\nOops. No, the water temperature wasn't really 500 degC.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start actually reporting the numbers we parsed\n\n.. which also showed that the sampletime thing had gotten a bit too much\ncopy-paste from the temperature parsing ;)\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add 'verbose' flag\n\nNow that we actually parse some of the dives, don't spam stdout with the\nlist of stuff we can't parse by default.\n\nAdd a 'verbose' flag, which enables that output when set.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing numeric fields\n\nDepth, pressure, and sample times.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start parsing dive dates\n\n.. only the suunto XML format, though.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the \"text\" nodename hackery out of 'nodename()'\n\nIt's better to do it in the caller.  Debug users may well want the full\nnode name.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fix stupid mis-initialization of current sample\n\n.. nice compiler warning hidden by the crazy gcc pointer sign warnings\nthat nobody wants to see (yes, we really do want to do 'strlen()' even\non unsigned strings, don't complain, crazy bitch compiler).\n\nSo this also makes our CFLAGS set -Wno-pointer-sign.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start showing unparsed entries\n\n(ie all of them)\n\nThis also shows the type of entry, which makes it clear that I've\nscrewed up the sample matching.  Oh well.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Fill in dummy parse target code\n\n.. but don't actually parse anything yet.  But hey - now it tells you\nhow many samples it (hasn't) parsed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Move the parser closer to being usable\n\nOk, so we have the dive split and the sample splits, so now we could\nreally just start filling in data.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro.\n\nClean up file table accesses (get rid of fget_light() in favor of the\nfdget() interface), add proper file position locking.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  get rid of fget_light()\n  sockfd_lookup_light(): switch to fdget^W^Waway from fget_light\n  vfs: atomic f_pos accesses as per POSIX\n  ocfs2 syncs the wrong range... Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixlet from Tejun Heo:\n \"I merged the two blaclist entries into 'Crucial_CT???M500SSD*'\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  libata: use wider match for blacklisting Crucial M500 vfs: atomic f_pos accesses as per POSIX\n\nOur write() system call has always been atomic in the sense that you get\nthe expected thread-safe contiguous write, but we haven't actually\nguaranteed that concurrent writes are serialized wrt f_pos accesses, so\nthreads (or processes) that share a file descriptor and use \"write()\"\nconcurrently would quite likely overwrite each others data.\n\nThis violates POSIX.1-2008/SUSv4 Section XSI 2.9.7 that says:\n\n \"2.9.7 Thread Interactions with Regular File Operations\n\n  All of the following functions shall be atomic with respect to each\n  other in the effects specified in POSIX.1-2008 when they operate on\n  regular files or symbolic links: [...]\"\n\nand one of the effects is the file position update.\n\nThis unprotected file position behavior is not new behavior, and nobody\nhas ever cared.  Until now.  Yongzhi Pan reported unexpected behavior to\nMichael Kerrisk that was due to this.\n\nThis resolves the issue with a f_pos-specific lock that is taken by\nread/write/lseek on file descriptors that may be shared across threads\nor processes.\n\nReported-by: Yongzhi Pan <panyongzhi@gmail.com>\nReported-by: Michael Kerrisk <mtk.manpages@gmail.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk> Linux 3.14-rc6 Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from from Olof Johansson:\n \"A collection of fixes for ARM platforms.  A little large due to us\n  missing to do one last week, but there's nothing in particular here\n  that is in itself large and scary.\n\n  Mostly a handful of smaller fixes all over the place.  The majority is\n  made up of fixes for OMAP, but there are a few for others as well.  In\n  particular, there was a decision to rename a binding for the Broadcom\n  pinctrl block that we need to go in before the final release since we\n  then treat it as ABI\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: dts: omap3-gta04: Add ti,omap36xx to compatible property to avoid problems with booting\n  ARM: tegra: add LED options back into tegra_defconfig\n  ARM: dts: omap3-igep: fix boot fail due wrong compatible match\n  ARM: OMAP3: Fix pinctrl interrupts for core2\n  pinctrl: Rename Broadcom Capri pinctrl binding\n  pinctrl: refer to updated dt binding string.\n  Update dtsi with new pinctrl compatible string\n  ARM: OMAP: Kill warning in CPUIDLE code with !CONFIG_SMP\n  ARM: OMAP2+: Add support for thumb mode on DT booted N900\n  ARM: OMAP2+: clock: fix clkoutx2 with CLK_SET_RATE_PARENT\n  ARM: OMAP4: hwmod: Fix SOFTRESET logic for OMAP4\n  ARM: DRA7: hwmod data: correct the sysc data for spinlock\n  ARM: OMAP5: PRM: Fix reboot handling\n  ARM: sunxi: dt: Change the touchscreen compatibles\n  ARM: sun7i: dt: Fix interrupt trigger types Merge tag 'nfs-for-3.14-5' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client bugfixes from Trond Myklebust:\n \"Highlights include:\n\n   - Fix another nfs4_sequence corruptor in RELEASE_LOCKOWNER\n   - Fix an Oopsable delegation callback race\n   - Fix another bad stateid infinite loop\n   - Fail the data server I/O is the stateid represents a lost lock\n   - Fix an Oopsable sunrpc trace event\"\n\n* tag 'nfs-for-3.14-5' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  SUNRPC: Fix oops when trace sunrpc_task events in nfs client\n  NFSv4: Fail the truncate() if the lock/open stateid is invalid\n  NFSv4.1 Fail data server I/O if stateid represents a lost lock\n  NFSv4: Fix the return value of nfs4_select_rw_stateid\n  NFSv4: nfs4_stateid_is_current should return 'true' for an invalid stateid\n  NFS: Fix a delegation callback race\n  NFSv4: Fix another nfs4_sequence corruptor Merge tag 'usb-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are 4 USB fixes for your current tree.\n\n  Two of them are reverts to hopefully resolve the nasty XHCI\n  regressions we have been having on some types of devices.  The other\n  two are quirks for some Logitech video devices\"\n\n* tag 'usb-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  Revert \"USBNET: ax88179_178a: enable tso if usb host supports sg dma\"\n  Revert \"xhci 1.0: Limit arbitrarily-aligned scatter gather.\"\n  usb: Make DELAY_INIT quirk wait 100ms between Get Configuration requests\n  usb: Add device quirk for Logitech HD Pro Webcams C920 and C930e Merge tag 'staging-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver tree fix from Greg KH:\n \"Here is a single staging driver fix for your tree.\n\n  It resolves an issue with arbritary writes to memory if a specific\n  driver is loaded\"\n\n* tag 'staging-3.15-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging/cxt1e1/linux.c: Correct arbitrary memory write in c4_ioctl() Merge branch 'for-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux\n\nPull thermal fixes from Zhang Rui:\n \"Specifics:\n\n   - Update the help text of INT3403 Thermal driver, which was not\n     friendly to users.  From Zhang Rui.\n\n   - The \"type\" sysfs attribute of x86_pkg_temp_thermal registered\n     thermal zones includes an instance number, which makes the\n     thermal-to-hwmon bridge fails to group them all in a single hwmon\n     device.  Fixed by Jean Delvare.\n\n   - The hwmon device registered by x86_pkg_temp_thermal driver is\n     redundant because the temperature value reported by\n     x86_pkg_temp_thermal is already reported by the coretemp driver.\n     Fixed by Jean Delvare.\n\n   - Fix a problem that the cooling device can not be updated properly\n     if it is initialized at max cooling state.  From Ni Wade.\n\n   - Fix a problem that OF registered thermal zones are running without\n     thermal governors.  From Zhang Rui.\n\n   - Commit beeb5a1e0ef7 (\"thermal: rcar-thermal: Enable driver\n     compilation with COMPILE_TEST\") broke build on archs wihout io\n     memory.  Thus make it depend on HAS_IOMEM to bypass build failures.\n     Fixed by Richard Weinberger\"\n\n* 'for-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux:\n  Thermal: thermal zone governor fix\n  Thermal: Allow first update of cooling device state\n  thermal,rcar_thermal: Add dependency on HAS_IOMEM\n  x86_pkg_temp_thermal: Fix the thermal zone type\n  x86_pkg_temp_thermal: Do not expose as a hwmon device\n  Thermal: update INT3404 thermal driver help text Merge tag 'spi-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fixes from Mark Brown:\n \"A scattering of driver specific fixes here.\n\n  The fixes from Axel cover bitrot in apparently unmaintained drivers,\n  the at79 bug is fixing a glitch on /CS during initialisation of some\n  devices which could break some slaves and the remainder are fixes for\n  recently introduced bugs from the past release cycle or so\"\n\n* tag 'spi-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi: atmel: add missing spi_master_{resume,suspend} calls to PM callbacks\n  spi: coldfire-qspi: Fix getting correct address for *mcfqspi\n  spi: fsl-dspi: Fix getting correct address for master\n  spi: spi-ath79: fix initial GPIO CS line setup\n  spi: spi-imx: spi_imx_remove: do not disable disabled clocks\n  spi-topcliff-pch: Fix probing when DMA mode is used\n  spi/topcliff-pch: Fix DMA channel Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target fixes from Nicholas Bellinger:\n \"This series addresses a number of outstanding issues wrt to active I/O\n  shutdown using iser-target.  This includes:\n\n   - Fix a long standing tpg_state bug where a tpg could be referenced\n     during explicit shutdown (v3.1+ stable)\n   - Use list_del_init for iscsi_cmd->i_conn_node so list_empty checks\n     work as expected (v3.10+ stable)\n   - Fix a isert_conn->state related hung task bug + ensure outstanding\n     I/O completes during session shutdown.  (v3.10+ stable)\n   - Fix isert_conn->post_send_buf_count accounting for RDMA READ/WRITEs\n     (v3.10+ stable)\n   - Ignore FRWR completions during active I/O shutdown (v3.12+ stable)\n   - Fix command leakage for interrupt coalescing during active I/O\n     shutdown (v3.13+ stable)\n\n  Also included is another DIF emulation fix from Sagi specific to\n  v3.14-rc code\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  Target/sbc: Fix sbc_copy_prot for offset scatters\n  iser-target: Fix command leak for tx_desc->comp_llnode_batch\n  iser-target: Ignore completions for FRWRs in isert_cq_tx_work\n  iser-target: Fix post_send_buf_count for RDMA READ/WRITE\n  iscsi/iser-target: Fix isert_conn->state hung shutdown issues\n  iscsi/iser-target: Use list_del_init for ->i_conn_node\n  iscsi-target: Fix iscsit_get_tpg_from_np tpg_state bug Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fixes from Tejun Heo:\n \"Two cpuset locking fixes from Li.  Both tagged for -stable\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cpuset: fix a race condition in __cpuset_node_allowed_softwall()\n  cpuset: fix a locking issue in cpuset_migrate_mm() Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Just a couple patches blacklisting more broken devices\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  libata: add ATA_HORKAGE_BROKEN_FPDMA_AA quirk for Seagate Momentus SpinPoint M8 (2BA30001)\n  libata: disable queued TRIM for Crucial M500 mSATA SSDs Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fix from Tejun Heo:\n \"This pull request contains a workqueue usage fix for firewire.\n\n  For quite a long time now, workqueue only treats two work items\n  identical iff both their addresses and callbacks match.  This is to\n  avoid introducing false dependency through the work item being\n  recycled while being executed.  This changes non-reentrancy guarantee\n  for the users of PREPARE[_DELAYED]_WORK() - if the function changes,\n  reentrancy isn't guaranteed against the previous instance.  Firewire\n  depended on such nonreentrancy guarantee.\n\n  This is fixed by doing the work item multiplexing from firewire proper\n  while keeping the work function unchanged\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  firewire: don't use PREPARE_DELAYED_WORK Merge tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394\n\nPull firewire fixes from Stefan Richter:\n \"Fix a use-after-free regression since v3.4 and an initialization\n  regression since v3.10\"\n\n* tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:\n  firewire: ohci: fix probe failure with Agere/LSI controllers\n  firewire: net: fix use after free Merge tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux\n\nPull clk driver fix from Mike Turquette:\n \"Single fix for a clock driver merged in 3.14-rc1.  Without this fix\n  the CPU frequency cannot be scaled\"\n\n* tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux:\n  clk: shmobile: rcar-gen2: Use kick bit to allow Z clock frequency change Merge tag 'pm+acpi-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n\n - ACPI tables in some BIOSes list device resources with size equal to\n   0, which doesn't make sense, so we should ignore them, but instead we\n   try to use them and mangle things completely.  Fix from Zhang Rui.\n\n - Several models of Samsung laptops accumulate EC events when they are\n   in sleep states which leads to EC buffer overflows that prevent new\n   events from being signaled after system resume or reboot.  This has\n   been affecting many users for quite a while and may be addressed by\n   clearing the EC buffer during system resume and system startup on\n   those machines.  From Kieran Clancy.\n\n - If the ACPI sleep control and status registers are not present (which\n   happens if the Hardware Reduced ACPI mode bit is set in the ACPI\n   tables, but also may result from BIOS bugs), we should not try to use\n   ACPI to power off the system and ACPI S5 should not be listed as\n   supported.  Fix from Aubrey Li.\n\n - There's a race condition in cpufreq_get() that leads to a kernel\n   crash if that function is called at a wrong time.  Fix from Aaron\n   Plattner.\n\n - cpufreq policy objects have to be initialized entirely before they\n   are first accessed by their users which isn't the case currently and\n   that potentially leads to various kinds of breakage that is difficult\n   to debug.  Fix from Viresh Kumar.\n\n - Locking is missing in __cpufreq_add_dev() which leads to a race\n   condition that may trigger a kernel crash.  Fix from Viresh Kumar.\n\n* tag 'pm+acpi-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / EC: Clear stale EC events on Samsung systems\n  cpufreq: Initialize governor for a new policy under policy->rwsem\n  cpufreq: Initialize policy before making it available for others to use\n  cpufreq: use cpufreq_cpu_get() to avoid cpufreq_get() race conditions\n  ACPI / sleep: pm_power_off needs more sanity checks to be installed\n  ACPI / resources: ignore invalid ACPI device resources x86: fix compile error due to X86_TRAP_NMI use in asm files\n\nIt's an enum, not a #define, you can't use it in asm files.\n\nIntroduced in commit 5fa10196bdb5 (\"x86: Ignore NMIs that come in during\nearly boot\"), and sadly I didn't compile-test things like I should have\nbefore pushing out.\n\nMy weak excuse is that the x86 tree generally doesn't introduce stupid\nthings like this (and the ARM pull afterwards doesn't cause me to do a\ncompile-test either, since I don't cross-compile).\n\nCc: Don Zickus <dzickus@redhat.com>\nCc: H. Peter Anvin <hpa@linux.intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"A number of ARM updates for -rc, covering mostly ARM specific code,\n  but with one change to modpost.c to allow Thumb section mismatches to\n  be detected.\n\n  ARM changes include reporting when an attempt is made to boot a LPAE\n  kernel on hardware which does not support LPAE, rather than just being\n  silent about it.\n\n  A number of other minor fixes are included too\"\n\n* 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  ARM: 7992/1: boot: compressed: ignore bswapsdi2.S\n  ARM: 7991/1: sa1100: fix compile problem on Collie\n  ARM: fix noMMU kallsyms symbol filtering\n  ARM: 7980/1: kernel: improve error message when LPAE config doesn't match CPU\n  ARM: 7964/1: Detect section mismatches in thumb relocations\n  ARM: 7963/1: mm: report both sections from PMD Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"A small collection of minor fixes.  The FPU stuff is still pending, I\n  fear.  I haven't heard anything from Suresh so I suspect I'm going to\n  have to dig into the init specifics myself and fix up the patchset\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: Ignore NMIs that come in during early boot\n  x86, trace: Further robustify CR2 handling vs tracing\n  x86, trace: Fix CR2 corruption when tracing page faults\n  x86/efi: Quirk out SGI UV Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull power fixes from Ben Herrenschmidt:\n \"Here are a couple of powerpc fixes for 3.14.\n\n  One is (another!) nasty TM problem, we can crash the kernel by forking\n  inside a transaction.  The other one is a simple fix for an alignment\n  issue which can hurt in LE mode\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc: Align p_dyn, p_rela and p_st symbols\n  powerpc/tm: Fix crash when forking inside a transaction Merge tag 'trace-fixes-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fix from Steven Rostedt:\n \"In the past, I've had lots of reports about trace events not working.\n  Developers would say they put a trace_printk() before and after the\n  trace event but when they enable it (and the trace event said it was\n  enabled) they would see the trace_printks but not the trace event.\n\n  I was not able to reproduce this, but that's because I wasn't looking\n  at the right location.  Recently, another bug came up that showed the\n  issue.\n\n  If your kernel supports signed modules but allows for non-signed\n  modules to be loaded, then when one is, the kernel will silently set\n  the MODULE_FORCED taint on the module.  Although, this taint happens\n  without the need for insmod --force or anything of the kind, it labels\n  the module with that taint anyway.\n\n  If this tainted module has tracepoints, the tracepoints will be\n  ignored because of the MODULE_FORCED taint.  But no error message will\n  be displayed.  Worse yet, the event infrastructure will still be\n  created letting users enable the trace event represented by the\n  tracepoint, although that event will never actually be enabled.  This\n  is because the tracepoint infrastructure allows for non-existing\n  tracepoints to be enabled for new modules to arrive and have their\n  tracepoints set.\n\n  Although there are several things wrong with the above, this change\n  only addresses the creation of the trace event files for tracepoints\n  that are not created when a module is loaded and is tainted.  This\n  change will print an error message about the module being tainted and\n  not the trace events will not be created, and it does not create the\n  trace event infrastructure\"\n\n* tag 'trace-fixes-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Do not add event files for modules that fail tracepoints Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n - a bugfix for a long standing waitqueue race\n - a trivial fix for a missing include\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Include missing header file in irqdomain.c\n  genirq: Remove racy waitqueue_active check Merge tag 'dm-3.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n\n - dm-cache memory allocation failure fix\n - fix DM's Kconfig identation\n - dm-snapshot metadata corruption fix for bug introduced in 3.14-rc1\n - important refcount < 0 fix for the DM persistent data library's space\n   map metadata interface which fixes corruption reported by a few\n   dm-thinp users\n\nand last but not least:\n\n - more extensive fixes than ideal for dm-thinp's data resize capability\n   (which has had growing pain much like we've seen from -ENOSPC\n   handling of filesystems that mature).\n\n   The end result is dm-thinp now handles metadata operation failure and\n   no data space error conditions much better than before.\n\n* tag 'dm-3.14-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm space map metadata: fix refcount decrement below 0 which caused corruption\n  dm thin: fix Documentation for held metadata root feature\n  dm thin: fix noflush suspend IO queueing\n  dm thin: fix deadlock in __requeue_bio_list\n  dm thin: fix out of data space handling\n  dm thin: ensure user takes action to validate data and metadata consistency\n  dm thin: synchronize the pool mode during suspend\n  dm snapshot: fix metadata corruption\n  dm: fix Kconfig indentation\n  dm cache mq: fix memory allocation failure for large cache devices Merge tag 'sound-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Just a few device-specific quirks for HD-audio and USB-audio, most of\n  which are one-liners\"\n\n* tag 'sound-3.14-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: usb-audio: Add quirk for Logitech Webcam C500\n  ALSA: hda - Use analog beep for Thinkpads with AD1984 codecs\n  ALSA: hda - Add missing loopback merge path for AD1884/1984 codecs\n  ALSA: hda - add automute fix for another dell AIO model\n  ALSA: hda - Added inverted digital-mic handling for Acer TravelMate 8371 Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Mostly intel and radeon fixes, one tda998x, one kconfig dep fix and\n  two more MAINTAINERS updates,\n\n  All pretty run of the mill for this stage\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon/atom: select the proper number of lanes in transmitter setup\n  MAINTAINERS: add maintainer entry for TDA998x driver\n  drm: fix bochs kconfig dependencies\n  drm/radeon/dpm: fix typo in EVERGREEN_SMC_FIRMWARE_HEADER_softRegisters\n  drm/radeon/cik: fix typo in documentation\n  drm/radeon: silence GCC warning on 32 bit\n  drm/radeon: resume old pm late\n  drm/radeon: TTM must be init with cpu-visible VRAM, v2\n  DRM: armada: fix use of kfifo_put()\n  drm/i915: Reject >165MHz modes w/ DVI monitors\n  drm/i915: fix assert_cursor on BDW\n  drm/i915: vlv: reserve GT power context early\n  drm/i915: fix pch pci device enumeration\n  drm/i915: Resolving the memory region conflict for Stolen area\n  drm/i915: use backlight legacy combination mode also for i915gm/i945gm\n  MAINTAINERS: update AGP tree to point at drm tree Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block fixes from Jens Axboe:\n \"Small collection of fixes for 3.14-rc. It contains:\n\n   - Three minor update to blk-mq from Christoph.\n\n   - Reduce number of unaligned (< 4kb) in-flight writes on mtip32xx to\n     two.  From Micron.\n\n   - Make the blk-mq CPU notify spinlock raw, since it can't be a\n     sleeper spinlock on RT.  From Mike Galbraith.\n\n   - Drop now bogus BUG_ON() for bio iteration with blk integrity.  From\n     Nic Bellinger.\n\n   - Properly propagate the SYNC flag on requests. From Shaohua\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block:\n  blk-mq: add REQ_SYNC early\n  rt,blk,mq: Make blk_mq_cpu_notify_lock a raw spinlock\n  bio-integrity: Drop bio_integrity_verify BUG_ON in post bip->bip_iter world\n  blk-mq: support partial I/O completions\n  blk-mq: merge blk_mq_insert_request and blk_mq_run_request\n  blk-mq: remove blk_mq_alloc_rq\n  mtip32xx: Reduce the number of unaligned writes to 2 Merge tag 'pinctrl-v3.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control fixes from Linus Walleij:\n \"This is a set of pin control fixes I have collected over the last few\n  days.  Some have rotated more than others in linux-next, but they were\n  rebased on v3.14-rc5 due to sloppy commit messages.  I am quite\n  convinced that they are all good fixes that only hit this or that\n  individual driver and not the entire subsystem.\n\n   - Fix chained interrupts, interrupt masking and register offset\n     calculation for the sunxi driver\n\n   - Make MSM a bool rather than a tristate to stop build problems to\n     happen - chained interrupt controllers cannot currently be defined\n     in modules\n\n   - Fix a clock in the PFC driver\n\n   - Fix a kernel panic in the sirf driver\"\n\n* tag 'pinctrl-v3.14-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: sirf: fix kernel panic in gpio_lock_as_irq\n  pinctrl: sh-pfc: r8a7791: SD1_CLK fix\n  pinctrl: msm: make PINCTRL_MSM bool instead of tristate\n  pinctrl: sunxi: Fix interrupt register offset calculation\n  pinctrl: sunxi: Fix masking when setting irq type\n  pinctrl: sunxi: use chained_irq_{enter, exit} for GIC compatibility Merge tag 'stable/for-linus-3.14-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen fix from Konrad Rzeszutek Wilk:\n \"This has exactly one patch for Xen ARM.  It sets the dependency to\n  compile the kernel with MMU enabled - otherwise - the guest won't work\n  very well\"\n\n* tag 'stable/for-linus-3.14-rc5-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  ARM: XEN depends on having a MMU Merge tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming\n\nPull c6x build fix from Mark Salter:\n \"Build fix for c6x\"\n\n* tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming:\n  c6x: fix build failure caused by cache.h Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) Fix memory leak in ieee80211_prep_connection(), sta_info leaked on\n    error.  From Eytan Lifshitz.\n\n 2) Unintentional switch case fallthrough in nft_reject_inet_eval(),\n    from Patrick McHardy.\n\n 3) Must check if payload lenth is a power of 2 in\n    nft_payload_select_ops(), from Nikolay Aleksandrov.\n\n 4) Fix mis-checksumming in xen-netfront driver, ip_hdr() is not in the\n    correct place when we invoke skb_checksum_setup().  From Wei Liu.\n\n 5) TUN driver should not advertise HW vlan offload features in\n    vlan_features.  Fix from Fernando Luis Vazquez Cao.\n\n 6) IPV6_VTI needs to select NET_IPV_TUNNEL to avoid build errors, fix\n    from Steffen Klassert.\n\n 7) Add missing locking in xfrm_migrade_state_find(), we must hold the\n    per-namespace xfrm_state_lock while traversing the lists.  Fix from\n    Steffen Klassert.\n\n 8) Missing locking in ath9k driver, access to tid->sched must be done\n    under ath_txq_lock().  Fix from Stanislaw Gruszka.\n\n 9) Fix two bugs in TCP fastopen.  First respect the size argument given\n    to tcp_sendmsg() in the fastopen path, and secondly prevent\n    tcp_send_syn_data() from potentially using order-5 allocations.\n    From Eric Dumazet.\n\n10) Fix handling of default neigh garbage collection params, from Jiri\n    Pirko.\n\n11) Fix cwnd bloat and over-inflation of RTT when transmit segmentation\n    is in use.  From Eric Dumazet.\n\n12) Missing initialization of Realtek r8169 driver's statistics\n    seqlocks.  Fix from Kyle McMartin.\n\n13) Fix RTNL assertion failures in 802.3ad and AB ARP monitor of bonding\n    driver, from Ding Tianhong.\n\n14) Bonding slave release race can cause divide by zero, fix from\n    Nikolay Aleksandrov.\n\n15) Overzealous return from neigh_periodic_work() causes reachability\n    time to not be computed.  Fix from Duain Jiong.\n\n16) Fix regression in ipv6_find_hdr(), it should not return -ENOENT when\n    a specific target is specified and found.  From Hans Schillstrom.\n\n17) Fix VLAN tag stripping regression in BNA driver, from Ivan Vecera.\n\n18) Tail loss probe can calculate bogus RTTs due to missing packet\n    marking on retransmit.  Fix from Yuchung Cheng.\n\n19) We cannot do skb_dst_drop() in iptunnel_pull_header() because\n    multicast loopback detection in later code paths need access to\n    skb_rtable().  Fix from Xin Long.\n\n20) The macvlan driver regresses in that it propagates lower device\n    offload support disables into itself, causing severe slowdowns when\n    running over a bridge.  Provide the software offloads always on\n    macvlan devices to deal with this and the regression is gone.  From\n    Vlad Yasevich.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (103 commits)\n  macvlan: Add support for 'always_on' offload features\n  net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable\n  ip_tunnel:multicast process cause panic due to skb->_skb_refdst NULL pointer\n  net: cpsw: fix cpdma rx descriptor leak on down interface\n  be2net: isolate TX workarounds not applicable to Skyhawk-R\n  be2net: Fix skb double free in be_xmit_wrokarounds() failure path\n  be2net: clear promiscuous bits in adapter->flags while disabling promiscuous mode\n  be2net: Fix to reset transparent vlan tagging\n  qlcnic: dcb: a couple off by one bugs\n  tcp: fix bogus RTT on special retransmission\n  hsr: off by one sanity check in hsr_register_frame_in()\n  can: remove CAN FD compatibility for CAN 2.0 sockets\n  can: flexcan: factor out soft reset into seperate funtion\n  can: flexcan: flexcan_remove(): add missing netif_napi_del()\n  can: flexcan: fix transition from and to freeze mode in chip_{,un}freeze\n  can: flexcan: factor out transceiver {en,dis}able into seperate functions\n  can: flexcan: fix transition from and to low power mode in chip_{en,dis}able\n  can: flexcan: flexcan_open(): fix error path if flexcan_chip_start() fails\n  can: flexcan: fix shutdown: first disable chip, then all interrupts\n  USB AX88179/178A: Support D-Link DUB-1312\n  ... Merge tag 'regulator-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"A couple of fixes here which ensure that regulators using the core\n  support for GPIO enables work in all cases by ensuring that helpers\n  are used consistently rather than open coding in places and hence not\n  having GPIO support in some of them\"\n\n* tag 'regulator-v3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: core: Replace direct ops->disable usage\n  regulator: core: Replace direct ops->enable usage Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge misc fixes from Andrew Morton.\n\n* emailed patches from Andrew Morton akpm@linux-foundation.org>:\n  mm: page_alloc: exempt GFP_THISNODE allocations from zone fairness\n  mm: numa: bugfix for LAST_CPUPID_NOT_IN_PAGE_FLAGS\n  MAINTAINERS: add and correct types of some \"T:\" entries\n  MAINTAINERS: use tab for separator\n  rapidio/tsi721: fix tasklet termination in dma channel release\n  hfsplus: fix remount issue\n  zram: avoid null access when fail to alloc meta\n  sh: prefix sh-specific \"CCR\" and \"CCR2\" by \"SH_\"\n  ocfs2: fix quota file corruption\n  drivers/rtc/rtc-s3c.c: fix incorrect way of save/restore of S3C2410_TICNT for TYPE_S3C64XX\n  kallsyms: fix absolute addresses for kASLR\n  scripts/gen_initramfs_list.sh: fix flags for initramfs LZ4 compression\n  mm: include VM_MIXEDMAP flag in the VM_SPECIAL list to avoid m(un)locking\n  memcg: reparent charges of children before processing parent\n  memcg: fix endless loop in __mem_cgroup_iter_next()\n  lib/radix-tree.c: swapoff tmpfs radix_tree: remember to rcu_read_unlock\n  dma debug: account for cachelines and read-only mappings in overlap tracking\n  mm: close PageTail race\n  MAINTAINERS: EDAC: add Mauro and Borislav as interim patch collectors Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Misc fixes, most of them SCHED_DEADLINE fallout\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/deadline: Prevent rt_time growth to infinity\n  sched/deadline: Switch CPU's presence test order\n  sched/deadline: Cleanup RT leftovers from {inc/dec}_dl_migration\n  sched: Fix double normalization of vruntime Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull liblockdep fixes from Ingo Molnar:\n \"A handful of build fixes for liblockdep\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  tools/liblockdep: Use realpath for srctree and objtree\n  tools/liblockdep: Add a stub for new rcu_is_watching\n  tools/liblockdep: Mark runtests.sh as executable\n  tools/liblockdep: Add include directory to allow tests to compile\n  tools/liblockdep: Fix include of asm/hash.h\n  tools/liblockdep: Fix initialization code path Merge tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux\n\nPull clk framework fixes from Mike Turquette:\n \"Clock framework and driver fixes, all of which fix user-visible\n  regressions.\n\n  There is a single framework fix that prevents dereferencing a NULL\n  pointer when calling clk_get.  The range of fixes for clock driver\n  regressions spans memory leak fixes, touching the wrong registers that\n  cause things to explode, misconfigured clock rates that result in\n  non-responsive devices and even some boot failures.  The most benign\n  fix is DT binding doc typo.  It is a stable ABI exposed from the\n  kernel that was introduced in -rc1, so best to fix it now\"\n\n* tag 'clk-fixes-for-linus' of git://git.linaro.org/people/mike.turquette/linux: (25 commits)\n  clk:at91: Fix memory leak in of_at91_clk_master_setup()\n  clk: nomadik: fix multiplatform problem\n  clk: Correct handling of NULL clk in __clk_{get, put}\n  clk: shmobile: Fix typo in MSTP clock DT bindings\n  clk: shmobile: rcar-gen2: Fix qspi divisor\n  clk: shmobile: rcar-gen2: Fix clock parent for all non-PLL clocks\n  clk: tegra124: remove gr2d and gr3d clocks\n  clk: tegra: Fix vic03 mux index\n  clk: shmobile: rcar-gen2: Fix qspi divisor\n  clk: shmobile: rcar-gen2: Fix clock parent all non-PLL clocks\n  clk: tegra: use max divider if divider overflows\n  clk: tegra: cclk_lp has a pllx/2 divider\n  clk: tegra: fix sdmmc clks on Tegra1x4\n  clk: tegra: fix host1x clock on Tegra124\n  clk: tegra: PLLD2 fixes for hdmi\n  clk: tegra: Fix PLLD mnp table\n  clk: tegra: Fix PLLP rate table\n  clk: tegra: Correct clock number for UARTE\n  clk: tegra: Add missing Tegra20 fuse clks\n  ARM: keystone: dts: fix clkvcp3 control register address\n  ... Linux 3.14-rc5 Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Not a huge amount happening, some MAINTAINERS updates, radeon, vmwgfx\n  and tegra fixes\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/vmwgfx: avoid null pointer dereference at failure paths\n  drm/vmwgfx: Make sure backing mobs are cleared when allocated. Update driver date.\n  drm/vmwgfx: Remove some unused surface formats\n  drm/radeon: enable speaker allocation setup on dce3.2\n  drm/radeon: change audio enable logic\n  drm/radeon: fix audio disable on dce6+\n  drm/radeon: free uvd ring on unload\n  drm/radeon: disable pll sharing for DP on DCE4.1\n  drm/radeon: fix missing bo reservation\n  drm/radeon: print the supported atpx function mask\n  MAINTAINERS: update drm git tree entry\n  MAINTAINERS: add entry for drm radeon driver\n  drm/tegra: Add guard to avoid double disable/enable of RGB outputs\n  gpu: host1x: do not check previously handled gathers\n  drm/tegra: fix typo 'CONFIG_TEGRA_DRM_FBDEV' Merge tag 'usb-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are 2 USB patches for 3.14-rc5, one a new device id, and the\n  other fixes a reported problem with threaded irqs and the USB EHCI\n  driver\"\n\n* tag 'usb-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  usb: ehci: fix deadlock when threadirqs option is used\n  USB: ftdi_sio: add Cressi Leonardo PID Merge tag 'driver-core-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull sysfs fix from Greg KH:\n \"Here is a single sysfs fix for 3.14-rc5.  It fixes a reported problem\n  with the namespace code in sysfs\"\n\n* tag 'driver-core-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  sysfs: fix namespace refcnt leak Merge tag 'staging-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging tree fixes from Greg KH:\n \"Here are a few IIO fixes, and a new device id for a staging driver for\n  3.14-rc5.  All have been in linux-next for a while, I did a final\n  merge to get the IIO fixes into this tree, they were incorrectly in\n  the char-misc tree for a few weeks, and I forgot to tell you to pull\n  them from there.  This makes it a single pull request for you\"\n\n* tag 'staging-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: r8188eu: Add new device ID\n  staging:iio:adc:MXS:LRADC: fix touchscreen statemachine\n  iio:gyro: bug on L3GD20H gyroscope support\n  iio: cm32181: Change cm32181 ambient light sensor driver\n  iio: cm36651: Fix read/write integration time function. Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Misc fixes, most of them on the tooling side\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf tools: Fix strict alias issue for find_first_bit\n  perf tools: fix BFD detection on opensuse\n  perf: Fix hotplug splat\n  perf/x86: Fix event scheduling\n  perf symbols: Destroy unused symsrcs\n  perf annotate: Check availability of annotate when processing samples Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"The VMCOREINFO patch I'll pushing for this release to avoid having a\n  release with kASLR and but without that information.\n\n  I was hoping to include the FPU patches from Suresh, but ran into a\n  problem (see other thread); will try to make them happen next week\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, kaslr: add missed \"static\" declarations\n  x86, kaslr: export offset in VMCOREINFO ELF notes Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target fixes from Nicholas Bellinger:\n \"The bulk of the series are bugfixes for qla2xxx target NPIV support\n  that went in for v3.14-rc1.  Also included are a few DIF related\n  fixes, a qla2xxx fix (Cc'ed to stable) from Greg W., and vhost/scsi\n  protocol version related fix from Venkatesh.\n\n  Also just a heads up that a series to address a number of issues with\n  iser-target active I/O reset/shutdown is still being tested, and will\n  be included in a separate -rc6 PULL request\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  vhost/scsi: Check LUN structure byte 0 is set to 1, per spec\n  qla2xxx: Fix kernel panic on selective retransmission request\n  Target/sbc: Don't use sg as iterator in sbc_verify_read\n  target: Add DIF sense codes in transport_generic_request_failure\n  target/sbc: Fix sbc_dif_copy_prot addr offset bug\n  tcm_qla2xxx: Fix NAA formatted name for NPIV WWPNs\n  tcm_qla2xxx: Perform configfs depend/undepend for base_tpg\n  tcm_qla2xxx: Add NPIV specific enable/disable attribute logic\n  qla2xxx: Check + fail when npiv_vports_inuse exists in shutdown\n  qla2xxx: Fix qlt_lport_register base_vha callback race Merge branch 'fixes' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull slave-dma fixes from Vinod Koul:\n \"This request brings you two small fixes.  First one for fixing\n  dereference of freed descriptor and second for fixing sdma bindings\n  for it to work for imx25.\n\n  I was planning to send this about 10days ago but then I had to proceed\n  on my paternity leave and didnt get chance to send this.  Now got a\n  bit of time from dady duties :)\"\n\n* 'fixes' of git://git.infradead.org/users/vkoul/slave-dma:\n  dma: sdma: Add imx25 compatible\n  dma: ste_dma40: don't dereference free:d descriptor Merge tag 'pm+acpi-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These three commits fix a recent intel_pstate regression and two old\n  bugs that should be fixed in -stable too, one in the ACPI processor\n  driver and one in the firmare loader.\n\n  Specifics:\n\n   - One of the recent intel_pstate driver fixes introduced a rounding\n     error that on some systems causes the frequency to be stuck at the\n     lowest level forever.  Fix from Dirk Brandewie.\n\n   - The firmware_class driver's PM notifier doesn't handle the\n     PM_RESTORE_PREPARE event during hibernation image restore and that\n     leads to a deadlock on umhelper_sem in __usermodehelper_disable().\n     Fix from Sebastian Capella.\n\n   - acpi_processor_set_throttling() abuses set_cpus_allowed_ptr() in a\n     nasty way which triggers the WARN_ON_ONCE() in wq_worker_waking_up()\n     among other things.  Fix from Lan Tianyu\"\n\n* tag 'pm+acpi-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / processor: Rework processor throttling with work_on_cpu()\n  PM / hibernate: Fix restore hang in freeze_processes()\n  intel_pstate: Change busy calculation to use fixed point math. Merge tag 'dm-3.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n \"A few dm-cache fixes, an invalid ioctl handling fix for dm multipath,\n  a couple immutable biovec fixups for dm mirror, and a few dm-thin\n  fixes.\n\n  There will likely be additional dm-thin metadata and data resize fixes\n  to include in 3.14-rc6 next week.\n\n  Note to stable-minded folks: Immutable biovecs were introduced in\n  3.14, so the related fixups for dm mirror are not needed in stable@\n  kernels\"\n\n* tag 'dm-3.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm cache: fix truncation bug when mapping I/O to >2TB fast device\n  dm thin: allow metadata space larger than supported to go unused\n  dm mpath: fix stalls when handling invalid ioctls\n  dm thin: fix the error path for the thin device constructor\n  dm raid1: fix immutable biovec related BUG when retrying read bio\n  dm io: fix I/O to multiple destinations\n  dm thin: avoid metadata commit if a pool's thin devices haven't changed\n  dm cache: do not add migration to completed list before unhooking bio\n  dm cache: move hook_info into common portion of per_bio_data structure Merge tag 'sound-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"It's a bad habit to get a higher volume of fixes often lately, but\n  things happen again.\n\n  All commits found here are real bug fixes, and are mostly trivial.\n  Most of changes in ASoC are the fixes for enum items due to the wrong\n  API usages, in addition to a few DAPM mutex deadlock and other fixes.\n  In HD-audio, only fixups for HP laptops.  Although diffstat shows\n  much, the changes are simple: there are just so many different device\n  entries there\"\n\n* tag 'sound-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ASoC: sta32x: Fix wrong enum for limiter2 release rate\n  ASoC: da732x: Mark DC offset control registers volatile\n  ALSA: hda/realtek - Add more entry for enable HP mute led\n  ALSA: hda - Add a fixup for HP Folio 13 mute LED\n  ASoC: wm8958-dsp: Fix firmware block loading\n  ASoC: sta32x: Fix cache sync\n  ALSA: hda/realtek - Add more entry for enable HP mute led\n  ASoC: dapm: Add locking to snd_soc_dapm_xxxx_pin functions\n  Input - arizona-haptics: Fix double lock of dapm_mutex\n  ASoC: wm8400: Fix the wrong number of enum items\n  ASoC: isabelle: Fix the wrong number of items in enum ctls\n  ASoC: ad1980: Fix wrong number of items for capture source\n  ASoC: wm8994: Fix the wrong number of enum items\n  ASoC: wm8900: Fix the wrong number of enum items\n  ASoC: wm8770: Fix wrong number of enum items\n  ASoC: sta32x: Fix array access overflow\n  ASoC: dapm: Correct regulator bypass error messages Merge tag 'edac_fixes_for_3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp\n\nPull EDAC fixes from Borislav Petkov:\n \"Two fixes below for PCI devices disappearing when a reference count\n  underflow happens after a couple of insmod/rmmod cycles in succession\"\n\n* tag 'edac_fixes_for_3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:\n  i7300_edac: Fix device reference count\n  i7core_edac: Fix PCI device reference count Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n \"Three x86 fixes and one for ARM/ARM64.\n\n  In particular, nested virtualization on Intel is broken in 3.13 and\n  fixed by this pull request\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  kvm, vmx: Really fix lazy FPU on nested guest\n  kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n  arm/arm64: KVM: detect CPU reset on CPU_PM_EXIT\n  KVM: MMU: drop read-only large sptes when creating lower level sptes Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull ARM64 fixes from Catalin Marinas:\n - !CONFIG_SMP build fix\n - pte bit testing macros conversion fix (int truncates top bits of\n   long)\n - stack unwinding PC calculation fix\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: Fix !CONFIG_SMP kernel build\n  arm64: mm: Add double logical invert to pte accessors\n  ARM64: unwind: Fix PC calculation Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc fixes from Ben Herrenschmidt:\n \"Here are a few more powerpc fixes for 3.14.\n\n  Most of these are also CC'ed to stable and fix bugs in new\n  functionality introduced in the last 2 or 3 versions\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc/powernv: Fix indirect XSCOM unmangling\n  powerpc/powernv: Fix opal_xscom_{read,write} prototype\n  powerpc/powernv: Refactor PHB diag-data dump\n  powerpc/powernv: Dump PHB diag-data immediately\n  powerpc: Increase stack redzone for 64-bit userspace to 512 bytes\n  powerpc/ftrace: bugfix for test_24bit_addr\n  powerpc/crashdump : Fix page frame number check in copy_oldmem_page\n  powerpc/le: Ensure that the 'stop-self' RTAS token is handled correctly Merge tag 'metag-fixes-v3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag\n\nPull Metag arch and asm-generic fixes from James Hogan:\n\n - Add the new sched_setattr/sched_getattr syscalls to the asm-generic\n   syscall list, which is used by arc, arm64, c6x, hexagon, metag,\n  openrisc, score, tile, and unicore32.\n\n - An IRQ affinity bug fix for metag to prevent interrupts being\n   vectored to offline CPUs when their affinity is changed via\n   /proc/irq/ (thanks tglx).\n\n* tag 'metag-fixes-v3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/metag:\n  irq-metag*: stop set_affinity vectoring to offline cpus\n  asm-generic: add sched_setattr/sched_getattr syscalls Merge tag 'pwm/for-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm\n\nPull pwm fix from Thierry Reding:\n \"Just a single trivial patch to plug a memory leak in an error path\"\n\n* tag 'pwm/for-3.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm:\n  pwm: lp3943: Fix potential memory leak during request Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull filesystem fixes from Jan Kara:\n \"Notification, writeback, udf, quota fixes\n\n  The notification patches are (with one exception) a fallout of my\n  fsnotify rework which went into -rc1 (I've extented LTP to cover these\n  cornercases to avoid similar breakage in future).\n\n  The UDF patch is a nasty data corruption Al has recently reported,\n  the revert of the writeback patch is due to possibility of violating\n  sync(2) guarantees, and a quota bug can lead to corruption of quota\n  files in ocfs2\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  fsnotify: Allocate overflow events with proper type\n  fanotify: Handle overflow in case of permission events\n  fsnotify: Fix detection whether overflow event is queued\n  Revert \"writeback: do not sync data dirtied after sync start\"\n  quota: Fix race between dqput() and dquot_scan_active()\n  udf: Fix data corruption on file type conversion\n  inotify: Fix reporting of cookies for inotify events Merge tag 'upstream-3.14-rc5' of git://git.infradead.org/linux-ubifs\n\nPull ubifs fix from Artem Bityutskiy:\n \"Just a single fix for the UBI module unload path which makes sure we\n  do not touch freed memory\"\n\n* tag 'upstream-3.14-rc5' of git://git.infradead.org/linux-ubifs:\n  UBI: fix some use after free bugs Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge misc fixes from Andrew Morton.\n\n* emailed patches from Andrew Morton akpm@linux-foundation.org>:\n  MAINTAINERS: change mailing list address for Altera UART drivers\n  Makefile: fix build with make 3.80 again\n  MAINTAINERS: update L: misuses\n  Makefile: fix extra parenthesis typo when CC_STACKPROTECTOR_REGULAR is enabled\n  ipc,mqueue: remove limits for the amount of system-wide queues\n  memcg: change oom_info_lock to mutex\n  mm, thp: fix infinite loop on memcg OOM\n  drivers/fmc/fmc-write-eeprom.c: fix decimal permissions\n  drivers/iommu/omap-iommu-debug.c: fix decimal permissions\n  mm, hwpoison: release page on PageHWPoison() in __do_fault() Merge tag 'dmaengine-fixes-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/dmaengine\n\nPull dmaengine fixes from Dan Williams:\n \"Fix tasklet lifetime management in the ioat driver causing ksoftirqd\n  to spin indefinitely.\n\n    References:\n    https://lkml.org/lkml/2014/1/27/282\n    https://lkml.org/lkml/2014/2/19/672\"\n\n* tag 'dmaengine-fixes-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/dmaengine:\n  ioat: fix tasklet tear down Merge tag 'for-linus-20140225' of git://git.infradead.org/linux-mtd\n\nPull MTD fixes from Brian Norris:\n \"Two main MTD fixes:\n\n  1. Read retry counting was off by one, so if we had a true ECC error\n     (i.e., no retry voltage threshold would give a clean read), we\n     would end up returning -EINVAL on the Nth mode instead of -EBADMSG\n     after then (N-1)th mode\n\n  2. The OMAP NAND driver had some of its ECC layouts wrong when\n     introduced in 3.13, causing incompatibilities between the\n     bootloader on-flash layout and the layout expected in Linux.  The\n     expected layouts are now documented in the commit messages, and we\n     plan to add this under Documentation/mtd/nand/ eventually\"\n\n* tag 'for-linus-20140225' of git://git.infradead.org/linux-mtd:\n  mtd: nand: omap: fix ecclayout->oobfree->length\n  mtd: nand: omap: fix ecclayout->oobfree->offset\n  mtd: nand: omap: fix ecclayout to be in sync with u-boot NAND driver\n  mtd: nand: fix off-by-one read retry mode counting Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k\n\nPull m68k update from Geert Uytterhoeven:\n  - More barrier.h consolidation\n  - Sched_[gs]etattr() syscalls\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k:\n  m68k: Wire up sched_setattr and sched_getattr\n  m68k: Switch to asm-generic/barrier.h\n  m68k: Sort arch/m68k/include/asm/Kbuild Merge tag 'xtensa-next-20140224' of git://github.com/czankel/xtensa-linux\n\nPull tensa fixes from Chris Zankel:\n \"This series includes fixes for potentially serious bugs in the\n  routines spilling processor registers to stack, as well as other\n  issues and compiler errors and warnings.\n\n   - allow booting xtfpga on boards with new uBoot and >128MBytes memory\n   - drop nonexistent GPIO32 support from fsf variant\n   - don't select USE_GENERIC_SMP_HELPERS\n   - enable common clock framework support, set up ethoc clock on xtfpga\n   - wire up sched_setattr and sched_getattr syscalls.\n   - fix system call to spill the processor registers to stack.\n   - improve kernel macro to spill the processor registers\n   - export ccount_freq symbol\n   - fix undefined symbol warning\"\n\n* tag 'xtensa-next-20140224' of git://github.com/czankel/xtensa-linux:\n  xtensa: wire up sched_setattr and sched_getattr syscalls\n  xtensa: xtfpga: set ethoc clock frequency\n  xtensa: xtfpga: use common clock framework\n  xtensa: support common clock framework\n  xtensa: no need to select USE_GENERIC_SMP_HELPERS\n  xtensa: fsf: drop nonexistent GPIO32 support\n  xtensa: don't pass high memory to bootmem allocator\n  xtensa: fix fast_syscall_spill_registers\n  xtensa: fix fast_syscall_spill_registers\n  xtensa: save current register frame in fast_syscall_spill_registers_fixup\n  xtensa: introduce spill_registers_kernel macro\n  xtensa: export ccount_freq\n  xtensa: fix warning '\"CONFIG_OF\" is not defined' Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull SELinux endianness fix from James Morris.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  SELinux: bigendian problems with filename trans rules Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 bug fixes from Martin Schwidefsky:\n \"A couple of s390 bug fixes.  The PCI segment boundary issue is a nasty\n  one as it can lead to data corruption\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/cio: Fix missing subchannels after CHPID configure on\n  s390/pci/dma: use correct segment boundary size\n  s390/compat: fix sys_sched_getattr compat wrapper\n  s390/zcrypt: additional check to avoid overflow in msg-type 6 requests Linux 3.14-rc4 Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"A collection of fixes for ARM platforms.  Most are fixes for DTS\n  files, mostly from DT conversion on OMAP which is still finding a few\n  issues here and there.\n\n  There's a couple of small stale code removal patches that we usually\n  queue for the next release instead, but they seemed harmless enough to\n  bring in now.\n\n  Also, a fix for backlight on some PXA platforms, and a cache\n  configuration fix for Tegra, etc\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (25 commits)\n  MAINTAINERS: add additional ARM BCM281xx/BCM11xxx maintainer\n  ARM: tegra: only run PL310 init on systems with one\n  ARM: tegra: Add head numbers to display controllers\n  ARM: imx6: build pm-imx6q.c independently of CONFIG_PM\n  ARM: tegra: fix RTC0 alias for Cardhu\n  ARM: dove: dt: revert PMU interrupt controller node\n  Documentation: dt: OMAP: Update Overo/Tobi\n  ARM: dts: Add support for both OMAP35xx and OMAP36xx Overo/Tobi\n  ARM: dts: omap3-tobi: Use the correct vendor prefix\n  ARM: dts: omap3-tobi: Fix boot with OMAP36xx-based Overo\n  ARM: OMAP2+: Remove legacy macros for zoom platforms\n  ARM: OMAP2+: Remove MACH_NOKIA_N800\n  ARM: dts: N900: add missing compatible property\n  ARM: dts: N9/N950: fix boot hang with 3.14-rc1\n  ARM: OMAP1: nokia770: enable tahvo-usb\n  ARM: OMAP2+: gpmc: fix: DT ONENAND child nodes not probed when MTD_ONENAND is built as module\n  ARM: OMAP2+: gpmc: fix: DT NAND child nodes not probed when MTD_NAND is built as module\n  ARM: dts: omap3-gta04: Fix mmc1 properties.\n  ARM: dts: omap3-gta04: Fix 'aux' gpio key flags.\n  ARM: OMAP2+: add missing ARCH_HAS_OPP\n  ... Merge tag 'regulator-v3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"Mostly unexciting driver fixes, plus one fix to lower the severity of\n  the log message when we don't use an optional regulator - the fixes\n  for ACPI system made this come up more often and it was correctly\n  observed that it was causing undue concern for users\"\n\n* tag 'regulator-v3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: max14577: Fix invalid return value on DT parse success\n  regulator: core: Change dummy supplies error message to a warning\n  regulator: s5m8767: Add missing of_node_put\n  regulator: s5m8767: Use of_get_child_by_name\n  regulator: da9063: Bug fix when setting max voltage on LDOs 5-11 Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fix from Thomas Gleixner:\n \"Serialize the registration of a new sched_clock in the currently ARM\n  only generic sched_clock facilty to avoid sched_clock havoc\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched_clock: Prevent callers from seeing half-updated data Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n\n - a bugfix which prevents a divide by 0 panic when the newly introduced\n   try_msr_calibrate_tsc() fails\n\n - enablement of the Baytrail platform to utilize the newfangled msr\n   based calibration\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86: tsc: Add missing Baytrail frequency to the table\n  x86, tsc: Fallback to normal calibration if fast MSR calibration fails Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"Another four fixlets to tame the ARM orion irq chip\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqchip: orion: Fix getting generic chip pointer.\n  irqchip: orion: clear stale interrupts in irq_startup\n  irqchip: orion: use handle_edge_irq on bridge irqs\n  irqchip: orion: clear bridge cause register on init Merge tag 'usb-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a number of USB fixes for reported issues for 3.14-rc4\n\n  The majority of these are for USB gadget, phy, and musb driver issues.\n  And there's a few new device ids thrown in for good measure\"\n\n* tag 'usb-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  usb: chipidea: need to mask when writting endptflush and endptprime\n  usb: musb: correct use of schedule_delayed_work()\n  usb: phy: msm: fix compilation errors when !CONFIG_PM_SLEEP\n  usb: gadget: fix NULL pointer dereference\n  usb: gadget: printer: using gadget_is_otg to check otg support at runtime\n  phy: let phy_provider_register be the last step in registering PHY\n  phy-core: Don't allow building phy-core as a module\n  phy-core: Don't propagate -ENOSUPP from phy_pm_runtime_get_sync to caller\n  phy-core: phy_get: Leave error logging to the caller\n  phy,phy-bcm-kona-usb2.c: Add dependency on HAS_IOMEM\n  usb: musb: correct use of schedule_delayed_work()\n  usb: musb: do not sleep in atomic context\n  USB: serial: option: blacklist interface 4 for Cinterion PHS8 and PXS8\n  USB: EHCI: add delay during suspend to prevent erroneous wakeups\n  usb: gadget: bcm63xx_udc: fix build failure on DMA channel code\n  usb: musb: do not sleep in atomic context\n  usb: gadget: s3c2410_udc: Fix build error\n  usb: musb: core: Fix remote-wakeup resume\n  usb: musb: host: Fix SuperSpeed hub enumeration\n  usb: musb: fix obex in g_nokia.ko causing kernel panic Merge tag 'tty-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull TTY revert from Greg KH:\n \"Here is a single commit, a revert of a sysfs file change that ended up\n  breaking a userspace tool\"\n\n* tag 'tty-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  Revert \"tty: Set correct tty name in 'active' sysfs attribute\" Merge tag 'staging-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging tree fix from Greg KH:\n \"Here is a single android driver fix for 3.14-rc4 that fixes a reported\n  problem in the binder driver\"\n\n* tag 'staging-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: binder: Fix death notifications Merge tag 'char-misc-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc fix from Greg KH:\n \"Here is a single commit, to fix a reported problem in the mei driver\"\n\n* tag 'char-misc-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  mei: set client's read_cb to NULL when flow control fails Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Misc fixlets: a fair number of them resulting from the new\n  SCHED_DEADLINE code\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/deadline: Remove useless dl_nr_total\n  sched/deadline: Test for CPU's presence explicitly\n  sched: Add 'flags' argument to sched_{set,get}attr() syscalls\n  sched: Fix information leak in sys_sched_getattr()\n  sched,numa: add cond_resched to task_numa_work\n  sched/core: Make dl_b->lock IRQ safe\n  sched/core: Fix sched_rt_global_validate\n  sched/deadline: Fix overflow to handle period==0 and deadline!=0\n  sched/deadline: Fix bad accounting of nr_running Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Misc fixlets from all around the place\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/uncore: Fix IVT/SNB-EP uncore CBOX NID filter table\n  perf/x86: Correctly use FEATURE_PDCM\n  perf, nmi: Fix unknown NMI warning\n  perf trace: Fix ioctl 'request' beautifier build problems on !(i386 || x86_64) arches\n  perf trace: Add fallback definition of EFD_SEMAPHORE\n  perf list: Fix checking for supported events on older kernels\n  perf tools: Handle PERF_RECORD_HEADER_EVENT_TYPE properly\n  perf probe: Do not add offset twice to uprobe address\n  perf/x86: Fix Userspace RDPMC switch\n  perf/x86/intel/p6: Add userspace RDPMC quirk for PPro Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fix from Guenter Roeck:\n \"Fix writing the minimum temperature in max1668 driver\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (max1668) Fix writing the minimum temperature Merge branch 'xfs-fixes-for-3.14-rc4' of git://oss.sgi.com/xfs/xfs\n\nPull xfs fixes from Dave Chinner:\n \"This is the first pull request I've had to do for you, so I'm still\n  sorting things out.  The reason I'm sending this and not Ben should be\n  obvious from the first commit below - SGI has stepped down from the\n  XFS maintainership role.  As such, I'd like to take another\n  opportunity to thank them for their many years of effort maintaining\n  XFS and supporting the XFS community that they developed from the\n  ground up.\n\n  So I haven't had time to work things like signed tags into my\n  workflows yet, so this is just a repo branch I'm asking you to pull\n  from.  And yes, I named the branch -rc4 because I wanted the fixes in\n  rc4, not because the branch was for merging into -rc3.  Probably not\n  right, either.\n\n  Anyway, I should have everything sorted out by the time the next merge\n  window comes around.  If there's anything that you don't like in the\n  pull req, feel free to flame me unmercifully.\n\n  The changes are fixes for recent regressions and important thinkos in\n  verification code:\n\n        - a log vector buffer alignment issue on ia32\n        - timestamps on truncate got mangled\n        - primary superblock CRC validation fixes and error message\n          sanitisation\"\n\n* 'xfs-fixes-for-3.14-rc4' of git://oss.sgi.com/xfs/xfs:\n  xfs: limit superblock corruption errors to actual corruption\n  xfs: skip verification on initial \"guess\" superblock read\n  MAINTAINERS: SGI no longer maintaining XFS\n  xfs: xfs_sb_read_verify() doesn't flag bad crcs on primary sb\n  xfs: ensure correct log item buffer alignment\n  xfs: ensure correct timestamp updates from truncate Merge tag 'dt-for-linus' of git://git.secretlab.ca/git/linux\n\nPull devicetree fixes from Grant Likely:\n \"Device tree compatible match order bug fix\n\n  This branch contains a bug fix for the way devicetree code identifies\n  the type of device.  Device drivers can contain a list of\n  of_device_ids, but it more than one entry will match, then the device\n  driver may choose the wrong one.  Commit 105353145e, \"match each node\n  compatible against all given matches first\", was queued for v3.14 but\n  ended up causing other bugs.  Commit 06b29e76a7 attempted to fix it\n  but it had other bugs.  Merely reverting the fix and waiting until\n  v3.15 isn't a good option because there is code in v3.14 that depends\n  on the revised behaviour to boot.\n\n  This branch should finally fixes the problem correctly.  This time\n  instead of just hoping that the patch is correct, this branch also\n  adds new testcases that validate the behaviour.\n\n  The changes in this branch are larger than I would like for a -rc\n  pull, but moving the test case data out of out of arch/arm so that it\n  could be validated on other architectures was important\"\n\n* tag 'dt-for-linus' of git://git.secretlab.ca/git/linux:\n  of: Add self test for of_match_node()\n  of: Move testcase FDT data into drivers/of\n  of: reimplement the matching method for __of_match_node()\n  Revert \"of: search the best compatible match first in __of_match_node()\" Merge git://www.linux-watchdog.org/linux-watchdog\n\nPull watchdog fix from Wim Van Sebroeck:\n \"It corrects the error code when no device was found for w83697hf_wdt\"\n\n* git://www.linux-watchdog.org/linux-watchdog:\n  watchdog: w83697hf_wdt: return ENODEV if no device was found Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n \"Three minor fixes from David Howells and Paul Gortmaker\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  Sparc: sparc_cpu_model isn't in asm/system.h any more [ver #2]\n  sparc32: make copy_to/from_user_page() usable from modular code\n  sparc32: fix build failure for arch_jump_label_transform Merge tag 'pm+acpi-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These include two fixes for recent regressions related to ACPI, a\n  cpufreq fix for breakage overlooked by a previous fix commit, two\n  intel_pstate fixes for stuff added during the 3.13 cycle that need to\n  go into -stable, three fixes for older bugs that also are -stable\n  candidates, ACPI video blacklist changes related to BIOSes that behave\n  in a special way on Windows 8, several build fixes for CONFIG_PM_SLEEP\n  unset in ACPI drivers and an ACPI driver cleanup.\n\n  Specifics:\n\n   - Fix for a recent probing regression in the nouveau driver\n     introduced by an ACPI change related to the handling of _DSM from\n     Jiang Liu.\n\n   - Fix for a dock station sysfs attribute that stopped working\n     correctly after recent changes in the ACPI core.\n\n   - cpufreq fix taking care of broken code related to CPU removal and\n     overlooked by a previous recent fix in that area.  From Viresh\n     Kumar.\n\n   - Two intel_pstate fixes related to Baytrail support added during the\n     3.13 cycle (candidates for -stable) from Dirk Brandewie.\n\n   - ACPI video fix removing duplicate brightness values from the _BCL\n     table which makes its user space interface behave sanely.  From\n     Hans de Goede.\n\n   - Fix for the powernow-k8 cpufreq driver making it initialize its\n     per-CPU data structures correctly from Srivatsa S Bhat.\n\n   - Fix for an obscure memory leak in the ACPI PCI interrupt allocation\n     code (related to ISA) from Tomasz Nowicki.\n\n   - ACPI video blacklist changes moving several systems that should use\n     the native backlight interface instead of the ACPI one from the\n     general ACPI _OSI blacklist the the ACPI video driver's blacklist\n     where they belong.  This consists of an ACPI video driver update\n     from Aaron Lu and a revert of a previous commit adding systems to\n     the ACPI _OSI blacklist requested by Takashi Iwai.\n\n   - Several fixes for build issues in ACPI drivers occuring when\n     CONFIG_PM_SLEEP is unset from Shuah Khan.\n\n   - Fix for an sscanf() format string in the ACPI Smart Battery\n     Subsystem (SBS) driver from Luis G.F\"\n\n* tag 'pm+acpi-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  intel_pstate: Add support for Baytrail turbo P states\n  intel_pstate: Use LFM bus ratio as min ratio/P state\n  ACPI / nouveau: fix probing regression related to _DSM\n  Revert \"ACPI: Blacklist Win8 OSI for some HP laptop 2013 models\"\n  ACPI / video: Add systems that should favour native backlight interface\n  ACPI / video: Filter the _BCL table for duplicate brightness values\n  cpufreq: powernow-k8: Initialize per-cpu data-structures properly\n  cpufreq: remove sysfs link when a cpu != policy->cpu, is removed\n  ACPI / PCI: Fix memory leak in acpi_pci_irq_enable()\n  ACPI / dock: Make 'docked' sysfs attribute work as documented\n  ACPI / SBS: Fix incorrect sscanf() string\n  ACPI / thermal: fix thermal driver compile error when CONFIG_PM_SLEEP is undefined\n  ACPI / SBS: fix SBS driver compile error when CONFIG_PM_SLEEP is undefined\n  ACPI / fan: fix fan driver compile error when CONFIG_PM_SLEEP is undefined\n  ACPI / button: fix button driver compile error when CONFIG_PM_SLEEP is undefined\n  ACPI / battery: fix battery driver compile error when CONFIG_PM_SLEEP is undefined\n  ACPI / AC: fix AC driver compile error when CONFIG_PM_SLEEP is undefined Merge tag 'iommu-fixes-v3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU fixes from Joerg Roedel:\n \"The fixes are only for the ARM-SMMU driver.  Here is the summary from\n  Will Deacon:\n\n   - Andreas Herrmann took the driver for a run with a real SATA\n     controller, which caused the new mutex-based locking to explode\n     since we require mappings in atomic context\n\n   - Yifan fixed an issue with the page table creation, which then\n     caused breakages with the way in which we flush descriptors out to\n     the table walker\n\n   - I ran the driver on a system where the SMMU is hooked into a\n     coherent interconnect for table walks, and noticed a shareability\n     mismatch between the CPU and the SMMU\n\n  These issues are all fixed here and have been tested on both arm and\n  arm64 based systems.\n\n  Besides that I put a fix on-top to make the spinlock irq-safe, so that\n  the code-paths can be used in the DMA-API\"\n\n* tag 'iommu-fixes-v3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu:\n  arm/smmu: Use irqsafe spinlock for domain lock\n  iommu/arm-smmu: fix compilation issue when !CONFIG_ARM_AMBA\n  iommu/arm-smmu: set CBARn.BPSHCFG to NSH for s1-s2-bypass contexts\n  iommu/arm-smmu: fix table flushing during initial allocations\n  iommu/arm-smmu: really fix page table locking\n  iommu/arm-smmu: fix pud/pmd entry fill sequence Merge tag 'sound-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"This time we got a slightly higher volume than previous times, but all\n  device-specific good fixes.  Noticeable changes are fixes in davinci,\n  and the removal of open-codes in HD-audio ca0132 driver.  The rest are\n  all small fixes and/or quirks\"\n\n* tag 'sound-3.14-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Enable front audio jacks on one HP desktop model\n  ALSA: hda/ca0132 - Fix recording from mode id 0x8\n  ALSA: hda/ca0132 - setup/cleanup streams\n  ALSA: hda - add headset mic detect quirks for two Dell laptops\n  ALSA: usb-audio: work around KEF X300A firmware bug\n  ASoC: max98090: make REVISION_ID readable\n  ASoC: txx9aclc_ac97: Fix kernel crash on probe\n  ASoC: max98090: sync regcache on entering STANDBY\n  ASoC: blackfin: Fix machine driver Kconfig dependencies\n  ASoC: da9055: Fix device registration of PMIC and CODEC devices\n  ASoC: fsl-esai: fix ESAI TDM slot setting\n  ASoC: fsl: fix pm support of machine drivers\n  ASoC: rt5640: Add ACPI ID for Intel Baytrail\n  ASoC: davinci-evm: Add pm callbacks to platform driver\n  ASoC: davinci-mcasp: Consolidate pm_runtime_get/put() use in the driver\n  ASoC: davinci-mcasp: Configure xxTDM, xxFMT and xxFMCT registers synchronously\n  ASoC: davinci-mcasp: Harmonize the sub hw_params function names\n  ASoC: samsung: Fix trivial typo\n  ASoC: samsung: Remove invalid dependencies\n  ASoC: wm8993: drop regulator_bulk_free of devm_ allocated data Merge tag 'pci-v3.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI updates from Bjorn Helgaas:\n \"The most interesting thing here is the change to enable INTx (by\n  clearing PCI_COMMAND_INTX_DISABLE) if the BIOS left INTx disabled.\n  Apparently the Baytrail BIOS does this, which means EHCI doesn't work.\n\n  Also, fix an AHCI MSI regression and other issues with the recent MSI\n  changes.  This also adds pci_enable_msi_exact() and\n  pci_enable_msix_exact(), which aren't regression fixes, but will keep\n  us from touching drivers twice (once to stop using the deprecated\n  pci_enable_msi(), etc., and again to use the *_exact() variants).\n\n  There's also a minor MVEBU fix.\n\n  Summary:\n\n  MSI:\n    - Fix AHCI single-MSI fallback (Alexander Gordeev)\n    - Fix populate_msi_sysfs() error paths (Greg Kroah-Hartman)\n    - Fix htmldocs problem (Masanari Iida)\n    - Add pci_enable_msi_exact() and pci_enable_msix_exact() (Alexander Gordeev)\n    - Update documentation (Alexander Gordeev)\n\n  Miscellaneous:\n    - mvebu: expose device ID & revision via lspci (Andrew Lunn)\n    - Enable INTx if the BIOS left them disabled (Bjorn Helgaas)\"\n\n* tag 'pci-v3.14-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  ahci: Fix broken fallback to single MSI mode\n  PCI: Enable INTx if BIOS left them disabled\n  PCI/MSI: Add pci_enable_msi_exact() and pci_enable_msix_exact()\n  PCI/MSI: Fix cut-and-paste errors in documentation\n  PCI/MSI: Add pci_enable_msi() documentation back\n  PCI/MSI: Fix pci_msix_vec_count() htmldocs failure\n  PCI/MSI: Fix leak of msi_attrs\n  PCI/MSI: Check kmalloc() return value, fix leak of name\n  PCI: mvebu: Use Device ID and revision from underlying endpoint Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata\n\nPull libata fixes from Tejun Heo:\n \"Various device specific fixes.  Nothing too interesting\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata:\n  ahci: disable NCQ on Samsung pci-e SSDs on macbooks\n  ata: sata_mv: Cleanup only the initialized ports\n  sata_sil: apply MOD15WRITE quirk to TOSHIBA MK2561GSYN\n  ata: enable quirk from jmicron JMB350 for JMB394\n  ATA: SATA_MV: Add missing Kconfig select statememnt\n  ata: pata_imx: Check the return value from clk_prepare_enable() Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fixes from Tejun Heo:\n \"Quite a few fixes this time.\n\n  Three locking fixes, all marked for -stable.  A couple error path\n  fixes and some misc fixes.  Hugh found a bug in memcg offlining\n  sequence and we thought we could fix that from cgroup core side but\n  that turned out to be insufficient and got reverted.  A different fix\n  has been applied to -mm\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup: update cgroup_enable_task_cg_lists() to grab siglock\n  Revert \"cgroup: use an ordered workqueue for cgroup destruction\"\n  cgroup: protect modifications to cgroup_idr with cgroup_mutex\n  cgroup: fix locking in cgroup_cfts_commit()\n  cgroup: fix error return from cgroup_create()\n  cgroup: fix error return value in cgroup_mount()\n  cgroup: use an ordered workqueue for cgroup destruction\n  nfs: include xattr.h from fs/nfs/nfs3proc.c\n  cpuset: update MAINTAINERS entry\n  arm, pm, vmpressure: add missing slab.h includes Merge branch 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fixes from Tejun Heo:\n \"Two workqueue fixes.  One for an unlikely but possible critical bug\n  during kworker shutdown and the other to make lockdep names a bit more\n  descriptive\"\n\n* 'for-3.14-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: ensure @task is valid across kthread_stop()\n  workqueue: add args to workqueue lockdep name Merge branch 'fixes-for-v3.14' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping\n\nPull DMA-mapping fixes from Marek Szyprowski:\n \"This contains fixes for incorrect atomic test in dma-mapping subsystem\n  for ARM and x86 architecture\"\n\n* 'fixes-for-v3.14' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping:\n  x86: dma-mapping: fix GFP_ATOMIC macro usage\n  ARM: dma-mapping: fix GFP_ATOMIC macro usage Merge tag 'nfs-for-3.14-4' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client bugfixes from Trond Myklebust:\n \"Highlights include stable fixes for the following bugs:\n\n   - General performance regression due to NFS_INO_INVALID_LABEL being\n     set when the server doesn't support labeled NFS\n   - Hang in the RPC code due to a socket out-of-buffer race\n   - Infinite loop when trying to establish the NFSv4 lease\n   - Use-after-free bug in the RPCSEC gss code.\n   - nfs4_select_rw_stateid is returning with a non-zero error value on\n     success\n\n  Other bug fixes:\n\n  - Potential memory scribble in the RPC bi-directional RPC code\n  - Pipe version reference leak\n  - Use the correct net namespace in the new NFSv4 migration code\"\n\n* tag 'nfs-for-3.14-4' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  NFS fix error return in nfs4_select_rw_stateid\n  NFSv4: Use the correct net namespace in nfs4_update_server\n  SUNRPC: Fix a pipe_version reference leak\n  SUNRPC: Ensure that gss_auth isn't freed before its upcall messages\n  SUNRPC: Fix potential memory scribble in xprt_free_bc_request()\n  SUNRPC: Fix races in xs_nospace()\n  SUNRPC: Don't create a gss auth cache unless rpc.gssd is running\n  NFS: Do not set NFS_INO_INVALID_LABEL unless server supports labeled NFS Merge tag 'mfd-fixes-3.14-1' of git://git.linaro.org/people/lee.jones/mfd\n\nPull MFD fixes from Lee Jones:\n \"Couple of small issues solved:\n   - Suspend/Resume call-backs require CONFIG_PM_SLEEP\n   - Some drivers written for 32bit architectures fail when compiled\n     with a 64bit compiler.  The fixes will future proof the drivers\"\n\n* tag 'mfd-fixes-3.14-1' of git://git.linaro.org/people/lee.jones/mfd:\n  mfd: sec-core: sec_pmic_{suspend,resume}() should depend on CONFIG_PM_SLEEP\n  mfd: max14577: max14577_{suspend,resume}() should depend on CONFIG_PM_SLEEP\n  mfd: tps65217: Naturalise cross-architecture discrepancies\n  mfd: wm8994-core: Naturalise cross-architecture discrepancies\n  mfd: max8998: Naturalise cross-architecture discrepancies\n  mfd: max8997: Naturalise cross-architecture discrepancies Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Lots of little small things, nothing too major: nouveau regression\n  fixes, vmware fixes for the new hw support, memory leaks in error path\n  fixes\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: (31 commits)\n  drm/radeon/ni: fix typo in dpm sq ramping setup\n  drm/radeon/si: fix typo in dpm sq ramping setup\n  drm/radeon: fix CP semaphores on CIK\n  drm/radeon: delete a stray tab\n  drm/radeon: fix display tiling setup on SI\n  drm/radeon/dpm: reduce r7xx vblank mclk threshold to 200\n  drm/radeon: fill in DRM_CAPs for cursor size\n  drm: add DRM_CAPs for cursor size\n  drm/radeon: unify bpc handling\n  drm/ttm: Fix memory leak in ttm_agp_backend.c\n  drm/ttm: declare 'struct device' in ttm_page_alloc.h\n  drm/nouveau: fix TTM_PL_TT memtype on pre-nv50\n  drm/nv50/disp: use correct register to determine DP display bpp\n  drm/nouveau/fb: use correct ram oclass for nv1a hardware\n  drm/nv50/gr: add missing nv_error parameter priv\n  drm/nouveau: fix ENG_RUNLIST register address\n  drm/nv4c/bios: disallow retrieving from prom on nv4x igp's\n  drm/nv4c/vga: decode register is in a different place on nv4x igp's\n  drm/nv4c/mc: nv4x igp's have a different msi rearm register\n  drm/nouveau: set irq_enabled manually\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID update from Jiri Kosina:\n\n - fixes for several bugs in incorrect allocations of buffers by David\n   Herrmann and Benjamin Tissoires.\n\n - support for a few new device IDs by Archana Patni, Benjamin\n   Tissoires, Huei-Horng Yo, Reyad Attiyat and Yufeng Shen\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid:\n  HID: hyperv: make sure input buffer is big enough\n  HID: Bluetooth: hidp: make sure input buffers are big enough\n  HID: hid-sensor-hub: quirk for STM Sensor hub\n  HID: apple: add Apple wireless keyboard 2011 JIS model support\n  HID: fix buffer allocations\n  HID: multitouch: add FocalTech FTxxxx support\n  HID: microsoft: Add ID's for Surface Type/Touch Cover 2\n  HID: usbhid: quirk for CY-TM75 75 inch Touch Overlay Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n 1) kvaser CAN driver has fixed limits of some of it's table, validate\n    that we won't exceed those limits at probe time.  Fix from Olivier\n    Sobrie.\n\n 2) Fix rtl8192ce disabling interrupts for too long, from Olivier\n    Langlois.\n\n 3) Fix botched shift in ath5k driver, from Dan Carpenter.\n\n 4) Fix corruption of deferred packets in TIPC, from Erik Hugne.\n\n 5) Fix newlink error path in macvlan driver, from Cong Wang.\n\n 6) Fix netpoll deadlock in bonding, from Ding Tianhong.\n\n 7) Handle GSO packets properly in forwarding path when fragmentation is\n    necessary on egress, from Florian Westphal.\n\n 8) Fix axienet build errors, from Michal Simek.\n\n 9) Fix refcounting of ubufs on tx in vhost net driver, from Michael S\n    Tsirkin.\n\n10) Carrier status isn't set properly in hyperv driver, from Haiyang\n    Zhang.\n\n11) Missing pci_disable_device() in tulip_remove_one), from Ingo Molnar.\n\n12) AF_PACKET qdisc bypass mode doesn't adhere to driver provided TX\n    queue selection method.  Add a fallback method mechanism to fix this\n    bug, from Daniel Borkmann.\n\n13) Fix regression in link local route handling on GRE tunnels, from\n    Nicolas Dichtel.\n\n14) Bonding can assign dup aggregator IDs in some sequences of\n    configuration, fix by making the allocation counter per-bond instead\n    of global.  From Jiri Bohac.\n\n15) sctp_connectx() needs compat translations, from Daniel Borkmann.\n\n16) Fix of_mdio PHY interrupt parsing, from Ben Dooks\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (62 commits)\n  MAINTAINERS: add entry for the PHY library\n  of_mdio: fix phy interrupt passing\n  net: ethernet: update dependency and help text of mvneta\n  NET: fec: only enable napi if we are successful\n  af_packet: remove a stray tab in packet_set_ring()\n  net: sctp: fix sctp_connectx abi for ia32 emulation/compat mode\n  ipv4: fix counter in_slow_tot\n  irtty-sir.c: Do not set_termios() on irtty_close()\n  bonding: 802.3ad: make aggregator_identifier bond-private\n  usbnet: remove generic hard_header_len check\n  gre: add link local route when local addr is any\n  batman-adv: fix potential kernel paging error for unicast transmissions\n  batman-adv: avoid double free when orig_node initialization fails\n  batman-adv: free skb on TVLV parsing success\n  batman-adv: fix TT CRC computation by ensuring byte order\n  batman-adv: fix potential orig_node reference leak\n  batman-adv: avoid potential race condition when adding a new neighbour\n  batman-adv: properly check pskb_may_pull return value\n  batman-adv: release vlan object after checking the CRC\n  batman-adv: fix TT-TVLV parsing on OGM reception\n  ... Merge branch 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm\n\nPull ARM fixes from Russell King:\n \"A range of ARM fixes.  Biggest change is the stage-2 attributes used\n  for for hyp mode which were wrong.  I've killed some bits in a couple\n  of DT files which turned out not to be required, and a few other\n  fixes.\n\n  One fix touches code outside of arch/arm, which is related to sorting\n  out the DMA masks correctly.  There is a long standing issue with the\n  conversion from PFNs to addresses where people assume that shifting an\n  unsigned long left by PAGE_SHIFT results in a correct address.  This\n  is not the case with C: the integer promotion happens at assignment\n  after evaluation.  This fixes the recently introduced dma_max_pfn()\n  function, but there's a number of other places where we try this\n  directly on an unsigned long in the mm code\"\n\n* 'fixes' of git://ftp.arm.linux.org.uk/~rmk/linux-arm:\n  ARM: 7957/1: add DSB after icache flush in __flush_icache_all()\n  Fix uses of dma_max_pfn() when converting to a limiting address\n  ARM: 7955/1: spinlock: ensure we have a compiler barrier before sev\n  ARM: 7953/1: mm: ensure TLB invalidation is complete before enabling MMU\n  ARM: 7952/1: mm: Fix the memblock allocation for LPAE machines\n  ARM: 7950/1: mm: Fix stage-2 device memory attributes\n  ARM: dts: fix spdif pinmux configuration Merge tag 'jfs-3.14-rc4' of git://github.com/kleikamp/linux-shaggy\n\nPull jfs fix from David Kleikamp:\n \"Another ACL regression. This one more subtle\"\n\n* tag 'jfs-3.14-rc4' of git://github.com/kleikamp/linux-shaggy:\n  jfs: set i_ctime when setting ACL Merge tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 fixes from Ted Ts'o:\n \"Miscellaneous ext4 bug fixes for v3.14\"\n\n* tag 'ext4_for_linus_stable' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4:\n  jbd2: fix use after free in jbd2_journal_start_reserved()\n  ext4: don't leave i_crtime.tv_sec uninitialized\n  ext4: fix online resize with a non-standard blocks per group setting\n  ext4: fix online resize with very large inode tables\n  ext4: don't try to modify s_flags if the the file system is read-only\n  ext4: fix error paths in swap_inode_boot_loader()\n  ext4: fix xfstest generic/299 block validity failures Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull Ceph fixes from Sage Weil:\n \"We have some patches fixing up ACL support issues from Zheng and\n  Guangliang and a mount option to enable/disable this support.  (These\n  fixes were somewhat delayed by the Chinese holiday.)\n\n  There is also a small fix for cached readdir handling when directories\n  are fragmented\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  ceph: fix __dcache_readdir()\n  ceph: add acl, noacl options for cephfs mount\n  ceph: make ceph_forget_all_cached_acls() static inline\n  ceph: add missing init_acl() for mkdir() and atomic_open()\n  ceph: fix ceph_set_acl()\n  ceph: fix ceph_removexattr()\n  ceph: remove xattr when null value is given to setxattr()\n  ceph: properly handle XATTR_CREATE and XATTR_REPLACE Merge branch 'for-linus' of git://git.samba.org/sfrench/cifs-2.6\n\nPull CIFS fixes from Steve French:\n \"Three cifs fixes, the most important fixing the problem with passing\n  bogus pointers with writev (CVE-2014-0069).\n\n  Two additional cifs fixes are still in review (including the fix for\n  an append problem which Al also discovered)\"\n\n* 'for-linus' of git://git.samba.org/sfrench/cifs-2.6:\n  CIFS: Fix too big maxBuf size for SMB3 mounts\n  cifs: ensure that uncached writes handle unmapped areas correctly\n  [CIFS] Fix cifsacl mounts over smb2 to not call cifs Merge tag 'dma-buf-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/sumits/dma-buf\n\nPull dma-buf fix from Sumit Semwal:\n \"Just some debugfs output updates.\n\n  There's another patch related to dma-buf, but it'll get upstreamed via\n  Greg KH's pull request\"\n\n* tag 'dma-buf-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/sumits/dma-buf:\n  dma-buf: update debugfs output Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/egtvedt/linux-avr32\n\nPull AVR32 fixes from Hans-Christian Egtvedt.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/egtvedt/linux-avr32:\n  avr32: add generic vga.h to Kbuild\n  avr32: add generic ioremap_wc() definition in io.h\n  avr32: Makefile: add '-D__linux__' flag for gcc-4.4.7 use\n  avr32: fix missing module.h causing build failure in mimc200/fram.c Turn the XML into something almost parseable.\n\nOf course, now the problem is that the different XML files have\ndifferent node names, but at least we've turned it into a half-way sane\nformat, and have a nice callback place per value.\n\nSoon we could use that to actually fill in useful information.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Make the multi-dive files valid XML\n\nThey had multiple \"root\" entries (all called 'dive'), which makes baby\nJesus cry.\n\nSo just enclose them all in one root entry (called 'dives') that\nmagically turns it all into parseable xml.\n\nYeah, that really helps make the world a better place.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Add crazy (bad) xml parser thing\n\nIt only works for the Suunto \"one xml file per dive\" format, not for the\nlibdivecomputer one that just puts many dives in one file.\n\nMaybe there is some way for libxml2 to handle concatenated xml files\n(start again on errors), but I don't know it yet.\n\nI need to get stinking drunk before I look at more xml mess.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Start archiving the stupid XML files\n\n(and add a reminder of how they came to be)\n\nGaah.  XML is *stupid*.  It's not easy to parse for humans or for\ncomputers, and some of these XML files are just disgusting.  But maybe\nthey can be turned into something usable with libxml.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml\n\nPull UML updates from Richard Weinberger:\n \"Mostly fixes for UML:\n\n   - First round of fixes for PTRACE_GETRESET/SETREGSET\n\n   - A printf vs printk cleanup\n\n   - Minor improvements\"\n\n* 'for-linus-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml:\n  um: Correctly check for PTRACE_GETRESET/SETREGSET\n  um: v2: Use generic NOTES macro\n  um: Add kerneldoc for userspace_tramp() and start_userspace()\n  um: Add kerneldoc for segv_handler\n  um: stub-data.h: remove superfluous include\n  um: userspace - be more verbose in ptrace set regs error\n  um: add dummy ioremap and iounmap functions\n  um: Allow building and running on older hosts\n  um: Avoid longjmp/setjmp symbol clashes with libpthread.a\n  um: console: Ignore console= option\n  um: Use os_warn to print out pre-boot warning/error messages\n  um: Add os_warn() for pre-boot warning/error messages\n  um: Use os_info for the messages on normal path\n  um: Add os_info() for pre-boot information messages\n  um: Use printk instead of printf in make_uml_dir Merge tag 'upstream-4.13-rc1' of git://git.infradead.org/linux-ubifs\n\nPull UBIFS updates from Richard Weinberger:\n\n - Updates and fixes for the file encryption mode\n\n - Minor improvements\n\n - Random fixes\n\n* tag 'upstream-4.13-rc1' of git://git.infradead.org/linux-ubifs:\n  ubifs: Set double hash cookie also for RENAME_EXCHANGE\n  ubifs: Massage assert in ubifs_xattr_set() wrt. init_xattrs\n  ubifs: Don't leak kernel memory to the MTD\n  ubifs: Change gfp flags in page allocation for bulk read\n  ubifs: Fix oops when remounting with no_bulk_read.\n  ubifs: Fail commit if TNC is obviously inconsistent\n  ubifs: allow userspace to map mounts to volumes\n  ubifs: Wire-up statx() support\n  ubifs: Remove dead code from ubifs_get_link()\n  ubifs: Massage debug prints wrt. fscrypt\n  ubifs: Add assert to dent_key_init()\n  ubifs: Fix unlink code wrt. double hash lookups\n  ubifs: Fix data node size for truncating uncompressed nodes\n  ubifs: Don't encrypt special files on creation\n  ubifs: Fix memory leak in RENAME_WHITEOUT error path in do_rename\n  ubifs: Fix inode data budget in ubifs_mknod\n  ubifs: Correctly evict xattr inodes\n  ubifs: Unexport ubifs_inode_slab\n  ubifs: don't bother checking for encryption key in ->mmap()\n  ubifs: require key for truncate(2) of encrypted file Merge tag 'kvm-4.13-2' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull more KVM updates from Radim Krčmář:\n \"Second batch of KVM updates for v4.13\n\n  Common:\n   - add uevents for VM creation/destruction\n   - annotate and properly access RCU-protected objects\n\n  s390:\n   - rename IOCTL added in the first v4.13 merge\n\n  x86:\n   - emulate VMLOAD VMSAVE feature in SVM\n   - support paravirtual asynchronous page fault while nested\n   - add Hyper-V userspace interfaces for better migration\n   - improve master clock corner cases\n   - extend internal error reporting after EPT misconfig\n   - correct single-stepping of emulated instructions in SVM\n   - handle MCE during VM entry\n   - fix nVMX VM entry checks and nVMX VMCS shadowing\"\n\n* tag 'kvm-4.13-2' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (28 commits)\n  kvm: x86: hyperv: make VP_INDEX managed by userspace\n  KVM: async_pf: Let guest support delivery of async_pf from guest mode\n  KVM: async_pf: Force a nested vmexit if the injected #PF is async_pf\n  KVM: async_pf: Add L1 guest async_pf #PF vmexit handler\n  KVM: x86: Simplify kvm_x86_ops->queue_exception parameter list\n  kvm: x86: hyperv: add KVM_CAP_HYPERV_SYNIC2\n  KVM: x86: make backwards_tsc_observed a per-VM variable\n  KVM: trigger uevents when creating or destroying a VM\n  KVM: SVM: Enable Virtual VMLOAD VMSAVE feature\n  KVM: SVM: Add Virtual VMLOAD VMSAVE feature definition\n  KVM: SVM: Rename lbr_ctl field in the vmcb control area\n  KVM: SVM: Prepare for new bit definition in lbr_ctl\n  KVM: SVM: handle singlestep exception when skipping emulated instructions\n  KVM: x86: take slots_lock in kvm_free_pit\n  KVM: s390: Fix KVM_S390_GET_CMMA_BITS ioctl definition\n  kvm: vmx: Properly handle machine check during VM-entry\n  KVM: x86: update master clock before computing kvmclock_offset\n  kvm: nVMX: Shadow \"high\" parts of shadowed 64-bit VMCS fields\n  kvm: nVMX: Fix nested_vmx_check_msr_bitmap_controls\n  kvm: nVMX: Validate the I/O bitmaps on nested VM-entry\n  ... Merge tag 'xfs-4.13-merge-6' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull XFS fixes from Darrick Wong:\n \"Largely debugging and regression fixes.\n\n   - Add some locking assertions for the _ilock helpers.\n\n   - Revert the XFS_QMOPT_NOLOCK patch; after discussion with hch the\n     online fsck patch that would have needed it has been redesigned and\n     no longer needs it.\n\n   - Fix behavioral regression of SEEK_HOLE/DATA with negative offsets\n     to match 4.12-era XFS behavior\"\n\n* tag 'xfs-4.13-merge-6' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:\n  vfs: in iomap seek_{hole,data}, return -ENXIO for negative offsets\n  Revert \"xfs: grab dquots without taking the ilock\"\n  xfs: assert locking precondition in xfs_readlink_bmap_ilocked\n  xfs: assert locking precondіtion in xfs_attr_list_int_ilocked\n  xfs: fixup xfs_attr_get_ilocked Merge branch 'for-4.13-part2' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fixes from David Sterba:\n \"We've identified and fixed a silent corruption (introduced by code in\n  the first pull), a fixup after the blk_status_t merge and two fixes to\n  incremental send that Filipe has been hunting for some time\"\n\n* 'for-4.13-part2' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  Btrfs: fix unexpected return value of bio_readpage_error\n  btrfs: btrfs_create_repair_bio never fails, skip error handling\n  btrfs: cloned bios must not be iterated by bio_for_each_segment_all\n  Btrfs: fix write corruption due to bio cloning on raid5/6\n  Btrfs: incremental send, fix invalid memory access\n  Btrfs: incremental send, fix invalid path for link commands Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull a few more input updates from Dmitry Torokhov:\n\n - multi-touch handling for Xen\n\n - fix for long-standing bug causing crashes in i8042 on boot\n\n - change to gpio_keys to better handle key presses during system state\n   transition\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: i8042 - fix crash at boot time\n  Input: gpio_keys - handle the missing key press event in resume phase\n  Input: xen-kbdfront - add multi-touch support Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n\n - fix new compiler warnings in cavium\n\n - set post-op IV properly in caam (this fixes chaining)\n\n - fix potential use-after-free in atmel in case of EBUSY\n\n - fix sleeping in softirq path in chcr\n\n - disable buggy sha1-avx2 driver (may overread and page fault)\n\n - fix use-after-free on signals in caam\n\n* 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: cavium - make several functions static\n  crypto: chcr - Avoid algo allocation in softirq.\n  crypto: caam - properly set IV after {en,de}crypt\n  crypto: atmel - only treat EBUSY as transient if backlog\n  crypto: af_alg - Avoid sock_graft call warning\n  crypto: caam - fix signals handling\n  crypto: sha1-ssse3 - Disable avx2 Merge tag 'devprop-fix-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull device properties framework fix from Rafael Wysocki:\n \"This fixes a problem with bool properties that could be seen as \"true\"\n  when the property was not present at all by adding a special helper\n  for bool properties with checks for all of the requisute conditions\n  (Sakari Ailus)\"\n\n* tag 'devprop-fix-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  device property: Introduce fwnode_call_bool_op() for ops that return bool Merge tag 'acpi-fixes-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI fixes from Rafael Wysocki:\n \"These fix the return value of an IRQ mapping routine in the ACPI core,\n  fix an EC driver issue causing abnormal fan behavior after system\n  resume on some systems and add quirks for ACPI device objects that\n  need to be treated as \"always present\" to work around bogus\n  implementations of the _STA control method.\n\n  Specifics:\n\n   - Fix the return value of acpi_gsi_to_irq() to make the GSI to IRQ\n     mapping work on the Mustang (ARM64) platform (Mark Salter).\n\n   - Fix an EC driver issue that causes fans to behave abnormally after\n     system resume on some systems which turns out to be related to\n     switching over the EC into the polling mode during the noirq stages\n     of system suspend and resume (Lv Zheng).\n\n   - Add quirks for ACPI device objects that need to be treated as\n     \"always present\", because their _STA methods are designed to work\n     around Windows driver bugs and return garbage from our perspective\n     (Hans de Goede)\"\n\n* tag 'acpi-fixes-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / x86: Add KIOX000A accelerometer on GPD win to always_present_ids array\n  ACPI / x86: Add Dell Venue 11 Pro 7130 touchscreen to always_present_ids\n  ACPI / x86: Allow matching always_present_id array entries by DMI\n  Revert \"ACPI / EC: Enable event freeze mode...\" to fix a regression\n  ACPI / EC: Drop EC noirq hooks to fix a regression\n  ACPI / irq: Fix return code of acpi_gsi_to_irq() Merge tag 'pm-fixes-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management fixes from Rafael Wysocki:\n \"These fix a recently exposed issue in the PCI device wakeup code and\n  one older problem related to PCI device wakeup that has been reported\n  recently, modify one more piece of computations in intel_pstate to get\n  rid of a rounding error, fix a possible race in the schedutil cpufreq\n  governor, fix the device PM QoS sysfs interface to correctly handle\n  invalid user input, fix return values of two probe routines in devfreq\n  drivers and constify an attribute_group structure in devfreq.\n\n  Specifics:\n\n   - Avoid clearing the PCI PME Enable bit for devices as a result of\n     config space restoration which confuses AML executed afterward and\n     causes wakeup events to be lost on some systems (Rafael Wysocki).\n\n   - Fix the native PCIe PME interrupts handling in the cases when the\n     PME IRQ is set up as a system wakeup one so that runtime PM remote\n     wakeup works as expected after system resume on systems where that\n     happens (Rafael Wysocki).\n\n   - Fix the device PM QoS sysfs interface to handle invalid user input\n     correctly instead of using an unititialized variable value as the\n     latency tolerance for the device at hand (Dan Carpenter).\n\n   - Get rid of one more rounding error from intel_pstate computations\n     (Srinivas Pandruvada).\n\n   - Fix the schedutil cpufreq governor to prevent it from possibly\n     accessing unititialized data structures from governor callbacks in\n     some cases on systems when multiple CPUs share a single cpufreq\n     policy object (Vikram Mulukutla).\n\n   - Fix the return values of probe routines in two devfreq drivers\n     (Gustavo Silva).\n\n   - Constify an attribute_group structure in devfreq (Arvind Yadav)\"\n\n* tag 'pm-fixes-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  PCI / PM: Fix native PME handling during system suspend/resume\n  PCI / PM: Restore PME Enable after config space restoration\n  cpufreq: schedutil: Fix sugov_start() versus sugov_update_shared() race\n  PM / QoS: return -EINVAL for bogus strings\n  cpufreq: intel_pstate: Fix ratio setting for min_perf_pct\n  PM / devfreq: constify attribute_group structures.\n  PM / devfreq: tegra: fix error return code in tegra_devfreq_probe()\n  PM / devfreq: rk3399_dmc: fix error return code in rk3399_dmcfreq_probe() Merge branch 'akpm' (patches from Andrew)\n\nMerge even more updates from Andrew Morton:\n\n - a few leftovers\n\n - fault-injector rework\n\n - add a module loader test driver\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  kmod: throttle kmod thread limit\n  kmod: add test driver to stress test the module loader\n  MAINTAINERS: give kmod some maintainer love\n  xtensa: use generic fb.h\n  fault-inject: add /proc/<pid>/fail-nth\n  fault-inject: simplify access check for fail-nth\n  fault-inject: make fail-nth read/write interface symmetric\n  fault-inject: parse as natural 1-based value for fail-nth write interface\n  fault-inject: automatically detect the number base for fail-nth write interface\n  kernel/watchdog.c: use better pr_fmt prefix\n  MAINTAINERS: move the befs tree to kernel.org\n  lib/atomic64_test.c: add a test that atomic64_inc_not_zero() returns an int\n  mm: fix overflow check in expand_upwards() Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile\n\nPull arch/tile updates from Chris Metcalf:\n \"This adds support for an <arch/intreg.h> to help with removing\n  __need_xxx #defines from glibc, and removes some dead code in\n  arch/tile/mm/init.c\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:\n  mm, tile: drop arch_{add,remove}_memory\n  tile: prefer <arch/intreg.h> to __need_int_reg_t Merge tag 'powerpc-4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"Nothing that really stands out, just a bunch of fixes that have come\n  in in the last couple of weeks.\n\n  None of these are actually fixes for code that is new in 4.13. It's\n  roughly half older bugs, with fixes going to stable, and half\n  fixes/updates for Power9.\n\n  Thanks to: Aneesh Kumar K.V, Anton Blanchard, Balbir Singh, Benjamin\n  Herrenschmidt, Madhavan Srinivasan, Michael Neuling, Nicholas Piggin,\n  Oliver O'Halloran\"\n\n* tag 'powerpc-4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/64: Fix atomic64_inc_not_zero() to return an int\n  powerpc: Fix emulation of mfocrf in emulate_step()\n  powerpc: Fix emulation of mcrf in emulate_step()\n  powerpc/perf: Add POWER9 alternate PM_RUN_CYC and PM_RUN_INST_CMPL events\n  powerpc/perf: Fix SDAR_MODE value for continous sampling on Power9\n  powerpc/asm: Mark cr0 as clobbered in mftb()\n  powerpc/powernv: Fix local TLB flush for boot and MCE on POWER9\n  powerpc/mm/radix: Synchronize updates to the process table\n  powerpc/mm/radix: Properly clear process table entry\n  powerpc/powernv: Tell OPAL about our MMU mode on POWER9\n  powerpc/kexec: Fix radix to hash kexec due to IAMR/AMOR Merge tag 'ntb-4.13' of git://github.com/jonmason/ntb\n\nPull NTB updates from Jon Mason:\n \"The major change in the series is a rework of the NTB infrastructure\n  to all for IDT hardware to be supported (and resulting fallout from\n  that). There are also a few clean-ups, etc.\n\n  New IDT NTB driver and changes to the NTB infrastructure to allow for\n  this different kind of NTB HW, some style fixes (per Greg KH\n  recommendation), and some ntb_test tweaks\"\n\n* tag 'ntb-4.13' of git://github.com/jonmason/ntb:\n  ntb_netdev: set the net_device's parent\n  ntb: Add error path/handling to Debug FS entry creation\n  ntb: Add more debugfs support for ntb_perf testing options\n  ntb: Remove debug-fs variables from the context structure\n  ntb: Add a module option to control affinity of DMA channels\n  NTB: Add IDT 89HPESxNTx PCIe-switches support\n  ntb_hw_intel: Style fixes: open code macros that just obfuscate code\n  ntb_hw_amd: Style fixes: open code macros that just obfuscate code\n  NTB: Add ntb.h comments\n  NTB: Add PCIe Gen4 link speed\n  NTB: Add new Memory Windows API documentation\n  NTB: Add Messaging NTB API\n  NTB: Alter Scratchpads API to support multi-ports devices\n  NTB: Alter MW API to support multi-ports devices\n  NTB: Alter link-state API to support multi-port devices\n  NTB: Add indexed ports NTB API\n  NTB: Make link-state API being declared first\n  NTB: ntb_test: add parameter for doorbell bitmask\n  NTB: ntb_test: modprobe on remote host Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux\n\nPull thermal management updates from Zhang Rui:\n\n - Improve thermal cpu_cooling interaction with cpufreq core.\n\n   The cpu_cooling driver is designed to use CPU frequency scaling to\n   avoid high thermal states for a platform. But it wasn't glued really\n   well with cpufreq core.\n\n   For example clipped-cpus is copied from the policy structure and its\n   much better to use the policy->cpus (or related_cpus) fields directly\n   as they may have got updated. Not that things were broken before this\n   series, but they can be optimized a bit more.\n\n   This series tries to improve interactions between cpufreq core and\n   cpu_cooling driver and does some fixes/cleanups to the cpu_cooling\n   driver. (Viresh Kumar)\n\n - A couple of fixes and cleanups in thermal core and imx, hisilicon,\n   bcm_2835, int340x thermal drivers. (Arvind Yadav, Dan Carpenter,\n   Sumeet Pawnikar, Srinivas Pandruvada, Willy WOLFF)\n\n* 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/rzhang/linux: (24 commits)\n  thermal: bcm2835: fix an error code in probe()\n  thermal: hisilicon: Handle return value of clk_prepare_enable\n  thermal: imx: Handle return value of clk_prepare_enable\n  thermal: int340x: check for sensor when PTYP is missing\n  Thermal/int340x: Fix few typos and kernel-doc style\n  thermal: fix source code documentation for parameters\n  thermal: cpu_cooling: Replace kmalloc with kmalloc_array\n  thermal: cpu_cooling: Rearrange struct cpufreq_cooling_device\n  thermal: cpu_cooling: 'freq' can't be zero in cpufreq_state2power()\n  thermal: cpu_cooling: don't store cpu_dev in cpufreq_cdev\n  thermal: cpu_cooling: get_level() can't fail\n  thermal: cpu_cooling: create structure for idle time stats\n  thermal: cpu_cooling: merge frequency and power tables\n  thermal: cpu_cooling: get rid of 'allowed_cpus'\n  thermal: cpu_cooling: OPPs are registered for all CPUs\n  thermal: cpu_cooling: store cpufreq policy\n  cpufreq: create cpufreq_table_count_valid_entries()\n  thermal: cpu_cooling: use cpufreq_policy to register cooling device\n  thermal: cpu_cooling: get rid of a variable in cpufreq_set_cur_state()\n  thermal: cpu_cooling: remove cpufreq_cooling_get_level()\n  ... Merge tag 'mmc-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc\n\nPull MMC fixes from Ulf Hansson:\n \"Here are a couple of mmc fixes intended for v4.13 rc1.\n\n  MMC core:\n   - Restore some behaviour of MMC_IOC_MULTI_CMD commands\n   - Fix using un-initialized variable in mmc_blk_issue_drv_op()\n   - Fix mmc block queue cleanup\n\n  MMC host:\n   - sdhci-acpi: Workaround conflict with PCI wifi on GPD Win handheld\n   - tmio-mmc: Fix bad pointer math\"\n\n* tag 'mmc-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:\n  mmc: tmio-mmc: fix bad pointer math\n  mmc: block: Prevent new req entering queue after its cleanup\n  mmc: block: Let MMC_IOC_MULTI_CMD return zero again for zero entries\n  mmc: block: Initialize ret in mmc_blk_issue_drv_op() for MMC_DRV_OP_IOCTL\n  mmc: sdhci-acpi: Workaround conflict with PCI wifi on GPD Win handheld Merge tag 'sound-fix-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Small last-minute fixes for 4.13-rc1: a couple of PCM fixes for m68k,\n  a cleanup work for legacy ISA msnd driver, and a few HD-audio new IDs\n  and quirks\"\n\n* tag 'sound-fix-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Add hdmi id for a Geminilake variant\n  ALSA: hda/realtek - New codec device ID for ALC1220\n  ALSA: pcm: Simplify check for dma_mmap_coherent() availability\n  ALSA: pcm: Protect call to dma_mmap_coherent() by check for HAS_DMA\n  ALSA: msnd: Optimize / harden DSP and MIDI loops\n  ALSA: hda/realtek - change the location for one of two front microphones\n  ALSA: opl4: Move inline before return type Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull key handling fixes from James Morris:\n \"A minor fix and documentation updates\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  KEYS: Add documentation for asymmetric keyring restrictions\n  KEYS: DH: validate __spare field\n  modsign: add markers to endif-statements in certs/Makefile Merge tag 'clk-bulk-get-prep-enable' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux\n\nPull clk api update from Stephen Boyd:\n \"Small patch to add the clk_bulk_prepare_enable() and\n  clk_bulk_disable_unprepare() API to the newly introduced\n  clk bulk APIs.\n\n  It would be good to get this into the -rc1 so that other\n  driver trees can use it for code targeted for the next\n  merge window\"\n\n* tag 'clk-bulk-get-prep-enable' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux:\n  clk: Provide bulk prepare_enable disable_unprepare variants Merge tag 'pci-v4.13-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI fixes from Bjorn Helgaas:\n\n - fix a typo that broke Rockchip enumeration\n\n - fix a new memory leak in the ARM host bridge failure path\n\n* tag 'pci-v4.13-fixes-1' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:\n  PCI: rockchip: Check for pci_scan_root_bus_bridge() failure correctly\n  ARM/PCI: Fix pcibios_init_resource() struct pci_host_bridge leak Merge tag 'befs-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/luisbg/linux-befs\n\nPull single befs fix from Luis de Bethencourt:\n \"Very little activity in the befs file system this time since I'm busy\n  settling into a new job\"\n\n* tag 'befs-v4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/luisbg/linux-befs:\n  befs: add kernel-doc formatting for befs_bt_read_super() Merge tag 'nfs-for-4.13-1' of git://git.linux-nfs.org/projects/anna/linux-nfs\n\nPull NFS client updates from Anna Schumaker:\n \"Stable bugfixes:\n   - Fix -EACCESS on commit to DS handling\n   - Fix initialization of nfs_page_array->npages\n   - Only invalidate dentries that are actually invalid\n\n  Features:\n   - Enable NFSoRDMA transparent state migration\n   - Add support for lookup-by-filehandle\n   - Add support for nfs re-exporting\n\n  Other bugfixes and cleanups:\n   - Christoph cleaned up the way we declare NFS operations\n   - Clean up various internal structures\n   - Various cleanups to commits\n   - Various improvements to error handling\n   - Set the dt_type of . and .. entries in NFS v4\n   - Make slot allocation more reliable\n   - Fix fscache stat printing\n   - Fix uninitialized variable warnings\n   - Fix potential list overrun in nfs_atomic_open()\n   - Fix a race in NFSoRDMA RPC reply handler\n   - Fix return size for nfs42_proc_copy()\n   - Fix against MAC forgery timing attacks\"\n\n* tag 'nfs-for-4.13-1' of git://git.linux-nfs.org/projects/anna/linux-nfs: (68 commits)\n  NFS: Don't run wake_up_bit() when nobody is waiting...\n  nfs: add export operations\n  nfs4: add NFSv4 LOOKUPP handlers\n  nfs: add a nfs_ilookup helper\n  nfs: replace d_add with d_splice_alias in atomic_open\n  sunrpc: use constant time memory comparison for mac\n  NFSv4.2 fix size storage for nfs42_proc_copy\n  xprtrdma: Fix documenting comments in frwr_ops.c\n  xprtrdma: Replace PAGE_MASK with offset_in_page()\n  xprtrdma: FMR does not need list_del_init()\n  xprtrdma: Demote \"connect\" log messages\n  NFSv4.1: Use seqid returned by EXCHANGE_ID after state migration\n  NFSv4.1: Handle EXCHGID4_FLAG_CONFIRMED_R during NFSv4.1 migration\n  xprtrdma: Don't defer MR recovery if ro_map fails\n  xprtrdma: Fix FRWR invalidation error recovery\n  xprtrdma: Fix client lock-up after application signal fires\n  xprtrdma: Rename rpcrdma_req::rl_free\n  xprtrdma: Pass only the list of registered MRs to ro_unmap_sync\n  xprtrdma: Pre-mark remotely invalidated MRs\n  xprtrdma: On invalidation failure, remove MWs from rl_registered\n  ... Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target updates from Nicholas Bellinger:\n \"It's been usually busy for summer, with most of the efforts centered\n  around TCMU developments and various target-core + fabric driver bug\n  fixing activities. Not particularly large in terms of LoC, but lots of\n  smaller patches from many different folks.\n\n  The highlights include:\n\n   - ibmvscsis logical partition manager support (Michael Cyr + Bryant\n     Ly)\n\n   - Convert target/iblock WRITE_SAME to blkdev_issue_zeroout (hch +\n     nab)\n\n   - Add support for TMR percpu LUN reference counting (nab)\n\n   - Fix a potential deadlock between EXTENDED_COPY and iscsi shutdown\n     (Bart)\n\n   - Fix COMPARE_AND_WRITE caw_sem leak during se_cmd quiesce (Jiang Yi)\n\n   - Fix TMCU module removal (Xiubo Li)\n\n   - Fix iser-target OOPs during login failure (Andrea Righi + Sagi)\n\n   - Breakup target-core free_device backend driver callback (mnc)\n\n   - Perform TCMU add/delete/reconfig synchronously (mnc)\n\n   - Fix TCMU multiple UIO open/close sequences (mnc)\n\n   - Fix TCMU CHECK_CONDITION sense handling (mnc)\n\n   - Fix target-core SAM_STAT_BUSY + TASK_SET_FULL handling (mnc + nab)\n\n   - Introduce TYPE_ZBC support in PSCSI (Damien Le Moal)\n\n   - Fix possible TCMU memory leak + OOPs when recalculating cmd base\n     size (Xiubo Li + Bryant Ly + Damien Le Moal + mnc)\n\n   - Add login_keys_workaround attribute for non RFC initiators (Robert\n     LeBlanc + Arun Easi + nab)\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (68 commits)\n  iscsi-target: Add login_keys_workaround attribute for non RFC initiators\n  Revert \"qla2xxx: Fix incorrect tcm_qla2xxx_free_cmd use during TMR ABORT\"\n  tcmu: clean up the code and with one small fix\n  tcmu: Fix possbile memory leak / OOPs when recalculating cmd base size\n  target: export lio pgr/alua support as device attr\n  target: Fix return sense reason in target_scsi3_emulate_pr_out\n  target: Fix cmd size for PR-OUT in passthrough_parse_cdb\n  tcmu: Fix dev_config_store\n  target: pscsi: Introduce TYPE_ZBC support\n  target: Use macro for WRITE_VERIFY_32 operation codes\n  target: fix SAM_STAT_BUSY/TASK_SET_FULL handling\n  target: remove transport_complete\n  pscsi: finish cmd processing from pscsi_req_done\n  tcmu: fix sense handling during completion\n  target: add helper to copy sense to se_cmd buffer\n  target: do not require a transport_complete for SCF_TRANSPORT_TASK_SENSE\n  target: make device_mutex and device_list static\n  tcmu: Fix flushing cmd entry dcache page\n  tcmu: fix multiple uio open/close sequences\n  tcmu: drop configured check in destroy\n  ... Merge tag 'nfsd-4.13' of git://linux-nfs.org/~bfields/linux\n\nPull nfsd updates from Bruce Fields:\n \"Chuck's RDMA update overhauls the \"call receive\" side of the\n  RPC-over-RDMA transport to use the new rdma_rw API.\n\n  Christoph cleaned the way nfs operations are declared, removing a\n  bunch of function-pointer casts and declaring the operation vectors as\n  const.\n\n  Christoph's changes touch both client and server, and both client and\n  server pulls this time around should be based on the same commits from\n  Christoph\"\n\n* tag 'nfsd-4.13' of git://linux-nfs.org/~bfields/linux: (53 commits)\n  svcrdma: fix an incorrect check on -E2BIG and -EINVAL\n  nfsd4: factor ctime into change attribute\n  svcrdma: Remove svc_rdma_chunk_ctxt::cc_dir field\n  svcrdma: use offset_in_page() macro\n  svcrdma: Clean up after converting svc_rdma_recvfrom to rdma_rw API\n  svcrdma: Clean-up svc_rdma_unmap_dma\n  svcrdma: Remove frmr cache\n  svcrdma: Remove unused Read completion handlers\n  svcrdma: Properly compute .len and .buflen for received RPC Calls\n  svcrdma: Use generic RDMA R/W API in RPC Call path\n  svcrdma: Add recvfrom helpers to svc_rdma_rw.c\n  sunrpc: Allocate up to RPCSVC_MAXPAGES per svc_rqst\n  svcrdma: Don't account for Receive queue \"starvation\"\n  svcrdma: Improve Reply chunk sanity checking\n  svcrdma: Improve Write chunk sanity checking\n  svcrdma: Improve Read chunk sanity checking\n  svcrdma: Remove svc_rdma_marshal.c\n  svcrdma: Avoid Send Queue overflow\n  svcrdma: Squelch disconnection messages\n  sunrpc: Disable splice for krb5i\n  ... Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull ext2, udf, reiserfs fixes from Jan Kara:\n \"Several ext2, udf, and reiserfs fixes\"\n\n* 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  ext2: Fix memory leak when truncate races ext2_get_blocks\n  reiserfs: fix race in prealloc discard\n  reiserfs: don't preallocate blocks for extended attributes\n  udf: Convert udf_disk_stamp_to_time() to use mktime64()\n  udf: Use time64_to_tm for timestamp conversion\n  udf: Fix deadlock between writeback and udf_setsize()\n  udf: Use i_size_read() in udf_adinicb_writepage()\n  udf: Fix races with i_size changes during readpage\n  udf: Remove unused UDF_DEFAULT_BLOCKSIZE Merge tag '4.13-fixes' of git://git.lwn.net/linux\n\nPull documentation fixes from Jonathan Corbet:\n \"A set of fixes for various warnings, including the one caused by the\n  removal of kernel/rcu/srcu.c. Also correct a stray pointer in\n  memory-barriers.txt\"\n\n* tag '4.13-fixes' of git://git.lwn.net/linux:\n  kokr/memory-barriers.txt: Fix obsolete link to atomic_ops.txt\n  memory-barriers.txt: Fix broken link to atomic_ops.txt\n  docs: Turn off section numbering for the input docs\n  docs: Include uaccess docs from the right file\n  docs: Do not include from kernel/rcu/srcu.c Merge tag 'kbuild-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull more Kbuild updates from Masahiro Yamada:\n\n - Move generic-y of exported headers to uapi/asm/Kbuild for complete\n   de-coupling of UAPI\n\n - Clean up scripts/Makefile.headersinst\n\n - Fix host programs for 32 bit machine with XFS file system\n\n* tag 'kbuild-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild: (29 commits)\n  kbuild: Enable Large File Support for hostprogs\n  kbuild: remove wrapper files handling from Makefile.headersinst\n  kbuild: split exported generic header creation into uapi-asm-generic\n  kbuild: do not include old-kbuild-file from Makefile.headersinst\n  xtensa: move generic-y of exported headers to uapi/asm/Kbuild\n  unicore32: move generic-y of exported headers to uapi/asm/Kbuild\n  tile: move generic-y of exported headers to uapi/asm/Kbuild\n  sparc: move generic-y of exported headers to uapi/asm/Kbuild\n  sh: move generic-y of exported headers to uapi/asm/Kbuild\n  parisc: move generic-y of exported headers to uapi/asm/Kbuild\n  openrisc: move generic-y of exported headers to uapi/asm/Kbuild\n  nios2: move generic-y of exported headers to uapi/asm/Kbuild\n  nios2: remove unneeded arch/nios2/include/(generated/)asm/signal.h\n  microblaze: move generic-y of exported headers to uapi/asm/Kbuild\n  metag: move generic-y of exported headers to uapi/asm/Kbuild\n  m68k: move generic-y of exported headers to uapi/asm/Kbuild\n  m32r: move generic-y of exported headers to uapi/asm/Kbuild\n  ia64: remove redundant generic-y += kvm_para.h from asm/Kbuild\n  hexagon: move generic-y of exported headers to uapi/asm/Kbuild\n  h8300: move generic-y of exported headers to uapi/asm/Kbuild\n  ... Merge tag 'trace-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull more tracing updates from Steven Rostedt:\n \"A few more minor updates:\n\n   - Show the tgid mappings for user space trace tools to use\n\n   - Fix and optimize the comm and tgid cache recording\n\n   - Sanitize derived kprobe names\n\n   - Ftrace selftest updates\n\n   - trace file header fix\n\n   - Update of Documentation/trace/ftrace.txt\n\n   - Compiler warning fixes\n\n   - Fix possible uninitialized variable\"\n\n* tag 'trace-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  ftrace: Fix uninitialized variable in match_records()\n  ftrace: Remove an unneeded NULL check\n  ftrace: Hide cached module code for !CONFIG_MODULES\n  tracing: Do note expose stack_trace_filter without DYNAMIC_FTRACE\n  tracing: Update Documentation/trace/ftrace.txt\n  tracing: Fixup trace file header alignment\n  selftests/ftrace: Add a testcase for kprobe event naming\n  selftests/ftrace: Add a test to probe module functions\n  selftests/ftrace: Update multiple kprobes test for powerpc\n  trace/kprobes: Sanitize derived event names\n  tracing: Attempt to record other information even if some fail\n  tracing: Treat recording tgid for idle task as a success\n  tracing: Treat recording comm for idle task as a success\n  tracing: Add saved_tgids file to show cached pid to tgid mappings Merge branch 'akpm' (patches from Andrew)\n\nMerge yet more updates from Andrew Morton:\n\n- various misc things\n\n- kexec updates\n\n- sysctl core updates\n\n- scripts/gdb udpates\n\n- checkpoint-restart updates\n\n- ipc updates\n\n- kernel/watchdog updates\n\n- Kees's \"rough equivalent to the glibc _FORTIFY_SOURCE=1 feature\"\n\n- \"stackprotector: ascii armor the stack canary\"\n\n- more MM bits\n\n- checkpatch updates\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (96 commits)\n  writeback: rework wb_[dec|inc]_stat family of functions\n  ARM: samsung: usb-ohci: move inline before return type\n  video: fbdev: omap: move inline before return type\n  video: fbdev: intelfb: move inline before return type\n  USB: serial: safe_serial: move __inline__ before return type\n  drivers: tty: serial: move inline before return type\n  drivers: s390: move static and inline before return type\n  x86/efi: move asmlinkage before return type\n  sh: move inline before return type\n  MIPS: SMP: move asmlinkage before return type\n  m68k: coldfire: move inline before return type\n  ia64: sn: pci: move inline before type\n  ia64: move inline before return type\n  FRV: tlbflush: move asmlinkage before return type\n  CRIS: gpio: move inline before return type\n  ARM: HP Jornada 7XX: move inline before return type\n  ARM: KVM: move asmlinkage before type\n  checkpatch: improve the STORAGE_CLASS test\n  mm, migration: do not trigger OOM killer when migrating memory\n  drm/i915: use __GFP_RETRY_MAYFAIL\n  ... Merge tag 'platform-drivers-x86-v4.13-2' of git://git.infradead.org/linux-platform-drivers-x86\n\nPull more x86 platform driver updates from Darren Hart:\n \"Add new platform matches for silead_dmi and ideapad-laptop. Several\n  constify patches for attribute_group structures. Fixes for peaq-wmi\n  and intel_telemetry.\n\n  silead_dmi:\n   - Add entry for Ployer Momo7w tablet touchscreen\n   - Add touchscreen info for I.T.Works TW891 2-in-1\n\n  toshiba_acpi:\n   - constify attribute_group structures.\n\n  asus-wmi:\n   - constify attribute_group structures.\n\n  panasonic-laptop:\n   - constify attribute_group structures.\n\n  alienware-wmi:\n   - constify attribute_group structures.\n\n  samsung-laptop:\n   - constify attribute_group structures.\n\n  compal-laptop:\n   - constify attribute_group structures.\n\n  fujitsu-laptop:\n   - constify attribute_group structures.\n   - add NULL check on devm_kzalloc() return value\n\n  peaq-wmi:\n   - Fix peaq_ignore_events_counter handling off by 1\n\n  ideapad-laptop:\n   - Fix indentation in DMI table\n   - Add several models to no_hw_rfkill\n   - Add IdeaPad V510-15IKB to no_hw_rfkill\n\n  intel_telemetry:\n   - Add debugfs entry for S0ix residency\n\n  intel_telemetry_debugfs:\n   - fix some error codes in init\n   - fix oops when load/unload module\"\n\n* tag 'platform-drivers-x86-v4.13-2' of git://git.infradead.org/linux-platform-drivers-x86:\n  platform/x86: silead_dmi: Add entry for Ployer Momo7w tablet touchscreen\n  platform/x86: toshiba_acpi: constify attribute_group structures.\n  platform/x86: asus-wmi: constify attribute_group structures.\n  platform/x86: panasonic-laptop: constify attribute_group structures.\n  platform/x86: alienware-wmi: constify attribute_group structures.\n  platform/x86: samsung-laptop: constify attribute_group structures.\n  platform/x86: compal-laptop: constify attribute_group structures.\n  platform/x86: fujitsu-laptop: constify attribute_group structures.\n  platform/x86: peaq-wmi: Fix peaq_ignore_events_counter handling off by 1\n  platform/x86: fujitsu-laptop: add NULL check on devm_kzalloc() return value\n  platform/x86: silead_dmi: Add touchscreen info for I.T.Works TW891 2-in-1\n  platform/x86: ideapad-laptop: Fix indentation in DMI table\n  platform/x86: ideapad-laptop: Add several models to no_hw_rfkill\n  platform/x86: ideapad-laptop: Add IdeaPad V510-15IKB to no_hw_rfkill\n  platform/x86: intel_telemetry: Add debugfs entry for S0ix residency\n  platform/x86: intel_telemetry_debugfs: fix some error codes in init\n  platform/x86: intel_telemetry_debugfs: fix oops when load/unload module Merge tag 'vfio-v4.13-rc1' of git://github.com/awilliam/linux-vfio\n\nPull VFIO updates from Alex Williamson:\n\n - Include Intel XXV710 in INTx workaround (Alex Williamson)\n\n - Make use of ERR_CAST() for error return (Dan Carpenter)\n\n - Fix vfio_group release deadlock from iommu notifier (Alex Williamson)\n\n - Unset KVM-VFIO attributes only on group match (Alex Williamson)\n\n - Fix release path group/file matching with KVM-VFIO (Alex Williamson)\n\n - Remove unnecessary lock uses triggering lockdep splat (Alex Williamson)\n\n* tag 'vfio-v4.13-rc1' of git://github.com/awilliam/linux-vfio:\n  vfio: Remove unnecessary uses of vfio_container.group_lock\n  vfio: New external user group/file match\n  kvm-vfio: Decouple only when we match a group\n  vfio: Fix group release deadlock\n  vfio: Use ERR_CAST() instead of open coding it\n  vfio/pci: Add Intel XXV710 to hidden INTx devices Merge tag 'rtc-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux\n\nPull RTC updates from Alexandre Belloni:\n \"Here is the pull-request for the RTC subsystem for 4.13.\n\n  Subsystem:\n\n   - expose non volatile RAM using nvmem instead of open coding in many\n     drivers. Unfortunately, this option has to be enabled by default to\n     not break existing users.\n\n   - rtctest can now test for cutoff dates, showing when an RTC will\n     start failing to properly save time and date.\n\n   - new RTC registration functions to remove race conditions in drivers\n\n  Newly supported RTCs:\n\n   - Broadcom STB wake-timer\n\n   - Epson RX8130CE\n\n   - Maxim IC DS1308\n\n   - STMicroelectronics STM32H7\n\n  Drivers:\n\n   - ds1307: use regmap, use nvmem, more cleanups\n\n   - ds3232: temperature reading support\n\n   - gemini: renamed to ftrtc010\n\n   - m41t80: use CCF to expose the clock\n\n   - rv8803: use nvmem\n\n   - s3c: many cleanups\n\n   - st-lpc: fix y2106 bug\"\n\n* tag 'rtc-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux: (51 commits)\n  rtc: Remove wrong deprecation comment\n  nvmem: include linux/err.h from header\n  rtc: st-lpc: make it robust against y2038/2106 bug\n  rtc: rtctest: add check for problematic dates\n  tools: timer: add rtctest_setdate\n  rtc: ds1307: remove ds1307_remove\n  rtc: ds1307: use generic nvmem\n  rtc: ds1307: switch to rtc_register_device\n  rtc: rv8803: remove rv8803_remove\n  rtc: rv8803: use generic nvmem support\n  rtc: rv8803: switch to rtc_register_device\n  rtc: add generic nvmem support\n  rtc: at91rm9200: remove race condition\n  rtc: introduce new registration method\n  rtc: class separate id allocation from registration\n  rtc: class separate device allocation from registration\n  rtc: stm32: add STM32H7 RTC support\n  dt-bindings: rtc: stm32: add support for STM32H7\n  rtc: ds1307: add ds1308 variant\n  rtc: ds3232: add temperature support\n  ... Merge tag 'for-linus-20170713' of git://git.infradead.org/linux-mtd\n\nPull MTD updates from Brian Norris:\n \"General updates:\n   - Cleanups and additional flash support for \"dataflash\" driver\n   - new driver for mchp23k256 SPI SRAM device\n   - improve handling of MTDs without eraseblocks (i.e., MTD_NO_ERASE)\n   - refactor and improve \"sub-partition\" handling with TRX partition\n     parser; partitions can now be created as sub-partitions of another\n     partition\n\n  SPINOR updates, from Cyrille Pitchen and Marek Vasut:\n   - introduce support to the SPI 1-2-2 and 1-4-4 protocols.\n   - introduce support to the Double Data Rate (DDR) mode.\n   - introduce support to the Octo SPI protocols.\n   - add support to new memory parts for Spansion, Macronix and Winbond.\n   - add fixes for the Aspeed, STM32 and Cadence QSPI controler drivers.\n   - clean up the st_spi_fsm driver.\n\n  NAND updates, from Boris Brezillon:\n   - addition of on-die ECC support to Micron driver\n   - addition of helpers to help drivers choose most appropriate ECC\n     settings\n   - deletion of dead-code (cached programming and ->errstat() hook)\n   - make sure drivers that do not support the SET/GET FEATURES command\n     return ENOTSUPP use a dummy ->set/get_features implementation\n     returning -ENOTSUPP (required for Micron on-die ECC)\n   - change the semantic of ecc->write_page() for drivers setting the\n     NAND_ECC_CUSTOM_PAGE_ACCESS flag\n   - support exiting 'GET STATUS' command in default ->cmdfunc()\n     implementations\n   - change the prototype of ->setup_data_interface()\n\n  A bunch of driver related changes:\n   - various cleanup, fixes and improvements of the MTK driver\n   - OMAP DT bindings fixes\n   - support for ->setup_data_interface() in the fsmc driver\n   - support for imx7 in the gpmi driver\n   - finalization of the denali driver rework (thanks to Masahiro for\n     the work he's done on this driver)\n   - fix \"bitflips in erased pages\" handling in the ifc driver\n   - addition of PM ops and dynamic timing configuration to the atmel\n     driver\"\n\n* tag 'for-linus-20170713' of git://git.infradead.org/linux-mtd: (118 commits)\n  Documentation: ABI: mtd: describe \"offset\" more precisely\n  mtd: Fix check in mtd_unpoint()\n  mtd: nand: mtk: release lock on error path\n  mtd: st_spi_fsm: remove SPINOR_OP_RDSR2 and use SPINOR_OP_RDCR instead\n  mtd: spi-nor: cqspi: remove duplicate const\n  mtd: spi-nor: Add support for Spansion S25FL064L\n  mtd: spi-nor: Add support for mx66u51235f\n  mtd: nand: mtk: add ->setup_data_interface() hook\n  mtd: nand: mtk: remove unneeded mtk_ecc_hw_init from mtk_ecc_resume\n  mtd: nand: mtk: remove unneeded mtk_nfc_hw_init from mtk_nfc_resume\n  mtd: nand: mtk: disable ecc irq when writing page with hwecc\n  mtd: nand: mtk: fix incorrect register setting order about ecc irq\n  mtd: partitions: fixup some allocate_partition() whitespace\n  mtd: parsers: trx: fix pr_err format for printing offset\n  MAINTAINERS: Update SPI NOR subsystem git repositories\n  mtd: extract TRX parser out of bcm47xxpart into a separated module\n  mtd: partitions: add support for partition parsers\n  mtd: partitions: add support for subpartitions\n  mtd: partitions: rename \"master\" to the \"parent\" where appropriate\n  mtd: partitions: remove sysfs files when deleting all master's partitions\n  ... Merge tag 'fbdev-v4.13' of git://github.com/bzolnier/linux\n\nPull fbdev updates from Bartlomiej Zolnierkiewicz:\n \"There is nothing really major here, just a couple of small bugfixes,\n  improvements and cleanups.\n\n   - fix get_fb_unmapped_area() helper handling (Benjamin Gaignard)\n\n   - check return value of clk_prepare_enable() in pxafb driver (Arvind\n     Yadav)\n\n   - fix error path handling in vmlfb driver (Alexey Khoroshilov)\n\n   - printks fixes/cleanups for uvesafb driver (Joe Perches)\n\n   - fix unusued variable warning in atyfb driver (Arnd Bergmann)\n\n   - constifications for sh_mobile_lcdcfb, fsl-diu-fb, omapfb (Arvind\n     Yadav)\n\n   - mdacon driver cleanups (Jiri Slaby)\n\n   - misc cleanups (Andy Shevchenko, Karim Eshapa, Gustavo A. R. Silva,\n     Dan Carpenter)\"\n\n* tag 'fbdev-v4.13' of git://github.com/bzolnier/linux:\n  fbdev: make get_fb_unmapped_area depends of !MMU\n  atyfb: hide unused variable\n  video: fbdev: matrox: the list iterator can't be NULL\n  video: fbdev: aty: remove useless variable assignments in aty_var_to_crtc()\n  fbdev: omapfb: constify ctrl_caps, color_caps, panel_attr_grp and ctrl_attr_grp\n  omapfb: panel-dsi-cm: constify dsicm_attr_group\n  vmlfb: Fix error handling in cr_pll_init()\n  video: fbdev: fsl-diu-fb: constify mfb_template and fsl_diu_match.\n  uvesafb: Fix continuation printks without KERN_LEVEL to pr_cont, neatening\n  video: fbdev: sh_mobile_lcdcfb: constify sh_mobile_lcdc_bl_ops.\n  omapfb: Use sysfs_match_string() helper\n  video: fbdev: pxafb: Handle return value of clk_prepare_enable\n  video: fbdev: omap2: omapfb: displays: panel-dsi-cm: Use time comparison kernel macro.\n  mdacon: replace MDA_ADDR macro by inline function\n  mdacon: make mda_vram_base u16 *\n  mdacon: align code in mda_detect properly Merge tag 'pwm/for-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm\n\nPull pwm updates from Thierry Reding:\n \"This release cycle's changes include mostly updates and cleanups to\n  existing drivers along with a few cleanups to the core, documentation\n  and device tree bindings\"\n\n* tag 'pwm/for-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm:\n  pwm: cros-ec: Fix transposed param settings\n  pwm: meson: Improve PWM calculation precision\n  dt-bindings: pwm: meson: Add compatible for gxbb ao PWMs\n  pwm: meson: Add compatible for the gxbb ao PWMs\n  pwm: sun4i: Drop legacy callbacks\n  pwm: sun4i: Switch to atomic PWM\n  pwm: sun4i: Improve hardware read out\n  pwm: hibvt: Constify hibvt_pwm_ops\n  pwm: Silently error out on EPROBE_DEFER\n  pwm: Standardize document format\n  pwm: bfin: Remove unneeded error message\n  dt-bindings: pwm: Update STM32 timers clock names\n  dt-bindings: pwm: Add R-Car M3-W device tree bindings\n  pwm: tegra: Set maximum pwm clock source per SoC tapeout Merge tag 'for-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply\n\nPull power supply fixes from  Reichel:\n \"I have two more fixes for the power-supply subsystem:\n\n   - two fixes for twl4030-charger\"\n\n* tag 'for-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply:\n  power: supply: twl4030-charger: add deferred probing for phy and iio\n  power: supply: twl4030-charger: move irq allocation to just before irqs are enabled Merge tag 'drm-fixes-for-v4.13-rc1' of git://people.freedesktop.org/~airlied/linux\n\nPull more drm updates from Dave Airlie:\n \"i915, amd and some core fixes + mediatek color support.\n\n  Some fixes tree came in since the main pull request for rc1, primarily\n  i915 and drm-misc and one amd fix. The drm core vblank regression fix\n  is probably the most important thing.\n\n  I've also added the mediatek feature pull, it wasn't that big and\n  didn't look like it would have any impact outside of mediatek, in fact\n  it looks to just be a single feature, and some cleanups\"\n\n* tag 'drm-fixes-for-v4.13-rc1' of git://people.freedesktop.org/~airlied/linux: (31 commits)\n  drm/i915: Make DP-MST connector info work\n  drm/i915/gvt: Use fence error from GVT request for workload status\n  drm/i915/gvt: remove scheduler_mutex in per-engine workload_thread\n  drm/i915/gvt: Revert \"drm/i915/gvt: Fix possible recursive locking issue\"\n  drm/i915/gvt: Audit the command buffer address\n  drm/i915/gvt: Fix a memory leak in intel_gvt_init_gtt()\n  drm/rockchip: fix NULL check on devm_kzalloc() return value\n  drm/i915/fbdev: Check for existence of ifbdev->vma before operations\n  drm/radeon: Fix eDP for single-display iMac10,1 (v2)\n  drm/i915: Hold RPM wakelock while initializing OA buffer\n  drm/i915/cnl: Fix the CURSOR_COEFF_MASK used in DDI Vswing Programming\n  drm/i915/cfl: Fix Workarounds.\n  drm/i915: Avoid undefined behaviour of \"u32 >> 32\"\n  drm/i915: reintroduce VLV/CHV PFI programming power domain workaround\n  drm/i915: Fix an error checking test\n  drm/i915: Disable MSI for all pre-gen5\n  drm/atomic: Add missing drm_atomic_state_clear to atomic_remove_fb\n  drm: vblank: Fix vblank timestamp update\n  drm/i915/gvt: Make function dpy_reg_mmio_readx safe\n  drm/mediatek: separate color module to fixup error memory reallocation\n  ... Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull sysctl fix from Eric Biederman:\n \"A rather embarassing and hard to hit bug was merged into 4.11-rc1.\n\n  Andrei Vagin tracked this bug now and after some staring at the code\n  I came up with a fix\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  proc: Fix proc_sys_prune_dcache to hold a sb reference Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n\n1) Fix 64-bit division in mlx5 IPSEC offload support, from Ilan Tayari\n   and Arnd Bergmann.\n\n2) Fix race in statistics gathering in bnxt_en driver, from Michael\n   Chan.\n\n3) Can't use a mutex in RCU reader protected section on tap driver, from\n   Cong WANG.\n\n4) Fix mdb leak in bridging code, from Eduardo Valentin.\n\n5) Fix free of wrong pointer variable in nfp driver, from Dan Carpenter.\n\n6) Buffer overflow in brcmfmac driver, from Arend van SPriel.\n\n7) ioremap_nocache() return value needs to be checked in smsc911x\n   driver, from Alexey Khoroshilov.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (34 commits)\n  net: stmmac: revert \"support future possible different internal phy mode\"\n  sfc: don't read beyond unicast address list\n  datagram: fix kernel-doc comments\n  socket: add documentation for missing elements\n  smsc911x: Add check for ioremap_nocache() return code\n  brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()\n  net: hns: Bugfix for Tx timeout handling in hns driver\n  net: ipmr: ipmr_get_table() returns NULL\n  nfp: freeing the wrong variable\n  mlxsw: spectrum_switchdev: Check status of memory allocation\n  mlxsw: spectrum_switchdev: Remove unused variable\n  mlxsw: spectrum_router: Fix use-after-free in route replace\n  mlxsw: spectrum_router: Add missing rollback\n  samples/bpf: fix a build issue\n  bridge: mdb: fix leak on complete_info ptr on fail path\n  tap: convert a mutex to a spinlock\n  cxgb4: fix BUG() on interrupt deallocating path of ULD\n  qed: Fix printk option passed when printing ipv6 addresses\n  net: Fix minor code bug in timestamping.txt\n  net: stmmac: Make 'alloc_dma_[rt]x_desc_resources()' look even closer\n  ... disable new gcc-7.1.1 warnings for now\n\nI made the mistake of upgrading my desktop to the new Fedora 26 that\ncomes with gcc-7.1.1.\n\nThere's nothing wrong per se that I've noticed, but I now have 1500\nlines of warnings, mostly from the new format-truncation warning\ntriggering all over the tree.\n\nWe use 'snprintf()' and friends in a lot of places, and often know that\nthe numbers are fairly small (ie a controller index or similar), but gcc\ndoesn't know that, and sees an 'int', and thinks that it could be some\nhuge number.  And then complains when our buffers are not able to fit\nthe name for the ten millionth controller.\n\nThese warnings aren't necessarily bad per se, and we probably want to\nlook through them subsystem by subsystem, but at least during the merge\nwindow they just mean that I can't even see if somebody is introducing\nany *real* problems when I pull.\n\nSo warnings disabled for now.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'modules-for-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux\n\nPull modules updates from Jessica Yu:\n \"Summary of modules changes for the 4.13 merge window:\n\n   - Minor code cleanups\n\n   - Avoid accessing mod struct prior to checking module struct version,\n     from Kees\n\n   - Fix racy atomic inc/dec logic of kmod_concurrent_max in kmod, from\n     Luis\"\n\n* tag 'modules-for-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux:\n  module: make the modinfo name const\n  kmod: reduce atomic operations on kmod_concurrent and simplify\n  module: use list_for_each_entry_rcu() on find_module_all()\n  kernel/module.c: suppress warning about unused nowarn variable\n  module: Add module name to modinfo\n  module: Pass struct load_info into symbol checks Merge branch 'i2c/for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c updates from Wolfram Sang:\n \"This pull request contains:\n\n   - i2c core reorganization. One source file became too monolithic. It\n     is now split up, yet we still have the same named object as the\n     final output. This should ease maintenance.\n\n   - new drivers: ZTE ZX2967 family, ASPEED 24XX/25XX\n\n   - designware driver gained slave mode support\n\n   - xgene-slimpro driver gained ACPI support\n\n   - bigger overhaul for pca-platform driver\n\n   - the algo-bit module now supports messages with enforced STOP\n\n   - slightly bigger than usual set of driver updates and improvements\n\n  and with much appreciated quality assurance from Andy Shevchenko\"\n\n* 'i2c/for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux: (51 commits)\n  i2c: Provide a stub for i2c_detect_slave_mode()\n  i2c: designware: Let slave adapter support be optional\n  i2c: designware: Make HW init functions static\n  i2c: designware: fix spelling mistakes\n  i2c: pca-platform: propagate error from i2c_pca_add_numbered_bus\n  i2c: pca-platform: correctly set algo_data.reset_chip\n  i2c: acpi: Do not create i2c-clients for LNXVIDEO ACPI devices\n  i2c: designware: enable SLAVE in platform module\n  i2c: designware: add SLAVE mode functions\n  i2c: zx2967: drop COMPILE_TEST dependency\n  i2c: zx2967: always use the same device when printing errors\n  i2c: pca-platform: use dev_warn/dev_info instead of printk\n  i2c: pca-platform: use device managed allocations\n  i2c: pca-platform: add devicetree awareness\n  i2c: pca-platform: switch to struct gpio_desc\n  dt-bindings: add bindings for i2c-pca-platform\n  i2c: cadance: fix ctrl/addr reg write order\n  i2c: zx2967: add i2c controller driver for ZTE's zx2967 family\n  dt: bindings: add documentation for zx2967 family i2c controller\n  i2c: algo-bit: add support for I2C_M_STOP\n  ... Merge tag 'iommu-updates-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu\n\nPull IOMMU updates from Joerg Roedel:\n \"This update comes with:\n\n   - Support for lockless operation in the ARM io-pgtable code.\n\n     This is an important step to solve the scalability problems in the\n     common dma-iommu code for ARM\n\n   - Some Errata workarounds for ARM SMMU implemenations\n\n   - Rewrite of the deferred IO/TLB flush code in the AMD IOMMU driver.\n\n     The code suffered from very high flush rates, with the new\n     implementation the flush rate is down to ~1% of what it was before\n\n   - Support for amd_iommu=off when booting with kexec.\n\n     The problem here was that the IOMMU driver bailed out early without\n     disabling the iommu hardware, if it was enabled in the old kernel\n\n   - The Rockchip IOMMU driver is now available on ARM64\n\n   - Align the return value of the iommu_ops->device_group call-backs to\n     not miss error values\n\n   - Preempt-disable optimizations in the Intel VT-d and common IOVA\n     code to help Linux-RT\n\n   - Various other small cleanups and fixes\"\n\n* tag 'iommu-updates-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu: (60 commits)\n  iommu/vt-d: Constify intel_dma_ops\n  iommu: Warn once when device_group callback returns NULL\n  iommu/omap: Return ERR_PTR in device_group call-back\n  iommu: Return ERR_PTR() values from device_group call-backs\n  iommu/s390: Use iommu_group_get_for_dev() in s390_iommu_add_device()\n  iommu/vt-d: Don't disable preemption while accessing deferred_flush()\n  iommu/iova: Don't disable preempt around this_cpu_ptr()\n  iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #126\n  iommu/arm-smmu-v3: Enable ACPI based HiSilicon CMD_PREFETCH quirk(erratum 161010701)\n  iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #74\n  ACPI/IORT: Fixup SMMUv3 resource size for Cavium ThunderX2 SMMUv3 model\n  iommu/arm-smmu-v3, acpi: Add temporary Cavium SMMU-V3 IORT model number definitions\n  iommu/io-pgtable-arm: Use dma_wmb() instead of wmb() when publishing table\n  iommu/io-pgtable: depend on !GENERIC_ATOMIC64 when using COMPILE_TEST with LPAE\n  iommu/arm-smmu-v3: Remove io-pgtable spinlock\n  iommu/arm-smmu: Remove io-pgtable spinlock\n  iommu/io-pgtable-arm-v7s: Support lockless operation\n  iommu/io-pgtable-arm: Support lockless operation\n  iommu/io-pgtable: Introduce explicit coherency\n  iommu/io-pgtable-arm-v7s: Refactor split_blk_unmap\n  ... Merge branch 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull overlayfs updates from Miklos Szeredi:\n \"This work from Amir introduces the inodes index feature, which\n  provides:\n\n   - hardlinks are not broken on copy up\n\n   - infrastructure for overlayfs NFS export\n\n  This also fixes constant st_ino for samefs case for lower hardlinks\"\n\n* 'overlayfs-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs: (33 commits)\n  ovl: mark parent impure and restore timestamp on ovl_link_up()\n  ovl: document copying layers restrictions with inodes index\n  ovl: cleanup orphan index entries\n  ovl: persistent overlay inode nlink for indexed inodes\n  ovl: implement index dir copy up\n  ovl: move copy up lock out\n  ovl: rearrange copy up\n  ovl: add flag for upper in ovl_entry\n  ovl: use struct copy_up_ctx as function argument\n  ovl: base tmpfile in workdir too\n  ovl: factor out ovl_copy_up_inode() helper\n  ovl: extract helper to get temp file in copy up\n  ovl: defer upper dir lock to tempfile link\n  ovl: hash overlay non-dir inodes by copy up origin\n  ovl: cleanup bad and stale index entries on mount\n  ovl: lookup index entry for copy up origin\n  ovl: verify index dir matches upper dir\n  ovl: verify upper root dir matches lower root dir\n  ovl: introduce the inodes index dir feature\n  ovl: generalize ovl_create_workdir()\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc\n\nPull sparc fixes from David Miller:\n\n - Fix symbol version generation for assembler on sparc, from\n   Nagarathnam Muthusamy.\n\n - Fix compound page handling in gup_huge_pmd(), from Nitin Gupta.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc:\n  sparc64: Fix gup_huge_pmd\n  Adding the type of exported symbols\n  sed regex in Makefile.build requires line break between exported symbols\n  Adding asm-prototypes.h for genksyms to generate crc Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull more block updates from Jens Axboe:\n \"This is a followup for block changes, that didn't make the initial\n  pull request. It's a bit of a mixed bag, this contains:\n\n   - A followup pull request from Sagi for NVMe. Outside of fixups for\n     NVMe, it also includes a series for ensuring that we properly\n     quiesce hardware queues when browsing live tags.\n\n   - Set of integrity fixes from Dmitry (mostly), fixing various issues\n     for folks using DIF/DIX.\n\n   - Fix for a bug introduced in cciss, with the req init changes. From\n     Christoph.\n\n   - Fix for a bug in BFQ, from Paolo.\n\n   - Two followup fixes for lightnvm/pblk from Javier.\n\n   - Depth fix from Ming for blk-mq-sched.\n\n   - Also from Ming, performance fix for mtip32xx that was introduced\n     with the dynamic initialization of commands\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block: (44 commits)\n  block: call bio_uninit in bio_endio\n  nvmet: avoid unneeded assignment of submit_bio return value\n  nvme-pci: add module parameter for io queue depth\n  nvme-pci: compile warnings in nvme_alloc_host_mem()\n  nvmet_fc: Accept variable pad lengths on Create Association LS\n  nvme_fc/nvmet_fc: revise Create Association descriptor length\n  lightnvm: pblk: remove unnecessary checks\n  lightnvm: pblk: control I/O flow also on tear down\n  cciss: initialize struct scsi_req\n  null_blk: fix error flow for shared tags during module_init\n  block: Fix __blkdev_issue_zeroout loop\n  nvme-rdma: unconditionally recycle the request mr\n  nvme: split nvme_uninit_ctrl into stop and uninit\n  virtio_blk: quiesce/unquiesce live IO when entering PM states\n  mtip32xx: quiesce request queues to make sure no submissions are inflight\n  nbd: quiesce request queues to make sure no submissions are inflight\n  nvme: kick requeue list when requeueing a request instead of when starting the queues\n  nvme-pci: quiesce/unquiesce admin_q instead of start/stop its hw queues\n  nvme-loop: quiesce/unquiesce admin_q instead of start/stop its hw queues\n  nvme-fc: quiesce/unquiesce admin_q instead of start/stop its hw queues\n  ... Merge tag 'smb3-security-fixes-for-4.13' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes and sane default from Steve French:\n \"Upgrade default dialect to more secure SMB3 from older cifs dialect\"\n\n* tag 'smb3-security-fixes-for-4.13' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: Clean up unused variables in smb2pdu.c\n  [SMB3] Improve security, move default dialect to SMB3 from old CIFS\n  [SMB3] Remove ifdef since SMB3 (and later) now STRONGLY preferred\n  CIFS: Reconnect expired SMB sessions\n  CIFS: Display SMB2 error codes in the hex format\n  cifs: Use smb 2 - 3 and cifsacl mount options setacl function\n  cifs: prototype declaration and definition to set acl for smb 2 - 3 and cifsacl mount options Merge tag 'ceph-for-4.13-rc1' of git://github.com/ceph/ceph-client\n\nPull ceph updates from Ilya Dryomov:\n \"The main item here is support for v12.y.z (\"Luminous\") clusters:\n  RESEND_ON_SPLIT, RADOS_BACKOFF, OSDMAP_PG_UPMAP and CRUSH_CHOOSE_ARGS\n  feature bits, and various other changes in the RADOS client protocol.\n\n  On top of that we have a new fsc mount option to allow supplying\n  fscache uniquifier (similar to NFS) and the usual pile of filesystem\n  fixes from Zheng\"\n\n* tag 'ceph-for-4.13-rc1' of git://github.com/ceph/ceph-client: (44 commits)\n  libceph: advertise support for NEW_OSDOP_ENCODING and SERVER_LUMINOUS\n  libceph: osd_state is 32 bits wide in luminous\n  crush: remove an obsolete comment\n  crush: crush_init_workspace starts with struct crush_work\n  libceph, crush: per-pool crush_choose_arg_map for crush_do_rule()\n  crush: implement weight and id overrides for straw2\n  libceph: apply_upmap()\n  libceph: compute actual pgid in ceph_pg_to_up_acting_osds()\n  libceph: pg_upmap[_items] infrastructure\n  libceph: ceph_decode_skip_* helpers\n  libceph: kill __{insert,lookup,remove}_pg_mapping()\n  libceph: introduce and switch to decode_pg_mapping()\n  libceph: don't pass pgid by value\n  libceph: respect RADOS_BACKOFF backoffs\n  libceph: make DEFINE_RB_* helpers more general\n  libceph: avoid unnecessary pi lookups in calc_target()\n  libceph: use target pi for calc_target() calculations\n  libceph: always populate t->target_{oid,oloc} in calc_target()\n  libceph: make sure need_resend targets reflect latest map\n  libceph: delete from need_resend_linger before check_linger_pool_dne()\n  ... Merge git://www.linux-watchdog.org/linux-watchdog\n\nPull watchdog updates from Wim Van Sebroeck:\n\n - Add Renesas RZ/A WDT Watchdog driver\n\n - STM32 Independent WatchDoG (IWDG) support\n\n - UniPhier watchdog support\n\n - Add F71868 support\n\n - Add support for NCT6793D and NCT6795D\n\n - dw_wdt: add reset lines support\n\n - core: add option to avoid early handling of watchdog\n\n - core: introduce watchdog_worker_should_ping helper\n\n - Cleanups and improvements for sama5d4, intel-mid_wdt, s3c2410_wdt,\n   orion_wdt, gpio_wdt, it87_wdt, meson_wdt, davinci_wdt, bcm47xx_wdt,\n   zx2967_wdt, cadence_wdt\n\n* git://www.linux-watchdog.org/linux-watchdog: (32 commits)\n  watchdog: introduce watchdog_worker_should_ping helper\n  watchdog: uniphier: add UniPhier watchdog driver\n  dt-bindings: watchdog: add description for UniPhier WDT controller\n  watchdog: cadence_wdt: make of_device_ids const.\n  watchdog: zx2967: constify zx2967_wdt_ops.\n  watchdog: bcm47xx_wdt: constify bcm47xx_wdt_hard_ops and bcm47xx_wdt_soft_ops\n  watchdog: davinci: Add missing clk_disable_unprepare().\n  watchdog: davinci: Handle return value of clk_prepare_enable\n  watchdog: meson: Handle return value of clk_prepare_enable\n  watchdog: it87: Add support for various Super-IO chips\n  watchdog: it87: Use infrastructure to stop watchdog on reboot\n  watchdog: it87: Drop support for resetting watchdog though CIR and Game port\n  watchdog: it87: Convert to use watchdog core infrastructure\n  watchdog: it87: Drop FSF mailing address\n  watchdog: dw_wdt: get reset lines from dt\n  watchdog: bindings: dw_wdt: add reset lines\n  watchdog: w83627hf: Add support for NCT6793D and NCT6795D\n  watchdog: core: add option to avoid early handling of watchdog\n  watchdog: f71808e_wdt: Add F71868 support\n  watchdog: Add STM32 IWDG driver\n  ... Merge tag 'chrome-platform-for-linus-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/bleung/chrome-platform\n\nPull chrome platform updates from Benson Leung:\n \"Changes in this pull request are around catching up cros_ec with the\n  internal chromeos-kernel versions of cros_ec, cros_ec_lpc, and\n  cros_ec_lightbar.\n\n  Also, switching maintainership from olof to bleung\"\n\n* tag 'chrome-platform-for-linus-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/bleung/chrome-platform:\n  platform/chrome : Add myself as Maintainer\n  platform/chrome: cros_ec_lightbar - hide unused PM functions\n  cros_ec: Don't signal wake event for non-wake host events\n  cros_ec: Fix deadlock when EC is not responsive at probe\n  cros_ec: Don't return error when checking command version\n  platform/chrome: cros_ec_lightbar - Avoid I2C xfer to EC during suspend\n  platform/chrome: cros_ec_lightbar - Add userspace lightbar control bit to EC\n  platform/chrome: cros_ec_lightbar - Control of suspend/resume lightbar sequence\n  platform/chrome: cros_ec_lightbar - Add lightbar program feature to sysfs\n  platform/chrome: cros_ec_lpc: Add MKBP events support over ACPI\n  platform/chrome: cros_ec_lpc: Add power management ops\n  platform/chrome: cros_ec_lpc: Add support for GOOG004 ACPI device\n  platform/chrome: cros_ec_lpc: Add support for mec1322 EC\n  platform/chrome: cros_ec_lpc: Add R/W helpers to LPC protocol variants\n  mfd: cros_ec: Add support for dumping panic information\n  cros_ec_debugfs: Pass proper struct sizes to cros_ec_cmd_xfer()\n  mfd: cros_ec: add debugfs, console log file\n  mfd: cros_ec: Add EC console read structures definitions\n  mfd: cros_ec: Add helper for event notifier. Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu\n\nPull x86nommu update from Greg Ungerer:\n \"Only a single change, to remove old Kconfig options from defconfigs\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu:\n  m68k: defconfig: Cleanup from old Kconfig options Merge branch 'akpm' (patches from Andrew)\n\nMerge more updates from Andrew Morton:\n\n - most of the rest of MM\n\n - KASAN updates\n\n - lib/ updates\n\n - checkpatch updates\n\n - some binfmt_elf changes\n\n - various misc bits\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>: (115 commits)\n  kernel/exit.c: avoid undefined behaviour when calling wait4()\n  kernel/signal.c: avoid undefined behaviour in kill_something_info\n  binfmt_elf: safely increment argv pointers\n  s390: reduce ELF_ET_DYN_BASE\n  powerpc: move ELF_ET_DYN_BASE to 4GB / 4MB\n  arm64: move ELF_ET_DYN_BASE to 4GB / 4MB\n  arm: move ELF_ET_DYN_BASE to 4MB\n  binfmt_elf: use ELF_ET_DYN_BASE only for PIE\n  fs, epoll: short circuit fetching events if thread has been killed\n  checkpatch: improve multi-line alignment test\n  checkpatch: improve macro reuse test\n  checkpatch: change format of --color argument to --color[=WHEN]\n  checkpatch: silence perl 5.26.0 unescaped left brace warnings\n  checkpatch: improve tests for multiple line function definitions\n  checkpatch: remove false warning for commit reference\n  checkpatch: fix stepping through statements with $stat and ctx_statement_block\n  checkpatch: [HLP]LIST_HEAD is also declaration\n  checkpatch: warn when a MAINTAINERS entry isn't [A-Z]:\\t\n  checkpatch: improve the unnecessary OOM message test\n  lib/bsearch.c: micro-optimize pivot position calculation\n  ... Merge tag 'devprop-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull device properties framework updates from Rafael Wysocki:\n \"These mostly rearrange the device properties core code and add a few\n  helper functions to it as a foundation for future work.\n\n  Specifics:\n\n   - Rearrange the core device properties code by moving the code\n     specific to each supported platform configuration framework (ACPI,\n     DT and build-in) into a separate file (Sakari Ailus).\n\n   - Add helper functions for accessing device properties in a\n     firmware-agnostic way (Sakari Ailus, Kieran Bingham)\"\n\n* tag 'devprop-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  device property: Add fwnode_graph_get_port_parent\n  device property: Add FW type agnostic fwnode_graph_get_remote_node\n  device property: Introduce fwnode_device_is_available()\n  device property: Move fwnode graph ops to firmware specific locations\n  device property: Move FW type specific functionality to FW specific files\n  ACPI: Constify argument to acpi_device_is_present() Merge tag 'acpi-extra-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull more ACPI updates from Rafael Wysocki:\n \"These fix the ACPI SPCR table handling and add a workaround for APM\n  X-Gene 8250 UART on top of that, fix two ACPI hotplug issues related\n  to hot-remove failures, add a missing \"static\" to one function and\n  constify some attribute_group structures.\n\n  Specifics:\n\n   - Fix the ACPI code handling the SPCR table to check access width of\n     MMIO regions and add a workaround for APM X-Gene 8250 UART to use\n     32-bit MMIO accesses with its register (Loc Ho).\n\n   - Fix two ACPI-based hotplug issues related to the handling of\n     hot-remove failures on the OS side (Chun-Yi Lee).\n\n   - Constify attribute_group structures in a few places (Arvind Yadav).\n\n   - Make one local function static (Colin Ian King)\"\n\n* tag 'acpi-extra-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / DPTF: constify attribute_group structures\n  ACPI / LPSS: constify attribute_group structures\n  ACPI: BGRT: constify attribute_group structures\n  ACPI / power: constify attribute_group structures\n  ACPI / scan: Indicate to platform when hot remove returns busy\n  ACPI / bus: handle ACPI hotplug schedule errors completely\n  ACPI / osi: Make local function acpi_osi_dmi_linux() static\n  ACPI: SPCR: Workaround for APM X-Gene 8250 UART 32-alignment errata\n  ACPI: SPCR: Use access width to determine mmio usage Merge tag 'pm-extra-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull more power management updates from Rafael Wysocki:\n \"These revert one recent change in the generic power domains\n  framework, fix a recently introduced build issue in there and\n  constify attribute_group structures in some places.\n\n  Specifics:\n\n   - Revert a recent change in the generic power domains (genpd)\n     framework that led to regressions and turned out the be misguided\n     (Rafael Wysocki).\n\n   - Fix a recently introduced build issue in the generic power domains\n     (genpd) framework (Arnd Bergmann).\n\n   - Constify attribute_group structures in the PM core, the cpufreq\n     stats code and in intel_pstate (Arvind Yadav)\"\n\n* tag 'pm-extra-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  cpufreq: intel_pstate: constify attribute_group structures\n  cpufreq: cpufreq_stats: constify attribute_group structures\n  PM / sleep: constify attribute_group structures\n  PM / Domains: provide pm_genpd_poweroff_noirq() stub\n  Revert \"PM / Domains: Handle safely genpd_syscore_switch() call on non-genpd device\" Merge tag 'for-f2fs-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've added new features such as disk quota and statx,\n  and modified internal bio management flow to merge more IOs depending\n  on block types. We've also made internal threads freezeable for\n  Android battery life. In addition to them, there are some patches to\n  avoid lock contention as well as a couple of deadlock conditions.\n\n  Enhancements:\n   - support usrquota, grpquota, and statx\n   - manage DATA/NODE typed bios separately to serialize more IOs\n   - modify f2fs_lock_op/wio_mutex to avoid lock contention\n   - prevent lock contention in migratepage\n\n  Bug fixes:\n   - fix missing load of written inode flag\n   - fix worst case victim selection in GC\n   - freezeable GC and discard threads for Android battery life\n   - sanitize f2fs metadata to deal with security hole\n   - clean up sysfs-related code and docs\"\n\n* tag 'for-f2fs-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (59 commits)\n  f2fs: support plain user/group quota\n  f2fs: avoid deadlock caused by lock order of page and lock_op\n  f2fs: use spin_{,un}lock_irq{save,restore}\n  f2fs: relax migratepage for atomic written page\n  f2fs: don't count inode block in in-memory inode.i_blocks\n  Revert \"f2fs: fix to clean previous mount option when remount_fs\"\n  f2fs: do not set LOST_PINO for renamed dir\n  f2fs: do not set LOST_PINO for newly created dir\n  f2fs: skip ->writepages for {mete,node}_inode during recovery\n  f2fs: introduce __check_sit_bitmap\n  f2fs: stop gc/discard thread in prior during umount\n  f2fs: introduce reserved_blocks in sysfs\n  f2fs: avoid redundant f2fs_flush after remount\n  f2fs: report # of free inodes more precisely\n  f2fs: add ioctl to do gc with target block address\n  f2fs: don't need to check encrypted inode for partial truncation\n  f2fs: measure inode.i_blocks as generic filesystem\n  f2fs: set CP_TRIMMED_FLAG correctly\n  f2fs: require key for truncate(2) of encrypted file\n  f2fs: move sysfs code from super.c to fs/f2fs/sysfs.c\n  ... Fix up over-eager 'wait_queue_t' renaming\n\nCommit ac6424b981bc (\"sched/wait: Rename wait_queue_t =>\nwait_queue_entry_t\") had scripted the renaming incorrectly, and didn't\nactually check that the 'wait_queue_t' was a full token.\n\nAs a result, it also triggered on 'wait_queue_token', and renamed that\nto 'wait_queue_entry_token' entry in the autofs4 packet structure\ndefinition too.  That was entirely incorrect, and not intended.\n\nThe end result built fine when building just the kernel - because\neverything had been renamed consistently there - but caused problems in\nuser space because the \"struct autofs_packet_missing\" type is exported\nas part of the uapi.\n\nThis scripts it all back again:\n\n    git grep -lw wait_queue_entry_token |\n        xargs sed -i 's/wait_queue_entry_token/wait_queue_token/g'\n\nand checks the end result.\n\nReported-by: Florian Fainelli <f.fainelli@gmail.com>\nAcked-by: Ingo Molnar <mingo@kernel.org>\nFixes: ac6424b981bc (\"sched/wait: Rename wait_queue_t => wait_queue_entry_t\")\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'for-linus-4.13-v2' of git://github.com/cminyard/linux-ipmi\n\nPull IPMI updates from Corey Minyard:\n \"Some small fixes for IPMI, and one medium sized changed.\n\n  The medium sized change is adding a platform device for IPMI entries\n  in the DMI table. Otherwise there is no auto loading for IPMI devices\n  if they are only in the DMI table\"\n\n* tag 'for-linus-4.13-v2' of git://github.com/cminyard/linux-ipmi:\n  ipmi:ssif: Add missing unlock in error branch\n  char: ipmi: constify bmc_dev_attr_group and bmc_device_type\n  ipmi:ssif: Check dev before setting drvdata\n  ipmi: Convert DMI handling over to a platform device\n  ipmi: Create a platform device for a DMI-specified IPMI interface\n  ipmi: use rcu lock around call to intf->handlers->sender()\n  ipmi:ssif: Use i2c_adapter_id instead of adapter->nr\n  ipmi: Use the proper default value for register size in ACPI\n  ipmi_ssif: remove redundant null check on array client->adapter->name\n  ipmi/watchdog: fix watchdog timeout set on reboot\n  ipmi_ssif: unlock on allocation failure Merge tag 'xfs-4.13-merge-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull XFS updates from Darrick Wong:\n \"Here are some changes for you for 4.13. For the most part it's fixes\n  for bugs and deadlock problems, and preparation for online fsck in\n  some future merge window.\n\n   - Avoid quotacheck deadlocks\n\n   - Fix transaction overflows when bunmapping fragmented files\n\n   - Refactor directory readahead\n\n   - Allow admin to configure if ASSERT is fatal\n\n   - Improve transaction usage detail logging during overflows\n\n   - Minor cleanups\n\n   - Don't leak log items when the log shuts down\n\n   - Remove double-underscore typedefs\n\n   - Various preparation for online scrubbing\n\n   - Introduce new error injection configuration sysfs knobs\n\n   - Refactor dq_get_next to use extent map directly\n\n   - Fix problems with iterating the page cache for unwritten data\n\n   - Implement SEEK_{HOLE,DATA} via iomap\n\n   - Refactor XFS to use iomap SEEK_HOLE and SEEK_DATA\n\n   - Don't use MAXPATHLEN to check on-disk symlink target lengths\"\n\n* tag 'xfs-4.13-merge-5' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux: (48 commits)\n  xfs: don't crash on unexpected holes in dir/attr btrees\n  xfs: rename MAXPATHLEN to XFS_SYMLINK_MAXLEN\n  xfs: fix contiguous dquot chunk iteration livelock\n  xfs: Switch to iomap for SEEK_HOLE / SEEK_DATA\n  vfs: Add iomap_seek_hole and iomap_seek_data helpers\n  vfs: Add page_cache_seek_hole_data helper\n  xfs: remove a whitespace-only line from xfs_fs_get_nextdqblk\n  xfs: rewrite xfs_dq_get_next_id using xfs_iext_lookup_extent\n  xfs: Check for m_errortag initialization in xfs_errortag_test\n  xfs: grab dquots without taking the ilock\n  xfs: fix semicolon.cocci warnings\n  xfs: Don't clear SGID when inheriting ACLs\n  xfs: free cowblocks and retry on buffered write ENOSPC\n  xfs: replace log_badcrc_factor knob with error injection tag\n  xfs: convert drop_writes to use the errortag mechanism\n  xfs: remove unneeded parameter from XFS_TEST_ERROR\n  xfs: expose errortag knobs via sysfs\n  xfs: make errortag a per-mountpoint structure\n  xfs: free uncommitted transactions during log recovery\n  xfs: don't allow bmap on rt files\n  ... Merge branch 'nowait-aio-btrfs-fixup' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs fix from David Sterba:\n \"This fixes a user-visible bug introduced by the nowait-aio patches\n  merged in this cycle\"\n\n* 'nowait-aio-btrfs-fixup' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux:\n  btrfs: nowait aio: Correct assignment of pos Merge branch 'fix-uio' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull copy*_iter fix from Al Viro.\n\n[ Al used entirely the wrong return value. Oopsie. ]\n\n* 'fix-uio' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix brown paperbag bug in inlined copy_..._iter() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid\n\nPull HID updates from Jiri Kosina:\n\n - open/close tracking improvements from Dmitry Torokhov\n\n - battery support improvements in Wacom driver from Jason Gerecke\n\n - Win8 support fixes from Benjamin Tissories and Hans de Geode\n\n - misc fixes to Intel-ISH driver from Arnd Bergmann\n\n - support for quite a few new devices and small assorted fixes here and\n   there\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid: (35 commits)\n  HID: intel-ish-hid: Enable Gemini Lake ish driver\n  HID: intel-ish-hid: Enable Cannon Lake ish driver\n  HID: wacom: fix mistake in printk\n  HID: multitouch: optimize the sticky fingers timer\n  HID: multitouch: fix rare Win 8 cases when the touch up event gets missing\n  HID: multitouch: use BIT macro\n  HID: Add driver for Retrode2 joypad adapter\n  HID: multitouch: Add support for Google Rose Touchpad\n  HID: multitouch: Support PTP Stick and Touchpad device\n  HID: core: don't use negative operands when shift\n  HID: apple: Use country code to detect ISO keyboards\n  HID: remove no longer used hid->open field\n  greybus: hid: remove custom locking from gb_hid_open/close\n  HID: usbhid: remove custom locking from usbhid_open/close\n  HID: i2c-hid: remove custom locking from i2c_hid_open/close\n  HID: serialize hid_hw_open and hid_hw_close\n  HID: usbhid: do not rely on hid->open when deciding to do IO\n  HID: hiddev: use hid_hw_power instead of usbhid_get/put_power\n  HID: hiddev: use hid_hw_open/close instead of usbhid_open/close\n  HID: asus: Add support for Zen AiO MD-5110 keyboard\n  ... Merge tag 'drm-for-v4.13' of git://people.freedesktop.org/~airlied/linux\n\nPull drm updates from Dave Airlie:\n \"This is the main pull request for the drm, I think I've got one later\n  driver pull for mediatek SoC driver, I'm undecided on if it needs to\n  go to you yet.\n\n  Otherwise summary below:\n\n  Core drm:\n   - Atomic add driver private objects\n   - Deprecate preclose hook in modern drivers\n   - MST bandwidth tracking\n   - Use kvmalloc in more places\n   - Add mode_valid hook for crtc/encoder/bridge\n   - Reduce sync_file construction time\n   - Documentation updates\n   - New DRM synchronisation object support\n\n  New drivers:\n   - pl111 - pl111 CLCD display controller\n\n  Panel:\n   - Innolux P079ZCA panel driver\n   - Add NL12880B20-05, NL192108AC18-02D, P320HVN03 panels\n   - panel-samsung-s6e3ha2: Add s6e3hf2 panel support\n\n  i915:\n   - SKL+ watermark fixes\n   - G4x/G33 reset improvements\n   - DP AUX backlight improvements\n   - Buffer based GuC/host communication\n   - New getparam for (sub)slice infomation\n   - Cannonlake and Coffeelake initial patches\n   - Execbuf optimisations\n\n  radeon/amdgpu:\n   - Lots of Vega10 bug fixes\n   - Preliminary raven support\n   - KIQ support for compute rings\n   - MEC queue management rework\n   - DCE6 Audio support\n   - SR-IOV improvements\n   - Better radeon/amdgpu selection support\n\n  nouveau:\n   - HDMI stereoscopic support\n   - Display code rework for >= GM20x GPUs\n\n  msm:\n   - GEM rework for fine-grained locking\n   - Per-process pagetable work\n   - HDMI fixes for Snapdragon 820.\n\n  vc4:\n   - Remove 256MB CMA limit from vc4\n   - Add out-fence support\n   - Add support for cygnus\n   - Get/set tiling ioctls support\n   - Add T-format tiling support for scanout\n\n  zte:\n   - add VGA support.\n\n  etnaviv:\n   - Thermal throttle support for newer GPUs\n   - Restore userspace buffer cache performance\n   - dma-buf sync fix\n\n  stm:\n   - add stm32f429 display support\n\n  exynos:\n   - Rework vblank handling\n   - Fixup sw-trigger code\n\n  sun4i:\n   - V3s display engine support\n   - HDMI support for older SoCs\n   - Preliminary work on dual-pipeline SoCs.\n\n  rcar-du:\n   - VSP work\n\n  imx-drm:\n   - Remove counter load enable from PRE\n   - Double read/write reduction flag support\n\n  tegra:\n   - Documentation for the host1x and drm driver.\n   - Lots of staging ioctl fixes due to grate project work.\n\n  omapdrm:\n   - dma-buf fence support\n   - TILER rotation fixes\"\n\n* tag 'drm-for-v4.13' of git://people.freedesktop.org/~airlied/linux: (1270 commits)\n  drm: Remove unused drm_file parameter to drm_syncobj_replace_fence()\n  drm/amd/powerplay: fix bug fail to remove sysfs when rmmod amdgpu.\n  amdgpu: Set cik/si_support to 1 by default if radeon isn't built\n  drm/amdgpu/gfx9: fix driver reload with KIQ\n  drm/amdgpu/gfx8: fix driver reload with KIQ\n  drm/amdgpu: Don't call amd_powerplay_destroy() if we don't have powerplay\n  drm/ttm: Fix use-after-free in ttm_bo_clean_mm\n  drm/amd/amdgpu: move get memory type function from early init to sw init\n  drm/amdgpu/cgs: always set reference clock in mode_info\n  drm/amdgpu: fix vblank_time when displays are off\n  drm/amd/powerplay: power value format change for Vega10\n  drm/amdgpu/gfx9: support the amdgpu.disable_cu option\n  drm/amd/powerplay: change PPSMC_MSG_GetCurrPkgPwr for Vega10\n  drm/amdgpu: Make amdgpu_cs_parser_init static (v2)\n  drm/amdgpu/cs: fix a typo in a comment\n  drm/amdgpu: Fix the exported always on CU bitmap\n  drm/amdgpu/gfx9: gfx_v9_0_enable_gfx_static_mg_power_gating() can be static\n  drm/amdgpu/psp: upper_32_bits/lower_32_bits for address setup\n  drm/amd/powerplay/cz: print message if smc message fails\n  drm/amdgpu: fix typo in amdgpu_debugfs_test_ib_init\n  ... Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"The x86 updates contain:\n\n   - A fix for a longstanding PAT bug, where PAT was reported on CPUs\n     that do not support it, which leads to wrong caching attributes and\n     missing MTRR updates\n\n   - Prevent overwriting of the e820 firmware table, which causes kexec\n     kernels to lose the fake mptable which is stored there.\n\n   - Cleanup of the UV/BAU code, removing unused code and making local\n     functions static\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/boot/e820: Introduce the bootloader provided e820_table_firmware[] table\n  x86/boot/e820: Rename the e820_table_firmware to e820_table_kexec\n  x86/boot/e820: Avoid overwriting e820_table_firmware\n  x86/mm/pat: Don't report PAT on CPUs that don't support it\n  x86/platform/uv/BAU: Minor cleanup, make some local functions static Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timers fixlet from Thomas Gleixner:\n \"Add Frederic Weisbecker as NOHZ/dyntick maintainer\"\n\n[ And an unmentioned and unrelated typo fix in the same commit? Hmm.. ]\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  MAINTAINERS: Add Frederic Weisbecker as nohz/dyntics maintainer Merge branch 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull smp/hotplug fix from Thomas Gleixner:\n \"A single fix for a brown paperbag bug:\n\n  The unparking of the initial percpu threads of an upcoming CPU happens\n  right now on the idle task, but that's wrong as the unpark function\n  might sleep. Move it to the control CPU.\"\n\n* 'smp-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  smp/hotplug: Move unparking of percpu threads to the control CPU Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Thomas Gleixner:\n \"This scheduler update provides:\n\n   - The (hopefully) final fix for the vtime accounting issues which\n     were around for quite some time\n\n   - Use types known to user space in UAPI headers to unbreak user space\n     builds\n\n   - Make load balancing respect the current scheduling domain again\n     instead of evaluating unrelated CPUs\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/headers/uapi: Fix linux/sched/types.h userspace compilation errors\n  sched/fair: Fix load_balance() affinity redo path\n  sched/cputime: Accumulate vtime on top of nsec clocksource\n  sched/cputime: Move the vtime task fields to their own struct\n  sched/cputime: Rename vtime fields\n  sched/cputime: Always set tsk->vtime_snap_whence after accounting vtime\n  vtime, sched/cputime: Remove vtime_account_user()\n  Revert \"sched/cputime: Refactor the cputime_adjust() code\" Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n \"A couple of fixes for perf and kprobes:\n\n   - Add he missing exclude_kernel attribute for the precise_ip level so\n     !CAP_SYS_ADMIN users get the proper results.\n\n   - Warn instead of failing completely when perf has no unwind support\n     for a particular architectiure built in.\n\n   - Ensure that jprobes are at function entry and not at some random\n     place\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  kprobes: Ensure that jprobe probepoints are at function entry\n  kprobes: Simplify register_jprobes()\n  kprobes: Rename [arch_]function_offset_within_entry() to [arch_]kprobe_on_func_entry()\n  perf unwind: Do not fail due to missing unwind support\n  perf evsel: Set attr.exclude_kernel when probing max attr.precise_ip Merge branch 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking fixes from Thomas Gleixner:\n\n - Fix the EINTR logic in rwsem-spinlock to avoid double locking by a\n   writer and a reader\n\n - Add a missing include to qspinlocks\n\n* 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/qspinlock: Explicitly include asm/prefetch.h\n  locking/rwsem-spinlock: Fix EINTR branch in __down_write_common() Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n\n - A few fixes mopping up the fallout of the big irq overhaul\n\n - Move the interrupt resource management logic out of the spin locked,\n   irq disabled region to avoid unnecessary restrictions of the resource\n   callbacks\n\n - Preparation for reworking the per cpu irq request function.\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqdomain: Allow ACPI device nodes to be used as irqdomain identifiers\n  genirq/debugfs: Remove redundant NULL pointer check\n  genirq: Allow to pass the IRQF_TIMER flag with percpu irq request\n  genirq/timings: Move free timings out of spinlocked region\n  genirq: Move irq resource handling out of spinlocked region\n  genirq: Add mutex to irq desc to serialize request/free_irq()\n  genirq: Move bus locking into __setup_irq()\n  genirq: Force inlining of __irq_startup_managed to prevent build failure\n  genirq/debugfs: Fix build for !CONFIG_IRQ_DOMAIN Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull objtool fix from Thomas Gleixner:\n \"A fix to the objtool sibling call detection logic to distinguish\n  normal jumps inside a function from a real sibling call\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  objtool: Fix sibling call detection logic Merge tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4\n\nPull ext4 updates from Ted Ts'o:\n \"The first major feature for ext4 this merge window is the largedir\n  feature, which allows ext4 directories to support over 2 billion\n  directory entries (assuming ~64 byte file names; in practice, users\n  will run into practical performance limits first.) This feature was\n  originally written by the Lustre team, and credit goes to Artem\n  Blagodarenko from Seagate for getting this feature upstream.\n\n  The second major major feature allows ext4 to support extended\n  attribute values up to 64k. This feature was also originally from\n  Lustre, and has been enhanced by Tahsin Erdogan from Google with a\n  deduplication feature so that if multiple files have the same xattr\n  value (for example, Windows ACL's stored by Samba), only one copy will\n  be stored on disk for encoding and caching efficiency.\n\n  We also have the usual set of bug fixes, cleanups, and optimizations\"\n\n* tag 'ext4_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/ext4: (47 commits)\n  ext4: fix spelling mistake: \"prellocated\" -> \"preallocated\"\n  ext4: fix __ext4_new_inode() journal credits calculation\n  ext4: skip ext4_init_security() and encryption on ea_inodes\n  fs: generic_block_bmap(): initialize all of the fields in the temp bh\n  ext4: change fast symlink test to not rely on i_blocks\n  ext4: require key for truncate(2) of encrypted file\n  ext4: don't bother checking for encryption key in ->mmap()\n  ext4: check return value of kstrtoull correctly in reserved_clusters_store\n  ext4: fix off-by-one fsmap error on 1k block filesystems\n  ext4: return EFSBADCRC if a bad checksum error is found in ext4_find_entry()\n  ext4: return EIO on read error in ext4_find_entry\n  ext4: forbid encrypting root directory\n  ext4: send parallel discards on commit completions\n  ext4: avoid unnecessary stalls in ext4_evict_inode()\n  ext4: add nombcache mount option\n  ext4: strong binding of xattr inode references\n  ext4: eliminate xattr entry e_hash recalculation for removes\n  ext4: reserve space for xattr entries/names\n  quota: add get_inode_usage callback to transfer multi-inode charges\n  ext4: xattr inode deduplication\n  ... Merge tag 'fscrypt_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/fscrypt\n\nPull fscrypt updates from Ted Ts'o:\n \"Add support for 128-bit AES and some cleanups to fscrypt\"\n\n* tag 'fscrypt_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tytso/fscrypt:\n  fscrypt: make ->dummy_context() return bool\n  fscrypt: add support for AES-128-CBC\n  fscrypt: inline fscrypt_free_filename() Merge branch 'waitid-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull waitid fix from Al Viro.\n\n* 'waitid-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix waitid(2) breakage Merge tag 'pci-v4.13-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci\n\nPull PCI updates from Bjorn Helgaas:\n\n  - add sysfs max_link_speed/width, current_link_speed/width (Wong Vee\n    Khee)\n\n  - make host bridge IRQ mapping much more generic (Matthew Minter,\n    Lorenzo Pieralisi)\n\n  - convert most drivers to pci_scan_root_bus_bridge() (Lorenzo\n    Pieralisi)\n\n  - mutex sriov_configure() (Jakub Kicinski)\n\n  - mutex pci_error_handlers callbacks (Christoph Hellwig)\n\n  - split ->reset_notify() into ->reset_prepare()/reset_done()\n    (Christoph Hellwig)\n\n  - support multiple PCIe portdrv interrupts for MSI as well as MSI-X\n    (Gabriele Paoloni)\n\n  - allocate MSI/MSI-X vector for Downstream Port Containment (Gabriele\n    Paoloni)\n\n  - fix MSI IRQ affinity pre/post/min_vecs issue (Michael Hernandez)\n\n  - test INTx masking during enumeration, not at run-time (Piotr Gregor)\n\n  - avoid using device_may_wakeup() for runtime PM (Rafael J. Wysocki)\n\n  - restore the status of PCI devices across hibernation (Chen Yu)\n\n  - keep parent resources that start at 0x0 (Ard Biesheuvel)\n\n  - enable ECRC only if device supports it (Bjorn Helgaas)\n\n  - restore PRI and PASID state after Function-Level Reset (CQ Tang)\n\n  - skip DPC event if device is not present (Keith Busch)\n\n  - check domain when matching SMBIOS info (Sujith Pandel)\n\n  - mark Intel XXV710 NIC INTx masking as broken (Alex Williamson)\n\n  - avoid AMD SB7xx EHCI USB wakeup defect (Kai-Heng Feng)\n\n  - work around long-standing Macbook Pro poweroff issue (Bjorn Helgaas)\n\n  - add Switchtec \"running\" status flag (Logan Gunthorpe)\n\n  - fix dra7xx incorrect RW1C IRQ register usage (Arvind Yadav)\n\n  - modify xilinx-nwl IRQ chip for legacy interrupts (Bharat Kumar\n    Gogada)\n\n  - move VMD SRCU cleanup after bus, child device removal (Jon Derrick)\n\n  - add Faraday clock handling (Linus Walleij)\n\n  - configure Rockchip MPS and reorganize (Shawn Lin)\n\n  - limit Qualcomm TLP size to 2K (hardware issue) (Srinivas Kandagatla)\n\n  - support Tegra MSI 64-bit addressing (Thierry Reding)\n\n  - use Rockchip normal (not privileged) register bank (Shawn Lin)\n\n  - add HiSilicon Kirin SoC PCIe controller driver (Xiaowei Song)\n\n  - add Sigma Designs Tango SMP8759 PCIe controller driver (Marc\n    Gonzalez)\n\n  - add MediaTek PCIe host controller support (Ryder Lee)\n\n  - add Qualcomm IPQ4019 support (John Crispin)\n\n  - add HyperV vPCI protocol v1.2 support (Jork Loeser)\n\n  - add i.MX6 regulator support (Quentin Schulz)\n\n* tag 'pci-v4.13-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (113 commits)\n  PCI: tango: Add Sigma Designs Tango SMP8759 PCIe host bridge support\n  PCI: Add DT binding for Sigma Designs Tango PCIe controller\n  PCI: rockchip: Use normal register bank for config accessors\n  dt-bindings: PCI: Add documentation for MediaTek PCIe\n  PCI: Remove __pci_dev_reset() and pci_dev_reset()\n  PCI: Split ->reset_notify() method into ->reset_prepare() and ->reset_done()\n  PCI: xilinx: Make of_device_ids const\n  PCI: xilinx-nwl: Modify IRQ chip for legacy interrupts\n  PCI: vmd: Move SRCU cleanup after bus, child device removal\n  PCI: vmd: Correct comment: VMD domains start at 0x10000, not 0x1000\n  PCI: versatile: Add local struct device pointers\n  PCI: tegra: Do not allocate MSI target memory\n  PCI: tegra: Support MSI 64-bit addressing\n  PCI: rockchip: Use local struct device pointer consistently\n  PCI: rockchip: Check for clk_prepare_enable() errors during resume\n  MAINTAINERS: Remove Wenrui Li as Rockchip PCIe driver maintainer\n  PCI: rockchip: Configure RC's MPS setting\n  PCI: rockchip: Reconfigure configuration space header type\n  PCI: rockchip: Split out rockchip_pcie_cfg_configuration_accesses()\n  PCI: rockchip: Move configuration accesses into rockchip_pcie_cfg_atu()\n  ... Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md\n\nPull MD update from Shaohua Li:\n\n - fixed deadlock in MD suspend and a potential bug in bio allocation\n   (Neil Brown)\n\n - fixed signal issue (Mikulas Patocka)\n\n - fixed typo in FailFast test (Guoqing Jiang)\n\n - other trival fixes\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/shli/md:\n  MD: fix sleep in atomic\n  MD: fix a null dereference\n  md: use a separate bio_set for synchronous IO.\n  md: change the initialization value for a spare device spot to MD_DISK_ROLE_SPARE\n  md/raid1: remove unused bio in sync_request_write\n  md/raid10: fix FailFast test for wrong device\n  md: don't use flush_signals in userspace processes\n  md: fix deadlock between mddev_suspend() and md_write_start() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input updates from Dmitry Torokhov:\n\n - a new driver for STM FingerTip touchscreen\n\n - a new driver for D-Link DIR-685 touch keys\n\n - updated list of supported devices in xpad driver\n\n - other assorted updates and fixes\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input: (23 commits)\n  MAINTAINERS: update input subsystem patterns\n  Input: introduce KEY_ASSISTANT\n  Input: xpad - sync supported devices with XBCD\n  Input: xpad - sync supported devices with 360Controller\n  Input: xen-kbdfront - use string constants from PV protocol\n  Input: stmfts - mark all PM functions as __maybe_unused\n  Input: add support for the STMicroelectronics FingerTip touchscreen\n  Input: add D-Link DIR-685 touchkeys driver\n  Input: s3c2410_ts - handle return value of clk_prepare_enable\n  Input: axp20x-pek - add wakeup support\n  Input: synaptics-rmi4 - use %phN to form F34 configuration ID\n  Input: synaptics-rmi4 - change a char type to u8\n  Input: sparse-keymap - remove sparse_keymap_free()\n  Input: tsc2007 - move header file out of I2C realm\n  Input: mms114 - move header file out of I2C realm\n  Input: mcs - move header file out of I2C realm\n  Input: lm8323 - move header file out of I2C realm\n  Input: elantech - force relative mode on a certain module\n  Input: elan_i2c - add support for fetching chip type on newer hardware\n  Input: elan_i2c - check if device is there before really probing\n  ... Merge tag 'dmaengine-4.13-rc1' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine updates from Vinod Koul:\n\n - removal of AVR32 support in dw driver as AVR32 is gone\n\n - new driver for Broadcom stream buffer accelerator (SBA) RAID driver\n\n - add support for Faraday Technology FTDMAC020 in amba-pl08x driver\n\n - IOMMU support in pl330 driver\n\n - updates to bunch of drivers\n\n* tag 'dmaengine-4.13-rc1' of git://git.infradead.org/users/vkoul/slave-dma: (36 commits)\n  dmaengine: qcom_hidma: correct API violation for submit\n  dmaengine: zynqmp_dma: Remove max len check in zynqmp_dma_prep_memcpy\n  dmaengine: tegra-apb: Really fix runtime-pm usage\n  dmaengine: fsl_raid: make of_device_ids const.\n  dmaengine: qcom_hidma: allow ACPI/DT parameters to be overridden\n  dmaengine: fsldma: set BWC, DAHTS and SAHTS values correctly\n  dmaengine: Kconfig: Simplify the help text for MXS_DMA\n  dmaengine: pl330: Delete unused functions\n  dmaengine: Replace WARN_TAINT_ONCE() with pr_warn_once()\n  dmaengine: Kconfig: Extend the dependency for MXS_DMA\n  dmaengine: mxs: Use %zu for printing a size_t variable\n  dmaengine: ste_dma40: Cleanup scatterlist layering violations\n  dmaengine: imx-dma: cleanup scatterlist layering violations\n  dmaengine: use proper name for the R-Car SoC\n  dmaengine: imx-sdma: Fix compilation warning.\n  dmaengine: imx-sdma: Handle return value of clk_prepare_enable\n  dmaengine: pl330: Add IOMMU support to slave tranfers\n  dmaengine: DW DMAC: Handle return value of clk_prepare_enable\n  dmaengine: pl08x: use GENMASK() to create bitmasks\n  dmaengine: pl08x: Add support for Faraday Technology FTDMAC020\n  ... Merge branch 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm\n\nPull ARM updates from Russell King:\n\n - add support for ftrace-with-registers, which is needed for kgraft and\n   other ftrace tools\n\n - support for mremap() for the sigpage/vDSO so that checkpoint/restore\n   can work\n\n - add timestamps to each line of the register dump output\n\n - remove the unused KTHREAD_SIZE from nommu\n\n - align the ARM bitops APIs with the generic API (using unsigned long\n   pointers rather than void pointers)\n\n - make the configuration of userspace Thumb support an expert option so\n   that we can default it on, and avoid some hard to debug userspace\n   crashes\n\n* 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm:\n  ARM: 8684/1: NOMMU: Remove unused KTHREAD_SIZE definition\n  ARM: 8683/1: ARM32: Support mremap() for sigpage/vDSO\n  ARM: 8679/1: bitops: Align prototypes to generic API\n  ARM: 8678/1: ftrace: Adds support for CONFIG_DYNAMIC_FTRACE_WITH_REGS\n  ARM: make configuration of userspace Thumb support an expert option\n  ARM: 8673/1: Fix __show_regs output timestamps Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc-next\n\nPull sparc updates from David Miller:\n\n 1) Queued spinlocks and rwlocks for sparc64, from Babu Moger.\n\n 2) Some const'ification from Arvind Yadav.\n\n 3) LDC/VIO driver infrastructure changes to facilitate future upcoming\n    drivers, from Jag Raman.\n\n 4) Initialize sched_clock() et al. early so that the initial printk\n    timestamps are all done while the implementation is available and\n    functioning. From Pavel Tatashin.\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc-next: (38 commits)\n  sparc: kernel: pmc: make of_device_ids const.\n  sparc64: fix typo in property\n  sparc64: add port_id to VIO device metadata\n  sparc64: Enhance search for VIO device in MDESC\n  sparc64: enhance VIO device probing\n  sparc64: check if a client is allowed to register for MDESC notifications\n  sparc64: remove restriction on VIO device name size\n  sparc64: refactor code to obtain cfg_handle property from MDESC\n  sparc64: add MDESC node name property to VIO device metadata\n  sparc64: mdesc: use __GFP_REPEAT action modifier for VM allocation\n  sparc64: expand MDESC interface\n  sparc64: skip handshake for LDC channels in RAW mode\n  sparc64: specify the device class in VIO version info. packet\n  sparc64: ensure VIO operations are defined while being used\n  sparc: kernel: apc: make of_device_ids const\n  sparc/time: make of_device_ids const\n  sparc64: broken %tick frequency on spitfire cpus\n  sparc64: use prom interface to get %stick frequency\n  sparc64: optimize functions that access tick\n  sparc64: add hot-patched and inlined get_tick()\n  ... Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking fixes from David Miller:\n \"Mostly fixing some light fallout from the changes that went into the\n  merge window.\n\n   1) Fix memory leaks on network namespace teardown in netfilter, from\n      Liping Zhang.\n\n   2) When comparing ipv6 nexthops, we have to take the lightweight\n      tunnel state into account as well. From David Ahern.\n\n   3) Fix socket option object length check in the new TLS code, from\n      Matthias Rosenfelder.\n\n   4) Fix memory leak in nfp driver flower support, from Jakub Kicinski.\n\n   5) Several netlink attribute validation fixes in cfg80211, from\n      Srinivas Dasari.\n\n   6) Fix context array leak in virtio_net, from Jason Wang.\n\n   7) SKB use after free in hns driver, from Yusheng Lin.\n\n   8) Fix socket leak on accept() in RDS, from Sowmini Varadhan. Also\n      add a WARN_ON() to sock_graft() so other protocol stacks don't\n      trip over this as well\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (26 commits)\n  net: ethernet: mediatek: remove useless code in mtk_probe()\n  mpls: fix uninitialized in_label var warning in mpls_getroute\n  doc: SKB_GSO_[IPIP|SIT] have been replaced\n  bonding: avoid NETDEV_CHANGEMTU event when unregistering slave\n  net/sock: add WARN_ON(parent->sk) in sock_graft()\n  rds: tcp: use sock_create_lite() to create the accept socket\n  net: hns: Fix a skb used after free bug\n  net: hns: Fix a wrong op phy C45 code\n  net: macb: Adding Support for Jumbo Frames up to 10240 Bytes in SAMA5D3\n  net: Update networking MAINTAINERS entry.\n  virtio-net: fix leaking of ctx array\n  cfg80211: Validate frequencies nested in NL80211_ATTR_SCAN_FREQUENCIES\n  cfg80211: Define nla_policy for NL80211_ATTR_LOCAL_MESH_POWER_MODE\n  cfg80211: Check if NAN service ID is of expected size\n  cfg80211: Check if PMKID attribute is of expected size\n  arcnet: com20020-pci: Fix an error handling path in 'com20020pci_probe()'\n  nfp: flower: add missing clean up call to avoid memory leaks\n  vrf: fix bug_on triggered by rx when destroying a vrf\n  ptp: dte: Use LL suffix for 64-bit constants\n  sctp: set the value of flowi6_oif to sk_bound_dev_if to make sctp_v6_get_dst to find the correct route entry.\n  ... Merge branch 'work.misc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull misc filesystem updates from Al Viro:\n \"Assorted normal VFS / filesystems stuff...\"\n\n* 'work.misc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  dentry name snapshots\n  Make statfs properly return read-only state after emergency remount\n  fs/dcache: init in_lookup_hashtable\n  minix: Deinline get_block, save 2691 bytes\n  fs: Reorder inode_owner_or_capable() to avoid needless\n  fs: warn in case userspace lied about modprobe return Merge branch 'for-spi' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull spi uaccess delousing from Al Viro:\n \"Getting rid of pointless __get_user() and friends in drivers/spi.\n\n  [ the only reason it's on a separate branch is that I hoped it would\n    be picked by spi folks; looks like mail asking them to grab it got\n    lost and I hadn't followed up on that ]\"\n\n* 'for-spi' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  spidev: quit messing with access_ok() Merge branch 'work.__copy_in_user' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull __copy_in_user removal from Al Viro:\n \"There used to be 6 places in the entire tree calling __copy_in_user(),\n  all of them bogus.\n\n  Four got killed off in work.drm branch, this takes care of the\n  remaining ones and kills the definition of that sucker\"\n\n* 'work.__copy_in_user' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  kill __copy_in_user()\n  sanitize do_i2c_smbus_ioctl() Merge branch 'work.read_write' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull read/write fix from Al Viro:\n \"file_start_write()/file_end_write() got mixed into vfs_iter_write() by\n  accident; that's a deadlock for all existing callers - they already do\n  that, some - quite a bit outside.\n\n  Easily fixed, fortunately\"\n\n* 'work.read_write' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  move file_{start,end}_write() out of do_iter_write() Merge branch 'uaccess-work.iov_iter' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull iov_iter hardening from Al Viro:\n \"This is the iov_iter/uaccess/hardening pile.\n\n  For one thing, it trims the inline part of copy_to_user/copy_from_user\n  to the minimum that *does* need to be inlined - object size checks,\n  basically. For another, it sanitizes the checks for iov_iter\n  primitives. There are 4 groups of checks: access_ok(), might_fault(),\n  object size and KASAN.\n\n   - access_ok() had been verified by whoever had set the iov_iter up.\n     However, that has happened in a function far away, so proving that\n     there's no path to actual copying bypassing those checks is hard\n     and proving that iov_iter has not been buggered in the meanwhile is\n     also not pleasant. So we want those redone in actual\n     copyin/copyout.\n\n   - might_fault() is better off consolidated - we know whether it needs\n     to be checked as soon as we enter iov_iter primitive and observe\n     the iov_iter flavour. No need to wait until the copyin/copyout. The\n     call chains are short enough to make sure we won't miss anything -\n     in fact, it's more robust that way, since there are cases where we\n     do e.g. forced fault-in before getting to copyin/copyout. It's not\n     quite what we need to check (in particular, combination of\n     iovec-backed and set_fs(KERNEL_DS) is almost certainly a bug, not a\n     cause to skip checks), but that's for later series. For now let's\n     keep might_fault().\n\n   - KASAN checks belong in copyin/copyout - at the same level where\n     other iov_iter flavours would've hit them in memcpy().\n\n   - object size checks should apply to *all* iov_iter flavours, not\n     just iovec-backed ones.\n\n  There are two groups of primitives - one gets the kernel object\n  described as pointer + size (copy_to_iter(), etc.) while another gets\n  it as page + offset + size (copy_page_to_iter(), etc.)\n\n  For the first group the checks are best done where we actually have a\n  chance to find the object size. In other words, those belong in inline\n  wrappers in uio.h, before calling into iov_iter.c. Same kind as we\n  have for inlined part of copy_to_user().\n\n  For the second group there is no object to look at - offset in page is\n  just a number, it bears no type information. So we do them in the\n  common helper called by iov_iter.c primitives of that kind. All it\n  currently does is checking that we are not trying to access outside of\n  the compound page; eventually we might want to add some sanity checks\n  on the page involved.\n\n  So the things we need in copyin/copyout part of iov_iter.c do not\n  quite match anything in uaccess.h (we want no zeroing, we *do* want\n  access_ok() and KASAN and we want no might_fault() or object size\n  checks done on that level). OTOH, these needs are simple enough to\n  provide a couple of helpers (static in iov_iter.c) doing just what we\n  need...\"\n\n* 'uaccess-work.iov_iter' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  iov_iter: saner checks on copyin/copyout\n  iov_iter: sanity checks for copy to/from page primitives\n  iov_iter/hardening: move object size checks to inlined part\n  copy_{to,from}_user(): consolidate object size checks\n  copy_{from,to}_user(): move kasan checks and might_fault() out-of-line Merge tag 'for-linus-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux\n\nPull Writeback error handling updates from Jeff Layton:\n \"This pile represents the bulk of the writeback error handling fixes\n  that I have for this cycle. Some of the earlier patches in this pile\n  may look trivial but they are prerequisites for later patches in the\n  series.\n\n  The aim of this set is to improve how we track and report writeback\n  errors to userland. Most applications that care about data integrity\n  will periodically call fsync/fdatasync/msync to ensure that their\n  writes have made it to the backing store.\n\n  For a very long time, we have tracked writeback errors using two flags\n  in the address_space: AS_EIO and AS_ENOSPC. Those flags are set when a\n  writeback error occurs (via mapping_set_error) and are cleared as a\n  side-effect of filemap_check_errors (as you noted yesterday). This\n  model really sucks for userland.\n\n  Only the first task to call fsync (or msync or fdatasync) will see the\n  error. Any subsequent task calling fsync on a file will get back 0\n  (unless another writeback error occurs in the interim). If I have\n  several tasks writing to a file and calling fsync to ensure that their\n  writes got stored, then I need to have them coordinate with one\n  another. That's difficult enough, but in a world of containerized\n  setups that coordination may even not be possible.\n\n  But wait...it gets worse!\n\n  The calls to filemap_check_errors can be buried pretty far down in the\n  call stack, and there are internal callers of filemap_write_and_wait\n  and the like that also end up clearing those errors. Many of those\n  callers ignore the error return from that function or return it to\n  userland at nonsensical times (e.g. truncate() or stat()). If I get\n  back -EIO on a truncate, there is no reason to think that it was\n  because some previous writeback failed, and a subsequent fsync() will\n  (incorrectly) return 0.\n\n  This pile aims to do three things:\n\n   1) ensure that when a writeback error occurs that that error will be\n      reported to userland on a subsequent fsync/fdatasync/msync call,\n      regardless of what internal callers are doing\n\n   2) report writeback errors on all file descriptions that were open at\n      the time that the error occurred. This is a user-visible change,\n      but I think most applications are written to assume this behavior\n      anyway. Those that aren't are unlikely to be hurt by it.\n\n   3) document what filesystems should do when there is a writeback\n      error. Today, there is very little consistency between them, and a\n      lot of cargo-cult copying. We need to make it very clear what\n      filesystems should do in this situation.\n\n  To achieve this, the set adds a new data type (errseq_t) and then\n  builds new writeback error tracking infrastructure around that. Once\n  all of that is in place, we change the filesystems to use the new\n  infrastructure for reporting wb errors to userland.\n\n  Note that this is just the initial foray into cleaning up this mess.\n  There is a lot of work remaining here:\n\n   1) convert the rest of the filesystems in a similar fashion. Once the\n      initial set is in, then I think most other fs' will be fairly\n      simple to convert. Hopefully most of those can in via individual\n      filesystem trees.\n\n   2) convert internal waiters on writeback to use errseq_t for\n      detecting errors instead of relying on the AS_* flags. I have some\n      draft patches for this for ext4, but they are not quite ready for\n      prime time yet.\n\n  This was a discussion topic this year at LSF/MM too. If you're\n  interested in the gory details, LWN has some good articles about this:\n\n      https://lwn.net/Articles/718734/\n      https://lwn.net/Articles/724307/\"\n\n* tag 'for-linus-v4.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux:\n  btrfs: minimal conversion to errseq_t writeback error reporting on fsync\n  xfs: minimal conversion to errseq_t writeback error reporting\n  ext4: use errseq_t based error handling for reporting data writeback errors\n  fs: convert __generic_file_fsync to use errseq_t based reporting\n  block: convert to errseq_t based writeback error tracking\n  dax: set errors in mapping when writeback fails\n  Documentation: flesh out the section in vfs.txt on storing and reporting writeback errors\n  mm: set both AS_EIO/AS_ENOSPC and errseq_t in mapping_set_error\n  fs: new infrastructure for writeback error handling and reporting\n  lib: add errseq_t type and infrastructure for handling it\n  mm: don't TestClearPageError in __filemap_fdatawait_range\n  mm: clear AS_EIO/AS_ENOSPC when writeback initiation fails\n  jbd2: don't clear and reset errors after waiting on writeback\n  buffer: set errors in mapping at the time that the error occurs\n  fs: check for writeback errors after syncing out buffers in generic_file_fsync\n  buffer: use mapping_set_error instead of setting the flag\n  mm: fix mapping_set_error call in me_pagecache_dirty Merge tag 'for-linus-v4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux\n\nPull Writeback error handling fixes from Jeff Layton:\n \"The main rationale for all of these changes is to tighten up writeback\n  error reporting to userland. There are many ways now that writeback\n  errors can be lost, such that fsync/fdatasync/msync return 0 when\n  writeback actually failed.\n\n  This pile contains a small set of cleanups and writeback error\n  handling fixes that I was able to break off from the main pile (#2).\n\n  Two of the patches in this pile are trivial. The exceptions are the\n  patch to fix up error handling in write_one_page, and the patch to\n  make JFS pay attention to write_one_page errors\"\n\n* tag 'for-linus-v4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux:\n  fs: remove call_fsync helper function\n  mm: clean up error handling in write_one_page\n  JFS: do not ignore return code from write_one_page()\n  mm: drop \"wait\" parameter from write_one_page() Merge tag 'cifs-bug-fixes-for-4.13' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"First set of CIFS/SMB3 fixes for the merge window. Also improves POSIX\n  character mapping for SMB3\"\n\n* tag 'cifs-bug-fixes-for-4.13' of git://git.samba.org/sfrench/cifs-2.6:\n  CIFS: fix circular locking dependency\n  cifs: set oparms.create_options rather than or'ing in CREATE_OPEN_BACKUP_INTENT\n  cifs: Do not modify mid entry after submitting I/O in cifs_call_async\n  CIFS: add SFM mapping for 0x01-0x1F\n  cifs: hide unused functions\n  cifs: Use smb 2 - 3 and cifsacl mount options getacl functions\n  cifs: prototype declaration and definition for smb 2 - 3 and cifsacl mount options\n  CIFS: add CONFIG_CIFS_DEBUG_KEYS to dump encryption keys\n  cifs: set mapping error when page writeback fails in writepage or launder_pages\n  SMB3: Enable encryption for SMB3.1.1 Merge tag 'gfs2-4.13.fixes.addendum' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2\n\nPull GFS2 fix from Bob Peterson:\n \"Sorry for the additional merge request, but Andreas discovered this\n  problem soon after you processed our last gfs2 merge.\n\n  This fixes a regression introduced by a patch we did in mid-2015\n  (commit 88ffbf3e037e: \"GFS2: Use resizable hash table for glocks\"), so\n  best to get it fixed. Some code was reverted that should not have\n  been.\n\n  The patch from Andreas Gruenbacher just re-adds code that had been\n  there originally\"\n\n* tag 'gfs2-4.13.fixes.addendum' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2:\n  gfs2: Fix glock rhashtable rcu bug Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull security layer fixes from James Morris:\n \"Bugfixes for TPM and SELinux\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  IB/core: Fix static analysis warning in ib_policy_change_task\n  IB/core: Fix uninitialized variable use in check_qp_port_pkey_settings\n  tpm: do not suspend/resume if power stays on\n  tpm: use tpm2_pcr_read() in tpm2_do_selftest()\n  tpm: use tpm_buf functions in tpm2_pcr_read()\n  tpm_tis: make ilb_base_addr static\n  tpm: consolidate the TPM startup code\n  tpm: Enable CLKRUN protocol for Braswell systems\n  tpm/tpm_crb: fix priv->cmd_size initialisation\n  tpm: fix a kernel memory leak in tpm-sysfs.c\n  tpm: Issue a TPM2_Shutdown for TPM2 devices.\n  Add \"shutdown\" to \"struct class\". Merge tag 'kbuild-thinar-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild thin archives updates from Masahiro Yamada:\n \"Thin archives migration by Nicholas Piggin.\n\n  THIN_ARCHIVES has been available for a while as an optional feature\n  only for PowerPC architecture, but we do not need two different\n  intermediate-artifact schemes.\n\n  Using thin archives instead of conventional incremental linking has\n  various advantages:\n\n   - save disk space for builds\n\n   - speed-up building a little\n\n   - fix some link issues (for example, allyesconfig on ARM) due to more\n     flexibility for the final linking\n\n   - work better with dead code elimination we are planning\n\n  As discussed before, this migration has been done unconditionally so\n  that any problems caused by this will show up with \"git bisect\".\n\n  With testing with 0-day and linux-next, some architectures actually\n  showed up problems, but they were trivial and all fixed now\"\n\n* tag 'kbuild-thinar-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  tile: remove unneeded extra-y in Makefile\n  kbuild: thin archives make default for all archs\n  x86/um: thin archives build fix\n  tile: thin archives fix linking\n  ia64: thin archives fix linking\n  sh: thin archives fix linking\n  kbuild: handle libs-y archives separately from built-in.o archives\n  kbuild: thin archives use P option to ar\n  kbuild: thin archives final link close --whole-archives option\n  ia64: remove unneeded extra-y in Makefile.gate\n  tile: fix dependency and .*.cmd inclusion for incremental build\n  sparc64: Use indirect calls in hamming weight stubs Merge tag 'kbuild-misc-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull misc Kbuild updates from Masahiro Yamada:\n\n - Use more portable shebang for Perl scripts\n\n - Remove trailing spaces from GCC version in kernel log\n\n - Make initramfs generation deterministic\n\n* tag 'kbuild-misc-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: create deterministic initramfs directory listings\n  scripts/mkcompile_h: Remove trailing spaces from compiler version\n  scripts: Switch to more portable Perl shebang Merge tag 'kbuild-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild updates from Masahiro Yamada:\n\n - Clean up Makefiles and scripts\n\n - Improve clang support\n\n - Remove unneeded genhdr-y syntax\n\n - Remove unneeded cc-option-align macro\n\n - Introduce __cc-option macro and use it to fix x86 boot code compiler\n   flags\n\n* tag 'kbuild-v4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: improve comments on KBUILD_SRC\n  x86/build: Specify stack alignment for clang\n  x86/build: Use __cc-option for boot code compiler options\n  kbuild: Add __cc-option macro\n  kbuild: remove cc-option-align\n  kbuild: replace genhdr-y with generated-y\n  kbuild: clang: Disable 'address-of-packed-member' warning\n  kbuild: remove duplicated arch/*/include/generated/uapi include path\n  kbuild: speed up checksyscalls.sh\n  kbuild: simplify silent build (-s) detection Merge tag 'linux-kselftest-4.13-rc1-update' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest\n\nPull Kselftest updates from Shuah Khan:\n \"This update consists of:\n\n   - TAP13 framework and changes to some tests to convert to TAP13.\n     Converting kselftest output to standard format will help identify\n     run to run differences and pin point failures easily. TAP13 format\n     has been in use for several years and the output is human friendly.\n\n     Please find the specification:\n       https://testanything.org/tap-version-13-specification.html\n\n     Credit goes to Tim Bird for recommending TAP13 as a suitable\n     format, and to Grag KH for kick starting the work with help from\n     Paul Elder and Alice Ferrazzi\n\n     The first phase of the TAp13 conversion is included in this update.\n     Future updates will include updates to rest of the tests.\n\n   - Masami Hiramatsu fixed ftrace to run on 4.9 stable kernels.\n\n   - Kselftest documnetation has been converted to ReST format. Document\n     now has a new home under Documentation/dev-tools.\n\n   - kselftest_harness.h is now available for general use as a result of\n     Mickaël Salaün's work.\n\n   - Several fixes to skip and/or fail tests gracefully on older\n     releases\"\n\n* tag 'linux-kselftest-4.13-rc1-update' of git://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest: (48 commits)\n  selftests: membarrier: use ksft_* var arg msg api\n  selftests: breakpoints: breakpoint_test_arm64: convert test to use TAP13\n  selftests: breakpoints: step_after_suspend_test use ksft_* var arg msg api\n  selftests: breakpoint_test: use ksft_* var arg msg api\n  kselftest: add ksft_print_msg() function to output general information\n  kselftest: make ksft_* output functions variadic\n  selftests/capabilities: Fix the test_execve test\n  selftests: intel_pstate: add .gitignore\n  selftests: fix memory-hotplug test\n  selftests: add missing test name in memory-hotplug test\n  selftests: check percentage range for memory-hotplug test\n  selftests: check hot-pluggagble memory for memory-hotplug test\n  selftests: typo correction for memory-hotplug test\n  selftests: ftrace: Use md5sum to take less time of checking logs\n  tools/testing/selftests/sysctl: Add pre-check to the value of writes_strict\n  kselftest.rst: do some adjustments after ReST conversion\n  selftest/net/Makefile: Specify output with $(OUTPUT)\n  selftest/intel_pstate/aperf: Use LDLIBS instead of LDFLAGS\n  selftest/memfd/Makefile: Fix build error\n  selftests: lib: Skip tests on missing test modules\n  ... Merge tag 'openrisc-for-linus' of git://github.com/openrisc/linux\n\nPull OpenRISC updates from Stafford Horne:\n \"Openrisc fixes for this 4.13 merge window, there is not really much\n  here:\n\n   - include cleanups, one with should reduce build time slightly\n\n   - switch to new toolchain to new (>2 year old) toolchain prefix\"\n\n* tag 'openrisc-for-linus' of git://github.com/openrisc/linux:\n  openrisc: defconfig: Cleanup from old Kconfig options\n  openrisc: explicitly include linux/bug.h in asm/fixmap.h\n  openrisc: Switch to use export.h instead of module.h\n  openrisc: Change toolchain from or32- to or1k- Merge tag 'powerpc-4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc updates from Michael Ellerman:\n \"Highlights include:\n\n   - Support for STRICT_KERNEL_RWX on 64-bit server CPUs.\n\n   - Platform support for FSP2 (476fpe) board\n\n   - Enable ZONE_DEVICE on 64-bit server CPUs.\n\n   - Generic & powerpc spin loop primitives to optimise busy waiting\n\n   - Convert VDSO update function to use new update_vsyscall() interface\n\n   - Optimisations to hypercall/syscall/context-switch paths\n\n   - Improvements to the CPU idle code on Power8 and Power9.\n\n  As well as many other fixes and improvements.\n\n  Thanks to: Akshay Adiga, Andrew Donnellan, Andrew Jeffery, Anshuman\n  Khandual, Anton Blanchard, Balbir Singh, Benjamin Herrenschmidt,\n  Christophe Leroy, Christophe Lombard, Colin Ian King, Dan Carpenter,\n  Gautham R. Shenoy, Hari Bathini, Ian Munsie, Ivan Mikhaylov, Javier\n  Martinez Canillas, Madhavan Srinivasan, Masahiro Yamada, Matt Brown,\n  Michael Neuling, Michal Suchanek, Murilo Opsfelder Araujo, Naveen N.\n  Rao, Nicholas Piggin, Oliver O'Halloran, Paul Mackerras, Pavel Machek,\n  Russell Currey, Santosh Sivaraj, Stephen Rothwell, Thiago Jung\n  Bauermann, Yang Li\"\n\n* tag 'powerpc-4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux: (158 commits)\n  powerpc/Kconfig: Enable STRICT_KERNEL_RWX for some configs\n  powerpc/mm/radix: Implement STRICT_RWX/mark_rodata_ro() for Radix\n  powerpc/mm/hash: Implement mark_rodata_ro() for hash\n  powerpc/vmlinux.lds: Align __init_begin to 16M\n  powerpc/lib/code-patching: Use alternate map for patch_instruction()\n  powerpc/xmon: Add patch_instruction() support for xmon\n  powerpc/kprobes/optprobes: Use patch_instruction()\n  powerpc/kprobes: Move kprobes over to patch_instruction()\n  powerpc/mm/radix: Fix execute permissions for interrupt_vectors\n  powerpc/pseries: Fix passing of pp0 in updatepp() and updateboltedpp()\n  powerpc/64s: Blacklist rtas entry/exit from kprobes\n  powerpc/64s: Blacklist functions invoked on a trap\n  powerpc/64s: Un-blacklist system_call() from kprobes\n  powerpc/64s: Move system_call() symbol to just after setting MSR_EE\n  powerpc/64s: Blacklist system_call() and system_call_common() from kprobes\n  powerpc/64s: Convert .L__replay_interrupt_return to a local label\n  powerpc64/elfv1: Only dereference function descriptor for non-text symbols\n  cxl: Export library to support IBM XSL\n  powerpc/dts: Use #include \"...\" to include local DT\n  powerpc/perf/hv-24x7: Aggregate result elements on POWER9 SMT8\n  ... vfs: fix flock compat thinko\n\nMichael Ellerman reported that commit 8c6657cb50cb (\"Switch flock\ncopyin/copyout primitives to copy_{from,to}_user()\") broke his\nnetworking on a bunch of PPC machines (64-bit kernel, 32-bit userspace).\n\nThe reason is a brown-paper bug by that commit, which had the arguments\nto \"copy_flock_fields()\" in the wrong order, breaking the compat\nhandling for file locking.  Apparently very few people run 32-bit user\nspace on x86 any more, so the PPC people got the honor of noticing this\n\"feature\".\n\nMichael also sent a minimal diff that just changed the order of the\narguments in that macro.\n\nThis is not that minimal diff.\n\nThis not only changes the order of the arguments in the macro, it also\nchanges them to be pointers (to be consistent with all the other uses of\nthose pointers), and makes the functions that do all of this also have\nthe proper \"const\" attribution on the source pointers in order to make\nissues like that (using the source as a destination) be really obvious.\n\nReported-by: Michael Ellerman <mpe@ellerman.id.au>\nAcked-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge tag 'usb-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are some remaining USB fixes for 4.13-rc1. They were originally\n  scheduled for 4.12-final, but I didn't send them to you in time.\n  Because of that, they were in a separate branch from the larger USB\n  set of patches, so here they are in a separate pull request.\n\n  Nothing major here a all, just three small patches:\n\n   - some usb-serial new device ids\n   - xhci bugfix for some crazy AMD hardware\n\n  All of these have been in linux-next for a long time with no reported\n  issues\"\n\n* tag 'usb-4.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  xhci: Limit USB2 port wake support for AMD Promontory hosts\n  USB: serial: qcserial: new Sierra Wireless EM7305 device ID\n  USB: serial: option: add two Longcheer device ids Merge tag 'backlight-next-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight\n\nPull backlight updates from Lee Jones:\n \"Core Framework:\n   - Report correct error status to user\n\n  Fix-ups:\n   - Move Backlight headers out of I2C (adp8860, adp8870)\"\n\n* tag 'backlight-next-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight:\n  video: adp8870: move header file out of I2C realm\n  backlight: adp8860: Move header file out of I2C realm\n  backlight: Report error on failure Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc fixes from Ben Herrenschmidt:\n \"Here are some more powerpc fixes for 3.14\n\n  The main one is a nasty issue with the NUMA balancing support which\n  requires a small generic change and the addition of a new accessor to\n  set _PAGE_NUMA.  Both have been reviewed and acked by Mel and Rik.\n\n  The changelog should have plenty of details but basically, without\n  this fix, we get random user segfaults and/or corruptions due to\n  missing TLB/hash flushes.  Aneesh series of 3 patches fixes it.\n\n  We have some vDSO vs.  perf fixes from Anton, some small EEH fixes\n  from Gavin, a ppc32 regression vs the stack overflow detector, and a\n  fix for the way we handle PCIe host bridge speed settings on pseries\n  (which is needed for proper operations of AMD graphics cards on\n  Power8)\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc/eeh: Disable EEH on reboot\n  powerpc/eeh: Cleanup on eeh_subsystem_enabled\n  powerpc/powernv: Rework EEH reset\n  powerpc: Use unstripped VDSO image for more accurate profiling data\n  powerpc: Link VDSOs at 0x0\n  mm: Use ptep/pmdp_set_numa() for updating _PAGE_NUMA bit\n  mm: Dirty accountable change only apply to non prot numa case\n  powerpc/mm: Add new \"set\" flag argument to pte/pmd update function\n  powerpc/pseries: Add Gen3 definitions for PCIE link speed\n  powerpc/pseries: Fix regression on PCI link speed\n  powerpc: Set the correct ksp_limit on ppc32 when switching to irq stack printk: fix syslog() overflowing user buffer\n\nThis is not a buffer overflow in the traditional sense: we don't\noverflow any *kernel* buffers, but we do mis-count the amount of data we\ncopy back to user space for the SYSLOG_ACTION_READ_ALL case.\n\nIn particular, if the user buffer is too small to hold everything, and\n*if* there is a continuation line at just the right place, we can end up\ngiving the user more data than he asked for.\n\nThe reason is that we first count up the number of bytes all the log\nrecords contains, then we walk the records again until we've skipped the\nrecords at the beginning that won't fit, and then we walk the rest of\nthe records and copy them to the user space buffer.\n\nAnd in between that \"skip the initial records that won't fit\" and the\n\"copy the records that *will* fit to user space\", we reset the 'prev'\nvariable that contained the record information for the last record not\ncopied.  That meant that when we started copying to user space, we now\nhad a different character count than what we had originally calculated\nin the first record walk-through.\n\nThe fix is to simply not clear the 'prev' flags value (in both cases\nwhere we had the same logic: syslog_print_all and kmsg_dump_get_buffer:\nthe latter is used for pstore-like dumping)\n\nReported-and-tested-by: Debabrata Banerjee <dbanerje@akamai.com>\nAcked-by: Kay Sievers <kay@vrfy.org>\nCc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nCc: Jeff Mahoney <jeffm@suse.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Linux 3.14-rc3 Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs fixes from Chris Mason:\n \"We have a small collection of fixes in my for-linus branch.\n\n  The big thing that stands out is a revert of a new ioctl.  Users\n  haven't shipped yet in btrfs-progs, and Dave Sterba found a better way\n  to export the information\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: use right clone root offset for compressed extents\n  btrfs: fix null pointer deference at btrfs_sysfs_add_one+0x105\n  Btrfs: unset DCACHE_DISCONNECTED when mounting default subvol\n  Btrfs: fix max_inline mount option\n  Btrfs: fix a lockdep warning when cleaning up aborted transaction\n  Revert \"btrfs: add ioctl to export size of global metadata reservation\" Merge tag 'dt-fixes-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull devicetree fixes from Rob Herring:\n \"Fix booting on PPC boards.  Changes to of_match_node matching caused\n  the serial port on some PPC boards to stop working.  Reverted the\n  change and reimplement to split matching between new style compatible\n  only matching and fallback to old matching algorithm\"\n\n* tag 'dt-fixes-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  of: search the best compatible match first in __of_match_node()\n  Revert \"OF: base: match each node compatible against all given matches first\" Merge git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target fixes from Nicholas Bellinger:\n \"Mostly minor fixes this time to v3.14-rc1 related changes.  Also\n  included is one fix for a free after use regression in persistent\n  reservations UNREGISTER logic that is CC'ed to >= v3.11.y stable\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:\n  Target/sbc: Fix protection copy routine\n  IB/srpt: replace strict_strtoul() with kstrtoul()\n  target: Simplify command completion by removing CMD_T_FAILED flag\n  iser-target: Fix leak on failure in isert_conn_create_fastreg_pool\n  iscsi-target: Fix SNACK Type 1 + BegRun=0 handling\n  target: Fix missing length check in spc_emulate_evpd_83()\n  qla2xxx: Remove last vestiges of qla_tgt_cmd.cmd_list\n  target: Fix 32-bit + CONFIG_LBDAF=n link error w/ sector_div\n  target: Fix free-after-use regression in PR unregister Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"i2c has a bugfix and documentation improvements for you\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  Documentation: i2c: mention ACPI method for instantiating devices\n  Documentation: i2c: describe devicetree method for instantiating devices\n  i2c: mv64xxx: refactor message start to ensure proper initialization Merge branches 'irq-urgent-for-linus' and 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq update from Thomas Gleixner:\n \"Fix from the urgent branch: a trivial oneliner adding the missing\n  Kconfig dependency curing build failures which have been discovered by\n  several build robots.\n\n  The update in the irq-core branch provides a new function in the\n  irq/devres code, which is a prerequisite for driver developers to get\n  rid of boilerplate code all over the place.\n\n  Not a bugfix, but it has zero impact on the current kernel due to the\n  lack of users.  It's simpler to provide the infrastructure to\n  interested parties via your tree than fulfilling the wishlist of\n  driver maintainers on which particular commit or tag this should be\n  based on\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Add missing irq_to_desc export for CONFIG_SPARSE_IRQ=n\n\n* 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Add devm_request_any_context_irq() Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer fixes from Thomas Gleixner:\n \"The following trilogy of patches brings you:\n\n   - fix for a long standing math overflow issue with HZ < 60\n\n   - an onliner fix for a corner case in the dreaded tick broadcast\n     mechanism affecting a certain range of AMD machines which are\n     infested with the infamous automagic C1E power control misfeature\n\n   - a fix for one of the ARM platforms which allows the kernel to\n     proceed and boot instead of stupidly panicing for no good reason.\n     The patch is slightly larger than necessary, but it's less ugly\n     than the alternative 5 liner\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  tick: Clear broadcast pending bit when switching to oneshot\n  clocksource: Kona: Print warning rather than panic\n  time: Fix overflow when HZ is smaller than 60 Merge tag 'trace-fixes-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull twi tracing fixes from Steven Rostedt:\n \"Two urgent fixes in the tracing utility.\n\n  The first is a fix for the way the ring buffer stores timestamps.\n  After a restructure of the code was done, the ring buffer timestamp\n  logic missed the fact that the first event on a sub buffer is to have\n  a zero delta, as the full timestamp is stored on the sub buffer\n  itself.  But because the delta was not cleared to zero, the timestamp\n  for that event will be calculated as the real timestamp + the delta\n  from the last timestamp.  This can skew the timestamps of the events\n  and have them say they happened when they didn't really happen.\n  That's bad.\n\n  The second fix is for modifying the function graph caller site.  When\n  the stop machine was removed from updating the function tracing code,\n  it missed updating the function graph call site location.  It is still\n  modified as if it is being done via stop machine.  But it's not.  This\n  can lead to a GPF and kernel crash if the function graph call site\n  happens to lie between cache lines and one CPU is executing it while\n  another CPU is doing the update.  It would be a very hard condition to\n  hit, but the result is severe enough to have it fixed ASAP\"\n\n* tag 'trace-fixes-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  ftrace/x86: Use breakpoints for converting function graph caller\n  ring-buffer: Fix first commit on sub-buffer having non-zero delta Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 EFI fixes from Peter Anvin:\n \"A few more EFI-related fixes\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/efi: Check status field to validate BGRT header\n  x86/efi: Fix 32-bit fallout Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Kevin Hilman:\n \"A collection of ARM SoC fixes for v3.14-rc1.\n\n  Mostly a collection of Kconfig, device tree data and compilation fixes\n  along with fix to drivers/phy that fixes a boot regression on some\n  Marvell mvebu platforms\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  dma: mv_xor: Silence a bunch of LPAE-related warnings\n  ARM: ux500: disable msp2 device tree node\n  ARM: zynq: Reserve not DMAable space in front of the kernel\n  ARM: multi_v7_defconfig: Select CONFIG_SOC_DRA7XX\n  ARM: imx6: Initialize low-power mode early again\n  ARM: pxa: fix various compilation problems\n  ARM: pxa: fix compilation problem on AM300EPD board\n  ARM: at91: add Atmel's SAMA5D3 Xplained board\n  spi/atmel: document clock properties\n  mmc: atmel-mci: document clock properties\n  ARM: at91: enable USB host on at91sam9n12ek board\n  ARM: at91/dt: fix sama5d3 ohci hclk clock reference\n  ARM: at91/dt: sam9263: fix compatibility string for the I2C\n  ata: sata_mv: Fix probe failures with optional phys\n  drivers: phy: Add support for optional phys\n  drivers: phy: Make NULL a valid phy reference\n  ARM: fix HAVE_ARM_TWD selection for OMAP and shmobile\n  ARM: moxart: move DMA_OF selection to driver\n  ARM: hisi: fix kconfig warning on HAVE_ARM_TWD Merge tag 'usb-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here is a bunch of USB fixes for 3.14-rc3.  Most of these are xhci\n  reverts, fixing a bunch of reported issues with USB 3 host controller\n  issues that loads of people have been hitting (with the exception of\n  kernel developers, all of our machines seem to be working fine, which\n  is why these took so long to get resolved...)\n\n  There are some other minor fixes and new device ids, as ususal.  All\n  have been in linux-next successfully\"\n\n* tag 'usb-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb: (22 commits)\n  usb: option: blacklist ZTE MF667 net interface\n  Revert \"usb: xhci: Link TRB must not occur within a USB payload burst\"\n  Revert \"xhci: Avoid infinite loop when sg urb requires too many trbs\"\n  Revert \"xhci: Set scatter-gather limit to avoid failed block writes.\"\n  xhci 1.0: Limit arbitrarily-aligned scatter gather.\n  Modpost: fixed USB alias generation for ranges including 0x9 and 0xA\n  usb: core: Fix potential memory leak adding dyn USBdevice IDs\n  USB: ftdi_sio: add Tagsys RFID Reader IDs\n  usb: qcserial: add Netgear Aircard 340U\n  usb-storage: enable multi-LUN scanning when needed\n  USB: simple: add Dynastream ANT USB-m Stick device support\n  usb-storage: add unusual-devs entry for BlackBerry 9000\n  usb-storage: restrict bcdDevice range for Super Top in Cypress ATACB\n  usb: phy: move some error messages to debug\n  usb: ftdi_sio: add Mindstorms EV3 console adapter\n  usb: dwc2: fix memory corruption in dwc2 driver\n  usb: dwc2: fix role switch breakage\n  usb: dwc2: bail out early when booting with \"nousb\"\n  Revert \"xhci: replace xhci_read_64() with readq()\"\n  Revert \"xhci: replace xhci_write_64() with writeq()\"\n  ... Merge tag 'tty-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty/serial driver fixes from Greg KH:\n \"Here are a small number of tty/serial driver fixes to resolve reported\n  issues with 3.14-rc and earlier (in the case of the vt bugfix).  Some\n  of these have been tested and reported by a number of people as the\n  tty bugfix was pretty commonly hit on some platforms.\n\n  All have been in linux-next for a while\"\n\n* tag 'tty-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  vt: Fix secure clear screen\n  serial: 8250: Support XR17V35x fraction divisor\n  n_tty: Fix stale echo output\n  serial: sirf: fix kernel panic caused by unpaired spinlock\n  serial: 8250_pci: unbreak last serial ports on NetMos 9865 cards\n  n_tty: Fix poll() when TIME_CHAR and MIN_CHAR == 0\n  serial: omap: fix rs485 probe on defered pinctrl\n  serial: 8250_dw: fix compilation warning when !CONFIG_PM_SLEEP\n  serial: omap-serial: Move info message to probe function\n  tty: Set correct tty name in 'active' sysfs attribute\n  tty: n_gsm: Fix for modems with brk in modem status control\n  drivers/tty/hvc: don't use module_init in non-modular hyp. console code Merge tag 'staging-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull staging driver fixes from Greg KH:\n \"Here are a number (lots, I know) of fixes for staging drivers to\n  resolve a bunch of reported issues.\n\n  The largest patches here is one revert of a patch that is in 3.14-rc1\n  to fix reported problems, and a sync of a usb host driver that\n  required some ARM patches to go in before it could be accepted (which\n  is why it missed -rc1)\n\n  All of these have been in linux-next for a while with no reported\n  issues\"\n\n* tag 'staging-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging: (56 commits)\n  staging/rtl8821ae: fix build, depends on MAC80211\n  iio: max1363: Use devm_regulator_get_optional for optional regulator\n  iio:accel:bma180: Use modifier instead of index in channel specification\n  iio: adis16400: Set timestamp as the last element in chan_spec\n  iio: ak8975: Fix calculation formula for convert micro tesla to gauss unit\n  staging:iio:ad799x fix typo in ad799x_events[]\n  iio: mxs-lradc: remove useless scale_available files\n  iio: mxs-lradc: fix buffer overflow\n  iio:magnetometer:mag3110: Fix output of decimal digits in show_int_plus_micros()\n  iio:magnetometer:mag3110: Report busy in _read_raw() / write_raw() when buffer is enabled\n  wlags49_h2: Fix overflow in wireless_set_essid()\n  xlr_net: Fix missing trivial allocation check\n  staging: r8188eu: overflow in rtw_p2p_get_go_device_address()\n  staging: r8188eu: array overflow in rtw_mp_ioctl_hdl()\n  staging: r8188eu: Fix typo in USB_DEVICE list\n  usbip/userspace/libsrc/names.c: memory leak\n  gpu: ion: dereferencing an ERR_PTR\n  staging: comedi: usbduxsigma: fix unaligned dereferences\n  staging: comedi: fix too early cleanup in comedi_auto_config()\n  staging: android: ion: dummy: fix an error code\n  ... Merge tag 'driver-core-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fix from Greg KH:\n \"Here is a single driver core patch for 3.14-rc3 for the component code\n  that Russell has found and fixed\"\n\n* tag 'driver-core-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  drivers/base: fix devres handling for master device Merge tag 'char-misc-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc fixes from Greg KH:\n \"Here are some small char/misc driver fixes, along with some\n  documentation updates, for 3.14-rc3.  Nothing major, just a number of\n  fixes for reported issues\"\n\n* tag 'char-misc-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  Revert \"misc: eeprom: sunxi: Add new compatibles\"\n  Revert \"ARM: sunxi: dt: Convert to the new SID compatibles\"\n  misc: mic: fix possible signed underflow (undefined behavior) in userspace API\n  ARM: sunxi: dt: Convert to the new SID compatibles\n  misc: eeprom: sunxi: Add new compatibles\n  misc: genwqe: Fix potential memory leak when pinning memory\n  Documentation:Update Documentation/zh_CN/arm64/memory.txt\n  Documentation:Update Documentation/zh_CN/arm64/booting.txt\n  Documentation:Chinese translation of Documentation/arm64/tagged-pointers.txt\n  raw: set range for MAX_RAW_DEVS\n  raw: test against runtime value of max_raw_minors\n  Drivers: hv: vmbus: Don't timeout during the initial connection with host\n  Drivers: hv: vmbus: Specify the target CPU that should receive notification\n  VME: Correct read/write alignment algorithm\n  mei: don't unset read cb ptr on reset\n  mei: clear write cb from waiting list on reset Merge branch 'for-3.14' of git://linux-nfs.org/~bfields/linux\n\nPull two nfsd bugfixes from Bruce Fields.\n\n* 'for-3.14' of git://linux-nfs.org/~bfields/linux:\n  lockd: send correct lock when granting a delayed lock.\n  nfsd4: fix acl buffer overrun Merge tag 'md/3.14-fixes' of git://neil.brown.name/md\n\nPull md fixes from Neil Brown:\n \"Two bugfixes for md\n\n  both tagged for -stable\"\n\n* tag 'md/3.14-fixes' of git://neil.brown.name/md:\n  md/raid5: Fix CPU hotplug callback registration\n  md/raid1: restore ability for check and repair to fix read errors. Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n \"A small error handling problem and a compile breakage for ARM64\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  arm64: KVM: Add VGIC device control for arm64\n  KVM: return an error code in kvm_vm_ioctl_register_coalesced_mmio() Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"A collection of small fixes:\n\n   - There still seem to be problems with asm goto which requires the\n     empty asm hack.\n   - If SMAP is disabled at compile time, don't enable it nor try to\n     interpret a page fault as an SMAP violation.\n   - Fix a case of unbounded recursion while tracing\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, smap: smap_violation() is bogus if CONFIG_X86_SMAP is off\n  x86, smap: Don't enable SMAP if CONFIG_X86_SMAP is disabled\n  compiler/gcc4: Make quirk for asm_volatile_goto() unconditional\n  x86: Use preempt_disable_notrace() in cycles_2_ns() Merge tag 'pm+acpi-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These include a fix for a recent intel_pstate regression, a fix for a\n  regression in the ACPI-based PCI hotplug (ACPIPHP) code introduced\n  during the 3.12 cycle, fixes for two bugs in the ACPI core introduced\n  recently and a MAINTAINERS update related to cpufreq.\n\n  Specifics:\n\n   - Fix for a recent regression in the intel_pstate driver that\n     introduced a race condition causing systems to crash during\n     initialization in some situations.  This removes the affected code\n     altogether.  From Dirk Brandewie.\n\n   - ACPIPHP fix for a regression introduced during the 3.12 cycle\n     causing devices to be dropped as a result of bus check\n     notifications after system resume on some systems due to the way\n     ACPIPHP interprets _STA return values (arguably incorrectly).  From\n     Mika Westerberg.\n\n   - ACPI dock driver fix for a problem causing docking to fail due to a\n     check that always fails after recent ACPI core changes (found by\n     code inspection).\n\n   - ACPI container driver fix to prevent memory from being leaked in an\n     error code path after device_register() failures.\n\n   - Update of the arm_big_little cpufreq driver maintainer's e-mail\n     address\"\n\n* tag 'pm+acpi-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  MAINTAINERS / cpufreq: update Sudeep's email address\n  intel_pstate: Remove energy reporting from pstate_sample tracepoint\n  ACPI / container: Fix error code path in container_device_attach()\n  ACPI / hotplug / PCI: Relax the checking of _STA return values\n  ACPI / dock: Use acpi_device_enumerated() to check if dock is present Merge tag 'edac_for_3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp\n\nPull EDAC fixes from Borislav Petkov:\n \"Fix polling timeout setting through sysfs.\n\n  You're surely wondering why the patches are not based on an rc.  Well,\n  Andrew sent you 79040cad3f82 (\"drivers/edac/edac_mc_sysfs.c: poll\n  timeout cannot be zero sent you\") already (it got in in -rc2) but it\n  is not enough as a fix because for one, setting too low polling\n  intervals (< 1sec) don't make any sense and cause unnecessary polling\n  load on the system.\n\n  Then, even if we set some interval, we explode with\n\n    [ 4143.094342] WARNING: CPU: 1 PID: 0 at kernel/workqueue.c:1393 __queue_work+0x1d7/0x340()\n\n  because the workqueue setup path is used also for the timeout period\n  resetting and we're doing INIT_DELAYED_WORK() on an already active\n  workqueue.  Which is total bollocks.  So this is taken care of by the\n  second patch.\n\n  I've CCed stable for those two\"\n\n* tag 'edac_for_3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:\n  EDAC: Correct workqueue setup path\n  EDAC: Poll timeout cannot be zero, p2 Merge tag 'fbdev-fixes-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux\n\nPull fbdev fixes from Tomi Valkeinen:\n \"Minor fbdev fixes for 3.14\"\n\n* tag 'fbdev-fixes-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux:\n  video: Kconfig: Allow more broad selection of the imxfb framebuffer driver.\n  video: exynos: Fix S6E8AX0 LCD driver build error\n  OMAPDSS: fix fck field types\n  OMAPDSS: DISPC: decimation rounding fix Merge branch 'for-linus' of git://git.kernel.dk/linux-block\n\nPull block IO fixes from Jens Axboe:\n \"Second round of updates and fixes for 3.14-rc2.  Most of this stuff\n  has been queued up for a while.  The notable exception is the blk-mq\n  changes, which are naturally a bit more in flux still.\n\n  The pull request contains:\n\n   - Two bug fixes for the new immutable vecs, causing crashes with raid\n     or swap.  From Kent.\n\n   - Various blk-mq tweaks and fixes from Christoph.  A fix for\n     integrity bio's from Nic.\n\n   - A few bcache fixes from Kent and Darrick Wong.\n\n   - xen-blk{front,back} fixes from David Vrabel, Matt Rushton, Nicolas\n     Swenson, and Roger Pau Monne.\n\n   - Fix for a vec miscount with integrity vectors from Martin.\n\n   - Minor annotations or fixes from Masanari Iida and Rashika Kheria.\n\n   - Tweak to null_blk to do more normal FIFO processing of requests\n     from Shlomo Pongratz.\n\n   - Elevator switching bypass fix from Tejun.\n\n   - Softlockup in blkdev_issue_discard() fix when !CONFIG_PREEMPT from\n     me\"\n\n* 'for-linus' of git://git.kernel.dk/linux-block: (31 commits)\n  block: add cond_resched() to potentially long running ioctl discard loop\n  xen-blkback: init persistent_purge_work work_struct\n  blk-mq: pair blk_mq_start_request / blk_mq_requeue_request\n  blk-mq: dont assume rq->errors is set when returning an error from ->queue_rq\n  block: Fix cloning of discard/write same bios\n  block: Fix type mismatch in ssize_t_blk_mq_tag_sysfs_show\n  blk-mq: rework flush sequencing logic\n  null_blk: use blk_complete_request and blk_mq_complete_request\n  virtio_blk: use blk_mq_complete_request\n  blk-mq: rework I/O completions\n  fs: Add prototype declaration to appropriate header file include/linux/bio.h\n  fs: Mark function as static in fs/bio-integrity.c\n  block/null_blk: Fix completion processing from LIFO to FIFO\n  block: Explicitly handle discard/write same segments\n  block: Fix nr_vecs for inline integrity vectors\n  blk-mq: Add bio_integrity setup to blk_mq_make_request\n  blk-mq: initialize sg_reserved_size\n  blk-mq: handle dma_drain_size\n  blk-mq: divert __blk_put_request for MQ ops\n  blk-mq: support at_head inserations for blk_execute_rq\n  ... Merge tag 'sound-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Again only fixes for HD-audio:\n   - regression fixes due to the modularization\n   - a few fixups for Dell, Sony and HP laptops\n   - a revert of the previous fix as it leads to another regression\"\n\n* tag 'sound-3.14-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: Revert \"ALSA: hda/realtek - Avoid invalid COEFs for ALC271X\"\n  ALSA: hda - Fix undefined symbol due to builtin/module mixup\n  ALSA: hda - Fix mic capture on Sony VAIO Pro 11\n  ALSA: hda - Add a headset quirk for Dell XPS 13\n  ALSA: hda - Fix inconsistent Mic mute LED\n  ALSA: hda - Fix leftover ifdef checks after modularization Merge tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband\n\nPull RDMA/InfiniBand fixes from Roland Dreier:\n\n - Fix some rough edges from the \"IP addressing for IBoE\" merge\n\n - Other misc fixes, mostly to hardware drivers\n\n* tag 'rdma-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband: (21 commits)\n  RDMA/ocrdma: Fix load time panic during GID table init\n  RDMA/ocrdma: Fix traffic class shift\n  IB/iser: Fix use after free in iser_snd_completion()\n  IB/iser: Avoid dereferencing iscsi_iser conn object when not bound to iser connection\n  IB/usnic: Fix smatch endianness error\n  IB/mlx5: Remove dependency on X86\n  mlx5: Add include of <linux/slab.h> because of kzalloc()/kfree() use\n  IB/qib: Add missing serdes init sequence\n  RDMA/cxgb4: Add missing neigh_release in LE-Workaround path\n  IB: Report using RoCE IP based gids in port caps\n  IB/mlx4: Build the port IBoE GID table properly under bonding\n  IB/mlx4: Do IBoE GID table resets per-port\n  IB/mlx4: Do IBoE locking earlier when initializing the GID table\n  IB/mlx4: Move rtnl locking to the right place\n  IB/mlx4: Make sure GID index 0 is always occupied\n  IB/mlx4: Don't allocate range of steerable UD QPs for Ethernet-only device\n  RDMA/amso1100: Fix error return code\n  RDMA/nes: Fix error return code\n  IB/mlx5: Don't set \"block multicast loopback\" capability\n  IB/mlx5: Fix binary compatibility with libmlx5\n  ... Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fix from Guenter Roeck:\n \"Fix arithmetic overflow in ntc_thermistor driver\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (ntc_thermistor) Avoid math overflow Merge tag 'for-v3.14-fixes' of git://git.infradead.org/battery-2.6\n\nPull battery fixes from Dmitry Eremin-Solenikov:\n\n - Fix NULL pointer dereference in max17040 driver\n\n - Add bq2415x dts bindings documentation\n\n - Fix misleading comment in ds2782 driver\n\n - Remove useless check in isp1704 charger driver.\n\n* tag 'for-v3.14-fixes' of git://git.infradead.org/battery-2.6:\n  power: max17040: Fix NULL pointer dereference when there is no platform_data\n  dt: binding documentation for bq2415x charger\n  isp1704_charger: remove useless check in isp1704_charger_probe()\n  power: ds2782_battery: Typo in comment Merge tag 'stable/for-linus-3.14-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen bugfixes from Konrad Rzeszutek Wilk:\n \"This has an healthy amount of code being removed - which we do not use\n  anymore (the only user of it was ia64 Xen which had been removed\n  already).  The other bug-fixes are to make Xen ARM be able to use the\n  new event channel mechanism and proper export of header files to\n  user-space.\n\n  Summary:\n   - Fix ARM and Xen FIFO not working.\n   - Remove more Xen ia64 vestigates.\n   - Fix UAPI missing Xen files\"\n\n* tag 'stable/for-linus-3.14-rc2-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  ia64/xen: Remove Xen support for ia64 even more\n  xen: install xen/gntdev.h and xen/gntalloc.h\n  xen/events: bind all new interdomain events to VCPU0 Merge tag 'regulator-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"Two driver fixes, one fixing the mapping of interrupts on da9055\n  (which previously wouldn't have worked at all) and a fix for reference\n  counting OF nodes in the max14577 driver\"\n\n* tag 'regulator-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: da9055: Remove use of regmap_irq_get_virq()\n  regulator: max14577: Add missing of_node_put Merge tag 'gpio-v3.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO fixes from Linus Walleij:\n \"Here are some accumulated patches with small fixes for this and that\n  in a few GPIO drivers, and a more important fix to an #ifdef in the\n  GPIO consumer header.\n\n  Summary:\n\n   - Get #ifdef's right in the <linux/gpio/consumer.h> header.\n\n   - Minor fixes to tb10x, clps711x, bcm281xx, intel-mid and xtensa GPIO\n     drivers\"\n\n* tag 'gpio-v3.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio:\n  gpio: consumer.h: Move forward declarations outside #ifdef\n  gpio: tb10x: GPIO_TB10X needs to select GENERIC_IRQ_CHIP\n  gpio: clps711x: Add module alias to support module auto loading\n  gpio: bcm281xx: Update MODULE_AUTHOR\n  gpio: intel-mid: fix the incorrect return of idle callback\n  gpio: xtensa: fix build when XCHAL_HAVE_CP is 0 Merge tag 'spi-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fixes from Mark Brown:\n \"A few driver and documentation fixes, plus a fix for double error\n  handling which had crept in due to the confusing documentation - it\n  wasn't clear if the core or the driver was responsible for cleanup in\n  error cases so both tried to do it with unfortunate results\"\n\n* tag 'spi-v3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi: nuc900: Set SPI_LSB_FIRST for master->mode_bits if hw->pdata->lsb is true\n  spi: rspi: Document support for Renesas QSPI in Kconfig\n  spi: Fix crash with double message finalisation on error handling\n  spi: correct the transfer_one_message documentation wording\n  spi: document the transfer_one spi_master callback\n  spi: spi.h: clarify the documentation of transfer_one Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Nothing too crazy.\n\n  Radeon irq fixes, i915 regression fixes, exynos fixes, tda998x chip\n  fixes, and a bunch of msm fixes\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: (31 commits)\n  drm/i915: Pair va_copy with va_end in i915_error_vprintf\n  drm/i915: Fix intel_pipe_to_cpu_transcoder for UMS\n  drm/i915: Disable dp aux irq on g4x\n  drm/msm: bigger synchronization hammer\n  drm/exynos: Convert to use the standard hdmi.h header\n  drm/exynos: Fix trivial typo\n  drm/exynos: Remove unnecessary semicolon\n  drm/exynos: Fix multiplatform breakage for ipp/gsc\n  drm/exynos: Fix freeing issues in exynos_drm_drv.c\n  drm/radeon: add missing include in btc_dpm.c\n  drm/radeon/dpm: fix uninitialized read from stack in kv_dpm_late_enable\n  drm/radeon: remove useless return\n  drm/radeon/dpm: use stored max_vddc rather than looking it up\n  drm/radeon/dpm: use the driver state for dpm debugfs\n  drm/radeon: fix UVD IRQ support on 7xx\n  drm/radeon: fix UVD IRQ support on SI\n  drm/msm: fix deadlock in bo create fail path\n  drm/msm/mdp4: cursor fixes\n  drm/msm/mdp4: pageflip fixes\n  drm/msm/mdp5: fix ref leaks in error paths\n  ... Merge branch 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc\n\nPull powerpc updates from Ben Herrenschmidt:\n \"Here is some powerpc goodness for -rc2.  Arguably -rc1 material more\n  than -rc2 but I was travelling (again !)\n\n  It's mostly bug fixes including regressions, but there are a couple of\n  new things that I decided to drop-in.\n\n  One is a straightforward patch from Michael to add a bunch of P8 cache\n  events to perf.\n\n  The other one is a patch by myself to add the direct DMA (iommu\n  bypass) for PCIe on Power8 for 64-bit capable devices.  This has been\n  around for a while, I had lost track of it.  However it's been in our\n  internal kernels we use for testing P8 already and it affects only P8\n  related code.  Since P8 is still unreleased the risk is pretty much\n  nil at this point\"\n\n* 'merge' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc:\n  powerpc/powernv: Add iommu DMA bypass support for IODA2\n  powerpc: Fix endian issues in kexec and crash dump code\n  powerpc/ppc32: Fix the bug in the init of non-base exception stack for UP\n  powerpc/xmon: Don't signal we've entered until we're finished printing\n  powerpc/xmon: Fix timeout loop in get_output_lock()\n  powerpc/xmon: Don't loop forever in get_output_lock()\n  powerpc/perf: Configure BHRB filter before enabling PMU interrupts\n  crypto/nx/nx-842: Fix handling of vmalloc addresses\n  powerpc/pseries: Select ARCH_RANDOM on pseries\n  powerpc/perf: Add Power8 cache & TLB events\n  powerpc/relocate fix relocate processing in LE mode\n  powerpc: Fix kdump hang issue on p8 with relocation on exception enabled.\n  powerpc/pseries: Disable relocation on exception while going down during crash.\n  powerpc/eeh: Drop taken reference to driver on eeh_rmv_device\n  powerpc: Fix build failure in sysdev/mpic.c for MPIC_WEIRD=y Merge tag 'dt-fixes-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull DeviceTree fixes from Rob Herring:\n\n - Fix compile error drivers/spi/spi-rspi.c with !CONFIG_OF\n - Fix warnings for unused/uninitialized variables with !CONFIG_OF\n - Fix PCIe bus matching for powerpc\n - Add documentation for various vendor strings\n\n* tag 'dt-fixes-for-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  DT: Add vendor prefix for Spansion Inc.\n  of/device: Nullify match table in of_match_device() for CONFIG_OF=n\n  dt-bindings: add vendor-prefix for neonode\n  of: fix PCI bus match for PCIe slots\n  of: restructure for_each macros to fix compile warnings\n  of: add vendor prefix for Honeywell\n  of: Update qcom vendor prefix description\n  of: add vendor prefix for Allwinner Technology Merge tag 'microblaze-3.14-rc3' of git://git.monstr.eu/linux-2.6-microblaze\n\nPull microblaze fixes from Michal Simek:\n - Fix two compilation issues - HZ, readq/writeq\n - Fix stack protection support\n\n* tag 'microblaze-3.14-rc3' of git://git.monstr.eu/linux-2.6-microblaze:\n  microblaze: Fix a typo when disabling stack protection\n  microblaze: Define readq and writeq IO helper function\n  microblaze: Fix missing HZ macro Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 bugfixes from Martin Schwidefsky:\n \"A collection a bug fixes.  Most of them are minor but two of them are\n  more severe.  The linkage stack bug can be used by user space to force\n  an oops, with panic_on_oops this is a denial-of-service.  And the dump\n  memory detection issue can cause incomplete memory dumps\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/cio: improve cio_commit_config\n  s390: fix kernel crash due to linkage stack instructions\n  s390/dump: Fix dump memory detection\n  s390/appldata: restore missing init_virt_timer()\n  s390/qdio: correct program-controlled interruption checking\n  s390/qdio: for_each macro correctness Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net\n\nPull networking updates from David Miller:\n\n 1) Fix flexcan build on big endian, from Arnd Bergmann\n\n 2) Correctly attach cpsw to GPIO bitbang MDIO drive, from Stefan Roese\n\n 3) udp_add_offload has to use GFP_ATOMIC since it can be invoked from\n    non-sleepable contexts.  From Or Gerlitz\n\n 4) vxlan_gro_receive() does not iterate over all possible flows\n    properly, fix also from Or Gerlitz\n\n 5) CAN core doesn't use a proper SKB destructor when it hooks up\n    sockets to SKBs.  Fix from Oliver Hartkopp\n\n 6) ip_tunnel_xmit() can use an uninitialized route pointer, fix from\n    Eric Dumazet\n\n 7) Fix address family assignment in IPVS, from Michal Kubecek\n\n 8) Fix ath9k build on ARM, from Sujith Manoharan\n\n 9) Make sure fail_over_mac only applies for the correct bonding modes,\n    from Ding Tianhong\n\n10) The udp offload code doesn't use RCU correctly, from Shlomo Pongratz\n\n11) Handle gigabit features properly in generic PHY code, from Florian\n    Fainelli\n\n12) Don't blindly invoke link operations in\n    rtnl_link_get_slave_info_data_size, they are optional.  Fix from\n    Fernando Luis Vazquez Cao\n\n13) Add USB IDs for Netgear Aircard 340U, from Bjørn Mork\n\n14) Handle netlink packet padding properly in openvswitch, from Thomas\n    Graf\n\n15) Fix oops when deleting chains in nf_tables, from Patrick McHardy\n\n16) Fix RX stalls in xen-netback driver, from Zoltan Kiss\n\n17) Fix deadlock in mac80211 stack, from Emmanuel Grumbach\n\n18) inet_nlmsg_size() forgets to consider ifa_cacheinfo, fix from Geert\n    Uytterhoeven\n\n19) tg3_change_mtu() can deadlock, fix from Nithin Sujir\n\n20) Fix regression in setting SCTP local source addresses on accepted\n    sockets, caused by some generic ipv6 socket changes.  Fix from\n    Matija Glavinic Pecotic\n\n21) IPPROTO_* must be pure defines, otherwise module aliases don't get\n    constructed properly.  Fix from Jan Moskyto\n\n22) IPV6 netconsole setup doesn't work properly unless an explicit\n    source address is specified, fix from Sabrina Dubroca\n\n23) Use __GFP_NORETRY for high order skb page allocations in\n    sock_alloc_send_pskb and skb_page_frag_refill.  From Eric Dumazet\n\n24) Fix a regression added in netconsole over bridging, from Cong Wang\n\n25) TCP uses an artificial offset of 1ms for SRTT, but this doesn't jive\n    well with TCP pacing which needs the SRTT to be accurate.  Fix from\n    Eric Dumazet\n\n26) Several cases of missing header file includes from Rashika Kheria\n\n27) Add ZTE MF667 device ID to qmi_wwan driver, from Raymond Wanyoike\n\n28) TCP Small Queues doesn't handle nonagle properly in some corner\n    cases, fix from Eric Dumazet\n\n29) Remove extraneous read_unlock in bond_enslave, whoops.  From Ding\n    Tianhong\n\n30) Fix 9p trans_virtio handling of vmalloc buffers, from Richard Yao\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (136 commits)\n  6lowpan: fix lockdep splats\n  alx: add missing stats_lock spinlock init\n  9p/trans_virtio.c: Fix broken zero-copy on vmalloc() buffers\n  bonding: remove unwanted bond lock for enslave processing\n  USB2NET : SR9800 : One chip USB2.0 USB2NET SR9800 Device Driver Support\n  tcp: tsq: fix nonagle handling\n  bridge: Prevent possible race condition in br_fdb_change_mac_address\n  bridge: Properly check if local fdb entry can be deleted when deleting vlan\n  bridge: Properly check if local fdb entry can be deleted in br_fdb_delete_by_port\n  bridge: Properly check if local fdb entry can be deleted in br_fdb_change_mac_address\n  bridge: Fix the way to check if a local fdb entry can be deleted\n  bridge: Change local fdb entries whenever mac address of bridge device changes\n  bridge: Fix the way to find old local fdb entries in br_fdb_change_mac_address\n  bridge: Fix the way to insert new local fdb entries in br_fdb_changeaddr\n  bridge: Fix the way to find old local fdb entries in br_fdb_changeaddr\n  tcp: correct code comment stating 3 min timeout for FIN_WAIT2, we only do 1 min\n  net: vxge: Remove unused device pointer\n  net: qmi_wwan: add ZTE MF667\n  3c59x: Remove unused pointer in vortex_eisa_cleanup()\n  net: fix 'ip rule' iif/oif device rename\n  ... Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge misc fixes from Andrew Morton:\n \"A bunch of fixes\"\n\n* emailed patches fron Andrew Morton <akpm@linux-foundation.org>:\n  ocfs2: check existence of old dentry in ocfs2_link()\n  ocfs2: update inode size after zeroing the hole\n  ocfs2: fix issue that ocfs2_setattr() does not deal with new_i_size==i_size\n  mm/memory-failure.c: move refcount only in !MF_COUNT_INCREASED\n  smp.h: fix x86+cpu.c sparse warnings about arch nonboot CPU calls\n  mm: fix page leak at nfs_symlink()\n  slub: do not assert not having lock in removing freed partial\n  gitignore: add all.config\n  ocfs2: fix ocfs2_sync_file() if filesystem is readonly\n  drivers/edac/edac_mc_sysfs.c: poll timeout cannot be zero\n  fs/file.c:fdtable: avoid triggering OOMs from alloc_fdmem\n  xen: properly account for _PAGE_NUMA during xen pte translations\n  mm/slub.c: list_lock may not be held in some circumstances\n  drivers/md/bcache/extents.c: use %zi to format size_t\n  vmcore: prevent PT_NOTE p_memsz overflow during header update\n  drivers/message/i2o/i2o_config.c: fix deadlock in compat_ioctl(I2OGETIOPS)\n  Documentation/: update 00-INDEX files\n  checkpatch: fix detection of git repository\n  get_maintainer: fix detection of git repository\n  drivers/misc/sgi-gru/grukdump.c: unlocking should be conditional in gru_dump_context() Merge branch 'for-next' of git://git.samba.org/sfrench/cifs-2.6\n\nPull CIFS fixes from Steve French:\n \"Small fix from Jeff for writepages leak, and some fixes for ACLs and\n  xattrs when SMB2 enabled.\n\n  Am expecting another fix from Jeff and at least one more fix (for\n  mounting SMB2 with cifsacl) in the next week\"\n\n* 'for-next' of git://git.samba.org/sfrench/cifs-2.6:\n  [CIFS] clean up page array when uncached write send fails\n  cifs: use a flexarray in cifs_writedata\n  retrieving CIFS ACLs when mounted with SMB2 fails dropping session\n  Add protocol specific operation for CIFS xattrs Linux 3.14-rc2 Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security\n\nPull SELinux fixes from James Morris.\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security:\n  SELinux:  Fix kernel BUG on empty security contexts.\n  selinux: add SOCK_DIAG_BY_FAMILY to the list of netlink message types Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"A couple of fixes, both -stable fodder.  The O_SYNC bug is fairly\n  old...\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix a kmap leak in virtio_console\n  fix O_SYNC|O_APPEND syncing the wrong range on write() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs fixes from Chris Mason:\n \"This is a small collection of fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: fix data corruption when reading/updating compressed extents\n  Btrfs: don't loop forever if we can't run because of the tree mod log\n  btrfs: reserve no transaction units in btrfs_ioctl_set_features\n  btrfs: commit transaction after setting label and features\n  Btrfs: fix assert screwup for the pending move stuff Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Tooling fixes, mostly related to the KASLR fallout, but also other\n  fixes\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf buildid-cache: Check relocation when checking for existing kcore\n  perf tools: Adjust kallsyms for relocated kernel\n  perf tests: No need to set up ref_reloc_sym\n  perf symbols: Prevent the use of kcore if the kernel has moved\n  perf record: Get ref_reloc_sym from kernel map\n  perf machine: Set up ref_reloc_sym in machine__create_kernel_maps()\n  perf machine: Add machine__get_kallsyms_filename()\n  perf tools: Add kallsyms__get_function_start()\n  perf symbols: Fix symbol annotation for relocated kernel\n  perf tools: Fix include for non x86 architectures\n  perf tools: Fix AAAAARGH64 memory barriers\n  perf tools: Demangle kernel and kernel module symbols too\n  perf/doc: Remove mention of non-existent set_perf_event_pending() from design.txt Merge tag 'pinctrl-v3.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pinctrl fixes from Linus Walleij:\n \"First round of pin control fixes for v3.14:\n\n   - Protect pinctrl_list_add() with the proper mutex.  This was\n     identified by RedHat.  Caused nasty locking warnings was rootcased\n     by Stanislaw Gruszka.\n\n   - Avoid adding dangerous debugfs files when either half of the\n     subsystem is unused: pinmux or pinconf.\n\n   - Various fixes to various drivers: locking, hardware particulars, DT\n     parsing, error codes\"\n\n* tag 'pinctrl-v3.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:\n  pinctrl: tegra: return correct error type\n  pinctrl: do not init debugfs entries for unimplemented functionalities\n  pinctrl: protect pinctrl_list add\n  pinctrl: sirf: correct the pin index of ac97_pins group\n  pinctrl: imx27: fix offset calculation in imx_read_2bit\n  pinctrl: vt8500: Change devicetree data parsing\n  pinctrl: imx27: fix wrong offset to ICONFB\n  pinctrl: at91: use locked variant of irq_set_handler Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fix from Thomas Gleixner:\n \"Add a missing Kconfig dependency\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq: Generic irq chip requires IRQ_DOMAIN Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Peter Anvin:\n \"Quite a varied little collection of fixes.  Most of them are\n  relatively small or isolated; the biggest one is Mel Gorman's fixes\n  for TLB range flushing.\n\n  A couple of AMD-related fixes (including not crashing when given an\n  invalid microcode image) and fix a crash when compiled with gcov\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, microcode, AMD: Unify valid container checks\n  x86, hweight: Fix BUG when booting with CONFIG_GCOV_PROFILE_ALL=y\n  x86/efi: Allow mapping BGRT on x86-32\n  x86: Fix the initialization of physnode_map\n  x86, cpu hotplug: Fix stack frame warning in check_irq_vectors_for_cpu_disable()\n  x86/intel/mid: Fix X86_INTEL_MID dependencies\n  arch/x86/mm/srat: Skip NUMA_NO_NODE while parsing SLIT\n  mm, x86: Revisit tlb_flushall_shift tuning for page flushes except on IvyBridge\n  x86: mm: change tlb_flushall_shift for IvyBridge\n  x86/mm: Eliminate redundant page table walk during TLB range flushing\n  x86/mm: Clean up inconsistencies when flushing TLB ranges\n  mm, x86: Account for TLB flushes only when debugging\n  x86/AMD/NB: Fix amd_set_subcaches() parameter type\n  x86/quirks: Add workaround for AMD F16h Erratum792\n  x86, doc, kconfig: Fix dud URL for Microcode data Merge tag 'jfs-3.14-rc2' of git://github.com/kleikamp/linux-shaggy\n\nPull jfs fix from David Kleikamp:\n \"Fix regression\"\n\n* tag 'jfs-3.14-rc2' of git://github.com/kleikamp/linux-shaggy:\n  jfs: fix generic posix ACL regression Merge tag 'driver-core-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core\n\nPull driver core fix from Greg KH:\n \"Here is a single kernfs fix to resolve a much-reported lockdep issue\n  with the removal of entries in sysfs\"\n\n* tag 'driver-core-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:\n  kernfs: make kernfs_deactivate() honor KERNFS_LOCKDEP flag Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull ceph fixes from Sage Weil:\n \"There is an RBD fix for a crash due to the immutable bio changes, an\n  error path fix, and a locking fix in the recent redirect support\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  libceph: do not dereference a NULL bio pointer\n  libceph: take map_sem for read in handle_reply()\n  libceph: factor out logic from ceph_osdc_start_request()\n  libceph: fix error handling in ceph_osdc_init() Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Catalin Marinas:\n - Relax VDSO alignment requirements so that the kernel-picked one (4K)\n   does not conflict with the dynamic linker's one (64K)\n - VDSO gettimeofday fix\n - Barrier fixes for atomic operations and cache flushing\n - TLB invalidation when overriding early page mappings during boot\n - Wired up new 32-bit arm (compat) syscalls\n - LSM_MMAP_MIN_ADDR when COMPAT is enabled\n - defconfig update\n - Clean-up (comments, pgd_alloc).\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: defconfig: Expand default enabled features\n  arm64: asm: remove redundant \"cc\" clobbers\n  arm64: atomics: fix use of acquire + release for full barrier semantics\n  arm64: barriers: allow dsb macro to take option parameter\n  security: select correct default LSM_MMAP_MIN_ADDR on arm on arm64\n  arm64: compat: Wire up new AArch32 syscalls\n  arm64: vdso: update wtm fields for CLOCK_MONOTONIC_COARSE\n  arm64: vdso: fix coarse clock handling\n  arm64: simplify pgd_alloc\n  arm64: fix typo: s/SERRROR/SERROR/\n  arm64: Invalidate the TLB when replacing pmd entries during boot\n  arm64: Align CMA sizes to PAGE_SIZE\n  arm64: add DSB after icache flush in __flush_icache_all()\n  arm64: vdso: prevent ld from aligning PT_LOAD segments to 64k Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS updates from Ralf Baechle:\n \"hree minor patches.  All have sat in -next for a few days\"\n\n* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: fpu.h: Fix build when CONFIG_BUG is not set\n  MIPS: Wire up sched_setattr/sched_getattr syscalls\n  MIPS: Alchemy: Fix DB1100 GPIO registration Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"A series of small fixes.  Mostly driver ones.  There is one core\n  regression fix on a patch that was meant to fix some race issues on\n  vb2, but that actually caused more harm than good.  So, we're just\n  reverting it for now\"\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  [media] adv7842: Composite free-run platfrom-data fix\n  [media] v4l2-dv-timings: fix GTF calculation\n  [media] hdpvr: Fix memory leak in debug\n  [media] af9035: add ID [2040:f900] Hauppauge WinTV-MiniStick 2\n  [media] mxl111sf: Fix compile when CONFIG_DVB_USB_MXL111SF is unset\n  [media] mxl111sf: Fix unintentional garbage stack read\n  [media] cx24117: use a valid dev pointer for dev_err printout\n  [media] cx24117: remove dead code in always 'false' if statement\n  [media] update Michael Krufky's email address\n  [media] vb2: Check if there are buffers before streamon\n  [media] Revert \"[media] videobuf_vm_{open,close} race fixes\"\n  [media] go7007-loader: fix usb_dev leak\n  [media] media: bt8xx: add missing put_device call\n  [media] exynos4-is: Compile in fimc-lite runtime PM callbacks conditionally\n  [media] exynos4-is: Compile in fimc runtime PM callbacks conditionally\n  [media] exynos4-is: Fix error paths in probe() for !pm_runtime_enabled()\n  [media] s5p-jpeg: Fix wrong NV12 format parameters\n  [media] s5k5baf: allow to handle arbitrary long i2c sequences Merge tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fixes from Guenter Roeck:\n \"Fix PMBus driver problem with some multi-page voltage sensors and fix\n  da9055 interrupt initialization\"\n\n* tag 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (da9055) Remove use of regmap_irq_get_virq()\n  hwmon: (pmbus) Support per-page exponent in linear mode Merge tag 'pm+acpi-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes from Rafael Wysocki:\n \"These include a fix for a recent ACPI hotplug regression, four\n  concurrency related fixes and one PCI device removal fix for\n  ACPI-based PCI hotplug (ACPIPHP), intel_pstate fix that should go into\n  stable, three simple ACPI cleanups and a new entry for the ACPI video\n  blacklist.\n\n  Specifics:\n\n   - Fix for a recent ACPI hotplug regression causing a NULL pointer\n     dereference to occur while handling ACPI eject notifications for\n     already ejected devices.  From Toshi Kani.\n\n   - Four concurrency-related fixes for ACPIPHP.  Two of them add\n     missing locking and the other two fix race conditions related to\n     reference counting.\n\n   - ACPIPHP fix to avoid NULL pointer dereferences during device\n     removal involving Virtual Funcions.\n\n   - intel_pstate fix to make it compute the percentage of time the CPU\n     is busy properly.  From Dirk Brandewie.\n\n   - Removal of two unnecessary NULL pointer checks in ACPI code and a\n     fix for sscanf() format string from Dan Carpenter and Luis G.F.\n\n   - New ACPI video blacklist entry for HP EliteBook Revolve 810 from\n     Mika Westerberg\"\n\n* tag 'pm+acpi-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / hotplug: Fix panic on eject to ejected device\n  ACPI / battery: Fix incorrect sscanf() string in acpi_battery_init_alarm()\n  ACPI / proc: remove unneeded NULL check\n  ACPI / utils: remove a pointless NULL check\n  ACPI / video: Add HP EliteBook Revolve 810 to the blacklist\n  intel_pstate: Take core C0 time into account for core busy calculation\n  ACPI / hotplug / PCI: Fix bridge removal race vs dock events\n  ACPI / hotplug / PCI: Fix bridge removal race in handle_hotplug_event()\n  ACPI / hotplug / PCI: Scan root bus under the PCI rescan-remove lock\n  ACPI / hotplug / PCI: Move PCI rescan-remove locking to hotplug_event()\n  ACPI / hotplug / PCI: Remove entries from bus->devices in reverse order Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge a bunch of fixes from Andrew Morton:\n \"Commit 579f82901f6f (\"swap: add a simple detector for inappropriate\n  swapin readahead\") is a feature.  No probs if you decide to defer it\n  until the next merge window.\n\n  It has been sitting in my tree for over a year because of my dislike\n  of all the magic numbers, but recent discussion with Hugh has made me\n  give up\"\n\n* emailed patches fron Andrew Morton <akpm@linux-foundation.org>:\n  mm: __set_page_dirty uses spin_lock_irqsave instead of spin_lock_irq\n  arch/x86/mm/numa.c: fix array index overflow when synchronizing nid to memblock.reserved.\n  arch/x86/mm/numa.c: initialize numa_kernel_nodes in numa_clear_kernel_node_hotplug()\n  mm: __set_page_dirty_nobuffers() uses spin_lock_irqsave() instead of spin_lock_irq()\n  mm/swap: fix race on swap_info reuse between swapoff and swapon\n  swap: add a simple detector for inappropriate swapin readahead\n  ocfs2: free allocated clusters if error occurs after ocfs2_claim_clusters\n  Documentation/kernel-parameters.txt: fix memmap= language Merge tag 'sound-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"A few HD-audio fixes and one USB-audio kconfig dependency fix.  All\n  small and device-specific changes marked with Cc to stable\"\n\n* tag 'sound-3.14-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda - Improve loopback path lookups for AD1983\n  ALSA: hda - Fix missing VREF setup for Mac Pro 1,1\n  ALSA: hda - Add missing mixer widget for AD1983\n  ALSA: hda/realtek - Avoid invalid COEFs for ALC271X\n  ALSA: hda - Fix silent output on Toshiba Satellite L40\n  ALSA: usb-audio: Add missing kconfig dependecy Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"A few regression fixes already, one for my own stupidity, and mgag200\n  typo fix, vmwgfx fixes and ttm regression fixes, and a radeon register\n  checker update for older cards to handle geom shaders\"\n\n* 'drm-fixes' of git://people.freedesktop.org/~airlied/linux:\n  drm/radeon: allow geom rings to be setup on r600/r700 (v2)\n  drm/mgag200,ast,cirrus: fix regression with drm_can_sleep conversion\n  drm/ttm: Don't clear page metadata of imported sg pages\n  drm/ttm: Fix TTM object open regression\n  vmwgfx: Fix unitialized stack read in vmw_setup_otable_base\n  drm/vmwgfx: Reemit context bindings when necessary v2\n  drm/vmwgfx: Detect old user-space drivers and set up legacy emulation v2\n  drm/vmwgfx: Emulate legacy shaders on guest-backed devices v2\n  drm/vmwgfx: Fix legacy surface reference size copyback\n  drm/vmwgfx: Fix SET_SHADER_CONST emulation on guest-backed devices\n  drm/vmwgfx: Fix regression caused by \"drm/ttm: make ttm reservation calls behave like reservation calls\"\n  drm/vmwgfx: Don't commit staged bindings if execbuf fails\n  drm/mgag200: fix typo causing bw limits to be ignored on some chips Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq updates from Thomas Gleixner:\n \"This lot provides:\n\n   * Bugfixes for armada irq controller\n   * Updates to renesas irq chip\n   * Support for the TI-NSPIRE irq controller\n\n  Not strictly a bug fix only pull request, but important updates for\n  some of the arm Socs which I completely forgot to send last week.\n\n  Seems like my obliviousness is getting worse, I just can't remember\n  when it started\"\n\n* 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  irqchip: Add support for TI-NSPIRE irqchip\n  irqchip: renesas-irqc: Enable mask on suspend\n  irqchip: renesas-irqc: Use lazy disable\n  irqchip: armada-370-xp: fix MSI race condition\n  irqchip: armada-370-xp: fix IPI race condition Merge tag 'stable/for-linus-3.14-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen fixes from Konrad Rzeszutek Wilk:\n \"Bug-fixes:\n   - Revert \"xen/grant-table: Avoid m2p_override during mapping\" as it\n     broke Xen ARM build.\n   - Fix CR4 not being set on AP processors in Xen PVH mode\"\n\n* tag 'stable/for-linus-3.14-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/pvh: set CR4 flags for APs\n  Revert \"xen/grant-table: Avoid m2p_override during mapping\" Merge tag 'please-pull-ia64-syscalls' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux\n\nPull ia64 update from Tony Luck:\n \"Wire up new sched_setattr and sched_getattr syscalls\"\n\n* tag 'please-pull-ia64-syscalls' of git://git.kernel.org/pub/scm/linux/kernel/git/aegl/linux:\n  [IA64] Wire up new sched_setattr and sched_getattr syscalls Merge git://git.infradead.org/users/willy/linux-nvme\n\nPull NVMe driver update from Matthew Wilcox:\n \"Looks like I missed the merge window ...  but these are almost all\n  bugfixes anyway (the ones that aren't have been baking for months)\"\n\n* git://git.infradead.org/users/willy/linux-nvme:\n  NVMe: Namespace use after free on surprise removal\n  NVMe: Correct uses of INIT_WORK\n  NVMe: Include device and queue numbers in interrupt name\n  NVMe: Add a pci_driver shutdown method\n  NVMe: Disable admin queue on init failure\n  NVMe: Dynamically allocate partition numbers\n  NVMe: Async IO queue deletion\n  NVMe: Surprise removal handling\n  NVMe: Abort timed out commands\n  NVMe: Schedule reset for failed controllers\n  NVMe: Device resume error handling\n  NVMe: Cache dev->pci_dev in a local pointer\n  NVMe: Fix lockdep warnings\n  NVMe: compat SG_IO ioctl\n  NVMe: remove deprecated IRQF_DISABLED\n  NVMe: Avoid shift operation when writing cq head doorbell Merge tag 'regulator-v3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fixes from Mark Brown:\n \"A couple of driver fixes here but the main thing is a fix to the\n  checks for deferred probe non-DT systems with fully specified\n  regulators which had been broken by a device tree fix which meant that\n  we wouldn't insert optional regulators.\n\n  This had slipped through the cracks since very few systems do that in\n  the first place and those that do it in mainline don't need optional\n  regulators anyway\"\n\n* tag 'regulator-v3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: s2mps11: Fix NULL pointer of_node value when using platform data\n  regulator: core: Correct default return value for full constraints\n  regulator: ab3100: cast fix Merge git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fixes from Herbert Xu:\n \"This fixes a number of concurrency issues on s390 where multiple users\n  of the same crypto transform may clobber each other's results\"\n\n* git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: s390 - fix des and des3_ede ctr concurrency issue\n  crypto: s390 - fix des and des3_ede cbc concurrency issue\n  crypto: s390 - fix concurrency issue in aes-ctr mode execve: use 'struct filename *' for executable name passing\n\nThis changes 'do_execve()' to get the executable name as a 'struct\nfilename', and to free it when it is done.  This is what the normal\nusers want, and it simplifies and streamlines their error handling.\n\nThe controlled lifetime of the executable name also fixes a\nuse-after-free problem with the trace_sched_process_exec tracepoint: the\nlifetime of the passed-in string for kernel users was not at all\nobvious, and the user-mode helper code used UMH_WAIT_EXEC to serialize\nthe pathname allocation lifetime with the execve() having finished,\nwhich in turn meant that the trace point that happened after\nmm_release() of the old process VM ended up using already free'd memory.\n\nTo solve the kernel string lifetime issue, this simply introduces\n\"getname_kernel()\" that works like the normal user-space getname()\nfunction, except with the source coming from kernel memory.\n\nAs Oleg points out, this also means that we could drop the tcomm[] array\nfrom 'struct linux_binprm', since the pathname lifetime now covers\nsetup_new_exec().  That would be a separate cleanup.\n\nReported-by: Igor Zhbanov <i.zhbanov@samsung.com>\nTested-by: Steven Rostedt <rostedt@goodmis.org>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs fixes from Chris Mason:\n \"Filipe is fixing compile and boot problems with our crc32c rework, and\n  Josef has disabled snapshot aware defrag for now.\n\n  As the number of snapshots increases, we're hitting OOM.  For the\n  short term we're disabling things until a bigger fix is ready\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:\n  Btrfs: use late_initcall instead of module_init\n  Btrfs: use btrfs_crc32c everywhere instead of libcrc32c\n  Btrfs: disable snapshot aware defrag for now Merge tag 'nfs-for-3.14-3' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client bugfixes from Trond Myklebust:\n \"Highlights:\n\n   - Fix NFSv3 acl regressions\n   - Fix NFSv4 memory corruption due to slot table abuse in\n     nfs4_proc_open_confirm\n   - nfs4_destroy_session must call rpc_destroy_waitqueue\"\n\n* tag 'nfs-for-3.14-3' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  fs: get_acl() must be allowed to return EOPNOTSUPP\n  NFSv3: Fix return value of nfs3_proc_setacls\n  NFSv3: Remove unused function nfs3_proc_set_default_acl\n  NFSv4.1: nfs4_destroy_session must call rpc_destroy_waitqueue\n  NFSv4: Fix memory corruption in nfs4_proc_open_confirm\n  nfs: fix setting of ACLs on file creation. kbuild: don't enable DEBUG_INFO when building for COMPILE_TEST\n\nIt really isn't very interesting to have DEBUG_INFO when doing compile\ncoverage stuff (you wouldn't want to run the result anyway, that's kind\nof the whole point of COMPILE_TEST), and it currently makes the build\ntake longer and use much more disk space for \"all{yes,mod}config\".\n\nThere's somewhat active discussion about this still, and we might end up\nwith some new config option for things like this (Andi points out that\nthe silly X86_DECODER_SELFTEST option also slows down the normal\ncoverage tests hugely), but I'm starting the ball rolling with this\nsimple one-liner.\n\nDEBUG_INFO isn't that noticeable if you have tons of memory and a good\nIO subsystem, but it hurts you a lot if you don't - for very little\nupside for the common use.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> Linus 3.14-rc1 Merge branch 'parisc-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc updates from Helge Deller:\n \"The three major changes in this patchset is a implementation for\n  flexible userspace memory maps, cache-flushing fixes (again), and a\n  long-discussed ABI change to make EWOULDBLOCK the same value as\n  EAGAIN.\n\n  parisc has been the only platform where we had EWOULDBLOCK != EAGAIN\n  to keep HP-UX compatibility.  Since we will probably never implement\n  full HP-UX support, we prefer to drop this compatibility to make it\n  easier for us with Linux userspace programs which mostly never checked\n  for both values.  We don't expect major fall-outs because of this\n  change, and if we face some, we will simply rebuild the necessary\n  applications in the debian archives\"\n\n* 'parisc-3.14' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: add flexible mmap memory layout support\n  parisc: Make EWOULDBLOCK be equal to EAGAIN on parisc\n  parisc: convert uapi/asm/stat.h to use native types only\n  parisc: wire up sched_setattr and sched_getattr\n  parisc: fix cache-flushing\n  parisc/sti_console: prefer Linux fonts over built-in ROM fonts Merge branch 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging\n\nPull hwmon kconfig fixes from Jean Delvare.\n\n* 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging:\n  hwmon: Fix SENSORS_TMP102 dependencies to eliminate build errors\n  hwmon: Fix SENSORS_LM75 dependencies to eliminate build errors Merge branch 'slab/next' of git://git.kernel.org/pub/scm/linux/kernel/git/penberg/linux\n\nPull SLAB changes from Pekka Enberg:\n \"Random bug fixes that have accumulated in my inbox over the past few\n  months\"\n\n* 'slab/next' of git://git.kernel.org/pub/scm/linux/kernel/git/penberg/linux:\n  mm: Fix warning on make htmldocs caused by slab.c\n  mm: slub: work around unneeded lockdep warning\n  mm: sl[uo]b: fix misleading comments\n  slub: Fix possible format string bug.\n  slub: use lockdep_assert_held\n  slub: Fix calculation of cpu slabs\n  slab.h: remove duplicate kmalloc declaration and fix kernel-doc warnings Merge branch 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux\n\nPull turbostat updates from Len Brown.\n\n* 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux:\n  tools/power turbostat: introduce -s to dump counters\n  tools/power turbostat: remove unused command line option\n  turbostat: Add option to report joules consumed per sample\n  turbostat: run on HSX\n  turbostat: Add a .gitignore to ignore the compiled turbostat binary\n  turbostat: Clean up error handling; disambiguate error messages; use err and errx\n  turbostat: Factor out common function to open file and exit on failure\n  turbostat: Add a helper to parse a single int out of a file\n  turbostat: Check return value of fscanf\n  turbostat: Use GCC's CPUID functions to support PIC\n  turbostat: Don't attempt to printf an off_t with %zx\n  turbostat: Don't put unprocessed uapi headers in the include path Merge tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC fixes from Olof Johansson:\n \"Here's a set of patches for (hopefully) -rc1.  Some of them are fixes,\n  but a good number of them also do things such as enable new drivers in\n  the defconfigs for platforms that have such devices, increases\n  coverage of the multiplatform defconfig and some DTS changes that\n  plumbs up some of the devices that now have bindings and driver\n  support.\n\n  The commit dates are recent; we've mostly collected these fixes in the\n  last few days but I also had to rebuild the branch yesterday to sort\n  out some internal conflicts which reset the timestamps.  The changes\n  should have been tested by each platform maintainer already (and few\n  of them have cross-platform impact) so I'm personally not too\n  concerned by it at this time\"\n\n* tag 'fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (23 commits)\n  ARM: multi_v7_defconfig: remove redundant entries and re-enable TI_EDMA\n  ARM: multi_v7_defconfig: add mvebu drivers\n  clocksource: kona: Add basic use of external clock\n  drivers: bus: fix CCI driver kcalloc call parameters swap\n  ARM: dts: bcm28155-ap: Fix Card Detection GPIO\n  ARM: multi_v7_defconfig: Select CONFIG_AT803X_PHY\n  ARM: keystone: config: fix build warning when CONFIG_DMADEVICES is not set\n  MAINTAINERS: ARM: SiRF: use regex patterns to involve all SiRF drivers\n  ARM: dts: zynq: Add SDHCI nodes\n  ARM: hisi: don't select SMP\n  ARM: tegra: rebuild tegra_defconfig to add DEBUG_FS\n  ARM: multi_v7: copy most options from tegra_defconfig\n  ARM: iop32x: fix power off handling for the EM7210 board\n  ARM: integrator: restore static map on the CP\n  ARM: msm_defconfig: Enable MSM clock drivers\n  ARM: dts: msm: Add clock controller nodes and hook into uart\n  ARM: OMAP4+: move errata initialization to omap4_pm_init_early\n  ARM: OMAP4460: cpuidle: Extend PM_OMAP4_ROM_SMP_BOOT_ERRATUM_GICD on cpuidle\n  ARM: mvebu: fix compilation warning on Armada 370 (i.e. non-SMP)\n  ARM: shmobile: r8a7790.dtsi: ficx i2c[0-3] clock reference\n  ... Merge branch 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild\n\nPull misc kbuild changes from Michal Marek:\n \"The non-critical part of kbuild is small this time:\n   - Three fixes for make deb-pkg\n   - A new coccinelle check\n\n  One of the deb-pkg fixes is a leftover from the last merge window,\n  hence the merge commit\"\n\n* 'misc' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:\n  deb-pkg: Fix building for MIPS big-endian or ARM OABI\n  deb-pkg: Fix cross-building linux-headers package\n  scripts: Coccinelle script for pm_runtime_* return checks with IS_ERR_VALUE\n  deb-pkg: Inhibit initramfs builders if CONFIG_BLK_DEV_INITRD is not set Merge branch 'for-linus' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"A set of cifs fixes (mostly for symlinks, and SMB2 xattrs) and\n  cleanups\"\n\n* 'for-linus' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: Fix check for regular file in couldbe_mf_symlink()\n  [CIFS] Fix SMB2 mounts so they don't try to set or get xattrs via cifs\n  CIFS: Cleanup cifs open codepath\n  CIFS: Remove extra indentation in cifs_sfu_type\n  CIFS: Cleanup cifs_mknod\n  CIFS: Cleanup CIFSSMBOpen\n  cifs: Add support for follow_link on dfs shares under posix extensions\n  cifs: move unix extension call to cifs_query_symlink()\n  cifs: Re-order M-F Symlink code\n  cifs: Add create MFSymlinks to protocol ops struct\n  cifs: use protocol specific call for query_mf_symlink()\n  cifs: Rename MF symlink function names\n  cifs: Rename and cleanup open_query_close_cifs_symlink()\n  cifs: Fix memory leak in cifs_hardlink() Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs fixes from Al Viro:\n \"Several obvious fixes\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  Fix mountpoint reference leakage in linkat\n  hfsplus: use xattr handlers for removexattr\n  Typo in compat_sys_lseek() declaration\n  fs/super.c: sync ro remount after blocking writers\n  vfs: unexport the getname() symbol Merge tag 'staging-3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n\nPull rtl8812ae staging wireless driver from Greg KH:\n \"Here's a single staging driver for a wireless chipset that has shown\n  up in the SteamBox hardware.  It is merged separately from the \"main\"\n  staging pull request to sync up with the wireless api changes that\n  came in from the networking tree.\n\n  It's self-contained and works for me and others.  Larry will be\n  replacing it with a \"real\" driver for 3.15, but for now this one is\n  needed\"\n\n* tag 'staging-3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging:\n  staging: r8821ae: Enable build by reverting BROKEN marking\n  staging: r8821ae: Fix build problems\n  Staging: rtl8812ae: disable due to build errors\n  Staging: rtl8821ae: add TODO file\n  Staging: rtl8821ae: removed unused functions and variables\n  Staging: rtl8821ae: rc.c: fix up function prototypes\n  Staging: rtl8812ae: Add Realtek 8821 PCI WIFI driver Merge tag 'nfs-for-3.14-2' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client bugfixes from Trond Myklebust:\n \"Highlights:\n\n   - Fix several races in nfs_revalidate_mapping\n   - NFSv4.1 slot leakage in the pNFS files driver\n   - Stable fix for a slot leak in nfs40_sequence_done\n   - Don't reject NFSv4 servers that support ACLs with only ALLOW aces\"\n\n* tag 'nfs-for-3.14-2' of git://git.linux-nfs.org/projects/trondmy/linux-nfs:\n  nfs: initialize the ACL support bits to zero.\n  NFSv4.1: Cleanup\n  NFSv4.1: Clean up nfs41_sequence_done\n  NFSv4: Fix a slot leak in nfs40_sequence_done\n  NFSv4.1 free slot before resending I/O to MDS\n  nfs: add memory barriers around NFS_INO_INVALID_DATA and NFS_INO_INVALIDATING\n  NFS: Fix races in nfs_revalidate_mapping\n  sunrpc: turn warn_gssd() log message into a dprintk()\n  NFS: fix the handling of NFS_INO_INVALID_DATA flag in nfs_revalidate_mapping\n  nfs: handle servers that support only ALLOW ACE type. Merge tag 'sound-fix-3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"The big chunks here are the updates for oxygen driver for Xonar DG\n  devices, which were slipped from the previous pull request.  They are\n  device-specific and thus not too dangerous.\n\n  Other than that, all patches are small bug fixes, mainly for Samsung\n  build fixes, a few HD-audio enhancements, and other misc ASoC fixes.\n  (And this time ASoC merge is less than Octopus, lucky seven :)\"\n\n* tag 'sound-fix-3.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (42 commits)\n  ALSA: hda/hdmi - allow PIN_OUT to be dynamically enabled\n  ALSA: hda - add headset mic detect quirks for another Dell laptop\n  ALSA: oxygen: Xonar DG(X): cleanup and minor changes\n  ALSA: oxygen: Xonar DG(X): modify high-pass filter control\n  ALSA: oxygen: Xonar DG(X): modify input select functions\n  ALSA: oxygen: Xonar DG(X): modify capture volume functions\n  ALSA: oxygen: Xonar DG(X): use headphone volume control\n  ALSA: oxygen: Xonar DG(X): modify playback output select\n  ALSA: oxygen: Xonar DG(X): capture from I2S channel 1, not 2\n  ALSA: oxygen: Xonar DG(X): move the mixer code into another file\n  ALSA: oxygen: modify CS4245 register dumping function\n  ALSA: oxygen: modify adjust_dg_dac_routing function\n  ALSA: oxygen: Xonar DG(X): modify DAC/ADC parameters function\n  ALSA: oxygen: Xonar DG(X): modify initialization functions\n  ALSA: oxygen: Xonar DG(X): add new CS4245 SPI functions\n  ALSA: oxygen: additional definitions for the Xonar DG/DGX card\n  ALSA: oxygen: change description of the xonar_dg.c file\n  ALSA: oxygen: export oxygen_update_dac_routing symbol\n  ALSA: oxygen: add mute mask for the OXYGEN_PLAY_ROUTING register\n  ALSA: oxygen: modify the SPI writing function\n  ... Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending\n\nPull SCSI target updates from Nicholas Bellinger:\n \"The highlights this round include:\n\n  - add support for SCSI Referrals (Hannes)\n  - add support for T10 DIF into target core (nab + mkp)\n  - add support for T10 DIF emulation in FILEIO + RAMDISK backends (Sagi + nab)\n  - add support for T10 DIF -> bio_integrity passthrough in IBLOCK backend (nab)\n  - prep changes to iser-target for >= v3.15 T10 DIF support (Sagi)\n  - add support for qla2xxx N_Port ID Virtualization - NPIV (Saurav + Quinn)\n  - allow percpu_ida_alloc() to receive task state bitmask (Kent)\n  - fix >= v3.12 iscsi-target session reset hung task regression (nab)\n  - fix >= v3.13 percpu_ref se_lun->lun_ref_active race (nab)\n  - fix a long-standing network portal creation race (Andy)\"\n\n* 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (51 commits)\n  target: Fix percpu_ref_put race in transport_lun_remove_cmd\n  target/iscsi: Fix network portal creation race\n  target: Report bad sector in sense data for DIF errors\n  iscsi-target: Convert gfp_t parameter to task state bitmask\n  iscsi-target: Fix connection reset hang with percpu_ida_alloc\n  percpu_ida: Make percpu_ida_alloc + callers accept task state bitmask\n  iscsi-target: Pre-allocate more tags to avoid ack starvation\n  qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport\n  qla2xxx: Enhancements to enable NPIV support for QLOGIC ISPs with TCM/LIO.\n  qla2xxx: Fix scsi_host leak on qlt_lport_register callback failure\n  IB/isert: pass scatterlist instead of cmd to fast_reg_mr routine\n  IB/isert: Move fastreg descriptor creation to a function\n  IB/isert: Avoid frwr notation, user fastreg\n  IB/isert: seperate connection protection domains and dma MRs\n  tcm_loop: Enable DIF/DIX modes in SCSI host LLD\n  target/rd: Add DIF protection into rd_execute_rw\n  target/rd: Add support for protection SGL setup + release\n  target/rd: Refactor rd_build_device_space + rd_release_device_space\n  target/file: Add DIF protection support to fd_execute_rw\n  target/file: Add DIF protection init/format support\n  ... Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPyll ARM64 patches from Catalin Marinas:\n - Build fix with DMA_CMA enabled\n - Introduction of PTE_WRITE to distinguish between writable but clean\n   and truly read-only pages\n - FIQs enabling/disabling clean-up (they aren't used on arm64)\n - CPU resume fix for the per-cpu offset restoring\n - Code comment typos\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: mm: Introduce PTE_WRITE\n  arm64: mm: Remove PTE_BIT_FUNC macro\n  arm64: FIQs are unused\n  arm64: mm: fix the function name in comment of cpu_do_switch_mm\n  arm64: fix build error if DMA_CMA is enabled\n  arm64: kernel: fix per-cpu offset restore on resume\n  arm64: mm: fix the function name in comment of __flush_dcache_area\n  arm64: mm: use ubfm for dcache_line_size Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha\n\nPull alpha updates from Matt Turner:\n \"A pair of changes for alpha.  One fixes a networking regression, and\n  the second adds audit syscall support which will help in supporting\n  systemd\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mattst88/alpha:\n  alpha: fix broken network checksum\n  alpha: Enable system-call auditing support. Merge branch 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media updates from Mauro Carvalho Chehab:\n - a new jpeg codec driver for Samsung Exynos (jpeg-hw-exynos4)\n - a new dvb frontend for ds2103 chipset (m88ds2103)\n - a new sensor driver for Samsung S5K5BAF UXGA (s5k5baf)\n - new drivers for R-Car VSP1\n - a new radio driver: radio-raremono\n - a new tuner driver for ts2022 chipset (m88ts2022)\n - the analog part of em28xx is now a separate module that only\n   load/runs if the device is not a pure digital TV device\n - added a staging driver for bcm2048 radio devices\n - the omap 2 video driver (omap24xx) was moved to staging.  This driver\n   is for an old hardware and uses a deprecated Kernel internal API.  If\n   nobody cares enough to fix it, it would be removed on a couple Kernel\n   releases\n - the sn9c102 driver was moved to staging.  This driver was replaced by\n   gspca, and disabled on some distros, as almost all devices are known\n   to work properly with gspca.  It should be removed from kernel on a\n   couple Kernel releases\n - lots of driver fixes, improvements and cleanups\n\n* 'v4l_for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media: (421 commits)\n  [media] media: v4l2-dev: fix video device index assignment\n  [media] rc-core: reuse device numbers\n  [media] em28xx-cards: properly initialize the device bitmap\n  [media] Staging: media: Fix line length exceeding 80 characters in as102_drv.c\n  [media] Staging: media: Fix line length exceeding 80 characters in as102_fe.c\n  [media] Staging: media: Fix quoted string split across line in as102_fe.c\n  [media] media: st-rc: Add reset support\n  [media] m2m-deinterlace: fix allocated struct type\n  [media] radio-usb-si4713: fix sparse non static symbol warnings\n  [media] em28xx-audio: remove needless check before usb_free_coherent()\n  [media] au0828: Fix sparse non static symbol warning\n  Revert \"[media] go7007-usb: only use go->dev after allocated\"\n  [media] em28xx-audio: provide an error code when URB submit fails\n  [media] em28xx: fix check for audio only usb interfaces when changing the usb alternate setting\n  [media] em28xx: fix usb alternate setting for analog and digital video endpoints > 0\n  [media] em28xx: make 'em28xx_ctrl_ops' static\n  em28xx-alsa: Fix error patch for init/fini\n  [media] em28xx-audio: flush work at .fini\n  [media] drxk: remove the option to load firmware asynchronously\n  [media] em28xx: adjust period size at runtime\n  ... Merge tag 'pm+acpi-3.14-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI and power management fixes and cleanups from Rafael Wysocki:\n\n - ACPI device hotplug fix preventing ACPI drivers from binding to device\n   objects that acpi_bus_trim() has been called for and the devices\n   represented by them may not be operational.\n\n - Recent cpufreq changes related to the \"boost\" (turbo) feature broke\n   the acpi-cpufreq error code path causing a NULL pointer dereference\n   to occur on some systems.  Fix from Konrad Rzeszutek Wilk.\n\n - The log level of a CPU initialization error message added recently\n   needs to be reduced, because the particular BIOS issue indicated by\n   it turns out to be widespread and doesn't really matter for the\n   majority of systems having it.  From Jiang Liu.\n\n - The regulator API needs to be told to stay away from things on systems\n   with ACPI BIOSes or it may conflict with the BIOS' own handling of\n   voltage regulators.  Fix from Mark Brown that works around a 3.13\n   regression in lm90 on PCs occuring if the regulator API is enabled.\n\n - Prevent the Exynos4 devfreq driver from being built on multiplatform,\n   because it depends on things that aren't available during such builds.\n   From Sachin Kamat.\n\n - Upstream ACPICA doesn't use the bool type as defined in the kernel,\n   so modify the kernel's ACPICA code to follow the upstream in that\n   respect (only one variable definition is affected) to reduce\n   divergences between the two.  From Lv Zheng.\n\n - Make the ACPI device PM code use ACPI_COMPANION() instead of its own\n   routine doing the same thing (and invokng ACPI_COMPANION() in the\n   process).\n\n - Modify some routines in the ACPI processor driver to follow the\n   common convention and return negative integers on errors.  From\n   Hanjun Guo.\n\n* tag 'pm+acpi-3.14-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:\n  ACPI / scan: Clear match_driver flag in acpi_bus_trim()\n  ACPI / init: Flag use of ACPI and ACPI idioms for power supplies to regulator API\n  acpi-cpufreq: De-register CPU notifier and free struct msr on error.\n  ACPICA: Remove bool usage from ACPICA.\n  PM / devfreq: Disable Exynos4 driver build on multiplatform\n  ACPI / PM: Use ACPI_COMPANION() to get ACPI companions of devices\n  ACPI / scan: reduce log level of \"ACPI: \\_PR_.CPU4: failed to get CPU APIC ID\"\n  ACPI / processor: Return specific error value when mapping lapic id Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull timer/dynticks updates from Ingo Molnar:\n \"This tree contains misc dynticks updates: a fix and three cleanups\"\n\n* 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/nohz: Fix overflow error in scheduler_tick_max_deferment()\n  nohz_full: fix code style issue of tick_nohz_full_stop_tick\n  nohz: Get timekeeping max deferment outside jiffies_lock\n  tick: Rename tick_check_idle() to tick_irq_enter() Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"A crash fix and documentation updates\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched: Make sched_class::get_rr_interval() optional\n  sched/deadline: Add sched_dl documentation\n  sched: Fix docbook parameter annotation error in wait.h Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull core debug changes from Ingo Molnar:\n \"This contains mostly kernel debugging related updates:\n\n   - make hung_task detection more configurable to distros\n   - add final bits for x86 UV NMI debugging, with related KGDB changes\n   - update the mailing-list of MAINTAINERS entries I'm involved with\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  hung_task: Display every hung task warning\n  sysctl: Add neg_one as a standard constraint\n  x86/uv/nmi, kgdb/kdb: Fix UV NMI handler when KDB not configured\n  x86/uv/nmi: Fix Sparse warnings\n  kgdb/kdb: Fix no KDB config problem\n  MAINTAINERS: Restore \"L: linux-kernel@vger.kernel.org\" entries Merge tag 'stable/for-linus-3.14-rc0-late-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull Xen bugfixes from Konrad Rzeszutek Wilk:\n \"Bug-fixes for the new features that were added during this cycle.\n\n  There are also two fixes for long-standing issues for which we have a\n  solution: grant-table operations extra work that was not needed\n  causing performance issues and the self balloon code was too\n  aggressive causing OOMs.\n\n  Details:\n   - Xen ARM couldn't use the new FIFO events\n   - Xen ARM couldn't use the SWIOTLB if compiled as 32-bit with 64-bit PCIe devices.\n   - Grant table were doing needless M2P operations.\n   - Ratchet down the self-balloon code so it won't OOM.\n   - Fix misplaced kfree in Xen PVH error code paths\"\n\n* tag 'stable/for-linus-3.14-rc0-late-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen/pvh: Fix misplaced kfree from xlated_setup_gnttab_pages\n  drivers: xen: deaggressive selfballoon driver\n  xen/grant-table: Avoid m2p_override during mapping\n  xen/gnttab: Use phys_addr_t to describe the grant frame base address\n  xen: swiotlb: handle sizeof(dma_addr_t) != sizeof(phys_addr_t)\n  arm/xen: Initialize event channels earlier Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull more KVM updates from Paolo Bonzini:\n \"Second batch of KVM updates.  Some minor x86 fixes, two s390 guest\n  features that need some handling in the host, and all the PPC changes.\n\n  The PPC changes include support for little-endian guests and\n  enablement for new POWER8 features\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (45 commits)\n  x86, kvm: correctly access the KVM_CPUID_FEATURES leaf at 0x40000101\n  x86, kvm: cache the base of the KVM cpuid leaves\n  kvm: x86: move KVM_CAP_HYPERV_TIME outside #ifdef\n  KVM: PPC: Book3S PR: Cope with doorbell interrupts\n  KVM: PPC: Book3S HV: Add software abort codes for transactional memory\n  KVM: PPC: Book3S HV: Add new state for transactional memory\n  powerpc/Kconfig: Make TM select VSX and VMX\n  KVM: PPC: Book3S HV: Basic little-endian guest support\n  KVM: PPC: Book3S HV: Add support for DABRX register on POWER7\n  KVM: PPC: Book3S HV: Prepare for host using hypervisor doorbells\n  KVM: PPC: Book3S HV: Handle new LPCR bits on POWER8\n  KVM: PPC: Book3S HV: Handle guest using doorbells for IPIs\n  KVM: PPC: Book3S HV: Consolidate code that checks reason for wake from nap\n  KVM: PPC: Book3S HV: Implement architecture compatibility modes for POWER8\n  KVM: PPC: Book3S HV: Add handler for HV facility unavailable\n  KVM: PPC: Book3S HV: Flush the correct number of TLB sets on POWER8\n  KVM: PPC: Book3S HV: Context-switch new POWER8 SPRs\n  KVM: PPC: Book3S HV: Align physical and virtual CPU thread numbers\n  KVM: PPC: Book3S HV: Don't set DABR on POWER8\n  kvm/ppc: IRQ disabling cleanup\n  ... Merge tag 'jfs-3.14' of git://github.com/kleikamp/linux-shaggy\n\nPull jfs fix from David Kleikamp:\n \"Minor bug fix for linux-3.14\"\n\n* tag 'jfs-3.14' of git://github.com/kleikamp/linux-shaggy:\n  jfs: fix xattr value size overflow in __jfs_setxattr Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs\n\nPull btrfs updates from Chris Mason:\n \"This is a pretty big pull, and most of these changes have been\n  floating in btrfs-next for a long time.  Filipe's properties work is a\n  cool building block for inheriting attributes like compression down on\n  a per inode basis.\n\n  Jeff Mahoney kicked in code to export filesystem info into sysfs.\n\n  Otherwise, lots of performance improvements, cleanups and bug fixes.\n\n  Looks like there are still a few other small pending incrementals, but\n  I wanted to get the bulk of this in first\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs: (149 commits)\n  Btrfs: fix spin_unlock in check_ref_cleanup\n  Btrfs: setup inode location during btrfs_init_inode_locked\n  Btrfs: don't use ram_bytes for uncompressed inline items\n  Btrfs: fix btrfs_search_slot_for_read backwards iteration\n  Btrfs: do not export ulist functions\n  Btrfs: rework ulist with list+rb_tree\n  Btrfs: fix memory leaks on walking backrefs failure\n  Btrfs: fix send file hole detection leading to data corruption\n  Btrfs: add a reschedule point in btrfs_find_all_roots()\n  Btrfs: make send's file extent item search more efficient\n  Btrfs: fix to catch all errors when resolving indirect ref\n  Btrfs: fix protection between walking backrefs and root deletion\n  btrfs: fix warning while merging two adjacent extents\n  Btrfs: fix infinite path build loops in incremental send\n  btrfs: undo sysfs when open_ctree() fails\n  Btrfs: fix snprintf usage by send's gen_unique_name\n  btrfs: fix defrag 32-bit integer overflow\n  btrfs: sysfs: list the NO_HOLES feature\n  btrfs: sysfs: don't show reserved incompat feature\n  btrfs: call permission checks earlier in ioctls and return EPERM\n  ... Merge tag 'upstream-3.14-rc1' of git://git.infradead.org/linux-ubifs\n\nPull ubifs updates from Artem Bityutskiy:\n\n - Improve the NOR erasure quirk - now it tries to do as little writes\n   as possible, because the eraseblock may be in an \"unstable\" state and\n   write operation sometimes causes NOR chip lock-ups.\n\n - Both UBI and UBIFS changes are now maintainer in one single tree,\n   because the amount of changes dropped significantly.\n\n* tag 'upstream-3.14-rc1' of git://git.infradead.org/linux-ubifs:\n  UBI: avoid program operation on NOR flash after erasure interrupted\n  MAINTAINERS: keep UBI and UBIFS stuff in the same tree\n  UBI: fix error return code Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client\n\nPull some further ceph acl cleanups from Sage Weil:\n \"I do have a couple patches on top of what's in your tree, though, that\n  clean up a couple duplicated lines in your fix and apply Christoph's\n  cleanup\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client:\n  ceph: simplify ceph_{get,init}_acl\n  ceph: remove duplicate declaration of ceph_setattr Merge branch 'akpm' (patches from Andrew Morton)\n\nMerge misc fixes from Andrew Morton:\n \"A few hotfixes and various leftovers which were awaiting other merges.\n\n  Mainly movement of zram into mm/\"\n\n* emailed patches fron Andrew Morton <akpm@linux-foundation.org>: (25 commits)\n  memcg: fix mutex not unlocked on memcg_create_kmem_cache fail path\n  Documentation/filesystems/vfs.txt: update file_operations documentation\n  mm, oom: base root bonus on current usage\n  mm: don't lose the SOFT_DIRTY flag on mprotect\n  mm/slub.c: fix page->_count corruption (again)\n  mm/mempolicy.c: fix mempolicy printing in numa_maps\n  zram: remove zram->lock in read path and change it with mutex\n  zram: remove workqueue for freeing removed pending slot\n  zram: introduce zram->tb_lock\n  zram: use atomic operation for stat\n  zram: remove unnecessary free\n  zram: delay pending free request in read path\n  zram: fix race between reset and flushing pending work\n  zsmalloc: add maintainers\n  zram: add zram maintainers\n  zsmalloc: add copyright\n  zram: add copyright\n  zram: remove old private project comment\n  zram: promote zram from staging\n  zsmalloc: move it under mm\n  ... Merge branch 'x86-asmlinkage-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 asmlinkage (LTO) changes from Peter Anvin:\n \"This patchset adds more infrastructure for link time optimization\n  (LTO).\n\n  This patchset was pulled into my tree late because of a\n  miscommunication (part of the patchset was picked up by other\n  maintainers).  However, the patchset is strictly build-related and\n  seems to be okay in testing\"\n\n* 'x86-asmlinkage-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, asmlinkage, xen: Fix type of NMI\n  x86, asmlinkage, xen, kvm: Make {xen,kvm}_lock_spinning global and visible\n  x86: Use inline assembler instead of global register variable to get sp\n  x86, asmlinkage, paravirt: Make paravirt thunks global\n  x86, asmlinkage, paravirt: Don't rely on local assembler labels\n  x86, asmlinkage, lguest: Fix C functions used by inline assembler Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 build bits from Peter Anvin:\n \"Various build-related minor bits.\n\n  Most of this is work by David Woodhouse to be able to compile the\n  early boot code with clang/llvm; we have also managed to push an\n  actual -m16 option into gcc 4.9 so this makes us use that option if\n  available instead of hacking it.\n\n  The balance is a patch from Michael Davidson to the relocs program to\n  help manual debugging.\n\n  None of these should change the actual compiled binary with currently\n  released compilers\"\n\n* 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, build: Build 16-bit code with -m16 where possible\n  x86, boot: Fix word-size assumptions in has_eflag() inline asm\n  x86, boot: Use __attribute__((used)) to ensure videocard structs are emitted\n  x86: Remove duplication of 16-bit CFLAGS\n  x86, relocs: Add manual debug mode Merge tag 'late-dt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc\n\nPull ARM SoC late changes from Kevin Hilman:\n \"These are changes that arrived a little late but were considered\n  self-contained enough to still go in for v3.14.\n\n  They are all device tree updtes this time around, and mainly for\n  Broadcom SoCs\"\n\n* tag 'late-dt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:\n  ARM: moxart: move fixed rate clock child node to board level dts\n  clk: bcm281xx: define kona clock binding\n  ARM: dts: add usb udc support to bcm281xx\n  ARM: dts: Specify clocks for timer on bcm11351\n  Documentation: dt: kona-timer: Add clocks property\n  ARM: dts: Specify clocks for SDHCIs on bcm11351\n  Documentation: dt: kona-sdhci: Add clocks property\n  ARM: dts: Specify clocks for UARTs on bcm11351\n  ARM: dts: bcm281xx: Add i2c busses\n  ARM: dts: Declare clocks as fixed on bcm11351\n  ARM: dts: bcm28155-ap: Enable all the i2c busses ",
      "nbWordsMessagePerCommit": "120.0"
    },
    "stats": {
      "C": {
        "language": "C",
        "nbCommit": 1730,
        "nbWordsMessage": 281872,
        "nbWordsMessagePerCommit": "162.9"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 1781,
        "nbWordsMessage": 139468,
        "nbWordsMessagePerCommit": "78.3"
      }
    }
  },
  "gvanrossum": {
    "user": "gvanrossum",
    "statsGlobal": {
      "nbCommits": 3995,
      "nbWordsMessage": 57292,
      "messages": "Make script executable. Fix syntax and typo around file args. Fix doc typos. Shorten code around lenient host matching. Remove unused imports. Small tweaks suggested by Brandon Rhodes.\n\n- Drop stale() test from recycle_connection().\n- Add docstrings to some toplevel things.\n- Rename open_http_conn(), get_response() to make_request(), read_response().\n- Check for all-digits status. Streamline unescape(). Kill long list of TODO comments. Fix a bug causing redundant close() of recycled connection. Inline get_redirect_url(). Fix a broken logging call. Get rid of Request/Response classes in favor a more direct approach. Kill get_header() in favor of a plain dict with lowercase keys. Kill fileno() (was only used in logging) and unused var h_t_enc. Add myself to the list of contributors. Fix docstring typo. Move reporting subsystem into a separate file. Squeeze a few lines out of send_request(). Fix logging lines I screwed up. Quick Makefile with commands I run all the time. Switch to using the logging module. Avoid using internal attributes -- there are official APIs for these now. Simplify pool pruning. Oops, *~ is already being ignored by the root .gitignore file. Separate main() and library classes. Rename library module crawling.py. Ignore @*, not just @. Ignore popular temporary files. We really can crawl XKCD in 7 seconds.  Mention Python 3.3 and Windows. Initial checkin. Added links to stdwin and ABC reports, and stdwin source code (!) Fix Dr Dobb's award link (thanks Damien) Add 2014 portrait by Dan Stroud Add link to King's Day Speech A proposal for type checking, originally dated January 19, 2000. Audio files Updated from actual dinsdale. Add images Copy html files from old dinsdale site Initial commit Add instructions Improvements\n\n- rename to mypy-lang\n- longer message, to stderr\n- exit 2 Merge pull request #280 from gvanrossum/master\n\nRaise error from drain() when socket is closed. Raise error from drain() when socket is closed. Updates to asyncio datagram API by Chris Laws. (CPython issue #23972.) Small robustness patch to run_coroutine_threadsafe() by Vincent Michel. (CPython issue #25304.) Add run_coroutine_threadsafe(); refactor wrap_future(). PR 273 by Vincent Michel. Rewrite the guts of Semaphore using the same strategy as Queue.\nPatch by manipopopo. Ignore test_pep492.py when copying to 3.4 branch. Add a little test for queue speed. Rewrite the guts of Queue to be more understandable and correct.\n\nFixes #265 and #268. Return True from StreamReader.eof_received() to fix\nhttp://bugs.python.org/issue24539 (but still needs a unittest).  Add\nStreamReader.__repr__() for easy debugging. Rename the function arg to run_in_executor() to \"func\" to avoid confusion. Merge pull request #231 from haypo/issue_222\n\nFix @coroutine for functions without __name__ Merge pull request #237 from ajdavis/update-queue-join-tests\n\nFix queue join tests for CPython's test runner. Merge pull request #236 from ajdavis/queue-join-fix\n\nFix LifoQueue's and PriorityQueue's put() and task_done(). CPython issue #22784: fix test_asyncio when the ssl module isn't available. (Antoine Pitrou) - Issue #22841: Reject coroutines in asyncio add_signal_handler().\n  Patch by Ludovic.Gasc. Added tag 3.4.2 for changeset 5f2a130f7a8c Clean up some docstrings and comments. Remove unused unimplemented _read_from_self(). Correct author name. Make slow_select() test pass on Windows. Do not offer to copy selectors.py to/from 3.4 CPython branch in update script. Make 'python3 setup.py test' work. Fix docstring typo: CancellationError should be CancelledError. Update instructions for Windows. Added tag 3.4.1 for changeset 7c85dd9f8f6e Bump version in setup.py. Added tag 3.4.1 for changeset e6084a6ff3bb Add option to randomize test order. Fix test failures by not cleaning up watcher in test for issue #168. Fix issue 168: StreamReader.read(-1) from pipe may hang if data exceeds buffer limit. Fix the second half of bugs.python.org/issue21447: race in _write_to_self(). Simple echo client/server example (for Twitter thread). Add __weakref__ slots to Handle and CoroWrapper. Fixes issue #166. Be careful accessing instance variables in __del__ (CPython issue 21340). Remove superfluous and useless line.\n\n(According to Benjamin in CPython repo rev 30a7e37b8441.) Add gi_{frame,running,code} properties to CoroWrapper. Fixes issue #163. Fix bad grammar. Document Task.cancel() properly. Pull in Solaris devpoll support by Giampaolo Rodola'. Back out inplace default for build_ext. See issue #116. Remove egg info in \"make clean\". Reject add/remove reader/writer when event loop is closed. Another tiny crawl.py cleanup. Use public interfaces to get the fileno(). Fix a typo. Added tag 0.4.1 for changeset 429bf62d2636 Release asyncio version 0.4.1, identical to CPython 3.4.0rc2. Only add *_unix_* to __all__ if they are defined. Fuzz tester for as_completed(), by Glenn Langford. (See issue #127.) Change as_completed() to use a Queue, to avoid O(N**2) behavior. Fixes issue #127. Add hint for pypi release on Windows. Added tag 0.3.1 for changeset 70a228927cab Bump to version 0.3.1. Removed tag 0.3.1 Added tag 0.3.1 for changeset b01fa490bc3d Remove more relics of resolution/granularity. Fix test bug (should use list, not set). Cosmetic improvement to test__run_once_logging() mock argument. Copy a bunch of fixes by Victor for the Proactor event loop from the CPython repo. Minor packaging tweak by ?ric Araujo. Fixes issue #116. Normalize whitespace (use \"make pep8\" to verify). Move async() call back to its original position. Issue 117. pass through pause/resume from subprocess pipe proto to subprocess proto. Refactor drain logic in streams.py to be reusable. Add write flow control to unix pipes. Refactoring: move write flow control to a subclass/mixin. Close loop in crawl.py example (mostly for IOCP). Remove temporary aliases Full/Empty. The standard readexactly() now raises on a short read, so kill the custom wrapper. Rename {Empty,Full} to {QueueEmpty,QueueFull} and no longer get them from queue.py. Fix whitespace. Locks refactor: use a separate context manager; remove Semaphore._locked. Fix race in FastChildWatcher (by its original author, Anthony Baire). Reincarnate CoroWrapper's docstring as a comment. Prune stale collections before closing oldest ones. Improve cloose logging. Refactor: introduce Connection class. Minimal pty support, by Jonathan Slenders. Fix race in subprocess transport, by Victor Stinner. Fixes issue 103. Refactor Logger: No more VPrinter base class. Better reporting. Change max tasks/pool default to 100. Add TODOs. PEP8 tweaks. Connection pool limits; strict/lenient host matching. Tiny tweaks to code/docs. Fix serious leak in connection pool (still a minor one left). Ignore now-closed connections in pool. A new crawler example. Fix bug in chunked reader (must read final CRLF). Fix the fix I just committed. :-( Fix typo (_writer instead of _reader). Don't special-case GeneratorExit in Condition.wait().\n\nI can't remember why I added that code, there are no tests for it, and\nit causes a spurious \"Exception ignored in <generator object ...>\"\nerror message if code like this is interrupted during the wait():\n\n@coroutine\ndef gen():\n    with (yield from cond):\n        while <test>:\n            yield from cond.wait() Avoid pause deadlock in readexactly(). Fixes issue 99. Make PY34 symbol private (rename it to _PY34). Export iscoroutine[function]. Oops.  Added a file by accident. A new, larger example: a cache server with a shareable, reconnecting client. Fix space in log message about poll time. Performance improvement to CPython issue 19967 (Victor Stinner again). Export all abstract protocol and transport classes. CPython issue #20029. Victor Stinner (CPython issue 19967): Future can have __del__ thanks to PEP 442. Shorten lines. Drop Tulip reference. Rename set_ctx to _set_ctx Add proposed Context.run() function Add get(default=<value>) A (much) simpler model Rename ContextVar.setx() -> ContextVar.set() Refactor run() stuff again Fix --disallow-any flags (there must only be one) Be stricter in types. Add Makefile so we can write 'make mypy' ContextVar needs only one type parameter.\n\n- If you don't specify a default, get() raises LookupError.\n- If you do specify a default, it should have type T.\n- If you want get() to return int or None, use ContextVar[Optional[int]]. Few updates after discussion Add some text (scratchpad) Precompute depth Refactor run() methods/functions Fix bug in run_with_EC Refactor run functions, finally.  Fix type issues found by --strict. Rename .pyi to .py and fix up forward references. Move threadstate stuff to top and make it actually work Fix bug in run_with_EC() Add vars(); fix run_with_EC() Implement {get,set}_EC() on top of get_TS() Tweaks; implement squash() Replace BareLocalContext with FrozenDict, WrappedLocalContext with LocalContext. Update CV and CM Expand EC into pseudo code Fix mypy errors; rename _CM to CM Stab at stubs for PEP 550. Add logo images Add recovered favicon Add README.md Add dummy logos.html file Remove application and version fields per gcloud instructions Initial set of files recovered from GCloud debug panel Convert scripts/parse_file.py to Python 3. Do not install the example. It interferes with pip install. Port example to PY3. Update install instructions. Update README Fix __iter__ attribute check. Ship it! Fixed the codec registration. Clean up pyxl/element.py a bit.\n\nGive internal names a _ prefix.\nSkip empty classes.\nUse a class variable to avoid ugly and expensive hasattr().\n\nTest Plan: Unit tests give no errors.\n\nReviewed By: dan Bump version on master branch to 0.550-dev Add daemon mode -- highly experimental (#4130)\n\nAdd dmypy: experimental daemon mode. In this mode mypy\r\nkeeps the ASTs from previous incremental runs in memory so \r\nthat successive runs can be much faster by reusing previous \r\nATSs for some modules that have no changed dependencies. Sync typeshed (#4096) Sync typeshed (#4086) Bump version to 0.540-dev (indicating 0.530 was released). Update revision history for 0.530 (#4057) Sync typeshed (#4035)\n\nThis is to pick up the revert of python/typeshed#1549. Sync typeshed (#4033) Sync typeshed (#4021) Don't crash on unexpected PY2 except syntax (#4011)\n\nRather than supporting esoteric forms like `except Ex, (err, info)` we just generate an error. At least it should no longer be possible to generate a crash this way. Sync typeshed (#3979) Fix misindented `del` statement. (#3954)\n\nFixes #3892.\r\n\r\nEverywhere we infer the correct type for a partially-typed variable,\r\nwe do two things: set var.type and delete var from partial_tyes.\r\nHowever in one place (try_infer_partial_type_from_indexed_assignment())\r\nthe var.type assignment was skipped if the current node was deferred\r\nbut the deletion was done unconditionally.  This caused the partial\r\ntype to remain in a place where serialization could not handle it. Update credits to current state of affairs (#3900)\n\nUpdate credits to current state of affairs\r\n\r\n- Delete attempt at listing all contributors (but keep \"Additional\r\n  thanks to\" since I think that category is handpicked).\r\n\r\n- Link to commit history on GitHub and to release blog posts\r\n\r\n- List current and past core team in the same format as\r\n  mypy-lang.org/about.html Sync typeshed (#3877) Add --warn-unused-configs flag (#3865)\n\nThis is handy for debugging misspellings in mypy.ini, and other mishaps due to e.g. file moves. Sync typeshed (#3875) Don't supply a context to the expression in `yield from` (#3815)\n\nThe actual expected type is complicated; it should be either a\r\nGenerator[X, Y, Z] sharing X and Y with the containing generator\r\nfunction, or an Iterable[X].\r\n\r\nFixes #3808. Sync typeshed (#3797) Remove redundant casts and unused ignores (#3778)\n\nThis resulted from running with --warn-redundant-casts and\r\n--warn-unused-ignores.  And turn those on in the self-check. Add 0.521 to release notes (#3766) Fix bug in cache updates and improve cache logging (#3708)\n\nThis started out as an attempt to make the logging messages around cache freshness/updates more useful, but I ended up discovering a bug in the code that updates the cache meta file when the mtime or path of the file has changes but size and source hash are the same. It wrote a list instead of a dict! This is a bug in a feature announced in 0.520 so should be included in 0.521 if/when we release it.\r\n\r\nI also decided to ignore debug_cache when comparing options (since it only affects the JSON style -- it's still a per-file option but changing it no longer invalidates the cache)\r\n\r\nAnd I made the --skip-version-check option strictly ignore the platform (since it's undocumented I can make it do what I want, and this is more useful for my one use case). Sync typeshed (#3697) Use OrderedDict for raw per-module options to preserve section order (#3678)\n\nFixes #3675.\r\n\r\nNote that the problem only occurs on Python 3.5 and earlier, since in Python 3.6 the standard dict type preserves order. Also note that this relies on ConfigParser preserving order -- which it does (it uses OrderedDict for everything by default). Move mypy_extensions version to 0.3.0 (about to release) (#3676) The platform option totally affects the cache! (#3663) Add an option to ignore the mypy version when validating cache metadata (#3641) Truncate mtimes to integers. (#3640)\n\nWe need this so a cache produced on Linux can be used on OS X: Linux\r\nreports mtimes with sub-second precision, whereas OS X (for some\r\nreason) reports whole seconds only, so that comparing an actual mtime\r\nwith an mtime read from the metadata never succeeds even if the file\r\nwas transferred exactly using tar.  (For the source file this causes\r\nthe metadata to be updated; for the cache data file this causes the\r\ncache data to be rejected.) Move path comparison from find_cache_meta() to validate_meta(). (#3642)\n\nIf the path is different (e.g. after copying a cache from a different\r\nmachine or user) the cache entry would be trivially rejected.  Now\r\nthat we have the hash as the source of truth, we don't need to worry\r\nso much about that.\r\n\r\nTested manually. Sync typeshed (#3628) Sync typeshed (#3586) Change python/mypy chat room to python/typing (last occurrences) (#3584) Bump typed-ast dependency to 1.0.4. (#3545)\n\nThis incorporates https://github.com/python/typed_ast/pull/41:\r\n'Add checks for some 3.5+ only syntax (async/await and the @ operator)' Sync typeshed (#3531) Fix spurious \"cycle in function expansion\" errors. (#3504)\n\nMost of these (at least) seem to be due to a function being analyzed\r\nmultiple times, and the 'expanded' list filling up with 2 or more\r\nreferences to the same FuncDef.\r\n\r\nIf there are other reasons they will still trigger the same error, but\r\nat least for mypy itself, the error no longer appears with this simple\r\nfix.\r\n\r\nFixes #3503. Sync typeshed (#3479) Make return type of open() more precise (#3477)\n\nInfer TextIO or BinaryIO as the return type of open() instead of IO[str]\r\nor IO[bytes] when we can predict the mode. Move version of extensions to post-release (#3348) Fix 'variance' label. Sync typeshed (#3449) Revert \"Add line # of previous definition\" (#3422)\n\nReverts python/mypy#3396\r\n\r\nThis caused a new crash, the rollback fixes #3415. Clarify submodule (#3394)\n\n* Clarify submodule situation\r\n\r\n* Remove wiki link Support six.with_metaclass (#3364)\n\nFixes #1764.\r\n\r\nThis doesn't add support for @six.add_metaclass(M) -- if that's required we'll add it later (we should open a separate issue for that).\r\n\r\nIt does support generics (at least in the base classes). Sync typeshed (#3359) Move makedirs call inside try/except. (#3342)\n\nFixes #3332 Bump mypy_extensions version and update author, author_email, classifiers. (#3330)\n\nAlso update author, author_email, classifiers.\r\n\r\nFixes #3311. Various doc updates (#3314)\n\n* flexible Callable\r\n* --cache-dir=/dev/null\r\n* --quick mode\r\n* Refresh usage message\r\n* ClassVar Sync typeshed (#3310) Catch and ignore errors writing JSON files. (#3288)\n\nThis is an alternative attempt at fixing issue #3215, given the\r\ncomplexity of PR #3239. Sync typeshed (#3293) Sync typeshed (#3290) Make .flake8 not a symlink. (#3280)\n\nThis is so there are no symlinks in the mypy repo itself.\r\nHowever there are some in the typeshed repo.\r\n\r\nSee https://github.com/python/mypy/issues/3222 Drop Python 3.2 support. (#3244)\n\n* Drop Python 3.2 support.\r\n\r\nTighten parsing of Python version on command line and in config file.\r\nThe only versions now supported are:\r\n- 2.7\r\n- 3.3 and higher 3.x versions\r\n\r\nCloses #3231.\r\n\r\n* Add tests for python_version parsing in mypy.ini\r\n\r\n* Add positive acceptance tests for 2.7, 3.3, 3.6 (assuming 3.x is a range check) Sync typeshed (#3261) Disable cache in non-incremental tests (#3255)\n\n* Disable cache in non-incremental tests\r\n\r\nFixes #3253\r\n\r\n* Also disable cache writing for fine-grained tests. Only do two runs on AppVeyor instead of four. (#3242)\n\nWindows Python wheels are version-independent. Sync typeshed (#3237) Tentative fix for crash in --quick mode (#3233)\n\nHopefully fixes #3214. Sync typeshed (#3212) Update PY3 cheat sheet with varargs example. (#3201) Always write the cache (unless cache_dir is /dev/null) (#3133) Sync typeshed (#3190) Sync typeshed (#3168)\n\nSpecifically to include python/typeshed#1156 which is important follow-up for #3107. Document new @overload functionality (implementations in non-stub files) (#3159)\n\nThese are the doc updates corresponding to PR #2603 by @sixolet (specified in a revision of PEP 484: https://www.python.org/dev/peps/pep-0484/#function-method-overloading). The docs got started in PR #PR #2792 by @jkleint. Sync typeshed (#3136) Sync typeshed (#3130) Get rid of ErrorType (#3103)\n\nFixes #3063 Support functional API for Enum. (#2805)\n\nFixes #2306.\r\n\r\nAlso move Enum tests from runtests to pytest. Sync typeshed (#3083) Sync typeshed (#3076) Sync typeshed (#3058)\n\nAlso fix type for WTERMSIG, WEXITSTATUS; revert casts for select() args. Avoid errors in select() calls in stdlib-samples. (#3055)\n\nThis make mypy's runtests.py pass again with HEAD typeshed.\r\n\r\nSee https://github.com/python/typeshed/pull/1080#issuecomment-289157170 Redirect questions to Gitter instead of trackers Don't use TYPE_CHECKING because it's not in the Python 3.5.1 stdlib (#3008) Sync typeshed (#3002) Don't call globals() in deserialize() (#2975)\n\nThis came up in a cProfile run. Quick and dirty variant of incremental mode (#2972)\n\n* \"Quick and dirty\" variant of incremental mode.\r\n\r\nThis uses the cache whenever the cache file exists and is newer than the source.\r\n\r\nThe difference with regular incremental mode is that regular\r\nincremental mode forces a re-check whenever any dependency is stale,\r\nand it forces re-checks for all modules in an SCC.  In quick-and-dirty\r\nmode, by contrast, if some modules in an SCC have a new-enough cache\r\nfile, they are loaded from the cache even if some other module in the\r\nsame SCC or one of its dependencies was stale.\r\n\r\nThis is much quicker but obviously not always correct.  The hope is\r\nthat it speeds up checking single files when there are large SCCs (or\r\nlarge dependency graphs) around.\r\n\r\nA typical workflow would be:\r\n\r\n1. mypy -i (slow, but warms the cache)\r\n2. edit some file (or a few)\r\n3. mypy --quick-and-dirty (re-checks only the file(s) you edited)\r\n4. repeat steps 2-4 any number of times (maybe for different files)\r\n5. mypy -i (re-check everything -- this could be part of CI)\r\n6. if any errors left, go to step 2 Update Python 3.6 support matrix (#2923) Fix crash in calculate_metaclass_type() when c.type is None (can happen with -i) (#2865)\n\nThis can happen in incremental mode. I'm also updating the type of Instance.type to Optional to make it clear this is legit (the constructor call in deserialize() is the source). Be aware of StarExpr in tuple when checking string conversions (#2866)\n\nFixes #2794. Sync typeshed (#2864)\n\nTo incorporate the final List imports (python/typeshed#934). Sync typeshed (#2851) Allow E[<str>] where E is an Enum type (#2812)\n\n* Allow E[<str>] where E is an Enum type.\r\n\r\nFixes #1381.\r\n\r\n* Respond to review by @ilevkivskyi Sync typeshed (#2817) Revert \"Treat varargs as legal context in default lambda argument\" (#2790)\n\nHere's a snippet that crashes:\r\n```\r\nimport warnings\r\nwarnings.warn = lambda *args, **kwargs: None\r\n```\r\n(This is literally from our codebase, except there we have a `# type: ignore` too.) Sync typeshed (#2787) Always process modules/packages given with -m/-p (#2786)\n\nAlways process modules/packages given with -m/-p.\r\n\r\nFixes #2779. Sync typeshed (#2774) Fix an assert that passed type checks but could fail at runtime. (#2767)\n\nFixes #2751.\r\n\r\n(That assert was added in #2341 to force the type checker to believe\r\nthat 'file' is a MypyFile instance, but the rest of the code makes it\r\nclear that it may also be None, in which case the assert fails.) Sync typeshed (#2763) Show positional-only args in cheat sheet Sync typeshed (#2676)\n\n* Sync typeshed\r\n\r\n* Incorporate fixed fix for RawConfigParser.items() fix Don't import Type -- it's not there on Python 3.5.1 (#2669) Fix crash when a typevar's value restriction is generic without parameters. (#2664)\n\nFixes #2662 Sync typeshed (#2660) Clean up appveyor.yml and stop excluding check/extensions (#2659) Make PYTEST_FILES work on Windows (#2658) Make typing and typed-ast external dependencies (#2452)\n\nThis will automatically install the typing and typed-ast packages when\r\nappropriate.\r\n\r\nThe setup.py file now depends on setuptools.  We should build wheels\r\nso that users installing from PyPI won't need setuptools.  In order to\r\nbuild wheels the distribution builder/uploader needs to install the\r\nwheel package.  To manage those dependencies, I've added\r\nbuild-requirements.txt.\r\n\r\nIn summary:\r\n  - python3 -m pip install -r build-requirements.txt\r\n  - python3 setup.py bdist_wheel\r\n  - upload the .whl file that appears in the dist/ subdirectory to PyPI Disable flake8-bugbear errors (if installed) (#2629) Sync typeshed (#2624) Sync typeshed (#2606) Team updates, URL updates, and misc fixes (#5) Add 0.521 blogpost Initial commit Update to PEP 487, exactly as posted to python-dev Wed, Jul 13, 2016.\n\nExcept for one typo fix. Add explanation of singletons in unions to PEP484\n\nBy Ivan Levkivskyi (https://github.com/python/typing/pull/240). Typos, rst formatting and a minor addition to PEP 483 (Ivan L, upstream #227) Add typing.TYPE_CHECKING to PEP 484. The type of an empty tuple is spelled Tuple[()]. Fixes upstream #231. Fix an indentation error in the rST for NewType (Ryan Gonzalez). Add NewType() to PEP 484. Add \"Python-Version: 3.6\" header to PEP 519. Add Type and ContextManager to list of everything in typing.py. Add annotation to async def example. Short subsection on annotating coroutines (Ivan L, #225). Improve wording on covariance of Type[] (Ivan L, #107). Clarify a sentence that mentioned LoggedVar[t]. Add section to PEP 484 on new feature Type[C]. A new co-author for PEP 483, Ivan Levkivskyi, has greatly added to it. Fix some cursive markup. Edits by Ivan Levkivskyi to be more precise about types vs. classes.\n\nFrom https://github.com/python/typing/pull/214. Update status of PEP 438 Rip out the promotion from bytearray/memoryview to bytes. See http://bugs.python.org/issue26800. Fix typo. Revert my previous diff that removed another example breaking before \"and\". According to Knuth, it is better to break *before* a binary operator. Fix style inconsistency with \"and\" on continuation line. Add Text alias. Add DefaultDict to PEP 484. Update the section on type erasure to disallow Node[int]() -- you must use a type alias. Show example of 2.7 syntax for argument-less function, and mention skipping 'self'. Give an explicit example for how to annotate *args, **kwds. Clarify what's allowed in the base classes when making a new generic class. Relax constraints on @overload. It may occur in modules if followed by a non-@overload version. Updates to PEP 484 concerning the syntax for Python 2.7 and straddling code. Just refer to the spec in PEP 484 for straddling annotations instead of repeating the info in PEP 8. Clarify things around the coding cookie.\n\nSerhiy Storchaka: \"Coding cookie must be in comment, only the first\noccurrence in the line must be taken to account (here is a bug in\nCPython), encoding name must be ASCII, and there must not be any\nPython statement on the line that contains the encoding\ndeclaration.\" Undefined didn't make it into the standard. Moved ambv/typehinting repo to python/typing. Yeah! Update PEP 484 with recommended Python 2 alternative. Clarify that stdlib experiments with annotations are not encouraged. Update rules for function annotations in the light of PEP 484. Update PEP 8 to recommend against trailing whitespace. Change Talin's email address to viridia@gmail.com. Fix link for \"Registering with the Package Index\". Add Awaitable, AsyncIterable, AsyncIterator to PEP 484 (to be released 3.5.2). Special case in stub files for import *. Remove outdated motivation for short module names. A variety of small edits and clarifications to PEP 495. PEP 0431 withdrawal. Update typeshed link. Add Python-Version header; some formatting fixes. Indicate PEP 483 is sloppy about type vs. class. Clarify isinstance(x, Callable). Drop reference to isinstance() implementation. Typo fix (thanks Yuval G.). PEP 484 (type hints) accepted by BDFL-Delegate (Mark Shannon). Update PEP 484. Mostly clarifications and edits; dropped predefined platform constants. Updated version of PEP 484. Properly terminate Emacs variable list at end of PEP 485. Discuss issue #105 and a solution. Mark PEP 3152 (codef/cocall) as rejected. Separate -> surround. New version of PEP 484 for review by python-dev. Small edits; added Tuple[t, ...] and Callable[..., tr]. Describe an old but good rule for consistent return statements. Add section on PEP Development Process, with github links. A new type hints draft.  I've decided to publish more drafts.\n\nSignificant changes in this draft:\n- Define stubs.\n- Define `@overload`.\n- Describe `cast()`.\n- Fix description of `Any`.\n- Describe `Callable[..., t]`.\n- Explain why `List[t]` instead of `List<t>`.\n- Add section on rejected alternatives.\n- Various other edits for clarity. Update to PEP 448 -- approved 2 out of 3, rejected *comprehension. Small wording change to PEP 448 (replace \"currently\" with \"continue to\"). Make a line of dashes longer, to satisfy pep2html. Update to PEP 441 from Paul More: swap pack() args, default archive name, support open streams. PEP 48{2,3} title changes (typing -> types) and add some cross-links. First public draft of PEP 484 Add PyCharm reference. Change the level of a few headings. Remove duplicate title. Move text on Reticulated Python to PEP 483.  Add an abstract.  Set creation date to 19-Dec-2014 (cretion date of the original Quip doc). Add brief section on Reticulated Python, plus stubs for other Pythonic projects. Add PEP 482, 483, 484 -- type hints. The latter two are stubs. More clarifications in response to Oscar Benjamin. Replace paragraph that confused people into thinking that generators are no longer iterators. Touch two PEPs with figures to force re-import on www.python.org. Mark PEP 479 as accepted and clarify the process. Last patch was by Akira Kitada, not Akira Li. PEP 8 section on string quotes by Akira Li. Two new sections (more motivation, rejected @allow_implicit_stop). Elaborate transaction() manager example (Chris A). New section with contextlib example (Isaac Schwabacher).\nOther additions by Chris, including renumbered references. Chris A: Mention Mark Shannon's counterproposal of changing next(). One small copy-edit. Another major editing pass. Move __future__ into spec. Add section about compatible code. Add transition plan. No empty promises in the abstract. Extend rationale. Move PEP 458 figures out of subdirectory. Move PEP 480 figure out of subdir -- that does not work on python.org. Clarify what happens on g.throw(StopIteration). Updates and figures for PEP 458 and PEP 480 by Vladimir Diaz. Clarify that after raising RuntimeError a generator will raise StopIteration. Added myself as PEP 479 co-author. PEP 479: Fix formatting of examples. New examples, explanations and a few edits, all by Chris. PEP 479: switch to \"from __future__ import generator_stop\". PEP 479: Add link to issue 22906. Remove \"implicitly-raised\" from abstract, it is just confusing. PEP 479: Use a shorter __future__ name (generator_return). Add a clarifying paragraph to PEP 0479, and another post-history date. Add link to survey by Steven D, and summarize the two responses so far. Bump version on master branch to 0.550-dev Add daemon mode -- highly experimental (#4130)\n\nAdd dmypy: experimental daemon mode. In this mode mypy\r\nkeeps the ASTs from previous incremental runs in memory so \r\nthat successive runs can be much faster by reusing previous \r\nATSs for some modules that have no changed dependencies. Sync typeshed (#4096) Sync typeshed (#4086) Bump version to 0.540-dev (indicating 0.530 was released). Update revision history for 0.530 (#4057) Sync typeshed (#4035)\n\nThis is to pick up the revert of python/typeshed#1549. Sync typeshed (#4033) Sync typeshed (#4021) Don't crash on unexpected PY2 except syntax (#4011)\n\nRather than supporting esoteric forms like `except Ex, (err, info)` we just generate an error. At least it should no longer be possible to generate a crash this way. Sync typeshed (#3979) Fix misindented `del` statement. (#3954)\n\nFixes #3892.\r\n\r\nEverywhere we infer the correct type for a partially-typed variable,\r\nwe do two things: set var.type and delete var from partial_tyes.\r\nHowever in one place (try_infer_partial_type_from_indexed_assignment())\r\nthe var.type assignment was skipped if the current node was deferred\r\nbut the deletion was done unconditionally.  This caused the partial\r\ntype to remain in a place where serialization could not handle it. Update credits to current state of affairs (#3900)\n\nUpdate credits to current state of affairs\r\n\r\n- Delete attempt at listing all contributors (but keep \"Additional\r\n  thanks to\" since I think that category is handpicked).\r\n\r\n- Link to commit history on GitHub and to release blog posts\r\n\r\n- List current and past core team in the same format as\r\n  mypy-lang.org/about.html Sync typeshed (#3877) Add --warn-unused-configs flag (#3865)\n\nThis is handy for debugging misspellings in mypy.ini, and other mishaps due to e.g. file moves. Sync typeshed (#3875) Don't supply a context to the expression in `yield from` (#3815)\n\nThe actual expected type is complicated; it should be either a\r\nGenerator[X, Y, Z] sharing X and Y with the containing generator\r\nfunction, or an Iterable[X].\r\n\r\nFixes #3808. Sync typeshed (#3797) Remove redundant casts and unused ignores (#3778)\n\nThis resulted from running with --warn-redundant-casts and\r\n--warn-unused-ignores.  And turn those on in the self-check. Add 0.521 to release notes (#3766) Fix bug in cache updates and improve cache logging (#3708)\n\nThis started out as an attempt to make the logging messages around cache freshness/updates more useful, but I ended up discovering a bug in the code that updates the cache meta file when the mtime or path of the file has changes but size and source hash are the same. It wrote a list instead of a dict! This is a bug in a feature announced in 0.520 so should be included in 0.521 if/when we release it.\r\n\r\nI also decided to ignore debug_cache when comparing options (since it only affects the JSON style -- it's still a per-file option but changing it no longer invalidates the cache)\r\n\r\nAnd I made the --skip-version-check option strictly ignore the platform (since it's undocumented I can make it do what I want, and this is more useful for my one use case). Sync typeshed (#3697) Use OrderedDict for raw per-module options to preserve section order (#3678)\n\nFixes #3675.\r\n\r\nNote that the problem only occurs on Python 3.5 and earlier, since in Python 3.6 the standard dict type preserves order. Also note that this relies on ConfigParser preserving order -- which it does (it uses OrderedDict for everything by default). Move mypy_extensions version to 0.3.0 (about to release) (#3676) The platform option totally affects the cache! (#3663) Add an option to ignore the mypy version when validating cache metadata (#3641) Truncate mtimes to integers. (#3640)\n\nWe need this so a cache produced on Linux can be used on OS X: Linux\r\nreports mtimes with sub-second precision, whereas OS X (for some\r\nreason) reports whole seconds only, so that comparing an actual mtime\r\nwith an mtime read from the metadata never succeeds even if the file\r\nwas transferred exactly using tar.  (For the source file this causes\r\nthe metadata to be updated; for the cache data file this causes the\r\ncache data to be rejected.) Move path comparison from find_cache_meta() to validate_meta(). (#3642)\n\nIf the path is different (e.g. after copying a cache from a different\r\nmachine or user) the cache entry would be trivially rejected.  Now\r\nthat we have the hash as the source of truth, we don't need to worry\r\nso much about that.\r\n\r\nTested manually. Sync typeshed (#3628) Sync typeshed (#3586) Change python/mypy chat room to python/typing (last occurrences) (#3584) Bump typed-ast dependency to 1.0.4. (#3545)\n\nThis incorporates https://github.com/python/typed_ast/pull/41:\r\n'Add checks for some 3.5+ only syntax (async/await and the @ operator)' Sync typeshed (#3531) Fix spurious \"cycle in function expansion\" errors. (#3504)\n\nMost of these (at least) seem to be due to a function being analyzed\r\nmultiple times, and the 'expanded' list filling up with 2 or more\r\nreferences to the same FuncDef.\r\n\r\nIf there are other reasons they will still trigger the same error, but\r\nat least for mypy itself, the error no longer appears with this simple\r\nfix.\r\n\r\nFixes #3503. Sync typeshed (#3479) Make return type of open() more precise (#3477)\n\nInfer TextIO or BinaryIO as the return type of open() instead of IO[str]\r\nor IO[bytes] when we can predict the mode. Move version of extensions to post-release (#3348) Fix 'variance' label. Sync typeshed (#3449) Revert \"Add line # of previous definition\" (#3422)\n\nReverts python/mypy#3396\r\n\r\nThis caused a new crash, the rollback fixes #3415. Clarify submodule (#3394)\n\n* Clarify submodule situation\r\n\r\n* Remove wiki link Support six.with_metaclass (#3364)\n\nFixes #1764.\r\n\r\nThis doesn't add support for @six.add_metaclass(M) -- if that's required we'll add it later (we should open a separate issue for that).\r\n\r\nIt does support generics (at least in the base classes). Sync typeshed (#3359) Move makedirs call inside try/except. (#3342)\n\nFixes #3332 Bump mypy_extensions version and update author, author_email, classifiers. (#3330)\n\nAlso update author, author_email, classifiers.\r\n\r\nFixes #3311. Various doc updates (#3314)\n\n* flexible Callable\r\n* --cache-dir=/dev/null\r\n* --quick mode\r\n* Refresh usage message\r\n* ClassVar Sync typeshed (#3310) Catch and ignore errors writing JSON files. (#3288)\n\nThis is an alternative attempt at fixing issue #3215, given the\r\ncomplexity of PR #3239. Sync typeshed (#3293) Sync typeshed (#3290) Make .flake8 not a symlink. (#3280)\n\nThis is so there are no symlinks in the mypy repo itself.\r\nHowever there are some in the typeshed repo.\r\n\r\nSee https://github.com/python/mypy/issues/3222 Drop Python 3.2 support. (#3244)\n\n* Drop Python 3.2 support.\r\n\r\nTighten parsing of Python version on command line and in config file.\r\nThe only versions now supported are:\r\n- 2.7\r\n- 3.3 and higher 3.x versions\r\n\r\nCloses #3231.\r\n\r\n* Add tests for python_version parsing in mypy.ini\r\n\r\n* Add positive acceptance tests for 2.7, 3.3, 3.6 (assuming 3.x is a range check) Sync typeshed (#3261) Disable cache in non-incremental tests (#3255)\n\n* Disable cache in non-incremental tests\r\n\r\nFixes #3253\r\n\r\n* Also disable cache writing for fine-grained tests. Only do two runs on AppVeyor instead of four. (#3242)\n\nWindows Python wheels are version-independent. Sync typeshed (#3237) Tentative fix for crash in --quick mode (#3233)\n\nHopefully fixes #3214. Sync typeshed (#3212) Update PY3 cheat sheet with varargs example. (#3201) Always write the cache (unless cache_dir is /dev/null) (#3133) Sync typeshed (#3190) Sync typeshed (#3168)\n\nSpecifically to include python/typeshed#1156 which is important follow-up for #3107. Document new @overload functionality (implementations in non-stub files) (#3159)\n\nThese are the doc updates corresponding to PR #2603 by @sixolet (specified in a revision of PEP 484: https://www.python.org/dev/peps/pep-0484/#function-method-overloading). The docs got started in PR #PR #2792 by @jkleint. Sync typeshed (#3136) Sync typeshed (#3130) Get rid of ErrorType (#3103)\n\nFixes #3063 Support functional API for Enum. (#2805)\n\nFixes #2306.\r\n\r\nAlso move Enum tests from runtests to pytest. Sync typeshed (#3083) Sync typeshed (#3076) Sync typeshed (#3058)\n\nAlso fix type for WTERMSIG, WEXITSTATUS; revert casts for select() args. Avoid errors in select() calls in stdlib-samples. (#3055)\n\nThis make mypy's runtests.py pass again with HEAD typeshed.\r\n\r\nSee https://github.com/python/typeshed/pull/1080#issuecomment-289157170 Redirect questions to Gitter instead of trackers Don't use TYPE_CHECKING because it's not in the Python 3.5.1 stdlib (#3008) Sync typeshed (#3002) Don't call globals() in deserialize() (#2975)\n\nThis came up in a cProfile run. Quick and dirty variant of incremental mode (#2972)\n\n* \"Quick and dirty\" variant of incremental mode.\r\n\r\nThis uses the cache whenever the cache file exists and is newer than the source.\r\n\r\nThe difference with regular incremental mode is that regular\r\nincremental mode forces a re-check whenever any dependency is stale,\r\nand it forces re-checks for all modules in an SCC.  In quick-and-dirty\r\nmode, by contrast, if some modules in an SCC have a new-enough cache\r\nfile, they are loaded from the cache even if some other module in the\r\nsame SCC or one of its dependencies was stale.\r\n\r\nThis is much quicker but obviously not always correct.  The hope is\r\nthat it speeds up checking single files when there are large SCCs (or\r\nlarge dependency graphs) around.\r\n\r\nA typical workflow would be:\r\n\r\n1. mypy -i (slow, but warms the cache)\r\n2. edit some file (or a few)\r\n3. mypy --quick-and-dirty (re-checks only the file(s) you edited)\r\n4. repeat steps 2-4 any number of times (maybe for different files)\r\n5. mypy -i (re-check everything -- this could be part of CI)\r\n6. if any errors left, go to step 2 Update Python 3.6 support matrix (#2923) Fix crash in calculate_metaclass_type() when c.type is None (can happen with -i) (#2865)\n\nThis can happen in incremental mode. I'm also updating the type of Instance.type to Optional to make it clear this is legit (the constructor call in deserialize() is the source). Be aware of StarExpr in tuple when checking string conversions (#2866)\n\nFixes #2794. Sync typeshed (#2864)\n\nTo incorporate the final List imports (python/typeshed#934). Sync typeshed (#2851) Allow E[<str>] where E is an Enum type (#2812)\n\n* Allow E[<str>] where E is an Enum type.\r\n\r\nFixes #1381.\r\n\r\n* Respond to review by @ilevkivskyi Sync typeshed (#2817) Revert \"Treat varargs as legal context in default lambda argument\" (#2790)\n\nHere's a snippet that crashes:\r\n```\r\nimport warnings\r\nwarnings.warn = lambda *args, **kwargs: None\r\n```\r\n(This is literally from our codebase, except there we have a `# type: ignore` too.) Sync typeshed (#2787) Always process modules/packages given with -m/-p (#2786)\n\nAlways process modules/packages given with -m/-p.\r\n\r\nFixes #2779. Sync typeshed (#2774) Fix an assert that passed type checks but could fail at runtime. (#2767)\n\nFixes #2751.\r\n\r\n(That assert was added in #2341 to force the type checker to believe\r\nthat 'file' is a MypyFile instance, but the rest of the code makes it\r\nclear that it may also be None, in which case the assert fails.) Sync typeshed (#2763) Show positional-only args in cheat sheet Sync typeshed (#2676)\n\n* Sync typeshed\r\n\r\n* Incorporate fixed fix for RawConfigParser.items() fix Don't import Type -- it's not there on Python 3.5.1 (#2669) Fix crash when a typevar's value restriction is generic without parameters. (#2664)\n\nFixes #2662 Sync typeshed (#2660) Clean up appveyor.yml and stop excluding check/extensions (#2659) Make PYTEST_FILES work on Windows (#2658) Make typing and typed-ast external dependencies (#2452)\n\nThis will automatically install the typing and typed-ast packages when\r\nappropriate.\r\n\r\nThe setup.py file now depends on setuptools.  We should build wheels\r\nso that users installing from PyPI won't need setuptools.  In order to\r\nbuild wheels the distribution builder/uploader needs to install the\r\nwheel package.  To manage those dependencies, I've added\r\nbuild-requirements.txt.\r\n\r\nIn summary:\r\n  - python3 -m pip install -r build-requirements.txt\r\n  - python3 setup.py bdist_wheel\r\n  - upload the .whl file that appears in the dist/ subdirectory to PyPI Disable flake8-bugbear errors (if installed) (#2629) Sync typeshed (#2624) Sync typeshed (#2606) Update pep 526 title in pep 494 PEP 526 updates (#84) Manually merge changes to PEP 526. Fix docutils markup errors. Add Post-History header to PEP 526. Reject the idea of using 'def' as a keyword. Delete erroneous blank line PEP 0526 deemed read for python-dev (#81) PEP 0526 next round of edits (#72)\n\n* setting up pep-0526 headers\r\n\r\n* Some work on PEP 526 abstract and rationale\r\n\r\n* adding info about annotations specs\r\n\r\n* PEP 526 updates\r\n\r\n* PEP 526 updates\r\n\r\n* adding section about instance variables inside methods\r\n\r\n* Change declare/declaration -> annotate/annotation.\r\n\r\n* Add notice for reviewers. PEP 0526 -- variable declarations (#70)\n\nThis PEP is *not* ready for review! This commit is just to claim the PEP number. Happy birthday Nick! Accept PEP 628. Update to PEP 487, exactly as posted to python-dev Wed, Jul 13, 2016.\n\nExcept for one typo fix. Add explanation of singletons in unions to PEP484\n\nBy Ivan Levkivskyi (https://github.com/python/typing/pull/240). Typos, rst formatting and a minor addition to PEP 483 (Ivan L, upstream #227) Add typing.TYPE_CHECKING to PEP 484. The type of an empty tuple is spelled Tuple[()]. Fixes upstream #231. Fix an indentation error in the rST for NewType (Ryan Gonzalez). Add NewType() to PEP 484. Add \"Python-Version: 3.6\" header to PEP 519. Add Type and ContextManager to list of everything in typing.py. Add annotation to async def example. Short subsection on annotating coroutines (Ivan L, #225). Improve wording on covariance of Type[] (Ivan L, #107). Clarify a sentence that mentioned LoggedVar[t]. Add section to PEP 484 on new feature Type[C]. A new co-author for PEP 483, Ivan Levkivskyi, has greatly added to it. Fix some cursive markup. Edits by Ivan Levkivskyi to be more precise about types vs. classes.\n\nFrom https://github.com/python/typing/pull/214. Update status of PEP 438 Rip out the promotion from bytearray/memoryview to bytes. See http://bugs.python.org/issue26800. Fix typo. Revert my previous diff that removed another example breaking before \"and\". According to Knuth, it is better to break *before* a binary operator. Fix style inconsistency with \"and\" on continuation line. Add Text alias. Add DefaultDict to PEP 484. Update the section on type erasure to disallow Node[int]() -- you must use a type alias. Show example of 2.7 syntax for argument-less function, and mention skipping 'self'. Give an explicit example for how to annotate *args, **kwds. Clarify what's allowed in the base classes when making a new generic class. Relax constraints on @overload. It may occur in modules if followed by a non-@overload version. Updates to PEP 484 concerning the syntax for Python 2.7 and straddling code. Just refer to the spec in PEP 484 for straddling annotations instead of repeating the info in PEP 8. Clarify things around the coding cookie.\n\nSerhiy Storchaka: \"Coding cookie must be in comment, only the first\noccurrence in the line must be taken to account (here is a bug in\nCPython), encoding name must be ASCII, and there must not be any\nPython statement on the line that contains the encoding\ndeclaration.\" Undefined didn't make it into the standard. Moved ambv/typehinting repo to python/typing. Yeah! Update PEP 484 with recommended Python 2 alternative. Clarify that stdlib experiments with annotations are not encouraged. Update rules for function annotations in the light of PEP 484. Update PEP 8 to recommend against trailing whitespace. Change Talin's email address to viridia@gmail.com. Fix link for \"Registering with the Package Index\". Add Awaitable, AsyncIterable, AsyncIterator to PEP 484 (to be released 3.5.2). Special case in stub files for import *. Remove outdated motivation for short module names. A variety of small edits and clarifications to PEP 495. PEP 0431 withdrawal. Update typeshed link. Add Python-Version header; some formatting fixes. Indicate PEP 483 is sloppy about type vs. class. Clarify isinstance(x, Callable). Drop reference to isinstance() implementation. Typo fix (thanks Yuval G.). PEP 484 (type hints) accepted by BDFL-Delegate (Mark Shannon). Update PEP 484. Mostly clarifications and edits; dropped predefined platform constants. Updated version of PEP 484. Properly terminate Emacs variable list at end of PEP 485. Discuss issue #105 and a solution. Mark PEP 3152 (codef/cocall) as rejected. Separate -> surround. New version of PEP 484 for review by python-dev. Small edits; added Tuple[t, ...] and Callable[..., tr]. Describe an old but good rule for consistent return statements. Add section on PEP Development Process, with github links. A new type hints draft.  I've decided to publish more drafts.\n\nSignificant changes in this draft:\n- Define stubs.\n- Define `@overload`.\n- Describe `cast()`.\n- Fix description of `Any`.\n- Describe `Callable[..., t]`.\n- Explain why `List[t]` instead of `List<t>`.\n- Add section on rejected alternatives.\n- Various other edits for clarity. Update to PEP 448 -- approved 2 out of 3, rejected *comprehension. Small wording change to PEP 448 (replace \"currently\" with \"continue to\"). Make a line of dashes longer, to satisfy pep2html. Update to PEP 441 from Paul More: swap pack() args, default archive name, support open streams. PEP 48{2,3} title changes (typing -> types) and add some cross-links. First public draft of PEP 484 Add PyCharm reference. Change the level of a few headings. Remove duplicate title. Move text on Reticulated Python to PEP 483.  Add an abstract.  Set creation date to 19-Dec-2014 (cretion date of the original Quip doc). Add brief section on Reticulated Python, plus stubs for other Pythonic projects. Add PEP 482, 483, 484 -- type hints. The latter two are stubs. More clarifications in response to Oscar Benjamin. Replace paragraph that confused people into thinking that generators are no longer iterators. Touch two PEPs with figures to force re-import on www.python.org. Mark PEP 479 as accepted and clarify the process. Last patch was by Akira Kitada, not Akira Li. PEP 8 section on string quotes by Akira Li. Two new sections (more motivation, rejected @allow_implicit_stop). Elaborate transaction() manager example (Chris A). New section with contextlib example (Isaac Schwabacher).\nOther additions by Chris, including renumbered references. Chris A: Mention Mark Shannon's counterproposal of changing next(). One small copy-edit. Another major editing pass. Move __future__ into spec. Add section about compatible code. Add transition plan. No empty promises in the abstract. Extend rationale. Move PEP 458 figures out of subdirectory. Move PEP 480 figure out of subdir -- that does not work on python.org. Add a more pleasing README.rst. Use sys.platform instead of os.name to detect Windows in asyncio docs. Patch by Akira Li. (Merge 3.5->3.6) Use sys.platform instead of os.name to detect Windows in asyncio docs. Patch by Akira Li. (Merge 3.4->3.5) Use sys.platform instead of os.name to detect Windows in asyncio docs. Patch by Akira Li. Issue #25390: typing: Don't crash on Union[str, Pattern]. (Merge 3.5->3.6) Issue #25390: typing: Don't crash on Union[str, Pattern]. Issue #24885: Update note in docs about stream convenience functions. (Merge 3.5->3.6) Issue #24885: Update note in docs about stream convenience functions. (Merge 3.4->3.5) Issue #24885: Update note in docs about stream convenience functions. Fix whitespace. Fix whitespace. Fix whitespace. Issue #25441: asyncio: Raise error from drain() when socket is closed. (Merge 3.5->3.6) Issue #25441: asyncio: Raise error from drain() when socket is closed. (Merge 3.4->3.5) Issue #25441: asyncio: Raise error from drain() when socket is closed. Issue #23972: Fix tests for Windows and Debian. (Merge 3.5->3.6) Issue #23972: Fix tests for Windows and Debian. (Merge 3.4->3.5) Issue #23972: Fix tests for Windows and Debian. Docs and one small improvement for issue #25304, by Vincent Michel. (Merge 3.5->3.6.) Docs and one small improvement for issue #25304, by Vincent Michel. (Merge 3.4->3.5.) Docs and one small improvement for issue #25304, by Vincent Michel. Issue #23972: updates to asyncio datagram API. By Chris Laws. (Merge 3.5->3.6.) Issue #23972: updates to asyncio datagram API. By Chris Laws. (Merge 3.4->3.5.) Issue #23972: updates to asyncio datagram API. By Chris Laws. Issue #25304: Add asyncio.run_coroutine_threadsafe(). By Vincent Michel. (Merge 3.5->3.6.) Issue #25304: Add asyncio.run_coroutine_threadsafe(). By Vincent Michel. (Merge 3.4->3.5.) Issue #25304: Add asyncio.run_coroutine_threadsafe(). By Vincent Michel. Also rewrote the guts of asyncio.Semaphore (patch by manipopopo). (Merge 3.5->3.6.) Also rewrote the guts of asyncio.Semaphore (patch by manipopopo). (Merge 3.4->3.5.) Also rewrote the guts of asyncio.Semaphore (patch by manipopopo). Correct Misc/NEWS about asyncio.Queue rewrite. Correct Misc/NEWS about asyncio.Queue rewrite. Correct Misc/NEWS about asyncio.Queue rewrite. Issue #25233: Rewrite the guts of Queue to be more understandable and correct. (Merge 3.5->default.) Issue #25233: Rewrite the guts of Queue to be more understandable and correct. (Merge 3.4->3.5.) Issue #25233: Rewrite the guts of Queue to be more understandable and correct. Add the original author of profile.py back to the docs, at his request. (Merge) Add the original author of profile.py back to the docs, at his request. Restore doc updates to typing.rst by Ivan Levkivskyi and Daniel Andrade Groppe. Restore doc updates to typing.rst by Ivan Levkivskyi and Daniel Andrade Groppe. Merge typing docs from 3.5 branch. Merge typing doc updates from larry's branch. Update typing docs based on a patch by Daniel Andrade Groppe. Update typing docs based on a patch by Ivan Levkivskyi (but much rewritten by me). Merge typing docs cleanup diff by Zach Ware from default back into 350 branch. Issue #24912: Prevent __class__ assignment to immutable built-in objects. (Merge 3.5 -> 3.6) Issue #24912: Prevent __class__ assignment to immutable built-in objects. (Merge 3.5.0 -> 3.5) Issue #24912: Prevent __class__ assignment to immutable built-in objects. Null merge (3.5.1 -> default). Null merge (Larry's 3.5 -> 3.5.1). Fix issue #24635. Issue #24635: Fixed flakiness in test_typing.py. (Merge from 3.5.) Issue #24635: Fixed flakiness in test_typing.py. Fix trailing ws (merge from 3.5). Fix trailing ws. Merge docs for typing.py from 3.5 into default branch. Merge docs for typing.py from accidental branch. Issue #23973: Update typing.py from GitHub repo. (Merge from 3.5.) Issue #23973: Update typing.py from GitHub repo. Issue #24272: Initial docs for typing.py (PEP 484). (Merge from 3.5.)\n\nBy Daniel Andrade Groppe and Ivan Levkivskyi. Issue #24272: Initial docs for typing.py (PEP 484).\n\nBy Daniel Andrade Groppe and Ivan Levkivskyi. Remove warning about asyncio being provisional (it's not in 3.5 and up; merge from 3.5). Remove warning about asyncio being provisional (it's not in 3.5 and up). Mapping key type is invariant. Update typing.py: remove isinstance() support (Mark struck it from the PEP). Fix bad indent in whatsnew/3.5.rst. Preliminary typing.py, anticipating provisional acceptance of PEP 484.\n\nThere area bunch of TODOs here, but the biggest (not mentioned in the\nfile) is that I'm going to take out __instancecheck__ and\n__subclasscheck__.  However my personal schedule is such that I\nprobably won't have time for these before Larry tags beta 1.  But I\nwill try -- this commit is mostly to make sure that typing.py doesn't\ncompletely miss the train.\n\nPS. I'm tracking issues at https://github.com/ambv/typehinting/issues. Fix news entry for issue 24018. Issue 24088: Clarify semantics of yield expression (merge from 3.4). Issue 24088: Clarify semantics of yield expression. Asyncio issue 222 / PR 231 (Victor Stinner) -- fix @coroutine functions without __name__. (Merged from 3.4 branch.) Asyncio issue 222 / PR 231 (Victor Stinner) -- fix @coroutine functions without __name__. Fix asyncio issue 235 (merge from 3.4). Fix asyncio issue 235: Queue subclass bug caused by JoinableQueue merge. Remove spurious text from build instructions README.\n\nIt said \"New text\", an apparent test edit by MvL ages ago. Unittest for Issue 21511 by Christie Wilson bobcatfish@gmail.com. Unittest for Issue 21511 by Christie Wilson bobcatfish@gmail.com (merge from 3.4). - Issue #22841: Reject coroutines in asyncio add_signal_handler().\n  Patch by Ludovic.Gasc. - Issue #22841: Reject coroutines in asyncio add_signal_handler().\n  Patch by Ludovic.Gasc. Add PEP-411-compliant note about asyncio being provisional. Fixes issue #22346. Closes #21527: Add default number of workers to ThreadPoolExecutor. (Claudiu Popa.) Fix getargspec() doctring (varkw -> keywords). Fix bootstrapping asdl -- it didn't work with Python 2.7. Replace deprecated time.clock() with time.time(). Fixes issue #20475. Merge 3.4->default: Fix test-order-dependend asyncio test failure caused by rev 2af5a52b9b87 (in this branch). Fix test-order-dependend asyncio test failure caused by rev 909ea8cc86bbab92dbb6231668f403b7360f30fa. Merge 3.4->default: asyncio: Fix upstream issue 168: StreamReader.read(-1) from pipe may hang if data exceeds buffer limit. asyncio: Fix upstream issue 168: StreamReader.read(-1) from pipe may hang if data exceeds buffer limit. Merge 3.4 -> default: asyncio: Upstream issue #167: remove dead code, by Marc Schlaich. asyncio: Upstream issue #167: remove dead code, by Marc Schlaich. Merge 3.4->default: asyncio: Fix the second half of issue #21447: race in _write_to_self(). asyncio: Fix the second half of issue #21447: race in _write_to_self(). Merge 3.4->default: asyncio docs: ProactorEventLoop does not support SSL. asyncio docs: ProactorEventLoop does not support SSL. Merge 3.4 -> default: asyncio: Add __weakref__ slots to Handle and CoroWrapper. Upstream issue #166. asyncio: Add __weakref__ slots to Handle and CoroWrapper. Upstream issue #166. Merge 3.4 -> default: asyncio: Be careful accessing instance variables in __del__ (closes #21340). asyncio: Be careful accessing instance variables in __del__ (closes #21340). Merge news item from 3.4 NEWS for latest asyncio commit. Drop Tulip reference. Skip some tests if SNI not supported. Relax some more timeouts. import upstream selectors.py changes. Remove duplicate import. Skip SSL tests with IOCP event loop. SSL hostname checking changes from CPython repo by Christian Heimes. Add Task.current_task([loop]). By Vladimir Kryachko. Set SA_RESTART to limit EINTR occurrences. (from CPython repo, by C.F. Natali.) Fix docstring typo. Support write flow control in proactor transport. Use try/finally to close loop in examples. Add --iocp to fetch3.py. Change proactor buffer management. Accept bytearray and memoryview, and replace asserts with raises. Upstream tweaks to locks docs. Make the new writelines() work for Python 3.3. Incorporate selectors.py refactoring from CPython repo. Make writelines() join the lines before calling write(). Fixes issue 92.\nAlso added some missing NotImplementedError tests. Use Interface instead of ABC.  Fixes issue 19726. Remove outdated TODO and NOTES. I have stopeed updating these a long time ago. Add 'shield' to __all__. Fixes issue 91. Replace some asserts with proper exceptions. Fold long lines. Support bytearray/memoryview arguments to write(), sendto(). Fixes issue 27. Variant of simple_tcp_server.py to measure timing. By Gustavo Carneiro. Experimental bytearray buffer. Fix amount of indentation -- CPython's precommit script complained. Fix get_event_loop() to call set_event_loop() when setting the loop. By Anthony Baire. Add StreamReaderProtocol to __all__. Added tag 0.2.1 for changeset 278be97ece66 Set version to 0.2.1. Ready for PyPI. Hopeful fix for CPython issue 19765. Change mock pipe to mock socket. Hope to fix CPython issue 19750. Fix docstring of get_nowait(). Add BoundedSemaphore to export list in locks.__all__. Keep asyncio working with Python 3.3 too. Add 'back' option to update script. Change bounded semaphore into a subclass, like threading.[Bounded]Semaphore. Fix some docstrings (from upstream CPython repo). Relax timing (from upstream CPython repo). Two new examples: print 'Hello World' every two seconds, using a callback and using a coroutine.\nThanks to Terry Reedy who suggested this exercise. Pass cancellation from wrapping Future to wrapped Future. Fixes issue 88. By Sa?l Ibarra Corretg? (mostly). From CPython: use a single return in selectors.py. From CPython: relax a timeout. Allow and correctly implement Semaphore(0). Add streams.start_server(), by Gustavo Carneiro. Generalized error handling callback for DatastoreProtocol. Increase timeout in test_popen() for buildbots. Refactor waitpid mocks. Patch by Anthony Baire. Use more specific asserts for some tests. From CPython issue 19589 by Serhiy Storchaka. Avoid ResourceWarning. Fix for CPython issue 19580 by Vajrasky Kok. Relax timing requirement. Fixes CPython issue 19579. Fix from Anthony Baire for CPython issue 19566. Skip test_selectors.py when copying to stdlib. Improved tests for selectors.py by Arnaud Faure. Optimize BaseSelector.modify(). Patch by Arnaud Faure (without tests). Add close() back to Unix selector event loop, to remove all signal handlers. Fix policy refactoring last-minute change for Windows. Refactor SIGCHLD handler, by Anthony Baire. Fixes issue 67. Locks improvements by Arnaud Faure: better repr(), change Condition structure. Add limited TLS capability to source/sink examples. Add pool-closing to fetch3 example. Slight rearrangement of tests for server_hostname=... Better-looking errors when ssl module cannot be imported. Fixes issue #77. After a patch by Arno Faure. Satisfy (most) pep8 whitespace requirements. Fold some long lines. Log a warning when eof_received() returns true and using ssl. Document EventLoop.close(). Fix coverage -- it was still using tulip instead of asyncio. Close resources owned by subclass before calling super().close(). Add server_hostname as create_connection() argument, with secure default. Update selectors.py from cpython: add get_map() method (Natali + Pitrou). Fold some long lines. Temporarily stop accepting whenever accept() returns certain errors. Fixes issue #78. Better instructions for running setup.py on Windows. If setuptools cannot be imported, try distutils.core. Do not attempt to import _winapi on UNIX. Tweak import of _overlapped and add instructions README (mostly for myself :-). Just log any exception coming out of accept(). Fixes issue #78. Update some comments. When not closing the connection after receiving EOF, still remove the read handler. Make it not a fatal error when accept() raises EMFILE. Fixes issue #78. Added tag 0.1.1 for changeset 27f5ccf1ba62 Changes by Sonald Stufft to build pypi distros. Yay! Fix CPython issue #19293 (hangs on AIX). Unsilence several tests that no longer hang on AIX, and silence a new AIX hang. Switch subprocess stdin to a socketpair, attempting to fix CPython issue #19293 (AIX hang). Skip test_subprocess_close_client_stream on AIX (to avoid hang). If waitpid() returns a weird status, the process is still dead.\n\nAlso tidy up a few comment and replace functools.partial with lambda. CPython issue #19297: fix resource warnings.  Patch by Vajrasky Kok. CPython issue #19310: fix child processes reaping logic (CF Natali). Skip test_create_datagram_endpoint_no_matching_family if IPv6 unsupported. Make various asyncio test files individually runnable. CPython issue #19309: make waitpid() wait for processes from all groups. Break out of loop on EOF in echo test programs. Ignore error from socket() if getaddrinfo() returned an unusable protocol/family combo. CPython issue #19305: fix sporadic test_asyncio failure on FreeBSD 10.0. Skip test_asyncio dual stack test when IPv6 not supported. CPython issue #19299: fix refleak test failures in test_asyncio. Verify hostname if verify_mode is CERT_OPTIONAL too. Compare cached options to current per-file options (#2588)\n\nFixes #2586 Revert \"Sync typeshed (living dangerously, no PR)\"\n\nThis reverts commit 5eaa4686af145cedd9c533357fe51d7b6514f605.\n\nSadly it broke in a subtle way.  Repro:\n\nfilter(None, [1, 2, 3])) # E: Argument 1 to \"filter\" has incompatible type None; expected None Add a --sample N to select N random commits out of the specified sequence (#2583)\n\nAlso make the mypy invocation more configurable (for repos that require running a script to decide which files to check). Sync typeshed (living dangerously, no PR) Ensure \"from foo import bar\" inside foo/__init__.py is silenced in silent mode (#2577)\n\nFixes #2052 Update docs to describe --follow-imports and --ignore-missing-imports (#2575)\n\nThese replace --silent-imports and --almost-silent.\r\nI ended up largely rewriting the section on following imports.\r\n\r\nFixes #2546. Sync typeshed (#2574) Fix for NamedTuple in method [WIP] (#2553)\n\nFixes #2535. Add typing to test-requirements; make typed_ast and typing conditional on platform/version (#2573)\n\nAlso make typed_ast and typing conditional on platform/version.\r\n\r\nI found that typing was missing when attempting to run pytest in a mostly vanilla 3.3 install.\r\n\r\nThe platform/version conditionals are borrowed from PR #2452. Sync typeshed (#2572) Don't ever return None for the type of an Instance (#2568)\n\nDon't ever return None for the str() of an Instance Add a flag to dump the graph as a JSON string to stdout (#2550) Change flag names for silent modes and add a new mode (\"follow silently\") (#2513)\n\nThere are now two flags:\r\n```\r\n  --ignore-missing-imports  silently ignore imports of missing modules\r\n  --follow-imports {normal,silent,skip,error}\r\n                            how to treat imports (default normal)\r\n```\r\nThe first is pretty clear. The second works as follows (I still have to update the docs).\r\n\r\nIt only applies to .py modules (i.e. not to .pyi stubs) that are not specified on the command line but are needed to satisfy some import(s) and are found on the module search path (MYPYPATH plus the defaults derived from the command line).\r\n\r\nThe values mean the following:\r\n- normal: process such modules normally (parse, analyze etc.)\r\n- silent: process normally but silence (ignore) any non-blocker errors in those modules\r\n- skip: silently don't process at all; the module is given type `Any`\r\n- error: don't process at all and give a single error message for each such module\r\n\r\nNote that when these flags are used as per-file flags, the pattern should match the imported module, not the importing module. Sync typeshed (#2508) Fix print with trailing comma (#2507)\n\nFixes #2506. Update typing.py (https://github.com/python/typing/pull/334) Revert \"For class variables, lookup type in base classes (#1338, #2022, #2211)\" (#2504)\n\nReverts python/mypy#2380\r\n\r\nThe reason is #2503 -- this breaks valid code. Upstream improvements to docstrings and error messages in typing.py by Ivan Levkivskyi (python/typing#331) Two more small upstream typing.py changes by Ivan Levkivskyi (#329, #330) More typing.py updates. This should be it for 3.6b4. (#2459) Fix qualified_name for methods (#2453)\n\nFixes #2451. Sync typeshed Make git-less version available Silence new flake8 error (E305). Reset changes to STRICT_OPTIONAL so that any test can use --strict-optional (#2449) Sync typeshed (#2434) An except clause should accept an exception of Type[BaseException] (#2433)\n\nFixes #2432. Sync typeshed (#2424) Revert \"selftype in namedtuple methods\" (#2414)\n\n\r\n\r\nReverts python/mypy#2408\r\n\r\nThis appears to have a bug; see my comment to the PR for an explanation. Show column number for reveal_type() expressions (#2397) Add a quick note on how to use fix_annotate.py Make mypy -V show git commit hash more often (#2394) Sync typeshed Sync typeshed (#2387) Various updates to typing.py (hopefully that's all for Python 3.6b3) (#2382) Fix crash for deferred methods introduced by #2193 (self-type). (#2375)\n\nFixes #2372. Update test requirements to typed-ast >= 0.6.1 Robustness in installation instructions.\n\n- Add -U to all pip install examples.\n- Change them all to use python3.\n- Add mypy-lang vs. mypy to troubleshooting.\n- Suggest --fast-parser and typed-ast. Switch Travis-CI to use Python 3.5.1; add 3.6-dev too (#2368)\n\nWe now run 4 builds instead of 3.\r\n\r\nIf that's too much, consider dropping 3.4 (it should be covered by 3.3 and 3.5). Sync typeshed (#2367) Remove difficulty/newcomer label. It was not effective. We still have difficulty/easy. Change filename patterns to module patterns in mypy.ini. (#2355)\n\nFixes #2345. Add a new, lower priority for imports inside \"if MYPY\" (#2167)\n\nThis improves the processing order of modules involved in a cycle when one arc of the cycle only exists inside `if MYPY` or `if typing.TYPE_CHECKING`.\r\n\r\nUnittest by @elazarg. Tweaks to getting started chapter Add gitter.im to CONTRIBUTING.md and deemphasize IRC. (#2338) Cleaner (?) fix for crash in #2302 (#2333)\n\nSee  https://github.com/python/mypy/pull/2302#issuecomment-255815552 Add new flag '--junit-xml=PATH' to write a junit.xml file (#2326)\n\nThis format is used by CI systems. We create a single \"test\" representing the entire mypy run. Fix bug with exception variable reuse in deferred node. (#2290)\n\n* Fix bug with exception variable reuse in deferred node. The fix is actually by @ecprice.\r\n\r\nSee https://github.com/python/mypy/pull/1748#issuecomment-254927514 Check deferred nodes after all first passes in an import cycle (#2264)\n\n* Use a separate TypeChecker per file.\r\n\r\n* Change the TypeChecker toplevel interface.\r\n\r\n* Do deferred (second) type checker pass after all first passes in an SCC.\r\n\r\n* Add simple tests.\r\n\r\nThese verify that deferral due to a cross-module dependency works.\r\n\r\n* Fix test failures due to semantic_analysis_only flag.\r\n\r\n* Add TODOs about getting rid of BuildResult and all_types.\r\n\r\n* Also hide cross-module notes with --hide-error-context\r\n\r\n* Expand docstring for check_first_pass()\r\n\r\n* Suppress reveal_type() output when current node is being deferred\r\n\r\n* Add reveal_type() calls to testSymmetricImportCycle*\r\n\r\n* WIP skip deferred queue duplicates\r\n\r\n* Make it easy to do more than 2 passes\r\n\r\n* Add a test that would require three passes\r\n\r\n* Make lint happy\r\n\r\n* Test case for error reported by pass two\r\n\r\n* Test case for deferred decorator\r\n\r\n* Explicit test case that reveal_type() shuts up in deferred function first time around\r\n\r\n* Remove print calls\r\n\r\n* Remove --hide-error-context from new tests and adjust expected output\r\n\r\n* Add reversed version of testErrorInPassTwo\r\n\r\n* Make decorator more complicated (both b.deco and a.g are now deferred) Report error on dynamic metaclass (#2275)\n\n* Avoid crash on dynamic metaclass (force error instead)\r\n\r\n* Add a unit test Also catch up copies of test_typing.py Two minor typing.py fixes (upstream #305) Fix tests Update typing.py from upstream some more Sync typing.py from upstream (python/typing repo) Document how to declare a decorator (Fix #2298) Sync typeshed Clarify forward references. Fixes #2259 Sync typeshed (fixed this time) Sync typeshed Show syntax for functions with many args. Fix crash on unpacking with invalid base class (#2249)\n\nFixes #2244. Add a section explaining why sometimes you don't get an error Clarify what is needed for PEP 526 support The node type in DeferredNode is just FuncItem. Allow importing a submodule ahead of its parent module (#2237)\n\nFixes #2133.\r\n\r\nThe solution is not to bail out early when the parent module is\r\nunavailable -- if all the imports are submodules of a package that's\r\nacceptable (the bug was that in incremental mode it's possible that\r\nthe parent is fresh and has not been entered into the modules dict\r\nyet, but the bail-out caused the import to be marked as missing). Minor improvements to \"fresh SCCs\" logging Add example mypy.ini Sync typeshed (last time before 0.4.5 release) RIP mypy.codec. (#2218) RIP weak mode. (#2217)\n\nFixes #2212.\r\n\r\nAll that's left is some calls to in_checked_function(), which replaces\r\nthe old typing_mode_full() and typing_mode_none() (its negation after\r\nthe elimination of typing_mode_weak()). Remove weird implementation of --show_traceback and --pdb. (#2216)\n\nAlso set options.show_traceback in all test modules I could find.\r\n\r\nThese flags used to be implemented as globals in errors.py that had to\r\nbe set by calling set_show_tb() or set_drop_into_pdb() (and setting\r\nthe corresponding Options attributes had no effect).  Now they're just\r\nregular options.  I had to adjust some plumbing to give\r\nreport_internal_error() access to the options but it was easier than I\r\nthought. Fix lint error Shorten \"inherently stale\" log message if all nodes in scc are stale Document --show-column-numbers and --scripts-are-modules Document support for Python 3.6 features. Sync typeshed Add mypy.ini. Fix strict none errors in the test subpackage. (#2200)\n\n* Fix strict none errors in the test subpackage.\r\n\r\nThis shows how to deal with #2199 for `p[i].arg`.\r\n\r\n* Run mypy over itself in --strict-optional mode. Add mypy.ini to suppress most errors (for now). Make Expression, Statement true subclasses of Node. See #1783. Don't crash in fast parser on complex numbers in Python 2 mode Add gitter badge for the new chat room (#2202)\n\nAnd remove link to the old one. Rename --suppress-error-context to --hide-error-context (#2192) Add gitter chat room\n\nhttps://gitter.im/python-mypy/Lobby Fix a fixup bug for nested class references.\n\nThis has plagued me for weeks, but I could not repro it until now. Sync typeshed Make runtests.py output less verbose Fix lint Bare `Tuple` should mean `Tuple[Any, ...]`. (#2185)\n\n* Fix #2184. Sync typeshed Support typing.TYPE_CHECKING.\n\nFixes #2165.\n\nThis is not completely correct (it'll trigger on *any* variable named\nTYPE_CHECKING) but I think that's acceptable.  We should be able to\nphase out MYPY once this is in the next release. Missed an refactoring opportunity for per-file options Add config_file to ToC. Document `@flagfile` and the format for `mypy.ini`. (#2161)\n\nSee #2148. Support reading options from a config file, default mypy.ini. (#2148)\n\nAlso support reading command line flags using `mypy @flagsfile`.\r\n\r\nAddresses #1249 (but does not completely fix it).\r\n\r\nThe mypy.ini file has the format:\r\n```\r\n[mypy]\r\nsilent_imports = True\r\npython_version = 2.7\r\n```\r\nErrors in this config file are non-fatal.  Comments and blank lines\r\nare supported.\r\n\r\nThere are also sections with glob patterns for per-file options, e.g.\r\n`[mypy-dir1/*,dir2/*]` (I'll document those later).\r\n\r\nThe `@flagsfile` option reads additional argparse-style flags,\r\nincluding filenames, from `flagsfile`, one per line.  This is\r\ntypically used for passing in a list of files, but it can also be used\r\nfor passing flags:\r\n```\r\n--silent-imports\r\n--py2\r\nmypy\r\n```\r\nThis format does not allow comments or blank lines.  Each option must\r\nappear on a line by itself.  Errors are fatal.\r\n\r\nThe mypy.ini file serves as a set of defaults that can be overridden\r\n(or in some cases extended) by command line flags.  An alternate\r\nconfig file may be specified using a command line flag:\r\n`--config-file anywhere.ini`.  (There's a trick involved in making\r\nthis work, read the source. :-) Add explanatory comment. Avoid recording None in extract_refexpr_names(). (#2159)\n\nFixes #2156. Use a single exception class shared by fastparse.py and fastparse2.py. (#2147)\n\nFixes #2146. Fix typo in key binding Add --scripts-are-modules flag. Fixes #1380. (#2138)\n\n\r\n\r\nIf set, each script file passed on the command line (i.e. without .py extension) is considered a module by that name (its basename, actually). Without this flag, the script is considered to be module __main__ and there can be only one. Sync typeshed (new decimal stubs) Compare cached options to current per-file options (#2588)\n\nFixes #2586 Revert \"Sync typeshed (living dangerously, no PR)\"\n\nThis reverts commit 5eaa4686af145cedd9c533357fe51d7b6514f605.\n\nSadly it broke in a subtle way.  Repro:\n\nfilter(None, [1, 2, 3])) # E: Argument 1 to \"filter\" has incompatible type None; expected None Add a --sample N to select N random commits out of the specified sequence (#2583)\n\nAlso make the mypy invocation more configurable (for repos that require running a script to decide which files to check). Sync typeshed (living dangerously, no PR) Ensure \"from foo import bar\" inside foo/__init__.py is silenced in silent mode (#2577)\n\nFixes #2052 Update docs to describe --follow-imports and --ignore-missing-imports (#2575)\n\nThese replace --silent-imports and --almost-silent.\r\nI ended up largely rewriting the section on following imports.\r\n\r\nFixes #2546. Sync typeshed (#2574) Fix for NamedTuple in method [WIP] (#2553)\n\nFixes #2535. Add typing to test-requirements; make typed_ast and typing conditional on platform/version (#2573)\n\nAlso make typed_ast and typing conditional on platform/version.\r\n\r\nI found that typing was missing when attempting to run pytest in a mostly vanilla 3.3 install.\r\n\r\nThe platform/version conditionals are borrowed from PR #2452. Sync typeshed (#2572) Don't ever return None for the type of an Instance (#2568)\n\nDon't ever return None for the str() of an Instance Add a flag to dump the graph as a JSON string to stdout (#2550) Change flag names for silent modes and add a new mode (\"follow silently\") (#2513)\n\nThere are now two flags:\r\n```\r\n  --ignore-missing-imports  silently ignore imports of missing modules\r\n  --follow-imports {normal,silent,skip,error}\r\n                            how to treat imports (default normal)\r\n```\r\nThe first is pretty clear. The second works as follows (I still have to update the docs).\r\n\r\nIt only applies to .py modules (i.e. not to .pyi stubs) that are not specified on the command line but are needed to satisfy some import(s) and are found on the module search path (MYPYPATH plus the defaults derived from the command line).\r\n\r\nThe values mean the following:\r\n- normal: process such modules normally (parse, analyze etc.)\r\n- silent: process normally but silence (ignore) any non-blocker errors in those modules\r\n- skip: silently don't process at all; the module is given type `Any`\r\n- error: don't process at all and give a single error message for each such module\r\n\r\nNote that when these flags are used as per-file flags, the pattern should match the imported module, not the importing module. Sync typeshed (#2508) Fix print with trailing comma (#2507)\n\nFixes #2506. Update typing.py (https://github.com/python/typing/pull/334) Revert \"For class variables, lookup type in base classes (#1338, #2022, #2211)\" (#2504)\n\nReverts python/mypy#2380\r\n\r\nThe reason is #2503 -- this breaks valid code. Upstream improvements to docstrings and error messages in typing.py by Ivan Levkivskyi (python/typing#331) Two more small upstream typing.py changes by Ivan Levkivskyi (#329, #330) More typing.py updates. This should be it for 3.6b4. (#2459) Fix qualified_name for methods (#2453)\n\nFixes #2451. Sync typeshed Make git-less version available Silence new flake8 error (E305). Reset changes to STRICT_OPTIONAL so that any test can use --strict-optional (#2449) Sync typeshed (#2434) An except clause should accept an exception of Type[BaseException] (#2433)\n\nFixes #2432. Sync typeshed (#2424) Revert \"selftype in namedtuple methods\" (#2414)\n\n\r\n\r\nReverts python/mypy#2408\r\n\r\nThis appears to have a bug; see my comment to the PR for an explanation. Show column number for reveal_type() expressions (#2397) Add a quick note on how to use fix_annotate.py Make mypy -V show git commit hash more often (#2394) Sync typeshed Sync typeshed (#2387) Various updates to typing.py (hopefully that's all for Python 3.6b3) (#2382) Fix crash for deferred methods introduced by #2193 (self-type). (#2375)\n\nFixes #2372. Update test requirements to typed-ast >= 0.6.1 Robustness in installation instructions.\n\n- Add -U to all pip install examples.\n- Change them all to use python3.\n- Add mypy-lang vs. mypy to troubleshooting.\n- Suggest --fast-parser and typed-ast. Switch Travis-CI to use Python 3.5.1; add 3.6-dev too (#2368)\n\nWe now run 4 builds instead of 3.\r\n\r\nIf that's too much, consider dropping 3.4 (it should be covered by 3.3 and 3.5). Sync typeshed (#2367) Remove difficulty/newcomer label. It was not effective. We still have difficulty/easy. Change filename patterns to module patterns in mypy.ini. (#2355)\n\nFixes #2345. Add a new, lower priority for imports inside \"if MYPY\" (#2167)\n\nThis improves the processing order of modules involved in a cycle when one arc of the cycle only exists inside `if MYPY` or `if typing.TYPE_CHECKING`.\r\n\r\nUnittest by @elazarg. Tweaks to getting started chapter Add gitter.im to CONTRIBUTING.md and deemphasize IRC. (#2338) Cleaner (?) fix for crash in #2302 (#2333)\n\nSee  https://github.com/python/mypy/pull/2302#issuecomment-255815552 Add new flag '--junit-xml=PATH' to write a junit.xml file (#2326)\n\nThis format is used by CI systems. We create a single \"test\" representing the entire mypy run. Fix bug with exception variable reuse in deferred node. (#2290)\n\n* Fix bug with exception variable reuse in deferred node. The fix is actually by @ecprice.\r\n\r\nSee https://github.com/python/mypy/pull/1748#issuecomment-254927514 Check deferred nodes after all first passes in an import cycle (#2264)\n\n* Use a separate TypeChecker per file.\r\n\r\n* Change the TypeChecker toplevel interface.\r\n\r\n* Do deferred (second) type checker pass after all first passes in an SCC.\r\n\r\n* Add simple tests.\r\n\r\nThese verify that deferral due to a cross-module dependency works.\r\n\r\n* Fix test failures due to semantic_analysis_only flag.\r\n\r\n* Add TODOs about getting rid of BuildResult and all_types.\r\n\r\n* Also hide cross-module notes with --hide-error-context\r\n\r\n* Expand docstring for check_first_pass()\r\n\r\n* Suppress reveal_type() output when current node is being deferred\r\n\r\n* Add reveal_type() calls to testSymmetricImportCycle*\r\n\r\n* WIP skip deferred queue duplicates\r\n\r\n* Make it easy to do more than 2 passes\r\n\r\n* Add a test that would require three passes\r\n\r\n* Make lint happy\r\n\r\n* Test case for error reported by pass two\r\n\r\n* Test case for deferred decorator\r\n\r\n* Explicit test case that reveal_type() shuts up in deferred function first time around\r\n\r\n* Remove print calls\r\n\r\n* Remove --hide-error-context from new tests and adjust expected output\r\n\r\n* Add reversed version of testErrorInPassTwo\r\n\r\n* Make decorator more complicated (both b.deco and a.g are now deferred) Report error on dynamic metaclass (#2275)\n\n* Avoid crash on dynamic metaclass (force error instead)\r\n\r\n* Add a unit test Also catch up copies of test_typing.py Two minor typing.py fixes (upstream #305) Fix tests Update typing.py from upstream some more Sync typing.py from upstream (python/typing repo) Document how to declare a decorator (Fix #2298) Sync typeshed Clarify forward references. Fixes #2259 Sync typeshed (fixed this time) Sync typeshed Show syntax for functions with many args. Fix crash on unpacking with invalid base class (#2249)\n\nFixes #2244. Add a section explaining why sometimes you don't get an error Clarify what is needed for PEP 526 support The node type in DeferredNode is just FuncItem. Allow importing a submodule ahead of its parent module (#2237)\n\nFixes #2133.\r\n\r\nThe solution is not to bail out early when the parent module is\r\nunavailable -- if all the imports are submodules of a package that's\r\nacceptable (the bug was that in incremental mode it's possible that\r\nthe parent is fresh and has not been entered into the modules dict\r\nyet, but the bail-out caused the import to be marked as missing). Minor improvements to \"fresh SCCs\" logging Add example mypy.ini Sync typeshed (last time before 0.4.5 release) RIP mypy.codec. (#2218) RIP weak mode. (#2217)\n\nFixes #2212.\r\n\r\nAll that's left is some calls to in_checked_function(), which replaces\r\nthe old typing_mode_full() and typing_mode_none() (its negation after\r\nthe elimination of typing_mode_weak()). Remove weird implementation of --show_traceback and --pdb. (#2216)\n\nAlso set options.show_traceback in all test modules I could find.\r\n\r\nThese flags used to be implemented as globals in errors.py that had to\r\nbe set by calling set_show_tb() or set_drop_into_pdb() (and setting\r\nthe corresponding Options attributes had no effect).  Now they're just\r\nregular options.  I had to adjust some plumbing to give\r\nreport_internal_error() access to the options but it was easier than I\r\nthought. Fix lint error Shorten \"inherently stale\" log message if all nodes in scc are stale Document --show-column-numbers and --scripts-are-modules Document support for Python 3.6 features. Sync typeshed Add mypy.ini. Fix strict none errors in the test subpackage. (#2200)\n\n* Fix strict none errors in the test subpackage.\r\n\r\nThis shows how to deal with #2199 for `p[i].arg`.\r\n\r\n* Run mypy over itself in --strict-optional mode. Add mypy.ini to suppress most errors (for now). Make Expression, Statement true subclasses of Node. See #1783. Don't crash in fast parser on complex numbers in Python 2 mode Add gitter badge for the new chat room (#2202)\n\nAnd remove link to the old one. Rename --suppress-error-context to --hide-error-context (#2192) Add gitter chat room\n\nhttps://gitter.im/python-mypy/Lobby Fix a fixup bug for nested class references.\n\nThis has plagued me for weeks, but I could not repro it until now. Sync typeshed Make runtests.py output less verbose Fix lint Bare `Tuple` should mean `Tuple[Any, ...]`. (#2185)\n\n* Fix #2184. Sync typeshed Support typing.TYPE_CHECKING.\n\nFixes #2165.\n\nThis is not completely correct (it'll trigger on *any* variable named\nTYPE_CHECKING) but I think that's acceptable.  We should be able to\nphase out MYPY once this is in the next release. Missed an refactoring opportunity for per-file options Add config_file to ToC. Document `@flagfile` and the format for `mypy.ini`. (#2161)\n\nSee #2148. Support reading options from a config file, default mypy.ini. (#2148)\n\nAlso support reading command line flags using `mypy @flagsfile`.\r\n\r\nAddresses #1249 (but does not completely fix it).\r\n\r\nThe mypy.ini file has the format:\r\n```\r\n[mypy]\r\nsilent_imports = True\r\npython_version = 2.7\r\n```\r\nErrors in this config file are non-fatal.  Comments and blank lines\r\nare supported.\r\n\r\nThere are also sections with glob patterns for per-file options, e.g.\r\n`[mypy-dir1/*,dir2/*]` (I'll document those later).\r\n\r\nThe `@flagsfile` option reads additional argparse-style flags,\r\nincluding filenames, from `flagsfile`, one per line.  This is\r\ntypically used for passing in a list of files, but it can also be used\r\nfor passing flags:\r\n```\r\n--silent-imports\r\n--py2\r\nmypy\r\n```\r\nThis format does not allow comments or blank lines.  Each option must\r\nappear on a line by itself.  Errors are fatal.\r\n\r\nThe mypy.ini file serves as a set of defaults that can be overridden\r\n(or in some cases extended) by command line flags.  An alternate\r\nconfig file may be specified using a command line flag:\r\n`--config-file anywhere.ini`.  (There's a trick involved in making\r\nthis work, read the source. :-) Add explanatory comment. Avoid recording None in extract_refexpr_names(). (#2159)\n\nFixes #2156. Use a single exception class shared by fastparse.py and fastparse2.py. (#2147)\n\nFixes #2146. Fix typo in key binding Add --scripts-are-modules flag. Fixes #1380. (#2138)\n\n\r\n\r\nIf set, each script file passed on the command line (i.e. without .py extension) is considered a module by that name (its basename, actually). Without this flag, the script is considered to be module __main__ and there can be only one. Sync typeshed (new decimal stubs) Add more words to GeneratorReturn alternative. Make PEP 479 (Change StopIteration) be more specific, improve some wording, etc. Do not recommend a blank line before any docstrings. Patch by Akira Kidata. Fix literal block. Clarify space around colon in slice (severa cases). Add PEP 473 \"Adding structured data to built-in exceptions\" by Sebastian Kreft. Add PEP 472: \"Support for indexing with keyword arguments\" by Stefano Borini, Joseph Martinot-Lagarde. Extend Python 2.7 life till 2020. Accept PEP 465. Update to PEP 465 -- propose to keep @ at the same level as *. Truncate an interminable sentence (sorry Nick :-). Mark PEP 3145 as withdrawn. New version of pep 465 (matrix multiply @ operator). Added scan-ops.py. PEP 465: Updated section \"Choice of operator\". Fix mark-up errors I introduced by copy/pasting. Assign PEP #465 to \"Dedicated infix operators for matrix multiplication and matrix power\" by Nathaniel J. Smith. Attempt to clean up PEP 257 footnotes. Make PEP 8 follow PEP 257 on docstring endings. PEP 257: Drop recommendation of extra blank line at end of docstring. More typos found by Tim Tvrtković. Typos (stdandard). Two wishes were fulfilled. Change the definition of wait_for() to a more useful one.\n\n(This is a change in the spec.  But I don't recall we ever seriously\ndiscussed this part of the spec, and the new behavior is more useful\nand more intuitive.  See discussion started by Gustavo Carneiro in\nhttp://code.google.com/p/tulip/issues/detail?id=107 .) Fill in the *correct* PEP number (461). Fill in PEP number (461). Typo fix, patch by Brett Slatkin. Add instructions for HTM generation. Add brief explanation and web pointers to README.txt. Fixes issue 19822. Remove question to myself about set_child_watcher() now the issue is fixed. Get rid of final TO DO items.  Remove now-redundant section on coroutines and protocols. Document open_connection(), start_server(), and related Stream* classes. Took care of a few TODOs in Tulip PEP. Add Resolution header to PEP 428 (pathlib). Accept PEP 428 (pathlib). Add Gustavo Carneiro (Gambit Research) to the acknowledgments. Replace connection_refused() with error_received(). Complete subprocess and flow control docs.  Misc other additions. Resolve a few TBD/TODOs. Huge update to various parts of the spec. Still not done. Clarify that SSL could mean TLS. Allow duck typing SSLContext. Allow missing run/stop/close functionality. Update a lot of the intro text in PEP 3156. Various Tulip updates. Clarify motivation for serializing callbacks. Remove pause/resume_writing() and discard_output(). Mention asyncio name. Clarify callback serialization. Add Discussions-To header to Tulip PEP. Add (past) discussion points to PEP 450. Merge PEP 450 acceptance. Accept PEP 450 (statistics module). Make start_serving() a coroutine. PEP 450 update from Steven D'Aprano. Remove @task; add gather(); remote run_until_complete() timeout; some wording cleanup. Accept PEP 446. Small benign edits to PEP 446. Add tulip.wait_for(). Somewhat rambling changes to event loop policy. Get rid of Future.running(); see bug 18699. Merge Reduce desirability of using 100 chars per line. Correctly spell hierarchy. Fix minor grammatical/typographical issues. Remove spurious backticks. Accept PEP 443, making a few minor edits to improve text flow. Minor clarifications. Add pause/resume_writing, discard_output. Add async().  See https://codereview.appspot.com/9245047/ Move wrap_future() out of EventLoop.  Document local_addr. Small corrections. Add time(), call_at(). Remove call_repeatedly(). Get rid of add_*_handler() return value. Clarify weasel-words for getaddrinfo(). Some more clarifications and edits. Describe datagram protocol. Retract most of public Handle API. Fix server-side ssl. Clean up open issues. Update docs for Handle, add Timer. Major update of the event loop spec. Rename run() -> run_forever(), and explain why. Fix typo (an mix -> a mix). Clarify exactly how vague the spec for stop() really is. Refactor run*() family, rename Handler->Handle, updated intros. Fix to schedule() pseudo-code by Yuval Greenfield. Add high-level explanation of transports and protocols early on. Link to Tulip repo. Get rid of add_connector(). The code will follow suit soon. Tweak TODOs. One more TODO: pass socket to start_serving(). Add two new TODOs (socket address and fork()). Suggest that some APIs be marked as \"transports-only\". Rename create_transport() to create_connection(). Remove type argument. Updates for cancelling handlers and remove_reader/writer/connector. Specify wait() and as_completed() with less reliance on PEP 3148. Spec out Future better. Allow Handlers as callbacks. Add EventLoop.close(). Instead of init_event_loop(), define new_event_loop(). Specify signal handling API. Version 14 from Greg. Update to PEP 3148 by Jeffrey Yasskin. Fix bad quote. Brian Quinlan's Futures PEP. Accept the moratorium.  Also add Nov 3 to the post history. Clarify the time covered by the moratorium.  Also explicitly say an\nextension would require another PEP. Clarify that new __future__ imports are not allowed. Explicitly allow PEP 382. Clarify what happens on g.throw(StopIteration). Updates and figures for PEP 458 and PEP 480 by Vladimir Diaz. Clarify that after raising RuntimeError a generator will raise StopIteration. Added myself as PEP 479 co-author. PEP 479: Fix formatting of examples. New examples, explanations and a few edits, all by Chris. PEP 479: switch to \"from __future__ import generator_stop\". PEP 479: Add link to issue 22906. Remove \"implicitly-raised\" from abstract, it is just confusing. PEP 479: Use a shorter __future__ name (generator_return). Add a clarifying paragraph to PEP 0479, and another post-history date. Add link to survey by Steven D, and summarize the two responses so far. Add more words to GeneratorReturn alternative. Make PEP 479 (Change StopIteration) be more specific, improve some wording, etc. Do not recommend a blank line before any docstrings. Patch by Akira Kidata. Fix literal block. Clarify space around colon in slice (severa cases). Add PEP 473 \"Adding structured data to built-in exceptions\" by Sebastian Kreft. Add PEP 472: \"Support for indexing with keyword arguments\" by Stefano Borini, Joseph Martinot-Lagarde. Extend Python 2.7 life till 2020. Accept PEP 465. Update to PEP 465 -- propose to keep @ at the same level as *. Truncate an interminable sentence (sorry Nick :-). Mark PEP 3145 as withdrawn. New version of pep 465 (matrix multiply @ operator). Added scan-ops.py. PEP 465: Updated section \"Choice of operator\". Fix mark-up errors I introduced by copy/pasting. Assign PEP #465 to \"Dedicated infix operators for matrix multiplication and matrix power\" by Nathaniel J. Smith. Attempt to clean up PEP 257 footnotes. Make PEP 8 follow PEP 257 on docstring endings. PEP 257: Drop recommendation of extra blank line at end of docstring. More typos found by Tim Tvrtković. Typos (stdandard). Two wishes were fulfilled. Change the definition of wait_for() to a more useful one.\n\n(This is a change in the spec.  But I don't recall we ever seriously\ndiscussed this part of the spec, and the new behavior is more useful\nand more intuitive.  See discussion started by Gustavo Carneiro in\nhttp://code.google.com/p/tulip/issues/detail?id=107 .) Fill in the *correct* PEP number (461). Fill in PEP number (461). Typo fix, patch by Brett Slatkin. Add instructions for HTM generation. Add brief explanation and web pointers to README.txt. Fixes issue 19822. Remove question to myself about set_child_watcher() now the issue is fixed. Get rid of final TO DO items.  Remove now-redundant section on coroutines and protocols. Document open_connection(), start_server(), and related Stream* classes. Took care of a few TODOs in Tulip PEP. Add Resolution header to PEP 428 (pathlib). Accept PEP 428 (pathlib). Add Gustavo Carneiro (Gambit Research) to the acknowledgments. Replace connection_refused() with error_received(). Complete subprocess and flow control docs.  Misc other additions. Resolve a few TBD/TODOs. Huge update to various parts of the spec. Still not done. Clarify that SSL could mean TLS. Allow duck typing SSLContext. Allow missing run/stop/close functionality. Update a lot of the intro text in PEP 3156. Various Tulip updates. Clarify motivation for serializing callbacks. Remove pause/resume_writing() and discard_output(). Mention asyncio name. Clarify callback serialization. Add Discussions-To header to Tulip PEP. Add (past) discussion points to PEP 450. Merge PEP 450 acceptance. Accept PEP 450 (statistics module). Make start_serving() a coroutine. PEP 450 update from Steven D'Aprano. Remove @task; add gather(); remote run_until_complete() timeout; some wording cleanup. Accept PEP 446. Small benign edits to PEP 446. Add tulip.wait_for(). Somewhat rambling changes to event loop policy. Get rid of Future.running(); see bug 18699. Merge Reduce desirability of using 100 chars per line. Correctly spell hierarchy. Fix minor grammatical/typographical issues. Remove spurious backticks. Accept PEP 443, making a few minor edits to improve text flow. Minor clarifications. Add pause/resume_writing, discard_output. Add async().  See https://codereview.appspot.com/9245047/ Move wrap_future() out of EventLoop.  Document local_addr. Small corrections. Add time(), call_at(). Remove call_repeatedly(). Get rid of add_*_handler() return value. Clarify weasel-words for getaddrinfo(). Some more clarifications and edits. Describe datagram protocol. Retract most of public Handle API. Fix server-side ssl. Clean up open issues. Update docs for Handle, add Timer. Major update of the event loop spec. Rename run() -> run_forever(), and explain why. Fix typo (an mix -> a mix). Clarify exactly how vague the spec for stop() really is. Refactor run*() family, rename Handler->Handle, updated intros. Fix to schedule() pseudo-code by Yuval Greenfield. Add high-level explanation of transports and protocols early on. Link to Tulip repo. Get rid of add_connector(). The code will follow suit soon. Tweak TODOs. One more TODO: pass socket to start_serving(). Add two new TODOs (socket address and fork()). Suggest that some APIs be marked as \"transports-only\". Rename create_transport() to create_connection(). Remove type argument. Updates for cancelling handlers and remove_reader/writer/connector. Specify wait() and as_completed() with less reliance on PEP 3148. Merge 3.4 asyncio: Add gi_{frame,running,code} properties to CoroWrapper (upstream #163). asyncio: Add gi_{frame,running,code} properties to CoroWrapper (upstream #163). Fix doc typo. Fix doc typo. Clarify that flow control works for datagrams, except on BSD. asyncio: Make tests pass on Windows. asyncio: Change as_completed() to use a Queue, to avoid O(N**2) behavior. Fixes issue #20566. asyncio: Make tests pass on Windows. asyncio: Change as_completed() to use a Queue, to avoid O(N**2) behavior. Fixes issue #20566. asyncio: Remove more relics of resolution/granularity. asyncio: Test fix. More asyncio news. asyncio: Cosmetic improvement to test__run_once_logging() mock argument. Add missing word (\"thread\") to sentence about call_soon_threadsafe. asyncio: Fix misc whitespace issues. More asyncio news. asyncio: wait_for() now accepts None as timeout (Victor Stinner). asyncio: Pass through pause/resume from subprocess pipe proto to subprocess proto. Also kill dummy eof_received(). asyncio: Refactor drain logic in streams.py to be reusable. asyncio: Add write flow control to unix pipes. asyncio: Refactoring: move write flow control to a subclass/mixin. Fix issue #20367: concurrent.futures.as_completed() for duplicate arguments.\nPatch by Glenn Langford. Document asyncio.QueueFull/Empty. NEWS update for asyncio. asyncio: Rename {Empty,Full} to {QueueEmpty,QueueFull} and no longer get them from queue.py. asyncio: Locks refactor: use a separate context manager; remove Semaphore._locked. asyncio: Fix race in FastChildWatcher (by its original author, Anthony Baire). asyncio: Reincarnate CoroWrapper's docstring as a comment. asyncio: Minimal pty support in UNIX read pipe, by Jonathan Slenders. asyncio: Fix race in subprocess transport, by Victor Stinner. asyncio: Tiny cleanup in streams.py. asyncio: Don't special-case GeneratorExit in Condition.wait(). Fix typo in asyncio/streams.py. asyncio: Fix deadlock in readexactly(). Fixes issue #20154. Export asyncio.iscoroutine[function]. Add some asyncio news for beta 2. asyncio: Fix space in log message about poll time. asyncio: Export all abstract protocol and transport classes. Fixes issue #20029. asyncio: Clean up formatting. Shorten lines. News item for issue 19876. Silently ignore unregistering closed files. Fixes issue 19876. With docs and slight test refactor. Fix indentation of switch cases. asyncio: Add Task.current_task() class method. asyncio: Write flow control for proactor event loop. Fix broken docstring continuation line for detach(). asyncio: Improve default writelines(). asyncio: Use Interface instead of ABC.  Fixes issue 19726. More realistic example for selectors.py. asyncio: Add 'shield' to __all__. asyncio: Change write buffer use to avoid O(N**2). Make write()/sendto() accept bytearray/memoryview too. Change some asserts with proper exceptions. asyncio: Fix get_event_loop() to call set_event_loop() when setting the loop. By Anthony Baire. asyncio: Add StreamReaderProtocol to __all__. asyncio: Hopeful fix for issue 19765. asyncio: Change mock pipe to mock socket. Hope to fix issue 19750. asyncio: Fix docstring of get_nowait(). asyncio: Add BoundedSemaphore to export list in locks.__all__. Keep asyncio working with Python 3.3 too. asyncio: Change bounded semaphore into a subclass, like threading.[Bounded]Semaphore. asyncio: Use socketpair() from test_utils in tests (Saúl Ibarra Corretgé). Fix typo. Relax timing even more, hopefully again fixes issue 19579. Add news about pdb fix for yield[from]. Add source link for asyncio. Mention threadpool interface in asyncio overview. Fix markup of notes recommending asyncio. Add note to asyncore/asynchat recommending asyncio for new code. Move select, selectors, asyncio to section 18 (IPC). asyncio: Pass cancellation from wrapping Future to wrapped Future. By Saúl Ibarra Corretgé (mostly). Better behavior when stepping over yield[from]. Fixes issue 16596. By Xavier de Gaye. asyncio: Make Semaphore(0) work properly. Clarify where \"Documenting Python\" can be found. asyncio: Add streams.start_server(), by Gustavo Carneiro. Skip test_asyncio if concurrent.futures can't be imported. Hopeful fix for issue 19645. asyncio: Replace connection_refused() with error_received(). asyncio: Longer timeout in Windows test_popen. Fixes issue 19598. asyncio: Refactor waitpid mocks. Patch by Anthony Baire. asyncio: Avoid ResourceWarning. Fix issue 19580 by Vajrasky Kok. asyncio: Relax timing requirement. Fixes issue 19579. asyncio: Fix from Anthony Baire for CPython issue 19566 (replaces earlier fix). asyncio: Temporary fix by Victor Stinner for issue 19566. Remove redundant test_selectors.py from test_asyncio. Optimize BaseSelector.modify(). Patch by Arnaud Faure. asyncio: Add close() back to Unix selector event loop, to remove all signal handlers. Should fix buildbot issues. asyncio: Refactor SIGCHLD handling. By Anthony Baire. asyncio: Locks improvements by Arnaud Faure: better repr(), change Conditio\\\nn structure. asyncio: Slight rearrangement of tests for server_hostname=... asyncio: Better-looking errors when ssl module cannot be imported. In part by Arnaud Faure. asyncio: Various style nits. asyncio: Log a warning when eof_received() returns true and using ssl. asyncio: Document EventLoop.close(). asyncio: Refactor ssl transport ready loop (Nikolay Kim). asyncio: Add server_hostname as create_connection() argument, with secure default. asyncio: Fold some long lines. asyncio: Pause accepting whenever accept() returns certain errors. Fixes asyncio issue #78. Close resources owned by subclass before calling super().close(). asyncio: Add new file (forgotten). asyncio: Add support for running subprocesses on Windows with the IOCP event loop (Richard Oudkerk). asyncio: Make the IOCP proactor support \"waitable\" handles (Richard Oudkerk). Temporarily skip some subprocess tests that fail on AIX. Merge asyncio branch into default. Offer to copy selectors.py too. Bulk merge Relax some test timeouts (http://bugs.python.org/issue19285). Tentative fix for Windows ssl breakage on hostname mismatch. Write flow control. Also a somewhat major streams overhaul. Fix example to use create_server() instead of start_serving(). Improved argument handling. Merge Rationalize error handling, fixing a race condition. Report total bytes written. Merge More lenient delay expectancy in test_call_later(). Merge Rename Transport.pause/resume to pause_reading/resume_reading. Merge Rename tulip_log to logger. Add size argument to source example. Add proper argument parsing to source/sink examples. Merge Make CPython tests run on Windows. Merge Fix indent. Merge Merge Add a _DEBUG feature to @coroutine to catch un-waited-for coroutine calls. Various test tweaks to be more precise about coroutines. Add script to quickly sync files to cpython tree. Skip windows tests using unittest.SkipTest(). Update examples to use asyncio, not tulip. Merge Verify hostname if requested. Make tests that connect to a dummy SSL server use a dumy certificate. Kill accidental debug code. Fix misspelled peername in examples. Also comment out drain() call. Merge Fix expected error message in test. Make write_eof() idempotent. Add OP_NO_SSLv2 to default SSLContext options. Remove comment about \"Beyond the PEP\". Look for _overlapped module in two places. Merge eof_received() change. Change eof_ready() to return True to keep transport open. Port asyncio rename and new extra info to Windows. Merge SSL extra info. Extra info for SSL connections: context, peercert, cipher, compression. Merge _sig_chld() fix into asyncio branch. In test_utils.py, try two locations for test key/cert files. Rename tests from foo_test.py to test_foo.py, to match stdlib preference. Add fakery so \"from asyncio import selectors\" always works. Rename tulip package to asyncio. Make test_create_datagram_endpoint() less flaky. Add SNI support to SSL.\n\nPatch from Issue 74 by Aymeric Augustin. Fix sock/peer name request Make a start with standardized extra info. Make source and sink more alike. Change Server.wait_closed() to wait for all connections to close. Subtle fix to write error handling; clarify logic. Small example tweaks. Add Server.wait_close() to wait until it is closed. First crack at create_server(). Fix logic around lost connection. Treat ConnectionResetError the same as BrokenPipeError. Handle BrokenPipeError. Share max_size. Add source/sink examples. Keep only all_tasks() and make it specific to an event loop. Fold long lines. Remove experimental code that was accidentally committed. Fix connection pool. Fix a few bugs. Add chunked support. Refactor verbose printing. There is no URI header. Another fetch example, using a rudimentary connection pool. Use HTTP/1.1; couple of fixes/refinements. A succession of ever more sophisticated HTTP clients. (More to come.) Move stack example. Fold some long lines that crept in. Add all_tasks() and variants, get_stack(), and print_stack(). Change buffers to queues. Unimplemented write_eof() should raise NotImplementedError. Add flow control pushback to StreamReader.feed_data(). Implement ssl socket pause()/resume(). Implement plain socket pause()/resume(). Add [can_]write_eof() for socket and ssl transports. Get rid of pause/resume_writing() and discard_output(). StreamReader feed* and set_exc* should check for waiter.cancelled(), not done. Add shield(). Fix test reported by Sa?l Ibarra Corretg?. Tweak _wait() docsstring. Fix test failures on Windows. Change start_serving() into a coroutine. No tests break. Remove spurious blank line. Three more thorough tests for cancellation (possibly redundant). Formally merge newcancel to default (a no-op for diffs). Add comment about Task invariants. Land new cancel and timeout code in default. @task is gone. Copy selectors changes from default to newcancel branch. Rename EventWaiter -> Event. Merge default into newcancel. At least this is uneventful; only 8e0b46263b35. Import Antoine's gather() into the default branch. Kill fake event loop (copy from newcancel branch). Change error \"Module has no attribute 'x'\" to \"Module 'y' has no attribute 'x'\". Clarify -nauto option with pointer to pytest-xdist Be less aggressive about shortening long error messages (#2132)\n\nThis increases the length limits for Tuple and TypeVar to 400 and 150, respectively (from 40 and 25).\r\n\r\nFixes #287. Allow longer unions in error messages. Sync typeshed again (plistlib portability fix) Sync typeshed again fingers crossed Fix signatures of __exit__ in tempfile.py. Sync typeshed Support for import inside class (#2077)\n\nTentatively fix #1839. Sync typeshed (json update). Attempt to fix find_type.py issues and add Emacs integration example. (#2053)\n\nSee comments in #2043.\r\n- Bump endcol by one\r\n- Use shadow file's stat() for cache computations\r\n- Add example Emacs integration Sync typeshed (past temporary deletion of ctypes stubs). Add links to typeshed and typing trackers. Don't raise in TypeAnalyser.visit_type_var().\n\nThe raise caused two specific errors that are now fixed.  The fix\ncauses no new errors.  I don't understand what's going on, but the\nraise has been there since prehistoric times, and may well have been\nmisguided in the first place.\n\nFixes #1898. Add --tb flag when running tests, so it'll print the traceback again. (#2006) Revamp what happens on internal error.\n\nDon't show the traceback unless --show-traceback (--tb) is given. Don't crash on undefined decorator involved in import cycle.\n\nFixes #1972. Don't crash when looking up a name in class scope after MRO error.\n\nFixes #2001. When reporting a crash, first dump the errors already collected.\n\nThese often form an important clue. Sync typeshed (3/subprocess). Sync typeshed (distutils.version). Sync typeshed (#1991) Sync typeshed Phase 2 of async/await (#1946)\n\nThis PR adds support for decorating either generators or `async def` functions with `@types.coroutine` or `@asyncio.coroutine`. This will fix #1453. Sync typeshed (more contextlib fixes). (#1978) Revert \"Set type of keyword arguments to `Dict[unicode, Any]` in Python 2. (#1971)\"\n\nThis reverts commit 51fa5695517423bfb17826c2291647c20c35805a.\n\nSadly this breaks some of our code. :-( A little demo for typing issue #193.\n\nSee https://github.com/python/typing/issues/193#issuecomment-236383893 Sync typeshed (#1976)\n\n* Sync typeshed (decimal.pyi!).\r\n\r\n* Sync typeshed (Decimal inherits from SupportsAbs etc.).\r\n\r\n* Sync typeshed (2.7 Decimal does not inherit SupportsRound).\r\n\r\n* Resync typeshed to also fix contextlib.\r\n\r\n* Sync again, decimal+contextlib is in typeshed/master.\r\n\r\n* Sync typeshed (threading.local fix). Support **expr in dict expressions. (#1960)\n\nTogether with PR #1953 (incorporated herein) this fixes #704. Support star expressions in lists, tuples, sets (#1953)\n\nThis fixes #1722 and addresses most of #704 (but doesn't close it, because of {**x}). Fix \"Too many arguments\" error for f(*a, b) where f is varargs. (#1964)\n\nFixes #1892 (all cases). Also fixes #1800. Add an extra colon to the \"data: <file>:<line>\" output from failing tests. (#1962)\n\n@gnprice: With this small change my Emacs \"compile\" mode lets me jump\r\nto that line directly. Ignore .cache, which is a by-product of certain py.test runs. Quick fix for --linecount-report if a file contains non-ASCII text. (#1949) Implement most common sys.version_info and sys.platform checks (#1942)\n\nAddresses most but not all of #698. (The first two bullets of my plan.) Implement 'async def' and friends ('await', 'async for', 'async with') (#1808)\n\n* PEP 492 syntax: `async def` and `await`.\r\n\r\n* Fix type errors; add async for and async with (not fully fledged).\r\n\r\n* Dispose of Async{For,With}Stmt -- use is_async flag instead.\r\n\r\n* Basic `async for` is working.\r\n\r\n* Clear unneeded TODOs.\r\n\r\n* Fledgeling `async with` support.\r\n\r\n* Disallow `yield [from]` in `async def`.\r\n\r\n* Check Python version before looking up typing.Awaitable.\r\n\r\nEnsure 'async def' is a syntax error in Python 2 (at least with the fast parser).\r\n\r\n* Vast strides in accuracy for visit_await_expr().\r\n\r\n* Add `@with_line` to PEP 492 visit function definitions.\r\n\r\n* Fix tests now that errors have line numbers.\r\n\r\n* Tweak tests for async/await a bit.\r\n\r\n* Get rid of remaining XXX issues.\r\n\r\nis_generator_return_type() now takes an extra is_coroutine flag.\r\n\r\n* Move PEP 492 nodes back where they belong.\r\n\r\n* Respond to code review.\r\n\r\n* Add tests expecting errors from async for/with.\r\n\r\n* Test that await <generator> is an error.\r\n\r\n* Verify that `yield from` does not accept coroutines.\r\n\r\nThis revealed a spurious error \"Function does not return a value\", fixed that.\r\n\r\n* Disallow return value in generator declared as -> Iterator.\r\n\r\n* Fix typo in comment.\r\n\r\n* Refactor visit_with_stmt() into separate helper methods for async and regular.\r\n\r\nAlso Use get_generator_return_type() instead of manually unpacking the value.\r\n\r\n* Fix lint error. Correct comment about default ts/tr.\r\n\r\n* Improve errors when __aenter__/__aexit__ are not async. With tests.\r\n\r\n* Refactor: move all extraction of T from Awaitable[T] to a single helper.\r\n\r\n* Follow __await__ to extract t from subclass of Awaitable[t].\r\n\r\n* Make get_generator_return_type() default to AnyType() (i.e. as it was).\r\n\r\n* Fix test to match reverting get_generator_return_type() to default to Any.\r\n\r\n* Rename get_awaitable_return_type() to check_awaitable_expr(), update docstring. Fix #1925 -- shorter sleep in _poll_current(). Remove unused `# type: ignore` on `import pdb`. Add --suppress-error-context flag to suppress notes about class/function (#1922)\n\nFixes #1821. (well enough for now)  Accept unicode literals to TypeVar and NamedTuple/namedtuple (#1928)\n\nFixes #1926. Fix trailing whitespace in crawl.py. Sync typeshed (#1894) Add crawl.py example (#1878)\n\n* Add crawl.py example, working and fully annotated.\r\n\r\n* Sync typeshed (to new and improved asyncio stubs). Fix crash on [1, *[2]]. (#1893)\n\nFixes #1890. Minimal fix for crash in map_actuals_to_formals(). (#1891)\n\nFixes #1553. Log mypy version instead of fixed string \"Using new dependency manager\". (#1880) Supply a minimal MRO when there's an issue with the bases. (#1834)\n\nFixes #1832. Sync to even newer typeshed (#1856)\n\n* Sync to even newer typeshed\r\n\r\n* And even newer Sync typeshed (#1849)\n\n* SplitNamespace should derive from Namespace.\r\n\r\n* Add band-aid type-ignore to make tests pass. See #1846.\r\n\r\n* Sync typeshed. Copy line number to func_type. (#1845)\n\nWith `--fast-parser` I got a bunch of errors without line numbers (in particular `The return type of a generator function should be \"Generator\" or one of its supertypes`). I tracked it down to this place. Kill the remaining redundant casts. (#1827)\n\nRan `mypy --warn-redundant-casts mypy`. Fix most errors reported by --disallow-untyped-defs/calls. (#1814)\n\nI didn't get to everything:\r\n\r\n- A whole bunch of untyped calls are left in strconv.py; this code\r\nuses a few nasty data types (a list of strings and variously-sized\r\ntuples) and a ton of node types from nodes, and I got tired of\r\ntyping.\r\n\r\n- A few untyped stdlib calls are left because the stubs for traceback\r\nand argparse are basically untyped.\r\n\r\n- A few nested functions where I couldn't figure out the argument\r\ntypes; here I used some Any types so no errors are reported. Remove spurious compileall.pyi from mypy project. Sync typeshed Move [de]serialize() methods to SymbolNode. (#1798) Obviously the callee arg to infer_arg_types_in_context() is Optional. Sync typeshed Clarify search path algorithm\n\nRequested in #1769. Got a question? File an issue!\n\nAdd a note to the top of README.ml clarifying there's no mailing list, encouraging questions in the tracker. Fix crash when constructor annotation is too short.\n\nThis was reported internally and I have not been able to find a short\nrepro.  The pattern was something like this:\n```\nclass C:\n  def __init__(self, a=None, b=None):\n    # type: (int) -> None\n    print(a, b)\n\ndef f():\n  # type: () -> C\n  return C(a=1)\n```\nHowever, that doesn't crash, so there's more to it (possibly an import\ncycle), and I'm out of time researching this.\n\nI've verified that this fix avoids the crash, and it feels pretty\nreasonable to me. Unless it breaks some test I intend to merge it\nright away. Infer variable types from simple literals in semanal.py (#1756)\n\nSet the type of `x = 0` and similar in the semantic analyzer. This thwarts certain kinds of errors due to circular dependencies (see #1530). Skip this business if weak_opts is non-empty.\r\n\r\nDisable lightweight type check if build target < TYPE_CHECK.\r\n\r\nOnly do the lightweight type inferencing thing outside functions. Make import cycles more predictable by prioritizing different import forms (#1736)\n\nThis partially addresses #1530 (but does not fully fix it).\r\n\r\nThe new algorithm always processes x before y, while the old one gives\r\nan error when y is processed before x:\r\n```\r\nx.py:4: note: In module imported here:\r\ny.py: note: In class \"Sub\":\r\ny.py:3: error: Cannot determine type of 'attr'\r\n```\r\n\r\nI am working on additional heuristics in https://github.com/python/mypy/tree/class_attrs. Don't crash in try_infer_partial_type() if var.type is None. (#1752)\n\nFixes #1747. Unconditionally use os.replace() instead of os.rename().\n\nDon't merge until we've officially dropped Python 3.2 support. Sync typing.py to latest (NewType(), TYPE_CHECKING, repr(Tuple[()]), Union[xml...Element, ...]). Correct claim about type var upper bound. Update docs revision history. Add docs for Type[], simplified from PEP 484. (#1679)\n\nFixes #1677. Type[C] (#1569)\n\nPreserved original commit log (only slightly cleaned up):\r\n\r\n* Tentative tests for Type[C].\r\n\r\n* Pave the way for implementing Type[C].\r\n\r\n* Introducing TypeType: Type[x] becomes TypeType(x).\r\n\r\n* Fix/new tests; implement more subtype checks.\r\n\r\n* Towards supporting Type[T].\r\n\r\n* Fix things so all tests pass!\r\n\r\n* Some cleanup and fixup (not done).\r\n\r\n- Add tests for Type[Any] and plain Type, and fix a bug that found.\r\n- Respond to easy review feedback (adding comments/docstrings mostly).\r\n\r\n* Improve equivalence between type and Type.\r\n\r\n* Add support for method lookup from Type[].\r\n\r\nWe only support two special cases (hopefully the most common ones):\r\n\r\n- Type[<concrete_class>]\r\n- Type[<type_variable_with_concrete_class_upper_bound>]\r\n\r\n* Print a proper error for unsupported Type[] args.\r\n\r\n(This happens when type checking a call, not during semantic analysis.)\r\n\r\n* Reject Type[U] where U's bound is a generic class.\r\n\r\n* Support classes with @overload-ed __init__.\r\n\r\n* Update our copies of typing.py to the latest from the python/typing repo.\r\n\r\n* Make Type[A] erase to Type[A], but Type[T] erases to Type[Any].\r\n\r\n* Special-case joining Type[] with builtins.type.\r\n\r\nAlso add tests.\r\n\r\n* Special-case joining Type[] with builtins.type.\r\n\r\nAlso add tests.\r\n\r\n* Delete outdated XXX comment.\r\n\r\n* Finishing touch -- fix and test TypeAnalyser.visit_type_type().\r\n\r\n* Added tests as requested.\r\n\r\n* Remove comment asking for name for analyze_type_type_callee().\r\n\r\n* Use self.default(self.s) instead of AnyType()/NonType() in join/meet.\r\n\r\n* Add tests for overloaded __init__.\r\n\r\n* Add more tests. Fixed a bug in join() this found. Get rid of appveyor config. We will try again later. Move appveyor.yml out of the way -- we're not ready for it yet. Make tests runnable on Windows and add appveyor.yaml (#1593)\n\n* Make waiter cross-platform\r\n\r\nWaiter depended on a couple of posix tricks. The first was a clever\r\nuse of os.waitpid(-1, 0) to wait for any spawned processes to return.\r\nOn Windows, this raises an exception - Windows has no concept of a\r\nprocess group.\r\n\r\nThe second was the use of NamedTempFile(). On anything but Windows,\r\na file can be open for writing and for reading at the same time.\r\nThis trick actually isn't necessary the way NamedTempFile is used\r\nhere. It exposes a file-like object pointing to a file already opened\r\nin binary mode. All we have to do is seek and read from it.\r\n\r\n* Add appveyor config for Windows CI\r\n\r\nThe only tricky bit of this is renaming python.exe to python2.exe.\r\nThis is due to util.try_find_python2_interpreter(), which may well\r\nneed work for Windows since the version symlinks don't exist on Windows.\r\n\r\n* Fixing Windows tests\r\n\r\nMost of these fixes revolve around the path separator and the way\r\nWindows handles files and locking. There is one bug fix in here -\r\nbuild.write_cache() was using os.rename to replace a file, which\r\nfails on Windows. I was only able to fix that for Python 3.3 and up.\r\n\r\n* More subtle translation of / to \\ in error messages for Windows.\r\n\r\n(The goal is to avoid having to mark up tests just because they need\r\nthis kind of translation.)\r\n\r\nAll but the last bullet were by @jtatum (James Tatum). Add a note about cyclic dependencies (inspired by #1597). (#1646) Fix typo-ed index in OverloadedFuncDef.name(). (From #1638) Improve cheat sheet. Cheat sheet (by Tim Abbott, from PR #1602). Revert \"Implicitly assign class type to the first parameter of its methods (#1514) (#1586)\"\n\nThis broke one of our repos (\"client\").\n\nThis reverts commit e45ac10856c2499271d0db67f6ea54755e666d16. Sync typeshed Prevent a crash in MessageBuilder.report() when context is None. (#1583)\n\nAlso fix the reported source.  Fixes #1564 Sync typeshed When both foo.py* and foo/__init__.py* exist, prefer the latter. Fixes #1513. Sync typeshed (up to socket.getopt fixes). Get latest typing.py from python/typing repo. Sync typeshed (#1538) Tests for some new overloads in the re stubs (#1536)\n\n* Tests for new re module.\r\n\r\n* Sync typeshed Stop testing 3.2. This fixes #1491 (in a crude way). Change how we decide a module exists to be correct on case-insensitive platforms. Fix #1531. (#1532) Sync typeshed Bump version to 0.4.2-dev Fix crash due to not fixing TypeVarExpr.upper_bound. Fixes #1482. Bump version to 0.4.1 Exclude myunit from distribution. Add a minimal MANIFEST.in. Fixes #1489.\n\nThis does not specify all files; the remaining files are derived from\nthe spec in setup.py when you run `setup.py sdist`. Bump version to 0.4.1-dev Rename lib-python to stdlib-samples, clarifying its role. (#1480)\n\n* Move lib-python to stdlib-samples, to clarify its role.\r\n\r\n* Break long line. New typing.py etc. (#1479)\n\n* Copied typing.py from its upstream repo (https://github.com/python/typing/).\r\n\r\n* Fix test output (the typing module uses <> instead of [] now). Sync typeshed (Jukka's misc fixes) Rewrite expand_dir() to return modules in the same order as the old one. (#1478) Sync typeshed (fix 2.7/bisect). Sync typeshed Change error \"Module has no attribute 'x'\" to \"Module 'y' has no attribute 'x'\". Clarify -nauto option with pointer to pytest-xdist Be less aggressive about shortening long error messages (#2132)\n\nThis increases the length limits for Tuple and TypeVar to 400 and 150, respectively (from 40 and 25).\r\n\r\nFixes #287. Allow longer unions in error messages. Sync typeshed again (plistlib portability fix) Sync typeshed again fingers crossed Fix signatures of __exit__ in tempfile.py. Sync typeshed Support for import inside class (#2077)\n\nTentatively fix #1839. Sync typeshed (json update). Attempt to fix find_type.py issues and add Emacs integration example. (#2053)\n\nSee comments in #2043.\r\n- Bump endcol by one\r\n- Use shadow file's stat() for cache computations\r\n- Add example Emacs integration Sync typeshed (past temporary deletion of ctypes stubs). Add links to typeshed and typing trackers. Don't raise in TypeAnalyser.visit_type_var().\n\nThe raise caused two specific errors that are now fixed.  The fix\ncauses no new errors.  I don't understand what's going on, but the\nraise has been there since prehistoric times, and may well have been\nmisguided in the first place.\n\nFixes #1898. Add --tb flag when running tests, so it'll print the traceback again. (#2006) Revamp what happens on internal error.\n\nDon't show the traceback unless --show-traceback (--tb) is given. Don't crash on undefined decorator involved in import cycle.\n\nFixes #1972. Don't crash when looking up a name in class scope after MRO error.\n\nFixes #2001. When reporting a crash, first dump the errors already collected.\n\nThese often form an important clue. Sync typeshed (3/subprocess). Sync typeshed (distutils.version). Sync typeshed (#1991) Sync typeshed Phase 2 of async/await (#1946)\n\nThis PR adds support for decorating either generators or `async def` functions with `@types.coroutine` or `@asyncio.coroutine`. This will fix #1453. Sync typeshed (more contextlib fixes). (#1978) Revert \"Set type of keyword arguments to `Dict[unicode, Any]` in Python 2. (#1971)\"\n\nThis reverts commit 51fa5695517423bfb17826c2291647c20c35805a.\n\nSadly this breaks some of our code. :-( A little demo for typing issue #193.\n\nSee https://github.com/python/typing/issues/193#issuecomment-236383893 Sync typeshed (#1976)\n\n* Sync typeshed (decimal.pyi!).\r\n\r\n* Sync typeshed (Decimal inherits from SupportsAbs etc.).\r\n\r\n* Sync typeshed (2.7 Decimal does not inherit SupportsRound).\r\n\r\n* Resync typeshed to also fix contextlib.\r\n\r\n* Sync again, decimal+contextlib is in typeshed/master.\r\n\r\n* Sync typeshed (threading.local fix). Support **expr in dict expressions. (#1960)\n\nTogether with PR #1953 (incorporated herein) this fixes #704. Support star expressions in lists, tuples, sets (#1953)\n\nThis fixes #1722 and addresses most of #704 (but doesn't close it, because of {**x}). Fix \"Too many arguments\" error for f(*a, b) where f is varargs. (#1964)\n\nFixes #1892 (all cases). Also fixes #1800. Add an extra colon to the \"data: <file>:<line>\" output from failing tests. (#1962)\n\n@gnprice: With this small change my Emacs \"compile\" mode lets me jump\r\nto that line directly. Ignore .cache, which is a by-product of certain py.test runs. Quick fix for --linecount-report if a file contains non-ASCII text. (#1949) Implement most common sys.version_info and sys.platform checks (#1942)\n\nAddresses most but not all of #698. (The first two bullets of my plan.) Implement 'async def' and friends ('await', 'async for', 'async with') (#1808)\n\n* PEP 492 syntax: `async def` and `await`.\r\n\r\n* Fix type errors; add async for and async with (not fully fledged).\r\n\r\n* Dispose of Async{For,With}Stmt -- use is_async flag instead.\r\n\r\n* Basic `async for` is working.\r\n\r\n* Clear unneeded TODOs.\r\n\r\n* Fledgeling `async with` support.\r\n\r\n* Disallow `yield [from]` in `async def`.\r\n\r\n* Check Python version before looking up typing.Awaitable.\r\n\r\nEnsure 'async def' is a syntax error in Python 2 (at least with the fast parser).\r\n\r\n* Vast strides in accuracy for visit_await_expr().\r\n\r\n* Add `@with_line` to PEP 492 visit function definitions.\r\n\r\n* Fix tests now that errors have line numbers.\r\n\r\n* Tweak tests for async/await a bit.\r\n\r\n* Get rid of remaining XXX issues.\r\n\r\nis_generator_return_type() now takes an extra is_coroutine flag.\r\n\r\n* Move PEP 492 nodes back where they belong.\r\n\r\n* Respond to code review.\r\n\r\n* Add tests expecting errors from async for/with.\r\n\r\n* Test that await <generator> is an error.\r\n\r\n* Verify that `yield from` does not accept coroutines.\r\n\r\nThis revealed a spurious error \"Function does not return a value\", fixed that.\r\n\r\n* Disallow return value in generator declared as -> Iterator.\r\n\r\n* Fix typo in comment.\r\n\r\n* Refactor visit_with_stmt() into separate helper methods for async and regular.\r\n\r\nAlso Use get_generator_return_type() instead of manually unpacking the value.\r\n\r\n* Fix lint error. Correct comment about default ts/tr.\r\n\r\n* Improve errors when __aenter__/__aexit__ are not async. With tests.\r\n\r\n* Refactor: move all extraction of T from Awaitable[T] to a single helper.\r\n\r\n* Follow __await__ to extract t from subclass of Awaitable[t].\r\n\r\n* Make get_generator_return_type() default to AnyType() (i.e. as it was).\r\n\r\n* Fix test to match reverting get_generator_return_type() to default to Any.\r\n\r\n* Rename get_awaitable_return_type() to check_awaitable_expr(), update docstring. Fix #1925 -- shorter sleep in _poll_current(). Remove unused `# type: ignore` on `import pdb`. Add --suppress-error-context flag to suppress notes about class/function (#1922)\n\nFixes #1821. (well enough for now)  Accept unicode literals to TypeVar and NamedTuple/namedtuple (#1928)\n\nFixes #1926. Fix trailing whitespace in crawl.py. Sync typeshed (#1894) Add crawl.py example (#1878)\n\n* Add crawl.py example, working and fully annotated.\r\n\r\n* Sync typeshed (to new and improved asyncio stubs). Fix crash on [1, *[2]]. (#1893)\n\nFixes #1890. Minimal fix for crash in map_actuals_to_formals(). (#1891)\n\nFixes #1553. Log mypy version instead of fixed string \"Using new dependency manager\". (#1880) Supply a minimal MRO when there's an issue with the bases. (#1834)\n\nFixes #1832. Sync to even newer typeshed (#1856)\n\n* Sync to even newer typeshed\r\n\r\n* And even newer Sync typeshed (#1849)\n\n* SplitNamespace should derive from Namespace.\r\n\r\n* Add band-aid type-ignore to make tests pass. See #1846.\r\n\r\n* Sync typeshed. Copy line number to func_type. (#1845)\n\nWith `--fast-parser` I got a bunch of errors without line numbers (in particular `The return type of a generator function should be \"Generator\" or one of its supertypes`). I tracked it down to this place. Kill the remaining redundant casts. (#1827)\n\nRan `mypy --warn-redundant-casts mypy`. Fix most errors reported by --disallow-untyped-defs/calls. (#1814)\n\nI didn't get to everything:\r\n\r\n- A whole bunch of untyped calls are left in strconv.py; this code\r\nuses a few nasty data types (a list of strings and variously-sized\r\ntuples) and a ton of node types from nodes, and I got tired of\r\ntyping.\r\n\r\n- A few untyped stdlib calls are left because the stubs for traceback\r\nand argparse are basically untyped.\r\n\r\n- A few nested functions where I couldn't figure out the argument\r\ntypes; here I used some Any types so no errors are reported. Remove spurious compileall.pyi from mypy project. Sync typeshed Move [de]serialize() methods to SymbolNode. (#1798) Obviously the callee arg to infer_arg_types_in_context() is Optional. Sync typeshed Clarify search path algorithm\n\nRequested in #1769. Got a question? File an issue!\n\nAdd a note to the top of README.ml clarifying there's no mailing list, encouraging questions in the tracker. Fix crash when constructor annotation is too short.\n\nThis was reported internally and I have not been able to find a short\nrepro.  The pattern was something like this:\n```\nclass C:\n  def __init__(self, a=None, b=None):\n    # type: (int) -> None\n    print(a, b)\n\ndef f():\n  # type: () -> C\n  return C(a=1)\n```\nHowever, that doesn't crash, so there's more to it (possibly an import\ncycle), and I'm out of time researching this.\n\nI've verified that this fix avoids the crash, and it feels pretty\nreasonable to me. Unless it breaks some test I intend to merge it\nright away. Infer variable types from simple literals in semanal.py (#1756)\n\nSet the type of `x = 0` and similar in the semantic analyzer. This thwarts certain kinds of errors due to circular dependencies (see #1530). Skip this business if weak_opts is non-empty.\r\n\r\nDisable lightweight type check if build target < TYPE_CHECK.\r\n\r\nOnly do the lightweight type inferencing thing outside functions. Make import cycles more predictable by prioritizing different import forms (#1736)\n\nThis partially addresses #1530 (but does not fully fix it).\r\n\r\nThe new algorithm always processes x before y, while the old one gives\r\nan error when y is processed before x:\r\n```\r\nx.py:4: note: In module imported here:\r\ny.py: note: In class \"Sub\":\r\ny.py:3: error: Cannot determine type of 'attr'\r\n```\r\n\r\nI am working on additional heuristics in https://github.com/python/mypy/tree/class_attrs. Don't crash in try_infer_partial_type() if var.type is None. (#1752)\n\nFixes #1747. Unconditionally use os.replace() instead of os.rename().\n\nDon't merge until we've officially dropped Python 3.2 support. Sync typing.py to latest (NewType(), TYPE_CHECKING, repr(Tuple[()]), Union[xml...Element, ...]). Correct claim about type var upper bound. Update docs revision history. Add docs for Type[], simplified from PEP 484. (#1679)\n\nFixes #1677. Type[C] (#1569)\n\nPreserved original commit log (only slightly cleaned up):\r\n\r\n* Tentative tests for Type[C].\r\n\r\n* Pave the way for implementing Type[C].\r\n\r\n* Introducing TypeType: Type[x] becomes TypeType(x).\r\n\r\n* Fix/new tests; implement more subtype checks.\r\n\r\n* Towards supporting Type[T].\r\n\r\n* Fix things so all tests pass!\r\n\r\n* Some cleanup and fixup (not done).\r\n\r\n- Add tests for Type[Any] and plain Type, and fix a bug that found.\r\n- Respond to easy review feedback (adding comments/docstrings mostly).\r\n\r\n* Improve equivalence between type and Type.\r\n\r\n* Add support for method lookup from Type[].\r\n\r\nWe only support two special cases (hopefully the most common ones):\r\n\r\n- Type[<concrete_class>]\r\n- Type[<type_variable_with_concrete_class_upper_bound>]\r\n\r\n* Print a proper error for unsupported Type[] args.\r\n\r\n(This happens when type checking a call, not during semantic analysis.)\r\n\r\n* Reject Type[U] where U's bound is a generic class.\r\n\r\n* Support classes with @overload-ed __init__.\r\n\r\n* Update our copies of typing.py to the latest from the python/typing repo.\r\n\r\n* Make Type[A] erase to Type[A], but Type[T] erases to Type[Any].\r\n\r\n* Special-case joining Type[] with builtins.type.\r\n\r\nAlso add tests.\r\n\r\n* Special-case joining Type[] with builtins.type.\r\n\r\nAlso add tests.\r\n\r\n* Delete outdated XXX comment.\r\n\r\n* Finishing touch -- fix and test TypeAnalyser.visit_type_type().\r\n\r\n* Added tests as requested.\r\n\r\n* Remove comment asking for name for analyze_type_type_callee().\r\n\r\n* Use self.default(self.s) instead of AnyType()/NonType() in join/meet.\r\n\r\n* Add tests for overloaded __init__.\r\n\r\n* Add more tests. Fixed a bug in join() this found. Get rid of appveyor config. We will try again later. Move appveyor.yml out of the way -- we're not ready for it yet. Make tests runnable on Windows and add appveyor.yaml (#1593)\n\n* Make waiter cross-platform\r\n\r\nWaiter depended on a couple of posix tricks. The first was a clever\r\nuse of os.waitpid(-1, 0) to wait for any spawned processes to return.\r\nOn Windows, this raises an exception - Windows has no concept of a\r\nprocess group.\r\n\r\nThe second was the use of NamedTempFile(). On anything but Windows,\r\na file can be open for writing and for reading at the same time.\r\nThis trick actually isn't necessary the way NamedTempFile is used\r\nhere. It exposes a file-like object pointing to a file already opened\r\nin binary mode. All we have to do is seek and read from it.\r\n\r\n* Add appveyor config for Windows CI\r\n\r\nThe only tricky bit of this is renaming python.exe to python2.exe.\r\nThis is due to util.try_find_python2_interpreter(), which may well\r\nneed work for Windows since the version symlinks don't exist on Windows.\r\n\r\n* Fixing Windows tests\r\n\r\nMost of these fixes revolve around the path separator and the way\r\nWindows handles files and locking. There is one bug fix in here -\r\nbuild.write_cache() was using os.rename to replace a file, which\r\nfails on Windows. I was only able to fix that for Python 3.3 and up.\r\n\r\n* More subtle translation of / to \\ in error messages for Windows.\r\n\r\n(The goal is to avoid having to mark up tests just because they need\r\nthis kind of translation.)\r\n\r\nAll but the last bullet were by @jtatum (James Tatum). Add a note about cyclic dependencies (inspired by #1597). (#1646) Fix typo-ed index in OverloadedFuncDef.name(). (From #1638) Improve cheat sheet. Cheat sheet (by Tim Abbott, from PR #1602). Revert \"Implicitly assign class type to the first parameter of its methods (#1514) (#1586)\"\n\nThis broke one of our repos (\"client\").\n\nThis reverts commit e45ac10856c2499271d0db67f6ea54755e666d16. Sync typeshed Prevent a crash in MessageBuilder.report() when context is None. (#1583)\n\nAlso fix the reported source.  Fixes #1564 Sync typeshed When both foo.py* and foo/__init__.py* exist, prefer the latter. Fixes #1513. Sync typeshed (up to socket.getopt fixes). Get latest typing.py from python/typing repo. Sync typeshed (#1538) Tests for some new overloads in the re stubs (#1536)\n\n* Tests for new re module.\r\n\r\n* Sync typeshed Stop testing 3.2. This fixes #1491 (in a crude way). Change how we decide a module exists to be correct on case-insensitive platforms. Fix #1531. (#1532) Sync typeshed Bump version to 0.4.2-dev Fix crash due to not fixing TypeVarExpr.upper_bound. Fixes #1482. Bump version to 0.4.1 Exclude myunit from distribution. Add a minimal MANIFEST.in. Fixes #1489.\n\nThis does not specify all files; the remaining files are derived from\nthe spec in setup.py when you run `setup.py sdist`. Bump version to 0.4.1-dev Rename lib-python to stdlib-samples, clarifying its role. (#1480)\n\n* Move lib-python to stdlib-samples, to clarify its role.\r\n\r\n* Break long line. New typing.py etc. (#1479)\n\n* Copied typing.py from its upstream repo (https://github.com/python/typing/).\r\n\r\n* Fix test output (the typing module uses <> instead of [] now). Sync typeshed (Jukka's misc fixes) Rewrite expand_dir() to return modules in the same order as the old one. (#1478) Sync typeshed (fix 2.7/bisect). Sync typeshed Initial checkin of Moratorium PEP. Minor fixes of typos and grammar in the first third of the file. Fix ReST warnings. Clarify the status of this PEP. New version from Greg. Greg's latest version. Mark as Accepted (with Nick's simpler proposal). Finally update the super() PEP.  Lie Ryan submitted a draft which I updated\na bit more.  I think this is good enough now. It's fractions.py, not fraction.py. Add pointer to PEP 3141. Note that dict comprehensionss were implemented in Py3k! Accept PEP 3134 (exception chaining etc.). Clarify preferred way to break at a binary operator. New cleaned-up version from Atsuo. Accept PEP 371, adding the multiprocessing package. Update from Jesse addressing API renaming to comply with PEP 8. Accepted PEP 3138 (changes to repr() in Py3k). Fix indent on one last set of nested bullets. Add back missing \\\\ in front of xXX. Fix lay-out glitches and remove gmail turd. Correct PY_UNICODE_ISPRINTABLE to Py_UNICODE_ISPRINTABLE. New version from Atsuo. Clarify a sentence by adding a comma, and add back a \\ that was\ndropped in front of an x. Add note about this PEP needing to be rewritten. Accept PEP 370 (Per user site-packages directory). Accept PEP 3108 (library reform). Add PEP 3138 by Atsuo Ishimoto, String representation in Python 3000. Fix a few typos. Reject PEP 365 (pkg_resources). Explicitly acknowledge that Decimal will not become part of the numeric tower. Fix typo in release schedule (early 2007 should be early 2008). Fix typo found by Forest Wilkinson. Quick checkin of an updated version by Neal Norwitz.\nNo guarantees that this is correct, but it's definitely better\nthan what we had before.  At least *some* of the CVS references\nhave been replaced by SVN references. Mark PEP 3141 as accepted. Slip the 2.6 release dates a month and note the 3.0a2 release. Some small updates, with Jeffrey's OK. Add line_buffering to TextIOWrapper(). Mark PEP 3116 as accepted -- I'm unlikely to change it much now.\nAlso update it to include the errors argument, which goes hand in hand with\nthe encoding argument. Update for __builtin__ rename. Mark unbound method removal as done. Dropping unbound methods has become more likely. Update the PEP with the new name for PyByte (bytearray), and some minor edits. Add removal of basestring. Use '' instead of \"\" for repr, as that is the default repr. Missed memoryview in the 3.0a1 column. Don't put N/A in the repr column for PyBuffer or PyBytes. Oops, \"\" should be b\"\" for PyString in last column. Add table of old and new names for affected types. Clarify backwards compatibility. Typos and clarifications detected by Mark Summerfield. Mark PEP 3137 as accepted.\nMark Summerfield sent some comments on PEP 358 (I also referenced PEP 3137). Typo reported by Mark Summerfield. Fix another paragraph that was referring to bytes()==str() raising TypeError. Changed my mind on comparing bytes to str. Decide that bytes/buffer items are ints.\n\nAlso:\n- Add mutable sequence methods.\n- Add fromhex class method.\n- \"Supports\" -> \"implements\" consistently. Fixed encode()/decode() turn-around. Added language about operators and pickling.\nStandardized on \"implementing\" the PEP 3118 buffer API rather than\n\"supporting\" it. Fix date. PEP 3137: immutable bytes and mutable buffer. Accept 3101.  Mark 3118 as accepted in the index. Mark 3115 as final. Change when lines are translated on input (only if newline=None),\nand clarify language around translation.\nAlso remark that SocketIO lives in the socket module, and drop\nreference to MemIO. Accept new buffer protocol (now that it's checked in ;-). New spec for newline= parameter to open() and TextIOBase(). New ersion by Jeffrey, nearing perfection. :-) Mention that type.__prepare__() exists for use via super(). Add @abstractproperty.  PEP 3141 needs it for .real, .imag. New version from Jeffrey.  Cut NaN.  Add __r*__ methods.  Other stuff. Insert some blank lines between methods (and remove a few between chapters). New version by Jeffrey Yasskin. Add support for newline='\\r', for some Mac apps that still write those. Various status updates. Accept 3127.  There's nothing left to do. Accept PEP 3112.  I don't see anything left over. Reject PEP 3136. Defer PEP 3124. Fix my email. Update the schedule.  Give more detail about compatibility and transition.\nAdd a References section. Some updates.\nRemove an item that's covered by acceptance of PEP 3121.\nRemove an item that's covered by rejection of PEP 3122 and PEP 299. Drop a bullet that conflicts with PEP 3131's status. Renumber 344 -> 3134 and 367 -> 3135. Fix bugs in example found by Georg Brandl. None, True, False are keywords now. Fix markup and clarify table entry for ignored whitespace. Accepting PEP 3119, rejecting its competitor PEP 3133. Mark PEP 302 as final (despite the docs being incomplete). Change the status of a whole lotta PEPs.\nSome are marked final years after the work was completed and released;\nothers are rejected after sitting idly for years. Clarify that filter and map stay but will return iterators. Add policy about non-ASCII names to coding standard. Accept PEP 3131. Update post-history. Totally new version of the Numbers ABC PEP, received fresh from Jeffrey. Make append and reverse concrete methods of mutable sequences. strop is gone.  several other modules were already gone (e.g. pcre, xmllib). Streamlined the containers section. Checkpoint.  Rewrote (and swapped) the sections on\nisinstance/issubclass overriding and the support framework.\nNext up: redesign the collection ABCs. Reject PEP 3128 (BList). Accept PEP 3127 (integer literal and support) and reject PEP 3130 (access\nto current module/class/function). Fix some bugs when dealing with non-existent or non-PEP files. Accept PEPs 3120 (UTF-8 default source encoding), 3121 (extension\ninitialization and finalization) and 3123 (PyObject_HEAD vs. stdC). Spec out Future better. Allow Handlers as callbacks. Add EventLoop.close(). Instead of init_event_loop(), define new_event_loop(). Specify signal handling API. Version 14 from Greg. Update to PEP 3148 by Jeffrey Yasskin. Fix bad quote. Brian Quinlan's Futures PEP. Accept the moratorium.  Also add Nov 3 to the post history. Clarify the time covered by the moratorium.  Also explicitly say an\nextension would require another PEP. Clarify that new __future__ imports are not allowed. Explicitly allow PEP 382. Initial checkin of Moratorium PEP. Minor fixes of typos and grammar in the first third of the file. Fix ReST warnings. Clarify the status of this PEP. New version from Greg. Greg's latest version. Mark as Accepted (with Nick's simpler proposal). Finally update the super() PEP.  Lie Ryan submitted a draft which I updated\na bit more.  I think this is good enough now. It's fractions.py, not fraction.py. Add pointer to PEP 3141. Note that dict comprehensionss were implemented in Py3k! Accept PEP 3134 (exception chaining etc.). Clarify preferred way to break at a binary operator. New cleaned-up version from Atsuo. Accept PEP 371, adding the multiprocessing package. Update from Jesse addressing API renaming to comply with PEP 8. Accepted PEP 3138 (changes to repr() in Py3k). Fix indent on one last set of nested bullets. Add back missing \\\\ in front of xXX. Fix lay-out glitches and remove gmail turd. Correct PY_UNICODE_ISPRINTABLE to Py_UNICODE_ISPRINTABLE. New version from Atsuo. Clarify a sentence by adding a comma, and add back a \\ that was\ndropped in front of an x. Add note about this PEP needing to be rewritten. Accept PEP 370 (Per user site-packages directory). Accept PEP 3108 (library reform). Add PEP 3138 by Atsuo Ishimoto, String representation in Python 3000. Fix a few typos. Reject PEP 365 (pkg_resources). Explicitly acknowledge that Decimal will not become part of the numeric tower. Fix typo in release schedule (early 2007 should be early 2008). Fix typo found by Forest Wilkinson. Quick checkin of an updated version by Neal Norwitz.\nNo guarantees that this is correct, but it's definitely better\nthan what we had before.  At least *some* of the CVS references\nhave been replaced by SVN references. Mark PEP 3141 as accepted. Slip the 2.6 release dates a month and note the 3.0a2 release. Some small updates, with Jeffrey's OK. Add line_buffering to TextIOWrapper(). Mark PEP 3116 as accepted -- I'm unlikely to change it much now.\nAlso update it to include the errors argument, which goes hand in hand with\nthe encoding argument. Update for __builtin__ rename. Mark unbound method removal as done. Dropping unbound methods has become more likely. Update the PEP with the new name for PyByte (bytearray), and some minor edits. Add removal of basestring. Use '' instead of \"\" for repr, as that is the default repr. Missed memoryview in the 3.0a1 column. Don't put N/A in the repr column for PyBuffer or PyBytes. Oops, \"\" should be b\"\" for PyString in last column. Add table of old and new names for affected types. Clarify backwards compatibility. Typos and clarifications detected by Mark Summerfield. Mark PEP 3137 as accepted.\nMark Summerfield sent some comments on PEP 358 (I also referenced PEP 3137). Typo reported by Mark Summerfield. Fix another paragraph that was referring to bytes()==str() raising TypeError. Changed my mind on comparing bytes to str. Decide that bytes/buffer items are ints.\n\nAlso:\n- Add mutable sequence methods.\n- Add fromhex class method.\n- \"Supports\" -> \"implements\" consistently. Fixed encode()/decode() turn-around. Added language about operators and pickling.\nStandardized on \"implementing\" the PEP 3118 buffer API rather than\n\"supporting\" it. Fix date. PEP 3137: immutable bytes and mutable buffer. Accept 3101.  Mark 3118 as accepted in the index. Mark 3115 as final. Change when lines are translated on input (only if newline=None),\nand clarify language around translation.\nAlso remark that SocketIO lives in the socket module, and drop\nreference to MemIO. Accept new buffer protocol (now that it's checked in ;-). New spec for newline= parameter to open() and TextIOBase(). New ersion by Jeffrey, nearing perfection. :-) Mention that type.__prepare__() exists for use via super(). Add @abstractproperty.  PEP 3141 needs it for .real, .imag. New version from Jeffrey.  Cut NaN.  Add __r*__ methods.  Other stuff. Insert some blank lines between methods (and remove a few between chapters). New version by Jeffrey Yasskin. Add support for newline='\\r', for some Mac apps that still write those. Various status updates. Accept 3127.  There's nothing left to do. Accept PEP 3112.  I don't see anything left over. Reject PEP 3136. Defer PEP 3124. Fix my email. Update the schedule.  Give more detail about compatibility and transition.\nAdd a References section. Some updates.\nRemove an item that's covered by acceptance of PEP 3121.\nRemove an item that's covered by rejection of PEP 3122 and PEP 299. Drop a bullet that conflicts with PEP 3131's status. Renumber 344 -> 3134 and 367 -> 3135. Fix bugs in example found by Georg Brandl. None, True, False are keywords now. Fix markup and clarify table entry for ignored whitespace. Accepting PEP 3119, rejecting its competitor PEP 3133. Mark PEP 302 as final (despite the docs being incomplete). Change the status of a whole lotta PEPs.\nSome are marked final years after the work was completed and released;\nothers are rejected after sitting idly for years. Clarify that filter and map stay but will return iterators. Import coverage fixes by Andrew Svetlov to default branch. More cancellation tests. And catch more cases. Various test fixes I committed first on the newcancel branch. Test fixes: wrong assertTrue(), top-level \"yield from\", test name typos. Fix one incorrect assertTrue(), and clarify a few things. Replace two incorrect assertTrue(x, y) calls with assertEqual(x, y). Improved handling of various cases in Task.cancel(). Get rid of _FakeEventLoop in favor of run_briefly(). Fold long line. Latest selectors.py straight from CPython tree. Merge newcancel branch into default. (A bit premature, but an accidental commit made this necessary.) Clean up test_cancel_race(). Fix race in Lock.release(). Still need to do other lock classes. Change Task.cancel() behavior according to new spec. Had to disable a few tests. Eradicate timeout args from Future(), Task(), async(). Eradicate timeouts from locks and queues. Remove timeout parameter from run_until_complete(). New version of selectors.py, dropping @_select_interrupt_wrapper. Remove ancient TODO list.  Use the tracker instead. Add C-F Natali's selectors.py from http://bugs.python.org/issue16853. Make script docstrings and doc pointers for coverage consistent. Avoid yield in finally clause of Condition.wait(). Fold long line. Kill unused timeout argument on internal _run_once() method. Kill non-functional timeout=0 arg on result() and exception(). Move set_result() calls from try clause to else clause. Increase sleep times so Windows has a chance. Skip test if no ssl. Fix a bunch of assertTrue calls. Fold long line. Shorten/fold lines to fit 80 chars. Shorten URL to fit in 80 chars. Get rid of Future.running().  It is useless. Stop relying on get_event_loop() where possible. It now raises when there is no loop. Fix for examples/child_process.py by Gustavo Carneiro <gjcarneiro@gmail.com>. Add loop=self.loop to all Future() constructors in tasks_test.py. Make StreamReader.feed_*() robust if reading task is cancelled. Add optional loop parameter to StreamReader. Break long lines. Opportunistically fix some cases where Future() was called without passing a loop. Remove stray space at start of docstring. Add open_connection() and class StreamReaderProtocol to streams.py. Re-export Full and Empty exceptions from tulip.queues instead of requiring import queue. Better way of checking two sets of times. Fix copy/paste error in assertEqual message. Adjust some timing constraints. I see 0.016 in practice. Fix issue #47 in run_until_complete(), adding tests. Rewrite as_completed() to be more right. Make _wait() simpler and stupider, and more correct. Output pause/resume/discard by Jeff Quast (improved by us). Add async() function, by Aaron Griffith. Default \"make test\" to non-verbose. Add vtest to force verbise. Improvement to _TracebackLogger. Bonus: actually break the cycle! Better solution for logging tracebacks from abandoned futures. Fix failing test due to missing default for local_addr. Nasty merge. Remove call_repeatedly(). Add time() and call_at(). add_*_handler() no longer returns Handles, call_soon() no longer accepts them. Add TODO about using getaddrinfo() to _sock_connect(). Rename sleep() argument from when to delay. Disallow ssl=True for servers. Prefer ssl=None over ssl=False. Rename Timer to TimerHandle. I like 79 as the max line length. Add TODO about optimizing modify() if events unchanged. Name abstract classes Abstract*.  Move a few things around. Allow V as alias for VERBOSE, e.g. \"make V=0\". Make time range check more lenient. Get rid of EventLoop.run(). Delete old stuff. Make wsclient work on OSX in an Emacs shell window.\nAlso make it stop when receiving EOF. Move example programs into examples directory. Rename Selector class to DefaultSelector. Merge .hgeol changes. Add note to subprocess module indicating it is a hack. Prevent spurious warning about abandoned Future. Attempt to fix some line ending issue on Windows. Sorry, I do not want non-ASCII characters in source code. Ignore build subdirectory. Improved setup.py from issue 23. Take host:port from command line. Fix -v flag in Makefile. Add TODO to call_repeatedly(). Tiny cleanup. Clarify logic in run_until_complete(). No changes in behavior. Remove .rej files. Tests should not have docstrings, they pollute the output. Merge Update note about scheduling. Fix curl.py for changes in http interface. Suppress tracebacks from test server. It is uTP, not UTP. More notes from the sprint. Merge NOTES. Add notes from PyCon (more to come). Make python.org 302 test more robust. Clean deeper. Fix tests for Windows. runtests improvements. There is nothing in runtests.py that is tulip-specific any more. Fix call to create socket transport. More suppress_log_errors() calls. Suppress error/warning logs in some tests, and other cleanup. Typo fix in docs. Update README. Redo implementation of `mypy package` and `mypy directory` (#1473)\n\nThis fixes the annoying difference between `mypy dir` and `mypy dir/`.\r\n\r\nThere are now also some unit tests and it's easy to add more (though they are slow so put in a separate category for runtests.py, 'cmdline-test').\r\n\r\nCloses #1449. Document many command line flags. Avoid crash on `lamba (a, b): a` with context. Fix #1421 (#1452) Avoid crash in edge case of multiple assignment. Fix #974, # 1420, #1438. (#1451) Update readthedocs link\n\nWe just got an email from readthedocs saying they are switching to readthedocs.io, for security reasons. Avoid crash due to problem with forward reference in union. Fix #1307. Fix crash in check_incompatible_property_override() if e.func.info is None. Fix #1387. Avoid crash in remove_imported_names_from_symtable() if node.node is None. See #1182. Copy line number in treetransform. Fixes #1255. (#1446) Avoid another crash in partial type inference. Fix #1269. (#1445) Sync typeshed Avoid recursion in lex_indent() on long comments. Fix #1280. Sync typeshed (type.__call__) Skip arg count checks for dynamic functions. (#1433) Don't complain about method undefined in superclass if caller is a dynamic function (#1431) Fix unit test. Correctly type check redefinitions in try's else clause. (#1429)\n\n* Correctly type check redefinitions in try's else clause.\r\n\r\nFixes #1289. After a diff in the issue by @brodie.\r\n\r\n* Put a stray `self.breaking_out = False` back in. Check for subtype, not supertype, when redefining a function. Fix #1434. (#1439) Mention PEP 484 syntax for multi-line Python 2 annotations Fix grammar. Suppress errors from semantic analysis in dynamic (unannotated) functions. (#1415)\n\n* Suppress errors from semantic analysis in dynamic (unannotated) functions. Fix #1334.\r\n\r\n* Don't suppress 'continue/break' outside loop.\r\n\r\n* Rough and tumble fix to make tests pass. Not sure all these are right. Please review.\r\n\r\n* Clean up SemanticAnalyzer.__init__(). Sync typeshed Rename Typeshed section to Library stubs and the Typeshed repo. Add upper bound fixup for type variables belonging to class. Avoid crash in is_named_instance(). Make --use-mypy-path always print an error. Fixes #1411. (#1413) Add a note clarifying type comments and mentioning cast(). Update basic mypy docs.\n\n- Remove some phrasings that still sound like mypy is a separate language.\n- Remove mention of `import typing` to trigger type checking.\n- Note spurious messages from semantic analysis.\n- Update instructions for writing stubs.\n- Warn against setting MYPYPATH to sys.path or site-packages. Factor out repetitive code from visit_conditional_expr(). Make tests more specific using the `a()` hack. Use is_valid_inferred_type(), per code review feedback. Improve unification of conditional expressions when the left branch has an empty list/set/dict.\n\nFix #1094. Make ConditionalTypeBinder a context manager.\n\nNow we can use `with binder: X` instead of `binder.push_frame(); X; binder.pop_frame()` Improve unification for redundant unions and multiple inheritance. (#1402) Sync typeshed Sync typeshed (more by Ben Darnell) Sync typeshed Add a type alias for DefaultDict, so we can break the cycle between typing and collections in typeshed. Bump version to 0.4.dev; expect a release around May 5. Fix interaction between --incremental and --silent-imports. (#1383)\n\n(Still needs tests; see #1349.) Parse `lambda (x): x` correctly. Fix #1212. (#1384) (Unrelated) Make `mypy -h` look a little prettier. (#1377) Add --almost-silent, which modifies --silent-imports to warn about silenced imports (#1371)\n\nAlso deprecated --silent (at least in --help output).\r\n\r\nThis suppresses the line number for ancestor messages, which has\r\none downside: in Emacs' grep/compile mode, you can't click on the line\r\nto go to the file. If people really hate that it's easy to change. Allow overloading to succeed if an arg is an instance of a class derived from Any. Fix #1363. (#1365) Don't let -s silence .py imports from stubs. Fix #1364. (#1372)\n\nImplement the idea in the issue by Ben Darnell.  (However, this\r\nimplementation still silences the case where main.py -> stub.pyi ->\r\nx.py -> y.py. Hopefully that doesn't matter.) Add two more known modules: lib2to3 (stdlib) and pylons (an oldie but goodie). Remove complaint about inconsistent dependencies. (#1369)\n\nIt turns out this could complain spuriously when a file has some\r\nof its dependencies pruned due to ModuleNotFound around L1218. Change error messages about incompatible argument types to indicate whether * or ** was involved.\n\nThis fixes the issue reported in https://github.com/python/mypy/issues/1360#issuecomment-208067049 .\n\nSpecifically, suppose you have these three calls (regardless of how f() is defined!)\n```\nf(a)\nf(*a)\nf(**a)\n```\nIf the type checker determines that there's something wrong with the\nargument type it always gives the same error message. That error\nmessage is appropriate for the first example, `f(a)`, but for the\nsecond and third it should at least indicate that the mismatch is due\nto the star(s) in the call site.\n\nI am addressing this by adding one or two stars (as appropriate) in\nfront of the actual type in the error message, so that e.g. instead of\n```\nArgument 1 to \"f\" has incompatible type Dict[str, int]; expected \"str\"\n```\nyou would see\n```\nArgument 1 to \"f\" has incompatible type **Dict[str, int]; expected \"str\"\n```\nHopefully this will inform the user that (1) the type of a in `f(**a)`\nis `Dict[str, int]` and (2) the actual type that doesn't match the\nexpected type \"str\" is the value slot, in this case `int`.\n\nSimilar for `*args`. Add unittest. Don't use an arg type corresponding to ** arg kind as inference context for the argument.\n\nFix #1360. Fix typo in comment. Add a few more tests to show what map_actuals_to_formals() does for **. Fix help message for myunit. When positional args passed to dict(), analyze them. Fix #1357. (#1359) Sync typeshed (Selenium stubs) Call report_internal_error() in wrap_context(), as a catch-all (no line number available).\n\nFixes #1341 good. Add incremental mode (#1292)\n\nKey changes:\r\n\r\n- Total rewrite of the module processing logic in build.py\r\n- Support serialization to and deserialization from JSON for most classes in nodes.py and types.py\r\n- When -i/--incremental command line flag is used, use a JSON cache for symbol tables of error-free modules\r\n\r\nMore discussion in the Comments section of the PR (#1292). Add report_internal_error() processing to ThirdPass. (This does *not* fully address #1341.) Skip unreachable blocks in ThirdPass.  Fixes #1319. Sync typeshed Don't crash in get_method() if self.mro is None -- might be because of a previous error. Fixes #1327.\n\n@JukkaL: This is a band-aid; it's possible that a better solution\nexists, e.g. marking such errors fatal, or constructing a better dummy\nobject.  But this prevents the immediate crash at hand, so we can move\non to more important issues. Don't remove *args when stripping first arg for self. Fixes #1316. Sync typeshed Give classmethod first arg a reasonable type. Fixes #292 Sync typeshed Sync typeshed Merge pull request #1305 from ddfisher/master\n\nAllow semantic analyzer errors to be suppressed with # type: ignore Merge pull request #1302 from gvanrossum/contextlib\n\nA decorator returning Callable[..., T] should work on a method. A decorator returning Callable[..., T] should work on a method. Fixes #1301. Merge pull request #1300 from ddfisher/rename-implicit-any\n\nRename --implicit-any to --check-untyped-defs and do some cleanup Merge pull request #1299 from gnprice/cleanup\n\nCut disused attribute FuncItem.is_implicit Improve coding cookie regex based on Serhiy's advice, with new test. Sync typeshed Merge pull request #1295 from ddfisher/argparse\n\nSwitch parser to argparse When two coding cookies are present, use the first. Fixes #1281. Sync typeshed Merge pull request #1285 from ddfisher/master\n\nAdd `--disallow-untyped-functions` Sync typeshed Fix crash checking lambda with tuple argument. Fixes #1157. Write \"regular\" errors to stdout. Fixes #1051 again. Sync typeshed Add some missing imports from typing. Sync typeshed (for traceback) Sync typeshed (decimal withdrawn). Revert \"Sync typeshed\" -- this broke our build.\n\nThis reverts commit 2cf3dc991cc44533b990881c30f13b9c23d3789c. Sync typeshed Merge pull request #1277 from gvanrossum/master\n\nDistinguish between namedtuple without items and errors. Distinguish between namedtuple without items and errors. Merge pull request #1275 from kmod/ast_non_abc\n\nMake the AST classes not ABCs Merge pull request #1273 from ddfisher/bare-callable\n\nSupport bare `Callable` Merge pull request #1263 from allthedata/master\n\nFix for issue #1225 Merge pull request #1258 from python/brettcannon-patch-1\n\nUpdate README regarding installing for Python 3.5 Merge pull request #1253 from vakaras/master\n\nFix for issue #1252. Merge pull request #1256 from keithasaurus/master\n\nCode Cleanup Merge pull request #1218 from ddfisher/fast_parser\n\nAdd typed_ast fast parser to mypy Merge pull request #1239 from ddfisher/master\n\nUpdate typeshed Merge pull request #1242 from olshevskiy87/fix_typos\n\nfix typos Merge pull request #1238 from ddfisher/true-false-tolerance\n\nMake mypy tolerant of True/False/__debug__ not being defined in typeshed Typo fix in docs. Update README. Redo implementation of `mypy package` and `mypy directory` (#1473)\n\nThis fixes the annoying difference between `mypy dir` and `mypy dir/`.\r\n\r\nThere are now also some unit tests and it's easy to add more (though they are slow so put in a separate category for runtests.py, 'cmdline-test').\r\n\r\nCloses #1449. Document many command line flags. Avoid crash on `lamba (a, b): a` with context. Fix #1421 (#1452) Avoid crash in edge case of multiple assignment. Fix #974, # 1420, #1438. (#1451) Update readthedocs link\n\nWe just got an email from readthedocs saying they are switching to readthedocs.io, for security reasons. Avoid crash due to problem with forward reference in union. Fix #1307. Fix crash in check_incompatible_property_override() if e.func.info is None. Fix #1387. Avoid crash in remove_imported_names_from_symtable() if node.node is None. See #1182. Copy line number in treetransform. Fixes #1255. (#1446) Avoid another crash in partial type inference. Fix #1269. (#1445) Sync typeshed Avoid recursion in lex_indent() on long comments. Fix #1280. Sync typeshed (type.__call__) Skip arg count checks for dynamic functions. (#1433) Don't complain about method undefined in superclass if caller is a dynamic function (#1431) Fix unit test. Correctly type check redefinitions in try's else clause. (#1429)\n\n* Correctly type check redefinitions in try's else clause.\r\n\r\nFixes #1289. After a diff in the issue by @brodie.\r\n\r\n* Put a stray `self.breaking_out = False` back in. Check for subtype, not supertype, when redefining a function. Fix #1434. (#1439) Mention PEP 484 syntax for multi-line Python 2 annotations Fix grammar. Suppress errors from semantic analysis in dynamic (unannotated) functions. (#1415)\n\n* Suppress errors from semantic analysis in dynamic (unannotated) functions. Fix #1334.\r\n\r\n* Don't suppress 'continue/break' outside loop.\r\n\r\n* Rough and tumble fix to make tests pass. Not sure all these are right. Please review.\r\n\r\n* Clean up SemanticAnalyzer.__init__(). Sync typeshed Rename Typeshed section to Library stubs and the Typeshed repo. Add upper bound fixup for type variables belonging to class. Avoid crash in is_named_instance(). Make --use-mypy-path always print an error. Fixes #1411. (#1413) Add a note clarifying type comments and mentioning cast(). Update basic mypy docs.\n\n- Remove some phrasings that still sound like mypy is a separate language.\n- Remove mention of `import typing` to trigger type checking.\n- Note spurious messages from semantic analysis.\n- Update instructions for writing stubs.\n- Warn against setting MYPYPATH to sys.path or site-packages. Factor out repetitive code from visit_conditional_expr(). Make tests more specific using the `a()` hack. Use is_valid_inferred_type(), per code review feedback. Improve unification of conditional expressions when the left branch has an empty list/set/dict.\n\nFix #1094. Make ConditionalTypeBinder a context manager.\n\nNow we can use `with binder: X` instead of `binder.push_frame(); X; binder.pop_frame()` Improve unification for redundant unions and multiple inheritance. (#1402) Sync typeshed Sync typeshed (more by Ben Darnell) Sync typeshed Add a type alias for DefaultDict, so we can break the cycle between typing and collections in typeshed. Bump version to 0.4.dev; expect a release around May 5. Fix interaction between --incremental and --silent-imports. (#1383)\n\n(Still needs tests; see #1349.) Parse `lambda (x): x` correctly. Fix #1212. (#1384) (Unrelated) Make `mypy -h` look a little prettier. (#1377) Add --almost-silent, which modifies --silent-imports to warn about silenced imports (#1371)\n\nAlso deprecated --silent (at least in --help output).\r\n\r\nThis suppresses the line number for ancestor messages, which has\r\none downside: in Emacs' grep/compile mode, you can't click on the line\r\nto go to the file. If people really hate that it's easy to change. Allow overloading to succeed if an arg is an instance of a class derived from Any. Fix #1363. (#1365) Don't let -s silence .py imports from stubs. Fix #1364. (#1372)\n\nImplement the idea in the issue by Ben Darnell.  (However, this\r\nimplementation still silences the case where main.py -> stub.pyi ->\r\nx.py -> y.py. Hopefully that doesn't matter.) Add two more known modules: lib2to3 (stdlib) and pylons (an oldie but goodie). Remove complaint about inconsistent dependencies. (#1369)\n\nIt turns out this could complain spuriously when a file has some\r\nof its dependencies pruned due to ModuleNotFound around L1218. Change error messages about incompatible argument types to indicate whether * or ** was involved.\n\nThis fixes the issue reported in https://github.com/python/mypy/issues/1360#issuecomment-208067049 .\n\nSpecifically, suppose you have these three calls (regardless of how f() is defined!)\n```\nf(a)\nf(*a)\nf(**a)\n```\nIf the type checker determines that there's something wrong with the\nargument type it always gives the same error message. That error\nmessage is appropriate for the first example, `f(a)`, but for the\nsecond and third it should at least indicate that the mismatch is due\nto the star(s) in the call site.\n\nI am addressing this by adding one or two stars (as appropriate) in\nfront of the actual type in the error message, so that e.g. instead of\n```\nArgument 1 to \"f\" has incompatible type Dict[str, int]; expected \"str\"\n```\nyou would see\n```\nArgument 1 to \"f\" has incompatible type **Dict[str, int]; expected \"str\"\n```\nHopefully this will inform the user that (1) the type of a in `f(**a)`\nis `Dict[str, int]` and (2) the actual type that doesn't match the\nexpected type \"str\" is the value slot, in this case `int`.\n\nSimilar for `*args`. Add unittest. Don't use an arg type corresponding to ** arg kind as inference context for the argument.\n\nFix #1360. Fix typo in comment. Add a few more tests to show what map_actuals_to_formals() does for **. Fix help message for myunit. When positional args passed to dict(), analyze them. Fix #1357. (#1359) Sync typeshed (Selenium stubs) Call report_internal_error() in wrap_context(), as a catch-all (no line number available).\n\nFixes #1341 good. Add incremental mode (#1292)\n\nKey changes:\r\n\r\n- Total rewrite of the module processing logic in build.py\r\n- Support serialization to and deserialization from JSON for most classes in nodes.py and types.py\r\n- When -i/--incremental command line flag is used, use a JSON cache for symbol tables of error-free modules\r\n\r\nMore discussion in the Comments section of the PR (#1292). Add report_internal_error() processing to ThirdPass. (This does *not* fully address #1341.) Skip unreachable blocks in ThirdPass.  Fixes #1319. Sync typeshed Don't crash in get_method() if self.mro is None -- might be because of a previous error. Fixes #1327.\n\n@JukkaL: This is a band-aid; it's possible that a better solution\nexists, e.g. marking such errors fatal, or constructing a better dummy\nobject.  But this prevents the immediate crash at hand, so we can move\non to more important issues. Don't remove *args when stripping first arg for self. Fixes #1316. Sync typeshed Give classmethod first arg a reasonable type. Fixes #292 Sync typeshed Sync typeshed Merge pull request #1305 from ddfisher/master\n\nAllow semantic analyzer errors to be suppressed with # type: ignore Merge pull request #1302 from gvanrossum/contextlib\n\nA decorator returning Callable[..., T] should work on a method. A decorator returning Callable[..., T] should work on a method. Fixes #1301. Merge pull request #1300 from ddfisher/rename-implicit-any\n\nRename --implicit-any to --check-untyped-defs and do some cleanup Merge pull request #1299 from gnprice/cleanup\n\nCut disused attribute FuncItem.is_implicit Improve coding cookie regex based on Serhiy's advice, with new test. Sync typeshed Merge pull request #1295 from ddfisher/argparse\n\nSwitch parser to argparse When two coding cookies are present, use the first. Fixes #1281. Sync typeshed Merge pull request #1285 from ddfisher/master\n\nAdd `--disallow-untyped-functions` Sync typeshed Fix crash checking lambda with tuple argument. Fixes #1157. Write \"regular\" errors to stdout. Fixes #1051 again. Sync typeshed Add some missing imports from typing. Sync typeshed (for traceback) Sync typeshed (decimal withdrawn). Revert \"Sync typeshed\" -- this broke our build.\n\nThis reverts commit 2cf3dc991cc44533b990881c30f13b9c23d3789c. Sync typeshed Merge pull request #1277 from gvanrossum/master\n\nDistinguish between namedtuple without items and errors. Distinguish between namedtuple without items and errors. Merge pull request #1275 from kmod/ast_non_abc\n\nMake the AST classes not ABCs Merge pull request #1273 from ddfisher/bare-callable\n\nSupport bare `Callable` Merge pull request #1263 from allthedata/master\n\nFix for issue #1225 Merge pull request #1258 from python/brettcannon-patch-1\n\nUpdate README regarding installing for Python 3.5 Merge pull request #1253 from vakaras/master\n\nFix for issue #1252. Merge pull request #1256 from keithasaurus/master\n\nCode Cleanup Merge pull request #1218 from ddfisher/fast_parser\n\nAdd typed_ast fast parser to mypy Merge pull request #1239 from ddfisher/master\n\nUpdate typeshed Merge pull request #1242 from olshevskiy87/fix_typos\n\nfix typos Merge pull request #1238 from ddfisher/true-false-tolerance\n\nMake mypy tolerant of True/False/__debug__ not being defined in typeshed asyncio: Update some comments. asyncio: When not closing the connection after receiving EOF, still remove the read handler. Fix asyncio issue #19293 (hangs on AIX). Unsilence several asyncio AIX tests that no longer hang, and silence a new hang. Switch subprocess stdin to a socketpair, attempting to fix issue #19293 (AIX hang). Avoid test_asyncio hang on AIX. asyncio: be more lenient if we don't understand status returned by waitpid().\n\nThis should have no effect, it's a \"shouldn't happe\" case.\nAlso tidied up some comments. Update faulthandler docs. Issue 19306: Add extra hints to faulthandler stack dumps that they are upside down. Break out of loop on EOF in asyncio echo test programs. (Hopefully) proper fix for gentoo buildbot failure due to lacking AF_INET6 support.\n\nThis should supersede revision e3ec6b17260c (but please test before removing that). Verify hostname if verify_mode is CERT_OPTIONAL too. Disable some subprocess tests that hang on AIX.\n\nSee http://bugs.python.org/issue19293 Skip the asyncio tests when threads are not available.\n\nSee http://bugs.python.org/issue19295 Write flow control for asyncio (includes asyncio.streams overhaul). Relax some asyncio test timeouts (http://bugs.python.org/issue19285). Important race condition fix for Tulip. Rename Transport.pause/resume to pause_reading/pause_writing. Also relax timeout in test_call_later(). Rename the logger to plain \"logger\". Make asyncio tests run on Windows. Initial checkin of asyncio package (== Tulip, == PEP 3156). Fix typo on MutableSequence docstring. #17927: Keep frame from referencing cell-ified arguments. Merge Speed up base64.urlsafe_{en,de}code(). Minimal changes to make byext.py script work with Python 3 syntax. Merge cleanup. Merge cleanup. Merge issue 11662. Merge issue 11662. Merge issue 11662. Merge issue 11662 from 2.6. Merge issue 11662 from 2.5. Merge from 2.6. Whoops. The copyright should be two lines (merge from 2.5). Whoops. The copyright should be two lines. Test commit. Add 2011 to copyright line (merge from 2.6). Test commit. Add 2011 to copyright line (merge from 2.5). Test commit. Add 2011 to copyright line. Issue #5604: non-ASCII characters in module name passed to\nimp.find_module() were converted to UTF-8 while the path is\nconverted to the default filesystem encoding, causing nonsense.\nThanks to Andrew Svetlov.\n\n(This time to the right branch.  Will block duplicate merge to 3.0.2.) Thorough review of importlib docs.  Reviewed by Brett himself. News for issue 5389 fix. Avoid potential for undefined variable 'startinpos' in PyUnicode_DecodeUTF7().\nSee issue #5389. Tweak verbiage and markup for relative/absolute import.  Backport candidate.\n(I guess *all* changes to this file should be backported to the 3.0 branch.) Remove remark about NaN==NaN, I misunderstood that issue. Some textual tweaks, and fixed a few typos found by a spell checker. Fix bad markup. More cleanup.  Moved all Unicode and str/bytes info to the text/data\nsubsection in common pitfalls, rather than spreading it out.  Made\nthis the last subsection of common pitfalls.  All XXX comments are now\ngone.  I'm sure much is still missing, we'll have to clean that up\npost 3.0.  At least all PEPs and all implemented items in PEP 3100\nhave at least one mention. Another checkpoint.\n(A bit of a mess, a previous submit apparently didn't go through.) Another checkpoint -- some stuff I managed to do on the train. Another checkpoint. Finished what I'm going to write about the standard library. Finished the \"porting to 3.0\" section.  Had to add a label to\nhowto/cporting.rst. Another checkpoint.  More XXXes added...\n\nAlso add some labels to 2.6.rst and howto/unicode.rst so I can refer\nto them.  (Somehow a label named 'module-contextlib' couldn't be\nreferenced -- why???) Another checkpoint to switch machines. Checkpoint.  Added some stuff.  Mostly XXX notes for myself. :-) A few tiny improvements that I had sitting in an edit buffer.  More to come.\nMuch, much more. :-) Change fnmatch.py to use separate caches for str and bytes keys.\nThis is necessary to pass the tests with -bb. Issue #3187: Better support for \"undecodable\" filenames.  Code by Victor\nStinner, with small tweaks by GvR. Fix svn:ignore properties on these two directories. Issue #3756: make re.escape() handle bytes as well as str.\nPatch by Andrew McNamara, reviewed and tweaked by myself. Merged revisions 66364 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r66364 | guido.van.rossum | 2008-09-10 07:27:00 -0700 (Wed, 10 Sep 2008) | 3 lines\n\n  Issue #3629: Fix sre \"bytecode\" validator for an end case.\n  Reviewed by Amaury.\n........ - Issue #3629: Fix sre \"bytecode\" validator for an end case.\n  Reviewed by Amaury. Blocked revisions 65914 via svnmerge\n\n........\n  r65914 | guido.van.rossum | 2008-08-20 08:01:50 -0700 (Wed, 20 Aug 2008) | 2 lines\n\n  News for the tp_flags change.\n........ News for the tp_flags change. Blocked revisions 65912 via svnmerge\n\n........\n  r65912 | guido.van.rossum | 2008-08-20 07:57:20 -0700 (Wed, 20 Aug 2008) | 2 lines\n\n  News for the imageop fix.\n........ News for the imageop fix. News for the imageop/rgbimg changes. Remove four uu-encoded image files that were once useful for testing\nimgfile, rgbimg and imageop.  None of those modules exist any more... Issue 1179: [CVE-2007-4965] Integer overflow in imageop module. Issue 1179: [CVE-2007-4965] Integer overflow in imageop module.\nAlso fixes rgbimg module (just before it is removed from 2.6). Blocked revisions 65874 via svnmerge\n\n........\n  r65874 | guido.van.rossum | 2008-08-19 13:13:02 -0700 (Tue, 19 Aug 2008) | 3 lines\n\n  Hopeful fix for issue 1878: remove Py_TPFLAGS_HAVE_VERSION_TAG from\n  Py_TPFLAGS_DEFAULT when not building the core.\n........ Hopeful fix for issue 1878: remove Py_TPFLAGS_HAVE_VERSION_TAG from\nPy_TPFLAGS_DEFAULT when not building the core. - Issue #3300: make urllib.parse.[un]quote() default to UTF-8.\n  Code contributed by Matt Giuca.  quote() now encodes the input\n  before quoting, unquote() decodes after unquoting.  There are\n  new arguments to change the encoding and errors settings.\n  There are also new APIs to skip the encode/decode steps.\n  [un]quote_plus() are also affected. Add news item about _sre.compile() re-bytecode validator. Patch by Ian Charnas from issue 3517.\nAdd F_FULLFSYNC if it exists (OS X only so far). Revert accidentally committed files.  Oops! Merged revisions 65544 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r65544 | guido.van.rossum | 2008-08-04 20:39:21 -0700 (Mon, 04 Aug 2008) | 28 lines\n\n  Tracker issue 3487: sre \"bytecode\" verifier.\n\n  This is a verifier for the binary code used by the _sre module (this\n  is often called bytecode, though to distinguish it from Python bytecode\n  I put it in quotes).\n\n  I wrote this for Google App Engine, and am making the patch available as\n  open source under the Apache 2 license.  Below are the copyright\n  statement and license, for completeness.\n\n  # Copyright 2008 Google Inc.\n  #\n  # Licensed under the Apache License, Version 2.0 (the \"License\");\n  # you may not use this file except in compliance with the License.\n  # You may obtain a copy of the License at\n  #\n  #     http://www.apache.org/licenses/LICENSE-2.0\n  #\n  # Unless required by applicable law or agreed to in writing, software\n  # distributed under the License is distributed on an \"AS IS\" BASIS,\n  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  # See the License for the specific language governing permissions and\n  # limitations under the License.\n\n  It's not necessary to include these copyrights and bytecode in the\n  source file.  Google has signed a contributor's agreement with the PSF\n  already.\n........ Tracker issue 3487: sre \"bytecode\" verifier.\n\nThis is a verifier for the binary code used by the _sre module (this\nis often called bytecode, though to distinguish it from Python bytecode\nI put it in quotes).\n\nI wrote this for Google App Engine, and am making the patch available as\nopen source under the Apache 2 license.  Below are the copyright\nstatement and license, for completeness.\n\n# Copyright 2008 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nIt's not necessary to include these copyrights and bytecode in the\nsource file.  Google has signed a contributor's agreement with the PSF\nalready. Fix bug 3375 - _multiprocessing.so build problems on OS X.\nThe solution is to clear sys.path_importer_cache. Ignore .py[co] files here. Roll back Raymond's -r64098 while we think of something better.\n(See issue 3056 -- we're close to a resolution but need unittests.) Implicit exception chaining via __context__ (PEP 3134).\nPatch 3108 by Antooine Pitrou. Don't echo the echo commands added to \"make install\".  Fix a typo. - Issue #1686386: Tuple's tp_repr did not take into account the possibility of\n  having a self-referential tuple, which is possible from C code.  Nor did\n  object's tp_str consider that a type's tp_str could do something that could\n  lead to an inifinite recursion.  Py_ReprEnter() and Py_EnterRecursiveCall(),\n  respectively, fixed the issues.  (Backport of r58288 from trunk to 2.5.) \"make install\" is now an alias for \"make altinstall\", to prevent\naccidentally overwriting a Python 2.x installation.\nUse \"make fullinstall\" to force Python 3.0 to be installed as\n\"python\". Remove the advertising clause from the BSD license in timing.h.\nI have the email trail to prove that George Neville-Neil approved this.\n(Backport of r62097.) Remove the advertising clause from the BSD license in timing.h.\nI have the email trail to prove that George Neville-Neil approved this. Blocked revisions 61492 via svnmerge\n\n........\n  r61492 | neal.norwitz | 2008-03-17 23:46:00 -0500 (Mon, 17 Mar 2008) | 1 line\n\n  Issue 2332: add new attribute names for instance method objects\n........ Blocked revisions 61489 via svnmerge\n\n........\n  r61489 | guido.van.rossum | 2008-03-17 23:42:22 -0500 (Mon, 17 Mar 2008) | 3 lines\n\n  - Issue 2379: Raise a Py3K warning for __getitem__ or __getslice__ on\n    exception instances.\n........ - Issue 2379: Raise a Py3K warning for __getitem__ or __getslice__ on\n  exception instances. Blocked revisions 61486 via svnmerge\n\n........\n  r61486 | guido.van.rossum | 2008-03-17 23:26:48 -0500 (Mon, 17 Mar 2008) | 3 lines\n\n  Issue #2341: Add a Py3k warning when raising an exception that doesn't\n  derive from BaseException.\n........ Issue #2341: Add a Py3k warning when raising an exception that doesn't\nderive from BaseException. Blocked revisions 61478 via svnmerge\n\n........\n  r61478 | guido.van.rossum | 2008-03-17 22:15:05 -0500 (Mon, 17 Mar 2008) | 4 lines\n\n  Clean up the Py3k warnings for non-BaseException-subclasses a bit.  We\n  now don't warn for some corner cases that deserve a warning, rather\n  than warning double or incorrectly for some other corner cases.\n........ Clean up the Py3k warnings for non-BaseException-subclasses a bit.  We\nnow don't warn for some corner cases that deserve a warning, rather\nthan warning double or incorrectly for some other corner cases. Blocked revisions 61475 via svnmerge\n\n........\n  r61475 | guido.van.rossum | 2008-03-17 21:49:46 -0500 (Mon, 17 Mar 2008) | 3 lines\n\n  - Issue #2371: Add a Py3k warning when catching an exception that\n    doesn't derive from BaseException.\n........ - Issue #2371: Add a Py3k warning when catching an exception that\n  doesn't derive from BaseException. - A new\tpickle protocol\t(protocol 3) is added with explicit support\n  for bytes.  This is the default protocol.  It intentionally cannot\n  be unpickled by Python 2.x.\n\n- When a pickle\twritten\tby Python 2.x contains an (8-bit) str\n  instance, this is now decoded to a (Unicode) str instance.  The\n  encoding used to do this defaults to ASCII, but can be overridden\n  via two new keyword arguments to the Unpickler class.  Previously\n  this would create bytes instances, which is usually wrong: str\n  instances are often used to pickle attribute names etc., and text is\n  more common than binary data anyway. Fix the overflows in expandtabs().  \"This time for sure!\"\n(Exploit at request.) Fix the overflows in expandtabs().  \"This time for sure!\"\n(Exploit at request.) Reject PEPs 3125 and 3126 (removing backslash continuation and implicit\nstring concatenation, respectively). New version, Raymond is now co-author. Major rewrite by Jim Jewett.\n\nThe inside-a-string continuation is separated from the general continuation.\n\nThe alternatives section is expaned to als list Andrew Koenig's\nimproved inside-expressions variant, since that is a real contender. PEPs aren't executable files. Correct an oopsie -- Calvin's New Super PEP was already checked in as 367. Add PEP 3133: New Super (Spealman).\nRemove outdated pepparade link. PEP 3127: Integer Literal Support and Syntax           Maupin\nPEP 3128: BList: A Faster List-like Type               Stutzbach PEP 3127: Integer Literal Support and Syntax (Patrick Maupin) Two new peps:\n S  3125  Remove Backslash Continuation                Jewett\n S  3126  Remove Implicit String Concatenation         Jewett Fix typos and nits reported by various correspondents,\nadd a few clarifications and new open issues.  Only the easy stuff. PEP 3141: Fix spelling of Transcendental.\nPEP 3119: Add overloading isinstance() and issubclass();\n\t  tighten invariant for Mapping.keys/values/items to use list(). Deal with some open issues.  Add some others.  Will be posting soon. Make clear() a concrete method that calls pop() until it raises KeyError. Some small edits, e.g. finite -> sized. Fix up references in PEP 3141.  Point PEP 3119 to PEP 3141. Tiny formatting tweak. Add PEP 3141 (named after 3.141), ABCs for numbers, by Jeffrey Jasskin.\nNot to endorse this (yet) but so we have a record in svn. Add pointer to implementation of @abstractmethod in C.\nChange ABC framework description to only mention @abstractmethod\nand unconditionally propose it as a built-in.\nSome more editorializing; explain why we have BasicMapping. Add some text that Talin suggested. More decisions. Work in many email responses. Choose Sized instead of Finite.\nMake a few more tentative decisions based on Brett's feedback. Turn XXX into open issues.  Fix append (was listed as add).\nRespond to Brett's email. Fix a blatant bug in the definition of hash().\nAdd ComposableSet, which defines union etc. Added some comparisons to other ideas, open issues, and more references. Another checkpoint.  Add some invariants.  Resolve an XXX or two. Checkpoint.  Use Finite for the class defining __len__. Fix rest warnings. Add lots of text.  Still far from complete. Add spec for abc module.  Add more sections but with temporary contents. Clean up trailing whitespace. Add a bit more to the abstract. Claim PEP 3119 for the ABC PEP.  Please disregard the contents for now. Add explanation / instructions for required 2nd Python-ast.c submit. Add newline arg to open(). Like seek(), truncate() always returns the new current position.\nAll write() methods return the number of bytes/characters written\n(for buffered and text files, this is always the lenth of the input). Note that stdlib changes are starting after 3.0a1 is released. seek() returns an int everywhere. Clarify what to use instead of callable(). Add words discouraging overly-broad except clauses. Update by Mark Russell -- clarify readinto(), and qualify tell()/seek() on\ntextio buffers. Accept PEP 3115. Fix layout glitch in References section. PEP 3116 - new I/O, by Mike Verdone and Daniel Stutzbach;\nconverted from HTML by Jason Orendorff. Add PEP 3115: Metaclasses in Py3k, by Talin.\nUpdated PEP 0 to list PEP 3114: next -> __next__, by Ping. This pep was accepted but the status was never updated. Mark input() -> raw_input() as done (revising the plans). Reject PEP 3103 (switch/case statement). Add the bytes literal PEP, by Jason Orendorff.\nAnd accept it! Restore the previous definition of __eq__ for d_values.\nThere was a reason I did it by modifying a list! Use trailing Emacs section from plaintext template. Another update, clarifying (I hope) the method signatures and mentioning\nother stuff that came up over dinner. Update the bytes object to better resemble my intentions. Sorry, PEP 3106 is not yet accepted.  Also removed mutating operations\nand added some clarifications. Mark print() as done, period.  Note that softspace is gone too. Mark print conversion as mostly done. Mark int/long unification as done.\n(Except maybe for speedups, but that's a separate project.) Update int/long unification status. Note that the sets module has been removed. - Clarify that the ordering of keys, values and items is compatible.\n- Note that comparing two d_items instances could compare the underlying\n  dicts.\n- Ask whether we need more of a motivation.\n- Observe that we could cache+reuse the keys/values/items objects. Clarified lots of issues, added more open issues. Wrote the real PEP (mostly). Not really creating the PEP, just a stub to reserve the PEP number. add a link to PEP 3105 for print function call. Updated timeline. Update status of various items. Py3k won't be case-insensitive.  Added because someone asked about it. Various status updates.  Added some \"?\"s to items I'm not sure about. Py3k will be implemented in C, by evolving Python 2.x. Container literals stay. Switch my preference to syntax alternative 1. Introducing school IIb -- duplicate cases resolved by case order, not errors. Standardize case of \"school\" -- there's no reason to capitalize this everywhere. Near-total rewrite of the section describing the different semantic\nschools, inspired by discussion on python-dev with Ka-Ping.  Hopefully\nthe different schools and their relative advantages and disadvantages\nare represented more correctly now. Fix a reST markup warning. Add PEP 3103: A Switch/Case Statement (GvR).\nAlso fix a reference to cvs in the Makefile. Checkpoint submit so I can edit this elsewhere. Third time trying to commit the new pronouncement about set literals. :-(\nAlso mention removing __mod__ and __divmod__ from float. Slices won't go away. Clarify the sentence \"python won't be unicode\" which could be interpreted\ntoo broadly. No Unicode for operators or names. Add set literals.\nClarify that the new string type will be 'str'. Record that the Py3k C coding style will use 4 spaces, no tabs.\nAnd record when it's okay to reformat a file to conform. Add making ... a general expression. Somehow this rejection wasn't checked in. Add suggestion by Doug Landauer -- use an instrumented Python 2.x to find\nfuture problems. Clarify what I meant when I said \"it will be called Python 3.0\". Remove a stray line (duplicated). Clarify (I hope) that we're not going to *enforce* 80 columns. :-) Added PEP 3000 lines. The new PEP 3000, describing some meta-meta-issues. Add a planned feature that Aahz wants to own: file() vs. open(), round 7. Fix typo reported by Doug Ported on web-sig. Making GeneratorExit special isn't an open issue.\nPropagating StopIteration from context managers should be Phillip Eby's issue. Fix an inconsistency about whether 'cls' is preferred or not. Discourage relative imports. Add a line about __builtin[s]__. Add note about int as abstract base class. Accept PEP 338.  Maybe there are some tweaks necessary to the code,\nbut I want to make it clear that this feature is accepted for 2.5. Update this PEP to reflect the new design: exceptions are swallowed only\nwhen __exit__ returns a true value. Add policy about non-ASCII names to coding standard. Accept PEP 3131. Update post-history. Totally new version of the Numbers ABC PEP, received fresh from Jeffrey. Make append and reverse concrete methods of mutable sequences. strop is gone.  several other modules were already gone (e.g. pcre, xmllib). Streamlined the containers section. Checkpoint.  Rewrote (and swapped) the sections on\nisinstance/issubclass overriding and the support framework.\nNext up: redesign the collection ABCs. Reject PEP 3128 (BList). Accept PEP 3127 (integer literal and support) and reject PEP 3130 (access\nto current module/class/function). Fix some bugs when dealing with non-existent or non-PEP files. Accept PEPs 3120 (UTF-8 default source encoding), 3121 (extension\ninitialization and finalization) and 3123 (PyObject_HEAD vs. stdC). Reject PEPs 3125 and 3126 (removing backslash continuation and implicit\nstring concatenation, respectively). New version, Raymond is now co-author. Major rewrite by Jim Jewett.\n\nThe inside-a-string continuation is separated from the general continuation.\n\nThe alternatives section is expaned to als list Andrew Koenig's\nimproved inside-expressions variant, since that is a real contender. PEPs aren't executable files. Correct an oopsie -- Calvin's New Super PEP was already checked in as 367. Add PEP 3133: New Super (Spealman).\nRemove outdated pepparade link. PEP 3127: Integer Literal Support and Syntax           Maupin\nPEP 3128: BList: A Faster List-like Type               Stutzbach PEP 3127: Integer Literal Support and Syntax (Patrick Maupin) Two new peps:\n S  3125  Remove Backslash Continuation                Jewett\n S  3126  Remove Implicit String Concatenation         Jewett Fix typos and nits reported by various correspondents,\nadd a few clarifications and new open issues.  Only the easy stuff. PEP 3141: Fix spelling of Transcendental.\nPEP 3119: Add overloading isinstance() and issubclass();\n\t  tighten invariant for Mapping.keys/values/items to use list(). Deal with some open issues.  Add some others.  Will be posting soon. Make clear() a concrete method that calls pop() until it raises KeyError. Some small edits, e.g. finite -> sized. Fix up references in PEP 3141.  Point PEP 3119 to PEP 3141. Tiny formatting tweak. Add PEP 3141 (named after 3.141), ABCs for numbers, by Jeffrey Jasskin.\nNot to endorse this (yet) but so we have a record in svn. Add pointer to implementation of @abstractmethod in C.\nChange ABC framework description to only mention @abstractmethod\nand unconditionally propose it as a built-in.\nSome more editorializing; explain why we have BasicMapping. Add some text that Talin suggested. More decisions. Work in many email responses. Choose Sized instead of Finite.\nMake a few more tentative decisions based on Brett's feedback. Turn XXX into open issues.  Fix append (was listed as add).\nRespond to Brett's email. Fix a blatant bug in the definition of hash().\nAdd ComposableSet, which defines union etc. Added some comparisons to other ideas, open issues, and more references. Another checkpoint.  Add some invariants.  Resolve an XXX or two. Checkpoint.  Use Finite for the class defining __len__. Fix rest warnings. Add lots of text.  Still far from complete. Add spec for abc module.  Add more sections but with temporary contents. Clean up trailing whitespace. Add a bit more to the abstract. Claim PEP 3119 for the ABC PEP.  Please disregard the contents for now. Add explanation / instructions for required 2nd Python-ast.c submit. Add newline arg to open(). Like seek(), truncate() always returns the new current position.\nAll write() methods return the number of bytes/characters written\n(for buffered and text files, this is always the lenth of the input). Note that stdlib changes are starting after 3.0a1 is released. seek() returns an int everywhere. Clarify what to use instead of callable(). Add words discouraging overly-broad except clauses. Update by Mark Russell -- clarify readinto(), and qualify tell()/seek() on\ntextio buffers. Accept PEP 3115. Fix layout glitch in References section. PEP 3116 - new I/O, by Mike Verdone and Daniel Stutzbach;\nconverted from HTML by Jason Orendorff. Add PEP 3115: Metaclasses in Py3k, by Talin.\nUpdated PEP 0 to list PEP 3114: next -> __next__, by Ping. This pep was accepted but the status was never updated. Mark input() -> raw_input() as done (revising the plans). Reject PEP 3103 (switch/case statement). Add the bytes literal PEP, by Jason Orendorff.\nAnd accept it! Restore the previous definition of __eq__ for d_values.\nThere was a reason I did it by modifying a list! Use trailing Emacs section from plaintext template. Another update, clarifying (I hope) the method signatures and mentioning\nother stuff that came up over dinner. Update the bytes object to better resemble my intentions. Sorry, PEP 3106 is not yet accepted.  Also removed mutating operations\nand added some clarifications. Mark print() as done, period.  Note that softspace is gone too. Mark print conversion as mostly done. Mark int/long unification as done.\n(Except maybe for speedups, but that's a separate project.) Update int/long unification status. Note that the sets module has been removed. - Clarify that the ordering of keys, values and items is compatible.\n- Note that comparing two d_items instances could compare the underlying\n  dicts.\n- Ask whether we need more of a motivation.\n- Observe that we could cache+reuse the keys/values/items objects. Clarified lots of issues, added more open issues. Wrote the real PEP (mostly). Not really creating the PEP, just a stub to reserve the PEP number. add a link to PEP 3105 for print function call. Updated timeline. Update status of various items. Py3k won't be case-insensitive.  Added because someone asked about it. Various status updates.  Added some \"?\"s to items I'm not sure about. Py3k will be implemented in C, by evolving Python 2.x. Container literals stay. Switch my preference to syntax alternative 1. Introducing school IIb -- duplicate cases resolved by case order, not errors. Standardize case of \"school\" -- there's no reason to capitalize this everywhere. Near-total rewrite of the section describing the different semantic\nschools, inspired by discussion on python-dev with Ka-Ping.  Hopefully\nthe different schools and their relative advantages and disadvantages\nare represented more correctly now. Fix a reST markup warning. Add PEP 3103: A Switch/Case Statement (GvR).\nAlso fix a reference to cvs in the Makefile. Checkpoint submit so I can edit this elsewhere. Third time trying to commit the new pronouncement about set literals. :-(\nAlso mention removing __mod__ and __divmod__ from float. Slices won't go away. Clarify the sentence \"python won't be unicode\" which could be interpreted\ntoo broadly. No Unicode for operators or names. Add set literals.\nClarify that the new string type will be 'str'. Record that the Py3k C coding style will use 4 spaces, no tabs.\nAnd record when it's okay to reformat a file to conform. Add making ... a general expression. Somehow this rejection wasn't checked in. Add suggestion by Doug Landauer -- use an instrumented Python 2.x to find\nfuture problems. Clarify what I meant when I said \"it will be called Python 3.0\". Remove a stray line (duplicated). Add missing super().tearDown() class to EventLoopTestsMixin. Break some long lines. Get rid of add_connector and everything relating to it. We'll never need it. Disable tests for _accept_connection in Proactor test. Actually use _start_serving(). (Merge error probably.) Kill bad import of unix_events. Merge default -> default. Merge iocp into default branch. Merge the rest of default into iocp. Merge rev 300 into iocp branch. Merge default rev 299 into iocp. Babysteps. Add a few comments. Get rid of unneeded continue. Merge default -> iocp (mostly test improvements). Fix missing import in test_utils.py. Merge Logging tweaks for tests. Redirect if path to directory without trailing slash detected. Log exceptions when they occur.\n\nThis is suboptimal, but logging them only when they aren't caught\nis trickier, and I've been bitten by buggy tasks too often. Fix trailing whitespace. Fix relative url following. Serve from the current filesystem. Merge default - iocp. No signals on Windows (port to main branch). No signals on Windows, really. Get rid of call_every_iteration() (Tornado cannot implement it). Throwaway code: async server (srv.py), sync ssl server (sslsrv.py). Close ssock/csock FDs upon event loop close(). Cancel handlers in remove_reader() etc. Separate EVENT_WRITE and EVENT_CONNECT. Support -x flag to exclude tests. Don't return from create_connection() until after connection_made() is called. Whitespace fix. Skip ssl test if ssl module not found. Change key_from_fd to log warning and return None if key not found. CHECKPOINT: subprocess transport. Fix typo in _UnixSocketTransport.write(). Fail later when ssl cannot be imported. Rename create_transport() to create_connection(). Remove type argument. Return True/False from remove_reader/writer/connector. Cancelling a read/write/connect handler now removes the handler.\n\nHowever, the effect is delayed until more I/O happens on the FD.\nSo don't use this if you plan to close the FD -- it will crash\nor hang (depending on which selector is used). Remove pdb call accidentally checked in. New policy for running ready callbacks: alternate callbacks and I/O poll.  (See python-ideas discussion.) Merge Limit #tasks.  Also make end of line char configurable. Don't print when connection is closed. Always close the transport when done processing. Kill fastopen code for now.  It feels too experimental. Remove some TODOs that are done. Use more lenient decoding practice. Fix typos in _TRYAGAIN tests. Support 301/302 redirects. Print headers.  Decode body. Add retry with exponential back-off to process(). Tighten connect() error handling. Improve error message for value containing whitespace. Fix href-finding pattern to exclude all whitespace. More useful connect() return. Add a crawler. Make create_transport(..., ssl=True) wait until connected. Use email.message.Message() for headers. Move urlsplit() to curl.py. Add and use StreamReader class. Checkpoint: HTTP client (needs a buffered stream badly). Fix cancelling a sleeping task. Turn on branch coverage. Tentatively support TCP_FASTOPEN (can't test though). Fix typo reported (long ago) by Brett Cannon. Improve Task repr(). Specifically check for 3.3 or higher. Improve+test Task.repr().  Fix bug in yield from <cancelled Future>. Slight tweaks. Add test id pattern matching feature to runtests.py. Delete trailing whitespace. More state checks for Futures. Add timeout support to as_completed(). Use repr() of result/exception in repr() of Future. More tests for wait(): exception, timeout. Implement wait() and as_completed() (partially). Rename Key to SelectorKey. Handle signals arriving during a select() (etc.) call. Fix definition of TimeoutError. Test for sleep(dt) without extra arg. Use signal.set_wakeup_fd() to avoid race condition. Rename _Key to Key. Use separate r/w kevents in KqueueSelector.unregister(). Close all sockets properly. Explicitly close the event loop after each test. Allow Handler instances instead of callbacks everywhere. Add test for cancelling a signal handler. Add signal handling APIs. Instead of init_event_loop(), define new_event_loop(). Make register()/unregister() in subclasses return a _Key. Use Selector classes by Charles-Francois Natali instead of pollsters.\nSee http://bugs.python.org/issue16853.  The selectors.py file is\na slightly modified clone of the select.py file from that issue. Make test_writer_callback() more robust. Add a callback to ThreadRunner.submit(). Make transport work a little better. Transport works a little bit. Use threadrunner.submit() to call getaddrinfo(). Move Context from scheduling.py to polling.py. Checkpoint: Initial draft transports.py. Does not work. Update version to 0.3.0. Don't install typing.py for Python >= 3.5. Add -s flag as alias for --silent-import; deprecate --silent. Also check that no extra junk appears after -c cmd, -m mod, -d dir. Fix type error in Jukka's code. Log and trace to stderr. Make trace() a manager method, triggered by -v -v. Add -v and -V shorthands for --verbose and --version (a common convention). There is no exit(). There is only sys.exit(). Merge pull request #1213 from ctcutler/pyc-error\n\nError out on .pyc files.  Fixes #1204 Merge pull request #1208 from JukkaL/argcount\n\nVerify arg count of separate type signature earlier. Fixes #1207 Fix \"Could not find builtins\" when using \"python3 -m mypy\". Sync typeshed (sys.exit) Respond to review. Verify arg count of separate type signature earlier. Fixes #1207 Sync typeshed Merge pull request #1201 from Carreau/compileError\n\nGive `CompileError` a message. Sync typeshed (webbrowser) Merge pull request #1187 from gnprice/search\n\nFurther optimize find_module Sync typeshed Fix crash in try_infer_partial_type_from_indexed_assignment(). Fixes #1192. (For realz.) Fix crash in try_infer_partial_type_from_indexed_assignment(). Fixes #1192. Merge pull request #1161 from ddfisher/master\n\nAdd --implicit-any Merge pull request #1189 from ddfisher/PR/empty-return-any\n\nAllow empty returns and yields in Any typed functions Merge pull request #1179 from gnprice/cache\n\nCache most searches for modules through the path Fix typo (from PR 1181 by Ismail. Sync typeshed Merge pull request #1175 from JukkaL/fix1173\n\nAvoid crash on \"x in y\" where y has a partial type. Fix #1173. Avoid crash on \"x in y\" where y has a partial type. Fix #1173. Sync typeshed Sync typeshed (revert broken min/max fix). Sync typeshed(six.moves) Sync typeshed Fail without traceback when duplicate module name encountered. Don't crash if no source files were found in a directory or package. Sync typeshed Merge pull request #1162 from JukkaL/except2\n\nFix \"except (E1, E2):\" parsing in PY2. Fixes #1159. Also ensure an error for \"except X, Y:\" in Python 3. Fix \"except (E1, E2):\" parsing in PY2. Fixes #1159. Sync typeshed. Sync typeshed. Sync typeshed. Merge pull request #1142 from ddfisher/master\n\nAdd line number to \"__init__ must return None\" error Sync typeshed (threading, types) Sync typeshed. Merge pull request #1137 from ddfisher/master\n\nGenerator fixup Sync typeshed (asyncio.Future). Sync typeshed. Also fix #1067, by special-casing the end of the MRO for super() if a bad base was found. Solution that doesn't break other tests. If a base class is Any, don't get default constructor signature from object. Fixes #1049. Sync typeshed (Ben Darnell patch). Sync typeshed (threading.Timer). Find partial types anywhere in the stack. Fixes #1126. Merge pull request #1131 from JukkaL/fixlex\n\nAvoid crash on outrageous non-ASCII characters. Fixes #1127. Avoid crash on outrageous non-ASCII characters. Fixes #1127. Merge pull request #1128 from sakana/master\n\nGeneralize yield statement function type Sync typeshed (deque). No longer need to pin flake8 version. Merge pull request #1120 from JukkaL/fix1002\n\nHopeful fix for #1002 (lxml trouble). Merge pull request #1122 from JukkaL/fix1121\n\nFix crash in check_overlapping_op_methods(). Fix #1121. Fix crash in check_overlapping_op_methods(). Fix #1121. Hopeful fix for #1002 (lxml trouble). Merge pull request #1109 from gvanrossum/fix1101\n\nWIP: Rip out offending error messages for issue #1101. Sync typeshed. No longer search typeshed/builtins (consolidated with stdlib). Merge pull request #1118 from gvanrossum/fix1095\n\nFix #1095 (crash on undefined variable actual_types in check_argument_count()).\r\n\r\nTravis tests now pass! Ignore more pep8 messages to unbreak Travis builds. Fixer for 2to3 that inserts mypy annotations into all methods.\n\nYou may have to mess with the 2to3 infrastructure slightly to use this. Ignore more pep8 messages to unbreak Travis builds. Fixer for 2to3 that inserts mypy annotations into all methods.\n\nYou may have to mess with the 2to3 infrastructure slightly to use this. Fix #1095 (crash on undefined variable actual_types in check_argument_count()). Merge pull request #1116 from matthiaskramm/fix_builtin_order\n\nFix the order in which builtins are loaded. Sync typeshed (json) Remove certain checks related to reverse operations -- they no longer serve a purpose. Merge pull request #1110 from the-gigi/master\n\nUpdate README.md to fix installation instructions for Python 3.5 Reformat a few messages so they are easier to find using grep. Tighten argument type for Instance(erased=...) from Any to bool. Sync typeshed. Sync typeshed. Sync typeshed. Sync typeshed. Document --pdb option. Fix #1081. When comparing template to actual arg types, stop at shortest. Fix #1051. Write type-checking errors to stdout. Make usage() more complete. Fix #1033. Don't report internal error when using a name that could not be imported.\n\nAlso fixed SymbolTableNode.__str__(). Add --pdb flag to drop into pdb upon fatal error. Fixes #1080. Fix #1008. Improve check for \"# type: ignore\". Merge pull request #1096 from matthiaskramm/subprocess\n\nDon't check git submodule in subprocesses. Fix #1082 -- internal error when updating partial type from outer scope. Merge pull request #1087 from yuvallanger/patch-2\n\nImport all names necessary for the example Merge pull request #1083 from yuvallanger/patch-1\n\nRefer to example with clearer wording. Merge pull request #1079 from dashea/stubgen-help\n\nParse stubgen options before checking for the \"out\" directory. Fold long lines. Fix failing test. Generalize the approach (thanks Ryan Gonzalez). Add a few more special cases to try_infer_partial_type(): set., list.extend, {set,dict}.update. Use pass instead of ...; don't use bool. Oops, Sized is not generic. Also understand a tuple is a Sized. Understand that a tuple is also a Container. With test. Fix crucial typo in comment I just added. Avoid adding x.pyi twice when x.py and x.pyi are both present. Add --silent-imports flag which prevents importing non-stub modules not listed on the command line. See issue #1043. Update version to 0.3.0. Don't install typing.py for Python >= 3.5. Add -s flag as alias for --silent-import; deprecate --silent. Also check that no extra junk appears after -c cmd, -m mod, -d dir. Fix type error in Jukka's code. Log and trace to stderr. Make trace() a manager method, triggered by -v -v. Add -v and -V shorthands for --verbose and --version (a common convention). There is no exit(). There is only sys.exit(). Merge pull request #1213 from ctcutler/pyc-error\n\nError out on .pyc files.  Fixes #1204 Merge pull request #1208 from JukkaL/argcount\n\nVerify arg count of separate type signature earlier. Fixes #1207 Fix \"Could not find builtins\" when using \"python3 -m mypy\". Sync typeshed (sys.exit) Respond to review. Verify arg count of separate type signature earlier. Fixes #1207 Sync typeshed Merge pull request #1201 from Carreau/compileError\n\nGive `CompileError` a message. Sync typeshed (webbrowser) Merge pull request #1187 from gnprice/search\n\nFurther optimize find_module Sync typeshed Fix crash in try_infer_partial_type_from_indexed_assignment(). Fixes #1192. (For realz.) Fix crash in try_infer_partial_type_from_indexed_assignment(). Fixes #1192. Merge pull request #1161 from ddfisher/master\n\nAdd --implicit-any Merge pull request #1189 from ddfisher/PR/empty-return-any\n\nAllow empty returns and yields in Any typed functions Merge pull request #1179 from gnprice/cache\n\nCache most searches for modules through the path Fix typo (from PR 1181 by Ismail. Sync typeshed Merge pull request #1175 from JukkaL/fix1173\n\nAvoid crash on \"x in y\" where y has a partial type. Fix #1173. Avoid crash on \"x in y\" where y has a partial type. Fix #1173. Sync typeshed Sync typeshed (revert broken min/max fix). Sync typeshed(six.moves) Sync typeshed Fail without traceback when duplicate module name encountered. Don't crash if no source files were found in a directory or package. Sync typeshed Merge pull request #1162 from JukkaL/except2\n\nFix \"except (E1, E2):\" parsing in PY2. Fixes #1159. Also ensure an error for \"except X, Y:\" in Python 3. Fix \"except (E1, E2):\" parsing in PY2. Fixes #1159. Sync typeshed. Sync typeshed. Sync typeshed. Merge pull request #1142 from ddfisher/master\n\nAdd line number to \"__init__ must return None\" error Sync typeshed (threading, types) Sync typeshed. Merge pull request #1137 from ddfisher/master\n\nGenerator fixup Sync typeshed (asyncio.Future). Sync typeshed. Also fix #1067, by special-casing the end of the MRO for super() if a bad base was found. Solution that doesn't break other tests. If a base class is Any, don't get default constructor signature from object. Fixes #1049. Sync typeshed (Ben Darnell patch). Sync typeshed (threading.Timer). Find partial types anywhere in the stack. Fixes #1126. Merge pull request #1131 from JukkaL/fixlex\n\nAvoid crash on outrageous non-ASCII characters. Fixes #1127. Avoid crash on outrageous non-ASCII characters. Fixes #1127. Merge pull request #1128 from sakana/master\n\nGeneralize yield statement function type Sync typeshed (deque). No longer need to pin flake8 version. Merge pull request #1120 from JukkaL/fix1002\n\nHopeful fix for #1002 (lxml trouble). Merge pull request #1122 from JukkaL/fix1121\n\nFix crash in check_overlapping_op_methods(). Fix #1121. Fix crash in check_overlapping_op_methods(). Fix #1121. Hopeful fix for #1002 (lxml trouble). Merge pull request #1109 from gvanrossum/fix1101\n\nWIP: Rip out offending error messages for issue #1101. Sync typeshed. No longer search typeshed/builtins (consolidated with stdlib). Merge pull request #1118 from gvanrossum/fix1095\n\nFix #1095 (crash on undefined variable actual_types in check_argument_count()).\r\n\r\nTravis tests now pass! Ignore more pep8 messages to unbreak Travis builds. Fixer for 2to3 that inserts mypy annotations into all methods.\n\nYou may have to mess with the 2to3 infrastructure slightly to use this. Ignore more pep8 messages to unbreak Travis builds. Fixer for 2to3 that inserts mypy annotations into all methods.\n\nYou may have to mess with the 2to3 infrastructure slightly to use this. Fix #1095 (crash on undefined variable actual_types in check_argument_count()). Merge pull request #1116 from matthiaskramm/fix_builtin_order\n\nFix the order in which builtins are loaded. Sync typeshed (json) Remove certain checks related to reverse operations -- they no longer serve a purpose. Merge pull request #1110 from the-gigi/master\n\nUpdate README.md to fix installation instructions for Python 3.5 Reformat a few messages so they are easier to find using grep. Tighten argument type for Instance(erased=...) from Any to bool. Sync typeshed. Sync typeshed. Sync typeshed. Sync typeshed. Document --pdb option. Fix #1081. When comparing template to actual arg types, stop at shortest. Fix #1051. Write type-checking errors to stdout. Make usage() more complete. Fix #1033. Don't report internal error when using a name that could not be imported.\n\nAlso fixed SymbolTableNode.__str__(). Add --pdb flag to drop into pdb upon fatal error. Fixes #1080. Fix #1008. Improve check for \"# type: ignore\". Merge pull request #1096 from matthiaskramm/subprocess\n\nDon't check git submodule in subprocesses. Fix #1082 -- internal error when updating partial type from outer scope. Merge pull request #1087 from yuvallanger/patch-2\n\nImport all names necessary for the example Merge pull request #1083 from yuvallanger/patch-1\n\nRefer to example with clearer wording. Merge pull request #1079 from dashea/stubgen-help\n\nParse stubgen options before checking for the \"out\" directory. Fold long lines. Fix failing test. Generalize the approach (thanks Ryan Gonzalez). Add a few more special cases to try_infer_partial_type(): set., list.extend, {set,dict}.update. Use pass instead of ...; don't use bool. Oops, Sized is not generic. Also understand a tuple is a Sized. Understand that a tuple is also a Container. With test. Fix crucial typo in comment I just added. Avoid adding x.pyi twice when x.py and x.pyi are both present. Add --silent-imports flag which prevents importing non-stub modules not listed on the command line. See issue #1043. Accept and finalize PEP 357.  __index__ is all checked in. /pubic/public/. Thanks Jennings Jared! 343: fix bug in nested().\n356: add some tentative future keywords.\n3000: add some new ideas. Fix two examples that were broken by the new semantics. Clarify the expanded code -- exc is just used as a flag. Change the PEP to add that __exit__() must re-raise the exception\npassed in, if any.  This appears to be a deviation from how the PEP\nwas originally seen; but I think it's essential to be able to make a\nsimple promise about generators decorated with @contextmanager.\n\nAdded the transition plan and the __future__ statement.\n\nAlso some miscellaneous cleanup. Mention dropping aquire_lock as an alias for acquire, etc. Change the translation slightly.\nctx.__exit__ is now bound before ctx.__enter__;\nctx.__enter__ is still called before the try-block\nis entered, but VAR is assigned *inside* the try-block.\nClarify what happens to break, continue, return. PEP 308 is final.  A great many thanks go to Thomas Wouters! Clarify the new syntax and note a backwards incompatibility. Travis's changes. Oops.  I meant to accept 353 (ssize_t), not yet 357 (__index__). Small patch by Travis, who write:\n\n1) fixes typo\n\n2) Adds link to name discussion\n\n3) Suggests adding __index__ slot to integer and long built ins.  I\n   neglected to do this for the patch, but it could really simplify\n   much code to have it. Accept PEP 357 (ssize_t). Mention ElementTree. Reject PEP 332.  We'll have to start over with a new PEP. Micro status updates (MvL volunteers as backup release mgr, PJE will do wsgiref) New version from Travis, with new specs. Add discussion about bdist_deb. Mention wsgiref. Add bdist_* items to TODO list. Reject PEP 351. New version by Travis.  Adds rationale for __index__ name.\nReformats some. Sprinkle with question marks. Tweak and accept PEP 352 -- new exception hierarchy. New version from Travis. Update from Travis -- move to make it a numeric slot. Change some properties (eol-style, native) on PEPs that didn't have them yet. Attempt to make $Date$ and $Revision$ work. Add PEP 357, Allowing Any Object to be Used for Slicing (by Travis Oliphant). Um, mark PEP 341 as accepted (but not yet implemented) here too. Mark PEP 341 as accepted (I was +1 in May 2005). Some additional tweakage, hopefully non-controversial. Native line endings for PEP 352. - Fix the link to the svn equivalent of viewcvs.\n- Expand keywords in PEP 352.txt. Tweaking $Revision$ and $Date$. Final tweaks:\n\n- fix the __str__, __unicode__ and __repr__ methods\n- some textual tweaks\n- add Python 3.0 to the transition plan Disable the 'chmod' commands since these don't work since the move to dinsdale. The root of the tree on dinsdale is /data, not /ftp. Rename PEP 308 to \"Conditional Expressions\". Fix docutils warning/2. Rename class ContextManager to ContextWrapper, per Nick's proposal. Rename @with_template and class Wrapper to @contextmanager and class\nContextManager.  Mark open issues as resolved. Correct title (again!) and authorship of PEP 342. Fix/unify PEP 342's title.     Update: at this point I'm leaning towards preferring next() over\n    __next__() again, but I've no time to update the PEP right now.\n    I've changed the title to Coroutines via Enhanced Generators at\n    Timothy Delaney's suggestion. Restrict 'as VAR' to VAR being a single variable or a parenthesized\nseries of variables.  This keeps the door open for a future extension\nwith multiple as-clauses. Add Wiki link. Include suggestions from Nick Coghlan. Raise RuntimeError in close().  Add list of open issues. List PEPs that can be rejected once this is accepted.  This turned up\na surprise: PEP 319. Address most of Phillip Eby's comments. Updated PEP 343 title. Specify generator enhancements.  Change keyword to 'with'. Warn readers of coming attractions. More generic decimal example. Outdent \"return +s\" and explain why.  Thanks Raymond! Add a variant of the decimal example. Elaborate Decimal context example, thanks to Michael Chermside. *Really* move the __enter__ call where it belongs. Move the __enter__ call out of the try suite.  I was nuts putting it\ninside. Rejecting PEP 340 in favor of PEP 343. __exit__ is always called with 3 args. Break last line of intro differently so \"PEP 310\" can be a hyperlink. Explain the __exit__() signature. Slight elaboration for readers who don't recall PEP 310. Add a motivational section, remove tabs, add colons, and some very\nminor edits. Various clarifications.  Mention Decimal context example.  Clarify\nthat I don't like having files etc. implement __enter__ and __exit__\ndirectly. Don't be wishy-washy about the call to __exit__().\n\nFix the redirecting_stdout() example (remove the try/finally). Add PEP 343: Anonymous Block Redux Note that 'yield' w/o an EXPR is currently illegal. Split PEP 342 (Enhanced Iterators) off of PEP 340. Fix the grammar, with Reinhold's approval. There's no need to be fuzzy about the moreal equivalent of \"raise\n*exc\". Mention some rejected ideas (and explain why). Fix bug in example 5 found by Reinhold Birkenfeld. Clarify that there are some separable items. Fix a remnant of the old proposal found by Tim Delaney. Some clarifications after Raymond's email. Clarify that the block-statement is a loop to the parser, and don't\nuse literally translated Dutch. saving_stdout -> redirecting_stdout (Phillip Eby). Add another example (saving sys.stout).\n\nEradicate tabs. Solidify loose ends. Fix typo in example 4 found by Chris Ryland. Delete the last reference to ContinuationIteration. Establish the \"alternative\" version.  The exception API is called\n__exit__(), and its signature is the same as that of the\nraise-statement.  Still some loose ends. Add a section of loose ends. Mention else-clauses; the else-clause on the translation of the\nfor-loop was broken, and the break-statement probabyl shouldn't have\none. Add motivation (supplied by Shane Hathaway).\n\nExplain what happens when a block contains a yield.\n\nAdd comparison to thunks.\n\nAdd examples. Advanced warning that another rewrite of the exception handling\nmechanics is pending. Settled on an extra argument to __next__() and next() to distinguish\nbetween values and exceptions. In the original translation for block-statement, reset ret = False\neach time before executing BLOCK1.  (Thanks to Duncan Booth.) Add an alternative __next__() API to pass arbitrary exceptions in.  I\nlike this better. Fix a bug in the translation of a classic 'for' loop. Fix the logic for deciding whether to return, raise or break; renaming\n'exc' to 'val'.\n\nAdd public domain copyright notice. Add PEP 340. Initial draft. Correct the intention for basestring. Fix errors in references. Remove leading blank line so pep2html recognizes this file. Clarify (I hope) that we're not going to *enforce* 80 columns. :-) Added PEP 3000 lines. The new PEP 3000, describing some meta-meta-issues. Add a planned feature that Aahz wants to own: file() vs. open(), round 7. Fix typo reported by Doug Ported on web-sig. Making GeneratorExit special isn't an open issue.\nPropagating StopIteration from context managers should be Phillip Eby's issue. Fix an inconsistency about whether 'cls' is preferred or not. Discourage relative imports. Add a line about __builtin[s]__. Add note about int as abstract base class. Accept PEP 338.  Maybe there are some tweaks necessary to the code,\nbut I want to make it clear that this feature is accepted for 2.5. Update this PEP to reflect the new design: exceptions are swallowed only\nwhen __exit__ returns a true value. Accept and finalize PEP 357.  __index__ is all checked in. /pubic/public/. Thanks Jennings Jared! 343: fix bug in nested().\n356: add some tentative future keywords.\n3000: add some new ideas. Fix two examples that were broken by the new semantics. Clarify the expanded code -- exc is just used as a flag. Change the PEP to add that __exit__() must re-raise the exception\npassed in, if any.  This appears to be a deviation from how the PEP\nwas originally seen; but I think it's essential to be able to make a\nsimple promise about generators decorated with @contextmanager.\n\nAdded the transition plan and the __future__ statement.\n\nAlso some miscellaneous cleanup. Mention dropping aquire_lock as an alias for acquire, etc. Change the translation slightly.\nctx.__exit__ is now bound before ctx.__enter__;\nctx.__enter__ is still called before the try-block\nis entered, but VAR is assigned *inside* the try-block.\nClarify what happens to break, continue, return. PEP 308 is final.  A great many thanks go to Thomas Wouters! Clarify the new syntax and note a backwards incompatibility. Travis's changes. Oops.  I meant to accept 353 (ssize_t), not yet 357 (__index__). Small patch by Travis, who write:\n\n1) fixes typo\n\n2) Adds link to name discussion\n\n3) Suggests adding __index__ slot to integer and long built ins.  I\n   neglected to do this for the patch, but it could really simplify\n   much code to have it. Accept PEP 357 (ssize_t). Mention ElementTree. Reject PEP 332.  We'll have to start over with a new PEP. Micro status updates (MvL volunteers as backup release mgr, PJE will do wsgiref) New version from Travis, with new specs. Add discussion about bdist_deb. Mention wsgiref. Add bdist_* items to TODO list. Reject PEP 351. New version by Travis.  Adds rationale for __index__ name.\nReformats some. Sprinkle with question marks. Tweak and accept PEP 352 -- new exception hierarchy. New version from Travis. Update from Travis -- move to make it a numeric slot. Change some properties (eol-style, native) on PEPs that didn't have them yet. Attempt to make $Date$ and $Revision$ work. Add PEP 357, Allowing Any Object to be Used for Slicing (by Travis Oliphant). Um, mark PEP 341 as accepted (but not yet implemented) here too. Mark PEP 341 as accepted (I was +1 in May 2005). Some additional tweakage, hopefully non-controversial. Native line endings for PEP 352. - Fix the link to the svn equivalent of viewcvs.\n- Expand keywords in PEP 352.txt. Tweaking $Revision$ and $Date$. Final tweaks:\n\n- fix the __str__, __unicode__ and __repr__ methods\n- some textual tweaks\n- add Python 3.0 to the transition plan Disable the 'chmod' commands since these don't work since the move to dinsdale. The root of the tree on dinsdale is /data, not /ftp. Rename PEP 308 to \"Conditional Expressions\". Fix docutils warning/2. Rename class ContextManager to ContextWrapper, per Nick's proposal. Rename @with_template and class Wrapper to @contextmanager and class\nContextManager.  Mark open issues as resolved. Correct title (again!) and authorship of PEP 342. Fix/unify PEP 342's title.     Update: at this point I'm leaning towards preferring next() over\n    __next__() again, but I've no time to update the PEP right now.\n    I've changed the title to Coroutines via Enhanced Generators at\n    Timothy Delaney's suggestion. Restrict 'as VAR' to VAR being a single variable or a parenthesized\nseries of variables.  This keeps the door open for a future extension\nwith multiple as-clauses. Add Wiki link. Include suggestions from Nick Coghlan. Raise RuntimeError in close().  Add list of open issues. List PEPs that can be rejected once this is accepted.  This turned up\na surprise: PEP 319. Address most of Phillip Eby's comments. Updated PEP 343 title. Specify generator enhancements.  Change keyword to 'with'. Warn readers of coming attractions. More generic decimal example. Outdent \"return +s\" and explain why.  Thanks Raymond! Add a variant of the decimal example. Elaborate Decimal context example, thanks to Michael Chermside. *Really* move the __enter__ call where it belongs. Move the __enter__ call out of the try suite.  I was nuts putting it\ninside. Rejecting PEP 340 in favor of PEP 343. __exit__ is always called with 3 args. Break last line of intro differently so \"PEP 310\" can be a hyperlink. Explain the __exit__() signature. Slight elaboration for readers who don't recall PEP 310. Add a motivational section, remove tabs, add colons, and some very\nminor edits. Various clarifications.  Mention Decimal context example.  Clarify\nthat I don't like having files etc. implement __enter__ and __exit__\ndirectly. Don't be wishy-washy about the call to __exit__().\n\nFix the redirecting_stdout() example (remove the try/finally). Add PEP 343: Anonymous Block Redux Note that 'yield' w/o an EXPR is currently illegal. Split PEP 342 (Enhanced Iterators) off of PEP 340. Fix the grammar, with Reinhold's approval. There's no need to be fuzzy about the moreal equivalent of \"raise\n*exc\". Mention some rejected ideas (and explain why). Fix bug in example 5 found by Reinhold Birkenfeld. Clarify that there are some separable items. Fix a remnant of the old proposal found by Tim Delaney. Some clarifications after Raymond's email. Clarify that the block-statement is a loop to the parser, and don't\nuse literally translated Dutch. saving_stdout -> redirecting_stdout (Phillip Eby). Add another example (saving sys.stout).\n\nEradicate tabs. Solidify loose ends. Fix typo in example 4 found by Chris Ryland. Delete the last reference to ContinuationIteration. Establish the \"alternative\" version.  The exception API is called\n__exit__(), and its signature is the same as that of the\nraise-statement.  Still some loose ends. Add a section of loose ends. Mention else-clauses; the else-clause on the translation of the\nfor-loop was broken, and the break-statement probabyl shouldn't have\none. Add feedback from Ben Darnell. Roll back last change -- it was an experiment accidentally committed. Post-mortem of yesterday's disaster. Add another mistake. Add another mistake. Add par(). Make it so you can just yield a Task to wait for its result (or exception). Merge Add TODO to add_done_call(). Make Task.add_done_callback() return a DelayedCall, and use it. Make sure something is printed if main task fails. Add map_over() operation. Improve cancel(). Put path before method argument. Housecleaning; added another benchmark. Fix race condition in call_in_thread(). Cleanup TODO. Improvements. Prettier Task repr(). Raise listen() backlog to 100. Add a simple echo client. (Though it has problems.) Subtle logging improvements. Move work out of except clauses, for better tracebacks. Add benchmarks link. Stupid http server to tweak benchmarks. Log an error if the startup task has an exception. Add a convenience feature to scheduling.run(). Move urlfetch() to a new file, http_client.py. Housekeeping. Add TODO items. Change poll() to return just a list of tokens. Support keyword args through DelayedCall. Make EventLoop wrap a Pollster instead of inherit from it. Make block_{r,w} COROUTINEs. Add an echo server demo. Fix bad code in except handler. TODO refactor. Robustify recv() and send() methods (both transports). Expand 0mq section. Update TODO. Update TODO. Update README, add TODO and xkcd.py. Disable gc in benchmarks. Add crude time comparison between yield and yield from. Fix code in except clause. Use DelayedCall objects for all types of callbacks. Add with_timeout(). Fix bug in cancelled sleeps. Replace wait_any() and wait_all() with wait_for(). Added wait_any()  and wait_all(). Another radical task refactor. Happier with timeouts. Default port depends on ssl flag. Radical refactoring: no more Scheduler class; use thread-local Context. Improve transport abstraction.  Add address family option. Add ssl transport. Kill shutdown() call. Tweak assignment order in except clauses. Use os.utimes to print real/user/system time. Generalize call_in_thread: optionally pass in an executor. Evolve Task more towards a future-like object. Use debug level logging to print poll timing. Fix the regex to match IPv4 addresses. Add temporary debug prints around poll() call. Add TODO about checking for races. Use time -p for friendlier output. Add cancellation option to call_later(). Use it for task timeouts. Reuse concurrent.futures.TimeoutError. Add timeout support for call_in_thread(). Add a timeout feature to start(). A bit messy. Add sleep() to scheduler. Clean up sockets.py. Move getaddrinfo wrapper into sockets.py. Move socket ops to their own file.  Very coarse. Move Scheduler and call_in_thread into scheduling.py. Finish docstrings for polling.py. Rename ioloop to eventloop. Made a start with docstrings.  Renamed Pollster -> EventLoop. Apparently epoll() does not need to check for EPOLLHUP. Add an epoll() mixin class. Add a fallback class using select() -- always there. Refactor poll/kqueue classes a bit more. Add kqueue polling mixin. Refactor to separate Pollster and Eventloop mixin classes. A little benchmark (also posted to python-ideas). Drop obsolete TODO. Recognize if poll() returns POLLHUP. Test submit. Rewrite call_in_thread() using a pipe for signalling. Correct typos. Add call_in_thread(), and use it to call getaddrinfo(). Make name optional; generators have names. Link to Greg Ewing's tutorial. Switch to polling; separate coroutine scheduler from pollster. Take \"hg repo\" from TODO list. Update TODO. Note Python version. Add .hgignore. Added README. Sync typeshed. Fixes #1050. Do not emit duplicate top-level def()s. Avoid generating duplicate imports when an exported class is also used as a base class. Sync typeshed Sync typeshed (six.moves.zip). Treat .py/pyi the same. Lots of refactoring too. Force the filename in find_modules_recursive(). When passed a directory, expand to a package or list of file. Refinement: when passed an __init__.py, use the package name (i.e. strip .__init__). Accept multiple files on command line. Fixes issue #935. Change lib_path: insert MYPYPATH in front. Sync typeshed (sqlite3, partial). Fix scope for with statement defining multiple variables. (Fixes issue #1009). Add missing Function to __all__ in runtime typing modules. Add partial json/simplejson stubs. Merge branch 'master' of https://bitbucket.org/jukkaleh/mypy Merge branch 'master' of https://bitbucket.org/jukkaleh/mypy Better stubs for codecs, add stubs for encodings. Merged jukkaleh/mypy into master Somewhat improved docutils stubs. Merged jukkaleh/mypy into master Add __name__ and __file__ to ModuleType. Merge branch 'master' of https://bitbucket.org/gvanrossum/mypy-gvanrossum Merged jukkaleh/mypy into master Kill trailing whitespace. (Dropbox server lint doesbn't like it.) Update inspect.py stubs. list.pop() has an optional integer argument. Merge branch 'master' into gvanrossum Ignore *~ and @*. Use relative imports. Update README to mention running unittests with py.test. Add a little main() function to register.py. Ignore *~ and @* files. More stubs. Merge branch 'master' into gvanrossum (.gitignore)\n\nConflicts:\n\t.gitignore Various stubs (WIP). Add a handy wrapper for the common usage. Sync typeshed. Fixes #1050. Do not emit duplicate top-level def()s. Avoid generating duplicate imports when an exported class is also used as a base class. Sync typeshed Sync typeshed (six.moves.zip). Treat .py/pyi the same. Lots of refactoring too. Force the filename in find_modules_recursive(). When passed a directory, expand to a package or list of file. Refinement: when passed an __init__.py, use the package name (i.e. strip .__init__). Accept multiple files on command line. Fixes issue #935. Change lib_path: insert MYPYPATH in front. Sync typeshed (sqlite3, partial). Fix scope for with statement defining multiple variables. (Fixes issue #1009). Add missing Function to __all__ in runtime typing modules. Add partial json/simplejson stubs. Merge branch 'master' of https://bitbucket.org/jukkaleh/mypy Merge branch 'master' of https://bitbucket.org/jukkaleh/mypy Better stubs for codecs, add stubs for encodings. Merged jukkaleh/mypy into master Somewhat improved docutils stubs. Merged jukkaleh/mypy into master Add __name__ and __file__ to ModuleType. Merge branch 'master' of https://bitbucket.org/gvanrossum/mypy-gvanrossum Merged jukkaleh/mypy into master Kill trailing whitespace. (Dropbox server lint doesbn't like it.) Update inspect.py stubs. list.pop() has an optional integer argument. Merge branch 'master' into gvanrossum Ignore *~ and @*. Use relative imports. Update README to mention running unittests with py.test. Add a little main() function to register.py. Ignore *~ and @* files. More stubs. Merge branch 'master' into gvanrossum (.gitignore)\n\nConflicts:\n\t.gitignore Various stubs (WIP). Add a handy wrapper for the common usage. Remove merge turds.\nBreak long lines.\nRemove item that was rolled back (float formatting). Fix a few typos and layout glitches (more work is needed).\nMove 2.5 news to Misc/HISTORY. Removed uses of dict.has_key() from distutils, and uses of\ncallable() from copy_reg.py, so the interpreter now starts up\nwithout warnings when '-3' is given.  More work like this needs to\nbe done in the rest of the stdlib. Remove news about float repr() -- issue 1580 is still in limbo. In the recursive debug command, pass Pdb arguments (completekey, stdin, stdout)\nto the recursive Pdb instance. In the experimental 'Scanner' feature, the group count was set wrong. Backport doc fixes from 2.6.  These are all things that were already\nsupported but weren't in the docs, like conditional backreferences. In the experimental 'Scanner' feature, the group count was set wrong. Backport r59862 (issue #712900): make long regexp matches interruptable\nby signals. Rewrite the list_inline_repeat overflow check slightly differently. Rewrite the list_inline_repeat overflow check slightly differently. Silence a compiler warning. News for some crashers I fixed recently.\nAlso removed three non-ASCII chars at start of file. News about recently fixed crashers:\n- A few crashers fixed: weakref_in_del.py (issue #1377858);\n  loosing_dict_ref.py (issue #1303614, test67.py);\n  borrowed_ref_[34].py (not in tracker). Backport r60246.\nFix issue #1303614, test67.py. Fix test67.py from issue #1303614. Fi debug turd -- a call accidentally left out. Turn three recently fixed crashers into regular tests. Fix misleading comment reported in issue #1917. Fix two crashers. Fix two crashers (borrowed_ref_[34].py from the trunk). Backport r60208, skip some tests for huge passwd/group files. I'm tired of these tests breaking at Google due to our large number of\nusers and groups in LDAP/NIS.  So I'm limiting the extra-heavy part of\nthe tests to passwd/group files with at most 1000 entries. This got fixed in r60056. This got fixed for classic classes in r60057,\nand backported to 2.5.2 in 60056. Backport r55080:\nFix for #1303614 and #1174712:\n- __dict__ descriptor abuse for subclasses of built-in types\n- subclassing from both ModuleType and another built-in types Fix an edge case whereby the __del__() method of a classic class could\ncreate a new weakref to the object. Fix an edge case whereby the __del__() method of a classic class could\ncreate a new weakref to the object. Merged revisions 59952-59984 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59952 | thomas.heller | 2008-01-14 02:35:28 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Issue 1821: configure libffi for amd64 on FreeeBSD.\n........\n  r59953 | andrew.kuchling | 2008-01-14 06:48:43 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Update description of float_info\n........\n  r59959 | raymond.hettinger | 2008-01-14 14:58:05 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Fix 1698398:  Zipfile.printdir() crashed because the format string expected a tuple object of length six instead of a time.struct_time object.\n........\n  r59961 | andrew.kuchling | 2008-01-14 17:29:16 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Typo fixes\n........\n  r59962 | andrew.kuchling | 2008-01-14 17:29:44 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Markup fix\n........\n  r59963 | andrew.kuchling | 2008-01-14 17:47:32 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Add many items\n........\n  r59964 | andrew.kuchling | 2008-01-14 17:55:32 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Repair unfinished sentence\n........\n  r59967 | raymond.hettinger | 2008-01-14 19:02:37 -0800 (Mon, 14 Jan 2008) | 5 lines\n\n  Issue 1820:  structseq objects did not work with the % formatting operator or isinstance(t, tuple).\n\n  Orignal patch (without tests) by Leif Walsh.\n........\n  r59968 | raymond.hettinger | 2008-01-14 19:07:42 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Tighten the definition of a named tuple.\n........\n  r59969 | skip.montanaro | 2008-01-14 19:40:20 -0800 (Mon, 14 Jan 2008) | 3 lines\n\n  Better (?) text describing the lack of guarantees provided by qsize(),\n  empty() and full().\n........\n  r59970 | raymond.hettinger | 2008-01-14 21:39:59 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Temporarily revert 59967 until GC can be added.\n........\n  r59971 | raymond.hettinger | 2008-01-14 21:46:43 -0800 (Mon, 14 Jan 2008) | 1 line\n\n  Small grammar nit\n........\n  r59972 | georg.brandl | 2008-01-14 22:55:56 -0800 (Mon, 14 Jan 2008) | 2 lines\n\n  Typo.\n........\n  r59973 | georg.brandl | 2008-01-14 22:58:15 -0800 (Mon, 14 Jan 2008) | 2 lines\n\n  Remove duplicate entry.\n........\n  r59974 | jeffrey.yasskin | 2008-01-14 23:46:24 -0800 (Mon, 14 Jan 2008) | 12 lines\n\n  Add rational.Rational as an implementation of numbers.Rational with infinite\n  precision. This has been discussed at http://bugs.python.org/issue1682. It's\n  useful primarily for teaching, but it also demonstrates how to implement a\n  member of the numeric tower, including fallbacks for mixed-mode arithmetic.\n\n  I expect to write a couple more patches in this area:\n   * Rational.from_decimal()\n   * Rational.trim/approximate() (maybe with different names)\n   * Maybe remove the parentheses from Rational.__str__()\n   * Maybe rename one of the Rational classes\n   * Maybe make Rational('3/2') work.\n........\n  r59978 | andrew.kuchling | 2008-01-15 06:38:05 -0800 (Tue, 15 Jan 2008) | 8 lines\n\n  Restore description of sys.dont_write_bytecode.\n\n  The duplication is intentional -- this paragraph is in a section\n  describing additions to the sys module, and there's a later section\n  that mentions the switch.  I think most people scan the what's-new and\n  don't read it in detail, so a bit of duplication is OK.\n........\n  r59984 | guido.van.rossum | 2008-01-15 09:59:29 -0800 (Tue, 15 Jan 2008) | 3 lines\n\n  Issue #1786 (by myself): pdb should use its own stdin/stdout around an\n  exec call and when creating a recursive instance.\n........ Issue #1786 (by myself): pdb should use its own stdin/stdout around an\nexec call and when creating a recursive instance. Patch #1830 by Peter Harris, fix some 2.x-isms. Use bash, so echo -n will do the right thing. Forgot to backport the rest of #1637. Add some missing news.  Add some periods. Issue #1393: object_richcompare() returns NotImplemented instead of\n False if the objects aren't equal, to give the other side a chance. Backport r59758.\nPatch #1637: fix urlparse for URLs like 'http://x.com?arg=/foo'.\nFix by John Nagle. Add John Nagle (of issue #1637). Patch #1637: fix urlparse for URLs like 'http://x.com?arg=/foo'.\nFix by John Nagle. Fix merge glitch. Patch #1698 by Senthil: allow '@' in username when parsed by urlparse.py. Patch #1725 by Mark Dickinson, fixes incorrect conversion of -1e1000\nand adds errors for -0x. Backport r57216 (see issue #1731).\nAdd a hack (originally devised in a slightly different form by Thomas Wouters)\nto prevent spurious tracebacks when a daemon thread's cleanup happens to wake\nup when the world around it has already been destroyed.\n\nThis also backports other small changes to this file, essentially making\nit identical to the trunk version. Bug #1301: fixed a bad assert in _tkinter. Fix bug #1301 -- a bad assert in _tkinter. Issue #1700, reported by Nguyen Quan Son, fix by Fredruk Lundh:\nRegular Expression inline flags not handled correctly for some unicode\ncharacters.  (Forward port from 2.5.2.) Issue #1700, reported by Nguyen Quan Son, fix by Fredruk Lundh:\nRegular Expression inline flags not handled correctly for some unicode\ncharacters. Add some news items I missed.  Careful inspection of the svn log output\nreveals that a lot more are missing.  If you checked anything into the\n2.5.2 branch without updating Misc/NEWS, please correct your mistake! Show in the sys.version string (bot not elsewhere) that this is more\nthan the 3.0a2 release. Patch #1696.  Don't attempt to close None in dry-run mode. Patch #1696.  Don't attempt to call None.close() in dry-run mode. Get rid of raw_input() emulation, use its reincarnation as input().\nSee Issue 1707. Fix issue #1707.  When raw_input() was removed, it was incorrectly replaced\nwith sys.stdin.readline().  I wonder how many other places are affected\nby the same bug? Patch #1703 by Philip Jenvey -- getpass() should flush after writing prompt. Fix an odd error which would only occur close to new year's eve, due\nto use of datetime.datetime.now() instead of utcnow() for comparison.\n(I think the test can still fail if it's executed pretty much *at*\nnew year's eve, but that's not worth fixing.) Merge changes from 59576 from trunk to p3yk branch; these were skipped\nin the regular merge.  Fixes issue #1693. Improve performance of built-in any()/all() by avoiding PyIter_Next() --\nusing a trick found in ifilter().\nFeel free to backport to 2.5. Fix issue #1667.  The _Printer() class was using sys.stdin.readline()\ninstead of input() to read the user's input (since at some point in\nthe past raw_input() was removed), but the code used to decode the\ninput wasn't changed.  Fixed it by going back to input(), which has\nsince been added back with the same semantics as the old raw_input(). Patch #1672 by Joseph Armbruster.  Use tempdir() to get a temporary directory. Patch #1549 by Thomas Herve.\nThis changes the rules for when __hash__ is inherited slightly,\nby allowing it to be inherited when one or more of __lt__, __le__,\n__gt__, __ge__ are overridden, as long as __eq__ and __ne__ aren't. Patch #1583 by Adam Olsen.\n\nThis adds signal.set_wakeup_fd(fd) which sets a file descriptor to\nwhich a zero byte will be written whenever a C exception handler runs.\n\nI added a simple C API as well, PySignal_SetWakeupFd(fd). Issue #1645 by Alberto Bertogli.  Fix a comment. Patch #1608.  Someone with access to autoconf 2.61 or higher needs to\nrun it and check in the resulting configure file. Bug #1608: use -fwrapv when GCC supports it.  This is important, newer\nGCC versions may optimize away overflow buffer overflow checks without\nthis option!  Thanks to Ismail Donmez.  No thanks to the GCC devs. Explicitly close pipes so test_ctypes won't appear to randomly leak\n+33 or -33 references.  (See discussion in #1597.) Backport patch #1643738. Patch #1643738 by Ulisses Furquim -- make the is_tripped variable\nin signalmodule.c more robust.  Includes Martin von Loewis's suggestion\nto set is_tripped after .tripped. Remove a 2.2-ism. Make Decimal a subclass of Real and Inexact. Updated release notes (to match what's on python.org/download/releases/3.0/). Be (just a bit :) more specific about release date. Tagging 3.0a2 for release.  Fingers crossed. Reverting revision 59394.  We'll sort this out later. Fix the leaks in test_ssl.  Issue 1469.  Patch by Christian Heimes:\n(a) added GC support to the PySSL object\n(b) move the call to _real_close() from __del__ methods in Python to\nPySSL_dealloc().\n(c) remove those __del__ methods -- this makes SSL and socket objects GC'able. Fix a last use of file() that should be open(). Some Windows notes by Christian. Small set of updates (with Jeffrey's OK). Get ready for releasing 3.0a2.\n(Next: update the whatsnew docs.) Fix the rest of issue 1400, by introducing a proper implementation of\nline buffering.  The TextIOWrapper class no longer calls isatty() on\nevery write() call. Believe it or not, the addition of flush() calls broke two unittests.\nThis fixes them (by updating the \"golden\" output file). Solve issue 1400 at least in part -- whenever we run Python code, at the end\nwe also flush stderr and stdout.  (XXX this may override errors if there's a problem\nflushing.) Merged revisions 59304-59312 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59306 | andrew.kuchling | 2007-12-03 13:28:41 -0800 (Mon, 03 Dec 2007) | 1 line\n\n  Grammar fix\n........\n  r59307 | guido.van.rossum | 2007-12-03 14:02:10 -0800 (Mon, 03 Dec 2007) | 2 lines\n\n  Shut up a compiler warning.\n........\n  r59312 | martin.v.loewis | 2007-12-03 15:09:04 -0800 (Mon, 03 Dec 2007) | 3 lines\n\n  Forward-port r59310:\n  os.access now returns True on Windows for any existing directory.\n........ Add an errors parameter to open() and TextIOWrapper() to specify error handling. Shut up a compiler warning. Rename the internal name of dictproxy -> dict_proxy,\nin analogy with dict_keys etc. Merged revisions 59212-59225 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59218 | georg.brandl | 2007-11-29 09:01:20 -0800 (Thu, 29 Nov 2007) | 2 lines\n\n  Fix reference target.\n........\n  r59219 | georg.brandl | 2007-11-29 09:02:34 -0800 (Thu, 29 Nov 2007) | 4 lines\n\n  Add examples to the ConfigParser documentation.\n\n  Credits go to Thomas Lamb, who wrote this as a task in the GHOP contest.\n........\n  r59223 | guido.van.rossum | 2007-11-29 10:25:12 -0800 (Thu, 29 Nov 2007) | 2 lines\n\n  Fix bug #1517, a segfault in lookdict().\n........\n  r59224 | georg.brandl | 2007-11-29 10:33:01 -0800 (Thu, 29 Nov 2007) | 2 lines\n\n  Spaces vs. Tabs.\n........ Fix bug #1517, a segfault in lookdict(). Fix bug #1517, a possible segfault in lookup(). Patch # 1507 by Mark Dickinson.  Make complex(x, -0) retain the sign of\nthe imaginary part (as long as it's not complex).\nBackport candidate? Merged revisions 59107-59186 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n(Note: some conflicts in the PCbuild9 directory reverted.  Sorry Christian!)\n\n........\n  r59120 | christian.heimes | 2007-11-22 03:21:16 -0800 (Thu, 22 Nov 2007) | 3 lines\n\n  Backport of the PCbuild9 directory from the py3k branch.\n  I've finished the last task for the PCbuild9 directory today. I don't think there is much left to do. Now you can all play around with the shiny new VS 2008 and try the PGO builds. I was able to get a speed improvement of about 10% on py3k.\n  Have fun! :)\n........\n  r59126 | brett.cannon | 2007-11-22 16:06:51 -0800 (Thu, 22 Nov 2007) | 2 lines\n\n  Fix a bug in the test for using __loader__.get_data().\n........\n  r59131 | christian.heimes | 2007-11-22 23:05:03 -0800 (Thu, 22 Nov 2007) | 1 line\n\n  Backport of PCbuild9 fixes from py3k r59130\n........\n  r59132 | christian.heimes | 2007-11-23 01:10:36 -0800 (Fri, 23 Nov 2007) | 2 lines\n\n  Applied patch #1754273 and #1754271 from Thomas Glee\n  The patches are adding deprecation warnings for back ticks and <>\n........\n  r59133 | christian.heimes | 2007-11-23 04:12:02 -0800 (Fri, 23 Nov 2007) | 2 lines\n\n  Fixed problems in the last commit. Filenames and line numbers weren't reported correctly.\n  Backquotes still don't report the correct file. The AST nodes only contain the line number but not the file name.\n........\n  r59134 | christian.heimes | 2007-11-23 04:16:35 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  How did the comment get there?\n........\n  r59135 | christian.heimes | 2007-11-23 05:25:31 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  And yet another fix for the patch. Paul Moore has send me a note that I've missed a declaration. The additional code has moved the declaration in the middle of the block.\n........\n  r59136 | andrew.kuchling | 2007-11-23 05:37:39 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  Add item\n........\n  r59137 | skip.montanaro | 2007-11-23 09:08:35 -0800 (Fri, 23 Nov 2007) | 2 lines\n\n  Make trace and doctest play nice together (issue 1429818).  Will backport.\n........\n  r59139 | skip.montanaro | 2007-11-23 09:12:47 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  issue 1429818\n........\n  r59144 | facundo.batista | 2007-11-23 09:59:00 -0800 (Fri, 23 Nov 2007) | 10 lines\n\n\n  Major change in the internal structure of the Decimal\n  number: now it does not store the mantissa as a tuple\n  of numbers, but as a string.\n\n  This avoids a lot of conversions, and achieves a\n  speedup of 40%. The API remains intact.\n\n  Thanks Mark Dickinson.\n........\n  r59146 | facundo.batista | 2007-11-23 10:14:50 -0800 (Fri, 23 Nov 2007) | 3 lines\n\n\n  Test cases from Cowlishaw, v2.57. All are pased cleanly.\n........\n  r59156 | christian.heimes | 2007-11-23 17:36:02 -0800 (Fri, 23 Nov 2007) | 2 lines\n\n  Added filename to compiling struct based on Martin's suggestion.\n  I'm wonder why I was trying to add the filename to the node all the time. The compiling struct is more obvious.\n........\n  r59158 | christian.heimes | 2007-11-23 17:53:59 -0800 (Fri, 23 Nov 2007) | 2 lines\n\n  Backport of fixes from py3k branch\n  svn merge -r59131:HEAD ../../py3k/PCbuild9/ .\n........\n  r59159 | skip.montanaro | 2007-11-23 20:29:08 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  revert change that breaks test_doctest (which I forgot to run - sorry)\n........\n  r59162 | skip.montanaro | 2007-11-23 20:31:15 -0800 (Fri, 23 Nov 2007) | 1 line\n\n  revert\n........\n  r59164 | georg.brandl | 2007-11-24 03:31:46 -0800 (Sat, 24 Nov 2007) | 3 lines\n\n  #1344: document that you need to open std{in,out,err} with PIPE if you want\n  communicate() to work as described.\n........\n  r59165 | georg.brandl | 2007-11-24 03:39:13 -0800 (Sat, 24 Nov 2007) | 2 lines\n\n  #1467: fix documentation for TestResult.add{Error,Failure}.\n........\n  r59166 | georg.brandl | 2007-11-24 03:42:14 -0800 (Sat, 24 Nov 2007) | 2 lines\n\n  #1355: remove mention of PyXML from xml.dom docs.\n........\n  r59169 | amaury.forgeotdarc | 2007-11-24 05:20:22 -0800 (Sat, 24 Nov 2007) | 2 lines\n\n  Warning \"<> not supported in 3.x\" should be enabled only when the -3 option is set.\n........\n  r59170 | amaury.forgeotdarc | 2007-11-24 05:44:17 -0800 (Sat, 24 Nov 2007) | 3 lines\n\n  Issue #1445: Fix a SystemError when accessing the ``cell_contents``\n  attribute of an empty cell object.  Now a ValueError is raised.\n........\n  r59172 | georg.brandl | 2007-11-24 05:56:09 -0800 (Sat, 24 Nov 2007) | 3 lines\n\n  #1735632: add O_NOATIME constant to os module.\n  Also document a few other O_ constants that were missing from documentation.\n........\n  r59173 | skip.montanaro | 2007-11-24 06:30:47 -0800 (Sat, 24 Nov 2007) | 1 line\n\n  back in these go - thanks to Titus Brown for the fix\n........\n  r59176 | martin.v.loewis | 2007-11-24 10:33:40 -0800 (Sat, 24 Nov 2007) | 2 lines\n\n  Bug #1494: Document that appendChild removes first.\n........\n  r59186 | guido.van.rossum | 2007-11-26 14:16:49 -0800 (Mon, 26 Nov 2007) | 2 lines\n\n  A thread-less variant of brownian.py, submitted by Michele Simoniato.\n........ A thread-less variant of brownian.py, submitted by Michele Simoniato. Open output files in text mode, after all they are text files.\n(Binary mode caused problems when \"python\" was 3.0.) Merged revisions 59105-59106 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59106 | guido.van.rossum | 2007-11-21 16:55:51 -0800 (Wed, 21 Nov 2007) | 3 lines\n\n  Backport of _abccoll.py by Benjamin Arangueren, issue 1383.\n  With some changes of my own thrown in (e.g. backport of r58107).\n........ Backport of _abccoll.py by Benjamin Arangueren, issue 1383.\nWith some changes of my own thrown in (e.g. backport of r58107). Merged revisions 59077-59104 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59078 | brett.cannon | 2007-11-20 16:16:20 -0800 (Tue, 20 Nov 2007) | 2 lines\n\n  Remove a unneeded line that had typos.\n........\n  r59081 | christian.heimes | 2007-11-20 16:46:21 -0800 (Tue, 20 Nov 2007) | 1 line\n\n  Fixed #1372: zlibmodule.c: int overflow in PyZlib_decompress\n........\n  r59082 | brett.cannon | 2007-11-20 16:47:36 -0800 (Tue, 20 Nov 2007) | 6 lines\n\n  doctest assumed that a package's __loader__.get_data() method used universal\n  newlines; it doesn't.  To rectify this the string returned replaces all\n  instances of os.linesep with '\\n' to fake universal newline support.\n\n  Backport candidate.\n........\n  r59084 | brett.cannon | 2007-11-20 16:58:03 -0800 (Tue, 20 Nov 2007) | 2 lines\n\n  Add a missing check before deleting a package's __loader__.\n........\n  r59088 | christian.heimes | 2007-11-20 17:17:28 -0800 (Tue, 20 Nov 2007) | 2 lines\n\n  Added NEWS entry\n  Thanks for the reminder, Brett\n........\n  r59089 | amaury.forgeotdarc | 2007-11-20 17:38:26 -0800 (Tue, 20 Nov 2007) | 2 lines\n\n  Add a NEWS entry for r59076.\n........\n  r59091 | christian.heimes | 2007-11-20 18:50:06 -0800 (Tue, 20 Nov 2007) | 2 lines\n\n  Final fix for #1403\n  The Windows installer and some Linux distros are using compileall to compile all py files in the Lib/ directory. However no test exists to check if all py files can be compiled. I figured out that make testall is the easiest way to test compileall.\n........ Add ABC ByteString which unifies bytes and bytearray (but not memoryview).\nThere's no ABC for \"PEP 3118 style buffer API objects\" because there's no\nway to recognize these in Python (apart from trying to use memoryview()\non them).\nNote that array.array really should be registered as a MutableSequence\nbut that would require importing it whenever collections is imported. Convert the socket module to insist on bytes for input, and to return bytes\n(not bytearray) on output.  Discovered a bunch of places that were still\ndepending on it accepting text strings. Fix error messages for buffer objects to say \"bytes\" instead of \"string\". More PyBytes -> PyString. Make os.read() return bytes, not bytearray. Return PyString, not PyBytes, for a bytes array.\nClean up trailing whitespace. Add compatibility guideline for platform.py. Insert blank line to remove ReST warning/2. Record recent changes of heart (see python-dev):\n\n- No warnings for operations that changed semantics between 2.3 and 2.4.\n\n- Trailing 'L' remains in repr() of long ints until Python 3.0. Remove vestigial reference to __reversed__. Add lots of detail and examples to the Details section.  Free\nvariables are now captured at definition time. Schedule update.  Plan for a beta 1 release on 4/25/03. Add some hopeful PEPS. Explain feature freeze.\nMention IDLE. Adjust schedule.  Add some issues that might be resulved before 2.3b1. Document __reduce_ex__. Avoid 'I' now there's more than one author.  Other minor nits. I just thought of something: now the syntax looks like if C:E1 else:E2,\nwe can also allow one or more elif parts. Typo (foo -> good). Minor nits. Bozo __getstate__ is gone. Clarify __reduce__ and classic classes more. Rename 'proto' keyword arg to 'protocol' .  Greg Ward's suggestion. Fix grammar. It is *right* associative!  (The example was right. :-) Add 'when' variant. Add and/or alternative and why it doesn't always work.\n\nCorrect origin of ?: and ?! again. Add if C : e1 else e2. Explain that \"e if C\" (without the \"else\" part) is a bad idea. Credit where credit is due.  Also add an extra blank line before the\nsection on ifelse(). Reserve a range for Zope, not specifically for Zope 3. Typo found by Aahz. Add posting-date.  Add note about the copy module.  Remove TBD -- this\nPEP is complete AFAIAC. Add PEP 308: if-then-else expression proposal. Document the extension registry API.\n\nRemove mention of Twisted (they don't want it). Introduce extension codes. Refactored according to 3 main cases. Fix crucial typo found by Niki Spahiev. Added docs for __getstate__ and __setstate__, __getinitargs__ and\n__getnewargs__.  Unfortunately these need to be refactored again\naccording to a different organizing principle. ;-( Misc tweaks and updates. Add __newobj__ and TBD section. Remove text about new pickling; refer to PEP 307 instead. Document extended __reduce__ API. Security issues. Extend intro; add motivation and a section on protocol versions. Claim PEP 307 for extensions to the pickle protocol. Add a more concrete release schedule. PEPs 273+302 have landed.\n\nNew ideas:\n\n  - Add reST?\n\n  - Fix new-style pickling\n\n  - Remove __safe_for_unpickling__ More copyright years found. Add checklist for copyright year change. Add a few more places that have the version number. Remove Minor text tweak. Move optparse and datetime to \"completed\"; move a bunch of other\nthings to \"probably won't make it\", mostly due to lack of energy. Add PEP 302 and some definite words on the release schedule.  Change\nrelease manager to GvR. Added links to new and alternative patches. C3 is checked in. Some updates to the status list. Typo. Delete stage 2 (turn on warnings for long literals).  This seems to\nhave caused some concern on c.l.py.  These weill be illegal in Python\n3.0, but there's no need to warn about them earlier. Add ruling about source code encodings. PEP 293 checked in. Add open issues suggested by effbot. Add note about discrepancies between this PEP and the new sets module. Move PEP 269 back into the realm of possibilities. Move PEP 218 to the Completed features list. Test for assignment to None are easily done in the compiler. Another status update.  Added new sections \"Completed\" and \"Unlikely\". Add a note explaining that changing sign is a special case of losing\nbits for the << operator. Remove author's email addresses.\n\nMention %X (same treatment as %x).\n\nInsert new stage B0, which gives warnings about e.g. 0xffffffff\nwithout semantic changes.  Move the proposed deployment of subsequent\nstages up by one minor revision. Status update. Replace Ping's value judgement by a more neutral explanation of why\niterators need to support __iter__. Add a number of clarifications and updates. Revive PEP 218 (sets) for 2.3. Let's deprecate the buffer object. Add PEP 263 as slated for inclusion. Typo (has_keys -> has_key), found by F.Pinard. Another status update. Various status updates. We don't check in the HTML, only the text version. Added another wish.  Removed a bunch of fulfilled wishes (no guarantee\nthat I caught all of 'em). Don't use 'strorunicodeobj' as the generic object name.  Use just\n'obj' -- after all, you don't know that it's a string or unicode\nobject just yet, that's what the test in these examples is for! Add Optik. Remove mention of PEP 272 -- Andrew doesn't plan to submit any code\nbased on it to 2.3. Add silent deprecation. Take authorship of 283 froM Hylton. Total rewrite.  Claimed authorship.  (Will update PEP 0 too.) Add a note about the expected schedule changes. Two tiny clarifications. Minor nits.  Add strong preference for spaces over tabs. Add live link to the SF patch. PEP 285 is Final. PEP 283 is not finished until 2.3 is released. Accept PEP 285. Accepted, closed the review period, pronounced all open issues, and\nadded clarification and extra opinions to various spots.  Will post\nonce more. Specify that pickle and marshal roundtrip. Clarify once more that \"if []\" will remain valid Python forever. - Add proposal for categorization according to Laura.\n\n- Use sf redirector URLs. Finish incomplete sentence. Add reference to COM. Incorporated review feedback.  Added Jython argument.  Added mention\nof standard library.  Added clarification that \"if <list>:\" remains\nas valid as ever.  Minor rewordings all over, got rid of \"e.g.\" again. Typo fix. Add a section with the most pressing issues for reviewers. Shorter URL for patch. On the eve of posting this to c.l.py, add a response to a common but\nnonsensical suggestion (that x == True should hold for all true x). Update SF patch reference. Slightly updated; corrected typos; added one extra argument. Add motivation (supplied by Shane Hathaway).\n\nExplain what happens when a block contains a yield.\n\nAdd comparison to thunks.\n\nAdd examples. Advanced warning that another rewrite of the exception handling\nmechanics is pending. Settled on an extra argument to __next__() and next() to distinguish\nbetween values and exceptions. In the original translation for block-statement, reset ret = False\neach time before executing BLOCK1.  (Thanks to Duncan Booth.) Add an alternative __next__() API to pass arbitrary exceptions in.  I\nlike this better. Fix a bug in the translation of a classic 'for' loop. Fix the logic for deciding whether to return, raise or break; renaming\n'exc' to 'val'.\n\nAdd public domain copyright notice. Add PEP 340. Initial draft. Correct the intention for basestring. Fix errors in references. Remove leading blank line so pep2html recognizes this file. Add compatibility guideline for platform.py. Insert blank line to remove ReST warning/2. Record recent changes of heart (see python-dev):\n\n- No warnings for operations that changed semantics between 2.3 and 2.4.\n\n- Trailing 'L' remains in repr() of long ints until Python 3.0. Remove vestigial reference to __reversed__. Add lots of detail and examples to the Details section.  Free\nvariables are now captured at definition time. Schedule update.  Plan for a beta 1 release on 4/25/03. Add some hopeful PEPS. Explain feature freeze.\nMention IDLE. Adjust schedule.  Add some issues that might be resulved before 2.3b1. Document __reduce_ex__. Avoid 'I' now there's more than one author.  Other minor nits. I just thought of something: now the syntax looks like if C:E1 else:E2,\nwe can also allow one or more elif parts. Typo (foo -> good). Minor nits. Bozo __getstate__ is gone. Clarify __reduce__ and classic classes more. Rename 'proto' keyword arg to 'protocol' .  Greg Ward's suggestion. Fix grammar. It is *right* associative!  (The example was right. :-) Add 'when' variant. Add and/or alternative and why it doesn't always work.\n\nCorrect origin of ?: and ?! again. Add if C : e1 else e2. Explain that \"e if C\" (without the \"else\" part) is a bad idea. Credit where credit is due.  Also add an extra blank line before the\nsection on ifelse(). Reserve a range for Zope, not specifically for Zope 3. Typo found by Aahz. Add posting-date.  Add note about the copy module.  Remove TBD -- this\nPEP is complete AFAIAC. Add PEP 308: if-then-else expression proposal. Document the extension registry API.\n\nRemove mention of Twisted (they don't want it). Introduce extension codes. Refactored according to 3 main cases. Fix crucial typo found by Niki Spahiev. Added docs for __getstate__ and __setstate__, __getinitargs__ and\n__getnewargs__.  Unfortunately these need to be refactored again\naccording to a different organizing principle. ;-( Misc tweaks and updates. Add __newobj__ and TBD section. Remove text about new pickling; refer to PEP 307 instead. Document extended __reduce__ API. Security issues. Extend intro; add motivation and a section on protocol versions. Claim PEP 307 for extensions to the pickle protocol. Add a more concrete release schedule. PEPs 273+302 have landed.\n\nNew ideas:\n\n  - Add reST?\n\n  - Fix new-style pickling\n\n  - Remove __safe_for_unpickling__ More copyright years found. Add checklist for copyright year change. Add a few more places that have the version number. Remove Minor text tweak. Move optparse and datetime to \"completed\"; move a bunch of other\nthings to \"probably won't make it\", mostly due to lack of energy. Add PEP 302 and some definite words on the release schedule.  Change\nrelease manager to GvR. Added links to new and alternative patches. C3 is checked in. Some updates to the status list. Typo. Delete stage 2 (turn on warnings for long literals).  This seems to\nhave caused some concern on c.l.py.  These weill be illegal in Python\n3.0, but there's no need to warn about them earlier. Add ruling about source code encodings. PEP 293 checked in. Add open issues suggested by effbot. Add note about discrepancies between this PEP and the new sets module. Move PEP 269 back into the realm of possibilities. Move PEP 218 to the Completed features list. Test for assignment to None are easily done in the compiler. Another status update.  Added new sections \"Completed\" and \"Unlikely\". Add a note explaining that changing sign is a special case of losing\nbits for the << operator. Remove author's email addresses.\n\nMention %X (same treatment as %x).\n\nInsert new stage B0, which gives warnings about e.g. 0xffffffff\nwithout semantic changes.  Move the proposed deployment of subsequent\nstages up by one minor revision. Status update. Replace Ping's value judgement by a more neutral explanation of why\niterators need to support __iter__. Add a number of clarifications and updates. Revive PEP 218 (sets) for 2.3. Let's deprecate the buffer object. Add PEP 263 as slated for inclusion. Typo (has_keys -> has_key), found by F.Pinard. Another status update. Various status updates. We don't check in the HTML, only the text version. Added another wish.  Removed a bunch of fulfilled wishes (no guarantee\nthat I caught all of 'em). Don't use 'strorunicodeobj' as the generic object name.  Use just\n'obj' -- after all, you don't know that it's a string or unicode\nobject just yet, that's what the test in these examples is for! Add Optik. Remove mention of PEP 272 -- Andrew doesn't plan to submit any code\nbased on it to 2.3. Add silent deprecation. Take authorship of 283 froM Hylton. Total rewrite.  Claimed authorship.  (Will update PEP 0 too.) Add a note about the expected schedule changes. Two tiny clarifications. Minor nits.  Add strong preference for spaces over tabs. Add live link to the SF patch. PEP 285 is Final. PEP 283 is not finished until 2.3 is released. Accept PEP 285. Accepted, closed the review period, pronounced all open issues, and\nadded clarification and extra opinions to various spots.  Will post\nonce more. Add -b/--browse option, which uses the webbrowser module to show the\ngenerated HTML in your browser.  (The local HTML without -i, the\nremote HTML with -i; PEP 0 when no pep argument is given.)\n\nFix the help text for -i (referenced sf_username which wasn't\ndefined).\n\nSort the files when processing all of them (glob doesn't sort, alas). Add link to implementation. Some clarifications.  Add section on compatibility (and why this means\nour bool is not very 'pure'). Add callable() to the list of functions returning 'bool'. Fix subtle bugs in &|^ overloading. More rationale and issues. Some more clarifications. Clarify issues baded upon the first questions.\nDon't add \"(python-dev)\" to Post-History header. PEP 285: Adding a bool type Add missing PUSH(x) statements to the C code. Add Ping's \"always doubly-indirect\" idea.  Remove mistaken pseudo-C\nfor Tim's ideal. Also show C pseudo-code of Tim's version. More FAQs. Answer questions by MAL; add drawing by Ping. Add Copyright and Emacs crud. Oops, Skip's and Jeremy's approach already have their own PEP.\nReference those instead of trying to incorporate them. PEP 280 is my own; Jeremy and Skip already have PEPs describing their\napproaches. Add detailed description of my approach. Add PEP 280, optimizing access to globals. Add instructions to submit a Python news item from SF. Apply Strunk & White.  (Paul Flowerman.) Update open issues a bit. Buffer interface thing got fixed. Quick merge of Barry's feedback of four weeks ago. ;-( Small rewordings based on Terry Reedy's feedback (finally).\nAdded a few more open issues. Add an essential missing -r option to the cvs command to check out the\nbranch. Add another way to look at the motivation for the new MRO. Insert a3 between a2 and a4. Rename the -D option to -Q, to avoid a Jython option name conflict.\n\nDocument the 4th value of this option (warnall).\n\nAlso update some other items that are now resolved or close to being\nresolved. Update posted-date and added implementation information. Explain the semantics of OverflowWarning, for the benefit of the\ndocumenter.  Clarify a few other issues (some brought up by Martin von\nLoewis in private email). Add an example. Update post history. Completely revamped.  Pick implementation plan 2.  Propose to do the\neasy bit in 2.2, the rest (introducing incompatibilities) in following\nreleases. Make Barry co-author; slip the schedule (including a new a3 release);\ntighten list of planned features. Add some more feature requests from SF. The getopt wish is fulfilled!\n\nAdd wish about building a shared lib. Add nice summary by Marcin 'Qrczak' Kowalczyk from c.l.py for and\nagainst unifying ints and rats. Add Michael Hudson's \"Future statements in simulated shells\". Add note about similarity between class methods and Delphi's virtual\nclass methods. Discuss x \\ y as rejected variation; reorganize the section on\nvariations slightly to allow more easily adding new variations.\n\nAdd more discussion of why I don't like version directives. Add a note explaining how PEP 252 enables a different solution. Reorganized the classifications, splitting Active into Accepted and\nOpen.  There are now:\n\n Meta-PEPs (PEPs about PEPs or Process)\n Other Informational PEPs\n Accepted PEPs (accepted for Python 2.2; may not be implemented yet)\n Open PEPs (under consideration for Python 2.2)\n Py-in-the-sky PEPs (not considered for Python 2.2)\n Finished PEPs (done, implemented in CVS)\n Empty PEPs (or containing only an abstract)\n Deferred, Abandoned, and Rejected PEPs\n\nMoved some of the original Active to Finished, some to Py-in-the-sky. Add a Transition section. Lots of updates, more rationale, explicit transition plan. Add question about timing of 3.0. Fix typos detected by Terry Reedy. Some small clarifications based on c.l.py feedback.  Added open issue\nabout __truediv__ vs. __div__ in Python 3.0. Correct typo and inconsistency detected by Hernan M. Foffani. Grab co-authorship of 237. Add open issues.  (Needs more work.) Grab co-authorship; added list of things that will/may change; added\nalternative implementation. Added the conversion of very large longs as an open issue. Changed tht title of PEP 238. Worked in most of the comments on the newsgroup on the previous draft.\n\nEven changed the title. Some more alternatives and questions; added an \"open issues\" section. Completely reworked to be more specific about the motivation, the\nimplementation and the transition. Withdraw ASAP promise.  Add note about comparisons between longs and\nfloats. Add note about pending update. Grab co-authorship.\n\nI'll be reworking this to reflect the discussion in the newsgroup next. Updates by Moshe to match the patch; grab co-authorship.\n\nI'll be reworking this to reflect the discussion in the newsgroup\nnext. Grabbing co-authorship of PEP 228 and 238. Add link to implementation as patch. Added a small example before I have to go. Add a section on static methods and class methods.\n\nAdd a very uncooked section on the C API. Note to self. Exhausted myself today by adding a long section on the new MRO. Added a section on multiple inheritance. Just a little bit more cleanup.  Added a TODO list. Another intermediate checkin.  Removed a lot of lies about an older\nidea for what tp_alloc() should be. Intermediate checkin (documented tp_new, tp_init, tp_alloc properly). Simplify the attribute descriptor spec: the only attributes defined\nare now __name__, __doc__, __objclass__, __get__ and __set__.  This is\nalso what's implemented now.  A bunch of things (including the\nprecedence rules used when an attribute exists both in the instance\n__dict__ and in the class __dict__) are clarified.\n\nThe C API and other stuff still need to be fleshed out. If we're going to group them by hundreds, the blank line belongs\n*before* PEP 100, not after it. Make the section on consistency a separate section, as in the\noriginal.  Close an unmatched parenthesis at the very end. Conform to Barry's new PEP referencing guidelines. Mention changes to PyRange_New(). Style Guide for C Code PEP 260: simplify xrange() Change 2.2 release schedule author to GvR. Add some text to the release schedule.\n\nThe release dates are picked pretty arbitrary: 3 weeks apart, on\nWednesdays. Add back the Emacs stanza. Fix typo reported by Andrew MacKeith. Add van Rossum as co-author of PEP 257. New version from David Goodger, where he makes me co-author (since\nit's mostly lifted from my style guide).  I don't plan to actively\ncontribute much -- David is the primary author.\n\nThere are many miscellaneous updates here. Make a dummy PEP so that PEP 0 doesn't have a broken link. More good stuff.  Consider this just a checkpoint. Clarified the paragraph about creating a subtype in C. Another intermediate update.  I've rewritten the requirements for a\nbase type to be subtypable.  Needs way more work! PEP 259 rejected by user community with record unanimity. PEP 259: Omit printing newline after newline I just figured out how to make automatic hyperlinks to other PEPs. Add implementation information. Add a lot of text.  A looooooot of text.  Way too much rambling.  And\nit isn't even finished.  I'll do that later.  But at least there's\nsome text here now... Checking in a stub of PEP 253. I've implemented iterkeys(), itervalues() and iteritems() methods for\ndictionaries.  These do away with the myth that iterating over the\nkeys and extracting the values is as fast as iterating over the items;\nit is about 7% slower. Add proposal to make files their own iterator. Correct typos and add bits of discussion.  Also add another \"chief\nvirtue\". Update post-history; corrected a typo. Moved all the discussion items together at the end, in two sections\n\"Open Issues\" and \"Resolved Issues\". Typo: has_item() should be has_key().  Thanks Moshe. Specify that pickle and marshal roundtrip. Clarify once more that \"if []\" will remain valid Python forever. - Add proposal for categorization according to Laura.\n\n- Use sf redirector URLs. Finish incomplete sentence. Add reference to COM. Incorporated review feedback.  Added Jython argument.  Added mention\nof standard library.  Added clarification that \"if <list>:\" remains\nas valid as ever.  Minor rewordings all over, got rid of \"e.g.\" again. Typo fix. Add a section with the most pressing issues for reviewers. Shorter URL for patch. On the eve of posting this to c.l.py, add a response to a common but\nnonsensical suggestion (that x == True should hold for all true x). Update SF patch reference. Slightly updated; corrected typos; added one extra argument. Add -b/--browse option, which uses the webbrowser module to show the\ngenerated HTML in your browser.  (The local HTML without -i, the\nremote HTML with -i; PEP 0 when no pep argument is given.)\n\nFix the help text for -i (referenced sf_username which wasn't\ndefined).\n\nSort the files when processing all of them (glob doesn't sort, alas). Add link to implementation. Some clarifications.  Add section on compatibility (and why this means\nour bool is not very 'pure'). Add callable() to the list of functions returning 'bool'. Fix subtle bugs in &|^ overloading. More rationale and issues. Some more clarifications. Clarify issues baded upon the first questions.\nDon't add \"(python-dev)\" to Post-History header. PEP 285: Adding a bool type Add missing PUSH(x) statements to the C code. Add Ping's \"always doubly-indirect\" idea.  Remove mistaken pseudo-C\nfor Tim's ideal. Also show C pseudo-code of Tim's version. More FAQs. Answer questions by MAL; add drawing by Ping. Add Copyright and Emacs crud. Oops, Skip's and Jeremy's approach already have their own PEP.\nReference those instead of trying to incorporate them. PEP 280 is my own; Jeremy and Skip already have PEPs describing their\napproaches. Add detailed description of my approach. Add PEP 280, optimizing access to globals. Add instructions to submit a Python news item from SF. Apply Strunk & White.  (Paul Flowerman.) Update open issues a bit. Buffer interface thing got fixed. Quick merge of Barry's feedback of four weeks ago. ;-( Small rewordings based on Terry Reedy's feedback (finally).\nAdded a few more open issues. Add an essential missing -r option to the cvs command to check out the\nbranch. Add another way to look at the motivation for the new MRO. Insert a3 between a2 and a4. Rename the -D option to -Q, to avoid a Jython option name conflict.\n\nDocument the 4th value of this option (warnall).\n\nAlso update some other items that are now resolved or close to being\nresolved. Update posted-date and added implementation information. Explain the semantics of OverflowWarning, for the benefit of the\ndocumenter.  Clarify a few other issues (some brought up by Martin von\nLoewis in private email). Add an example. Update post history. Completely revamped.  Pick implementation plan 2.  Propose to do the\neasy bit in 2.2, the rest (introducing incompatibilities) in following\nreleases. Make Barry co-author; slip the schedule (including a new a3 release);\ntighten list of planned features. Add some more feature requests from SF. The getopt wish is fulfilled!\n\nAdd wish about building a shared lib. Add nice summary by Marcin 'Qrczak' Kowalczyk from c.l.py for and\nagainst unifying ints and rats. Add Michael Hudson's \"Future statements in simulated shells\". Add note about similarity between class methods and Delphi's virtual\nclass methods. Discuss x \\ y as rejected variation; reorganize the section on\nvariations slightly to allow more easily adding new variations.\n\nAdd more discussion of why I don't like version directives. Add a note explaining how PEP 252 enables a different solution. Reorganized the classifications, splitting Active into Accepted and\nOpen.  There are now:\n\n Meta-PEPs (PEPs about PEPs or Process)\n Other Informational PEPs\n Accepted PEPs (accepted for Python 2.2; may not be implemented yet)\n Open PEPs (under consideration for Python 2.2)\n Py-in-the-sky PEPs (not considered for Python 2.2)\n Finished PEPs (done, implemented in CVS)\n Empty PEPs (or containing only an abstract)\n Deferred, Abandoned, and Rejected PEPs\n\nMoved some of the original Active to Finished, some to Py-in-the-sky. Add a Transition section. Lots of updates, more rationale, explicit transition plan. Add question about timing of 3.0. Fix typos detected by Terry Reedy. Some small clarifications based on c.l.py feedback.  Added open issue\nabout __truediv__ vs. __div__ in Python 3.0. Correct typo and inconsistency detected by Hernan M. Foffani. Grab co-authorship of 237. Add open issues.  (Needs more work.) Grab co-authorship; added list of things that will/may change; added\nalternative implementation. Added the conversion of very large longs as an open issue. Changed tht title of PEP 238. Worked in most of the comments on the newsgroup on the previous draft.\n\nEven changed the title. Some more alternatives and questions; added an \"open issues\" section. Completely reworked to be more specific about the motivation, the\nimplementation and the transition. Withdraw ASAP promise.  Add note about comparisons between longs and\nfloats. Add note about pending update. Grab co-authorship.\n\nI'll be reworking this to reflect the discussion in the newsgroup next. Updates by Moshe to match the patch; grab co-authorship.\n\nI'll be reworking this to reflect the discussion in the newsgroup\nnext. Grabbing co-authorship of PEP 228 and 238. Add link to implementation as patch. Added a small example before I have to go. Add a section on static methods and class methods.\n\nAdd a very uncooked section on the C API. Note to self. Exhausted myself today by adding a long section on the new MRO. Added a section on multiple inheritance. Just a little bit more cleanup.  Added a TODO list. Another intermediate checkin.  Removed a lot of lies about an older\nidea for what tp_alloc() should be. Intermediate checkin (documented tp_new, tp_init, tp_alloc properly). Simplify the attribute descriptor spec: the only attributes defined\nare now __name__, __doc__, __objclass__, __get__ and __set__.  This is\nalso what's implemented now.  A bunch of things (including the\nprecedence rules used when an attribute exists both in the instance\n__dict__ and in the class __dict__) are clarified.\n\nThe C API and other stuff still need to be fleshed out. If we're going to group them by hundreds, the blank line belongs\n*before* PEP 100, not after it. Make the section on consistency a separate section, as in the\noriginal.  Close an unmatched parenthesis at the very end. Conform to Barry's new PEP referencing guidelines. Mention changes to PyRange_New(). Style Guide for C Code PEP 260: simplify xrange() Change 2.2 release schedule author to GvR. Add some text to the release schedule.\n\nThe release dates are picked pretty arbitrary: 3 weeks apart, on\nWednesdays. Add back the Emacs stanza. Fix typo reported by Andrew MacKeith. Add van Rossum as co-author of PEP 257. New version from David Goodger, where he makes me co-author (since\nit's mostly lifted from my style guide).  I don't plan to actively\ncontribute much -- David is the primary author.\n\nThere are many miscellaneous updates here. Make a dummy PEP so that PEP 0 doesn't have a broken link. More good stuff.  Consider this just a checkpoint. Clarified the paragraph about creating a subtype in C. Another intermediate update.  I've rewritten the requirements for a\nbase type to be subtypable.  Needs way more work! Add (minimal) discussion about restartability. BDFL pronouncement on next() vs. __next__() vs. __call__().\n\nAdd mailing list pointers.\n\nAdd discussion on \"once-stopped-always-stopped\". Added some more discussion. Adding MAL's comment about next() vs. __next__(). Added attribute descriptor API.\n\nStill need to do the signature object API. Add discussion about next() vs. __next__().  So far I'm liking next()\njut fine. Add van Rossum as co-author to PEP-234 (Iterators). Almost completely rewritten, focusing on documenting the current state\nof affairs, filling in some things still under discussion.\n\nPing, I hope this is okay with you.  If you want to revive \"for\nkeys:values in dict\" etc., you'll write a separate PEP, right? Check in a little more about attribute descriptors.  More to follow\nlater today. Correct typo found by Thomas Heller (swapped __methods__ and\n__members__). Some more writing, specifying the core elements of the class-based\nintrospection API.  I'll add attribute descriptors tomorrow. This PEP still needs a Copyright note.  I've added an XXX (I can't\nvery well place it in the public domain for Jeremy :-). Add the first bits of PEP 252, Making Types Look More Like Classes. Updated for clarity and to reflect reality.  Jeremy, there are still\nXXX bits in here.  Also, shouldn't the status be updated to Final? Christian handed this out at Python9.  Might as well save it for\nposterity.  It was written by Gordon. Update release status.  Close several open issues. Some wishes actually got fulfilled!\n\nAdd a new one. Fix typo in the alternate way to spell A<B<C, found by\ngeepokey@yahoo.com (Gumby). Final. Moved 207, 208, 230 to Final status. Finalized this PEP.  Closed all unresolved issues. Andrew withdraws 222 from 2.1. Correct authorship on 207 and 208. Update release date mentioned in intro para. Move 229 to active PEPs -- after all, Andrew seems close to a solution\nalready! Indent the examples to make sure the HTML looks right. Add another wish: a comprehensive email module. Add two new wishes (pdn and cmath). Some stupid mechanical changes, such as remove trailing whitespace,\ndouble spaces between sentences.  Also fix a few typos, add an XXX\nnote, and change the URL for the implementation to be the patch\ndetail page instead of the download page.\n\nI hope Neil doesn't mind. Add responses to Barry's and Fred's concerns.  Message matching is now\ncase insensitive. New version of the PEP.  Changes based upon the second\n(delayed-import) implentation.  Address some of Paul's concerns. Add a missing colon to the first header line, to fix the HTML\nformatting. Rejection notice (with Barry's agreement). __findattr__ is rejected -- the idea is too uncooked and you actually\n*can* do most of this with __getattr__. Revised version, completing a bunch of things that weren't resolved\nbefore.  The implementation was removed from the PEP, it's now in the\nSF patch manager; I'm pretty happy with it! :-) First stab at the Warnings PEP.  I'm still working on the\nimplementation... Fix authorship for the last time\\! This is now ready for discussion.  David, please read -- did I forget\nanything? Checking in some text.  Most of this is simply an Appendix repeating\nwhat David Ascher said in 1998 (before the starship bites the dust\nagain). Add PEP 230, Warning Framework.\nChanged Owner: to Author: in a number of PEPs. Demoted 216 (docstring format) and 229 (using distutils to build) to\npie-in-the-sky.  Reasons: 216 is NOT the consensus of the doc-sig; 229\nis not sufficiently worked out and doesn't seem a priority.  (This can\nstill make it into 2.1 if the author does the work.)\n\nAdded GvR as co-author for 207 (rich comparisons). Update status; fix Zadka's co-ownership of 207/208. Slight grammar and spelling nits; updated mx.Proxy URL; added\nreference to EST's pyweak. Addtwo more wishes: kill thread, Python/python name conflict. Add 228 (numerical model) to the pie-in-the-sky category -- this can't\nbe ready for Python 2.1. Added an index by category. Remove two rejected feature requests. Don't use sys.__stdout__ in examples. Reminder for ustr(). Add UTF-7 request. Add Tim's getopt wish. Wish about dependent buffer objects. Pleas for Unicode support in (e.g.) urllib.quote(). Add another IDLE wish. Add pickle/cPickle exception wish. Properly record Skip's gripe, which was really that the compiler\n*appeared to* accept the first continue but complained about the\nsecond. CGIHTTPServer has been ported to Windows (and possibly even Mac), so\nthis request can go. Add marshal.load*() input checking, for Bug #114754. Added note about signal handling. This PEP is not just for small feature requests; it's also a temporary\nplaceholder for large feature requests, while their PEP hasn't been\nwritten yet.  Changed the title and added some word to the intro to\nthis effect.\n\n(Discussed by Tim & Guido.) More updates -- things are getting done! Extend justifications.  Add print>>None. Added the essence of my post to c.l.py in defense of the new syntax. The popen problem is \"solved\". Accepted PEP-0203. Accepted, but also added a note about a misfeature that should be\nfixed. BDFL pronouncements.\nGot rid of ^L. PEP 259 rejected by user community with record unanimity. PEP 259: Omit printing newline after newline I just figured out how to make automatic hyperlinks to other PEPs. Add implementation information. Add a lot of text.  A looooooot of text.  Way too much rambling.  And\nit isn't even finished.  I'll do that later.  But at least there's\nsome text here now... Checking in a stub of PEP 253. I've implemented iterkeys(), itervalues() and iteritems() methods for\ndictionaries.  These do away with the myth that iterating over the\nkeys and extracting the values is as fast as iterating over the items;\nit is about 7% slower. Add proposal to make files their own iterator. Correct typos and add bits of discussion.  Also add another \"chief\nvirtue\". Update post-history; corrected a typo. Moved all the discussion items together at the end, in two sections\n\"Open Issues\" and \"Resolved Issues\". Typo: has_item() should be has_key().  Thanks Moshe. Add (minimal) discussion about restartability. BDFL pronouncement on next() vs. __next__() vs. __call__().\n\nAdd mailing list pointers.\n\nAdd discussion on \"once-stopped-always-stopped\". Added some more discussion. Adding MAL's comment about next() vs. __next__(). Added attribute descriptor API.\n\nStill need to do the signature object API. Add discussion about next() vs. __next__().  So far I'm liking next()\njut fine. Add van Rossum as co-author to PEP-234 (Iterators). Almost completely rewritten, focusing on documenting the current state\nof affairs, filling in some things still under discussion.\n\nPing, I hope this is okay with you.  If you want to revive \"for\nkeys:values in dict\" etc., you'll write a separate PEP, right? Check in a little more about attribute descriptors.  More to follow\nlater today. Correct typo found by Thomas Heller (swapped __methods__ and\n__members__). Some more writing, specifying the core elements of the class-based\nintrospection API.  I'll add attribute descriptors tomorrow. This PEP still needs a Copyright note.  I've added an XXX (I can't\nvery well place it in the public domain for Jeremy :-). Add the first bits of PEP 252, Making Types Look More Like Classes. Updated for clarity and to reflect reality.  Jeremy, there are still\nXXX bits in here.  Also, shouldn't the status be updated to Final? Christian handed this out at Python9.  Might as well save it for\nposterity.  It was written by Gordon. Update release status.  Close several open issues. Some wishes actually got fulfilled!\n\nAdd a new one. Fix typo in the alternate way to spell A<B<C, found by\ngeepokey@yahoo.com (Gumby). Final. Moved 207, 208, 230 to Final status. Finalized this PEP.  Closed all unresolved issues. Andrew withdraws 222 from 2.1. Correct authorship on 207 and 208. Update release date mentioned in intro para. Move 229 to active PEPs -- after all, Andrew seems close to a solution\nalready! Indent the examples to make sure the HTML looks right. Add another wish: a comprehensive email module. Add two new wishes (pdn and cmath). Some stupid mechanical changes, such as remove trailing whitespace,\ndouble spaces between sentences.  Also fix a few typos, add an XXX\nnote, and change the URL for the implementation to be the patch\ndetail page instead of the download page.\n\nI hope Neil doesn't mind. Add responses to Barry's and Fred's concerns.  Message matching is now\ncase insensitive. New version of the PEP.  Changes based upon the second\n(delayed-import) implentation.  Address some of Paul's concerns. Add a missing colon to the first header line, to fix the HTML\nformatting. Rejection notice (with Barry's agreement). __findattr__ is rejected -- the idea is too uncooked and you actually\n*can* do most of this with __getattr__. Revised version, completing a bunch of things that weren't resolved\nbefore.  The implementation was removed from the PEP, it's now in the\nSF patch manager; I'm pretty happy with it! :-) First stab at the Warnings PEP.  I'm still working on the\nimplementation... Fix authorship for the last time\\! This is now ready for discussion.  David, please read -- did I forget\nanything? Checking in some text.  Most of this is simply an Appendix repeating\nwhat David Ascher said in 1998 (before the starship bites the dust\nagain). Add PEP 230, Warning Framework.\nChanged Owner: to Author: in a number of PEPs. Demoted 216 (docstring format) and 229 (using distutils to build) to\npie-in-the-sky.  Reasons: 216 is NOT the consensus of the doc-sig; 229\nis not sufficiently worked out and doesn't seem a priority.  (This can\nstill make it into 2.1 if the author does the work.)\n\nAdded GvR as co-author for 207 (rich comparisons). Update status; fix Zadka's co-ownership of 207/208. Slight grammar and spelling nits; updated mx.Proxy URL; added\nreference to EST's pyweak. Addtwo more wishes: kill thread, Python/python name conflict. Add 228 (numerical model) to the pie-in-the-sky category -- this can't\nbe ready for Python 2.1. Added an index by category. Remove two rejected feature requests. Don't use sys.__stdout__ in examples. Reminder for ustr(). Add UTF-7 request. Add Tim's getopt wish. Wish about dependent buffer objects. Pleas for Unicode support in (e.g.) urllib.quote(). Add another IDLE wish. Add pickle/cPickle exception wish. Properly record Skip's gripe, which was really that the compiler\n*appeared to* accept the first continue but complained about the\nsecond. CGIHTTPServer has been ported to Windows (and possibly even Mac), so\nthis request can go. Add marshal.load*() input checking, for Bug #114754. Added note about signal handling. This PEP is not just for small feature requests; it's also a temporary\nplaceholder for large feature requests, while their PEP hasn't been\nwritten yet.  Changed the title and added some word to the intro to\nthis effect.\n\n(Discussed by Tim & Guido.) More updates -- things are getting done! Extend justifications.  Add print>>None. Added the essence of my post to c.l.py in defense of the new syntax. The popen problem is \"solved\". Accepted PEP-0203. Accepted, but also added a note about a misfeature that should be\nfixed. BDFL pronouncements.\nGot rid of ^L. Fix an issue with str.translate() in IDLE -- str.translate() only accepts\na dict argument now. Make read() and certificate() return bytes instead of bytearray instances. Rename buffer -> bytearray. Make test_cmd_line_scripts pass by using a unicode string instead of\na bytes string to hold argv0 in RunMainFromImporter().\nAlso changed the code lay-out a bit to be more readable (for me :-),\nand print any unexpected errors rather than suppressing them. Merged revisions 59041-59055 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r59044 | neal.norwitz | 2007-11-18 17:46:20 -0800 (Sun, 18 Nov 2007) | 1 line\n\n  Use a slightly more recent version than 1.5.2b2.\n........\n  r59047 | walter.doerwald | 2007-11-19 04:14:05 -0800 (Mon, 19 Nov 2007) | 2 lines\n\n  Fix typo in comment.\n........\n  r59049 | walter.doerwald | 2007-11-19 04:41:10 -0800 (Mon, 19 Nov 2007) | 4 lines\n\n  Fix for #1444: utf_8_sig.StreamReader was (indirectly through decode())\n  calling codecs.utf_8_decode() with final==True, which falled with incomplete\n  byte sequences. Fix and test by James G. Sack.\n........\n  r59051 | nick.coghlan | 2007-11-19 05:56:27 -0800 (Mon, 19 Nov 2007) | 1 line\n\n  Enable some test_cmd_line_script debugging output to investigate failure on Mac OSX buildbot\n........\n  r59053 | facundo.batista | 2007-11-19 08:30:24 -0800 (Mon, 19 Nov 2007) | 3 lines\n\n\n  Fixed detail in add_type() explanation (issue 1463).\n........\n  r59054 | guido.van.rossum | 2007-11-19 09:35:24 -0800 (Mon, 19 Nov 2007) | 2 lines\n\n  Make this work stand-alone, too.\n........\n  r59055 | guido.van.rossum | 2007-11-19 09:50:22 -0800 (Mon, 19 Nov 2007) | 3 lines\n\n  Fix the OSX failures in this test -- they were due to /tmp being a symlink\n  to /private/tmp.  Adding a call to os.path.realpath() to temp_dir() fixed it.\n........ Fix the OSX failures in this test -- they were due to /tmp being a symlink\nto /private/tmp.  Adding a call to os.path.realpath() to temp_dir() fixed it. Make this work stand-alone, too. Tweak the imports so this script will run stand-alone.\n(No, this doesn't fix the bugs on OSX.) Disable dup() of SSLSocket.  I don't think it can be made to work. This is roughly socket2.diff from issue 1378, with a few changes applied\nto ssl.py (no need to test whether we can dup any more).\nRegular sockets no longer have a _base, but we still have explicit\nreference counting of socket objects for the benefit of makefile();\nusing duplicate sockets won't work for SSLSocket. Cleanup of tokenizer.c. Oops, forgot to test this after the merge. Merged revisions 58947-59004 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58952 | christian.heimes | 2007-11-12 10:58:08 -0800 (Mon, 12 Nov 2007) | 6 lines\n\n  readline module cleanup\n  fixed indention to tabs\n  use Py_RETURN_NONE macro\n  added more error checks to on_completion_display_matches_hook\n\n  open question: Does PyList_SetItem(l, i, o) steal a reference to o in the case of an error?\n........\n  r58956 | guido.van.rossum | 2007-11-12 12:06:40 -0800 (Mon, 12 Nov 2007) | 2 lines\n\n  Add the test from issue 1704621 (the issue itself is already fixed here).\n........\n  r58963 | amaury.forgeotdarc | 2007-11-13 13:54:28 -0800 (Tue, 13 Nov 2007) | 23 lines\n\n  Merge from py3k branch:\n  Correction for issue1265 (pdb bug with \"with\" statement).\n\n  When an unfinished generator-iterator is garbage collected, PyEval_EvalFrameEx\n  is called with a GeneratorExit exception set.  This leads to funny results\n  if the sys.settrace function itself makes use of generators.\n  A visible effect is that the settrace function is reset to None.\n  Another is that the eventual \"finally\" block of the generator is not called.\n\n  It is necessary to save/restore the exception around the call to the trace\n  function.\n\n  This happens a lot with py3k: isinstance() of an ABCMeta instance runs\n      def __instancecheck__(cls, instance):\n          \"\"\"Override for isinstance(instance, cls).\"\"\"\n          return any(cls.__subclasscheck__(c)\n                     for c in {instance.__class__, type(instance)})\n  which lets an opened generator expression each time it returns True.\n\n  Backport candidate, even if the case is less frequent in 2.5.\n........\n  r58968 | georg.brandl | 2007-11-14 05:59:09 -0800 (Wed, 14 Nov 2007) | 2 lines\n\n  Remove dead link from random docs.\n........\n  r58971 | raymond.hettinger | 2007-11-14 14:56:16 -0800 (Wed, 14 Nov 2007) | 1 line\n\n  Make __fields__ read-only.  Suggested by Issac Morland\n........\n  r58972 | raymond.hettinger | 2007-11-14 15:02:30 -0800 (Wed, 14 Nov 2007) | 1 line\n\n  Add test for __fields__ being read-only\n........\n  r58975 | raymond.hettinger | 2007-11-14 18:44:53 -0800 (Wed, 14 Nov 2007) | 6 lines\n\n  Accept Issac Morland's suggestion for __replace__ to allow multiple replacements\n  (suprisingly, this simplifies the signature, improves clarity, and is comparably fast).\n  Update the docs to reflect a previous change to the function name.\n  Add an example to the docs showing how to override the default __repr__ method.\n........\n  r58976 | raymond.hettinger | 2007-11-14 18:55:42 -0800 (Wed, 14 Nov 2007) | 1 line\n\n  Small improvement to the implementation of __replace__().\n........\n  r58977 | raymond.hettinger | 2007-11-14 18:58:20 -0800 (Wed, 14 Nov 2007) | 1 line\n\n  Fixup example in docs.\n........\n  r58978 | raymond.hettinger | 2007-11-14 19:16:09 -0800 (Wed, 14 Nov 2007) | 1 line\n\n  Example of multiple replacements.\n........\n  r58998 | raymond.hettinger | 2007-11-15 14:39:34 -0800 (Thu, 15 Nov 2007) | 1 line\n\n  Add example for use cases requiring default values.\n........\n  r59000 | bill.janssen | 2007-11-15 15:03:03 -0800 (Thu, 15 Nov 2007) | 1 line\n\n  add the certificate for the Python SVN repository for testing SSL\n........\n  r59004 | guido.van.rossum | 2007-11-15 16:24:44 -0800 (Thu, 15 Nov 2007) | 8 lines\n\n  A patch from issue 1378 by roudkerk:\n\n  Currently on Windows set_error() make use of a large array which maps\n  socket error numbers to error messages.\n\n  This patch removes that array and just lets PyErr_SetExcFromWindowsErr()\n  generate the message by using the Win32 function FormatMessage().\n........ A patch from issue 1378 by roudkerk:\n\nCurrently on Windows set_error() make use of a large array which maps\nsocket error numbers to error messages.\n\nThis patch removes that array and just lets PyErr_SetExcFromWindowsErr()\ngenerate the message by using the Win32 function FormatMessage(). Fix some minor style nits.  (I'll leave adding __all__ and making the\ndocstrings conform to PEP 8 to someone else.) Backport revision 58471, replace PyErr_Print() with PyErr_Clear(). Patch 1144 by David Binger, fix for parser module. With unittest.\n(I also cleared out all trailing whitespace in the C file.) Patch 1439 by Bill Janssen.  I think this will work.\nTested on Windows by Christian Heimes.\nI changed the code slightly, renaming decref_socketios() to\n_decref_socketios(), and moving it closer to the close() method\nthat it calls.  Hopefully Bill can now submit his SSL port to 3.0. News about list_repeat() fix. Add -i option.  Don't exit when the command fails.  Redirect stderr to stdout. Add the test from issue 1704621 (the issue itself is already fixed here). Issue 1704621. Fix segfaults in list_repeat() and list_inplace_repeat().\nThe C changes aren't quite the same as the patch given there; the test is. Patch 1420 by Ron Adam.\nThis adds support for bytes literals (b'...') to tokenize.py, and\nremoves support for unicode literals (u'...'). Minimal change that disables (AFAICT) the interpolation of \\u and \\U inside\nraw string literals.  I added a whole bunch of tests but am still not sure\nI am testing all paths through the code.  I really think the code could be\nsimplified quite a bit. Merged revisions 58886-58929 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58892 | guido.van.rossum | 2007-11-06 15:32:56 -0800 (Tue, 06 Nov 2007) | 2 lines\n\n  Add missing \"return NULL\" in overflow check in PyObject_Repr().\n........\n  r58893 | raymond.hettinger | 2007-11-06 17:13:09 -0800 (Tue, 06 Nov 2007) | 1 line\n\n  Fix marshal's incorrect handling of subclasses of builtin types (backport candidate).\n........\n  r58895 | raymond.hettinger | 2007-11-06 18:26:17 -0800 (Tue, 06 Nov 2007) | 1 line\n\n  Optimize dict.fromkeys() with dict inputs.  Useful for resetting bag/muliset counts for example.\n........\n  r58896 | raymond.hettinger | 2007-11-06 18:45:46 -0800 (Tue, 06 Nov 2007) | 1 line\n\n  Add build option for faster loop execution.\n........\n  r58900 | nick.coghlan | 2007-11-07 03:57:51 -0800 (Wed, 07 Nov 2007) | 1 line\n\n  Add missing NEWS entry\n........\n  r58905 | christian.heimes | 2007-11-07 09:50:54 -0800 (Wed, 07 Nov 2007) | 1 line\n\n  Backported fix for bug #1392 from py3k branch r58903.\n........\n  r58906 | christian.heimes | 2007-11-07 10:30:22 -0800 (Wed, 07 Nov 2007) | 1 line\n\n  Backport of Guido's review of my patch.\n........\n  r58908 | raymond.hettinger | 2007-11-07 18:52:43 -0800 (Wed, 07 Nov 2007) | 1 line\n\n  Add set.isdisjoint()\n........\n  r58915 | raymond.hettinger | 2007-11-08 10:47:51 -0800 (Thu, 08 Nov 2007) | 1 line\n\n  Reposition the decref (spotted by eagle-eye norwitz).\n........\n  r58920 | georg.brandl | 2007-11-09 04:31:43 -0800 (Fri, 09 Nov 2007) | 2 lines\n\n  Fix seealso link to sets docs. Do not merge to Py3k.\n........\n  r58921 | georg.brandl | 2007-11-09 05:08:48 -0800 (Fri, 09 Nov 2007) | 2 lines\n\n  Fix misleading example.\n........\n  r58923 | georg.brandl | 2007-11-09 09:33:23 -0800 (Fri, 09 Nov 2007) | 3 lines\n\n  Correct a comment about testing methods - nowadays most\n  tests don't run directly on import.\n........\n  r58924 | martin.v.loewis | 2007-11-09 14:56:30 -0800 (Fri, 09 Nov 2007) | 2 lines\n\n  Add Amaury Forgeot d'Arc.\n........\n  r58925 | raymond.hettinger | 2007-11-09 15:14:44 -0800 (Fri, 09 Nov 2007) | 1 line\n\n  Optimize common case for dict.fromkeys().\n........\n  r58927 | raymond.hettinger | 2007-11-09 17:54:03 -0800 (Fri, 09 Nov 2007) | 1 line\n\n  Use a freelist to speed-up block allocation and deallocation in collections.deque().\n........\n  r58929 | guido.van.rossum | 2007-11-10 14:12:24 -0800 (Sat, 10 Nov 2007) | 3 lines\n\n  Issue 1416.  Add getter, setter, deleter methods to properties that can be\n  used as decorators to create fully-populated properties.\n........ Issue 1416.  Add getter, setter, deleter methods to properties that can be\nused as decorators to create fully-populated properties. Cosmetic changes to Christian's patch r58903.\n(Consider this code review feedback. :-) Backport r58892.\nAdd missing \"return NULL\" in overflow check in PyString_Repr(). Add missing \"return NULL\" in overflow check in PyObject_Repr(). Merging the py3k-pep3137 branch back into the py3k branch.\nNo detailed change log; just check out the change log for the py3k-pep3137\nbranch.  The most obvious changes:\n\n  - str8 renamed to bytes (PyString at the C level);\n  - bytes renamed to buffer (PyBytes at the C level);\n  - PyString and PyUnicode are no longer compatible.\n\nI.e. we now have an immutable bytes type and a mutable bytes type.\n\nThe behavior of PyString was modified quite a bit, to make it more\nbytes-like.  Some changes are still on the to-do list. Merged revisions 58862-58885 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58868 | gregory.p.smith | 2007-11-05 16:19:03 -0800 (Mon, 05 Nov 2007) | 3 lines\n\n  Fixes Issue 1385: The hmac module now computes the correct hmac when using\n  hashes with a block size other than 64 bytes (such as sha384 and sha512).\n........ Merged revisions 58817-58861 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58822 | brett.cannon | 2007-11-02 23:47:02 -0700 (Fri, 02 Nov 2007) | 2 lines\n\n  Add a missing quotation mark.\n........\n  r58840 | skip.montanaro | 2007-11-04 07:56:52 -0800 (Sun, 04 Nov 2007) | 2 lines\n\n  Note change to get_dialect semantics in 2.5.  Will backport to 2.5.\n........\n  r58844 | georg.brandl | 2007-11-04 09:43:49 -0800 (Sun, 04 Nov 2007) | 2 lines\n\n  Fix syntax for versionchanged markup.\n........\n  r58850 | gregory.p.smith | 2007-11-04 18:32:26 -0800 (Sun, 04 Nov 2007) | 9 lines\n\n  Fixes bug 477182 on pybsddb.sf.net.  DB objects now load the flags and\n  pay attention to them when opening an existing database.  This means\n  that d[] behaves properly even on databases previously created with DB_DUP\n  or DB_DUPSORT flags to allow duplicate keys.\n\n  http://sourceforge.net/tracker/index.php?func=detail&aid=477182&group_id=13900&atid=113900\n\n  Do not backport, this bugfix could be considered an API change.\n........\n  r58851 | gregory.p.smith | 2007-11-04 18:56:31 -0800 (Sun, 04 Nov 2007) | 3 lines\n\n  Add the bsddb.db.DBEnv.lock_id_free method.\n  Improve test_lock's tempdir creation and cleanup.\n........\n  r58852 | gregory.p.smith | 2007-11-05 01:06:28 -0800 (Mon, 05 Nov 2007) | 3 lines\n\n   * db->get_types is only available in BerkeleyDB >= 4.2\n   * get compiling with older versions of python again for a stand alone release.\n........\n  r58853 | gregory.p.smith | 2007-11-05 01:07:40 -0800 (Mon, 05 Nov 2007) | 2 lines\n\n  * db->get_flags is only available in BerkeleyDB >= 4.2\n........\n  r58854 | mark.summerfield | 2007-11-05 01:22:48 -0800 (Mon, 05 Nov 2007) | 3 lines\n\n  Added cross-references between the various archive file formats.\n........\n  r58857 | mark.summerfield | 2007-11-05 06:38:50 -0800 (Mon, 05 Nov 2007) | 5 lines\n\n  Clarified the fact that you can have comments for individual archive\n  members even though comments to the archive itself aren't currently\n  supported.\n........ Patch 1171 by mfenniak -- allow subclassing of bytes.\nI suspect this has some problems when the subclass is evil,\nbut that's for later. Merged revisions 58742-58816 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58745 | georg.brandl | 2007-11-01 10:19:33 -0700 (Thu, 01 Nov 2007) | 2 lines\n\n  #1364: os.lstat is available on Windows too, as an alias to os.stat.\n........\n  r58750 | christian.heimes | 2007-11-01 12:48:10 -0700 (Thu, 01 Nov 2007) | 1 line\n\n  Backport of import tests for bug http://bugs.python.org/issue1293 and bug http://bugs.python.org/issue1342\n........\n  r58751 | christian.heimes | 2007-11-01 13:11:06 -0700 (Thu, 01 Nov 2007) | 1 line\n\n  Removed non ASCII text from test as requested by Guido. Sorry :/\n........\n  r58753 | georg.brandl | 2007-11-01 13:37:02 -0700 (Thu, 01 Nov 2007) | 2 lines\n\n  Fix markup glitch.\n........\n  r58757 | gregory.p.smith | 2007-11-01 14:08:14 -0700 (Thu, 01 Nov 2007) | 4 lines\n\n  Fix bug introduced in revision 58385.  Database keys could no longer\n  have NULL bytes in them.  Replace the errant strdup with a\n  malloc+memcpy.  Adds a unit test for the correct behavior.\n........\n  r58758 | gregory.p.smith | 2007-11-01 14:15:36 -0700 (Thu, 01 Nov 2007) | 3 lines\n\n  Undo revision 58533 58534 fixes.  Those were a workaround for\n  a problem introduced by 58385.\n........\n  r58759 | gregory.p.smith | 2007-11-01 14:17:47 -0700 (Thu, 01 Nov 2007) | 2 lines\n\n  false \"fix\" undone as correct problem was found and fixed.\n........\n  r58765 | mark.summerfield | 2007-11-02 01:24:59 -0700 (Fri, 02 Nov 2007) | 3 lines\n\n  Added more file-handling related cross-references.\n........\n  r58766 | nick.coghlan | 2007-11-02 03:09:12 -0700 (Fri, 02 Nov 2007) | 1 line\n\n  Fix for bug 1705170 - contextmanager swallowing StopIteration (2.5 backport candidate)\n........\n  r58784 | thomas.heller | 2007-11-02 12:10:24 -0700 (Fri, 02 Nov 2007) | 4 lines\n\n  Issue #1292: On alpha, arm, ppc, and s390 linux systems the\n  --with-system-ffi configure option defaults to \"yes\" because the\n  bundled libffi sources are too old.\n........\n  r58785 | thomas.heller | 2007-11-02 12:11:23 -0700 (Fri, 02 Nov 2007) | 1 line\n\n  Enable the full ctypes c_longdouble tests again.\n........\n  r58796 | georg.brandl | 2007-11-02 13:06:17 -0700 (Fri, 02 Nov 2007) | 4 lines\n\n  Make \"hashable\" a glossary entry and clarify docs on __cmp__, __eq__ and __hash__.\n  I hope the concept of hashability is better understandable now.\n  Thanks to Tim Hatch for pointing out the flaws here.\n........ Fixes for issue 1752184, ensuring type objects are always created\nwith a PyUnicode name. Patch 1373 by Adam Hupp.\nFixes intermittent errors in test_xmlrpc due to socket timeouts. Merged revisions 58221-58741 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r58221 | georg.brandl | 2007-09-20 10:57:59 -0700 (Thu, 20 Sep 2007) | 2 lines\n\n  Patch #1181: add os.environ.clear() method.\n........\n  r58225 | sean.reifschneider | 2007-09-20 23:33:28 -0700 (Thu, 20 Sep 2007) | 3 lines\n\n  Issue1704287: \"make install\" fails unless you do \"make\" first.  Make\n     oldsharedmods and sharedmods in \"libinstall\".\n........\n  r58232 | guido.van.rossum | 2007-09-22 13:18:03 -0700 (Sat, 22 Sep 2007) | 4 lines\n\n  Patch # 188 by Philip Jenvey.\n  Make tell() mark CRLF as a newline.\n  With unit test.\n........\n  r58242 | georg.brandl | 2007-09-24 10:55:47 -0700 (Mon, 24 Sep 2007) | 2 lines\n\n  Fix typo and double word.\n........\n  r58245 | georg.brandl | 2007-09-24 10:59:28 -0700 (Mon, 24 Sep 2007) | 2 lines\n\n  #1196: document default radix for int().\n........\n  r58247 | georg.brandl | 2007-09-24 11:08:24 -0700 (Mon, 24 Sep 2007) | 2 lines\n\n  #1177: accept 2xx responses for https too, not only http.\n........\n  r58249 | andrew.kuchling | 2007-09-24 16:45:51 -0700 (Mon, 24 Sep 2007) | 1 line\n\n  Remove stray odd character; grammar fix\n........\n  r58250 | andrew.kuchling | 2007-09-24 16:46:28 -0700 (Mon, 24 Sep 2007) | 1 line\n\n  Typo fix\n........\n  r58251 | andrew.kuchling | 2007-09-24 17:09:42 -0700 (Mon, 24 Sep 2007) | 1 line\n\n  Add various items\n........\n  r58268 | vinay.sajip | 2007-09-26 22:34:45 -0700 (Wed, 26 Sep 2007) | 1 line\n\n  Change to flush and close logic to fix #1760556.\n........\n  r58269 | vinay.sajip | 2007-09-26 22:38:51 -0700 (Wed, 26 Sep 2007) | 1 line\n\n  Change to basicConfig() to fix #1021.\n........\n  r58270 | georg.brandl | 2007-09-26 23:26:58 -0700 (Wed, 26 Sep 2007) | 2 lines\n\n  #1208: document match object's boolean value.\n........\n  r58271 | vinay.sajip | 2007-09-26 23:56:13 -0700 (Wed, 26 Sep 2007) | 1 line\n\n  Minor date change.\n........\n  r58272 | vinay.sajip | 2007-09-27 00:35:10 -0700 (Thu, 27 Sep 2007) | 1 line\n\n  Change to LogRecord.__init__() to fix #1206. Note that archaic use of type(x) == types.DictType is because of keeping 1.5.2 compatibility. While this is much less relevant these days, there probably needs to be a separate commit for removing all archaic constructs at the same time.\n........\n  r58288 | brett.cannon | 2007-09-30 12:45:10 -0700 (Sun, 30 Sep 2007) | 9 lines\n\n  tuple.__repr__ did not consider a reference loop as it is not possible from\n  Python code; but it is possible from C.  object.__str__ had the issue of not\n  expecting a type to doing something within it's tp_str implementation that\n  could trigger an infinite recursion, but it could in C code..  Both found\n  thanks to BaseException and how it handles its repr.\n\n  Closes issue #1686386.  Thanks to Thomas Herve for taking an initial stab at\n  coming up with a solution.\n........\n  r58289 | brett.cannon | 2007-09-30 13:37:19 -0700 (Sun, 30 Sep 2007) | 3 lines\n\n  Fix error introduced by r58288; if a tuple is length 0 return its repr and\n  don't worry about any self-referring tuples.\n........\n  r58294 | facundo.batista | 2007-10-02 10:01:24 -0700 (Tue, 02 Oct 2007) | 11 lines\n\n\n  Made the various is_* operations return booleans.  This was discussed\n  with Cawlishaw by mail, and he basically confirmed that to these is_*\n  operations, there's no need to return Decimal(0) and Decimal(1) if\n  the language supports the False and True booleans.\n\n  Also added a few tests for the these functions in extra.decTest, since\n  they are mostly untested (apart from the doctests).\n\n  Thanks Mark Dickinson\n........\n  r58295 | facundo.batista | 2007-10-02 11:21:18 -0700 (Tue, 02 Oct 2007) | 4 lines\n\n\n  Added a class to store the digits of log(10), so that they can be made\n  available when necessary without recomputing.  Thanks Mark Dickinson\n........\n  r58299 | mark.summerfield | 2007-10-03 01:53:21 -0700 (Wed, 03 Oct 2007) | 4 lines\n\n  Added note in footnote about string comparisons about\n  unicodedata.normalize().\n........\n  r58304 | raymond.hettinger | 2007-10-03 14:18:11 -0700 (Wed, 03 Oct 2007) | 1 line\n\n  enumerate() is no longer bounded to using sequences shorter than LONG_MAX.  The possibility of overflow was sending some newsgroup posters into a tizzy.\n........\n  r58305 | raymond.hettinger | 2007-10-03 17:20:27 -0700 (Wed, 03 Oct 2007) | 1 line\n\n  itertools.count() no longer limited to sys.maxint.\n........\n  r58306 | kurt.kaiser | 2007-10-03 18:49:54 -0700 (Wed, 03 Oct 2007) | 3 lines\n\n  Assume that the user knows when he wants to end the line; don't insert\n  something he didn't select or complete.\n........\n  r58307 | kurt.kaiser | 2007-10-03 19:07:50 -0700 (Wed, 03 Oct 2007) | 2 lines\n\n  Remove unused theme that was causing a fault in p3k.\n........\n  r58308 | kurt.kaiser | 2007-10-03 19:09:17 -0700 (Wed, 03 Oct 2007) | 2 lines\n\n  Clean up EditorWindow close.\n........\n  r58309 | kurt.kaiser | 2007-10-03 19:53:07 -0700 (Wed, 03 Oct 2007) | 7 lines\n\n  textView cleanup. Patch 1718043 Tal Einat.\n\n  M    idlelib/EditorWindow.py\n  M    idlelib/aboutDialog.py\n  M    idlelib/textView.py\n  M    idlelib/NEWS.txt\n........\n  r58310 | kurt.kaiser | 2007-10-03 20:11:12 -0700 (Wed, 03 Oct 2007) | 3 lines\n\n  configDialog cleanup. Patch 1730217 Tal Einat.\n........\n  r58311 | neal.norwitz | 2007-10-03 23:00:48 -0700 (Wed, 03 Oct 2007) | 4 lines\n\n  Coverity #151: Remove deadcode.\n\n  All this code already exists above starting at line 653.\n........\n  r58325 | fred.drake | 2007-10-04 19:46:12 -0700 (Thu, 04 Oct 2007) | 1 line\n\n  wrap lines to <80 characters before fixing errors\n........\n  r58326 | raymond.hettinger | 2007-10-04 19:47:07 -0700 (Thu, 04 Oct 2007) | 6 lines\n\n  Add __asdict__() to NamedTuple and refine the docs.\n  Add maxlen support to deque() and fixup docs.\n  Partially fix __reduce__().  The None as a third arg was no longer supported.\n  Still needs work on __reduce__() to handle recursive inputs.\n........\n  r58327 | fred.drake | 2007-10-04 19:48:32 -0700 (Thu, 04 Oct 2007) | 3 lines\n\n  move descriptions of ac_(in|out)_buffer_size to the right place\n  http://bugs.python.org/issue1053\n........\n  r58329 | neal.norwitz | 2007-10-04 20:39:17 -0700 (Thu, 04 Oct 2007) | 3 lines\n\n  dict could be NULL, so we need to XDECREF.\n  Fix a compiler warning about passing a PyTypeObject* instead of PyObject*.\n........\n  r58330 | neal.norwitz | 2007-10-04 20:41:19 -0700 (Thu, 04 Oct 2007) | 2 lines\n\n  Fix Coverity #158: Check the correct variable.\n........\n  r58332 | neal.norwitz | 2007-10-04 22:01:38 -0700 (Thu, 04 Oct 2007) | 7 lines\n\n  Fix Coverity #159.\n\n  This code was broken if save() returned a negative number since i contained\n  a boolean value and then we compared i < 0 which should never be true.\n\n  Will backport (assuming it's necessary)\n........\n  r58334 | neal.norwitz | 2007-10-04 22:29:17 -0700 (Thu, 04 Oct 2007) | 1 line\n\n  Add a note about fixing some more warnings found by Coverity.\n........\n  r58338 | raymond.hettinger | 2007-10-05 12:07:31 -0700 (Fri, 05 Oct 2007) | 1 line\n\n  Restore BEGIN/END THREADS macros which were squashed in the previous checkin\n........\n  r58343 | gregory.p.smith | 2007-10-06 00:48:10 -0700 (Sat, 06 Oct 2007) | 3 lines\n\n  Stab in the dark attempt to fix the test_bsddb3 failure on sparc and S-390\n  ubuntu buildbots.\n........\n  r58344 | gregory.p.smith | 2007-10-06 00:51:59 -0700 (Sat, 06 Oct 2007) | 2 lines\n\n  Allows BerkeleyDB 4.6.x >= 4.6.21 for the bsddb module.\n........\n  r58348 | gregory.p.smith | 2007-10-06 08:47:37 -0700 (Sat, 06 Oct 2007) | 3 lines\n\n  Use the host the author likely meant in the first place.  pop.gmail.com is\n  reliable.  gmail.org is someones personal domain.\n........\n  r58351 | neal.norwitz | 2007-10-06 12:16:28 -0700 (Sat, 06 Oct 2007) | 3 lines\n\n  Ensure that this test will pass even if another test left an unwritable TESTFN.\n  Also use the safe unlink in test_support instead of rolling our own here.\n........\n  r58368 | georg.brandl | 2007-10-08 00:50:24 -0700 (Mon, 08 Oct 2007) | 3 lines\n\n  #1123: fix the docs for the str.split(None, sep) case.\n  Also expand a few other methods' docs, which had more info in the deprecated string module docs.\n........\n  r58369 | georg.brandl | 2007-10-08 01:06:05 -0700 (Mon, 08 Oct 2007) | 2 lines\n\n  Update docstring of sched, also remove an unused assignment.\n........\n  r58370 | raymond.hettinger | 2007-10-08 02:14:28 -0700 (Mon, 08 Oct 2007) | 5 lines\n\n  Add comments to NamedTuple code.\n  Let the field spec be either a string or a non-string sequence (suggested by Martin Blais with use cases).\n  Improve the error message in the case of a SyntaxError (caused by a duplicate field name).\n........\n  r58371 | raymond.hettinger | 2007-10-08 02:56:29 -0700 (Mon, 08 Oct 2007) | 1 line\n\n  Missed a line in the docs\n........\n  r58372 | raymond.hettinger | 2007-10-08 03:11:51 -0700 (Mon, 08 Oct 2007) | 1 line\n\n  Better variable names\n........\n  r58376 | georg.brandl | 2007-10-08 07:12:47 -0700 (Mon, 08 Oct 2007) | 3 lines\n\n  #1199: docs for tp_as_{number,sequence,mapping}, by Amaury Forgeot d'Arc.\n  No need to merge this to py3k!\n........\n  r58380 | raymond.hettinger | 2007-10-08 14:26:58 -0700 (Mon, 08 Oct 2007) | 1 line\n\n  Eliminate camelcase function name\n........\n  r58381 | andrew.kuchling | 2007-10-08 16:23:03 -0700 (Mon, 08 Oct 2007) | 1 line\n\n  Eliminate camelcase function name\n........\n  r58382 | raymond.hettinger | 2007-10-08 18:36:23 -0700 (Mon, 08 Oct 2007) | 1 line\n\n  Make the error messages more specific\n........\n  r58384 | gregory.p.smith | 2007-10-08 23:02:21 -0700 (Mon, 08 Oct 2007) | 10 lines\n\n  Splits Modules/_bsddb.c up into bsddb.h and _bsddb.c and adds a C API\n  object available as bsddb.db.api.  This is based on the patch submitted\n  by Duncan Grisby here:\n    http://sourceforge.net/tracker/index.php?func=detail&aid=1551895&group_id=13900&atid=313900\n  See this thread for additional info:\n    http://sourceforge.net/mailarchive/forum.php?thread_name=E1GAVDK-0002rk-Iw%40apasphere.com&forum_name=pybsddb-users\n\n  It also cleans up the code a little by removing some ifdef/endifs for\n  python prior to 2.1 and for unsupported Berkeley DB <= 3.2.\n........\n  r58385 | gregory.p.smith | 2007-10-08 23:50:43 -0700 (Mon, 08 Oct 2007) | 5 lines\n\n  Fix a double free when positioning a database cursor to a non-existant\n  string key (and probably a few other situations with string keys).\n  This was reported with a patch as pybsddb sourceforge bug 1708868 by\n  jjjhhhlll at gmail.\n........\n  r58386 | gregory.p.smith | 2007-10-09 00:19:11 -0700 (Tue, 09 Oct 2007) | 3 lines\n\n  Use the highest cPickle protocol in bsddb.dbshelve.  This comes from\n  sourceforge pybsddb patch 1551443 by w_barnes.\n........\n  r58394 | gregory.p.smith | 2007-10-09 11:26:02 -0700 (Tue, 09 Oct 2007) | 2 lines\n\n  remove another sleepycat reference\n........\n  r58396 | kurt.kaiser | 2007-10-09 12:31:30 -0700 (Tue, 09 Oct 2007) | 3 lines\n\n  Allow interrupt only when executing user code in subprocess\n  Patch 1225 Tal Einat modified from IDLE-Spoon.\n........\n  r58399 | brett.cannon | 2007-10-09 17:07:50 -0700 (Tue, 09 Oct 2007) | 5 lines\n\n  Remove file-level typedefs that were inconsistently used throughout the file.\n  Just move over to the public API names.\n\n  Closes issue1238.\n........\n  r58401 | raymond.hettinger | 2007-10-09 17:26:46 -0700 (Tue, 09 Oct 2007) | 1 line\n\n  Accept Jim Jewett's api suggestion to use None instead of -1 to indicate unbounded deques.\n........\n  r58403 | kurt.kaiser | 2007-10-09 17:55:40 -0700 (Tue, 09 Oct 2007) | 2 lines\n\n  Allow cursor color change w/o restart. Patch 1725576 Tal Einat.\n........\n  r58404 | kurt.kaiser | 2007-10-09 18:06:47 -0700 (Tue, 09 Oct 2007) | 2 lines\n\n  show paste if > 80 columns.  Patch 1659326 Tal Einat.\n........\n  r58415 | thomas.heller | 2007-10-11 12:51:32 -0700 (Thu, 11 Oct 2007) | 5 lines\n\n  On OS X, use os.uname() instead of gestalt.sysv(...) to get the\n  operating system version.  This allows to use ctypes when Python\n  was configured with --disable-toolbox-glue.\n........\n  r58419 | neal.norwitz | 2007-10-11 20:01:01 -0700 (Thu, 11 Oct 2007) | 1 line\n\n  Get rid of warning about not being able to create an existing directory.\n........\n  r58420 | neal.norwitz | 2007-10-11 20:01:30 -0700 (Thu, 11 Oct 2007) | 1 line\n\n  Get rid of warnings on a bunch of platforms by using a proper prototype.\n........\n  r58421 | neal.norwitz | 2007-10-11 20:01:54 -0700 (Thu, 11 Oct 2007) | 4 lines\n\n  Get rid of compiler warning about retval being used (returned) without\n  being initialized.  (gcc warning and Coverity 202)\n........\n  r58422 | neal.norwitz | 2007-10-11 20:03:23 -0700 (Thu, 11 Oct 2007) | 1 line\n\n  Fix Coverity 168:  Close the file before returning (exiting).\n........\n  r58423 | neal.norwitz | 2007-10-11 20:04:18 -0700 (Thu, 11 Oct 2007) | 4 lines\n\n  Fix Coverity 180:  Don't overallocate.  We don't need structs, but pointers.\n  Also fix a memory leak.\n........\n  r58424 | neal.norwitz | 2007-10-11 20:05:19 -0700 (Thu, 11 Oct 2007) | 5 lines\n\n  Fix Coverity 185-186:  If the passed in FILE is NULL, uninitialized memory\n  would be accessed.\n\n  Will backport.\n........\n  r58425 | neal.norwitz | 2007-10-11 20:52:34 -0700 (Thu, 11 Oct 2007) | 1 line\n\n  Get this module to compile with bsddb versions prior to 4.3\n........\n  r58430 | martin.v.loewis | 2007-10-12 01:56:52 -0700 (Fri, 12 Oct 2007) | 3 lines\n\n  Bug #1216: Restore support for Visual Studio 2002.\n  Will backport to 2.5.\n........\n  r58433 | raymond.hettinger | 2007-10-12 10:53:11 -0700 (Fri, 12 Oct 2007) | 1 line\n\n  Fix test of count.__repr__() to ignore the 'L' if the count is a long\n........\n  r58434 | gregory.p.smith | 2007-10-12 11:44:06 -0700 (Fri, 12 Oct 2007) | 4 lines\n\n  Fixes http://bugs.python.org/issue1233 - bsddb.dbshelve.DBShelf.append\n  was useless due to inverted logic.  Also adds a test case for RECNO dbs\n  to test_dbshelve.\n........\n  r58445 | georg.brandl | 2007-10-13 06:20:03 -0700 (Sat, 13 Oct 2007) | 2 lines\n\n  Fix email example.\n........\n  r58450 | gregory.p.smith | 2007-10-13 16:02:05 -0700 (Sat, 13 Oct 2007) | 2 lines\n\n  Fix an uncollectable reference leak in bsddb.db.DBShelf.append\n........\n  r58453 | neal.norwitz | 2007-10-13 17:18:40 -0700 (Sat, 13 Oct 2007) | 8 lines\n\n  Let the O/S supply a port if none of the default ports can be used.\n  This should make the tests more robust at the expense of allowing\n  tests to be sloppier by not requiring them to cleanup after themselves.\n  (It will legitamitely help when running two test suites simultaneously\n  or if another process is already using one of the predefined ports.)\n\n  Also simplifies (slightLy) the exception handling elsewhere.\n........\n  r58459 | neal.norwitz | 2007-10-14 11:30:21 -0700 (Sun, 14 Oct 2007) | 2 lines\n\n  Don't raise a string exception, they don't work anymore.\n........\n  r58460 | neal.norwitz | 2007-10-14 11:40:37 -0700 (Sun, 14 Oct 2007) | 1 line\n\n  Use unittest for assertions\n........\n  r58468 | armin.rigo | 2007-10-15 00:48:35 -0700 (Mon, 15 Oct 2007) | 2 lines\n\n  test_bigbits was not testing what it seemed to.\n........\n  r58471 | guido.van.rossum | 2007-10-15 08:54:11 -0700 (Mon, 15 Oct 2007) | 3 lines\n\n  Change a PyErr_Print() into a PyErr_Clear(),\n  per discussion in issue 1031213.\n........\n  r58500 | raymond.hettinger | 2007-10-16 12:18:30 -0700 (Tue, 16 Oct 2007) | 1 line\n\n  Improve error messages\n........\n  r58506 | raymond.hettinger | 2007-10-16 14:28:32 -0700 (Tue, 16 Oct 2007) | 1 line\n\n  More docs, error messages, and tests\n........\n  r58507 | andrew.kuchling | 2007-10-16 15:58:03 -0700 (Tue, 16 Oct 2007) | 1 line\n\n  Add items\n........\n  r58508 | brett.cannon | 2007-10-16 16:24:06 -0700 (Tue, 16 Oct 2007) | 3 lines\n\n  Remove ``:const:`` notation on None in parameter list.  Since the markup is not\n  rendered for parameters it just showed up as ``:const:`None` `` in the output.\n........\n  r58509 | brett.cannon | 2007-10-16 16:26:45 -0700 (Tue, 16 Oct 2007) | 3 lines\n\n  Re-order some functions whose parameters differ between PyObject and const char\n  * so that they are next to each other.\n........\n  r58522 | armin.rigo | 2007-10-17 11:46:37 -0700 (Wed, 17 Oct 2007) | 5 lines\n\n  Fix the overflow checking of list_repeat.\n  Introduce overflow checking into list_inplace_repeat.\n\n  Backport candidate, possibly.\n........\n  r58530 | facundo.batista | 2007-10-17 20:16:03 -0700 (Wed, 17 Oct 2007) | 7 lines\n\n\n  Issue #1580738.  When HTTPConnection reads the whole stream with read(),\n  it closes itself.  When the stream is read in several calls to read(n),\n  it should behave in the same way if HTTPConnection knows where the end\n  of the stream is (through self.length).  Added a test case for this\n  behaviour.\n........\n  r58531 | facundo.batista | 2007-10-17 20:44:48 -0700 (Wed, 17 Oct 2007) | 3 lines\n\n\n  Issue 1289, just a typo.\n........\n  r58532 | gregory.p.smith | 2007-10-18 00:56:54 -0700 (Thu, 18 Oct 2007) | 4 lines\n\n  cleanup test_dbtables to use mkdtemp.  cleanup dbtables to pass txn as a\n  keyword argument whenever possible to avoid bugs and confusion.  (dbtables.py\n  line 447 self.db.get using txn as a non-keyword was an actual bug due to this)\n........\n  r58533 | gregory.p.smith | 2007-10-18 01:34:20 -0700 (Thu, 18 Oct 2007) | 4 lines\n\n  Fix a weird bug in dbtables: if it chose a random rowid string that contained\n  NULL bytes it would cause the database all sorts of problems in the future\n  leading to very strange random failures and corrupt dbtables.bsdTableDb dbs.\n........\n  r58534 | gregory.p.smith | 2007-10-18 09:32:02 -0700 (Thu, 18 Oct 2007) | 3 lines\n\n  A cleaner fix than the one committed last night.  Generate random rowids that\n  do not contain null bytes.\n........\n  r58537 | gregory.p.smith | 2007-10-18 10:17:57 -0700 (Thu, 18 Oct 2007) | 2 lines\n\n  mention bsddb fixes.\n........\n  r58538 | raymond.hettinger | 2007-10-18 14:13:06 -0700 (Thu, 18 Oct 2007) | 1 line\n\n  Remove useless warning\n........\n  r58539 | gregory.p.smith | 2007-10-19 00:31:20 -0700 (Fri, 19 Oct 2007) | 2 lines\n\n  squelch the warning that this test is supposed to trigger.\n........\n  r58542 | georg.brandl | 2007-10-19 05:32:39 -0700 (Fri, 19 Oct 2007) | 2 lines\n\n  Clarify wording for apply().\n........\n  r58544 | mark.summerfield | 2007-10-19 05:48:17 -0700 (Fri, 19 Oct 2007) | 3 lines\n\n  Added a cross-ref to each other.\n........\n  r58545 | georg.brandl | 2007-10-19 10:38:49 -0700 (Fri, 19 Oct 2007) | 2 lines\n\n  #1284: \"S\" means \"seen\", not unread.\n........\n  r58548 | thomas.heller | 2007-10-19 11:11:41 -0700 (Fri, 19 Oct 2007) | 4 lines\n\n  Fix ctypes on 32-bit systems when Python is configured --with-system-ffi.\n  See also https://bugs.launchpad.net/bugs/72505.\n\n  Ported from release25-maint branch.\n........\n  r58550 | facundo.batista | 2007-10-19 12:25:57 -0700 (Fri, 19 Oct 2007) | 8 lines\n\n\n  The constructor from tuple was way too permissive: it allowed bad\n  coefficient numbers, floats in the sign, and other details that\n  generated directly the wrong number in the best case, or triggered\n  misfunctionality in the alorithms.\n\n  Test cases added for these issues. Thanks Mark Dickinson.\n........\n  r58559 | georg.brandl | 2007-10-20 06:22:53 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Fix code being interpreted as a target.\n........\n  r58561 | georg.brandl | 2007-10-20 06:36:24 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Document new \"cmdoption\" directive.\n........\n  r58562 | georg.brandl | 2007-10-20 08:21:22 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Make a path more Unix-standardy.\n........\n  r58564 | georg.brandl | 2007-10-20 10:51:39 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Document new directive \"envvar\".\n........\n  r58567 | georg.brandl | 2007-10-20 11:08:14 -0700 (Sat, 20 Oct 2007) | 6 lines\n\n  * Add new toplevel chapter, \"Using Python.\" (how to install,\n    configure and setup python on different platforms -- at least\n    in theory.)\n  * Move the Python on Mac docs in that chapter.\n  * Add a new chapter about the command line invocation, by stargaming.\n........\n  r58568 | georg.brandl | 2007-10-20 11:33:20 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Change title, for now.\n........\n  r58569 | georg.brandl | 2007-10-20 11:39:25 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Add entry to ACKS.\n........\n  r58570 | georg.brandl | 2007-10-20 12:05:45 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Clarify -E docs.\n........\n  r58571 | georg.brandl | 2007-10-20 12:08:36 -0700 (Sat, 20 Oct 2007) | 2 lines\n\n  Even more clarification.\n........\n  r58572 | andrew.kuchling | 2007-10-20 12:25:37 -0700 (Sat, 20 Oct 2007) | 1 line\n\n  Fix protocol name\n........\n  r58573 | andrew.kuchling | 2007-10-20 12:35:18 -0700 (Sat, 20 Oct 2007) | 1 line\n\n  Various items\n........\n  r58574 | andrew.kuchling | 2007-10-20 12:39:35 -0700 (Sat, 20 Oct 2007) | 1 line\n\n  Use correct header line\n........\n  r58576 | armin.rigo | 2007-10-21 02:14:15 -0700 (Sun, 21 Oct 2007) | 3 lines\n\n  Add a crasher for the long-standing issue with closing a file\n  while another thread uses it.\n........\n  r58577 | georg.brandl | 2007-10-21 03:01:56 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Remove duplicate crasher.\n........\n  r58578 | georg.brandl | 2007-10-21 03:24:20 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Unify \"byte code\" to \"bytecode\". Also sprinkle :term: markup for it.\n........\n  r58579 | georg.brandl | 2007-10-21 03:32:54 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Add markup to new function descriptions.\n........\n  r58580 | georg.brandl | 2007-10-21 03:45:46 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Add :term:s for descriptors.\n........\n  r58581 | georg.brandl | 2007-10-21 03:46:24 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Unify \"file-descriptor\" to \"file descriptor\".\n........\n  r58582 | georg.brandl | 2007-10-21 03:52:38 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Add :term: for generators.\n........\n  r58583 | georg.brandl | 2007-10-21 05:10:28 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Add :term:s for iterator.\n........\n  r58584 | georg.brandl | 2007-10-21 05:15:05 -0700 (Sun, 21 Oct 2007) | 2 lines\n\n  Add :term:s for \"new-style class\".\n........\n  r58588 | neal.norwitz | 2007-10-21 21:47:54 -0700 (Sun, 21 Oct 2007) | 1 line\n\n  Add Chris Monson so he can edit PEPs.\n........\n  r58594 | guido.van.rossum | 2007-10-22 09:27:19 -0700 (Mon, 22 Oct 2007) | 4 lines\n\n  Issue #1307, patch by Derek Shockey.\n  When \"MAIL\" is received without args, an exception happens instead of\n  sending a 501 syntax error response.\n........\n  r58598 | travis.oliphant | 2007-10-22 19:40:56 -0700 (Mon, 22 Oct 2007) | 1 line\n\n  Add phuang patch from Issue 708374 which adds offset parameter to mmap module.\n........\n  r58601 | neal.norwitz | 2007-10-22 22:44:27 -0700 (Mon, 22 Oct 2007) | 2 lines\n\n  Bug #1313, fix typo (wrong variable name) in example.\n........\n  r58609 | georg.brandl | 2007-10-23 11:21:35 -0700 (Tue, 23 Oct 2007) | 2 lines\n\n  Update Pygments version from externals.\n........\n  r58618 | guido.van.rossum | 2007-10-23 12:25:41 -0700 (Tue, 23 Oct 2007) | 3 lines\n\n  Issue 1307 by Derek Shockey, fox the same bug for RCPT.\n  Neal: please backport!\n........\n  r58620 | raymond.hettinger | 2007-10-23 13:37:41 -0700 (Tue, 23 Oct 2007) | 1 line\n\n  Shorter name for namedtuple()\n........\n  r58621 | andrew.kuchling | 2007-10-23 13:55:47 -0700 (Tue, 23 Oct 2007) | 1 line\n\n  Update name\n........\n  r58622 | raymond.hettinger | 2007-10-23 14:23:07 -0700 (Tue, 23 Oct 2007) | 1 line\n\n  Fixup news entry\n........\n  r58623 | raymond.hettinger | 2007-10-23 18:28:33 -0700 (Tue, 23 Oct 2007) | 1 line\n\n  Optimize sum() for integer and float inputs.\n........\n  r58624 | raymond.hettinger | 2007-10-23 19:05:51 -0700 (Tue, 23 Oct 2007) | 1 line\n\n  Fixup error return and add support for intermixed ints and floats/\n........\n  r58628 | vinay.sajip | 2007-10-24 03:47:06 -0700 (Wed, 24 Oct 2007) | 1 line\n\n  Bug #1321: Fixed logic error in TimedRotatingFileHandler.__init__()\n........\n  r58641 | facundo.batista | 2007-10-24 12:11:08 -0700 (Wed, 24 Oct 2007) | 4 lines\n\n\n  Issue 1290.  CharacterData.__repr__ was constructing a string\n  in response that keeped having a non-ascii character.\n........\n  r58643 | thomas.heller | 2007-10-24 12:50:45 -0700 (Wed, 24 Oct 2007) | 1 line\n\n  Added unittest for calling a function with paramflags (backport from py3k branch).\n........\n  r58645 | matthias.klose | 2007-10-24 13:00:44 -0700 (Wed, 24 Oct 2007) | 2 lines\n\n  - Build using system ffi library on arm*-linux*.\n........\n  r58651 | georg.brandl | 2007-10-24 14:40:38 -0700 (Wed, 24 Oct 2007) | 2 lines\n\n  Bug #1287: make os.environ.pop() work as expected.\n........\n  r58652 | raymond.hettinger | 2007-10-24 19:26:58 -0700 (Wed, 24 Oct 2007) | 1 line\n\n  Missing DECREFs\n........\n  r58653 | matthias.klose | 2007-10-24 23:37:24 -0700 (Wed, 24 Oct 2007) | 2 lines\n\n  - Build using system ffi library on arm*-linux*, pass --with-system-ffi to CONFIG_ARGS\n........\n  r58655 | thomas.heller | 2007-10-25 12:47:32 -0700 (Thu, 25 Oct 2007) | 2 lines\n\n  ffi_type_longdouble may be already #defined.\n  See issue 1324.\n........\n  r58656 | kurt.kaiser | 2007-10-25 15:43:45 -0700 (Thu, 25 Oct 2007) | 3 lines\n\n  Correct an ancient bug in an unused path by removing that path: register() is\n  now idempotent.\n........\n  r58660 | kurt.kaiser | 2007-10-25 17:10:09 -0700 (Thu, 25 Oct 2007) | 4 lines\n\n  1. Add comments to provide top-level documentation.\n  2. Refactor to use more descriptive names.\n  3. Enhance tests in main().\n........\n  r58675 | georg.brandl | 2007-10-26 11:30:41 -0700 (Fri, 26 Oct 2007) | 2 lines\n\n  Fix new pop() method on os.environ on ignorecase-platforms.\n........\n  r58696 | neal.norwitz | 2007-10-27 15:32:21 -0700 (Sat, 27 Oct 2007) | 1 line\n\n  Update URL for Pygments.  0.8.1 is no longer available\n........\n  r58697 | hyeshik.chang | 2007-10-28 04:19:02 -0700 (Sun, 28 Oct 2007) | 3 lines\n\n  - Add support for FreeBSD 8 which is recently forked from FreeBSD 7.\n  - Regenerate IN module for most recent maintenance tree of FreeBSD 6 and 7.\n........\n  r58698 | hyeshik.chang | 2007-10-28 05:38:09 -0700 (Sun, 28 Oct 2007) | 2 lines\n\n  Enable platform-specific tweaks for FreeBSD 8 (exactly same to FreeBSD 7's yet)\n........\n  r58700 | kurt.kaiser | 2007-10-28 12:03:59 -0700 (Sun, 28 Oct 2007) | 2 lines\n\n  Add confirmation dialog before printing.  Patch 1717170 Tal Einat.\n........\n  r58706 | guido.van.rossum | 2007-10-29 13:52:45 -0700 (Mon, 29 Oct 2007) | 3 lines\n\n  Patch 1353 by Jacob Winther.\n  Add mp4 mapping to mimetypes.py.\n........\n  r58709 | guido.van.rossum | 2007-10-29 15:15:05 -0700 (Mon, 29 Oct 2007) | 6 lines\n\n  Backport fixes for the code that decodes octal escapes (and for PyString\n  also hex escapes) -- this was reaching beyond the end of the input string\n  buffer, even though it is not supposed to be \\0-terminated.\n  This has no visible effect but is clearly the correct thing to do.\n  (In 3.0 it had a visible effect after removing ob_sstate from PyString.)\n........\n  r58710 | kurt.kaiser | 2007-10-29 19:38:54 -0700 (Mon, 29 Oct 2007) | 7 lines\n\n  check in Tal Einat's update to tabpage.py\n  Patch 1612746\n\n  M    configDialog.py\n  M    NEWS.txt\n  AM   tabbedpages.py\n........\n  r58715 | georg.brandl | 2007-10-30 10:51:18 -0700 (Tue, 30 Oct 2007) | 2 lines\n\n  Use correct markup.\n........\n  r58716 | georg.brandl | 2007-10-30 10:57:12 -0700 (Tue, 30 Oct 2007) | 2 lines\n\n  Make example about hiding None return values at the prompt clearer.\n........\n  r58728 | neal.norwitz | 2007-10-30 23:33:20 -0700 (Tue, 30 Oct 2007) | 1 line\n\n  Fix some compiler warnings for signed comparisons on Unix and Windows.\n........\n  r58731 | martin.v.loewis | 2007-10-31 10:19:33 -0700 (Wed, 31 Oct 2007) | 2 lines\n\n  Adding Christian Heimes.\n........\n  r58737 | raymond.hettinger | 2007-10-31 14:57:58 -0700 (Wed, 31 Oct 2007) | 1 line\n\n  Clarify the reasons why pickle is almost always better than marshal\n........\n  r58739 | raymond.hettinger | 2007-10-31 15:15:49 -0700 (Wed, 31 Oct 2007) | 1 line\n\n  Sets are marshalable.\n........ Minor correction to the stdprinter object. Patch 1352 (continued in issue 1329) by Christian Heimes.\nBefore sys.stderr is set to the proper thing, set it to a really simple\nfile-like object that can print tracebacks using direct file descriptor I/O.\nThis is handy for debugging. Patch 1329 (partial) by Christian Heimes.\nAdd a closefd flag to open() which can be set to False to prevent closing\nthe file descriptor when close() is called or when the object is destroyed.\nUseful to ensure that sys.std{in,out,err} keep their file descriptors open\nwhen Python is uninitialized.  (This was always a feature in 2.x, it just\nwasn't implemented in 3.0 yet.) Backport fixes for the code that decodes octal escapes (and for PyString\nalso hex escapes) -- this was reaching beyond the end of the input string\nbuffer, even though it is not supposed to be \\0-terminated.\nThis has no visible effect but is clearly the correct thing to do.\n(In 3.0 it had a visible effect after removing ob_sstate from PyString.) Patch 1353 by Jacob Winther.\nAdd mp4 mapping to mimetypes.py. Patch 1341 by Amaury Forgeot d'Arc.\nThis patch corrects test_fileinput on Windows: when redirecting stdout,\nos.open should be given O_BINARY, because the file descriptor is then\nwrapped in a text-mode file; os.fdopen(fd, \"w\"). Issue 1340 by Amaury Forgeot d'Arc (with help from Christian Heimes,\nand my own interpretation).\nDon't pass the newline= flag to StringIO in SpooledTemporaryFile.\nThis avoids doubling newlines when the file is rolled over. Sort the method lists for str8 and bytes so differences are more apparent.\nChanged bytes.fromhex to take a str argument, as the docstring promises.\nAdded str8.fromhex (untested so far). Kill PyString_Encode(), which isn't used anywhere.\n(We should also kill the other PyString_ encode/decode APIs, but they\nstill have some users.) Delete test_str.py.  There's not much there I care about, and it is confused\nabout whether it's testing str8 or str...  The stuff that matters is already\ntested in test_unicode.py anyway. Patch 1335 by Christian Heimes.\nAdd a bytes iterator (copied from stringobject.c and reindented :-).\nI (Guido) added a small change to _abcoll.py to remove the registration\nof bytes as a virtual subtype of Iterator -- the presence of __iter__\nwill handle that now. Patch 1330 by Christian Heimes (with some TLC applied by myself).\nMove most of the messiness with truncate() on Windows into _fileio.c.\nStill keep the flush() call in io.py though. Patch # 1331 by Christian Heimes.\nThe patch fixes some of the problems on Windows. It doesn't introduce\naddition problems on Linux. Patch # 1302 by Christian Heimes (with some love from me :-).\nThe patch fixes the output for profile and cProfile. Another patch from\nAlexandre and me added additional calls to the UTF-8 codec. Patch # 1323 by Amaury Forgeot d'Arc.\nThis patch corrects a problem in test_file.py on Windows:\nf.truncate() seeks to the truncation point, but does not empty the\nbuffers. In the test, f.tell() returns -1... Patch 1318 by Christian Heimes: remove os.tmpnam(), os.tempnam(),\nand os.tmpfile(). Fix a broken format in a PyErr_Format() call: %lx is not supported.\n(It's still technically broken since the va_args code assumes %x is\nan int while we're passing a long, but that's mostly theoretical,\nand it's done all over the place.) Make test_locale pass by removing tests that were designed to handle\nissues with <ctype.h> on various platforms.  We no longer use <ctype.h>. Patch #1318 by Amaury Forgeot d'Arc.\nUpdates to ctypes for python 3.0 to make the tests pass.\nNotable changes are:\n- return bytes instead of str8\n- integers in range(256) are accepted as \"one char string\":\n  libc.strchr(\"abcdef\", 98) is now valid.\n- directly use the wide-char version of the win32 function LoadLibrary. Patch #1314 by Christian Heimes.\nFix failing unittests for time and strptime on German and probably other\nlocalized Windows installations. Issue 1307 by Derek Shockey, fox the same bug for RCPT.\nNeal: please backport! Patch 1304, by Amaury Forgeot d'Arc.\nAdd md5module.c and sha1module.c to the project files,\nand in some cases bytes_methods.c and related .h files. Issue #1307, patch by Derek Shockey.\nWhen \"MAIL\" is received without args, an exception happens instead of\nsending a 501 syntax error response. ssue 1309: fix by Christian Heimes to be able to build on Windows. Issue 1267, continued.\nAdditional patch by Christian Heimes to deal more cleanly with the\nFILE* vs file-descriptor issues.\nI cleaned up his code a bit, and moved the lseek() call into import.c. Tweak the version *string* to clarify that this isn't your father's 3.0a1. :-) Patch 1267 by Christian Heimes.\nMove the initialization of sys.std{in,out,err} and __builtin__.open\nto C code.\nThis solves the problem that \"python -S\" wouldn't work. Patch 1280, by Alexandre Vassalotti.\nMake PyString's indexing and iteration return integers.\n(I changed a few of Alexandre's decisions -- GvR.) This is the uncontroversial half of patch 1263 by Thomas Lee:\nchanges to codecs.c and structmember.c to use PyUnicode instead of\nPyString. Patch# 1258 by Christian Heimes: kill basestring.\nI like this because it makes the code shorter! :-) Change a PyErr_Print() into a PyErr_Clear(),\nper discussion in issue 1031213. Update what the locale module documents about string operations. Patch #1272, by Christian Heimes and Alexandre Vassalotti.\nChanges to make __file__ a proper Unicode object, using the default\nfilesystem encoding.\nThis is a bit tricky because the default filesystem encoding isn't\nset by the time we import the first modules; at that point we fudge\nthings a bit.  This is okay since __file__ isn't really used much\nexcept for error reporting.\nTested on OSX and Linux only so far. Fix yet another stray 2.x-ism (maybe merged?). Make it possible to run this test stand-alone. Fix typo: formats -> format.  (Only mattered in wide unicode builds.) Fix typo in arraymodule.c (?) -- it's PyBUF_LOCK, not PyBUF_LOCKDATA. Two changes that are definitely problem-free and avoid calling print()\nwith a bytes instance (as this will soon print something differently). get rid of some more PyString uses.\nOnly the filename is still a PyString now.\n(We'll need to deal with the default filesystem encoding to do it right.) Minor cleanup of the comment for PyErr_ProgramText() and a tweak to the code\nto guarantee the claim that it doesn't set an exception. Fix another stray PyString reference that should be PyBytes; and its comment. Fix an issue in PyTokenizer_RestoreEncoding() which was treating a PyBytes\nobject with PyString calls and not checking errors.  This caused the display\nof syntax errors to be deformed. Random changes having to do with readline() and bytes. Don't depend on str8.splitlines() in test_chunkcoding(). PyFile_WriteObject() should use PyObject_Repr(), not _ReprStr8(). Silly script I'd rather not throw away. Patch #1049 by Thomas Lee.\n\nChanges comparisons between PyBytes and PyUnicode to return unequal\ninstead of raising TypeError. Replace all (locale-dependent) uses of isupper(), tolower(), etc., by\nlocally-defined macros that assume ASCII and only consider ASCII letters. Remove more traces of bufferobject.[ch] from build files etc. Delete bufferobject.[ch].\nThis will undoubtedly require Windows build file changes too. Breaking ground for PEP 3137 implementation:\n\nGet rid of buffer().  Use memoryview() in its place where possible.\nIn a few places, do things a bit different, because memoryview()\ncan't slice (yet). Make byext.py really work. Patch # 1145 by Thomas Lee:\n\nstr.join(...) now applies str() to the sequence elements if they're\nnot strings alraedy, except for bytes, which still raise TypeError\n(for the same reasons why \"\"==b\"\" raises it). Whitespace and line lengrth cleanup. Delete now-unused static function Array_ass_slice(). Fix a straggler filter() call. Patch # 188 by Philip Jenvey.\nMake tell() mark CRLF as a newline.\nWith unit test. Optimize unicode_hash() by not calling\n_PyUnicode_AsDefaultEncodedString() at all -- this saves two object\nallocations (three block allocations!)  and lots of redundant work.\nBy using the same hash algorithm as string_hash(), we maintain the\ninvariant that the hash of an ASCII string is the same whether\nrepresented as a PyString or a PyUnicode. Thomas Wouters suggested an obvious improvement to unicode_eq():\nuse memcmp(). Switch dict lookup around to optimizing for unicode.\nFor now, unicode_eq() is static inside dictobject.c;\neventually we may have to move it into unicodeobject.c,\nso as to support the same hacks from setobject.c.\n\nNone of this seems to affect performance much, but it's still the\nright thing to do. Micro optimizations after staring at gprof output for a while. Fix for bug 1148: str/bytes issue in httplib's _safe_read(). Thomas Wouters pointed out that _Abstract.__new__ should use super().__new__()\ninstead of going straight to object.__new__(). Patch # 1026 by Benjamin Aranguren (with Alex Martelli):\nBackport abc.py and isinstance/issubclass overloading to 2.6.\n\nI had to backport test_typechecks.py myself, and make one small change\nto abc.py to avoid duplicate work when x.__class__ and type(x) are the\nsame. Patch # 1140 (my code, approved by Effbot).\n\nMake sure the type of the return value of re.sub(x, y, z) is the type\nof y+x (i.e. unicode if either is unicode, str if they are both str)\neven if there are no substitutions or if x==z (which triggered various\nspecial cases in join_list()).\n\nCould be backported to 2.5; no need to port to 3.0. Bug # 1125 (my code).\nSupport bytes.split() and bytes.strip() -- these split/strip using ASCII\nwhitespace (tab, space, CR, LF, FF, VT) like their str counterparts.\nAlso for rsplit(), lstrip() and rstrip().\nAnd change all these functions to accept arbitrary buffer-API-supporting\narguments.\nWith unit tests. Patch # 1094 by Serge Julien.  Fix some bytes/str comparisons.\n(Bah, the poplib test didn't catch this.) Add REPORT_NDIFF option to o test that was hard to debug recently. In response to issue 1101, place vastly more emphasis on the new print()\nfunction. Use an event variable to wait for the server to be ready, not time.sleep(). Fix doctest failure introduced by r57949.\nThe formatting of errors from pdb's own print command is different\nfrom the formatting of errors when pdb exec's an arbitrary command;\nthe introduction of print as a pdb command caused this test to use\nthe former instead of the latter, causing the test to fail. Correction an issue reported by Mark Summerfeld. Fix sinple typo. Updated tracker link. Tagging for release of Python 3.0a1. Got test_plistlib working.  Don't ask how. Fix fall-out of str.decode removal. Neal sent real performance numbers. :-( Per Georg's suggestion, get rid of str.decode() (which always raises an\nexception) and change bytes.find() to use _getbuffer(), so b\"\".find(\"\")\nwill raise TypeError instead of SystemError. Force test_mailbox and test_old_mailbox into submission.\n(a) Several tests in test_mailbox were failing because we were writing\n    text to a file opened in binary mode.  Switching to text fixed these.\n(b) test_unix_mbox() in each test does a wacko comparison which apparently\n    no longer works due to a different way the message gets parsed.\n    I disabled this, I don't think the test was testing what it thought\n    it was testing. Customary 2nd submit of this file after it's been changed. Tutorial update for 3.0 by Paul Dubois.\n\nI had to fix a few markup issues in controlflow.rst and modules.rst.\n\nThere's a unicode issue on line 448 in introduction.rst that someone else needs to fix. Minor tweaks. First draft of a what's new document.\n(There's something wrong with my network right now so I can't build it.) Use pow() instead of repeated multiplication by 10 in round(x, n). Remove curses temp file consistently. Add some miscellanea. Add a note about the openssl dependency.  Switch to '*' bullets for easier\ncopying into the website. Small updates. Enable the trunc() test. Add numbers.py.  I suspect this is an old version, but Jeffrey is out\nof town, and it will have to do for now. Add 2.6 and 3.0 to the silly list. Update patch level to 3.0a1.  We're close enough. Update Misc/NEWS.  Add RELNOTES. Move the copyright and license stuff to the end. Two changes (not enough to make the test pass though) having to do with\nthe bytes() constructor when passing str. Oops.  I copied a slightly older version of the email package from the sandbox.\nThis should restore the email package in the py3k branch to exactly what's in\nthe sandbox.\n\nThis wipes out 1-2 fixes made post-copy, which I'll re-apply shortly. Copying the email package back, despite its failings. Fix an outdated URL in a SyntaxError message. When clobbering, also clean the docs. Make it work with Py3k. Don't delete test output when \"make clean\" is run -- only when \"make\nclobber\" is run.  (Thanks Thomas W. for pointing this out!) Modernize clean and funny targets. Mostly rewritten, much shorter README for Py3k. [Oops, I forgot half of the patch.]\nPatch # 1050 by Amaury Forgeot d'Arc.\nOn Windows, debug builds insert stack probes, and recursive functions\ntend to exhaust the stack faster.\nThis patch reduces the marshal maximum depth from 2000 to 1500 for debug\nbuilds only. Optimized builds are not affected.\nThis allows test_marshal to pass with debug builds. Andother bytes/str comparison caught by Jeremy's change. Fix issue # 1037 (sort of). Patch # 1050 by Amaury Forgeot d'Arc.\nOn Windows, debug builds insert stack probes, and recursive functions\ntend to exhaust the stack faster.\nThis patch reduces the marshal maximum depth from 2000 to 1500 for debug\nbuilds only. Optimized builds are not affected.\nThis allows test_marshal to pass with debug builds. Patch # 1048 by Amaury Forgeot d'Arc.\ntest_float crashes on Windows, because the %zd format is used in a call\nto PyOS_snprintf().\nThe attached patch properly uses PY_FORMAT_SIZE_T. Three patches from issue #1047, by Amaury Forgeot d'Arc:\n\n1/ getargs.diff adds the 'Z' and 'Z#' format specifiers for\nPyArg_ParseTuple. They mimic z and z# for unicode strings, by accepting\na Unicode or None (in which case the Py_UNICODE* pointer is set to\nNULL). With doc and tests.\n\n2/ subprocess.diff converts file PC/_subprocess.c to unicode. We use the\nUnicode version of the win32 api (and Z conversion from previous patch)\n\n3/ stdout.diff: sys.stdout must not convert the line endings, Windows\nalready does it.\nWithout this patch, when redirecting the output of python, the file\ncontains \\r\\r\\n for each line. (test_subprocess did catch this)\n\nHowever, I (GvR) removed the change to _fileio.c (included in the\npatches) that prevents closing file descripors < 3 from being closed;\nI think that needs to be solved in a different way. In rseponse to bug# 1029, force the newline default for StringIO to \"\\n\",\nso that even on Windows, after s.write(\"x\\n\"), s.getvalue() == \"x\\n\". Unset PYTHONPATH, for my convenience. Insist that the argument to TextIOWrapper.write() is a basestring\ninstance.  This was effectively already the case, but the error\nreporting was lousy. Use the correct type for variables corresponding to 'u' formats. Fix up brokenness with hashing, now hashlib is strict in requiring bytes too. Straggler (forgot to save this earlier). Refuse to compute digests from PyUnicode (str) instances.\nThis breaks a few things that I'll patch up in a minute. Oops, remove an abort() I put in for debugging. Fix the one failing test (can't decode twice). Add PyUnicode_AsStringAndSize(), which is like PyUnicode_AsString() but\nhas an extra (optional) output parameter through which it returns the size.\nUse this in a few places where I used PyUnicode_AsString() + strlen(),\nand in one new place (which fixes test_pep263). Fix test_pyclbr -- _https_connection is optional. Fix failure in error handler -- exc[-1] -> exc.args[-1]. Commit strict str/bytes distinction.\nFrom now on, trying to write str to a binary stream\nis an error (I'm still working on the reverse).\nThere are still (at least) two failing tests:\n- test_asynchat\n- test_urllib2_localnet\nbut I'm sure these will be fixed by someone. Found a different, more direct way to disable ssl support until it's fixed. Change the way the encoding parameter is handled.\nThis fixes test_doctest with strict bytes/str. Make test_cmd_line work with strict str/bytes. Fix the sqlite test.  Blobs should be created using buffer(b\"blob\"),\nnot buffer(\"blob\"). \"Fix\" a few places that were using PyObject_AsCharBuffer() to convert a string\n(PyUnicode these days) to a char* + length.  The fix consists of calling\nPyUnicode_AsString() and strlen().  This is not ideal, but AsCharBuffer()\nis definitely not the API to use. Make gettext work with strict str/bytes. Fix this test.  How could it ever have worked?! Forgot one.  This makes test_urllib2.py pass. Make test_httplib pass. Make test_urllib be strict about str/bytes.\n(One change to httplib.py, but not enough for test_httplib.) Disable this test too. Disable test_ssl until ssl.py has been fixed. Make this work on Mac as well (where Type and Creator are bytes instead of str). My wish for TempFile is fulfilled. Patch # 1033 by Adam Hupp:\n 1) tempfile.TemporaryFile, NamedTemporaryFile, and SpooledTemporaryFile\n    now pass newline and encoding to the underlying io.open call.\n 2) test_tempfile is updated\n 3) test_csv is updated to use the new arguments. Make test_cgi pass.  I changed the internal file created by make_file()\nto be a text file.  (XXX It should use UTF-8 as the encoding.)\nI also removed the unised 'binary' argument from the make_file() signature.\n\nXXX I am under no illusion that this is now working; I're pretty sure\nit would be more principled if it always read binary data.  But that's\nfor someone who actually cares about this module. Make dumbdbm use bytes for keys consistently. More str/bytes goodness. More str/bytes strictness.\n\n(XXX Though perhaps temp files should be created in text mode by default?!) str/bytes strictness. str/bytes strictness. More str/bytes strictness. posix.confname(): enforce that names as str instances. More str/bytes fixes. More changes needed to make things work once bytes and str are truly divorced. One further change. Force test_xmlrpc to pass.  I'm not happy with how I did this, but I don't\nsee a better way; the 'Binary' class is poorly specified so it's unclear\nwhat behavior is relied upon. Fix some tests I broke. (More to follow.) News about functools.reduce. Patch # 1739906 by Christian Heimes -- add reduce to functools (importing\nit from __builtin__). Changes in anticipation of stricter str vs. bytes enforcement. Changes in anticipation of stricter str vs. bytes enforcement. Patch 10124 by Bill Janssen, docs for the new ssl code. > Some of the code sets the error string in this directly before\n> returning NULL, and other pieces of the code call PySSL_SetError,\n> which creates the error string.  I think some of the places which set\n> the string directly probably shouldn't; instead, they should call\n> PySSL_SetError to cons up the error name directly from the err code.\n> However, PySSL_SetError only works after the construction of an ssl\n> object, which means it can't be used there...  I'll take a longer look\n> at it and see if there's a reasonable fix.\n\nHere's a patch which addresses this.  It also fixes the indentation in\nPySSL_SetError, bringing it into line with PEP 7, fixes a compile warning\nabout one of the OpenSSL macros, and makes the namespace a bit more\nconsistent.  I've tested it on FC 7 and OS X 10.4.\n\n% ./python ./Lib/test/regrtest.py -R :1: -u all test_ssl\ntest_ssl\nbeginning 6 repetitions\n123456\n......\n1 test OK.\n[29244 refs]\n%\n\n[GvR: slightly edited to enforce 79-char line length, even if it required\n violating the style guide.] Changes in anticipation of stricter str vs. bytes enforcement. There should be no codecs left that return str8 intead of bytes.\n(And if there are, they will now get an error when used.  So fix them!) Fix a few places that broke due to a recent change to io.py. Changes to io.py and socket.py by Christian Heimes.\n- Replace all asserts by ValuleErrors or TypeErrors as appropriate.\n- Add _checkReadable, _checkWritable methods; these check self.closed too.\n- Add a test that everything exported by io.py exists, and is either\n  an exception or an IOBase instance (except for the open function).\n- Default buffering to 1 if isatty() (I had to tweak this to enforce\n  the *default* bit -- GvR). Changes in anticipation of stricter str vs. bytes enforcement. Changes in anticipation of stricter str vs. bytes enforcement. > Regardless, building a fixed test certificate and checking it in sounds like\n> the better option.  Then the openssl command in the test code can be turned\n> into a comment describing how the test data was pregenerated.\n\nHere's a patch that does that.\n\nBill Changes preparing for stricter enforcement of bytes vs. str. Some changes in preparation of stricter rules about mixing str and bytes. Cosmetics in error messages. When elapsed and expected time differ, at least show their two values. Bill Janssen wrote:\nHere's a patch which makes test_ssl a better player in the buildbots\nenvironment.  I deep-ended on \"try-except-else\" clauses. Pass PyBUF_CHARACTER instead of PyBUF_SIMPLE to PyObject_GetBuffer().\nThis makes the failing tests (test_unicodedata and, on OSX, test_hashlib) pass.\n\nXXX However, I'm not sure that this is the right thing to do;\nthis behavior means that Unicode strings are automatically hashed as their\nUTF-8 encoding.  Is that what we want? Server-side SSL and certificate validation, by Bill Janssen.\nWhile cleaning up Bill's C style, I may have cleaned up some code\nhe didn't touch as well (in _ssl.c). Cosmetic fixes to make this work with Py3k (as well as with 2.5 still).\nPatch by Christian Heimes. Remove the email package for now.\nOnce Barry and the email-sig have a working new version\nwe'll add it back.\nIf it doesn't make the 3.0a deadline (release August 31), too bad. Reorder code and decls so it's compilable with gcc 2.96 (C89). Add a few mixed-mode (set vs. dict view) comparisons. Keir Mierle's improved tests for dict view containment tests. Add some mixed operations between sets and dict views. Add unit tests for set ops on dict.items(). Keir Mierle's set operations for dict views (keys/items only of course). Patch with Keir Mierle: add rich comparisons between dict views and sets,\nat least for .keys() and .items() (not .values() of course). Whitespace cleanup. Clean up after a merge left behind old except clause syntax. Merged revisions 57221-57391 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r57227 | facundo.batista | 2007-08-20 17:16:21 -0700 (Mon, 20 Aug 2007) | 5 lines\n\n\n  Catch ProtocolError exceptions and include the header information in\n  test output (to make it easier to debug test failures caused by\n  problems in the server). [GSoC - Alan McIntyre]\n........\n  r57229 | mark.hammond | 2007-08-20 18:04:47 -0700 (Mon, 20 Aug 2007) | 5 lines\n\n  [ 1761786 ] distutils.util.get_platform() return value on 64bit Windows\n  As discussed on distutils-sig: Allows the generated installer name on\n  64bit Windows platforms to be different than the name generated for\n  32bit Windows platforms.\n........\n  r57230 | mark.hammond | 2007-08-20 18:05:16 -0700 (Mon, 20 Aug 2007) | 5 lines\n\n  [ 1761786 ] distutils.util.get_platform() return value on 64bit Windows\n  As discussed on distutils-sig: Allows the generated installer name on\n  64bit Windows platforms to be different than the name generated for\n  32bit Windows platforms.\n........\n  r57253 | georg.brandl | 2007-08-20 23:01:18 -0700 (Mon, 20 Aug 2007) | 2 lines\n\n  Demand version 2.5.1 since 2.5 has a bug with codecs.open context managers.\n........\n  r57254 | georg.brandl | 2007-08-20 23:03:43 -0700 (Mon, 20 Aug 2007) | 2 lines\n\n  Revert accidental checkins from last commit.\n........\n  r57255 | georg.brandl | 2007-08-20 23:07:08 -0700 (Mon, 20 Aug 2007) | 2 lines\n\n  Bug #1777160: mention explicitly that e.g. -1**2 is -1.\n........\n  r57256 | georg.brandl | 2007-08-20 23:12:19 -0700 (Mon, 20 Aug 2007) | 3 lines\n\n  Bug #1777168: replace operator names \"opa\"... with \"op1\"... and mark everything up as literal,\n  to enhance readability.\n........\n  r57259 | facundo.batista | 2007-08-21 09:57:18 -0700 (Tue, 21 Aug 2007) | 8 lines\n\n\n  Added test for behavior of operations on an unconnected SMTP object,\n  and tests for NOOP, RSET, and VRFY. Corrected typo in a comment for\n  testNonnumericPort. Added a check for constructing SMTP objects when\n  non-numeric ports are included in the host name. Derived a server from\n  SMTPServer to test various ESMTP/SMTP capabilities. Check that a\n  second HELO to DebuggingServer returns an error. [GSoC - Alan McIntyre]\n........\n  r57279 | skip.montanaro | 2007-08-22 12:02:16 -0700 (Wed, 22 Aug 2007) | 2 lines\n\n  Note that BeOS is unsupported as of Python 2.6.\n........\n  r57280 | skip.montanaro | 2007-08-22 12:05:21 -0700 (Wed, 22 Aug 2007) | 1 line\n\n  whoops - need to check in configure as well\n........\n  r57284 | alex.martelli | 2007-08-22 14:14:17 -0700 (Wed, 22 Aug 2007) | 5 lines\n\n  Fix compile.c so that it records 0.0 and -0.0 as separate constants in a code\n  object's co_consts tuple; add a test to show that the previous behavior (where\n  these two constants were \"collapsed\" into one) causes serious malfunctioning.\n........\n  r57286 | gregory.p.smith | 2007-08-22 14:32:34 -0700 (Wed, 22 Aug 2007) | 3 lines\n\n  stop leaving log.0000001 __db.00* and xxx.db turds in developer\n  sandboxes when bsddb3 tests are run.\n........\n  r57301 | jeffrey.yasskin | 2007-08-22 16:14:27 -0700 (Wed, 22 Aug 2007) | 3 lines\n\n  When setup.py fails to find the necessary bits to build some modules, have it\n  print a slightly more informative message.\n........\n  r57320 | brett.cannon | 2007-08-23 07:53:17 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Make test_runpy re-entrant.\n........\n  r57324 | georg.brandl | 2007-08-23 10:54:11 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1768121: fix wrong/missing opcode docs.\n........\n  r57326 | georg.brandl | 2007-08-23 10:57:05 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1766421: \"return code\" vs. \"status code\".\n........\n  r57328 | georg.brandl | 2007-08-23 11:08:06 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Second half of #1752175: #ifdef out references to PyImport_DynLoadFiletab if HAVE_DYNAMIC_LOADING is not defined.\n........\n  r57331 | georg.brandl | 2007-08-23 11:11:33 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Use try-except-finally in contextlib.\n........\n  r57343 | georg.brandl | 2007-08-23 13:35:00 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1697820: document that the old slice protocol is still used by builtin types.\n........\n  r57345 | georg.brandl | 2007-08-23 13:40:01 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1573854: fix docs for sqlite3 cursor rowcount attr.\n........\n  r57347 | georg.brandl | 2007-08-23 13:50:23 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1694833: fix imp.find_module() docs wrt. packages.\n........\n  r57348 | georg.brandl | 2007-08-23 13:53:28 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1594966: fix misleading usage example\n........\n  r57349 | georg.brandl | 2007-08-23 13:55:44 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Clarify wording a bit.\n........\n  r57351 | georg.brandl | 2007-08-23 14:18:44 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1752332: httplib no longer uses socket.getaddrinfo().\n........\n  r57352 | georg.brandl | 2007-08-23 14:21:36 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1734111: document struct.Struct.size.\n........\n  r57353 | georg.brandl | 2007-08-23 14:27:57 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1688564: document os.path.join's absolute path behavior in the docstring.\n........\n  r57354 | georg.brandl | 2007-08-23 14:36:05 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1625381: clarify match vs search introduction.\n........\n  r57355 | georg.brandl | 2007-08-23 14:42:54 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Bug #1758696: more info about descriptors.\n........\n  r57357 | georg.brandl | 2007-08-23 14:55:57 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Patch #1779550: remove redundant code in logging.\n........\n  r57378 | gregory.p.smith | 2007-08-23 22:11:38 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  Fix bug 1725856.\n........\n  r57382 | georg.brandl | 2007-08-23 23:10:01 -0700 (Thu, 23 Aug 2007) | 2 lines\n\n  uuid creation is now threadsafe, backport from py3k rev. 57375.\n........\n  r57389 | georg.brandl | 2007-08-24 04:47:37 -0700 (Fri, 24 Aug 2007) | 2 lines\n\n  Bug #1765375: fix stripping of unwanted LDFLAGS.\n........\n  r57391 | guido.van.rossum | 2007-08-24 07:53:14 -0700 (Fri, 24 Aug 2007) | 2 lines\n\n  Fix silly typo in test name.\n........ Fix silly typo in test name. Fix logic bug that triggered assert. Make uuid.py thread-safe.  Fix by Yuri Ginsburg. Fixes by Ero Carrera to remove PyString_.  I had to massage a few problems away.\nAlso, this now leaks a bit -- that's for tomorrow's sprint day. Patch by Ero Carrera to get rid of PyString in timemodule.c. math.floor(<int>) now returns the argument,\nso the overflow test no longer matters. Before calling _PyType_Lookup() the type needs to be initialized. Patch by Keir Mierle so that sets can be compared to other objects that know\nhow to compare themselves to sets.  (Prep work for making dict views more\nset-like.) CFunctions' doc strings should be Unicode. Fix math.ceil() and math.floor() to fall back to __ceil__ and __floor__\nmethods (respectively).  With Keir Mierle. Finish the work on __round__ and __trunc__.\nWith Alex Martelli and Keir Mierle. Remove unused variable. Correction to the xmlrpc docs by John Reese and Jacques Frechet. Fixes by John Reese and Jacques Frechet that make test_xmlrpc pass.\n(Note that test_xmlrpc isn't touched by the fixes!)  There were two\nseparate issues; (a) BaseHTTPServer was using a TextIOWrapper which\nwas swallowing some of the POST body; (b) the getheaders() API was\nchanged but (due to integration of 2.6 code) the code wasn't modified. Change the error reporting when an invalid string is encountered to avoid\nreporting s'x' as the input (which is a lie). Use python -E instead of undef PYTHONPATH. Make IOBase (and hence all other classes in io.py) use ABCMeta as its metaclass,\nso you can use their class .register() method to register virtual subclasses. Convert sunaudio.py to bytes.  (It has no unit test of its own!)\nFix test_ossaudiodev by closing the dsp properly (it can't be opened\nmultiple times on my box). Fix fallout from making __private variables in threading.py _protected.\n(Maybe we need to pick less obvious names for some of those?) Make runtests.py a little more versatile: support -x, and arbitrary flags\nto be passed to regrtest.py.  Also add -h for help, and summarize the\nBAD/GOOD/SKIPPED files at the end. Rename __whatever variables defined by ABCMeta to _abc_whatever, so as\nto simplify legitimate use of these. Get rid of all __private variables and methods in the threading module.\nThese have mostly just gotten in the way of legitimate unanticipated use. Merged revisions 57152-57220 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r57155 | brett.cannon | 2007-08-17 11:51:57 -0700 (Fri, 17 Aug 2007) | 2 lines\n\n  Clarify the comment about setting the PYTHON variable for the Doc Makefile.\n........\n  r57156 | brett.cannon | 2007-08-17 11:59:58 -0700 (Fri, 17 Aug 2007) | 3 lines\n\n  Remove news entry for test.test_support.guard_warnings_filter as it has been\n  removed.\n........\n  r57158 | facundo.batista | 2007-08-17 12:16:44 -0700 (Fri, 17 Aug 2007) | 9 lines\n\n\n  Added a flag (_send_traceback_header) to the SimpleXMLRPCServer class\n  that allows sending back exception/stack trace information about\n  internal server errors (this flag defaults to False to avoid sending\n  such information unless explicitly enabled).  Added tests to verify\n  behavior of this new feature (these tests are skipped on win32 because\n  of problems with WSAEWOULDBLOCK). Renamed HTTPTestCase to\n  SimpleServerTestCase. [GSoC - Alan McIntyre]\n........\n  r57160 | brett.cannon | 2007-08-17 13:16:15 -0700 (Fri, 17 Aug 2007) | 2 lines\n\n  Make test_warnings re-entrant.\n........\n  r57175 | georg.brandl | 2007-08-17 23:05:56 -0700 (Fri, 17 Aug 2007) | 2 lines\n\n  Fix PDB command descriptions.\n........\n  r57182 | brett.cannon | 2007-08-18 11:30:36 -0700 (Sat, 18 Aug 2007) | 3 lines\n\n  Remove Mikael as the maintainer of BeOS at his request.  With no maintainer\n  should the port be deprecated in 2.6?\n........\n  r57199 | georg.brandl | 2007-08-19 11:43:50 -0700 (Sun, 19 Aug 2007) | 2 lines\n\n  Fix stray backticks.\n........\n  r57211 | hyeshik.chang | 2007-08-19 23:49:18 -0700 (Sun, 19 Aug 2007) | 2 lines\n\n  Add cheot-ga-keut composed make-up sequence support in EUC-KR codec.\n........\n  r57216 | guido.van.rossum | 2007-08-20 08:18:04 -0700 (Mon, 20 Aug 2007) | 4 lines\n\n  Add a hack (originally devised in a slightly different form by Thomas Wouters)\n  to prevent spurious tracebacks when a daemon thread's cleanup happens to wake\n  up when the world around it has already been destroyed.\n........ Add a hack (originally devised in a slightly different form by Thomas Wouters)\nto prevent spurious tracebacks when a daemon thread's cleanup happens to wake\nup when the world around it has already been destroyed. Fix an unfinished though in my own test code.\n(testNewlinesInput and testNewlinesOutput are mine, not Tony's.) New I/O code from Tony Lownds implement newline feature correctly,\nand implements .newlines attribute in a 2.x-compatible fashion. Make the cleanup between -R passes deal better with ABC registries,\n*restoring* selected registries instead of *resetting* them all.  Also\nchange the default for the huntrleaks parameter to None everywhere, as\nits other value is a list of three elements, so it is not a bool. Fix _dump_registry() to use the correct prefix for the private\nmethods.  Reset the negative cache *before* resetting the invalidation\ncounter, hoping this may plug a race condition (but then again, this\nwhole module isn't coded to be thread-safe). Force PYTHON = python2.5. Allow -R4:3 instead of -R4:3: -- I never use the 3rd arg. Change the usage() function.  Don't print the entire multi-page\ndocstring when there's a command line syntax error. Another merge.  Only doc stuff was affected (but this aligns the UTF-32\ncodec changes in trubk and branch).  Hopefully the Py3k glossary wasn't\ndifferent from the trunk one. Print warning when openssl is too old; it's pretty essential at this point. Move some declarations before code, to compile with GCC 2.95. Fix refcount leak, courtesy Christian Heines. Fix the IPv6 pton/ntop tests.  Why weren't these failing on Linux?  No IPv6? Merged revisions 57113-57124 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/trunk\n\n........\n  r57123 | guido.van.rossum | 2007-08-16 20:30:08 -0700 (Thu, 16 Aug 2007) | 2 lines\n\n  Ignore *.py[co] files.\n........\n  r57124 | guido.van.rossum | 2007-08-16 20:36:03 -0700 (Thu, 16 Aug 2007) | 2 lines\n\n  Ignore a few more files.\n........ Ignore a few more files. Ignore *.py[co] files. Manually patched a few things that didn't get merged in, but should. First merge from the trunk straight into the py3k branch.  I'm not\nusing the message generated by svnmerge, because it contains a lot of\nstuff about the Doc tree, which I'm not merging this time due to the\nway the Doc tree was initially added.  I am however adding roman.py\nwhich was added later to Doc/tools.  I'll try to diff the two Doc\ntrees separately to see if there's stuff I missed. Initialized merge tracking via \"svnmerge\" with revisions \"1-56846\" from\nsvn+ssh://pythondev@svn.python.org/python/trunk Delete svnmerge properties (temporarily). Get rid of some dead code and unneeded XXX comments by Neal. Down with str8!\nChange various socket APIs to use bytes or str instead str8. The dbm module should use bytes for keys.  This makes test_shelve pass. Patch suggested Paul Colomiets fixes test_threaded_import.py. Don't mess with string.letters any more.  It is most likely going to disappear.\nEven if it isn't, it shouldn't be changed based on the locale setting IMO.\n(Incidentally, this makes test_csv.py pass again on my box.) Improved patches for sndhdr and imghdr by Victor Stinner, who writes:\n - fix \"h[sbseek] == b'\\1'\" and \"ratecode = ord(h[sbseek+4])\" in test_voc()\n - avoid division by zero\n - use startswith method: replace h[:2] == b'BM' by h.startswith(b'BM')\n - use aifc.open() instead of old aifc.openfp()\n - use ord(b'P') instead of ord('P') Fix two obvious 2.xisms. Quick fix for a new problem here -- using string.lowercase somehow caused\nproblems. A few sqlite files were still using RO instead of READONLY. Use an event variable to wait for the server to be ready, rather than sleep(0.1). Fix refcount bug in make_Zreplacement(). Fix a bit of code that wasn't converted properly, causing a segfault. A small tweak to avoid calling traceback.format_exception_only() with\na bogus (tuple) value.  This should fix the \"make install\" issue Neal\nreported. Remove spurious (and unneeded) import of StringIO. In PyFile_WriteString(), call PyUnicode_FromString() instead of\nPyString_FromString().  This is arguably more correct, even if it\nshouldn't matter much (all the input is likely to be ASCII). Hack to avoid a nasty recursion issue when Python is invoked\nin verbose mode: pre-import the Latin-1 and UTF-8 codecs Backport r56875 from py3k; double LEAVE_PYTHON when AsString() fails\nin PythonCmd(). Fix some logic in PythonCmd() -- if the AsString() call failed, we'd\nbe calling LEAVE_PYTHON twice (once in PythonCmd_Error() and once in\nPythonCmd() itself).\n\nThis fix doesn't fix the IDLE problems, but at least makes them more\ndebuggable by getting rid of the segfault.\n\nWill backport. Fix two bugs in socket_getaddr():\n(a) 'single' shouldn't be DECREF'ed in the cleanup code;\n(b) the fallback case in makesockaddr() should use y# instead of s#\n    in the format, since the data is bytes, not UTF-8 text. Oops.  The PyObject_Print() function was totally broken; the original code\nwas relying on PyString.tp_print but that no longer works.\nFortunately it's rarely called; only the gdb 'pyo' command seems affected. Oops, this was placed in the wrong branch. Add a tombstone. Create the new Py3k branch. Merged revisions 56782-56847 via svnmerge from\nsvn+ssh://pythondev@svn.python.org/python/branches/p3yk\n\n................\n  r56808 | kurt.kaiser | 2007-08-07 14:15:45 -0700 (Tue, 07 Aug 2007) | 2 lines\n\n  Replace sys.exitfunc call with atexit call\n................\n  r56835 | thomas.wouters | 2007-08-08 09:20:30 -0700 (Wed, 08 Aug 2007) | 8 lines\n\n\n  Tests for dict comprehensions I forgot to 'svn add' when committing the\n  actual feature.\n\n  I was _sure_ I had checked in these new tests already, but I guess the\n  checkin failed and I didn't notice.\n................\n  r56847 | guido.van.rossum | 2007-08-09 07:03:34 -0700 (Thu, 09 Aug 2007) | 30 lines\n\n  Merged revisions 56760-56846 via svnmerge from\n  svn+ssh://pythondev@svn.python.org/python/trunk\n\n  ........\n    r56762 | georg.brandl | 2007-08-06 00:37:58 -0700 (Mon, 06 Aug 2007) | 2 lines\n\n    Place #ifdef Py_USING_UNICODE around decode_unicode().\n  ........\n    r56763 | georg.brandl | 2007-08-06 00:39:09 -0700 (Mon, 06 Aug 2007) | 2 lines\n\n    Replace unnecessary function call.\n  ........\n    r56764 | georg.brandl | 2007-08-06 00:52:20 -0700 (Mon, 06 Aug 2007) | 2 lines\n\n    Patch #1765839: add link to https+proxy urllib2 opener.\n  ........\n    r56797 | georg.brandl | 2007-08-07 00:13:24 -0700 (Tue, 07 Aug 2007) | 2 lines\n\n    Bug #1769002: fix a now-wrong sentence in the tutorial.\n  ........\n    r56830 | georg.brandl | 2007-08-08 06:03:41 -0700 (Wed, 08 Aug 2007) | 3 lines\n\n    Revert the fix for #1548891, it broke backwards compatibility with arbitrary read buffers.\n    Fixes #1730114.\n  ........\n    r56833 | georg.brandl | 2007-08-08 06:50:02 -0700 (Wed, 08 Aug 2007) | 2 lines\n\n    Fix compilation warning.\n  ........\n................ SF patch# 1770008 by Christian Heimes (plus some extras).\nCompletely get rid of StringIO.py and cStringIO.c.\n\nI had to fix a few tests and modules beyond what Christian did, and\ninvent a few conventions.  E.g. in elementtree, I chose to\nwrite/return Unicode strings whe no encoding is given, but bytes when\nan explicit encoding is given.  Also mimetools was made to always\nassume binary files. Fix core dump in an endcase of b.strip() that I missed. Switch wsgiref to io.{StringIO,BytesIO}.  This shuts up the test failures.\n(I'm not sure about it actually working though.) Fix a type error in a previous patch I made to this module.\nI should not ignore compiler warnings! Fix the last remaining test_csv failure.\nWe were using T_CHAR for a UNICODE character.\n(This happened to work on x86 most of the time due to endianness;\nbut not on PPC.) BZ2File.read(0) should return b\"\" rather than raising ValueError.\nThis fixes test_tarfile.py.\nI've added a unit test for the correct bz2 behavior. Remove the coding line, and convert umlauted characters to \\x escapes.\nAll code in the stdlib should be ASCII only, unless (a) it's test\ninput for testing the *parsing* of unicode, or (b) it's an author's\nname in a comment. Fix the test_minidom failure.\nWe just need to force the encoding when no encoding is passed to toxml()\nor toprettyxml(), rather than relying on the default encoding (which is\nunreliable). Change the repr() of frozenset instances (and set subclasses)\nfrom name([e1, e2, ...]) to name({e1, e2, ...}).\nThis makes more sense now we have the set notation. Remove more references to intobject. Oops.  I killed a bit too much and not enough when I deleted intobject.c. Kill references to tp_print. Kill remaining tp_print definitions. ",
      "nbWordsMessagePerCommit": "14.3"
    },
    "stats": {
      "Python": {
        "language": "Python",
        "nbCommit": 3976,
        "nbWordsMessage": 57192,
        "nbWordsMessagePerCommit": "14.4"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 18,
        "nbWordsMessage": 98,
        "nbWordsMessagePerCommit": "5.4"
      }
    }
  },
  "BrendanEich": {
    "user": "BrendanEich",
    "statsGlobal": {
      "nbCommits": 634,
      "nbWordsMessage": 7069,
      "messages": "Initial BrazilJS [20:08:28] Local gulp not found in ~/Hacking/BrazilJS 2015\n[20:08:28] Try running: npm install gulp dist commit. Revert \"Fix section number comments thrown off by ExponentiationExpression addition; pluralize Keyed Collections to match Indexed Collections.\"\n\nThis reverts commit 98315921c43eb7dd408758e440ef947ab0b4b005. Fix section number comments thrown off by ExponentiationExpression addition; pluralize Keyed Collections to match Indexed Collections. Add my title and name/link. Fix thinko that broke non-paren-free mode (rs=me, thanks and apols to taustin). Now --interactive tries to prefix js with rlwrap and fall back if rlwrap is not found. Fix escaped newline in string literal, picked gratuitous escaped quote nit in jsdecomp.js found when looking for escapes too. Avoid JS extensions, use ES3-ish JS in front end per dherman. Fix paren-free mode to require braces unless sub-statement starts with statement-starting keyword. Make repl() read lines from stdin until a compilable unit has been assembled, or an error that can't be repaired by reading more input is hit. Add experimental paren-free mode (--paren-free/-p option to njs), clean up options code slightly. Improve repl error reporting. Wrap lines at column 100. Consistently capitalize names of functions that parse nonterminals of the grammar. else-after-return, bracing, and other nitpicks. Style policing: else-after-break, bracing, un-nest assignment (initialize decl instead), etc. (r=gal). Rename ecmaStrictMode to ecma3OnlyMode, use fresh prototype object initialiser for better style. Fuss over comment in last changeset (518765). Merge branch 'master' into gh-pages Renamed sieve.html to index.html. First commit\n\nSieve of Eratosthenes demo. My Strange Loop 2012 closing keynote slides Initial commit Merge pull request #7 from BrendanEich/master\n\nFix missing https:, h/t @odran037. Fix missing https:, h/t @odran037. Merge pull request #3 from BrendanEich/master\n\nFix missing links, h/t @getify. Fix missing links, h/t @getify. Merge pull request #2 from BrendanEich/master\n\nFix typo, h/t @getify. Fix typo, h/t @getify. Merge pull request #1 from BrendanEich/master\n\nInitial commit Initial commit Initial commit Link to \"https://bterlson.github.com/ecmarkup/elements.css\" instead of to missing ./elements.css. initial website version Bug 685321: detect closed-over variables conservatively, r=jorendorff Make test for bug 695577 shell-only pending investigation. Ban E4X in ES5 strict mode (bug 695577, r=luke). Tweak to skip-if not fail-if for bug 588061's shell-only test. Bug 588061 - bogus initial tokenizer position (r=cdleary). Bug 621954 - common BindLocalVariable harder in jsparse.cpp (r=cdleary). Bug 671947 - Unqualified function invocation uses the global object the property was gotten from as |this| (r=luke). Bug 621954 - common BindLocalVariable harder in jsparse.cpp (r=cdleary). Fuse common return interpReturnOK; path (and put comment inside ifdef where it belongs); fit assertion in 100 columns (r=me). Use common sub-expression more (r=self). Oops, forgot the test for bug 588061. Inherited non-configurable accessor properties mis-reported as own properties (637994, r=jwalden). No else after return. Bug 664009 - Fix a minor array bug that happens to break some code.  r=jwalden, a=clegnitto Strict mode early error (strict option warning) on assignment to declared const (383902, r=jwalden). Object.getOwnPropertyNames considers enumerable getter inherited properties as own (636989, r=jorendorff/gal). Bug 588061 - bogus initial tokenizer position (r=cdleary). Fix assertion botched by function using a previously mentioned name and therefore claiming its placeholder or declared definition; the function must have sane end vs. begin source coordinates for error reporting purposes (640075, r=njn). Put #undef where it belongs. Pushing new test I forgot to hg add (636364 ; thanks to philor for reminder). Further comment fussing (636364, r=me). Fix comment glitch in last push (636364, r=me). Followup fixes and tests in wake of global |this| binding change (636364, r=luke/gal/dvander, thanks to Waldo for the newGlobal shell function). Fix unqualified function invocation etc., part deux (635582, r=gal).  (relanding in a CLOSED TREE) Fix unqualified function invocation etc., part deux (635582, r=gal). Back out on orange (635548, r/a=shaver). Fix spurious \"attempt to run compile-and-go script on a cleared scope\" errors (635548, r/a=shaver). Method read barrier requried when changing attributes but not value (634210, r=jorendorff). Warning fixes (630865, r=jorendorff). Remove surprisingly-bogus assertion (634593, r=jorendorff). Back out on orange (635548, r/a=shaver). Fix spurious \"attempt to run compile-and-go script on a cleared scope\" errors (635548, r/a=shaver). Fix ancient break-or-continue-to-label lexing operator vs. operand mode bug (642975, r=njn). Fix JSOP_ARGSUB to abort on frame with arguments object (624547, r=dvander). Fix C++ violation tolerated by GCC and MSVC, caught by Clang (623303, rs=luke). Remove partial flat closure hold-over that has O(n^2) complexity (617430, r=dmandelin). Try a back-out to cure XPCOM leaks (WTF?). Remove partial flat closure hold-over that has O(n^2) complexity (617430, r=dmandelin). Get rid of JSOP_{GET,CALL}UPVAR and simplify code greatly (592202, r=jorendorff). Cope with localStorage reifying __iterator__ with null value, and the like (573875, r=gal). Determine whether to shadow a property based on slotful *or* has JSPropertyOp setter (552432, r=jorendorff). Fix joined method leak via arguments.callee.caller (586482, r=igor). Backing out last push. Add more to {alloc,free}Slot comment, pick closing comment style nit. Enable XPC_CHECK_WRAPPER_THREADSAFETY in release builds and make it force a failure from XPCWrappedNative::FinishInit (612745, r=gal). Fix //@line from stdin and (more important) add @line testcase (618652, r=njn). Bug 586482 - arguments.callee.caller not equal to proto-delegated joined function object method (r=igor). Bug 620750 - \"arguments;\" sneaks into decompilation (r=luke). #ifdef DEBUG var used only in assertion to avoid warning. Incorrect decompilation with non-ASCII property name in destructuring (621814, r=igor). Second followup for 619003, adding the jsreftest needed to cover the bug fixed by the first followup. Some comment tweaks too.\n\n--HG--\nrename : js/src/tests/js1_8_5/regress/regress-619003.js => js/src/tests/js1_8_5/regress/regress-619003-1.js Fix bug in patch for 619003 to cure orange. Restore append-only fun->u.i.names rule by binding destructured-to vars for destructuring args after binding all args (619003, r=igor). ES5 directives should not trigger 'useless expression' errors (559402, r=jimb). Add FIXME: bug 611190 for last commit (which was for bug 550391). Lots of MISMATCH_EXITS exits due to protohazardshape on voxel rendering demo (550391, r=mrbkap). bz/brendan patch to hash function-local shapes in dictionary mode due to too many locals (610370, r=brendan/bz). Skip evalcx-based test in browser. Fix expression and value-generator decompilation to accept prolog ops, required due to ES5 metaprogramming APIs (607513, r=Waldo). PropertyTable::{init,change} should use js_calloc/js_free, and JSObject::addPropertyInternal should report OOM on change failure (606880, r=anygregor). JSOPTION_ANONFUNFIX should be set in js shell (5595555, r=cdleary). Warning fixes (one left over from 602621, the other from 584789). Implement method thrash counting, at limit unbrand and stick count to limit; also, brand and unbrand return false on shape overflow, so call them that way instead of as if infallible (597864, r=dvander). Fix MakeUpvarForEval vs. normal upvar bookkeeping (615657, r=dmandelin). Long day... Burned by JSOPTION_ANONFUNFIX again. More old test hacking in wake of 445319. Forgot the test for 600137. Adjust js1_5/extensions/regress-369696-02.js in wake of 445319 fix. Test for bug 600137 (fixed by patch for 445319). Per ECMA-262, no .prototype for built-in functions and Function.prototype (445319, r=Waldo). Need to JS_CHECK_RECURSION in GetTrap as well as Trap (aslo rename GetTrap wrappers to start with Get; 589103, r=gal). Back out my last push (599009 botched followup). Nit-picks, mainly localizing and initializing the oldAttrs var, on patchwork for bug 599009 (r=bz). Style policing: else-after-break, bracing, un-nest assignment (initialize decl instead), etc. (r=gal). Fix patch merge problem that restored bad old script line for 597945-1.js. Handle extended indexes around JSOP_*BLOCKCHAIN (610026, r=billm). Lazy resolution of standard classes changes the shape of Object.prototype (610697, r=mrbkap).\n\n--HG--\nextra : rebase_source : 7d95f23e2dbf9b11a416f07ae51d409d95e130cb Prebrand standard classes with standard methods (610698, r=jorendorff). Bug 609617 - delete(eval(...)) calls indirect eval (r=jimb). Property enumeration order is altered after a method has been read (601399, r=jorendorff). Fix bogus assertion: \"!shape->inDictionary()\" (only if not shape->frozen(); 592217, r=jorendorff). Fix test for 597870 (CLOSED TREE). Fix decompiler LHS -> RHS special cases switch to cover JSOP_SETXMLNAME (597870, r=igor; CLOSED TREE). Fix slot leak that leads to allocSlot assert botch (597945, r=jorendorff). Fix slot leak that leads to allocSlot assert botch (597945, r=jorendorff). Object.defineProperty should avoid JS API inside engine, plus a few other cleanups (598176, r=jorendorff). Fix shape vs. slot management under putProperty, plus related layering and error reporting fixes (596805, r=jorendorff). Warning fix from Luke (no bug, r=me). Don't recycle class-reserved slots onto a dictionary table's freelist (595230, r=jorendorff). Sample initialShape after putProperty call, which may go toDictionaryMode (596128, r=bhackett). JSFunction::addLocal never calls Shape::maybeHash (595918, r=jorendorff). Fix screwed up layering of GC marking for  JSObject::emptyShape (596103, r=jorendorff). Modularize to avoid inline vs. not ShapeHasher static woes (595615, r=dbaron) Try to fix Ts regression from patch for bug 592556... Google Maps crash on tracemonkey branch (595365, precog a=jorendorff). Modularize to avoid inline vs. not ShapeHasher static woes (595615, r=dbaron, a=beta6+/debug-only-fix-for-devs). Google Maps crash on tracemonkey branch (55365, precog r=jorendorff, a=beta6+). Parenthesize lambda statement expressions to work in browser (where JSOPTION_ANONFUNFIX is set; followup for 593256). Fix slot leak that leads to allocSlot assert botch (597945, r=jorendorff). Rename freeslot appropriately (593256 separated cosmetics-only patch, r=jorendorff). Bugs in dictionary-mode property table maintenance (593256, r=jorendorff). Clean up JSOP_DEFFUN and duplicated methodjit StubCall logic, fixing latent arguments override bug (602621, r=igor). Eliminate JSObject::freeslot via monotonic lastProp->freeslot (592556, r=jorendorff,dvander). Wrong behavior setting existing properties to joined function object values (592412, r=jorendorff). Bug 592001 - Fix v8-regexp regression in wake of patch for bug 558451 (r=igor, CLOSED TREE). Back out last push (CLOSED TREE). Bug 592001 - Fix v8-regexp regression in wake of patch for bug 558451 (r=gal; CLOSED TREE). Bug 591897 - \"Assertion failure: s.slot + 1 == callobj->freeslot,\" (r=igor, \"CLOSED TREE\"). Followup fix to my hand-merge botch backing out patch for bug 477999. Back out patch for 477999 due to assertbotch on Mac OS X trace-test shutdown, all tests. Merge JSScope into JSObject and JSScopeProperty (now js::Shape; bug 558451, r=jorendorff). Try to fix Ts regression from patch for bug 592556... (r/a=sayrer). Check for inDictionaryMode after putProperty call when adding, in case of toDictionaryMode (596128, r=bhackett, a=me). Bug 535629 - Deleted properties' slots are not recycled (r=gal).\n\n--HG--\nextra : rebase_source : 04a8bbd6731e4e9b9d36a5d685c5ee0f87db064e Followup fix for gaping hole in patch for bug 591846 (credit to jorendorff, r=me). Allow PropertyOp-based data properties to be frozen at last-got value (591846, r=jwalden). Arguments.callee.caller does not work in FF 4 under certain circumstances (577648, r=jwalden). Back out patch for bug 577648, need to fix a leak. arguments.callee.caller does not work in FF 4 under certain circumstances (577648, r=jwalden). Assertion failure: scope->canProvideEmptyScope(&js_ObjectOps, clasp) (574280, r=gal). Bug 582479 - TM: \"Assertion failure: (&cx->regs->sp[1 - (iargc + 2)].toObject())->isFunction().\" Eliminate JSClass::reserveSlots and streamline new-object paths (535416, r=gal). Assertion failure: slot < (uint32)dslots[-1] (571744, r=dvander). Remove JSOP_THIS case from Boolish to fix ES5 strict this-as-truthy bug (630543, r=me). Back out a81f2aed9c9b due to orange. Eliminate JSClass::reserveSlots and reserve fixed-per-class slots lazily (535416, r=gal). Skip tests that fail always on 64-bit targets. Cherry-pick patch from bug 561674 to not define DEBUG_USERNAME. Fix warnings due to constant JS_MAX size params in MAX_DSLOTS_LENGTH (r=gal).\n\n--HG--\nextra : rebase_source : eb93aa51f3ee12ff4711170093434910ff19a125 ES5 Object.create misbehaves in particular scenario (585891, r=jwalden). Fix failure to handle deep bail, and stop recording properly, in wake of bug 523452 (569843&569849, r=jorendorff). Test for bug 568056. Iterator(obj) returns a property key/value iterator that skips the proto chain (568056, r=gal). Followup fix and cleanup for 523452. Trace JSOP_DEL{PROP,ELEM} (523452, r=gal). Can't rely on UINT16_MAX cross-platform (followup for 569391, bustage fix). Call instances uniquely shaped at birth due to lack of runtime-shared empty scope (569391, r=jorendorff). Nit patrol flies at dawn, spots minor spacing infractions. Followup for 568148 to cure orange from e4x/decompilation/regress-463360.js. Strengthen our onlyXML checking (568148, r=gal). Fix getter vs. method pointer issues (567066, r=jwalden). Fix hard-case destructurinv vs. for(var ...=... in ...) bug (558633, r=mrbkap). Fix vp off-by-2 bug (566815, r=gal). Resolve sharpSlots vs. var-in-with grudge match (561011, r=mrbkap). Use same source note offset bias/origin for both of SRC_IF_ELSE's offsets, but note second offset is optional (0 if absent; 562028, r=mrbkap). Back out my last commit due to orange. Use same source note offset bias/origin for both of SRC_IF_ELSE's offsets (562028, r=mrbkap). Fix sharpSlots vs. with grudge-match (561011, r=mrbkap). Tweak to align comment. Beware generators when trying to flatten a closure (563034, r=jorendorff). Fix getter/setter built-in vs. scripted type confusion: union getter/setter callable object pointer with raw JSPropertyOp pointer, fix watchpoint assertion/null-deref related to ES5's {get: undefined, set: undefined} new scripted getter/setter state encoding, clean up related code (560796, r=jwalden). Fix fractured grammar in comment for bug 560234. Fix thinko in patch for 560234, caught by jorendorff, all praise to him. JSOP_NAME inside null closure leads to bogus ReferenceError on trace (560234, r=jorendorff). Fix non-escaping closure optimization to cope with 'with' and eval (558720, r=jorendorff). Keep jsprvtd.h usable from C (558437 followup, r=REDRUM). Cope with stillborn Iterators (558619, r=dvander). Don't bother optimizing apply on arguments objects whose length property has been overridden (558609, r=dvander). Back out patch for 557969 due to orange. Named native functions lacking JSFUN_BOUND_METHOD entrain the global of the object in which they are bound, not the binding object itself, via parent (557969, r=mrbkap). Abort on non-dense-array, non-native JSObjectOp.getProperty op (557168, r=gal). Pick initialization nit. Rename ecmaStrictMode to ecma3OnlyMode, use fresh prototype object initialiser for better style. Fix copyright notice. NPOTB: fix #ifdef NARCISSUS code. Fix dictionary-mode scope property node alloc to happen inside rt->gcLock (538307, r=jorendorff). Don't bother optimizing apply on arguments objects whose length property has been overridden (558609, r=dvander). Fix arguments objects to share a runtime-wide empty scope, instead of each getting a differently shaped own scope at birth (554626, r=igor). Disable partial flat closures pending scope chain reconstruction on trace (554572, r=jorendorff). Followup fix for 497789: work around apparent gcc 4.4 aliasing bug (r=dvander). Use direct object shape instead of identity as key for deep property cache hits (497789, r=jorendorff). Skip test for 503860 until bug 497789 is patched. Remove excessive braces; nuke else after return. Disable partial flat closures pending scope chain reconstruction on trace (554572, r=jorendorff; CLOSED TREE push ok'ed by sayrer). Add tests for 503860 to jstests.list. Restore lost rt->protoHazardShape check (503860, r=jorendorff). Patch from Mats Palmgren for bug 424558 (r=me). Fix dictionary-mode scope property node alloc to happen inside rt->gcLock (538307, r=jorendorff). Fix latent bug, exposed by fix for 549617, where JS_EvaluateUCInStackFrame looks like eval and confuses the compiler into writing into the empty script singleton-const (550045, r=mrbkap). Fix CallPropertyOp to cope with non-int arguments id (549951, r=mrbkap). Typo'ed testname in jstests.list for 549617. Bug 549617 - JS_EvaluateUCInStackFrame doesn't see variables in flat closure (r=mrbkap). Bug 549531 - fix strict aliasing warnings about scopeChain (also clean trailing whitespace; r=dmandelin). Another followup, deferred nit-pick for 547314. Fix bogus assertion (537854, r=mrbkap). s/pushAtom/AppendAtom/ name style police raid. Don't mutate a used name node that has been deoptimized before bailing from BindNameToSlot (546069, r=jorendorff). Don't mutate a used name node that has been deoptimized before bailing from BindNameToSlot (543436, r=jorendorff). Fix funarg analysis to cope with escaping kids of a named function expression that use that lambda by name (545980, r=jorendorff). Fix two subtle bugs to-do with partial flat closures (545573, r=jorendorff). Fix orange in wake of patch for bug 542002. Bug 542002 - Optimize to flat closures even if some upvars can't be copied (r=jorendorff). Fix property cache hit guarding to-do with the global object (544161, r=jorendorff). Add jstests.list entry for regress-541455.js. Add test for 541455. Cleanup pass on bug 543119 (r=vlad). Bug 541455 - Do not drop \"mumble\"; would-be directives in the parser, let them be completion values (or useless expressions for the emitter to cull)  (r=jimb). Bug 540774: \"Assertion failure: top < StackDepth(ss->printer->script)\" decompiling upvar (r=jorendorff). Another followup for 536564, assertion fix. Fast followup fix for thinko (536564, r=jorendorff). Skip regress-324278.js now, revert it to prev version (with comment tweak). Analyze module pattern and private-statics pattern in order to despecialize from methods to slots/sprops (536564, r=jorendorff). Bug 538593 - guardClass always does a JS_snprintf even though it usually doesn't use the result (r=dvander). Fix warnings (precog r=vlad). Bug 513291 - JSOP_INITPROP should insist obj has own scope (JSOP_NEWINIT knows to do this; r=jorendorff). Bug 533258 - \"Assertion failure: hasMethodBarrier()\" with ckeditor (r=jorendorff). ES5-conformance fix to make a new RegExp for each regexp literal evaluation (98409, r=igor/jwalden). ES5-conformance fix to make a new RegExp for each regexp literal evaluation (98409, r=jwalden). Merge. Bug 537204 - No more BOGUS_CX bogosities (r=jwalden). Disassemble function upvars a bit (496921, r=mrbkap). Abort on non-dense-array, non-native JSObjectOp.getProperty op (557168, r=gal). Push fix for 543565 for alpha. Bug 533705 - Lock proto-scope around canProvideEmptyScope/getEmptyScope; check for slot mismatch in js_AddProperty; don't optimize for slot mismatch in JSOP_SETPROP. r=jorendorff.\n\n--HG--\nextra : rebase_source : 4d49e9ef150286db93f2e5e1c77b217832263f83 Remove sporadic else after return (534364 followup). Fix JSOP_INITMETHOD to use correct JSScope method (addProperty, not addDataProperty; 533254, r=jorendorff). Bleah. Add JSOP_ENUMELEM to gigundo-assert in LeaveTree (532787, r=me). Test for last checkin (532043). Trace JSOP_ENUMELEM, for the group-assignment special case of destructuring assignment (532043, r=gal). Extra assertions, control flow cleanup in putProperty, and a crucial scope hashtable fix to removeProperty (stored was not reloaded from *spp; got rid of this ancient over-optimization by hand-coded 'register allocation'; 532096, r=mrbkap). Fix js_FindDuplicateFormal to crack the fun->u.i.names union correctly, and spruce it up with C++ (532041, r=jimb). Tolerate race condition or broken resolve hook (530507, r=jorendorff). Undo hackaround for bug 529837. Undo hackaround for bug 529837. Bye-bye middle-deletes and their O(n^2) worst case complexity; hello dictionary-mode scopes (473228, r=jorendorff). Test branded *and* hasMethodBarrier consistently, and with a combined helper (529837, r=jorendorff). Disabling the joined method optimization from bug 524826 again (529837, talked about it with dbaron and sayrer). Fix uninitialized var bug (529679, r=jorendorff). Fix method barrier not to brand, period (branding withou reshaping is worse, branding correctly is unnecessary; 524826, r=jorendorff). Fix method barrier not to brand, period (branding without reshaping is worse, branding correctly is unnecessary; 524826, r=jorendorff). Beware CALLEE_UPVAR_SLOT when adjusting upvar cookie to skip over args to reach vars in the upar's home frame -- the callee is a special case with a magic slot that must not be changed (528082, r=mrbkap). Fix empty script deserialization (525481, r=igor). Fix empty script deserialization (525481, r=igor). Factor jsscopeinlines.h out, clean up #include order (524267, r=gal/jorendorff). Fix old ES3 lexing bug where 3in scanned as 3 and in (523401, r=jorendorff). Restore script local before goto error, duh (523280, r=igor). Don't use the emptyScript singleton for a function that had upvars whose uses were optimized away (523284, r=igor). Fix js_FindDuplicateFormal to crack the fun->u.i.names union correctly, and spruce it up with C++ (532041, r=jimb). Don't build a stack frame to execute empty scripts (516827, r=igor). Fix js_Emit1 return value tests (522920, r=dvander). Fix assertion to allow for generator entry point (521694, r=dvander). #ifdef DEBUG to avoid warning (520513 followup). Deoptimize upvar-for-eval if in for-in loop LHS position (520513, r=mrbkap). Fix too-stupid-to-live bug (517076, r=me). Use 'Is' in noun-phrase-named predicate (518103 followup, r=jorendorff/Waldo). Fix constructor method (foo.bar/foo[baz] initialized from a lambda) invocation to go through the method read barrier (518103, r=jorendorff). Remove now-bogus (uint16) casts when storing AST node line numbers (patch revised based on ed@siliconforks.com's patch in 500128, r=me). Don't cache an 'adding' entry on a duplicate JSOP_INITPROP (520161, r=jorendorff). High-level CSE for shape guards (518448, r=jorendorff). Fuss over comment in last changeset (518765). High-level CSE for shape guards (518448, r=jorendorff). Hackaround for 524826, r=self. Bug 516075 - Move shape into JSObjectMap from JSScope, const-ipate and use LIR_ldc* to get to it (r=jorendorff). Don't be confused by eval's frame inheriting its caller's fun member when propagating sharp slots (516263, r=igor). Don't assume a script with sharps whose caller has no sharps has no other fixed slots (516262, r=igor). Bug 516069 - Common the side exit used with shape guards (r=gal). Unit strings not in atom table means we must always mark them unless shutting down the runtime (511835, r=gal). Avoid unused variable warning if not verbose. Fix annoying GCC warning (no ifdef __GNUC__ noise, that just taxes us for gcc's deficiencies). Bug 515815 - TM: Regression on shell test case regress-452498-224.js (r=igor). Fix obvious thinko that bites Gary's fuzzer (515892, r=igor tomorrow, I trust). Fixes based on jorendorff's comments in bug 515273. Fix js*inlines.h harder (515628, r=jorendorff). Followup for 513119, r=jorendorff. Bug 514981 - JSStackFrame::sharp{Array,Depth} should be locals allocated due to #n[#=] usage (r=igor). My first jsapi test (515273, rs=Waldo). Avoid wildman storage-punning hacks for non-unit static strings (515273, r=gal/gwagner). Use pragma pack for static strings (trying to clear orange; r=gal). Cope with null tvr string refs (515000 followup, r=self). JSTempValueRooter JSTVU_SINGLE over-constrains GC-thing against static allocation  (515000, r=gal). Zim got the bug, man! (514971, r=gal). I bust myself back to private, like Sgt. Zim in 'Starship Troopers', in order to fight bugs hand-to-hand with no claim to higher rank (514971, r=gal). Fix script JSUpvarsArray allocation to avoid misaligning other members (514645, r=igor). Fix bogus assertion from bug 510644 (514943, r=self). Followup to fix assertion that walks into strong assertions in fix for bug 514819. Check (without regressing hot paths) where needed to avoid treating static JSStrings like gc-things in the heap (514819, r=gal). Use class statics for the unit and int string tables (513530 followup, r=gwagner). Minimal fix for latent js_InferFlags bug where TR::snapshot calls js_InferFlags on arbitrary ops (514790, r=gal). Fix imacro vs. script code disassembly/decompilation confusion (510644, r=jorendorff). Join lambdas assigned or initialized as methods to the compiler-created function object if we can, with a read barrier to clone on method value extractions other than call expressions (471214, r=jorendorff). Fix net vs. gross botches from patch for 489899 (514112, r=gal). Bug 471214 - Join function objects transparently, clone via read barrier to satisfy de-facto standard (r=igor). Bug 499790 - common sub-expression elim for repeated (PND_ASSIGNED | PND_FUNARG), r=mrbkap. Fix bug 506312, see the bug for the sordid details (r=jorendorff). Fix assertion location to avoid botching it due to patch for 488731. Bug 488731 - Avoid shape regeneration and property cache purge during the GC (r=mrbkap). Fix assertion location to avoid botching it due to patch for 488731. Avoid shape regeneration and property cache purging from the GC unless the shape generator overflows (488731, r=jorendorff). Hide C++ from C includers. Fix 502630 (r=Waldo). Bug 503406 - TM: Trace calling a user-attached function to RegExp (r=mrbkap). Bug 503406 - TM: Trace calling a user-attached function to RegExp (r=mrbkap). Bug 501230 - TM: fast path for String.toString (r=gal). Bug 503524 - JSON.stringify does not condition number-typed space parameter per spec (r=sayrer). Optimize stringify edge case. r=sayrer/jorendorff. Bug 503343 - Change JSScope macros to methods. r=jorendorff Pick nits including warning provoker in jsregexp.cpp from bugs 463535 and 453730. Optimize  GCto avoid atomic decrement in js_DropScope (503155, r=jorendorff). Iterator(obj) returns a property key/value iterator that skips the proto chain (568056, r=gal). fun->u.i.names is incorrect when a local function shadows an argument (600067, r=jorendorff). lightweight JSParseNode subclasses (bug 550350) See bug 533138. Over-parenthesize per house style and to avoid GCC warning (r=nnethercote, private communication). Cast to int16 when tagging slot as an int jsval to satisfy an assertion (497146, r=igor from the future). Wrapper automation should not apply to flat closures, plus cleanup (496790, r=igor). Add static analysis incantation, plus assert cx->fp for sanity (496824, r=mrbkap). Fix destructuring binding to follow the cheezy dominance relation rules of the upvar analysis (496134, r=mrbkap; take 2). Fix delete upvar (and local var, too) analysis (496422, r=igor). [mq]: bug496817 Fix destructuring binding to follow the cheezy dominance relation rules of the upvar analysis (496134, r=mrbkap). Skip let binding not in scope (in let head, e.g.) and find any shadowed binding (496532, r=mrbkap). Last gasp for 496605 (r=igor). Fast ultimate fighting web-compat followup for 496605 (r=mrbkap). Bug 496605 - Need to prevent optimized closure escape via foo.caller still (r=igor). Bug 494235: wrap escaping optimized closures for the debugger API (r=igor/mrbkap). Make @ns::attr force HEAVYWEIGHT to avoid having to analyze ns as a lexical name (hack for 496316, r=igor). Bug 495045: test tcflags for new Function's top-level, its body, when vetoing flat closure optimization based on HEAVYWEIGHTness (r=jorendorff). Bug 495045: test tcflags for new Function's top-level, its body, when vetoing flat closure optimization based on HEAVYWEIGHTness (r=jorendorff). Bug 494954 - JS_GetScriptLineExtent() does not returns the right value (r=mrbkap). Fix typo (494956, r=self, thanks to <soubok@gmail.com> for bug report). Bug 494544 - Uninitialized variable undefined after assignment whose initializer is a closure capturing that var (r=mrbkap). Bug 462704 - [jsd] incorrect lineExtent when a while loop ends a method (r=mrbkap). Fix typo (494956, r=self, thanks to <soubok@gmail.com> for bug report). Bug 493760: the real fix for problem left in wake of patch for bug 493466 (r=mrbkap). Back out patch for 493760, chrome mochitests failed. Bug 492904 - TM: Crash [@ TraceRecorder::test_property_cache] (r=gal). Bug 493760: fix bad typo in patch for bug 493466 (superluminal r=mrbkap). Bug 493466 - TM: youtube.com customization broken (r=mrbkap). Back out patch for 493760, chrome mochitests failed. Bug 492904 - TM: Crash [@ TraceRecorder::test_property_cache] (r=gal). Bug 493760: fix bad typo in patch for bug 493466 (superluminal r=mrbkap). Bug 493177 - Browser crashes in loading of certain page.[@ js_Interpret] (r=mrbkap; take 2). Back out last cset. Bug 493177 - Browser crashes in loading of certain page.[@ js_Interpret] (r=mrbkap). Bug 489034 - let declaration getting lost in certain situations (r=mrbkap). Bug 492914 - TM: trace aborts due to flat closure analysis bug (r=mrbkap). Bug 492355 - Suspected Txul regression from JS engine changes (r=igor). Bug 492720 libgjs failed to compile with jsopcode.h of Firefox 3.5 beta 4 r=brendan Bug 490818 - Packed JS that works in Firefox 3.0 and all other browsers fails in Firefox 3.5 (r=mrbkap). Bug 490191 - \"Assertion failure: slot < fp->script->nslots, at ../jsinterp.cpp\" with defineGetter, eval (r=mrbkap). Bug 452189 - regression (from firefox 2): prototype setters not called by inline cache for [[put]] (r=mrbkap). Bug 492150 - Unexpected error occurred when japascript.options.strict is true (r=mrbkap). Bug 492150 - Unexpected error occurred when japascript.options.strict is true (r=mrbkap). Bug 490191 - \"Assertion failure: slot < fp->script->nslots, at ../jsinterp.cpp\" with defineGetter, eval (r=mrbkap). Bug 452189 - regression (from firefox 2): prototype setters not called by inline cache for [[put]] (r=mrbkap). Bug 490818 - Packed JS that works in Firefox 3.0 and all other browsers fails in Firefox 3.5 (r=mrbkap). Bug 471703 - Don't optimize group assignment given holey RHS (r=igor). Bug 471703 - Don't optimize group assignment given holey RHS (r=igor). Bug 491806 - \"Assertion failure: (uintN)i < ss->top, at ../jsopcode.cpp\" with uneval, for, yield (r=mrbkap). Bug 491806 - \"Assertion failure: (uintN)i < ss->top, at ../jsopcode.cpp\" with uneval, for, yield (r=mrbkap).  ug 490741 - Crash [@ js_GetUpvar] on datepick (r=mrbkap). Bug 375250 - Reject (JSON is fixed now) E4X masquerading as JS source (r=igor/mrbkap). Bug 490339 - Unexpected ReferenceError when using \"new Function()\" (r=mrbkap). Bug 488842 - Local Scope Variables are not displayed by default (r=mrbkap). Bug 489552 - Earth Day Recycling for Fun Kids - Assertion failure: RecycleFuncNameKids, at ../jsparse.cpp:444 (r=mrbkap). Bug 488272 - Crash [@ RebindLets] (r=mrbkap). Back out bad patch for 488272. Bug 488272 - Crash [@ RebindLets] (r=mrbkap). Bug 375250 - Reject (JSON is fixed now) E4X masquerading as JS source (r=igor/mrbkap). Bug 490339 - Unexpected ReferenceError when using \"new Function()\" (r=mrbkap).  Bug 488421 - Crash [@ js_ValueToString] or Crash [@ js_ValueToBoolean] or \"Assertion failure: slot < fp->script->nslots, at ../jsinterp.cpp\" (r=mrbkap). Bug 488475 - \"Assertion failure: \\!(pn->pn_dflags & flag), at ../jsparse.h\" (r=me). Bug 488015 - Crash [@ js_GetUpvar ] (also bogus JS errors, also probably Crash [@js_Interpret]) (future r=mrbkap, see bug). Bug 488050 - upvar2: incorrect optimization of delete function_name (r=igor).  ug 490741 - Crash [@ js_GetUpvar] on datepick (r=mrbkap). Bug 487968 - TM: shutdown leak of rt->builtinFunctions (r=jorendorff). Bug 488034 - Crash [@ js_GetUpvar] or \"Assertion failure: (script)->upvarsOffset != 0, at ../jsinterp.cpp\" (r=mrbkap). Fix JS_LONE_INTERPRET-mislocated js_GetUpvar prototype (487563). Bug 487563 - Crash [@ js_Interpret] (r=mrbkap). Bug 487561 - More cleanup from bug 452498 and bug 487271 patches (r=mrbkap/igor, and this fixes bug 487570).  Bug 487209 - erroneous redeclaration of let ... with try {...} catch(e) {var e...} (r=mrbkap). Bug 487538 - bug 487271 left three tests broken in its wake (r=mrbkap). Bug 487271 - Crash [@ js_Invoke ], and missing google-maps background, at padmapper.com (r=mrbkap). Bug 487320 - named function objects can escape without detection by the upvar analysis (r=mrbkap). Bug 487251 - imacros.c.out generation fails: Error: .igroup/.end name mismatch (r=mrbkap). Bug 487251 - imacros.c.out generation fails: Error: .igroup/.end name mismatch (r=mrbkap). Bug 481514 - PurgeScopeChain should not deep-bail quite so eagerly (r=jorendorff, a=sayrer). Test for upvar2 dup/dep bug 473271, from comment 8; also remove print noise from testPropagatedFunArgs crash test. Another static analysis patch (I hope the last; for 452498). Remove stale JS_REQUIRES_STACK for js_CloneFunctionObject prototype (452498 followup to fix static analysis tbox). upvar2, aka the big one take 2 (452598, r=mrbkap). Merge. upvar2, aka the big one (452598, r=mrbkap). Bug 487320 - named function objects can escape without detection by the upvar analysis (r=mrbkap). Followup nit-picks for 457065. Bug 457065. TM: Assertion failure: !fp->callee || fp->thisp == JSVAL_TO_OBJECT(fp->argv[-1]). r=mrbkap Bug 488842 - Local Scope Variables are not displayed by default (r=mrbkap). Bug 489552 - Earth Day Recycling for Fun Kids - Assertion failure: RecycleFuncNameKids, at ../jsparse.cpp:444 (r=mrbkap). Bug 482594 - TM: followup work for support String(v) -- String constructor called as a converter (r=jwalden). Waldo's followup fix to valueOf/toString misorder in patch for bug 482349 (r=me). Fix bug 482421 (r=gal). Bug 476240 - Generate via imacro_asm.js the big condition in TraceRecorder::monitorRecording's OPDEF macro (r=gal). Bug 476447 - Array.prototype getter/setter does not work as usual (r=jorendorff). Bug 481516 - Assertion failure: pobj_ == obj2, at ../jsinterp.cpp:4276 when getting a property that is cached but shadowed (r=jorendorff). Bug 481754 - js1_8_1/trace/regress-462459-05.js - trace new Array regressed (r=gal). Fix for --disable-jit (again). Bug 480759 - TM: trace RegExp constructors (r=gal). Keep --disable-jit working (480657, r=gal). Followup patch for bug 481251. Bug 480657 - TM: Add an API to define traceable constructors (r=gal, jorendorff). Give up on automation due to intermittent redness (r=jst). Try hardest of all (last time) to fix redness (r=nthomas). Try hardest to fix redness (r=me). Try harder to fix redness (r=bsmedberg). Try to fix redness (r=ted).  Bug 476181 - imacros.c.out out of date; also Makefile.in bustage/cleanup (r=ted/jorendorff). Bug 454184 - Implement eval caching (r=mrbkap). Back out due to Mac Tp orange (454184). Bug 454184 - Implement eval caching (r=mrbkap). Bug 454184 - Implement eval caching (r=mrbkap). Bug 470187 - TM: \"Assertion failure: entry->kpc == (jsbytecode*) atoms[index]\" with valueOf, regexp (r=jorendorff). Bug 473282 - TM: Crash [@ JS_CallTracer] (r=jwalden). Bug 453955 - \"Assertion failure: sprop->setter != js_watch_set || pobj != obj, at jsdbgapi.c\" (r=mrbkap). Bug 453955 - \"Assertion failure: sprop->setter != js_watch_set || pobj != obj, at jsdbgapi.c\" (r=mrbkap, relanding). Bug 470187 - TM: \"Assertion failure: entry->kpc == (jsbytecode*) atoms[index]\" with valueOf, regexp (r=jorendorff). Bug 473282 - TM: Crash [@ JS_CallTracer] (r=jwalden). Bug 453955 - \"Assertion failure: sprop->setter != js_watch_set || pobj != obj, at jsdbgapi.c\" (r=mrbkap). Give up on automation due to intermittent redness (r=jst). Try hardest of all (last time) to fix redness (r=nthomas). Try hardest to fix redness (r=me). Try harder to fix redness (r=bsmedberg). Try to fix redness (r=ted). Bug 476181 - imacros.c.out out of date; also Makefile.in bustage/cleanup (r=ted/jorendorff). Argh. Warning policing (please check and avoid adding). Bug 471531 - js1_7/decompilation/regress-379925.js | js1_8_1/decompilation/regress-371802.js FAIL (r=jorendorff). Bug 489079 - Google Calendars disappear with latest trunk of Shredder [Error: Error parsing XML streamReferenceError: gCal is not defined] (r=mrbkap). Bug 488963 - \"Assertion failure: cg->lexdeps.lookup(atom), at ../jsemit.cpp\" (tachyonal r=mrbkap). Fix dangling JS_PROPERTY_CACHE_METERING bits broken by patch for bug 489171. Bug 488690 - \"Assertion failure: dn->pn_defn, at ../jsemit.cpp\" (r=mrbkap). Bug 488802 - Crash at [@js_Interpret] on YOMIURI ONLINE (r=mrbkap). Bug 470374 - Decompiler fixes from bug 469625 (r=jorendorff). Fix warnings pointed out by Waldo from apply patch (465214). Back out patch for bug 469625, it mysterious busts stuff. Merge, dammit! Bug 469625 - TM: Crash [@ js_String_getelem] (r=jorendorff). Merge m-c into tm again. Merge (bah). Bug 470300 - \"Assertion failure: StackBase(fp) + blockDepth == regs.sp\" with |let| (r=gal). Bug 469927 - TM: much slower than interpreter with short loop with |let| (r=mrbkap, a=sayrer). Bug 469940 - Automatic semicolon insertion wrongly done after var with multi-line initializer (r=mrbkap, a=sayrer). Bug 469927 - TM: much slower than interpreter with short loop with |let| (r=mrbkap). Windows lacks ssize_t, who knew?  Bug 465460 - TM: valueOf ignored on third iteration of loop (r=gal). Bug 469313 - TM: crash (GMail): JS_Assert (s=0x368d8f \"!JS_ON_TRACE(cx)\", file=0x3724c8 \"/Users/roc/mozilla-checkin/js/src/jsobj.cpp\", ln=3765) (r=gal). Bug 469313 - TM: crash (GMail): JS_Assert (s=0x368d8f \"!JS_ON_TRACE(cx)\", file=0x3724c8 \"/Users/roc/mozilla-checkin/js/src/jsobj.cpp\", ln=3765) (r=gal). Bug 465460 - TM: valueOf ignored on third iteration of loop (r=gal). Back out patch for bug 469625, it mysteriously busts stuff. Bug 449657 - JS_SealObject fails on Array objects (r=mrbkap, a=sayrer). I hate hg. Bug 465220 - nested imacro abort not cleanly handled (botches assertions) (r=mrbkap, a=beltzner). Merge. [mq]: bug No else after return if you please. Avoid bogus assertbotch (more work needed to reconstruct imacro stack depth). Fast followup to pick nit in last commit. Bug 465013 - TM: General Error trying to play video on CNN (r=gal). Bug 464978 - TM: hang with \"[] + null\" (r=danderson). Fix bogus assertion left in bug 463334. Fix bogus assertion left in bug 463334. Fix from Ginn Chen <ginn.chen@sun.com> for bug 464645. Fast followup to fix for-each-in (imacros bug, r=me). Bug 456511 - (imacros) TM: Make conversion work on arbitrary JSObjects (r=gal). Bug 443071 - Assertion failure with \"for (;;[]=[])\" (r=mrbkap). Bug 463259 - \"Assertion failure: VALUE_IS_FUNCTION(cx, fval)\" (r=mrbkap). Bug 462879 - \"Assertion failure: UPVAR_FRAME_SKIP(uva->vector[i]) == 1\" with nested eval (r=mrbkap). Bug 456692 - \"Assertion failure: slot < fp2->script->nslots\" with nested eval (r=mrbkap).  ug 460870 - Round-trip change with RHS of || (r=jorendorff). Prune deadwood missed in commit for bug 462103. Bug 462103 - TM: We don't trace some variants of string + other type (gal+brendan red-headed stepchild). Keep testGlobalProtoAccess last. Re-land patch for bug 458851 now that latent bug it uncovered (not filed; see hg log) is fixed. Fix tracing apply with wrong arguments (no bug, r=gal+dvander). Keep this test last, and clean up prototype pollution, plus test for bug 458851. Bug 458851 - TM: for-in loops skip every other value in certain cases (r=gal/mrbkap). Bug 461248 - Remove JSOP_RESUME (r=gal/jorendorff). Bug 461307 - Crash [@ QuoteString] with for(/x/[''] in []) (r=mrbkap). Bug 461235 - \"Assertion failure: pos == GET_UINT16(pc)\" decompiling function with array comprehension (r=mrbkap). Bug 441479 - for-in loops should use one backward branch (with downward goto on entry; r=mrbkap). Final patch (I pray) for 460116 (r=jorendorff). Back out material change for bug 460116. Bug 460116 - buggy inCond propagation in js_FoldConstants (r=jorendorff). Followup to patch for bug 459990 to use JS_HAS_GENERATOR_EXPRS #if'ing. Bug 459990 - Crash [@ js_FoldConstants] (r=jorendorff). Fix typo. Bug 443074 - Incorrect decompilation (missing parens) with genexp in for-loop-condition (r=jorendorff). Bug 408838. Native JSON. r/sr=shaver Use standard anti-dangling-else/macro-call-expression-statement macrology. Fix dangling else blunder (459186, caught by Jesse's fuzzer). Bug 381843 - Move for-var-in and for-let-in hoisting from the emitter to the parser (r=mrbkap). Bug 457920 - regexp-dna.js and generality want JSOP_GETELEM(dense array, \"0\") (r=mrbkap/gal). Bug 455973 - TM: \"Assertion failure: !cx->throwing\" with getter that throws (r=mrbkap). Bug 456831 - TM: Trace JSOP_SETLOCALPOP (r=mrbkap). Restore -j for shell tests run on tracemonkey repo. Remove -j for shell tests in prep for m-c push. Re-pull m-c in preparation for pushing back. Always use JSBool (not bool sometimes, JSBool others) as JSVAL_IS_BOOLEAN's native slot type. Bug 457130 - TM: regexp lastIndex property not traced correctly (r=danderson). Bug 457127 - TM: Crash on digg.com with adblock plus [@ ReconstructPCStack] (r=danderson). Bug 456810 - TM: Crash on digg.com with adblock plus [@ ReconstructPCStack] (r=gal). Fixed argc < nargs miscount in js_SynthesizeFrame and adjusted a related assertion (bug 456667, r=danderson). Back off premature arguments tracing (453730 temporary measure). Bug 456931 - TM: GVAR op record methods use wrong object (r=gal). Bug 456932 - TM: Don't assert that global object can't grow additional properties if none are used by any trace and we don't check for global shape mismatches (r=gal). Re-enable JIT enabling for unit tests in tracemonkey (r=mrbkap). Fix warning. Merge pull from mozilla-central. Bug 456875 - TM: js_SynthesizeFrame must js_GetCallObject if JSFUN_HEAVYWEIGHT (r=mrbkap). Bug 455146 - TM: Going to NEW Facebook profile page causes crash. [ @FlushNativeStackFrame] (r=danderson,mrbkap). Bug 453024 - Mochitest Assertion failure: vp + 2 + argc <= (jsval *) cx->stackPool.current->avail, at jsinterp.cpp:1066 (r=igor/mrbkap). Bug 453024 - Mochitest Assertion failure: vp + 2 + argc <= (jsval *) cx->stackPool.current->avail, at jsinterp.cpp:1066 (r=igor/mrbkap). JS_snprintf for portability, not snprintf (bustage fix). Fix bug 455763 (r=me). Bug 455464 - TM: \"Assertion failure: !TRACE_RECORDER(cx) ^ (jumpTable == recordingJumpTable)\" with gc getter (r=mrbkap). Merge. [mq]: bug455408 Bug 453411 - \"Assertion failure: !cx->onTrace\" with yield string (r=gal). TraceRecorder::record_SetPropMiss mis-layered on top of record_SetPropHit (454689, r=mrbkap). Bug 453563 - TM: assertion when running unit tests with the JIT on (r=danderson). Bug 454744 - TM: \"Assertion failure: PCVAL_IS_SPROP(entry->vword)\" with getter. TraceRecorder::record_SetPropMiss mis-layered on top of record_SetPropHit (454689, r=mrbkap). Bug 453563 - TM: assertion when running unit tests with the JIT on (r=danderson). Bug 454744 - TM: \"Assertion failure: PCVAL_IS_SPROP(entry->vword)\" with getter. Bug 454039 - TM: don't abort TraceRecorder::record_JSOP_SETPROP on cache miss (r=mrbkap). Back out patch for bug 454039. Bug 454039 - TM: don't abort TraceRecorder::record_JSOP_SETPROP on cache miss (r=mrbkap). Bug 453918 - TM: eliminate silly map_is_native guards on globalObj (r=shaver). Fix build bustage: parent or proto might be not JSObject* when setting to null. r=brendan, patch by bz. Avoid needless prototype-shape purges (454035, r=igor). Avoid needless prototype-shape purges (454035, r=igor). Fix bug 454266 - js_FillPropertyCache uses the wrong scope's shape sometimes (r=mrbkap). Fix bug 454266 - js_FillPropertyCache uses the wrong scope's shape sometimes (r=mrbkap). Make return at callDepth 0 terminate the loop, like break (454027, r=gal). Patch from Mike Kaplinskiy <mike.kaplinskiy@gmail.com> implementing trim, trimLeft, and trimRight (305064, r=me). Bug 454044 - TM: JSOP_NOT needs isPromoteInt/::demote help. Merge. Easy fixes to avoid aborting on V8/raytrace.js: MAX_CALLDEPTH doubled to 10; JSOP_NOT handles int and undefined. Merge. Checkpoint arguments tour-de-force (453730). Use js_NaN global that we exported from jsnum.cpp, instead of cx->runtime->jsNaN. Bug 453747 - Avoid overuse of the fun_getProperty class getter to optimize getting and setting random properties on functions. r=mrbkap Bug 453747 - Avoid overuse of the fun_getProperty class getter to optimize getting and setting random properties on functions. r=mrbkap House style bracing for multiline then clause. Merge again. Merge. Missing guard for CallGetter builtin (453580, r=gal). Missing guard for CallGetter builtin (453580, r=gal). Put the trace-recording/executing flag in the trace monitor to handle many contexts per thread (451666, r=gal). Fix JS_THREADSAFE build, pick extern nit. Teach js_IsLoopExit about JSOP_AND, JSOP_OR, etc. and separate extended jump cases so they can get the extended offsets. Fix bool FASTCALL vs. Nanojit calling convention bug, also some non-bool whoppers caught in the process (453361, r=mrbkap). Fix warning pulled over from m-c (mrbkap will track down). Holey single-element dense array has null dslots, requires nulld defense (453173). Fast followup fix for unintended change to 'f' prefix handling in TraceRecorder::record_JSOP_NEW (452878). Kind of an Array initialiser tour-de-force for bug 452878:\n1. Split FastNewArray from FastNewObject built-in for greater speed/specialization and further splitting into Array_1str, etc.\n2. Add Array_1str, Array_2obj, and Array_3num builtins for benchmarked new Array(...) constructions.\n3. Export ARRAY_SET_DENSE_LENGTH and ARRAY_GROWBY via jsarray.h to jstracer.cpp.\n4. Tweaked SetArrayElement to make common/best case code be the predicted/prefetched path.\n5. js_MakeArraySlow now preserves the pre-slow length in JSSLOT_ARRAY_COUTN as a jsval-tagged int if possible -- this will help the tracer avoid aborting on dense arrays that turned slow but not sparse by addition of a named property.\n6. Export js_fun_apply and js_Object from their respective .cpp files, in these cases just to jstracer.cpp via local prototypes (no .h files involved).\n7. More INS_CONSTPTR and INS_CONST macrology for better names in trace debug spew.\n8. Fix TraceRecorder::test_property_cache to avoid aborting on JSOP_SETNAME that creates a new global, by setting it to undefined so it can be lazily imported. This helps 3d-raytrace.js, which has an unintended global loop control variable in a function.\n9. JSTraceableNative loses its premature-deadwood tclasp member (my bad).\n10. TraceRecorder::record_JSOP_NEW() handles 'new Object' now along with the 'new Array' variations. I also cut down the copy-paste code from JSOP_CALL's record method to mostly what is needed now.\n11. Add KNOWN_NATIVE_DECL macro for concise prototype of library-private js_* native functions, and alphabetized the lists (too long for any other order to be winning).\n12. Big honking special case for foo.apply(obj, [str]), which we can generalize as needed. Helps string-tagcloud.js. What's cool is how tracing allows us to rewrite this to foo(str) with this set to obj, eliminating the Function.prototype.apply. This requires some rewriting in JSOP_ENDINIT's record method. - Support JSOP_CONDSWITCH's JSOP_CASE and extended-jump-offset JSOP_CASEX variants properly.\n- Fix sleep-deprived constant conditions due to failure to test flags & CMP_TRY_BRANCH_AFTER_COND!\n- Use new TraceRecorder::fuseIf that Andreas added in a few more places where the previous try-branch-after-cond logic was open-coded. Don't let GC run when recording. Fix bogus JOF_VARPROP test; fix uninitialized id in JSOP_IN recorder, should have caught it when I reviewed danderson's patch. Fix upvar decompilation for eval-from-fun case (452441, r=igor). Consolidate equal and cmp code harder, trace switch ops, use INS_CONST more (bug to be filed -- bugzilla down atm). Abort trace if forInLoop values are not stable; currently, not strings (bug 452703). Fixed bogus assertion in test_property_cache (bug 452693, r=dvander). Record JSOP_IN (452563, r=gal). Fix upvar decompilation for eval-from-fun case (451884, r=mrbkap). Oops, not enough copying... Fix a bug Jesse reported: insufficient copy/paste from record_JSOP_CALL to record_JSOP_NEW. Fix upvar decompilation for eval-from-fun case. Fix another broken assert (452372). Fix another broken assert (452372). Correct (but sadly a bit slower) property cache guarding (452140, r=shaver). Remove bogus assertion (452178). Merge. Remove bogus assertion (452178). Correct (but sadly a bit slower) property cache guarding (452140, r=shaver). Why wasn't this hunk in the .rej file, or else merged properly? Bug 452340 - knownNative for num_toString (r=danderson). Added knownNative for num_toString (bug 452340, r=dvander). Align test order with mozilla-central to avoid merge conflicts (I hope). Fix TM assert on wikipedia (451806, r=mrbkap). Fixed cases where argc varied between recording time and execution time (bug 451727; also warning fix fe54f7fb89d1 from tracemonkey). Fix warning. Rename gcDontBlock to runningJittedCode, and assert it's false on entry to js_Interpret (for 451657, but not the fix, just prolog). Merge. Oops, forgot to make Print set *vp to undefined when I made it a FastNative. Fixed cases where argc varied between recording time and execution time (bug 451727). Bug 451906 - Regression: Array index has different results (r=shaver). Cope with sub-optimal JSOP_FORNAME instead of JSOP_FORVAR inside a with, or similar (eval-created locals; 451806). Remove over-eager gvar optimization for JSOP_DEFFUN (451678, r=shaver). Fix script->owner maintenance; also fix warning. JSThread is not zeroed when allocated, grrr. Fix typo. Merge. Followup upvar fix, easy assertbotch avoidance. Add split built-in, also sort knownNatives for my own sanity (should sort builtins.tbl and jsbuiltins.cpp by function while at it, but too tired). Merge, plus restore TraceRecorder::activeCallOrGlobalSlot. Upvar, v0.1 (limited to looking up from eval in a function, to the function's args and vars). Remove lambda-replace built-in, it's not safe to record into a nested js_Interpret. Fix CHECK_RECORDER macro to use XOR to evaluate both terms. ",
      "nbWordsMessagePerCommit": "11.1"
    },
    "stats": {
      "HTML": {
        "language": "HTML",
        "nbCommit": 17,
        "nbWordsMessage": 134,
        "nbWordsMessagePerCommit": "7.9"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 16,
        "nbWordsMessage": 173,
        "nbWordsMessagePerCommit": "10.8"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 1,
        "nbWordsMessage": 3,
        "nbWordsMessagePerCommit": "3.0"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 600,
        "nbWordsMessage": 6759,
        "nbWordsMessagePerCommit": "11.3"
      }
    }
  },
  "xNotch": {
    "user": "xNotch",
    "statsGlobal": {
      "nbCommits": 19,
      "nbWordsMessage": 95,
      "messages": "Oopsies Removed a bunch of texture hashmap lookups Light levels for oscilating lights fixed a bug with sound stopping More sprite rendering fixes Completely not working subsector rendering Some speedups and bugfixes [DOES NOT BUILD] Started cleaning up code Fixed player clipping, added step size Added freedoom files\n\nIt tried to load the original doom files from originaldoom/doom.wad Cleanup Added newline in readme Rendering options for HD, screen and pixel aspect Updated readme Render sky as transparent, brightness levels Rendle middle transparent textures fix #15 Fix issue 18\n\nSome pnames are placeholders, don't read those. Initial commit ",
      "nbWordsMessagePerCommit": "5.0"
    },
    "stats": {
      "Dart": {
        "language": "Dart",
        "nbCommit": 19,
        "nbWordsMessage": 95,
        "nbWordsMessagePerCommit": "5.0"
      }
    }
  },
  "migueldeicaza": {
    "user": "migueldeicaza",
    "statsGlobal": {
      "nbCommits": 4959,
      "nbWordsMessage": 70273,
      "messages": "CALayer: Drop the Retain from the constructor, the proper fix is going into monotouch CoreAnimation: public CALayer (CALayer other) should retain [AudioToolbox] Fix AudioQueue.AudioStreamPacketDescription return type [avfoundation] the AVCaptureOutput.Connection property always returns AVCaptureConnection arrays Copy some of the populate code to document-generated-code, as we repeat it there, with more semantic information Make the apple doc merging optional, and explicitly set NewLineChars in XmlWriterSetings Merge pull request #33 from baulig/integration2\n\nNew CoreFoundation and CoreServices APIs for CFNetwork. NSSet: make it possible to enumerate with IEnumerator Generator: flag our generated constructors as EditorBrowsableState.Advanced, so they are not prioritized in MonoDevelop NSAsyncActionDispatcher: remove early Dispose() cleanup, to avoid a warning message from our cleanup system, see bug #6045 generator: flag more invalid characters in selectors Track delegates inside delegates, and move all delegate type generation to a separate file generator: provide error messages for invalid selectors early on in the binding process Add support for marshalling delegates that take delegates, see #4781 MonoNativeFunctionWrapperAttribute: Make this class public CoreFoundation: New methods (internal CFUrl.GetFileSystemPath) and CFType.GetDescription New internal method: GetFileSystemPath from a CFUrl and CFType.GetDescription Add overloads that take the completion argument Future proof: 64 bit support for blocks, handle this other case as well Add new internal method to CFUrl, for internal purposes AVCaptureDevice: add IsWhiteBalanceModeSupported and IsFocusModeSupported NSLocale: Add a few GetXXXDisplayName methods, those that are supported Add missing attributed for NSAttributedStrings in MacOS X Disable for now Add EnumerateAttributes Merge pull request #26 from jonlipsky/30e5e881f4e2ce2a193bde13cc8994b4c2d312b9\n\nAdded support for NSObliquenessAttributeName to NSAttributedString [NSObject] Add Description to the base class, override ToString, so we use Objective-C implementation by default, remove from derived classes, and add ToString to NSRange [NSDictionary, NSMutableDictionary] Allow strings to be used as keys, had to also add NSString variants of indexers Add enumeration for enumerating NSAttributedStrings generator: add support for trampolines that take an 'out' parameter Add CGImage implicit conversion, add FromCGImage constructor that takes the colorspace parameter Two more places where MaxSysExSpeed might not return a value Cope with some MidiEndpoints might not support the MaxSysExSpeed, despite Apple's docs Fix namespaces to share the code with MonoMac Add marshaling support for CMSampleBuffer/CMImageBuffer on MonoMac Add more docs Update Work to document the new strongly typed notifications Also generate the code for notifications with no custom event args Put the notification in the class where they are defined, not in NSNotificationCenter Make it so disposing the token will remove the observer as well Complete the strong typing of Notification attribtues in maccore Notification work: add strong types for AVFoundation Generator/notifications: support array of NSObject marshalling, bools, better error reporting Add CoreMidi notifications flags Add Maintainers Strong Notifications: Base NSNotificationEventArgs class, used to expose the Notification property consistently;  Add ProbePresence to handle cases where presence of a key is the meaning, instead of the value itself, handle more types Make the geneated code prettier Make the notification classes partial Print an empty line Add support for generating strongly typed notifications Remove default constructors from CoreImage types that do not have them Fix regression introduced: the ParameterGetMarshalType is used not only for creating the parameter signature, also the method name generator: (1) add support for 'out string' parameters;  (2) generate 'bool' in type signatures for booleans instead of 'Boolean' to avoid clashing with OpenTK's Boolean type [generator] For generated bindings, dont waste time creating full blown NSStrings, just create/use native handles [NSString] CreateNative, ReleaseNative helper methods that create native strings without creating a full NSString Use unsafe mode Use initWithCharacters:length: instead of initWithUTF8String: as it avoids a UTF16->UTF8 conversion and manually allocating/releasing the buffer, let NSString take care of it.   Up to 5% performance increase in string marshalling in tight loops creating 16-characters strings Better document the flags meaning for NSStringStruct Change the NSStringStruct.Flags to be 0x010007d1 which is non-constant, RefCount=1 instead of Constant and add a guard to track down cases where the framework is retaining instead of copying Add generator for ZeroCopy strings;   Without any opt-in changes, generates the same code as before (modulo new 'unsafe' class declaration) Decorate methods with callbacks MidiServices: Large update to expose properties only where they matter.\n\nAlthough the C API allows all the properties to be used in every context,\nthey merely return UnknownProperty for cases where the property does not\napply which is frustrating.\n\nInstead I audited every property to ensure that it is only exposed in the\ntypes where they are supported.\n\nThe code had to be copy-pasted as many of the properties are available\nin three different classes (EndPoints, Device and Entity). Fix the order of the enums Fix a warning, GCHandles are structs, so the comparison was wrong CALayer: Null is allowed in Contents property Improve message Simplify the generator differences, always call Selector.GetHandle, it is now as fast as sel_registerName Make the class static to hide the ctor, fix the build AVAudioSettings: Instead of manually creating the keys, use the binding tool to get the actual values Remove CMBuffer, it does not exist Move the various AudioChannelLayout creation/marshalling functions to the type itself, and expose an AsData() method to encode it as an NSData object;   Also optimized ReadFloat/WriteFloat Fix the build for NSDistributedNotificationCenter helper methods Add new ICFType interface Fix the build CMFormatDescription: add the video methods, fixes #3916 CMFormatDescription: Add a couple of extra audio properties AVFoundation: Use out NSError for the various methods that return errors instead of the IntPtr parameters Add Audio support to CMFormatDescrfiption CoreMedia: Add CMVideoCodecType [AudioToolbox] Add AudioFormat;   Add AudioFile.AudioFormats property CIVector: fix crash in constructor.   Chain to the this. constructor, and fix the actual parameter to be the length of the array Add missing MidiDevice.EntityCount and move GetDevice/GetExternalDevice to Midi class Move methods that do not have any state from the various classes into the Midi class Expose dlsym Try loading the symbol from our address space first Fix typos in constants Merge pull request #22 from rockpiper/master\n\nAllow setting Link attributes in NSAttributedString. Add support for Quicklook Thumbnail's on MacOS Allow nulls in NSFileManager.GetUrl Merge pull request #15 from cwensley/ciimage_additions\n\nCIImage additions for MonoMac ArchiveRootObjectToFile returns a bool, not an NSData Fix the build: return the value Fix PlayAtTime API (introduce an obsolete for backwards compat), add various missing exported fields, add NSUrlCredentialStorage Add NSObject.Copy, MutableCopy and a number of missing keys to CoreData Fix the doc merging prevent crashes in the action from causing a leak, good catch Gonzalo Add AsyncActionDispatcher Revert Added SQlite Merge pull request #69 from baulig/master\n\nMonoMac bug fixes Only build MonoMac.CFNetwork.dll if we have an async-ready C# compiler Merge pull request #68 from baulig/integration2\n\nCFNetwork integration NSView.Layer: allow nulls Merge pull request #63 from rockpiper/master\n\nMake NSTextViewDelegate inherit from NSTextDelegate Merge pull request #62 from benys/master\n\nI added [Notification] attributes appkit.cs: Add the NSKeyboardUI extensions to NSView Handle DispatchQueue Fix crash Small touchups Make simpler to annotate Since attribuets small improvements small improvements Update Fix the build Use PostGets for various properties to keep the graph in memory Fix code by removing invalid comparison to null Add new overload to NSGraphisContext Small improvements Update master More Lion APIs Add enums to allow specifying the OpenGL 3.2 profile NSFileHandle: added, based on a patch from github/DalexSoto Add enumeration values Add NSGraphics.ShowAnimationEffect from github.com/jonlipsky;   Improved by adding also a C# friendly overload Update makefile to push the dll to the new locations Merge pull request #58 from benys/master\n\nI added PdfView notifications Add constructor for NSCollectionViewItem, patch from github.com/heizooi Merge pull request #60 from justinvp/master\n\nAdd a default SynchronizationContext for the main UI thread Merge pull request #61 from cwensley/WillDisplayCellTypo\n\nFix export typo for tableView:willDisplayCell:forTableColumn:row Bring back NSWindow.Close, but add a retain before we call the actual close method Fix a couple of selectors in NSLayoutConstraint fixes #4051 Add AVFoundation to MonoMac NSWindow.MakeFirstResponder can take a null, fixes #4545 Use AuthorizationItemSets instead of AuthorizationItems Add Maintainers file More helper makefile targets NSWorkspace.GetFileSystemInfo fix signature for method Add Release selector Add a new message for NSString Expose a P/Invoke instead of providing a wrapper Add Security.Authorization Bring AudioFormat to MonoMac Run populate Updated MonoMac documentation Merge pull request #53 from cwensley/master\n\nSome [static] and [nullallowed] fixes for NSEvent and NSMenu Merge pull request #54 from cwensley/NSViewFocusRing\n\nAdd NSView.FocusRingType Add support for Quicklook thumbnails macdoc: better usability, hide features that dont work on Lion, instead of warning the user when he tries using them Use NSAsyncActionDispatcher Update makefile Temporarily remove the bookmarks for the release Bring in Foundation-based CoreMidi bindings Allow nulls here, perhaps we need this in every one of the methods that take 'NSObject sender' Bring CoreText Introduce NSUserInterfaceItemIdentification from Lion, adopt it in the relevant places Add MidiServices to the build Move NSAnimatablePropertyContainer to its own interface since our new generator supports that Add Lion's NSWindow methods and enumerations Fix build for this sample and indent Fix a broken sample Fix a few samples to match the new CoreImage Filter API Fix a few samples to match the new CoreImage Filter API Manually upgrade the solutions Manually upgrade the projects Move ScriptingBridgeFinder out of the way until the bindings for it are ready Remove menu entries that are not that useful Select the first tab on startup Make the documentation browser actually work Make the index semi-functional Add GLSLShader to the samples built Merge pull request #51 from kjpou1/master\n\nAdds OpenAL support to MonoMac Lion: Complete NSDragging, and NSFileWrapper is now in Foundation instead of AppKit Some NSDragging protocol updates, uses the new Maccore interface support More Lion API updates.   Will I be able to complete all of Lion support in the next 9 hours?   MAGIC BALL POINTS TO: NO Lion: NSTableView updates Remove the dependency on NSMutableArray since it is not available Fix return type for RunningApplications, it should be an array of NSRunningApplication, not a dictionary Lion's NSPopover + NSScreen Fix type for NSEventMask, fixes Novell #650546 Add some missing setters to QTMovie, fixes x#1675 Add Lion: added NSLayoutConstraint changes Add Lion extensions for NSEvent Fix export Merge pull request #47 from cwensley/fullscreenamendment\n\nAdd missing FullScreenPrimary/FullScreenAuxiliary in NSWindowCollectionBe Merge pull request #48 from cwensley/nsimagecellupdates\n\nNSImage and NSCell minor updates Update Makefile Lion updates Revert \"Some Lion updates\"\n\nThis reverts commit 716b01ed21c99feb095e012420adee75868e7cbc. Some Lion updates Include new AdoptsAttribute Restore removed API Merge pull request #45 from AlexRoennePetersen/master\n\nMake MACCORE_DIR configurable. Lion: NSScroller, NSScrollView patches from Curtis Wensley Lion: NSAnimationContext changes from Curtis Wensley AccessoryView properties allow null as a value, to clear the accessory view - Patch by Curtis AccessoryView properties allow null as a value, to clear the accessory view - Patch by Curtis Lion: NSWindowDelegate changes from Curtis Wensley Update copyrights Restructure to make ArkitApp easier to reuse use the public variables defined Add Mono and MonoDroid projects Fix build Allow the tests to be called from an unit testing driver Add a MonoTouch solution and test suite to run Artemis C# Fix link Small updates renamed Blog Add Remove Revert Merge branch 'master' of github.com:migueldeicaza/blog-monomac Fix Add monomac blog Remove Add [lameblog] Move my MonoMac blog to LameBlog Update Add a new template Add initial twentyten blog template Small changes to try to merge a wordpress theme Small changes to try to merge a wordpress theme Small changes Update\n\nsvn path=/trunk/lb/; revision=149184 Updateroo\n\nsvn path=/trunk/lb/; revision=132211 Bunch of changes, forgot what\n\nsvn path=/trunk/lb/; revision=126892 Fix last commit, due to merge conflicts\n\nsvn path=/trunk/lb/; revision=102470 2008-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Switch the default comment system to embed Disqus.\n\n\t* Add support for navigating to older pages in the archive.\n\n\t* Cleanup the default template of old blogs. \n\n\nsvn path=/trunk/lb/; revision=102469 Add comments\n\nsvn path=/trunk/lb/; revision=77014 Improve\n\nsvn path=/trunk/lb/; revision=70865 Some updates: always comment after jan 2007, small css tuneups\n\nsvn path=/trunk/lb/; revision=70817 Unleash the fury!\n\nsvn path=/trunk/lb/; revision=70575 Instead of using HaloScan, use a google group\n\nsvn path=/trunk/lb/; revision=70574 Add support for comments to lame blog\n\nsvn path=/trunk/lb/; revision=70573 Small updates\n\nsvn path=/trunk/lb/; revision=68560 Update\n\nsvn path=/trunk/lb/; revision=67162 Add code that was removed by Jon\n\nsvn path=/trunk/lb/; revision=56690 Make this work without forcing people to edit their config.xml files\n\nsvn path=/trunk/lb/; revision=55921 2006-01-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* lb.cs: The THML title for individual archive blogs is now set to\n\tthe title of the entry.\n\nsvn path=/trunk/lb/; revision=55016 Fix\n\nsvn path=/trunk/lb/; revision=53247 Add analytics support\n\nsvn path=/trunk/lb/; revision=53206 Change the defaults to be utf-8\n\nsvn path=/trunk/lb/; revision=52206 Fix\n\nsvn path=/trunk/lb/; revision=51487 Correct\n\nsvn path=/trunk/lb/; revision=51082 Fix the date computation, so it does not roll\n\nsvn path=/trunk/lb/; revision=51068 Blockquotes\n\nsvn path=/trunk/lb/; revision=49411 Flush my changes\n\nsvn path=/trunk/lb/; revision=48179 Fix\n\nsvn path=/trunk/lb/; revision=45009 Fix the date\n\nsvn path=/trunk/lb/; revision=45003 Multiple blog entries per day.\nUse datetime from the entry (only for entries after May 25th, 2005)\nUse @EDITOR@ to substitute email.\nImprove layout.\nAdd navigation left/right\n\n\nsvn path=/trunk/lb/; revision=44966 Small change\n\nsvn path=/trunk/lb/; revision=44963 Flush\n\nsvn path=/trunk/lb/; revision=44961 Update\n\nsvn path=/trunk/lb/; revision=44337 Flushage\n\nsvn path=/trunk/lb/; revision=30072 Flush\n\nsvn path=/trunk/lb/; revision=28877 Further\n\nsvn path=/trunk/lb/; revision=27760 Update LameBlog\n\nsvn path=/trunk/lb/; revision=24284 Add all.html back, add email address back, add removed styles back\n\nsvn path=/trunk/lb/; revision=20638 Small touch ups\n\nsvn path=/trunk/lb/; revision=20610 Add pic support\n\nsvn path=/trunk/lb/; revision=20603 remove advertisement\n\nsvn path=/trunk/lb/; revision=20602 Remove PDC logo\n\nsvn path=/trunk/lb/; revision=20561 Flush my changes\n\nsvn path=/trunk/lb/; revision=20547 Not sure we want XHTML output, see the threads on this on google\n\nsvn path=/trunk/lb/; revision=20546 fix\n\nsvn path=/trunk/lb/; revision=19007 add prettyprint\n\nsvn path=/trunk/lb/; revision=19004 flush\n\nsvn path=/trunk/lb/; revision=19003 flush\n\nsvn path=/trunk/lb/; revision=18990 Initial revision\n\nsvn path=/trunk/lb/; revision=18986 Update README.md Add Few missing Cocos2D renames Second pass of Cocos2D namespace adoption Re-namespace cocos2d to Cocos2D Remove space from CCTextFieldTTF source file Update README.txt Add support for brief descriptions Remove <simplesect>, merge parameters by position, not by name, add simple YES/NO to true/false conversion Remove noise Add support for importing parameter definitions Save the docs First commit Add missing bits Use brute force to get the CoreGraphics System.Drawing implementation\nto build without CoreGraphics, in preparation to use SkiaSharp Update README.md Update copyrights Merge pull request #8 from kjpou1/master\n\nFix rendering origin offset in matrix. <- Old -- Makefile for build .dll and project cleanup. Merge pull request #7 from kjpou1/master\n\nAdd LinearGradientBrush implementation Merge pull request #6 from kjpou1/master\n\nImplement Bitmap and Image using Image IO. TextureBrush Merge pull request #5 from kjpou1/master\n\nImplement HatchBrush Merge pull request #4 from kjpou1/master\n\nFixes for Drawing in sub views, SmoothingMode implementation, misc drawing fixes and examples Merge pull request #3 from kjpou1/master\n\nDrawString and MeasureString enhancements with miscellaneous other Fixes Merge pull request #2 from kjpou1/master\n\nMerging Kenneth's pull request. Update README.md Add Bitmap.Save, Pen.Width implement a few methods We can now start some tests, next step: generate the master reference files to compare against update makefile Enough stubs to make the first Mainsoft test app build. More work to get the test MainSoft suite running More stubs Some steps to integrate Mono's System.Drawing bitmap test suite Setup debugging properly, somehow the solutions/projects were busted Added a MonoDevelop project. Bitmap creation + CGContext constructor DrawPath and FillPath Add DrawCurve Add Transform to GraphicsPath Add AddPolygon Add AddPolygon Add AddCurve Add various methods to GraphicsPath Some baby steps on GraphicsPath Transforms, basic drawing and filling Add Small fixes first commit Use .NET Framework instead of .NET for Windows, link to constructor Add docs on the various HttpClient providers and their default handlers Update README\n\nsvn path=/trunk/moon/; revision=154153 Make this copy/paste friendly, replace tabs with spaces in commands\n\nsvn path=/trunk/moon/; revision=154019 Update README\n\nsvn path=/trunk/moon/; revision=150749 Improve\n\nsvn path=/trunk/moon/; revision=150732 Update README\n\nsvn path=/trunk/moon/; revision=146677 More fixes\n\nsvn path=/trunk/moon/; revision=131718 Do the 3.0 to moonlight directory migration\n\nsvn path=/trunk/moon/; revision=131716 Update\n\nsvn path=/trunk/moon/; revision=131714 New naming\n\nsvn path=/trunk/moon/; revision=131713 Make this work with parallel build\n\nsvn path=/trunk/moon/; revision=129315 Update licensing info\n\nsvn path=/trunk/moon/; revision=119388 Ecologically sound patch to reduce libmoonloader.so size;  r:toshok\n\nsvn path=/trunk/moon/; revision=118923 Update\n\nsvn path=/trunk/moon/; revision=117718 Fix build order\n\nsvn path=/trunk/moon/; revision=117717 Update text\n\nsvn path=/trunk/moon/; revision=114046 Fix\n\nsvn path=/trunk/moon/; revision=113980 Update\n\nsvn path=/trunk/moon/; revision=112700 Fix the boundaries in the individual lines\n\nsvn path=/trunk/moon/; revision=112699 Update\n\nsvn path=/trunk/moon/; revision=111027 Add tracing support\n\nsvn path=/trunk/moon/; revision=111026 Up\n\nsvn path=/trunk/moon/; revision=111023 Update\n\nsvn path=/trunk/moon/; revision=110979 This was never implemented, fix\n\nsvn path=/trunk/moon/; revision=109499 Make this use NDesk.GetOptions as well\n\n\nsvn path=/trunk/moon/; revision=109498 Document the new command line options.\n\n2008-08-02  Miguel de Icaza  <miguel@novell.com>\n\n        * tools/mxap/mxap.cs: Use NDesk.GetOptions instead of another\n        custom parser.\n\n\nsvn path=/trunk/moon/; revision=109494 Reformat to draw attention to the three blobs of code, mention the SL controls\n\nsvn path=/trunk/moon/; revision=109479 80 formatting\n\nsvn path=/trunk/moon/; revision=109470 UPdate \n\nsvn path=/trunk/moon/; revision=108266 Up\n\nsvn path=/trunk/moon/; revision=108261 update\n\nsvn path=/trunk/moon/; revision=106819 update the version\n\nsvn path=/trunk/moon/; revision=105498 Forgot that this routine is now shared\n\nsvn path=/trunk/moon/; revision=104643 Do not crash, as reported by ceronman + naming updates for clarity\n\nsvn path=/trunk/moon/; revision=104638 Make Grid startup\n\nsvn path=/trunk/moon/; revision=104619 Throw on invalid XAML files\n\nsvn path=/trunk/moon/; revision=104618 Fix the build, this is after my stupid mistake\n\nsvn path=/trunk/moon/; revision=104573 2008-05-30  Miguel de Icaza  <miguel@novell.com>\n\n\t* Add stubs to get enough to get a sample Button on a page to\n\tload.    Does not work yet.\n\n\nsvn path=/trunk/moon/; revision=104570 Make this virtual, like everyone else\n\nsvn path=/trunk/moon/; revision=103748 Some docs\n\nsvn path=/trunk/moon/; revision=103745 Fix stackoverflow after the recent changes\n\nsvn path=/trunk/moon/; revision=103430 Add new tool to package up xaml files as a managed resource file with\nkeys = filename, value = memorystreams.\n\nEliminate some script redundancy.\n\nPrepare to import Chiron\n\n\nsvn path=/trunk/moon/; revision=103426 2.x Janitorial work\n\nsvn path=/trunk/moon/; revision=103387 The simplest Silverlight 2.0 application runs.\n\nThe main page only contains:\n\n<UserControl x:Class=\"SilverlightApplication2.Page\"\n    xmlns=\"http://schemas.microsoft.com/client/2007\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" \n    Width=\"400\" Height=\"300\">\n    <TextBlock Text=\"Hello Silverlight 2!\"/>\n</UserControl>\n\n2008-05-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* dependencyobject.h (DependencyObject::GetContentProperty):\n\treturns a DependencyProperty that is the target for the content of\n\ta XAML content assignment. \n\n\t* xaml.cpp (XNamespace::SetAttribute): while hydrating, ignore the\n\tClass attribute as the object has already been created. \n\n\t(start_element): Add support for the ContentPropertyAttribute on\n\tDependencyObjects to the XAML parser.       This is very primitive\n\tsupport at this point, and does not support collections, or type\n\tconversions as specified on the docs. \n\n\t* control.cpp (Control::SetContent): Refactor setting the\n\treal_object into its own routine.     Currently takes a Surface\n\tparameter, not clear that this is even needed, but kept for\n\tcompatibility with the old code. \n\n\t(UserControl::OnPropertyChanged): Hook up setting the Content\n\tproperty.\n\n\t* runtime.cpp (Surface::Attach): Let the widget be UIElement.\n\n\nsvn path=/trunk/moon/; revision=103381 Noise reduction + include some old files\n\nsvn path=/trunk/moon/; revision=103379 Noise reduction\n\nsvn path=/trunk/moon/; revision=103378 Graceful fallback if all the Mono dependencies are not found;   Add diagnostic messages for people debugging it\n\nsvn path=/trunk/moon/; revision=103187 Reenable LINQ usage, now that System.Core issue in smcs has been sorted out\n\nsvn path=/trunk/moon/; revision=102972 Temporary removal, until I can figure this out\n\nsvn path=/trunk/moon/; revision=102904 Make sure we always get the latest compiler\n\nsvn path=/trunk/moon/; revision=102902 2008-05-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* xaml.cpp (xaml_hydrate_from_str): New method to hydrate an\n\texisting DependencyObject with the contents of a XAML string.  \n\n\tNeeded for Silverlight 2.0 support, for the new model: \n\tcreate object then do LoadComponent on it.\n\n\nsvn path=/trunk/moon/; revision=102846 2008-05-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* XamlLoaderCallbacks.cs: Add new Hydrate method, used to populate\n\tan existing DependencyObject with the contents from a XAML page. \n\n2008-05-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* Application.cs: Add support to load data from the Resources\n\tembedded into the assembly.    \n\n\tInstead of sticking XAML files as toplevel resources, they stuck\n\tthe XAML files inside a resource that must be accessed with a\n\tResourceReader for no discernible reason.\n\n\tUse some LINQ, just because Marek said so. \n\n\nsvn path=/trunk/moon/; revision=102843 Todo removal action\n\nsvn path=/trunk/moon/; revision=102576 2008-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/control.cpp: Add a skeleton UserControl, to get a bit\n\tfurther on the loading of a Silverlight 2 application. \n\n\tSee the TODO, there are still many limitations.\n\n\nsvn path=/trunk/moon/; revision=102499 Initial support for XAP files, three methods are still missing before we can load XAP files\n(System.Windows.Application.LoadComponent and GetResource).\n\nTo use this, you must for now use:\n\n\tMONO_PATH=$prefix/lib/mono/2.1 firefox ...\n\nAs our versions for the assemblies no longer match the Silverlight 2.0 refresh versions.\n\n2008-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Update all classes to not derive from MS.Internal.Collection,\n\tinstead the new PresentationFrameworkCollection.\n\n\t* Mono/Report.cs: New error reporting framework, we should use\n\tthis to consolidate error reporting. \n\n\t* Application.cs: Add meat to the actual implementation, we now\n\tstartup, still a handful of methods must be implemented. \n\n\t* System.Windows/XapHackProxyImpl.cs: Continuation of the horrid\n\tcross appdomain hack.\n\n\t* Add a few more managed mirrors for the unmanaged classes. \n\n2008-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Mono/XapHack.cs: Another hack for creating MarshalByRefObjects.\n\n\tWe should probably eliminate the need for this, and just have a\n\tdedicated mechanism that can pass an array of strings on a\n\tcross-domain call (the only interaction we ever need to make,\n\twhich we are not even doing now).\n\n\t* Mono/NativeMethods.cs: Add more native methods. \n\n2008-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: Add support for XAP file loading. \n\n\t* mono.cpp: New methods to create applications based on XAP files,\n\tand shut them down.\n\n\t* plugin.cpp (PluginInstance::StreamAsFile): If Silverlight2 the\n\trequest was for a XAP file, load a XAP file.    This could break\n\tif people embed a Silverlight2 plugin, but pass a XAML file, must\n\ttest this. \n\n\t* plugin.cpp: Some refactoring to keep the Mono-depending features\n\ttogether, without having ifdefs inside of functions.\n\n\tXAP maintenance: Keep track of whether a XAP application has been\n\tloaded, destroy XAP applications on shutdown.\n\t\n2008-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* xap.cpp: Expose xap_unpack, include when Mono runtime is\n\tincluded. \n\n\t* deployment.cpp: Small fixups.\n\n\t* xaml.cpp (deploy_namespace): New namespace used to parse\n\tAppManifest.xaml files that start with a <Deployment> tag on the\n\thttp://schemas.microsoft.com/client/2007/deployment namespace. \n\t\n\t(xaml_init): Register the deployment classes.\n\n\t* type.cpp (type_is_dependency_object): Add new helper method\n\tto determine if a Kind is a DEPENDENCYOBJECT, the list is no\n\tlonger separated in value-types and DependencyObjects, so its not\n\tpossible to do a fast lookup from managed code. \n\n\n\nsvn path=/trunk/moon/; revision=102492 Some code to test the XAP loader\n\nsvn path=/trunk/moon/; revision=101963 So bad\n\nsvn path=/trunk/moon/; revision=101264 Miguel learns C++\n\nsvn path=/trunk/moon/; revision=101263 oops, fix last minute check\n\nsvn path=/trunk/moon/; revision=101262 2008-04-20  Miguel de Icaza  <miguel@roxanne.site>\n\n        * plugin.h: Add methods to flag Silverlight2, add field Xap that\n        if not-NULL contains a pointer to the XAP file downloaded.\n\n        * plugin-instance.c: If we are dealing with a Silverlight 2\n        application, use Xap to unpack it.   Does not load the result yet. \n \n        * moonlight.h: Add support for SL2 mime type, clear up VERSION\n\n        * plugin-glue.cpp: Tell PluginInstance whether this is an SL1 or\n        SL2 activation.\n\n\nsvn path=/trunk/moon/; revision=101261 Update after running typegen/typegen.sh\n\nsvn path=/trunk/moon/; revision=101260 2008-04-20  Miguel de Icaza  <miguel@roxanne.site>\n\n        * deployment.cpp: new dependency property objects for the\n        Deployment class.\n\n        * xap.cpp: XAP loader, unpacks and instantiates deployment, but\n        does not load assemblies in VM.  Not sure if this should be done\n        here (and add a VM dependency) or in the plugin and later as well\n        on mopen.\n\n        * runtime.cpp: Deployment initialization.\n\n        * downloader.cpp Moved some code from here into utils.cpp:\n        * Expose\n        CreateTempDir instead of MakeTempDir that takes care of creating\n        the directory with a unique signature.\n\n\nsvn path=/trunk/moon/; revision=101259 updated TODO\n\nsvn path=/trunk/moon/; revision=101221 Maybe its too late, but drop the smcs.pc dep\n\nsvn path=/trunk/moon/; revision=101062 Attempt what Jackson did\n\nsvn path=/trunk/moon/; revision=100826 For distcheck\n\nsvn path=/trunk/moon/; revision=100825 more distcheck fixes\n\nsvn path=/trunk/moon/; revision=100824 Update to a format of tar that will work\n\nsvn path=/trunk/moon/; revision=100823 distcheck\n\nsvn path=/trunk/moon/; revision=100822 include class in dist\n\nsvn path=/trunk/moon/; revision=100821 Documentation updates\n\nsvn path=/trunk/moon/; revision=100820 Add\n\nsvn path=/trunk/moon/; revision=100812 Add data directory\n\nsvn path=/trunk/moon/; revision=100810 copy\n\nsvn path=/trunk/moon/; revision=100808 copy\n\nsvn path=/trunk/moon/; revision=100807 copy\n\nsvn path=/trunk/moon/; revision=100806 copy\n\nsvn path=/trunk/moon/; revision=100805 Oops\n\nsvn path=/trunk/moon/; revision=100804 Add dir\n\nsvn path=/trunk/moon/; revision=100803 oops\n\nsvn path=/trunk/moon/; revision=100802 add\n\nsvn path=/trunk/moon/; revision=100801 updateroo\n\nsvn path=/trunk/moon/; revision=100800 Add System.Windows.Browser\n\nsvn path=/trunk/moon/; revision=100799 System.Silverlight becomes System.Windows.Browser\n\n\nsvn path=/trunk/moon/; revision=100797 Add more files to distribution\n\nsvn path=/trunk/moon/; revision=100796 Update\n\nsvn path=/trunk/moon/; revision=100795 Update\n\nsvn path=/trunk/moon/; revision=100794 Copy\n\n\nsvn path=/trunk/moon/; revision=100793 agclr in olive becomes System.Windows in moon\n\n\nsvn path=/trunk/moon/; revision=100792 Update\n\nsvn path=/trunk/moon/; revision=100791 add\n\nsvn path=/trunk/moon/; revision=100789 Remove unnnecessary files\n\nsvn path=/trunk/moon/; revision=100786 Copy agmono, first of the assemblies we copy\n\n\nsvn path=/trunk/moon/; revision=100785 Copy file\n\nsvn path=/trunk/moon/; revision=100784 Copy file\n\nsvn path=/trunk/moon/; revision=100783 add basic class directory\n\nsvn path=/trunk/moon/; revision=100781 Add sample\n\nsvn path=/trunk/moon/; revision=100289 Add default ctor\n\nsvn path=/trunk/moon/; revision=100261 Add ruler to the build\n\nsvn path=/trunk/moon/; revision=100252 Fix\n\nsvn path=/trunk/moon/; revision=100251 Update the rest of the desklets to the automake process\n\nsvn path=/trunk/moon/; revision=99705 Use modern C# idioms, we do not want to encourage the old and busted idioms (also, the selector was wrong) Add support for Xcode 5.2 first commit [Unix] Use exec before calling into a child process\n\nThis uses the Unix idiom to use the shell's exec command to have the\nchild process take over the address space of the calling process.\nThis means that there are fewer processes running on the system. Add Unix build script Some more docs Document token everywhere Add some docs Added stub documentation + Maintenance Makefile Merge pull request #1 from chkn/designer-fixes\n\nFixes for iOS designer integration Add link to SnackBar Fix constructor, per derek.beattie@gmail.com's suggestion Add an anchor Small touchups, fixes small bugs Small fix Handful of bug fixes Add the basics for a sample Initial port File copying works, but the dialog is still ugly Setup to run copy operations in the background to make them abortable Top and bottom Status bar Add wrap support add skipped scroll updates, start back scroll Add file viewer Add file viewer Add support for target-exists-action Use C# 4\nAdd Error to the progress interface\nProbe for target existing\nAvoid copying the same file on top of itself\nPathetic support for 'cd' in the prompt\nHandle entry line events specially (for return)\nAdd home/end keyhandling to the panels Improve copy operation (complete)\nMake the engine independent of the UI\nLittle refactoring Refactor, reuse some code Refactor some code Small fixes Make this work on Unix with the Xamarin.Mac Full profile and desktop Mono Fix Update makefile Bring the C# inline XML docs Add doc stubs Create LICENSE convert to markdown Rename Initial import into git, from CVS Update README.md Update README.md Update README.md Add a convenient Makefile to build the samples Fix README.md files to be readable without a web browser Fix style Update README.md Update README.md Update README.md Added ios7 UIImageEffects sample Add metadata for sample display Make this iOS7 too Fix rendering of copyright Add new sample Merge pull request #24 from pierceboggan/master\n\nFixed universal library Merge pull request #22 from dannycabrera/master\n\nPull Request allowing app to run on Universal device Merge pull request #23 from efontana/master\n\nFix for Peak Level being incorrect. Add System.Core reference Work around empty calendar stores, fixes #10165 Add license Improve README Add AQTapDemo, port of Chris Adamson's sample from CocoaConf Merge pull request #18 from aliegeni/patch-1\n\nUpdate ReachabilitySample/reachability.cs Merge branch 'monotouch-5.4'\n\nConflicts:\n\tCoreImage/AppDelegate.cs Use new API style Reformat sample with tabs Add new sample Merge pull request #15 from topgenorth/master\n\nPossible fix for Reachability.InternetConnectionStatus() always returns NetworkStatus.ReachableViaWiFiNetwork Revert \"Add KeyValueObserver sample\"\n\nThis reverts commit e8b5bf5ea917b694d8edebf88e166e94dcb010b6. Add KeyValueObserver sample Add KeyValueObserver sample Add screenshots Add metadata Use strongly typed parameters Fix merge Fix the ugly ass style for parameters and make it use the Mono style Added a way to enter messages, auto-grow the entry, scroll on update, scroll on keyboard entry/dismissal, and a simple login screen Merge pull request #13 from bratsche/master\n\nUpdates the Makefile in MonoCatalogSample to use iOS 5.0 Improve the sample, cover more stuff Render the VideoSubtype Add RosyWriter from Eric Add metadata and README for GLCameraRipple Added README.md and Metadata.xml to CoreMidi sample Added README.md and Metadata.xml to CoreMidi sample Merge pull request #12 from samillar/master\n\nMediaCapture project/solution directory added Merge branch 'master' into monotouch-5.4 Revert accidental commit Merge Fix merge conflict one line typo, took about 6 hours of chasing ghosts Remove dead code Fix build, add comments Hook up touch events, ripple, update frames per second Tracked down the hang: I had two independent variables named the same object, so Dispose() was never disposing Prevent crash by using BindBuffer to the ElementArrayBuffer and passing IntPtr.Zero to the VertexAttribPointer Add drawing code, add update code, fix Ripple model, add textures;   Not working More work on the sample Add the beginning of the GLCameraRipple sample Update SimpleTextInput/README.md Make it easier to navigate Fix the sample to render the various filters that do not take images Update to new MonoTouch strongly typed API Update the Midi sample Revert accidental commit Add CoreMidi sample Update Add clean target Format the README Add support to StreamingAudio to report the underlying stream timestamp + fix Stream+Save case + Upgrade to Xcode 4 style project Added BubbleCell sample Make the avTouchSample actually render the levels Fix the sample to build on the first pass Rename to avoid the space Fixes for the samples:\n\n\tMonoCatalogSample was using old XIBs, and those did not use the new backing store system, so they were broken to being with.\n\n\tStreamingAudio no longer hardcodes developer \"Miguel de Icaza' for the sample Fix the sample, it was not working before Merge pull request #8 from Clancey/patch-1\n\nAdded a close/dispose for the file streams Add License Update comments on this call to Dispose, it is very important Edited ViewTransitions/README.md via GitHub Merge pull request #4 from chrisntr/master\n\nCleaned up these examples Add this to make launch work Add print sample Add designer files Add missing file Avoid race condition: always initialize ImageView, before we setup the queue Latest version Update Add sample Use the old code Fixes from contributors Updates to samples + KeyChain sample Merge branch 'master' of github.com:migueldeicaza/monotouch-samples Apply fixes from Thomas Rosenstein that fix:\n\t* Skip audio every few seconds\n\t* Fires the Finished event\n\t* Added some docs Update README to point to the new iOS class names. Add support to use IKVM.Reflection instead of System.Reflection.\n\nThis allows the tool to work with libraries created for different profiles. Update README.md Make this use IKVM.Reflection instead of System.Reflection Add Add Add Fetch from the previous copy the changes to AVFoundation, Addressbook and CFProxy Strong typed returns for NSFileManager's file system probing features Implement Dispose on methods that have auto-generated backing fields Add support to the generator to specify code to be injected in the methods.\n\nSupports three setups:\n\n[PrologueSnippet (code)] will inject the code before any parameters are\nvalidated or marshalled.\n\n[PreSnippet (code)] will inject the code after parameter validation and\nconversion, but before the Objective-C method invocation.\n\n[PostSnippet (code)] will inject the code after the Objective-C invocation\nbut before any temporaries are disposed. Optimization: do not bother surfacing two strings to compare, let Objective-C compare them natively Use actual decent parameter names, as pointed out by Michael Hutchinson Prevent the common error condition when users call Dispose inside FinishedPlaying Merge pull request #14 from praeclarum/master\n\nAdded CGContext.ShowText overloads that take already-encoded byte[] arguments. Bring better error reporting to AVFoundation, for those doing disposes when they should not be making them Add support for [CheckDisposed] Fix MonoTouch build Add convenience method to create strongly typed version of the arrays Add NSValue.ObjCType Move Fix the signature Add New needs Move CoreImage to the shared directory Optimization: since this is internal, and we access the fields before, we dont need the Null checks here Add GetFloat, add NullAllowed to a list of places Add support for fields of type int and double The new iPhone product needs these Build fix Fix parameter Fix bug #688016 Add NSNumberFormatter Add Create methods to all CALayers.\n\nIn Objective-C static methods are overwritten, make sure we mimic\nthat behavior for the CALayer cases. Fix return value Add runMode:beforeDate: Fix the definition Small style fixes Add new helper method for Kenneth Use initWithCapacity instead of initWithLenght Polish a little bit the NSDecimal support Some small changes Add some NSDecimal methods Use NSStrings for keys Add new file to support the new marshaller update Add missing overload [corevideo] Fix binding by chaining to CVBuffer Bug fix: avoid infinite recursion in operator == methods [corevideo] fix inheritance for CVPixelBuffer [corevideo] fix inheritance for CVPixelBuffer [CoreMedia] CMSampleBuffer can now return the associated CVImageBuffer [coregraphics] provide overloads that take a CGBitmapFlags [avfoundation] make this API more pleasant to use [CoreMedia] A more complete, but not finished CMTime Add new overloads [avfoundation] Add a handful of missing keys Fix by Kenneth This is required to derive classes that derive from a model, for\nexample:\n\n\t[Model]\n\t[BaseType (NSObject)]\n\tinterface Foo {\n\t\t[Abstract, Export (\"foofoo\")]\n\t\tvoid FooFoo ();\n\t}\n\n\t[Model]\n\t[BaseType (typeof (Foo))]\n\tinterface Bar {\n\t}\n\nThis happens in coreplot.cs Add new CGGradient constructor [audiotoolbox] Implement more pieces Strongly type options for NSFileManager Update Revert the patch, it wont work since we use btouch API1.cs APi2.cs Fix my previous fix [bugfix] I believe we regressed this code at some point, because\nwe are not supposed to pass the sources to the first compilation\nstage, only the contract file and any -s: files (core_sources)\n\nShould fix the issue where we want to add some extension files\nwithotu any hacks More doc frameworks more tools to help debug docs Add NSUrlProtocol and NSUrlProtocolClient APIs Maximum license range Add another convenience method for the run loop Add another convenience method for the run loop [coregraphics] add support for transparency layers Updates for MonoTouch v.Next Fix the buidl [coretext] MonoTouch 4.0 updates Actually define the constants Fix accidental commit [Dlfcn] Expose some members of the class to the public [api] expose the fields for specifying the LineCap and LineJoins Fix build [docs] fix the --appledocs feature, better rendering [docs] autogenerated event documentation docfixer: do not crash on missing docs Add new tool to document some of the generated classes [documentation] expose some methods, so it can be used in other tools Another EventArgs->DelegateName update [maccore] Expose IntPtr handle constructors, to be used by bmac/btouch when binding APIs binding, another method that needs to be public Make these public so we can bind stuff Add support for -lib parameter Add barebones structure [generator] MonoTouch still uses Mono 2.6 [generator] Support out/ref parameters on C# events that we generate from Objective-C delegate classes Improve error message [cleanup] Ensure that we use DelegateName where it was required Fix generator to support DelegateName [nsindexset] Couple of friendly overloads [foundation] new file to holds a bunch of ToString methods [generator] improve error message [generator] fix to support the DelegateName [generator] Introduce DelegateName to stop overloading the meaning of EventArgs\n\nPreviously we used the EventArgs attribute for two purposes, to name the\nEventArgs class created when we pack arguments for events raised by\nour generated C# event wrappers for Objective-C delegates and also to\nname the C# delegate used for signatures when instead of an event, we\nuse a property.\n\nUse a separate attribute for those cases to resolve the confusion [docs] add support for pulling the first phrase as a summary Make NSIndexSet an IEnumerable Remove APIs not available on desktop [maccore] Few documentation fixes for MonoTouch/MonoMac [maccore] Few documentation fixes for MonoTouch/MonoMac Updated samples to latest API Turn these into samples Updated sample Port more samples More samples ported Fix a couple more samples Port Akihiro's sample to the new API Port Akihiro's sample to the new API Port Akihiro's sample to the new API Add an interactive shell Add an interactive shell Add an interactive shell First commit Merge pull request #1 from yusinto/patch-1\n\nUpdate OpenFlowSharp/ImageUtils.cs Disable tests that require special handling of ReplacementChar, see https://github.com/migueldeicaza/NStack/issues/20 Merge pull request #19 from benaadams/admin\n\ngitignore, editorconfig admin Use a newer Mono Remove todo Add some basic parity stuff to System.Rune Add alternative implementation for Utf8 support in the form of System.Rune Add more tests Handful of other tests Substrings of UINtPtr blocks keep a reference to the original block ustring.LastIndexOfAny tests + fix caught by test More tests, found another bug in the reverse hash function Plus doc update ustring.EqualsFolds, ustring.ContainsRune tests and fixes ContainsAny, tests and fixes Add Replace, EqualsFold, new tests and fixes for code that the tests surfaced Update Makefile Fix ustring.Split (string separator) Add status Fix path Fix travis file Fix String.Split for some border scenarios, add travis build + test, fix all warning Merge pull request #12 from DavidKarlas/patch-1\n\nFixing typo in documentation Merge pull request #8 from Therzok/fix-64bit-check\n\nFix bad check for 64bit. Bump Add null-terminated block ustring.Make and  add new MakeCopy API Use a hand-written nuspec file for now, so we can add the dependencies and avoid the nuget spam as described in https://github.com/migueldeicaza/NStack/issues/5 Update README.md Update README.md Make this .NET standard 1.5 Update README.md Update web docs Update DocFX site Update Move some RangeTables into a static class to make discoverability easier More docs Update docs Implement various interfaces expected on strings Doc update Documentation Some more Couple extra ones Documentation Make ustring usable again, and add more tests to Unicode Graphic methods, missing aliases, tests ustring feature refactoring done\n\nWith this code change, ustrings becomes a base abstract class, and I\nprovided three concrete implementations that can operate over a byte\narray, a range of bytes in a byte array, or an in-memory block.\n\nThe next step is to add the factory methods in ustring to surface it. Added some API docs Completed Letter, CaseTables and the Table generation This is like playing Zelda, every feature leads to another quest Complete the utf8 tests More tests Improve some tests Create LICENSE.md\n\nAdd MIT license.\r\n\r\nThis code lifts heavily from Go source code, add license. Update README.md More work More work Add first commit Merge pull request #195 from Boardwish/master\n\nStringElement bugfix (Horizontal text alignment) Merge pull request #221 from timrisi/ViewAppearing\n\nAdd ViewAppearing event Merge pull request #222 from timrisi/ActivityElement\n\n[ActivityElement] Update to position correctly when used in SplitView Merge pull request #220 from timrisi/master\n\nFix for EntryElement when Caption is null Merge pull request #211 from gregorymartin/master\n\nEntryElement Enhancements Merge pull request #218 from timrisi/MessageElementSearch\n\nMake MessageElement searchable Merge pull request #216 from timrisi/PartialElements\n\nMark all Element classes as partial Merge pull request #217 from timrisi/FloatElement\n\nFix FloatElement Merge pull request #215 from timrisi/DateTimePicker-MinuteInterval\n\nAdd MinuteInterval property for DateTimeElement Update TODO Update TODO Merge pull request #213 from chrigu-ebert/master\n\nFix indexed list bug that crashed the app when performing a search Use UITableViewCell's appearance for StyledStringElement, issue 193 Turn one-line LICENSE to the actual license Merge pull request #191 from bholmes/ios7-fixes\n\nFix for iOS 7. Merge pull request #188 from droyad/master\n\nAdded Flags Attribute to CellFlags enum UIViewElement: Add support for insets Merge pull request #179 from cosmos21/master\n\nFixes the size of the TextLabel caption in EntryElement Fix the date rendering of messages, it was rendering as today every day that matched the current month date; #182 Merge pull request #173 from Its-Tyson/datetime-element-selection-issue\n\nFixed a bug where DateTimeElements don't show any selection animation. Always use the same UITableViewCell, and resize the entry on demand.   Fixes #175 Merge pull request #172 from Its-Tyson/section-getroot-issue\n\nSection.GetImmediateRootElement() always returns null Merge pull request #169 from cosmos21/master\n\nClear the text of the searchBar if the user taps the search's Cancel button. Merge pull request #159 from ytn3rd/master\n\nCorrect displaying of time in update label. NO need to test for the Value, we test that later Merge pull request #161 from gratner/master\n\nPotential logic error Merge pull request #165 from jstedfast/password-entry\n\nFixed EntryElements to use a separate key for password entries Merge pull request #163 from jstedfast/warning-cleanup\n\nFixed some compile warnings Updated RootElement docs Merge pull request #148 from patrikahlenius/master\n\nMake sure new requests get a notification when the image is loaded. URI should be html encoded. Target filename is not updated when requests are popped from request queue. Merge pull request #157 from betai/master\n\nTypos Merge pull request #156 from gratner/master\n\nFixes #91 EntryAlignment bug on iPad Make the LoadMoreElement's label have a flexible width, fixes issue 154 Use format tag in docs Revert the changes from Jarina, and properly apply the null changes Merge pull request #143 from viniciusjarina/fix_vs_compilation\n\nFixed VS compilation error (with Nullable types) DialogViewController: Expose the Pushing property Use NSUrlConnection to download data, to avoid bringing the Http/ssl stack by default for Json users Fix build A different way to always return the value from the entry, this time without the event handler, which caused Secure entry lines to behave differently RadioElement: Fix from Stuart Carnie (scarnie/github.com) to handle cases where the Selection is invalid on the container Fix type lookup Docs Merge pull request #134 from versus1985/master\n\nAdding a IB-compatible constructor for DialogViewController Merge pull request #127 from Contatta/issue-126\n\nFix compile error Take the cache lock before purging it Removed the RowBadgeElement code, and put it in the element pack instead Fix the build Merge pull request #118 from bokmadsen/master\n\nAdded TextAlignment on TextField in EntryElement Add documentation, and make RowBadgeElement derive from StyledStringElement Remove transient file Added makefile Merge pull request #121 from johnsimons/ReflectionChanges\n\nAdded ability to set more props via reflection attribute Merge pull request #97 from Alxandr/badge-element\n\nAdded RowBadgeElement and samples, from:\r\n\r\nhttps://github.com/migueldeicaza/MonoTouch.Dialog/pull/97 Merge pull request #117 from chrisntr/master\n\nCheck to see if tableView.Source is not null Merge pull request #116 from chrisntr/master\n\nUse Animated ShowsCancelButton method for Search Bar. Merge pull request #75 from kevinreay/master\n\nSearch functionality - new features / bug fixes / UI tweaks Remove the XIB dependency, so that the sample runs on iPad and iPhone and still receive touches in the whole screen, see pull request 95 I added a couple new features to my PickerElement project including highlighting the current row and scrolling it into view. I also implement a DateTimeElement that doesn't use a sub view.\nhttps://github.com/crdeutsch/MonoTouch.Dialog-PickerElement\n\nI've update the PickerElement to be based off the EntryElement and found being able to override BecomeFirstResponder and ResignFirstResponder useful.\n\nAlso I moved the EntryStarted event to the top in order to avoid issues with scrolling the view while the size is still adjusted.\n\n* Made BecomeFirstResponder and ResignFirstResponder overridable so that the next button on the keyboard can work with my PickerElement project.\n* Moved EntryStarted event to the top to avoid a timing issue with scrolling while the TableView still has a shorter height. Hook up to EditingChanged to reflect the values as the change takes place, not later.   Fix from JackonHarper Fixes xamarin #3970, patch from Sebastien Pouliot More docs Merge pull request #109 from spouliot/master\n\nAdd re-ordering the elements in the advanced editing sample Added the namespace docs\n\nSigned-off-by: Miguel de Icaza <miguel@gnome.org> Revert the invalid assembly reference name Fix Json Fix documentaiton markup Add Add a bunch of docs More docs Merge pull request #106 from crdeutsch/master\n\nAdded EventHandler to EntryElement to make clearing UI elements easier Merge pull request #104 from rolfbjarne/master\n\nFix typo, ViewDissapearing -> ViewDisappearing. Fixes #3312. Revert for now Merge pull request #103 from rolfbjarne/master\n\nFix typo, ViewDissapearing -> ViewDisappearing. Fixes #3312. Merge pull request #101 from johnsimons/patch-1\n\nFixed spelling mistake Add event DateSelected to the date picker Fix the HtmlElement sizing Docs Fix broken sample Add an OnSelection event use different keys based on the UITableViewCellStyle, thanks to davidjade/github for the report (https://github.com/migueldeicaza/MonoTouch.Dialog/commit/ab9ffa55717c1e7ab7daf35dd5c4b728ca607a3d#commitcomment-847018) Spice up the docs Merge Json documentation into README.markdown Merge branch 'json' Move Json.cs to MonoTouch.Dialog proper Add the ability to reference elements that were loaded from the Json file Merge JsonElement and JsonDialog, now everything is loaded through JsonElement Move JsonElement to the top of the file, prepare it to have a null url, for the upcoming changes to keep track of state Add support for loading extra data dynamically Add JSonElement, a RootElement that can load contents from a Url Add DateTime/Web elements Allow BooleanElement value to be set programatically, and the UI updated accordingly, fixes #44/#84 Allow BooleanElement value to be set programatically, and the UI updated accordingly, fixes #44/#84 Update README.markdown Updated TODO Merge pull request #89 from poke/UseCaptionAttribute\n\nUse CaptionAttribute for enum values if available. Merge pull request #88 from poke/SkipCompilerGenerated\n\nSkip compiler-generated fields. Add support for nested controllers, groups and checkboxes and radio elements Add more docs subtitle color, prevent allocating extrainfo if properties are null Add first commit Merge pull request #7 from rfranke/resp\n\nIntroduce REdis Serialization Protocol (RESP) to fix open issues Merge pull request #5 from benapetr/master\n\nImplemented a left push command Fix build Fix the style to match mine Update README.md First commit Add first commit Provide editing capabilities using Mono.Terminal.GetLine.\n\nThis provides command line editing, history, and reverse history\nsearch using the Emacs keybindings, similar to bash. Removed Start simplification Drop support for dialects Add getline from mono Improve GDB version, add command line editing with getline, detect the default runtime Update README.md Nugetizer-3000 logo, to set the mood Describe what this fork is Fill out a few bits on the plist I do not think we need to AOT this stuff Discuss what this fork is about Merge pull request #1 from conceptdev/master\n\nsmall fix and sample First attempt Merge pull request #95 from XTZGZoReX/master.\n\nFix spelling in Consts.cs.in Merge pull request #90 from nulltoken/patch-1.\n\n[XBuild) Make RemoveDir task able to recursively delete the content of a directory Update SGen sources to SGen license Do not go beyond our string boundaries Restore the functionality to the REPL that allowed us to pass\nfiles to be parsed on the command line as if they were typed on the\nstandard input Prevent crash on scripts that do not contain the #! line Revert broken patch 34f18b68 that caused random bugs in assembly loading, but could crash the runtime as well Add test to prevent future problems, this fixes the random MacOSX crashes with assembly loading, but likely everywhere else as well Console encoding fix for bug 678357\n\nMove the stream setup into a separate method and recreate the\nstreams whenever the input or output streams change. Make this OSX specific instead Allow generated files here Check in these autogenerated files, since they keep breaking the concurrent make builds OSX, Win32: Implements support for DriveInfo\n\nThis implements support for DriveInfo for OSX and Windows.\n\nOn OSX we use statfs system call that provides the filesystem\ntype information that we need.   On Linux, we continue to fallback\nto mtab parsing Add OSX support to the io-layer: supports getting a list of mounted file systems, and OSX-specific file system types Add Environment.IsMacOS for handling OSX specific bits in corlib Fix build More NET_2_0 define removal Style changes as I edit this file Re-enable the Decimal(double) constructor that uses our direct transformation\nfrom a double into a decimal.\n\nThis is too good to be true.   The only change was to set the rounding bit in the\ncall to rescale the results.\n\nThis should fix bug #584736, and hopefully does not regress anythign else.   The\ndecimal test suite in corlib passes. [System.Json] Fix loader.\n\nThe current loader failed with some Json strings due to the implementation\nof the BufferedStreamReader.   Removed that implementation completely,\nand instead depend on the StreamReader to do the actual BOM detection.\n\nThis removes the JavaScriptObjectDeserializer.cs file Make print take an object Fix build [TerminfoDriver] be more tolerant to failures, and fallback gracefully, instead of aborting Do not throw exceptions, instead return a sensible value, fixes 656468 Bug fix, on EOF, return null from ReadLine Add default implementations to ReadLine() and ReadToEnd() to TextReader, fixes 655934 Avoid warnings, should fix OpenSUSE builds [594642] System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces fix for MacOS X Remove [670974] Use the underlying BaseStream to read bytes instead of trying to peek a character.\n\nPeeking a character as it turns out is a really bad idea as it involves the encoder\nto pull characters.   If the PeekChar happens to read a byte that is part of a\nUTF8 string that needs more characters to process we would end up with the reported\ncrash.\n\nAtsushi Enomoto tracked this down, and the fix is to use the binaryreader.BaseStream\nto directly call into ReadByte and Read without ever probing with PeekChar ().   It\nis not really possible to use BinaryReader.ReadByte since this one can throw on\nend-of-buffer conditions instead of returning -1 Do not build in parallel Add solution files Various updates Pass warnings Visual Studio build support: updated the scripts that generate csproj files.\n\nWith the new C# compiler, the build complexity is vastly reduced, the new setup\nis able to produce many of the csproj files.\n\nThe next step is to generate a couple of solutions:\n\n\t* BootstrapSolution: to build the basic assemblies used to\n\t  build the rest of Mono from a set of basic assemblies.\n\n\t  This should be run to prepare a tree.\n\n\t* 2.0 solution: builds the various 2.0 libraries and executables\n\n\t* 4.0 solution: builds the various 4.0 libraries and executables\n\nInstallation: where should the resulting assemblies go once they are built?\n\nWhere should the assemblies go after the build is complete?\n\nHow do we turn a build into an redistributable package? Update the csproj generator targets [fix] changing Form.Enabled sometimes can change the list of OpenForms, fixes 671098 [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 665233] ToolStrip Menus Keeping Keyboard Capture after hovering over SubMenu Do not throw if we get a RunAndCollect Style Add new test Fix Enum.HasValue, previous version crashed with negative values Update docs Add prototype to .h file [csharp] Change the signature for print [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase\n\nAdd a better way of dealing with -e, without adding hacks to the core that wont work\nin the future [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase [repl] Add support for -e EXPRESSION to the csharp command Document csharp #! support [getline] Fix history search in the cmdline editor [Mono.CSharp] Fix bug where overwriting variables cleared the wrong value\n\nThis fixes #641910 [csharp] repl using statement fix + support for --fatal\n\nFixes #638585 which kept reporting the same error on the using statements over and over\nAdded support for the --fatal flag to the REPL Do not build the Socket passing on Mobile systems [sockets] Implement DuplicateAndClose and Socket (SocketInformation) constructor for in-process socket passing (AppDomains) [eglib] Another bug fix for g_shell_parse\n\nWe do not create a new string after a quotation, unless the next\ncharacter after a closing quote is a space.   This allows parsing\nthe string:\n\t\"foo\",\"bar\"\n\nAs:\n\tfoo,bar\n\nThis fixes #655896\n\n1# Explicit paths specified without -i nor -o; assuming --only paths... [eglib] Add more tests for the g_shell_parse [mscorlib/getfolderpath] Special-case MacOS X.\n\nThe following changes were done to specially support OSX:\n* MyMusic on OSX is ~/Music\n* MyPictures on OSX is ~/Pictures\n* Fonts on OSX is ~/Library/Fonts\n* Favorites on OSX is ~/Library/Favorites\n* ProgramFiles on OSX is /Applications\n* InternetCache on OSX is ~/Library/Caches\n\nThe documentation has been updated accordingly. [mscorlib] New Path.Combine methods are exposed internally on pre 4.0 profiles\n\nThis allows our mscorlib code to be cleaner [mscorlib/getfolderpath] Remove MonoTODO [GetFolderPath] Handful of .NET 4 changes\n\n* Actually use the SpecialFolderPathOptions where we need them\n  -> Create is acknowledged\n  -> DoNotVerify is ignored, as Mono historically did not throw an\n     exception on missing directories.\n* Rename InternalGetFolderPath to UnixGetFolderPath as this is what it is.\n* Fix existing references to the code\n* Fix indentation in routine that was never properly formatted (ReadXdgUserDir) [mscorlib] inside mscorlib Platform's value will be correct for OSX, but userland still gets Unix.\n\nThis change allows mscorlib to get the real PlatformID, to split code between\nOSX and general Unix.   We continue to expose the value 4 (Unix) to usercode\nas changing this might break user applications. [monodoc] Use points instead of relative-sizing, so that we render the same on web browsers and on WebKit Revert accidental patch [monodoc] Update the stylesheets to use Jonathan Pobst's UI design.\n\nThis is a temporary measure, as we only use 1/10th of Jonathan's\nicons and style, but will do while we get Kipunji deployed.\n\nThe major benefit is that the native Linux and MacOS Monodoc\nclients when using Gecko or WebKit can render something that is not\nhideous. [monodoc] Header no longer needed, we now keep it on the top [monodoc] Fix the root display once and for all: web does not do editing Update README Update instructions Undo adding of README2 test file [winforms] undo accidental removal of a line [winforms] revert patch, it regresses the test suite: https://github.com/mono/mono/commit/8334fe3a56c978ffe7f8cb199536f9b3234afdbe Update COPYING file with MS-PL and Apache2 texts Add README2 [winforms] Pass 4 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms Pass 1 of removing NET_2_0 from winforms [winforms] Style, braces [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] style, and NET_2_0 dropped [winforms] Prepare for Gnome 3, by not depending on libgnomeui Update docs Add part3 of the Google GCI 2010 contributions Documentation for Mono.Cairo contributed by knairda from Google GCI 2010 Awesome doc contributions from Adrian Kummerlaender Awesome doc contributions from Adrian Kummerlaender Remove experimental from the name Remove mentions of Logging and Heap Shot profilers from man page Expose some of our internals to the Mono.Winforms assembly Fix broken patch Allow this file to expose its types as public if needed Document server option to --debugger-agent Retval is not a reserved keyword, fixes 643345 Fix EqualityComparer for strings.\n\nIt turns out that Strings need to explicitly use a version that does\nimplement EqualityComparer<string> since string is an IEquatable.\n\nDo this, and to avoid the reflection mess, cast to object, then cast\nto the real type Optimize EqualityComparer for strings\n\nThis shortcut prevents the reflection system to kick into action\nfor compiler generated string switch statements. Add support for sqlite3_open_v2 and a few of the open flags supported on it, plus iOS security flags updates Add Initial commit Update README.md [CoreVideo] Add CVPlanarPixelBufferInfo_YCbCrBiPlanar, fixes #28817 Bump maccore, for ios-api-docs Update README.md Bring new maccore with the doc stubs Merge pull request #237 from migueldeicaza/xcode8-uikit\n\nXcode8 uikit [ios10,uikit] Address various issues identified by Sebastien [ios10,uikit] More API updates Add enum Merge pull request #204 from migueldeicaza/xcode8-uikit\n\n[Review][iOS10,UIKit] Small API introductions. [iOS10,UIKit] Small API introductions.\n\nOf note: NSLayoutConstraints.cs provides the generic methods, as the\ngenerator currently does not know how to either annotate generic\nreturn types (necesary to build), nor does it have \"where\" support.\n\nUITraitCollection - re-indented to follow the tab convention. Merge pull request #197 from migueldeicaza/xcode8-uigraphicsrenderer\n\n[ios10,UIKit] UIGraphicsRenderer [uikit] Implement feedback from review [ios10,UIKit] UIGraphicsRenderer Update README.md Added some docs Update builds options CancelMenu was being invoked from a background thread, thanks MonoTouch 5.3.3! Catch nulls in ReportError Update TODO file Remove debugging code Remove debugging code Use Locale.GetText Remove forced-authentication debugging statement, now we can post to Instapaper once configured Prepare for distribution Use LLVM, Sgen, NewRefcounts on TweetStation 2.2 Disable xauth as the default for the public build Build fix Migrate project Set the backgroundcolor to clear, to match the default color Revert this accidental commit Do not purge all the images on entering the background, that flickers on restart Getting my thoughts in place for the new TweetStation Update One line fix Avoid crash, the MenuHostElement becomes null after the swipe is over Centralize the kinds of urls we detect Refactored the code around a custom view controller Complete instapaper support Small cleanups Add the instapaper UI, still need to extra urls and post Handle the shorthand here as well Do not crash on profiles without a location Add the artwork and menu items for read-later feature Highlight bit.ly urls even if they are missing the http Add convenience property Add new icons Add Default.png back Noticed a crash today when we might not get a valid cell Let us try to start the wan on these requests Some users no longer have the url property set UI Tuneups, and avoid a crash on simulator Fix Be more defensive, Twitter started not returning the in-reply-to fields oops, fix this Upgrade project Initialize the HUD Upload animation Make this more robust remove debug panel Improve error reporting initial support for cancelling image uploads Fix build Fix build Add Debug.cs Changes from the machine at home Do not overflow the threadpool.\n\nWell, this was embarrassing, I was checking with the wrong property\nthe number of open downloaders, which is why TweetStation could\neventually stop downloading images. Make the Load more button a little larger Upgrade to the latest SQLite-cs Cope with Twitter's overloaded limitations (no more than 40 replies)\nand small refactoring to use code now in MonoTouch.Dialog Follow best practices: dispose extra data on the AppDelegate's DidEnterBackground Smaller composer audio file Fix chicken noises setting Trim out all the empty audio space from the chicken noises Use lower quality mp3 file Use a multi-line element, not a single-line one to render the user summary Use a multi-line element, not a single-line one to render the user summary Let user select any picture, not only saved pics, update TODO Allow for fatter fingers in the web browser Small usability touchups + crash logger\n\nSupport Search bar auto-hiding when switching panes\nDo not reload timelines on resume if we are not at the top\nAdd a crash logger\nLog a few errors If we had a corrupt image, this could trigger a crash It is valid to enter null values into the LRUcache, do not crash when removing them Update TODO list with user feedback update to my solution Diagnostics Fix the login bug: fetch the actual password Update Make Variable a class that holds the three convenience operations involved Merge branch 'refsupport' Update CSProj file Update SampleTest Fix sample Go back to VarHandleOp Couple of fixes, and made TFOutput.ToString more useful Initial support for References, the switch of Variable to use VariableV2 from VarHandleOp to address #133 breaks the SampleTest with a type mismatch that I have not trackedn down yet Document shortcoming for Issue #133 Document shortcoming for Issue #133 Prevent crashes when debugger is visualizing a status and we dispose it Some doc work TensorFlowSharp 1.3.0-pre1 Pull request 107, to fix GCed tensorhandledelegates, https://github.com/migueldeicaza/TensorFlowSharp/pull/107 Fix docs Keep a reference to the wrapped delegate to prevent the object being collected Keep a reference to the wrapped delegate to prevent the object being collected Mirror the 1.2 API in the documentation Add support for iOS (callbacks need to be flagged) + documentation Docs updates Update version for release Some refactoring of the MNIST loader, still incomplete New doc system Updated github docs Documentation updates TFTensor constructor can now take arbitrary arrays Some style updates Some style work, wip Updated API docs Make TFOperationDesc API fluent, document Runner API, make Run(TFOperation) clear previous fetches and return a single-value, instead of an array Add more low-level tests TFTensor, add convenience boolean overloads Order the operations by name, so that future diffs are easier to track Make it simpler to spot the usage samples Drop the ref long[] signature in two methods, variation of the fix from @mwk88 at https://github.com/migueldeicaza/TensorFlowSharp/pull/63 Remove unnecessary bits Update Add TFShape operator overload Nuget support (#65)\n\n* Nuget attempt\r\n\r\n* Automated the nuget building Remove build status as Travis does not have Mono with C# 7 Updated README based on the patch from @asimshankar Tuplification of the TFGraph API.\n\nBefore this release, multiple return values were returned in various `ref` parameters.\n\nNow we rely on C# 7 and use tuple returns to return more than one value from the various\nTFGraph methods. Update README.md Doc work Doc update Add Gradient support, add import options, RemapControlDependency Create README.md Some more doc work Some more doc work Add style Small fix Up More docs updates move add Add docs Small updates to allow doc publishing Remove old, incorrect comment Fix reported issue in FetchJaggedArray, introduce convenience TFShape to TFTensor conversion Merge pull request #46 from andykernahan/md-fix\n\nFixes TFTensor.GetValue for multidimensional arrays. Merge pull request #47 from andykernahan/imports\n\nAdds DllImport to TF_SessionPRun. Merge pull request #44 from lobrien/master\n\nMinor change to installation instructions in README.MD More support for KerasSharp Small bits for RandomNormal to track the work Merge pull request #36 from dieron/master\n\nFixes build in VS 2015 Default to 64 bits, hopefully this helps on Windows a bit Go on a TFTensor constructor diet + support for TF_DeletePRunHandle Merge pull request #34 from mlusiak/patch-1\n\nUpdating the url to \"install from sources\" Update README.md Forgot to commit these convenience methods Remove methods that take or return is_ref parameters, per guidance Small sample addition Documentation updates Add support for variables, based on the guidance from Asim Shankar, and https://github.com/asimshankar/tensorflow/tree/govars/tensorflow/go/v Small touchups Small touchups, upgrade to 4.6.1 Update README.md Move some files Complete While implementation, with test TFGraph.GetTensorShape: better implementation, and use it in ReduceSum New bindings in recent tensorflows Bind methods that take reference types MakeUnique name, some more usability fixes Introduce TFShape to replace long[] Add Runner API Scopes, TFTensor constructors Small touchups Some docs More API touchups Shuffle samples Small sample optimization, complete F# sample Update README.md Update Update README.md Start of F# sample Add support for TFTensor.GetValue to return jagged arrays Make this sample work, and scan multiple files at once Add support for returning multi-dimensional tensors, this looks slow TFTensor.GetValue(), tracked the source of errros - must support TF_STRING encoding Internalize Options to avoid getting them in our public API Improve error messages to help users diagnose problems when using custom mode (#4922)\n\n* Improve error messages to help users diagnose problems when using the custom mode\r\n\r\n* Update mkbundle.cs Update copyright years A few fixes to the man page [mkbundle] Fixes the embedding of dependency assemblies + test Add mdb2ppdb man page, remove prj2make man page [marshal] Only copy the minimum of size/length, not the full size, fixes #46288 (#4031) [runtime] Provide fallback for Linux systems that lack CPU_COUNT in sched.h, fixes #45683 (#4032) [configure] Detect endianess and use mcs for big-endian systems.\n\nRenames the flag to be more explicit on the intended purpose.  Also,\ndocument the new configuration flag.\n\nThe default will probe the right compiler to use. [marshal] Fix API documentation comment on mono_string_to_byvalwstr [eglib/mono] Aleksey caught a discrepancy between the semantics of Unix and Windows, our eglib version should always strdup (#3899) [mkbundle] Fix the argument order to put the entry point on argv[1] (#3879) Make mkbundle use SDKs instead of a single runtime for cross compilation\n\nMake mkbundle use SDKs instead of a single runtime for cross compilation [mono] Add some strong types for a few variables, document some methods (#3777) Utf8 (#3776)\n\n* UTF8 Marshaling APIs  (#3736)\r\n\r\nAdds support for the new UTF8 marshaling functionality in .NET, there\r\nis support for the new MarshalAs(UnmanagedType.LPUTF8St) as well as a\r\nhandful of convenience methods in Marshal.cs\r\n\r\nIn Mono, this is mostly a pass-through as we have historically only\r\ndone UTF8, so this merely adds the constant processing to the runtime.\r\n\r\nThis fixes a few bugs that the new test suite exhibited: when we\r\nmarshaled UTF8 strings, we assumed Chars() == Bytes() and we would end\r\nup chopping when marshaling out, and marshaling in.\r\n\r\nThere is also an additional behavioral bug that was fixed in\r\nMarshal.cs, unlike the rest of the runtime that treated Ansi as Utf8,\r\nStringToCoTaskMemAnsi behaved as ascii. This brings the API in line\r\nwith the rest of the runtime.\r\n\r\nThe equivalent CoreCLR changes were:\r\n\r\ndotnet/coreclr#4793\r\ndotnet/coreclr#6561\r\n\r\nThis has also surfaced two limitations in Mono's marshaling code,\r\nwhich is why two sets of tests are disabled: StringBuilder return\r\ntypes are not handled specially (char * needs to be turned into a new\r\nStringBuilder when present) and StringBuilders with an Out attribute\r\nshould update the StringBuilder in place, not make a new copy of it. Revert \"UTF8, with build fixed\"\n\nThis reverts commit 50d119be5d5ba52e0c935ea53907cf2b061a3cd8. Revert \"Revert \"UTF8 Marshaling APIs  (#3736)\"\"\n\nThis reverts commit 2a01bde545a47e287977637a4a08f8f965ca45dc.t push\n: UTF8, with build fixed Revert \"UTF8 Marshaling APIs  (#3736)\"\n\nThis reverts commit 4056e80006ee934ec024215cf998baf66aa8d6ae. UTF8 Marshaling APIs  (#3736)\n\nAdds support for the new UTF8 marshaling functionality in .NET, there is support for the new MarshalAs(UnmanagedType.LPUTF8St) as well as a handful of convenience methods in Marshal.cs\r\n\r\nIn Mono, this is mostly a pass-through as we have historically only done\r\nUTF8, so this merely adds the constant processing to the runtime.\r\n\r\nThis fixes a few bugs that the new test suite exhibited: when we marshaled UTF8 strings, we assumed Chars() == Bytes() and we would end up chopping when marshaling out, and marshaling in.\r\n\r\nThere is also an additional behavioral bug that was fixed in Marshal.cs, unlike the rest of the runtime that treated Ansi as Utf8, StringToCoTaskMemAnsi behaved as ascii. This brings the API in line with the rest of the runtime.\r\n\r\nThe equivalent CoreCLR changes were:\r\n\r\ndotnet/coreclr#4793\r\ndotnet/coreclr#6561\r\n\r\nThis has also surfaced two limitations in Mono's marshaling code, which is why two sets of tests are disabled: StringBuilder return types are not handled specially (char * needs to be turned into a new StringBuilder when present) and StringBuilders with an Out attribute should update the StringBuilder in place, not make a new copy of it. [mkbundle] Add diagnostics, fix crash, fix registered path to match runtime name on embedded MonoImages (#3669) [scripts] Add script to package the basic runtime to reuse by mkbundle [mini] Add some documentation comments to some IR generating macros [mkbundle] - Add support for bundling native libraries.\n\n* [mkbundle] add support for bundling native libraries\r\n\r\n* [glib] add g_mkdtemp\r\n\r\n* mono: Load the various library payloads for bundled executables\r\n\r\n* [msvc] Export mono_dl_open and mono_loader_register_module [mcs/Makefile] make the 'btest' (bootstrap test) target work again Bundle other options (#3501)\n\n* [mkbundle] add support for baking environment variables, make endian-independent\r\n\r\n* [runtime] Bundle support, implement missing stream processing Typo fix [runtime] Bundle support, implement missing stream processing (#3423) [mkbundle] add support for distributing I18N encoding files and improved the man page [linker] Bring various descriptors that were updated in iOS, but not on desktop Mono [linker] Update descriptors for mscorlib to include the new _ThreadPoolWaitCallback [mkbundle] Fix --fetch-target to not require an assembly, embed the proper assembly when --cross RUNTIME is used Remove stray comment [build] Update order.xml data [mkbundle] Improve error checking [main] replace computed value by a constant\n\nThe reason why mkbundle is not working is that for some reason\nthis constant expression is producing different code than the\n-24 that it is supposed to.\n\nWhat is odd is that the return value from the lseek system\ncall is the same, but yet, read fails with an end-of-file with\nthis value, and otherwise it passes.\n\nWith this call:\n\n     lseek (fd, -(16+sizeof(uint64_t)), SEEK_END)\n\nstrace displays:\n\nlseek(0x3, 0xFFFFFFE8, 0x2)\t\t = 19375512 0\n\nWith this call:\n\n     lseek (fd, -24, SEEK_END)\n\nstrace displays:\n\nlseek(0x3, 0xFFFFFFFFFFFFFFE8, 0x2)\t = 19375512 0\n\nNow, while both results from lseek are the same, a subsequent read\nwith 24 bytes to read returns zero on the former case, and 24 on\nthe latter case. WIP [library.make] Make resource usage declarative in the class libraries (#3159)\n\n[library.make] Make resource usage declarative in the class libraries More updates [genproj] Update project files [genproj] More updates to the project files, getting closer, down to 5 errors [genproj] Another library works, System.Json.Microsoft [genproj] support for using prebuilt resources [genproj] Getting closer to a full build\n* Add TODO list\n* Use -useSourcePath when building resources, so we do not need to add the explicit extra path\n* More updates, now battling resource generation across the board\n* Use newlines in the Unix commands to avoid generating things like cs-parser.cs^M [genproj] Update build files [mconfig] Remove dependency on build time settings [genproj] Update from Ankit's project [genproj] Run update-solution-files to track master Add another build step [genproj] Do not use \\r on the Unix parts of the build hook, add RabbitMQ hooks [genproj] Handle resources properly, add helper scripts to bootstrap [genproj] Properly include EmbeddedResources for .resx->resources Add missing project file [msbuild projects] Use newlines without a carriage return for Unix targets to appease MS msbuild [genproj] Fix the Makefile THISDIR location, so MSBuild can work with nunit.core Do not sign the assembly [genproj] Now we can build all executables with msbuild as well Update .gitignore, remove stale file [System.Windows.Forms] Fix incorrect compare of IntPtr to null [genproj] Fix THISDIR location in a few projects, so genproj can generate MSBuild files [System.Web] Remove duplicate file listings which break msbuild and update csprojs [genproj] Sync with latest set of changes to Makefiles [genproj] Use an explicit IntermediateOutputPath to prevent rebuilds on cyclic assemblies Remove more deprecated stuff Remove dead code, update solution files genproj: Improve handling of executables and projects with build dependencies Graduate the csproj/solution to completed - you can now build with the toplevel net_4_x.sln Remove [assembly:TargetFramework] as no other assembly uses it, and causes our msbuild to fail [WIP] Important change: more comprehensive Makefile to support csproj-local on System.Design (#3006)\n\n* Important change: more comprehensive Makefile to support csproj-local on System.Design\r\n\r\n* Change the dependency\r\n\r\n* update [genproj] Updates to project generator and csproj files.\n\n* Adds support for a handful of new command line arguments that we now use in the build.\n\n* Always attempts to match to a project name, to get the proper project dependency.\n\n* Update to support .exe and .dll in the generation.\n\n* Remove warnings and some dead code\n\n* Update the resulting csproj files based on running:\n\nmake update-csproj\nmake package-inputs\nmono genproj.exe Change Url for raw runtimes Fix man page mkbundle commands for cross compilation. (#2970)\n\n* Start of packager for mkbundle\r\n\r\n* [mkbundle] Add fingerprint and directory at end of package\r\n\r\n* [mkbundle] Update embedding file format, add support for --options, support for --runtime, chmod +x\r\n\r\n* [driver] Add a way to parse arbitrary command line options\r\n\r\n* [mkbundle] Align the assemblies on a page boundary, do not release directory buffer\r\n\r\n* Work-around odd compiler error by using memcpy\r\n\r\n* Update makefile\r\n\r\n* Fix the windows build\r\n\r\n* [Windows] Export the new mono_parse_options_from API\r\n\r\n* Implement the various cross-compiler target fetching commands\r\n\r\n* Clean Bring from CoreFX the f813aa2e9a5d927d121d6bdca467e10e9a6e0c9b fix for Asin and Acos DateTime, DateTimeOffset, bring Unix time APIs from CoreCLR Implement NumberBufferToDecimal in Mono, and make Decimal ctor build ComponentModel, make it build in the MOBILE profile Disable IL code generation until we figure out 25671 Only initialize Etw on Windows Remove code that depends on code that has not been open sourced.\n\nUse the MONO define for this Disable use of CAS when compiling with DISABLE_CAS_USE Fix the conditional, we disable Emit code on FULL_AOT Adjust to disable IL generation under FULL_AOT_RUNTIME Add support to build build with Mono.\n\nThis patch does the following things:\n\n* Adds support to build without Code Access Security, by using the new\n  define DISABLE_CAS_USE.  The reason is that this is both slow, and\n  Mono does not actually offer a Code Access Secured environment.  So\n  avoid paying the price.\n\n* Removes some warnings from the build for unused variables.\n\n* Allows the code to be bootstrapped with a 2.0 compiler (which Mono\n  does during the bootstrap phase currently). Microsoft relicensed this fork of the Ajax library under the MIT license Microsoft relicensed this fork of the DLR under the MIT license Compiler-less mkbundle support in Mono.\n\nThis is the support that makes it so that mkbundle can create self-contained executables without requiring a native toolchain to be present. Also is the foundation to allow cross-compilation of self-contained executables.\r\n\r\nThis works by concatenating the runtime with the various dependencies and configuration files, attaching a directory at the end of the file and a signature to flag this as a runtime that has embedded resources in the executable file itself.\r\n\r\nThis works by modifying the runtime startup to check for a special signature at the end of the main executable, if it is not present, execution resumes as usual. Otherwise a directory is read from the end of the file which contains both the kind of file (assembly, configuration file, and so on), as well as pointer to the contents in the file. Then the regular Mono APIs to load resources are used to load these.This is the support that makes it so that mkbundle can create self-contained executables without requiring a native toolchain to be present. Also is the foundation to allow cross-compilation of self-contained executables.\r\n\r\nThis works by concatenating the runtime with the various dependencies and configuration files, attaching a directory at the end of the file and a signature to flag this as a runtime that has embedded resources in the executable file itself.\r\n\r\nThis works by modifying the runtime startup to check for a special signature at the end of the main executable, if it is not present, execution resumes as usual. Otherwise a directory is read from the end of the file which contains both the kind of file (assembly, configuration file, and so on), as well as pointer to the contents in the file. Then the regular Mono APIs to load resources are used to load these. Merge pull request #2854 from alexrp/lock-free-queue-docs\n\n[utils/lfq] Clarify and document the lock-free queue API. Merge pull request #1 from xamarin/hannakim123-patch-1\n\nUpdate for CLA Update LICENSE including GPL Move all licenses to a single LICENSE file No more LGPL requirements Added PATENTS.TXT file and link to it Update LICENSE First set of licensing changes [getline] Fix condition where Console.WriteLi<TAB><ENTER> completed to Console.WriteLinene [repl] Further fine tuning;   Show newlines as actual newlines in strings, plus fix quoting of chars < 32 [repl] Do not escape space when pretty printing strings Bring new IKVM [Mainsoft] Remove deprecated code: the Mainsoft code has not been maintained in years Add link to the updated location for the utf8 test file Remove old, unused code Try different paths Explain the failure The paths point to the Index file, not the actual reference file Instead bouncing in the dark like a blind man, use the Sqlite database that contains the paths for each type Add another Midi method Add MidiEndpoint.IsNetworkSession and MidiObject.GetDictionaryProperties Do not use exceptions to communicate underlying errors Allow for MidiPackets to be provided to MidiSend in a meaningful way Add support for Transient attribute on properties, allows the generator to skip generating the backing field Fix the MonoMac build Make MainQueue work on iOS5/Lion/Simulator.   dispatch_get_main_queue is now a macro on Lion/iOS5 Simulator, just like it is on device Add Foundation-based CoreMidi APIs Add support for [ThreadSafe] attribute being applied to properties Add debugging helpers StringSize can take a null NSDictionary Clear event handlers on Dispose Fix warnings Make constructor internal, rename to match the new class Raise the other events Raise MidiClient events Use MonoMac namespace for shared code Modulo MIDISendSysex, MidiServices is done Add MidiDevice, make it build Actually test the build with MonoMac Fix to support multiple namespaces Add support to the generator to protect API calls from being called from threads that are not the main one Add beginning of MidiServices Expose the underlying error code when throwing exceptions and only use the initialized guard to prevent the slow startup lookups, not to enforce its use Provide NSUrl bindings where previously we only had CFUrl Add support for encoding UIOffsets into NSValues Add AVAudioRecorder strongly typed factory method instead of that NSDictionary nonsense Make AVAudioPlayer.Settings strongly typed instead of that NSDictionary nonsense Add strongly worded message Add a strongly worded error Fix memory leak on CGDataProvider.FromFile: we already own the handle, so we should explicitly state so, or we end up keeping a reference to it Do not prefix with MonoTouch the call, to make this work with MonoMac Add CATextLayer.AttributedString it adds support for setting the text of the layer as an NSAttributedString Fix return type Bind loadedTimeRanges and seekableTimeRanges Allow provider to be null Fix the generated code Against good taste, several 3rd-party broken APIs depend on NSMutableArray Fix all the cases in NSDistributedNotificationCenter that allowed nulls, and change the broken 'string anObject' to 'NSObject anObject' Allow nulls These APIs allow a null to be passed Add NSFileWrapper Rename Add Mode support to AudioSession (CustomerCodeName='Jack') Add a couple of new overrides to AudioSessions NSAlignmentOptions Add setter Add autoUpdatingCurrentLocale Enable quick summaries for types Add new APIs to NSLocale Add helper NSLocale file to improve the NSLocale API Use FormatType when rendering the parameter type, or we could end up with something like 'Boolean' which conflicts with OpenGL's Boolean type Make it more obvious that this is a special key Make it so users do not accidentally create empty NSError objects as those can crash applications when returned to Objective-C for processing.\n\nObjective-C code expects NSError objects to be properly initialized when returned.\nIn too many cases users return NSError objects that were created with the default\nconstructor which really should not take place.\n\nWe are making this Obsolete as we should remove this in future versions.   There is\nonly one mild case where you can use this object and it is when passing to Objective-C\nmethods that will initialize and poke at the internals of an NSError themselves, but\nthese are rare. Merge branch 'ios5'\n\nConflicts:\n\tsrc/CoreFoundation/CFProxySupport.cs\n\tsrc/CoreGraphics/CGPDFDictionary.cs\n\tsrc/avfoundation.cs\n\ttools/docfixer/document-generated-code.cs Make the CGDataProvider that takes a byte [] overload safe.\n\nCurrently we merely pass a pointer to this object, but Mono could\nhave released the buffer and we could have been reading invalid memory. Add NeedsCpp to LinkWithAttribute Add strongly typed version of GetAutoAdjustmentFilters Create strongly typed CIFilter return values from GetAutoAdjustmentFilters instead of plain CIFilter classes.   This was required because our new strongly typed classes do not exist in Objective-C directly, so we have to manually instantiate those from the CIFilter.Name Add strongly typed CIFilter subclasses Added missing iOS5 APIs, and Since(5,0) attributes (since we got this for free from MonoMac) Fix another warning: unused variable Fix build warning on NSDictionary, the New attributes were on NSDictionary, not on NSMutableDictionary Add NSUrlConnectionDownloadDelegate as this is needed for NewsstandKit, and add a few missing NSUrlConnection 5.0 methods Skip the first node in an h2, so the documentation only has the body, not the h2 itself.\n\nAvoid documenting the default constructor Catch a lot more documents to blend, we are now down to docs that Apple did not ship with iOS5 Make the generated Appearance classes be partial, to allow extending them when we have [Internal] methods that we are wrapping Even better solution: make all backing storage fields be of type object, this avoids bringing the metadata for types that we do not actually use.    This until we either make the linker smarter about generating the body of Dispose or we make it smarter to remove code from Dispose Drop another hard dependency, this one on NewsstandKit Add WeakStorageAttribute Do not generate Dispose for static classes In recent versions of iOS5, the NSData associated with a SecItem is not returned when using Attribtues, you must also specify Data On OSX, there is no FromOptions (NSDictionary) Various improvements to CoreImage APIs API usability\n\nSplit many of the static string fields into separate classes named for\ntheir purpose, to make intellisense worth using for the CIFilter class itself. Make this static Add helper class for CIFilter On iOS5 CoreImage is not on the same library as it is on OSX, fix that.\n\nThe generator special cases the name \"+CoreImage\" to mean that this\nlibrary name must be mapped to the right library on the underlying\nsystem. Remove various OSX-only CoreImage classes from the public API Fix API name in CIPlugin Better error messages Allow to construct AudioSource objects without being fully initialized, to allow users to plug their own code Allow to construct AudioSource objects without being fully initialized, to allow users to plug their own code Remove some OSX-only methods from the DocFixer report Hide types that are not present on Lion from maccore Fixes from Chris' review Audit: ArgumentSemantic.Copy missing properties on Exports Fix docfixed to work with iOS5 Complete the UIAppearance support Merge pull request #16 from jacksonh/patch-1\n\nCalling base.Dispose will call AudioFileClose which can write to the file Merge branch 'monotouch-4.2' into ios5\n\nFixed this conflict:\n\nConflicts:\n\tsrc/CoreGraphics/CGPDFDictionary.cs Comment out DumpChildren Fixes bugs reported by Craig Dunn: make factory method public + array result for FeaturesInImage Starting of UIAppearance generator support\n\n\t* Refactors the method generation\n\n\t* Generates a graph of all the types to determine which ones\n\t  need stubs generated\n\n\t* Flags all those that derive from UIAppearance\n\nRequires the contract APIs to be annotated Refactor property generation into a separate method, to support the upcoming appearance code Revert \"Refactor the GenerateProperty into a separate method\"\n\nSince the version in iOS5 is newer, will do the changes there instead\n\nThis reverts commit 6944fcb7a1776c0262fa7ff6b3b6cdfb685e2527. Lion: NSDocument updates Lion: NSCursor Lion: NSCell, NSDraggingImageComponent, NSDraggingItem Memory leak fix for RemoveFromSuperview Improve regex, attempt to save on /tmp on failure Lion: NSApplication changes and NSButtonCell Merge pull request #46 from kjpou1/master\n\nThis will fix an error when rendering a scene if the frame value gets out of sync Add search bar Update the color Move the panels into a tab Updated docs Fix makefile to follow the new module names Updated docs Added files Updated docs Updated docs Rename 'bool flag' to bool SomethingMeaningful in most parameters Improve the parser Odd, this was not committed Add NSStream Add type Small helper bits for doing API work Fix the build for iOS5 stuff (offline, until it goes public) This code is now shared Improve parser Fix API, redundant EventArgs Fix build by removing this type Use a consistent name for the uint return value Make static Merge pull request #39 from kjpou1/master\n\nScripting Bridge support Merge pull request #36 from kjpou1/master\n\nAdd support for glProgramParameteriEXT \r\nNew sample program GLSLShader\r\n\r\nDESCRIPTION:\r\n\r\nSimple GLSL shader harness program. Does nothing more than draw a line\r\non the screen. The color is controlled by the shader.vert GSL source.\r\n\r\nConcepts shown:\r\n\r\nCreate a shader program.\r\nLoad GLSL source from a file.\r\nCompile the source to attach to a Shader program.\r\nUse Program Parameters. \r\nShader Program linkage.\r\nObtaining log info for the different program objects. Add new files Update Added docs Add NSLayoutManager improve the api Do not update the SecKeyChain one Automatic documentation update Update Integrate OpenGL docs Updated docs Style updated TODO Add NSDecimal to the right place Add OpenGL-NeHe samples to the build Homogenize the style in the files Make sure we build all samples Apply the same recipe of love to CGPixelFormat Simpler samples New API to simplify creating NSOpenGLPixelFormats Expose properties in NSOpenGLContext as C# properties, instead of low-level get-set pointer APIs Tabify sources, coding style Zero termination is not needed with MonoMac Make enough changes so that this can build, but if it ever worked, it does not work now Update Update Add strongly typed binding for NSFileManager Small updates fix makefile update makefiles Fix API typo Add update Add docs to the docs Document generatd code Populate docs Update doc templates Update Update docs Maximum license range Fix the build Add extra files that were not previously included Update sample coding style Added missing file Typo fix Mono style Integrate the CoreWlan sample Update docs Update docs Add Mono style Mono style Fix style Add projects to makefile Match Mono style C# 4.0 ify the sample Add helper class update Update makefile Updated sample from Kenneth [docs] Add documentation for autogenerated events and properties Add new documentation tool Add summaries Revert again, MonoDevelop does not like 4.0 Make the style match ours Updated from shared docs run make populate Update docs Update docs Use 4.0 [docs] Add docfixer Missign string overload body Add strong typed overloads [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer Add Invert operation [fix] nsobject or subclasses of it return the same [NSArray] Add new overloads [bindings] Allow objects to be used in places where NSObjects are required [NSObject] Add a wrapper function that turns objects into NSObjects Add NSIndexSet from James Clancey oops Keep the old code around, until we release 0.5 Add awesome overload, feedback from Jackson Soptimize Add helper ctor Add helper ctor Fix API Add PDF Context creation APIs Add NSPredicate and NSMetadata support from Kenneth Pouncey Comment out deprecated APIs Give preference to NSString versions of this API Add Add strongly typed API for NSRunLoop Remove duplicated methods, they live in CGGeometry.cs API beautification Add NSError constructors, domain strings and error keys Sequentialificate the struct Add basic support for CoreVideo Add a couple more overloads ContainsKey in NSMutableDictionary seems to have always been wrong ContainsKey in NSMutableDictionary seems to have always been wrong Add NSKeyValueBindingCreation binding from Kenneth J. Pouncey Add the methods that I had removed (by accident?) Add key Add fix to the NSMutableDictionary Add some missing fields Add a couple of helper methods to NSArray Add some useful overloads Add support for private default constructors Fix name Fix Allow building this Add Array, Dictionary and Stream to the PDF support use the AppKit equivalents in NSValue on OSX Add extension methods to RectangelF class Fixes and improvements to the API as part of the audit Update API Helper methods Fix API signature Strong type this API Fix namespace Add enum Support internal fields Add a new constructor for CTFont Add TODO file Add CGImageDestination Avoid doing any work if the class is used, only if we actually call the ToDictionary method Implement most of CGImageSource, fix the previous implementation Allow nulls here Fix signature for InsertNewObjectForEntityForName, it should return an NSObject Add CGFont.CreateFromProvider API make this static CoreText updates from iOS 4.2 Expose ValueData, fix AttrGeneric type, fix MonoTouch support These are static OSX is limited to a single class;  Add/Update/Remove APIs More work on the KeyChain API Merge branch 'master' of github.com:mono/maccore Clean this API, it was just terrible to expose keys nested as keys inside custom classes;   Instead use enums and map internally to the values More work on the Security stack More work on the Security stack More progress on the Security binding API, most queries are there, missing add/update/remove and one query model Fix warnings Add more bindings to Security framework add Add more code for the certificate handling Add key-value coding support to NSObject, and fix the build Add Security framework Fix enum value, add missing fields Add StringSize overload Fix per Hutch's observation Add support for a few NSAttributedStrings overloads for Hutch Add support for ref/out parameters in delegate classes Add CoreLocation Copyrights Fix warnings Add support for adding NSObject bindings, and add Observables to NSObject Add observer enums Fix code, avoid warnings Fix warning We generate locals that are assigned to, whose sole purpose is to keep a reference alive, disable the warning Make this work with MonoTouch Small changes before the MonoTouch shared code migration to MacCore Fix update Merge more patches Can not really depend on the constructor being called to initialize the zero value Use ints where uints do not make a difference in the public API;   Throw better exceptions for AudioUnit errors (from Joe Matt); Add new keys Add docs skeleton Add a Json parser for MonoTouch.Dialog The AccessoryTapped must be an event Make the UILabel's background clear Remove Make RadioGroup.Selected a virtual property, to allow developers to catch that change Revert accidental commit to the sample project Allow setting the caption on UIViewCells as well, see https://github.com/RoyGoode/MonoTouch.Dialog/commit/87e5e60055177625b8948054401725f83af4b8bc for a sample Fixes and tuning from RoyGoode.\n\nThis does:\n\n\t* Fix the default capitalization to be Sentences (the previous default)\n\t  instead of the All change from John Dick\n\n\t* Make the EntryElement the first responder when Tapped\n\n\t* Scroll the UITableView to make the element visible Formatting Formatting Formatting Use some LINQ in the samples Update documentation Update documentation Fix crasher Make it easier to subclass RefreshTableHeaderView: expose the properties we use, and provide a virtual method to hook up the preparation Merge pull request #73 from robert-j/localization\n\nMake string literals localizable. Merge pull request #71 from spouliot/master\n\nAdd support for AccessoryTapped as requested in stack overflow question Merge pull request #68 from spouliot/master\n\nAvoid ArgumentNullException if no Value is specified Make this work on iOS 4.3 and iOS 5.0 Make the sample work when compiled against iOS5 Update Make it generic Update to MonoDevelop 2.8 Merge pull request #67 from jstateresa/master\n\nRefresh NavigationItem.Title when updating Root Merge pull request #58 from jstedfast/master\n\nFixed DateTimeElement to show Disclosure indicator Add the documentation to MonoDoc XML files Add inline docs Merge pull request #64 from Redth/master\n\nSome additions Updated sample url Obsolete Add (IEnumerable<Element>) and introduce AddAll to prepare for a covariant world Merge pull request #63 from spouliot/master\n\nFix [Styled]MultilineElement display when Value is used Merge pull request #60 from duncansmart/master\n\nImprovements to StyledMultilineElement Merge pull request #59 from robert-j/master\n\nStyledStringElement: actually consider the Lines field while preparing the cell Extended the Element class to make it simpler for users that are subclassing an Element\nto reuse the parent class GetCell method.   There are some caveats that are documented\nin the README file and the inline API documentation. Switched Jeff's contributed code to EntryElement from using GetType () to using a key defined in the class. Merge pull request #56 from jstedfast/master\n\nBring the improvements and fixes from Jeff Stedfast into MonoTouch.Dialog Store the specified Style, fixes issue #54 Do not hardcode the width when computing the size, to support device rotation Merge pull request #52 from Alxandr/master\n\nSmall update to EntyElement to make it simpler to initialize when using LINQ Merge pull request #50 from madoke/patch-1\n\nRemoved the debugging Thread.Sleep() before image download.   Oops, sorry about that. Allow for multiple calls to Dispose Allow double-Disposes Add Preserve attribute to the Login button, so it is present on device Revert \"Optimization: every instance of the object is the same, so do not track that\"\n\nThis breaks nested objects rendered by a single UI, see the reflection\nsample for Settings/TimeSettings\n\nThis reverts commit 737ecd5e4770e54327f7bff1b3f3ec4c931baa5a. Revert \"Typo fix\"\n\nThis reverts commit cd15f0acc883f5d47381ee6c577adbfc2c119447. Typo fix Add GlassButton class Fix thinko Add support to EntryElements to grab the focus Add Index sample Add new sample How come I forgot to commit this? Fix warnings, simpler implementation Fix the problme here as well Allow for background colors to be set Improved LoadMoreElement Add some useful methods to the Element base class\nMake LoadMoreElement use the standard pattern for elements, not the hack it was using\n(will be needed for the on-demand loading later) Added this one back Reorganize a little bit the files Add another utility Add support to the LRUCache and the ImageLoader to be bounded by memory consumption as well Add new MessageElement\nAdd More utility functions from TweetStation\nUpdated samples\nImproved ImageLoader to be a loader that can be configured to different cachesizes Fix Fix: allow the user to call ReloadComplete in the middle of a trigger Add Pull-to-Refresh sample Update sample Add new sample Improve the SyledStringElement, document, add sample Add local image loading Add support for basic image loading Small style changes Use default SDK version Add AutoHideSearch support update Fix the sample Fix indentation, clarify some text Update Update README.md New sample, implicit conversions on TFTensors, some small touchups Flushificate some ideations More overloads, improved API, more tests Remove some redundant code Add Flush Complete optional attribute support, started work to load Mnist datasets Update README.md Generation of high-level operations is complete, next - figure out if we want Scope or not More work on generating the OpDefs Start work on OpDef bindings Update Start of tooling to strongly type operations TFSession.Run now returns the OutputValues, update the test suite More overloads Update README.md Update README.md Update README.md TFOperation/TFOperationDesc split, TFSession.Run updates Update README.md More work Small updates first commit Remove lingering bits from removed prj2make tool [Marshal.IsComObject] Make this predicate return false instead of throwing an exception which is what the calling code expects (#5246) Improve error messages to help users diagnose problems when using custom mode (#4922)\n\n* Improve error messages to help users diagnose problems when using the custom mode\r\n\r\n* Update mkbundle.cs Update copyright years A few fixes to the man page [mkbundle] Fixes the embedding of dependency assemblies + test Add mdb2ppdb man page, remove prj2make man page [marshal] Only copy the minimum of size/length, not the full size, fixes #46288 (#4031) [runtime] Provide fallback for Linux systems that lack CPU_COUNT in sched.h, fixes #45683 (#4032) [configure] Detect endianess and use mcs for big-endian systems.\n\nRenames the flag to be more explicit on the intended purpose.  Also,\ndocument the new configuration flag.\n\nThe default will probe the right compiler to use. [marshal] Fix API documentation comment on mono_string_to_byvalwstr [eglib/mono] Aleksey caught a discrepancy between the semantics of Unix and Windows, our eglib version should always strdup (#3899) [mkbundle] Fix the argument order to put the entry point on argv[1] (#3879) Make mkbundle use SDKs instead of a single runtime for cross compilation\n\nMake mkbundle use SDKs instead of a single runtime for cross compilation [mono] Add some strong types for a few variables, document some methods (#3777) Utf8 (#3776)\n\n* UTF8 Marshaling APIs  (#3736)\r\n\r\nAdds support for the new UTF8 marshaling functionality in .NET, there\r\nis support for the new MarshalAs(UnmanagedType.LPUTF8St) as well as a\r\nhandful of convenience methods in Marshal.cs\r\n\r\nIn Mono, this is mostly a pass-through as we have historically only\r\ndone UTF8, so this merely adds the constant processing to the runtime.\r\n\r\nThis fixes a few bugs that the new test suite exhibited: when we\r\nmarshaled UTF8 strings, we assumed Chars() == Bytes() and we would end\r\nup chopping when marshaling out, and marshaling in.\r\n\r\nThere is also an additional behavioral bug that was fixed in\r\nMarshal.cs, unlike the rest of the runtime that treated Ansi as Utf8,\r\nStringToCoTaskMemAnsi behaved as ascii. This brings the API in line\r\nwith the rest of the runtime.\r\n\r\nThe equivalent CoreCLR changes were:\r\n\r\ndotnet/coreclr#4793\r\ndotnet/coreclr#6561\r\n\r\nThis has also surfaced two limitations in Mono's marshaling code,\r\nwhich is why two sets of tests are disabled: StringBuilder return\r\ntypes are not handled specially (char * needs to be turned into a new\r\nStringBuilder when present) and StringBuilders with an Out attribute\r\nshould update the StringBuilder in place, not make a new copy of it. Revert \"UTF8, with build fixed\"\n\nThis reverts commit 50d119be5d5ba52e0c935ea53907cf2b061a3cd8. Revert \"Revert \"UTF8 Marshaling APIs  (#3736)\"\"\n\nThis reverts commit 2a01bde545a47e287977637a4a08f8f965ca45dc.t push\n: UTF8, with build fixed Revert \"UTF8 Marshaling APIs  (#3736)\"\n\nThis reverts commit 4056e80006ee934ec024215cf998baf66aa8d6ae. UTF8 Marshaling APIs  (#3736)\n\nAdds support for the new UTF8 marshaling functionality in .NET, there is support for the new MarshalAs(UnmanagedType.LPUTF8St) as well as a handful of convenience methods in Marshal.cs\r\n\r\nIn Mono, this is mostly a pass-through as we have historically only done\r\nUTF8, so this merely adds the constant processing to the runtime.\r\n\r\nThis fixes a few bugs that the new test suite exhibited: when we marshaled UTF8 strings, we assumed Chars() == Bytes() and we would end up chopping when marshaling out, and marshaling in.\r\n\r\nThere is also an additional behavioral bug that was fixed in Marshal.cs, unlike the rest of the runtime that treated Ansi as Utf8, StringToCoTaskMemAnsi behaved as ascii. This brings the API in line with the rest of the runtime.\r\n\r\nThe equivalent CoreCLR changes were:\r\n\r\ndotnet/coreclr#4793\r\ndotnet/coreclr#6561\r\n\r\nThis has also surfaced two limitations in Mono's marshaling code, which is why two sets of tests are disabled: StringBuilder return types are not handled specially (char * needs to be turned into a new StringBuilder when present) and StringBuilders with an Out attribute should update the StringBuilder in place, not make a new copy of it. [mkbundle] Add diagnostics, fix crash, fix registered path to match runtime name on embedded MonoImages (#3669) [scripts] Add script to package the basic runtime to reuse by mkbundle [mini] Add some documentation comments to some IR generating macros [mkbundle] - Add support for bundling native libraries.\n\n* [mkbundle] add support for bundling native libraries\r\n\r\n* [glib] add g_mkdtemp\r\n\r\n* mono: Load the various library payloads for bundled executables\r\n\r\n* [msvc] Export mono_dl_open and mono_loader_register_module [mcs/Makefile] make the 'btest' (bootstrap test) target work again Bundle other options (#3501)\n\n* [mkbundle] add support for baking environment variables, make endian-independent\r\n\r\n* [runtime] Bundle support, implement missing stream processing Typo fix [runtime] Bundle support, implement missing stream processing (#3423) [mkbundle] add support for distributing I18N encoding files and improved the man page [linker] Bring various descriptors that were updated in iOS, but not on desktop Mono [linker] Update descriptors for mscorlib to include the new _ThreadPoolWaitCallback [mkbundle] Fix --fetch-target to not require an assembly, embed the proper assembly when --cross RUNTIME is used Remove stray comment [build] Update order.xml data [mkbundle] Improve error checking [main] replace computed value by a constant\n\nThe reason why mkbundle is not working is that for some reason\nthis constant expression is producing different code than the\n-24 that it is supposed to.\n\nWhat is odd is that the return value from the lseek system\ncall is the same, but yet, read fails with an end-of-file with\nthis value, and otherwise it passes.\n\nWith this call:\n\n     lseek (fd, -(16+sizeof(uint64_t)), SEEK_END)\n\nstrace displays:\n\nlseek(0x3, 0xFFFFFFE8, 0x2)\t\t = 19375512 0\n\nWith this call:\n\n     lseek (fd, -24, SEEK_END)\n\nstrace displays:\n\nlseek(0x3, 0xFFFFFFFFFFFFFFE8, 0x2)\t = 19375512 0\n\nNow, while both results from lseek are the same, a subsequent read\nwith 24 bytes to read returns zero on the former case, and 24 on\nthe latter case. WIP [library.make] Make resource usage declarative in the class libraries (#3159)\n\n[library.make] Make resource usage declarative in the class libraries More updates [genproj] Update project files [genproj] More updates to the project files, getting closer, down to 5 errors [genproj] Another library works, System.Json.Microsoft [genproj] support for using prebuilt resources [genproj] Getting closer to a full build\n* Add TODO list\n* Use -useSourcePath when building resources, so we do not need to add the explicit extra path\n* More updates, now battling resource generation across the board\n* Use newlines in the Unix commands to avoid generating things like cs-parser.cs^M [genproj] Update build files [mconfig] Remove dependency on build time settings [genproj] Update from Ankit's project [genproj] Run update-solution-files to track master Add another build step [genproj] Do not use \\r on the Unix parts of the build hook, add RabbitMQ hooks [genproj] Handle resources properly, add helper scripts to bootstrap [genproj] Properly include EmbeddedResources for .resx->resources Add missing project file [msbuild projects] Use newlines without a carriage return for Unix targets to appease MS msbuild [genproj] Fix the Makefile THISDIR location, so MSBuild can work with nunit.core Do not sign the assembly [genproj] Now we can build all executables with msbuild as well Update .gitignore, remove stale file [System.Windows.Forms] Fix incorrect compare of IntPtr to null [genproj] Fix THISDIR location in a few projects, so genproj can generate MSBuild files [System.Web] Remove duplicate file listings which break msbuild and update csprojs [genproj] Sync with latest set of changes to Makefiles [genproj] Use an explicit IntermediateOutputPath to prevent rebuilds on cyclic assemblies Remove more deprecated stuff Remove dead code, update solution files genproj: Improve handling of executables and projects with build dependencies Graduate the csproj/solution to completed - you can now build with the toplevel net_4_x.sln Remove [assembly:TargetFramework] as no other assembly uses it, and causes our msbuild to fail [WIP] Important change: more comprehensive Makefile to support csproj-local on System.Design (#3006)\n\n* Important change: more comprehensive Makefile to support csproj-local on System.Design\r\n\r\n* Change the dependency\r\n\r\n* update [genproj] Updates to project generator and csproj files.\n\n* Adds support for a handful of new command line arguments that we now use in the build.\n\n* Always attempts to match to a project name, to get the proper project dependency.\n\n* Update to support .exe and .dll in the generation.\n\n* Remove warnings and some dead code\n\n* Update the resulting csproj files based on running:\n\nmake update-csproj\nmake package-inputs\nmono genproj.exe Change Url for raw runtimes Fix man page mkbundle commands for cross compilation. (#2970)\n\n* Start of packager for mkbundle\r\n\r\n* [mkbundle] Add fingerprint and directory at end of package\r\n\r\n* [mkbundle] Update embedding file format, add support for --options, support for --runtime, chmod +x\r\n\r\n* [driver] Add a way to parse arbitrary command line options\r\n\r\n* [mkbundle] Align the assemblies on a page boundary, do not release directory buffer\r\n\r\n* Work-around odd compiler error by using memcpy\r\n\r\n* Update makefile\r\n\r\n* Fix the windows build\r\n\r\n* [Windows] Export the new mono_parse_options_from API\r\n\r\n* Implement the various cross-compiler target fetching commands\r\n\r\n* Clean Bring from CoreFX the f813aa2e9a5d927d121d6bdca467e10e9a6e0c9b fix for Asin and Acos DateTime, DateTimeOffset, bring Unix time APIs from CoreCLR Implement NumberBufferToDecimal in Mono, and make Decimal ctor build ComponentModel, make it build in the MOBILE profile Disable IL code generation until we figure out 25671 Only initialize Etw on Windows Remove code that depends on code that has not been open sourced.\n\nUse the MONO define for this Disable use of CAS when compiling with DISABLE_CAS_USE Fix the conditional, we disable Emit code on FULL_AOT Adjust to disable IL generation under FULL_AOT_RUNTIME Add support to build build with Mono.\n\nThis patch does the following things:\n\n* Adds support to build without Code Access Security, by using the new\n  define DISABLE_CAS_USE.  The reason is that this is both slow, and\n  Mono does not actually offer a Code Access Secured environment.  So\n  avoid paying the price.\n\n* Removes some warnings from the build for unused variables.\n\n* Allows the code to be bootstrapped with a 2.0 compiler (which Mono\n  does during the bootstrap phase currently). Microsoft relicensed this fork of the Ajax library under the MIT license Microsoft relicensed this fork of the DLR under the MIT license Compiler-less mkbundle support in Mono.\n\nThis is the support that makes it so that mkbundle can create self-contained executables without requiring a native toolchain to be present. Also is the foundation to allow cross-compilation of self-contained executables.\r\n\r\nThis works by concatenating the runtime with the various dependencies and configuration files, attaching a directory at the end of the file and a signature to flag this as a runtime that has embedded resources in the executable file itself.\r\n\r\nThis works by modifying the runtime startup to check for a special signature at the end of the main executable, if it is not present, execution resumes as usual. Otherwise a directory is read from the end of the file which contains both the kind of file (assembly, configuration file, and so on), as well as pointer to the contents in the file. Then the regular Mono APIs to load resources are used to load these.This is the support that makes it so that mkbundle can create self-contained executables without requiring a native toolchain to be present. Also is the foundation to allow cross-compilation of self-contained executables.\r\n\r\nThis works by concatenating the runtime with the various dependencies and configuration files, attaching a directory at the end of the file and a signature to flag this as a runtime that has embedded resources in the executable file itself.\r\n\r\nThis works by modifying the runtime startup to check for a special signature at the end of the main executable, if it is not present, execution resumes as usual. Otherwise a directory is read from the end of the file which contains both the kind of file (assembly, configuration file, and so on), as well as pointer to the contents in the file. Then the regular Mono APIs to load resources are used to load these. Merge pull request #2854 from alexrp/lock-free-queue-docs\n\n[utils/lfq] Clarify and document the lock-free queue API. Merge pull request #1 from xamarin/hannakim123-patch-1\n\nUpdate for CLA Update LICENSE including GPL Move all licenses to a single LICENSE file No more LGPL requirements Added PATENTS.TXT file and link to it Update LICENSE First set of licensing changes [getline] Fix condition where Console.WriteLi<TAB><ENTER> completed to Console.WriteLinene [repl] Further fine tuning;   Show newlines as actual newlines in strings, plus fix quoting of chars < 32 [repl] Do not escape space when pretty printing strings Bring new IKVM [Mainsoft] Remove deprecated code: the Mainsoft code has not been maintained in years Improve the Uri parsing speed\n\nThis affects MonoTouch startup as our dictionaries are a little bit\nslow to be created now that we use Dictionary<> hashes for switch\nstatements.\n\nSome timings:\n\nUsing a simple block of if's is twice as slow as the compiler generated\nswitch statement.   But using this tuned code is faster than the\ncompiler generated code, with a million loops on x86-64:\n\nWith \"http\": .10 vs .51 (first check)\nwith \"https\": .16 vs .51 (second check)\nwith \"foo\": .22 vs .31 (never found)\nwith \"mailto\": .12 vs .51  (last check) Reuse the same delegate for checking if the runtime is shutting down.\n\nInstead of creating a new delegate every time that WaitAny is invoked,\nreuse the same delegate.   We also keep a permanent reference to prevent\nthis delegate being collected.\n\nThsi should fix 592981 Revert Make the thread-id field be of the proper size on 64 bit machines.\n\nThis error was found by Gonzalo when he was looking at another problem\nwhen thread IDs overflowed ints.\n\nCurrently we use gpointers in the io-layer for the threadid, but we were\nonly exposing the value as an int32.   The good news is that the code is\nnot really used right now, but could cause problems in the future as we\nextend Process. Do not install sample header, add to EXTRA_DIST [Embedded] Add new fallback API to allow hooking up to the P/Invoke lookup system\n\nThis patch allows a developer to register a fallback for P/Invoke when\nembedding Mono.   Typically this is done when you statically link all of your\nlibraries in some embedded systems and you need to dynamically resolve symbol\nnames.\n\nThere is a *sample* API included (but not compiled into Mono itself) called\nmono-embed.c that shows a layman use of the API.   A full implementation would\nmandate sorted tables, and would use a bsearch or a hashtable instead of having\nlinear searches. [Fix] Correct fix for the g_shell_parse_argv bug\n\nSimplifies the code a little bit by eliminating the in_quote variable,\nbut also fixes the rules to follow the requirements from the\n\"Shell Command Language\" specification on the Unix03 site:\n\nhttp://opengroup.org/onlinepubs/007908775/xcu/chap2.html#tag_001_002\n\nIn particular, the interpretation of the backslash inside double quotes\nis limited to a handful of characters.   Notice that this differs from\nthe glib implementation which is not correct either. [Fix] Allow escape characters inside quoted text, and do not let nested quote reset the quoting state\n\nThis should fix #637680 Add profile docs Add the Sgen license text to the new sgen files Updated copyrights to SGen files that were missing it Copyright fix: the owner is Chris, not Novell Copyright: the actual owner is Chris Bacon, not Novell, fix this Update README Merge branch 'master' of github.com:mono/mono Do not mandate that pkg-config is installed, it is only used for the comparative test suite 2010-07-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* HttpApplication.cs, HttpRuntime.cs, HttpApplicationFactory.cs:\n\tPrepare for the runtime change that will terminate threadpool\n\nsvn path=/trunk/mcs/; revision=160700 2010-07-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* Array.cs: Fixes a couple of other cases where we were missing\n\tthe handling for null values, fixes a broken case of null\n\thandling. \n\n\nsvn path=/trunk/mcs/; revision=160699 2010-07-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* Array.cs: fast path for the case where the pivot is null;\n\tFixes the crash on the build.\n\nsvn path=/trunk/mcs/; revision=160636 2010-07-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* parser.cs (ParseEscape): Now parses with some context, whether\n\twe are parsing inside a character range which can not contain\n\tback-references or when we are parsing on a string context which\n\tcan contain back references.\n\n\tThis fixes bug #577346 which exposed a bug parsing this:\n\n\tnew Regex(\"[\\\\177-\\\\377]\")\n\n\n\nsvn path=/trunk/mcs/; revision=160626 2010-07-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gmisc-win32.c (g_getenv): Distinguish between variable not\n\tfound and an empty variable.  \n\n\tThis should fix 566152\n\nsvn path=/trunk/mono/; revision=160589 2010-07-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* Array.cs: Fix for bug #622101, this reverts portions of the\n\tbroken patch that was introduced as part of the fix for #351638\n\twhich was mostly a set of optimizations, but some were just\n\twrong. \n\n\n\nsvn path=/trunk/mcs/; revision=160527 Flush\n\nsvn path=/trunk/mcs/; revision=160487 Flush\n\nsvn path=/trunk/mcs/; revision=160486 Small bug fix\n\nsvn path=/trunk/mcs/; revision=160467 Move\n\nsvn path=/trunk/mcs/; revision=160464 Update man\n\nsvn path=/trunk/mono/; revision=160463 2010-07-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* mini.c: Allow \"casts\" to be passed on MONO_DEBUG as well.\n\nsvn path=/trunk/mono/; revision=160462 Add Punycode encoder, to be used one day by Uri.cs\n\nsvn path=/trunk/mcs/; revision=160452 2010-07-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* reflection.c (load_cattr_value): Add support for encoding\n\tDateTime constants into the blob.    Turns out that this is\n\trequired by .NET, it was only documented post 1.0.\n\n\t* icall.c (ves_icall_type_GetTypeCodeInternal): Guard test for\n\tSystem.Decimal and System.DateTime inside a mono_is_corlib_image\n\tcall.   A sample program showed that we could return the wrong\n\tTypeCode just by creating a class with those names. \n\n\t* class.c (mono_is_corlib_image): Exposed this to other metadata/\n\tcode.\n\n\n\nsvn path=/trunk/mono/; revision=160402 2010-07-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* FieldBuilderTest.cs: Add new test that exercises encoding\n\tdatetime constants with SetConstant.\n\nsvn path=/trunk/mcs/; revision=160401 An extra test, to give me peace of mind\n\nsvn path=/trunk/mcs/; revision=160392 2010-07-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* DateTime.cs: This is the Retina Display of DateTime structs.\n\tUnlike our previous Chubby DateTime that took 16 bytes of memory,\n\tthis slim version of DateTime only uses 8 bytes.\n\n\tThis fixes a couple of bugs 592221 and 622127.   Additionally, it\n\tturns out that the original Microsoft documentation did not spell\n\tthis out, but newer versions of the docs state that SetConstant on\n\ta FieldBuilder should be capable of serializing DateTimes (which\n\tis where this issue came from).\n\n\tThis is necessary to fix two crashers exposed by the CLR test\n\tsuite. \n\nsvn path=/trunk/mcs/; revision=160391 2010-07-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* tests.make: Do not run the tests under the verifier until the\n\tverifier bug is fixed so at least we can see what is going on in\n\tour buildbots.\n\nsvn path=/trunk/mcs/; revision=160388 2010-07-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* mini.c: LLVM is disabled by default on LLVM builds.  You can use\n\tthe MONO_ENV_OPTIONS to set the --llvm flag.\n\nsvn path=/trunk/mono/; revision=160332 Update\n\nsvn path=/trunk/mcs/; revision=160318 2010-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* driver.c (mini_usage): Change the name of the --sgen flag to be\n\t--gc=sgen and also support --gc=boehm.   These flags can also be\n\tset on MONO_ENV_OPTIONS to propagate this to children processes. \n\n\t* main.c: Remove the MONO_VM_OPTIONS environment variable that\n\tonly supported \"sgen\" and \"llvm\" config options and instead parse\n\tthe MONO_ENV_OPTIONS as options that are parsed by the command\n\tline parser.   Any command line option that Mono supports can be\n\tpassed in this environment variable.\n\n\n\nsvn path=/trunk/mono/; revision=160160 minimal docs for MONO_LLVM\n\nsvn path=/trunk/mono/; revision=160146 Clarify\n\nsvn path=/trunk/mono/; revision=160140 Update\n\nsvn path=/trunk/mono/; revision=159960 2010-07-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* driver.c (mono_main), main.c: Add support for MONO_VM_CONFIG\n\tthat allows the user to force the VM to use llvm or sgen.\n\nsvn path=/trunk/mono/; revision=159927 Document MONO_GC_DEBUG\n\nsvn path=/trunk/mono/; revision=159910 Change the path\n\nsvn path=/trunk/mono/; revision=159527 Fix windows build\n\nsvn path=/trunk/mono/; revision=159526 Remove\n\nsvn path=/trunk/mono/; revision=159525 Fix after moving the file\n\nsvn path=/trunk/mono/; revision=159517 2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n       * configure.in: By default, we will now also buils an SGen-aware\n       VM by default.   This can be turned off by using the\n       --with-sgen=no command line option.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n       * Makefile.am: Add support for building a sgen-aware versions of\n       the libraries: libmonoruntimesgen.la\nlibmonoruntimesgen-static.la,\n       they share all the components of the default, but use a differen\n       set of CFLAGS to enable SGEN instead.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n       * Makefile.am: Build the mono-sgen binary a Mono VM with the Sgen\n       GC enabled as well as libmono-sgen-2.0 and libomonosgen-static\n\n       * metadata: Move the mono-hash code here, as mono-hash is GC\n        aware, but the mono/utils directory is not\n\n\n\nsvn path=/trunk/mono/; revision=159514 Delete\n\nsvn path=/trunk/mono/; revision=159475 Revert my changes, they break the build\n\nsvn path=/trunk/mono/; revision=159474 Add this dep back\n\nsvn path=/trunk/mono/; revision=159473 Update man page\n\nsvn path=/trunk/mono/; revision=159469 2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: By default, we will now also buils an SGen-aware\n\tVM by default.   This can be turned off by using the\n\t--with-sgen=no command line option.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile.am: Add support for building a sgen-aware versions of\n\tthe libraries: libmonoruntimesgen.la libmonoruntimesgen-static.la,\n\tthey share all the components of the default, but use a differen\n\tset of CFLAGS to enable SGEN instead.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile.am: Build the mono-sgen binary a Mono VM with the Sgen\n\tGC enabled as well as libmono-sgen-2.0 and libomonosgen-static\n\n\n\nsvn path=/trunk/mono/; revision=159468 2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: Remove redundant setting of variables in non-Boehm\n\tcases.\n\nsvn path=/trunk/mono/; revision=159463 2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: First pass at supporting the compilation of both\n\nsvn path=/trunk/mono/; revision=159462 2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: First pass at supporting the compilation of both\n\tthe Boehm-powered Mono VM and the Sgen-powered one.\n\n\tThe Boehm configuration flags are no longer part of the config.h\n\tthat we generate, but instead they are part of the CFLAGS\n\tvariables that are used for the following components:\n\n\t\t* io-layer/ because it uses the pthread APIs that are\n\t\twrapped by using utils/gc_wrapper.h\n\n\t\t* metatada/ because we have plenty of GC-specific code\n\n\t\t* mini/ the VM itself\n\n\tThe patch currently only changes the way that Boehm is compiled,\n\tno changes for Sgen have been done yet.\n\n\tWe now pass Boehm CFLAG settings as \"BOEHM_DEFINES\" which need to\n\tbe added to the three Makefiles above.\n\n\tWhen building the bundled and modified libgc, we also need to pass\n\tMONO_DEBUGGER_SUPPORTED as it triggers some special features in\n\tthe libgc.\n\n\tSimplify the build also by removing the AM_CONDITIONAL debugger\n\tsupported, we now merely check this on the source file and wrap\n\tthe entire debug-debugger.c in an ifdef.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile.am: Put the BOEHM defines in the CFLAGS definition. \n\n\t* domain-internals.h (MonoJitInfo): this structure used to have\n\tdifferent sizes depending on the GC that was configured (Boehm vs\n\tSGen).   I have removed this difference for the sake of avoiding\n\tthe complexity of dealing with the mono/arch directory requiring\n\tGC-specific changes to their Makefiles.\n\n2010-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* debug-debugger.c: Wrap the entire file with an #ifdef\n\tMONO_DEBUGGER_SUPPORTED to simplify the build.\n\n\t* Makefile.am: Fix the opcodes build issue by including the\n\tsource, not by including the .lo file directly\n\n\tAlways bring the MDB sources into the build, to drop the\n\tdependency on the AM_CONDITIONAL from configure.in as the hard\n\tdebugger supports Boehm, but not Sgen, this simplifies the build. \n\n\t* Renamed the *.s files into *.S\n\t\n\n\nsvn path=/trunk/mono/; revision=159461 Update\n\nsvn path=/trunk/mono/; revision=159367 2010-06-18  Vincent Povirk <madewokherd@gmail.com>  \n\n        * TimeZoneInfo.cs: Applied patch from Vincent Povirk that adds\n        support for reading time zone information on windows.\n\n        This patch makes TimeZoneInfo.GetSystemTimeZones and\n        FindSystemTimeZoneById work based on the registry on non-Unix\n        platforms, if the appropriate registry key exists. Mono currently\n        reads from /usr/share/zoneinfo, which doesn't exist on Windows.\n\n        This should fix bug 606084.\n\n        It won't fix the Local property on Windows. I think that requires\n        a Windows API call to get the id of the local timezone.\n\n        This was modified from the previous version to not check the\n        registry on Unix platforms. (Sorry it took me so long to do\n        this. I have very little time to spend on Mono-related work.)\n\n\nsvn path=/trunk/mcs/; revision=159163 2010-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* DataConverter.cs: On bracketed cases, save the position as well,\n\tlike we do in the repeat case without brackets.  Fixes #595929\n\nsvn path=/trunk/mcs/; revision=159075 2010-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* Random.cs: Do not call Math.Abs blindly when we get an int\n\tvalue, as Math.Abs (Int32.MinValue) throws an overflow exception,\n\tand our constructor uses Environment.TickCount which means that\n\teventually we will get a crash. \n\n\tFixes #605797\n\nsvn path=/trunk/mcs/; revision=159042 Fix for 607585\n\nsvn path=/trunk/mcs/; revision=159041 2010-05-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* console-unix.c (terminal_get_dimensions): Fix my previous\n\tbotched commit and return the actual value obtained from the ioctl.\n\nsvn path=/trunk/mono/; revision=158227 Update docs\n\nsvn path=/trunk/mono/; revision=157966 2010-05-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* genmdesc.pl (build_spec): Add support for nacl: keyword also to\n\tthe Perl program\n\nsvn path=/trunk/mono/; revision=157882 2010-05-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* genmdesc.c: Added support for nacl: key on the machine\n\tdescription files to support the extra space required by Google\n\tNative Client.\n\nsvn path=/trunk/mono/; revision=157881 2010-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: drop again the pkg.m4 dependency and for eglib\n\tcases (and not-Windows) make it entirely optional.\n\nsvn path=/trunk/mono/; revision=157656 Big documentation update\n\nsvn path=/trunk/mono/; revision=157146 Big documentation update\n\nsvn path=/trunk/mono/; revision=157145 Remove methods that are private from the documentation\n\nsvn path=/trunk/mono/; revision=157144 2010-05-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gunicode.c: Pull the Windows.h header when G_OS_WIN32 is\n\tdefined. \n\nsvn path=/trunk/mono/; revision=157138 Add vasprintf to the Cygwin build\n\nsvn path=/trunk/mono/; revision=157137 Update documentation to latest changes, need to document a lot of missing stuff\n\nsvn path=/trunk/mono/; revision=157134 2010-05-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* console-unix.c: Signal handlers now save and restore errno.   We\n\thave never had a bug report about this, ioctl does change errno. \n\n\tHide the unused method.   \n\n\tRemove internal declarations from public headers.\n\n\tDocument what the signal handler is doing\n\nsvn path=/trunk/mono/; revision=157132 2010-05-11  Zoltan Varga  <vargaz@gmail.com>\n\n\t* class.c (mono_class_alloc): New helper function to centralize memory allocation\n\tfor classes, allocates either from the image mempool or from the heap.\n\n\t* class.c: Use mono_class_alloc to allocate memory owned by classes.\n\n\t* metadata.c (free_generic_class_dependents): Free more items belonging to\n\tgeneric classes.\n\nsvn path=/trunk/mono/; revision=157130 2010-05-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* gfile-win32.c: Port this to use the Win32 APIs to get this\n\tbuilding with Cygwin.\n\nsvn path=/trunk/mono/; revision=157044 2010-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* class.cs (TypeContainer.DefineBaseTypes)\n\t(TypeContainer.CheckRecursiveDefinition): check for the iface not\n\tbeing null, as we could have failed resolution and crashed;\n\tFixes #442144\n\n\nsvn path=/trunk/mcs/; revision=156759 2010-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* cs-parser.jay: Productions to catch common mistakes when other\n\tpunctuation operators are used instead of comma.   Fixes 571702\t\n\n\nsvn path=/trunk/mcs/; revision=156757 Document --nollvm\n\nsvn path=/trunk/mono/; revision=156756 Also for OpenBSD\n\nsvn path=/trunk/mono/; revision=156729 Add special case for FreeBSD, fixes 553640\n\nsvn path=/trunk/mono/; revision=156702 2010-05-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Apply patch from Ted Unangst to fix bug 574049\n\nsvn path=/trunk/mcs/; revision=156700 Add csharp solution and project\n\nsvn path=/trunk/mcs/; revision=156271 Make changes so it is easy to build on Windows\n\nsvn path=/trunk/mcs/; revision=156269 Add solution\n\nsvn path=/trunk/mcs/; revision=156268 Disable per Zoltan's suggestion\n\nsvn path=/trunk/mcs/; revision=156259 2010-04-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs: Improvements to run better on Windows. \n\nsvn path=/trunk/mcs/; revision=156257 2010-04-27  Miguel de Icaza  <miguel@novell.com>\n\n        * driver.c, mini.c: Since linking with LLVM makes the default Mono\n        dirty an extra 70kb pages on startup we are now going to choose a\n        different strategy: ship mono and mono-llvm binaries, with the\n        second being the one that links with LLVM and defaults to LLVM\n        being enabled.\n\n\nsvn path=/trunk/mono/; revision=156193 Fix the build\n\nsvn path=/trunk/mcs/; revision=156129 2010-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono.1: Sort environment variables, update a couple of docs.\n\nsvn path=/trunk/mono/; revision=156038 Update man page\n\nsvn path=/trunk/mono/; revision=156037 2010-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* mini.c: Use MONO_USE_LLVM as an environment flag to turn the use\n\tof LLVM on by default.   Used for buildbots and other setups.\n\nsvn path=/trunk/mono/; revision=156035 Fifth patch from: Damien Diederen <dd@crosstwine.com>\n\nFor bug: https://bugzilla.novell.com/show_bug.cgi?id=480152\n\n\t* Normalization.cs: Really apply canonical reordering \"recursively.\"\n\n\tBefore this, a sequence of code points with the combining\n\tclasses (22, 33, 11) would be reordered to (22, 11, 33) instead of\n\tthe correct (11, 22, 33).  This is because the 'i--' would be\n\tdirectly cancelled by the 'i++' in the for loop.\n\n\nsvn path=/trunk/mcs/; revision=155966 Fourth patch from: Damien Diederen <dd@crosstwine.com>\n\nFor bug: https://bugzilla.novell.com/show_bug.cgi?id=480152\n\n    \t* Normalization.cs: The correct \"checkType\" argument to\n\tDecompose() is NKD or NKFD when normalizing to NKC resp. NKFC.\n\n\t* StringTest.cs: More NFC test cases.\n\nsvn path=/trunk/mcs/; revision=155965 Third patch from: Damien Diederen <dd@crosstwine.com>\n\nFor bug: https://bugzilla.novell.com/show_bug.cgi?id=480152\n\n\t* Normalization.cs: Implement algorithmic Hangul composition.\n\tCalling Normalize(NormalizationForm.FormC) on Korean characters\n\tnow works properly (bnc#480152).\n\n\t* StringTest.cs: Add test cases for Hangul composition.\n\n\nsvn path=/trunk/mcs/; revision=155964 Second patch from: Damien Diederen <dd@crosstwine.com>\n\nFor bug: https://bugzilla.novell.com/show_bug.cgi?id=480152\n\n\t* Normalization.cs: Follow the spec when checking composition pairs.\n\n\tFigure 7 in section 1.3 of http://unicode.org/reports/tr15/ shows\n\thow when doing composition, one has to examine the successive\n\t(starter, candidate) pairs, and combine if a matching canonical\n\tdecomposition exists.\n\n\tThe original algorithm was, instead, iterating on canonical\n\tdecompositions, and, for each one, trying to match a sequence\n\tof (starter, non-starter, ...).\t This, however, does not produce\n\tthe same results as it is violating some implicit ordering\n\tconstraints in the Unicode tables.\n\n\tE.g., when composing the following sequence of codepoints, the\n\toriginal algorithm was picking:\n\n\t  03B7 0313 0300 0345\n\t  ^^^^\t    ^^^^\n\t  1F74 0313\t 0345\n\t  ^^^^\t         ^^^^\n\t  1FC2 0313\n\n\tand would stop at 1FC2 0313 as there is no decomposition matching\n\tit.  The new algorithm, which follows the guidance of the pretty\n\tfigure 7, ends up doing:\n\n\t  03B7 0313 0300 0345\n\t  ^^^^ ^^^^\n\t  1F20\t    0300 0345\n\t  ^^^^\t    ^^^^\n\t  1F22\t         0345\n\t  ^^^^\t         ^^^^\n\t  1F92\n\n\tresulting in the correct 1F92.\n\nsvn path=/trunk/mcs/; revision=155963 First patch from: Damien Diederen <dd@crosstwine.com>\n\nFor bug: https://bugzilla.novell.com/show_bug.cgi?id=480152\n\n\t* Normalization.cs: Recursively apply the Unicode decomposition mapping.\n\n\tAccording to http://www.unicode.org/reports/tr15/tr15-31.html,\n\tsection 1.3:\n\n\t\"To transform a Unicode string into a given Unicode Normalization\n\tForm, the first step is to fully decompose the string. [...] Full\n\tdecomposition involves recursive application of the\n\tDecomposition_Mapping values, because in some cases a complex\n\tcomposite character may have a Decomposition_Mapping into a\n\tsequence of characters, one of which may also have its own\n\tnon-trivial Decomposition_Mapping value.\"\n\nsvn path=/trunk/mcs/; revision=155962 2010-04-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* SerialPort.cs: Try to detect serial devices in other Unix\n\tsystems. \n\nsvn path=/trunk/mcs/; revision=155961 2010-04-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* SerialPort.cs: Try to detect serial devices in other Unix\n\tsystems. \n\nsvn path=/trunk/mcs/; revision=155960 Add new option -a to print out all the types\n\nsvn path=/trunk/mcs/; revision=155923 Update\n\nsvn path=/trunk/mono/; revision=155922 Guard for NULLs\n\nsvn path=/trunk/mono/; revision=155663 no need for these anymore\n\nsvn path=/trunk/moon/; revision=99701 Deleted unnecessary files\n\nsvn path=/trunk/moon/; revision=99700 i2008-04-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* Move the important stuff from examples/desklet into\n\tgtksilver.dll, no point in having two assemblies, two sets of docs\n\tfor merely one class.\n\n\t* Move the configuration stuff which is really only used by the\n\tweather applet into the weather applet.\n\n\t* Automake/autoconf the examples/desklets, lots of bitrot in\n\tthere, will continue as time allows. \n\n\tFixed some of the bitrot\n\n\nsvn path=/trunk/moon/; revision=99691 Clarify the license to track our web site\n\nsvn path=/trunk/moon/; revision=98340 2008-03-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* browser-mmsh.cpp (AsyncBrowserMmshResponse::MmsMetadataParse):\n\tRewrote this routine to have a regular parser instead of splitting\n\tstrings with g_strsplit, copes with commas inside metadata.\n\n\tFernando mentioned that most of this code is no longer useful,\n\texcept for a few flags.  \n\nsvn path=/trunk/moon/; revision=98024 Flush\n\nsvn path=/trunk/moon/; revision=95849 Update\n\nsvn path=/trunk/moon/; revision=95470 Add more comments\n\nsvn path=/trunk/moon/; revision=94720 Fix\n\nsvn path=/trunk/moon/; revision=94657 Add new property\n\nsvn path=/trunk/moon/; revision=94112 up\n\nsvn path=/trunk/moon/; revision=90465 Remove debuggin\n\nsvn path=/trunk/moon/; revision=89646 Update\n\nsvn path=/trunk/moon/; revision=89645 Fix\n\nsvn path=/trunk/moon/; revision=89595 2007-11-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* value.cpp (Value::ToString): Add method to help debug some\n\tapps. \n\nsvn path=/trunk/moon/; revision=89594 Revert uber-mistake\n\nsvn path=/trunk/moon/; revision=89391 Remove uber-awesome WriteLine\n\nsvn path=/trunk/moon/; revision=89390 Add uber-awesome --stories command line option.   Rulage Happens\n\nsvn path=/trunk/moon/; revision=89389 More debugging tools\n\nsvn path=/trunk/moon/; revision=89380 Update man page\n\nsvn path=/trunk/moon/; revision=89350 Add new --gdb option\n\nsvn path=/trunk/moon/; revision=89349 Handle nulls\n\nsvn path=/trunk/moon/; revision=89347 First step\n\nsvn path=/trunk/moon/; revision=89336 Improve error messages\n\nsvn path=/trunk/moon/; revision=89301 Add new macros\n\nsvn path=/trunk/moon/; revision=89300 2007-11-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin.cpp (PluginInstance::Properties): Spice this bad boy up.\n\tWe now can get some info about a XAML surface.\n\n\nsvn path=/trunk/moon/; revision=89298 2007-11-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin.cpp (string_to_js): rename from escape_quotes, this helps\n\tbecause some error messages being thrown from managed code contain\n\tnewlines (Sudoku, see #325336).\n\nsvn path=/trunk/moon/; revision=89035 update\n\nsvn path=/trunk/moon/; revision=88679 Updated INSTALL file\n\nsvn path=/trunk/moon/; revision=88382 Update\n\nsvn path=/trunk/moon/; revision=88381 Move most of README to NOTES\n\nsvn path=/trunk/moon/; revision=88380 Add a bunch more of functions that need to be renamed\n\nsvn path=/trunk/moon/; revision=88243 Fix typo\n\nsvn path=/trunk/moon/; revision=88239 up\n\nsvn path=/trunk/moon/; revision=86782 Developers likely want 1.1 by default, packages are the ones that care about 1.0 only\n\nsvn path=/trunk/moon/; revision=86644 Fix makefile\n\nsvn path=/trunk/moon/; revision=86123 2007-09-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (Stop, Pause): Do not dereference source if it is not\n\tyet set (TopBanana does this).\n\nsvn path=/trunk/moon/; revision=85850 Update\n\nsvn path=/trunk/moon/; revision=85027 another one\n\nsvn path=/trunk/moon/; revision=83993 Use silverdesktop everywhere\n\nsvn path=/trunk/moon/; revision=83992 Use silverdesktop\n\nsvn path=/trunk/moon/; revision=83991 Small changes to get this to build with smcs\n\nsvn path=/trunk/moon/; revision=83891 2007-08-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: Use the new Appdomain helper methods too.\n\nsvn path=/trunk/moon/; revision=83888 2007-08-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: use Ansi here because we only run on Linux not on\n\tWindows and the Auto API is gone from 2.1\n\nsvn path=/trunk/moon/; revision=83884 2007-08-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonligth.cs: Use the new helper method from agmono instead of\n\tduplicating code here.\n\nsvn path=/trunk/moon/; revision=83874 Update\n\nsvn path=/trunk/moon/; revision=83708 Fix API\n\nsvn path=/trunk/moon/; revision=83361 call collection_init\n\nsvn path=/trunk/moon/; revision=83257 Fix\n\nsvn path=/trunk/moon/; revision=83256 Implement Das Property for Das Count DependencyProperty\n\nsvn path=/trunk/moon/; revision=83239 Add Collection::Count property\n\nsvn path=/trunk/moon/; revision=83238 Drop the async argument in the downloader open call\n\nTracks the 1.1 Refresh changes.\n\n\nsvn path=/trunk/moon/; revision=83028 Flush\n\nsvn path=/trunk/moon/; revision=83021 Add\n\nsvn path=/trunk/moon/; revision=82825 Fix the desklets to build with SVN\n\nsvn path=/trunk/moon/; revision=82819 Fix\n\nsvn path=/trunk/moon/; revision=82785 Update\n\nsvn path=/trunk/moon/; revision=82732 2007-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\tThis implements support for relative MediaElement sources and\n\tmakes all of them go through the downloader, like we do for\n\timages.\n\t\n\t* media.cpp (MediaElement): Do an implementation of SetSource\n\tsimilar to the one in Image.   Although there is some code that\n\tcould be shared, the problem is that some parameters get in the\n\tway.   \n\n\t(MediaElement::DownloaderComplete): Move the playback here. \n\t\n\t(StopLoader): Utility routine, factor this out also on the Image\n\tcase, and hook this up to the destructor of Image and\n\tMediaElement.\n\n\nsvn path=/trunk/moon/; revision=82731 2007-07-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* openfile.cpp (open_file_dialog_show): Change this method to\n\treturn an array with all the selected files.   \n\nsvn path=/trunk/moon/; revision=82642 Update\n\nsvn path=/trunk/moon/; revision=82639 Turns out that you can cal the dialog many times, even if disposed,\nso we should do everything atomically\n\n\nsvn path=/trunk/moon/; revision=82637 Add\n\nsvn path=/trunk/moon/; revision=82636 These are to debug monotone with mopen\n\nsvn path=/trunk/moon/; revision=82610 2007-07-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin.cpp (PluginInstance): track the timers on a linked list\n\there. \n\n\t(~PluginInstance): Remove all the timers for this plugin on\n\tdestruction. \n\n\t(plugin_html_timer_timeout_add, plugin_html_timer_timeout_stop):\n\tMove these routines here and track all the timers created. \n\n\t* moonlight.cs: Use the type from agmono instead of agclr\n\n2007-07-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Removed the timer code from here, move to plugin.\n\n\n\nsvn path=/trunk/moon/; revision=82460 Update\n\nsvn path=/trunk/moon/; revision=82402 Do not try to write 0 elements and expect elements, fixes the downloader for extracting parts, and digger\n\nsvn path=/trunk/moon/; revision=82400 2007-07-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* collection.cpp: Add support for RemoveAt. \n\n\n2007-07-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* Fix a memory leak.\n\n\n\nsvn path=/trunk/moon/; revision=82397 2007-07-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (html_timer_timeout_add): Added helper routine to\n\tsetup Html timeouts.\n\n\nsvn path=/trunk/moon/; revision=82393 Do not return bool on this\n\nsvn path=/trunk/moon/; revision=82149 2007-07-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp (Send): If a send operation is performed on an\n\tobject that has completed its operation, immediately emit the\n\tfinished event or error event.\n\n\nsvn path=/trunk/moon/; revision=82074 Auto-abort on calling send again\n\nsvn path=/trunk/moon/; revision=82073 2007-07-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* ManagedDownloader.cs: Do not use the auto_reset event after the\n\tfinished callback, because the downloader might just trigger a new\n\tdownload and we would have pending events in the queue that are\n\tnever executed.    Fixes loop downloaded crash..\n\nsvn path=/trunk/moon/; revision=82070 Small update\n\nsvn path=/trunk/moon/; revision=81836 2007-07-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: Add support for downloading assembly\n\tdependencies. \n\n\nsvn path=/trunk/moon/; revision=81762 Update\n\nsvn path=/trunk/moon/; revision=81759 Flush\n\nsvn path=/trunk/moon/; revision=81755 Fix\n\nsvn path=/trunk/moon/; revision=81685 2007-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile.am: install debugging symbols.\n\n\t* moonlight.cs: try/catch wrappers to prevent exceptions to be\n\tpropagated to native code.\n\n\nsvn path=/trunk/moon/; revision=81683 2007-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonligh.cs: Invoke the Lookup(Kind, IntPtr) overload, just like\n\twe do in XamlReader. \n\nsvn path=/trunk/moon/; revision=81680 Add a way of telling the status of the downloader, do not\ncrash on PartName == NULL\n\n\nsvn path=/trunk/moon/; revision=81543 2007-07-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp: Do not pass the filename as the result now on the\n\tcalls.   Code must use the downloader_get_response_text or\n\tdownloader_get_response_file to get the contents from the download\n\t(as the request will include the part name).\n\n\t* downloader.cpp: Add a cache for zip file parts.\n\n\t* media.h (Image): track the part name that was requested on the\n\tcall to SetSource.\n\n\n\nsvn path=/trunk/moon/; revision=81536 Fixed\n\nsvn path=/trunk/moon/; revision=81518 Fix use of the Downloader\n\nsvn path=/trunk/moon/; revision=81517 Fix usage of downloader\n\nsvn path=/trunk/moon/; revision=81516 2007-07-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp: Implement the zip file support for the\n\tdownloader using miniZip, from:\n\n\t\thttp://www.winimage.com/zLibDll/minizip.html\n\n\tThe implementation is in C++, so there are no needs to delegate\n\tthis to the managed side as previously planned. \n\n\tThere are two APIs: one returns a filename, the other returns the\n\tfile loaded into memory, with the size of the memory blob.\n\n2007-07-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp: Update to the get-response-text downloader API.\n\n2007-07-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile: add support for uploading the docs to the server.\n\n\t* gtk.cs: Eliminate traces of get_response_func, this is now\n\thandled in the C++ runtime.\n\n\n\nsvn path=/trunk/moon/; revision=81514 Spice up\n\nsvn path=/trunk/moon/; revision=81503 Install the plugin elsewhere\n\nsvn path=/trunk/moon/; revision=81347 2007-07-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* value.cpp (Value): Add a couple of extra cases I had missed\n\twhere we should be using g_new instead of new as FreeValue always\n\tuses g_free.\n\nsvn path=/trunk/moon/; revision=81317 2007-07-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* ManagedDownloader.cs: Do not go the expensive route if we are\n\tgetting a file:// uri, just get directly from the file system.\n\nsvn path=/trunk/moon/; revision=81316 Fix\n\nsvn path=/trunk/moon/; revision=81315 Add Love\n\nsvn path=/trunk/moon/; revision=81303 Spice\n\nsvn path=/trunk/moon/; revision=81301 Fix\n\nsvn path=/trunk/moon/; revision=81223 Add missing function\n\nsvn path=/trunk/moon/; revision=81222 i2007-07-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* collection.cpp: Add support for reporting errors if the iterator\n\tgets out of sync with the collection.\n\n\nsvn path=/trunk/moon/; revision=81221 2007-07-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* demo.cpp: Updated to the new downloader interface.\n\n\t* downloader.cpp: Eliminates the in-memory buffer during\n\tdownload. \n\n\tWe still do the progressive updates as those are necessary for the\n\tprogress indicators, and if we ever need to hook up during\n\tprogressive downloads again.   \n\n\tBut now downloads on completion must notify the downloader of the\n\tlocal file where the download contents have been placed (necesary\n\tfor implementing the Zip-file support).\n\n\t(Downloader): eliminate our in-memory buffer byte_array_contents \n\n\t(downloader_notify): takes a new extra argument, overloaded\n\tdepended on the operation.\n\t\n\t(get_response_text): currently not implemented, it needs to be\n\timplemented by a callback into managed code so we can use ZipLib\n\t(unless we can find a suitable unmanaged version).\n\n\t* media.cpp: Remove the stale code for progressive image\n\tdownloads. \n\n2007-07-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* ManagedDownloader.cs: Adapt to the new downloading framework\n\tthat requires us to notify with a filename where the results have\n\tbeen placed. \n\n\t(Download): Now places the file in a temporary file.   The TODO\n\tfile has been updated with thoughts on how to cache this.\n\n\t(Start): Special case for files in the local file system, notify\n\tthe downloader immediately of the transfer being finished.\n\t\n\t(dowloader_notify_error, downloader_notify_finished): new\n\tpinvokes, used to notify of completion and errors.\n\n2007-07-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin.cpp (NewStream): Request that DOWNLOADER downloads be\n\tdownloaded as NP_ASFILE, this means: notify us of the progres and\n\tthe resulting filename.\n\n\nsvn path=/trunk/moon/; revision=81219 2007-07-02  Miguel de Icaza  <miguel@novell.com>\n\n        * value.cpp: Use g_malloc/g_free as the managed code is not able\n        to use C++ new operator, so we have a potential error when we\n        mismatch g_new with new and g_free with delete.\n\n        Reported by Valgrind.\n\n        * uielement.cpp: Add new helper method needed by Alan.\n\n\nsvn path=/trunk/moon/; revision=81198 2007-07-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* uielement.cpp: Add new helper method needed by Alan.\n\n\n\nsvn path=/trunk/moon/; revision=81193 More fixes for digger\n\nsvn path=/trunk/moon/; revision=81130 Document\n\nsvn path=/trunk/moon/; revision=81128 Update the descriptions to only cover the subtypes available on the platform Do not release buffers that we did not allocate Fix the public API to avoid internal names exposed Add AudioUnit implementation contribyted by AKIHIRO Uehara (u-akihiro@reinforce-lab.com) Fix the API Add copyright notice Add CoreAnimation to MonoMac, shared with MonoTouch Added another shared framework: AddressBook Add quicklook.cs More code\n\nsvn path=/trunk/maccore/; revision=160517 Add contributions from Duane\n\nsvn path=/trunk/maccore/; revision=160515 Add Enums\n\nsvn path=/trunk/maccore/; revision=160514 Add generator patch from Duane Wandless\n\nsvn path=/trunk/maccore/; revision=160513 Fix the build\n\nsvn path=/trunk/maccore/; revision=160204 Apply some of Duane's patches\n\nsvn path=/trunk/maccore/; revision=160201 Backport Geoff's fix\n\nsvn path=/trunk/maccore/; revision=160139 Add AudioToolbox\n\nsvn path=/trunk/maccore/; revision=160137 2010-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* SYnc to the latest version.\n\nsvn path=/trunk/maccore/; revision=160131 Fix for bug reported by Duane\n\nsvn path=/trunk/maccore/; revision=160009 Features + fixes\n\nsvn path=/trunk/maccore/; revision=156965 Add new\n\nsvn path=/trunk/maccore/; revision=156025 Fix\n\nsvn path=/trunk/maccore/; revision=155971 Some fixes\n\nsvn path=/trunk/maccore/; revision=155899 Update generator\n\nsvn path=/trunk/maccore/; revision=155892 Refactor the GenerateProperty into a separate method AudioQueue constructor should not be exposed, it is useless on its own AudioQueue constructor should not be exposed, it is useless on its own AudioFile.Write: Add overloads that return the errorcode from the underlying API AudioFile.Write: Add overloads that return the errorcode from the underlying API AudioFile.WritePackets: Add overloads that return the errorcode from the underlying API AudioFile.WritePackets: Add overloads that return the errorcode from the underlying API Add support for IntPtr fields Undo duplicate method from merge Merge branch 'master' into ios5 Add support for iterating over all the dictionary values and add string support\n\nThe previously unimplemented support for CGPDFString is in now, and also\na convenient Apply function that iterates over all the objects in the\ndictionary. Remove debug messages Pass the -x= arguments at the end of the build Add NeedsCpp to LinkWithAttribute AVAssetExportSession.AllExportPresets should be static AVAssetExportSession.AllExportPresets should be static Fix underlying constant names for some AVFileType constants Fix underlying constant names for some AVFileType constants Add implementation of COnformsToProtocol Add implementation of COnformsToProtocol Add a couple of extra helper functions Fix the build Add Lion to the list of ignored types Building blocks to add support for declaring that a class adopts a protocol Namespaces in Maccore should be MonoMac, as we process them later Add support for iterating over all the dictionary values and add string support\n\nThe previously unimplemented support for CGPDFString is in now, and also\na convenient Apply function that iterates over all the objects in the\ndictionary. Fixes the support in bmac/btouch to include extra source files to add to the build\n\nWe had a historic accident, the basic idea was:\n\n\tbtouch api-file.cs -s=api-dependencies.cs extra1 extra2\n\nWhere api-file.cs was the API contract to build bindings for, the\napi-dependecies.cs were enumarations and structures that were required\nto compile the api-file.cs contract and the extra1 and extra2 parameters\nwere files that were added to the blend (generated code from the api,\nand the api-dependencies).\n\nAt some point we started sharing the code between the core binding\ngenerator and a general purpose binding generator, and we ended up in\na situation where the above command line did not work, and instead\nthe meaning became:\n\n\tbtouch api-file.cs -s=api-dependencies.cs api-file2.cs api-file3.cs\n\nThat means that all extra source files listed were treated as API files\n(which is what we intend in cases like MonoMac or MonoTouch).   But this broke\nthe scenario that we wanted.\n\nThe workaround was to use --sourceonly, which produced a listing of all\ngenerated files and then let the Makefile manually compile the generated\nfiles, the api-dependencies and any extra files.   This is cumbersome, but\nthis works fine for larger projects like MonoMac and MonoTouch which had\nextra processing to do anyways.\n\nThis patch introduces the new -x=FILE to allow users to specify the\nextra files that need to be included in the build before the final library\nis produced, without having to use --sourceonly. Added Lion attribute to flag Lion-specific APIs Fix the API: the target object can be null Add a couple of extra helper functions Fix the build Add Lion to the list of ignored types Building blocks to add support for declaring that a class adopts a protocol Namespaces in Maccore should be MonoMac, as we process them later Add support for iterating over all the dictionary values and add string support\n\nThe previously unimplemented support for CGPDFString is in now, and also\na convenient Apply function that iterates over all the objects in the\ndictionary. Fixes the support in bmac/btouch to include extra source files to add to the build\n\nWe had a historic accident, the basic idea was:\n\n\tbtouch api-file.cs -s=api-dependencies.cs extra1 extra2\n\nWhere api-file.cs was the API contract to build bindings for, the\napi-dependecies.cs were enumarations and structures that were required\nto compile the api-file.cs contract and the extra1 and extra2 parameters\nwere files that were added to the blend (generated code from the api,\nand the api-dependencies).\n\nAt some point we started sharing the code between the core binding\ngenerator and a general purpose binding generator, and we ended up in\na situation where the above command line did not work, and instead\nthe meaning became:\n\n\tbtouch api-file.cs -s=api-dependencies.cs api-file2.cs api-file3.cs\n\nThat means that all extra source files listed were treated as API files\n(which is what we intend in cases like MonoMac or MonoTouch).   But this broke\nthe scenario that we wanted.\n\nThe workaround was to use --sourceonly, which produced a listing of all\ngenerated files and then let the Makefile manually compile the generated\nfiles, the api-dependencies and any extra files.   This is cumbersome, but\nthis works fine for larger projects like MonoMac and MonoTouch which had\nextra processing to do anyways.\n\nThis patch introduces the new -x=FILE to allow users to specify the\nextra files that need to be included in the build before the final library\nis produced, without having to use --sourceonly. Added Lion attribute to flag Lion-specific APIs Fix the API: the target object can be null Merged maccore/master into xamarin/ios5 iOS5: Update to Beta6 changes Add AVComposition, AVMutableComposition Merge from master, resolve differences Strong typed returns for NSFileManager's file system probing features Implement Dispose on methods that have auto-generated backing fields Add support to the generator to specify code to be injected in the methods.\n\nSupports three setups:\n\n[PrologueSnippet (code)] will inject the code before any parameters are\nvalidated or marshalled.\n\n[PreSnippet (code)] will inject the code after parameter validation and\nconversion, but before the Objective-C method invocation.\n\n[PostSnippet (code)] will inject the code after the Objective-C invocation\nbut before any temporaries are disposed. Update to iOS5 beta5 Include the OpenTK namespace again iOS5: Do not generate a using statement for OpenTK until we sort out the build Optimization: do not bother surfacing two strings to compare, let Objective-C compare them natively Merge branch 'master' into ios5 iOS5: add a couple of methods to NSUrl New iOS5 method Revert \"Optimize, we do not want to convert to strings, just have Objective-C do that\"\n\nThis reverts commit 8b4fce98896cb0f2f73e2fba4f0f331cd3434dd5. Optimize, we do not want to convert to strings, just have Objective-C do that Use the objective-C Hash() method for NSString's GetHashCode Revert \"Make a ctor internal\"\n\nThis reverts commit 3f7b4f40e6388b93d2982d0570af1eacae862ed7. iOS5: ABPerson changes Fix signature Bring NSMetadata to iOS iOS5: Foundation, JSon Serializer iOS5: Foundation updates for iOS5 Add OpenTK to the generated namespaces Add GLKit to the generated output Improve parser Use ints where appropriate Added NSStream and NSUbiquitousKeyValueStore iOS5: NSStream types, and missing values from previous binding iOS5: NSUrl + resource management iOS5: iCloud's NSUbiquitousKeyValueStore iOS5: NSUndoManager Fix These were not Objective-C methods, but fields iOS5: NSLinguistics and dependency on NSOrthography iOS5: Various iCloud APIs iOS5: NSCalendarComponents update iOS5: CIColor updates iOS5: Add UIImage constructors from UIKit iOS5/Lion: CoreImage updates iOS5: Now with CoreImage support iOS5: Enumerations for iCloud's NSData iOS5: iCloud's NSFileVersion iOS5: bring in QuartzCore's CAEmitter's iOS5: NewsstandKit additions iOS5: CoreLocation, complete the iOS5 bindings Integrate iOS5 changes here Make it simpler to extend Small change Update Add support for inheriting base classes, lets us implement protocols iOS5: CoreGraphics updates, done iOS5: CoreData, NSSaveChangesRequest;  And we are done! iOS5: CoreData, NSRelationshipDescription iOS5: fix iOS5: CoreData, NSPropertyDescription.h iOS5: CoreData, NSMigrationManager iOS5: CoreData, NSMigrationManager\n\nConflicts:\n\n\tsrc/coredata.cs iOS5: CoreData, NSMergePolicy iOS5: CoreData, NSManagedObjectContext iOS5: CoreData, NSManagedData iOS5: CoreData, NSIncrementalStore, NSIncrementalStoreNode Add Update parse Another fix Fixes from Kenneth and Ragan to NSColor and its dependencies [generator] bmac.exe references monomac.dll, not core.dll;   Fixes third-party bindings Until we can fix MonoDevelop Add file Support ref parameters Fix reference Build all new samples [build] Add new NSColor to the build [appkit] Add missing property Add VillainTracker sample [appkit] Add events to NSTableView + a few [NullAllowed] attributes [appkit] NSTableView add couple of helper methods [macdoc] history support, back/fwd images readme update [samples] fix layout [samples] fix layout [samples] fix layout Fix the sample layout Small cleanups Small UI touch ups [cleanup] Ensure that we use DelegateName instead of EventArgs where appropriate [appkit] Use DelegateName instead of EventArgs when we are not declaring an event [macdoc] Small usability change, tries to fit all the nodes of the expanded node on the screen Moved here [macdoc] Follow links, loads proper node Improve intellisense Added documentation for policy events eventargs [docs] update to API change [update] Use new MacCore files [webkit] API usability: fix horrible decision and move the Decide* methods to WebView [webkit] Expose Policy events in WebView as well Some docs for the new pattern Provide a way for users to use the listener Provide a way for users to use the listener Update docs [webkit] Add the PolicyDelegate bindings, macdoc updates Add new sample from Maxi Combina <maxi.combina@passwordbank.com> Handful of extra overloads Add missing file [webkit binding] Use DelegateName to clarify the use Added WebUIDelegate from Maxi Combina.\n\nImproved upon the posted patch, removed some conflicts, complemented\nthe other methods that were missing Push Add sample native monodoc browser, far from finished [webkit] Since Load from string is a potentially expensive op, expose NSString as well [webkit] Since Load from string is a potentially expensive op, expose NSString as well Polish API API updates [monomac, docs] Push the docs Use docfixer [monomac] fix a couple of method signatures as caught by docfixer [docs] A handful of stubs generated by populate.exe Add samples [monomac, docs] added Updated docs Updated docs Build with MonoDevelop the samples [monomac] Clean growl api mess [monomac] Sort filenames in Makefile Add new file [sample] improve Add new sample from Kenneth [appkit] Add unified NSTableView.Source property to do delegate + DataSource [appkit] Add support for Double-click events with DoubleClick property One pass of automatic docs update docs Add to the build Keep the old code around, until we release 0.5 use the new Jackson Harper suggested APIs Add copyright notices Small touchups to the sample Clean up sample update sample Added Rounded, Transparent Sample Oops, removed junk accidentally added Strongly type NSWindowLevel Use CoreImage filters on the sample Complete CoreImage Add more CoreImage Fields for CoreImage Add C#-like events to WebView Fix Fix Like this more Give C# events to NSTextView Update from Kenneth Clean sample Complete the sample's UI bindings Fix ToString Update sample Update sample Update API Provide more static bindings instead of NSDictionary APIs here Added more docs Update docs Update sample to use Exports instead of Connects Use PDF functionality Update Add link to the updated location for the utf8 test file Remove old, unused code Remove table that was not licensed under MIT [Docs] handle code-markdown with dots on the names [Docs] Continue to improve the Mono runtime documentation [Docs] document one of our most key APIs: mono_add_internal_call [Docs] Improved the rendering, added some docs [Docs] Use an external style sheet, prefix the css classes with mapi to isolate, fix various processing problems [Documentation] Fix the nesting of docs [docs] Improve the rendering of our API binding APIs and runtime API documentation [Docs] More API docs [Runtime Documentation] More work on runtime documentation [Documentation] Document some of Mono's embedding API, improve the style Remove stale files [rules.make] to support 'make dist' on MacOS Document Coop mode in README Remove from the documentation non-public APIs, or move to files that flag them as internal Updated the runtime template documentation with all new APIs in Mono [Makefile] fix make dist on libgc [getline] Improve the embedded sample [getline] Fix the logic for advancing the top item [csharp/getline] Add support for completion popup windows\n\nThis adds supprot to the getline.cs library to provide popup windows with\ncompletion results.   There is a new public string property surfaced,\nHeuristicsMode, that if set to \"csharp\" will trigger the completion window\nindependently of the \"tab\" character, based on the user input.\n\nThis mode triggers completion after the \".\" character is entered, and will\ncontinue to trigger it as long as you type, or you backspace and the completion\nsucceeds.   The heuristic also ignores scenarios like \"1.2\", so there is no\ncompeltion provided after entering numbers by default.\n\nPerhaps we can later introduce a \"OnKeyEntered\" command that users could\nuse to provide their own heuristics to control whether to popup the window\nor not. [man/mono.1] Add details on --aot=data-outfile option ucm2cp: Remove the deprecated '#if NET_2_0' fence Merge pull request #1896 from meum/patch-1\n\nFix dot stuffing in SmtpClient Add documentation for MONO_ENABLE_COOP [icall/GetMachineName] Use sysconf if available to capture the whole host name, fall back to a fixed size buffer otherwise [mono/driver] On OSX, increase the number of file handles available.\n\nWe just reverted a patch that prevented the FileSystemWatcher from\nopening too many file descriptors (200).  That was a band-aid at one\nof the spots that opened too many file, as we would exhaust the number\nof files, and later abort when some other operation needed files.\n\nThe problem is that OSX defaults to 256 file descriptors, and .NET\napplications are file descriptor hungry, in fact, many applications\nincrease their file handled limit before starting.\n\nThis patch on OSX will attempt to increase the number of handles\navailable to 1024 if the number of handles avaialble is less than\nthat.\n\nThe commit that removed the limit was:\n\n2af882232ce4961fdbe1ba0ae36246456bb1fbfb\n\nAnd it was closed to fix:\n\n#28693 [System] Remove arbitrary debugging limit from FileSystemWatcher on OSX, fixes #28693 Merge pull request #2286 from migueldeicaza/master\n\n[System.Runtime.Serialization] 36100 fix; Static serializer calls directly into internal APIs to fix C6 regression [System.Runtime.Serialization] Static serializer calls directly into internal APIs to fix C6 regression\n\nWith C6 we introduced a regression\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=36100, which is caused by\nthe new static serialization code that we wrote to reuse Microsoft's\nserializer.\n\nThe code uses Invoke on a series of MethodInfos, and this obscures the\nactual code that will be invoked at runtime to serialize certain\nobjects, causing the following exception:\n\nAttempting to JIT compile method '(wrapper runtime-invoke) <Module>:runtime_invoke_bool_Nullable`1<Decimal> (object,intptr,intptr,intptr)' while running with --aot-only.\n\nThis patch makes the simple code work, but a more thorough review of\nthe code would allow us to remove many of the slow dynamic codepaths\nin the serializer.\n\nWe opted for that approach to keep the code as similar as possible to the\noriginal.\n\nBut the code basically does this:\n\n* Use the XmlFormatGeneratorStatics property InternalSerializeMethod,\n  whose sole purpose is to delay computing the MethodInfo for the\n  XmlFormatWriterGenerator's InternalSerialize.\n\n* Use the resulting method in a few places to call the MethodInfo.\n\nThe MethodInfo was used because the original code uses Reflection.Emit\nto create fast serializers and it needs handles to internal methods,\nbut our static rewriter does not need it.\n\nWe should replace all of those uses, but for now, this patch at least\ndeals with the 36100 bug. Update code_of_conduct.md Add code of conduct Merge pull request #2282 from joelmartinez/docs-multiassembly-fix\n\n[mdoc] Improved error handling for multiassembly. [mdoc] Add some diagnostics Bring the Asin/Acos fix from CoreFX [Windows.Forms] add a warning to the Carbon driver when running on 64 bits Merge pull request #2127 from joelmartinez/mdoc-multiassembly-squashed\n\n[mdoc] `multiassembly` option for duplicated types [mscorlib] DateTime, DateTimeOffset, bring Unix time APIs from CoreCLR Add tests for #34598 Merge pull request #1921 from mattzink/master\n\nAllow disabling the mono-find-provides/requires RPM processing scripts Merge pull request #2025 from sawachika-kenji/patch-1\n\nUpdate FormsAuthentication.cs Merge pull request #2087 from joelmartinez/mdoc-membername-fixup\n\n[mdoc] Now rewriting incorrect `MemberName`. Merge pull request #2098 from evincarofautumn/fix-gchandle-assert\n\nFix assertion in mono_gchandle_get_target. [System/build] Xamarin.Mac's bare/System.dll does not compile with SECURITY_DEP, like the desktop assemblies Move System.IO.Compression and System.IO.Compression.FileSystem from the _parallels directory to the non-parallel ones, hoping that this will fix the issue where Facades that depend on the latter are built only after those are built, currently, we break (see https://wrench.internalx.com/Wrench/WebServices/Download.aspx?workfile_id=9795720) Merge pull request #1843 from info-lvsys/patch-1\n\nAdded sha512 and sha256 ; and defaults to SHA512 Merge pull request #1325 from madrang/CryptoToolsCtorCheck\n\nAdded null check in constructor of BlockProcessor in CryptoTools. Merge pull request #757 from mlintner/master\n\nThese changes fix 14335. When in getcontractinternal various things can ...\r\n\r\nThis patch further does not affect mobile. Merge pull request #2085 from guerrysemones/master\n\nThis is a patch to fix bug 34123. System.Drawing.Printing.PrintingSer… Merge pull request #1218 from AndreyAkinshin/master\n\nSuppression of negative Elapsed in Stopwatch, this is the comment from the Reference Source:\r\n\r\n                    // When measuring small time periods the StopWatch.Elapsed*\r\n                    // properties can return negative values.  This is due to\r\n                    // bugs in the basic input/output system (BIOS) or the hardware\r\n                    // abstraction layer (HAL) on machines with variable-speed CPUs\r\n                    // (e.g. Intel SpeedStep). Merge pull request #1225 from strawd/bug22307\n\nFix for bug 22307 - Intermittent IndexOutOfRangeException on closing connection [mono.data.sqlite] Using sqlite_close_v2 when available\n\nFrom Matthew Leibowitz (mattleibo)\n\nThis is the recommended function for garbage collected languages.\nhttp://sqlite.org/c3ref/close.html\n\nThe sqlite3_close_v2() interface is intended for use with host\nlanguages that are garbage collected, and where the order in which\ndestructors are called is arbitrary.\n\nFalls back to old sqlite3_close if we are on an old system\n\nUseful for ADO.NET where the connection os often closed, but the\ncommands are re-usable\n\nMostly visible on Windows operating systems\n\nThis snippet should fail with a System.IO.IOException using the\ncurrent build of Mono on Windows:\n\n    string filename = \"test_\" + Guid.NewGuid ().ToString (\"N\") + \".db\";\n    SqliteConnection conn = new SqliteConnection (\"Data Source=\" + filename);\n    conn.Open ();\n    SqliteCommand cmd = conn.CreateCommand ();\n    cmd.CommandText = \"PRAGMA legacy_file_format;\";\n    cmd.ExecuteScalar ();\n    // close connection before the command\n    conn.Dispose ();\n    // then close the command\n    cmd.Dispose ();\n    // the locks should be released, and we should be able to delete the database\n    File.Delete (filename); [API] Add a couple of .NET 4.5 methods, from pull request 641, had to apply manually Merge pull request #853 from echampet/onclick\n\n[FIX] correctly handle custom onclick attribute when autopostback = true... Add new test for Bug 15028, it is fixed by our migration to reference source Merge pull request #704 from jgagnon/master\n\nFix for #4938. Merge pull request #463 from strawd/concurrent-requests\n\nHandle multiple concurrent calls to BeginTryReceiveRequest Merge pull request #1971 from angeloc/master\n\neglib: checking locale_charset function availability Merge pull request #2023 from juergenhoetzel/master\n\n[runtime] Fix casting error in InternalCodePage. Obsolete SmtpClient Merge pull request #2020 from tomjepp/master\n\nFix bug #33551 - Use a full FQDN for EHLO and HELO in SmtpClient. Merge pull request #2059 from ermshiperete/Xamarin-33968\n\n[MWF] Fix problem pasting text (Xamarin-33968) Merge pull request #2072 from AdamBurgess/master\n\n[System] Fix SmtpClient.SendMailAsync never completing Merge pull request #2080 from upsilon/fix-point-constructor\n\n[System.Drawing] Fix Point constructor with single int parameter to correctly handle negative locations. [corlib] MulticastDelegate, bring back the HasSingleTarget internal method for public use Disable warnings about globally disabled warnings, show by ReferenceSource code Merge pull request #2035 from joelmartinez/mdoc-memberremoval-fix2\n\n[mdoc] Follow up fix for member and type removal. [Facades] Fix accidental removal of a line [Facades] Fix parallel builds for non-general profiles\n\nJoao reported that the facades build broke with 9022df44211c434c95c5e2d1f4e5f5e3979f3dd0\nas it tried to compile monodroid assemblies and this attempt to compile System.IO.Pipes\nwhich in turn needs a type not presented on Android: SafePipeHandle\n\nThis should fix that [Facades] Use Zoltan's parallel build infrastructure [mono-config] Apply fix from Bernhard Urban Undo the previous patch, as it contained an incorrect +3 in the size computation;    Use my version instead Merge pull request #1937 from lewurm/master\n\nmono: Use the relocated directory for finding support libraries in data/config Coverity: test if this is the way of silencing warnings Attempts to locate the C# and VB compilers based on the location of mscorlib, does not assume they are on the path.   Fixes #31369 Merge pull request #1887 from debugerr/patch-2\n\nNull reference check before calling delegate [Lucene] Replace the large 66M dependency to a 4M dependency with the subset that we use [Version] I am sick of the mono --version showing '((detached/XX)', fixed it [mono-proclib] Compile on non Mach-based Unix systems (see pull request 1819) [corlib/Tests] Added test for bug #30171 Add tests for #3811 Merge pull request #1805 from martincostello/master\n\nFix typos in man content for sn Merge pull request #1793 from rolfbjarne/subminute-dstoffset-fix\n\n[corlib] Tweak the fix for the reference sources' inability to support sub-minute DST offsets. [monop] Band-aid, cope with IKVM's Type.Namespace crashing on generic types\n[monop] Add test suite for monop Update, drop ssapre from the man page Update documentation, add float32 section Merge pull request #1720 from blucz/master\n\nFix NullReferenceException in timer thread [Socket] Add DualMode property and adjust to Mono semantics (continuation to #20048)\n\nThe new socket constructor that only takes a SocketType and a\nProtocolType defaults to InterNetworkV6 (this was done on a previous patch).\n\nIn addition, we explicitly set \"DualMode\" to true, so that on Windows,\nthis gets set explicitly (it does not matter on Unix).\n\nWe surface the DualMode property to allow servers that want to just\nbind to the IPv6 address to do so by creating the socket and then\nchanging DualMode to false.\n\nThis is *not* the same setting that Windows has, but it is the\nsemantics that Mono applications depend on.  So a test has been added\nto ensure that we do not regress.\n\nThis also switches to use SocketOptionName from the ReferenceSources. [Socket] Fix the socket ctor base call, and document the reason;  Fixes #20048 [man/certmgr] Update documentation Merge pull request #1713 from joelmartinez/docs-monodoc-getassembly\n\n[monodoc] Updated how generators load resource streams. [mono.1] Document MONO_THREADPOOL [doc] Format comment so our tools can process this Relicense socket-io.c to MIT Add submodule instructions Man page update Merge pull request #1617 from keneanung/OdbcCommandExceptionOnNoData\n\nAdd NoData as valid return state for Statements with params Merge pull request #1627 from mono/tooltask-fixes\n\n[Microsoft.Build.Utilities] Make properties in ToolTask available in 4.0 xbuild Add documentation information about IRI parsing Remove table that was not licensed under MIT [Docs] handle code-markdown with dots on the names [Docs] Continue to improve the Mono runtime documentation [Docs] document one of our most key APIs: mono_add_internal_call [Docs] Improved the rendering, added some docs [Docs] Use an external style sheet, prefix the css classes with mapi to isolate, fix various processing problems [Documentation] Fix the nesting of docs [docs] Improve the rendering of our API binding APIs and runtime API documentation [Docs] More API docs [Runtime Documentation] More work on runtime documentation [Documentation] Document some of Mono's embedding API, improve the style Remove stale files [rules.make] to support 'make dist' on MacOS Document Coop mode in README Remove from the documentation non-public APIs, or move to files that flag them as internal Updated the runtime template documentation with all new APIs in Mono [Makefile] fix make dist on libgc [getline] Improve the embedded sample [getline] Fix the logic for advancing the top item [csharp/getline] Add support for completion popup windows\n\nThis adds supprot to the getline.cs library to provide popup windows with\ncompletion results.   There is a new public string property surfaced,\nHeuristicsMode, that if set to \"csharp\" will trigger the completion window\nindependently of the \"tab\" character, based on the user input.\n\nThis mode triggers completion after the \".\" character is entered, and will\ncontinue to trigger it as long as you type, or you backspace and the completion\nsucceeds.   The heuristic also ignores scenarios like \"1.2\", so there is no\ncompeltion provided after entering numbers by default.\n\nPerhaps we can later introduce a \"OnKeyEntered\" command that users could\nuse to provide their own heuristics to control whether to popup the window\nor not. [man/mono.1] Add details on --aot=data-outfile option ucm2cp: Remove the deprecated '#if NET_2_0' fence Merge pull request #1896 from meum/patch-1\n\nFix dot stuffing in SmtpClient Add documentation for MONO_ENABLE_COOP [icall/GetMachineName] Use sysconf if available to capture the whole host name, fall back to a fixed size buffer otherwise [mono/driver] On OSX, increase the number of file handles available.\n\nWe just reverted a patch that prevented the FileSystemWatcher from\nopening too many file descriptors (200).  That was a band-aid at one\nof the spots that opened too many file, as we would exhaust the number\nof files, and later abort when some other operation needed files.\n\nThe problem is that OSX defaults to 256 file descriptors, and .NET\napplications are file descriptor hungry, in fact, many applications\nincrease their file handled limit before starting.\n\nThis patch on OSX will attempt to increase the number of handles\navailable to 1024 if the number of handles avaialble is less than\nthat.\n\nThe commit that removed the limit was:\n\n2af882232ce4961fdbe1ba0ae36246456bb1fbfb\n\nAnd it was closed to fix:\n\n#28693 [System] Remove arbitrary debugging limit from FileSystemWatcher on OSX, fixes #28693 Merge pull request #2286 from migueldeicaza/master\n\n[System.Runtime.Serialization] 36100 fix; Static serializer calls directly into internal APIs to fix C6 regression [System.Runtime.Serialization] Static serializer calls directly into internal APIs to fix C6 regression\n\nWith C6 we introduced a regression\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=36100, which is caused by\nthe new static serialization code that we wrote to reuse Microsoft's\nserializer.\n\nThe code uses Invoke on a series of MethodInfos, and this obscures the\nactual code that will be invoked at runtime to serialize certain\nobjects, causing the following exception:\n\nAttempting to JIT compile method '(wrapper runtime-invoke) <Module>:runtime_invoke_bool_Nullable`1<Decimal> (object,intptr,intptr,intptr)' while running with --aot-only.\n\nThis patch makes the simple code work, but a more thorough review of\nthe code would allow us to remove many of the slow dynamic codepaths\nin the serializer.\n\nWe opted for that approach to keep the code as similar as possible to the\noriginal.\n\nBut the code basically does this:\n\n* Use the XmlFormatGeneratorStatics property InternalSerializeMethod,\n  whose sole purpose is to delay computing the MethodInfo for the\n  XmlFormatWriterGenerator's InternalSerialize.\n\n* Use the resulting method in a few places to call the MethodInfo.\n\nThe MethodInfo was used because the original code uses Reflection.Emit\nto create fast serializers and it needs handles to internal methods,\nbut our static rewriter does not need it.\n\nWe should replace all of those uses, but for now, this patch at least\ndeals with the 36100 bug. Update code_of_conduct.md Add code of conduct Merge pull request #2282 from joelmartinez/docs-multiassembly-fix\n\n[mdoc] Improved error handling for multiassembly. [mdoc] Add some diagnostics Bring the Asin/Acos fix from CoreFX [Windows.Forms] add a warning to the Carbon driver when running on 64 bits Merge pull request #2127 from joelmartinez/mdoc-multiassembly-squashed\n\n[mdoc] `multiassembly` option for duplicated types [mscorlib] DateTime, DateTimeOffset, bring Unix time APIs from CoreCLR Add tests for #34598 Merge pull request #1921 from mattzink/master\n\nAllow disabling the mono-find-provides/requires RPM processing scripts Merge pull request #2025 from sawachika-kenji/patch-1\n\nUpdate FormsAuthentication.cs Merge pull request #2087 from joelmartinez/mdoc-membername-fixup\n\n[mdoc] Now rewriting incorrect `MemberName`. Merge pull request #2098 from evincarofautumn/fix-gchandle-assert\n\nFix assertion in mono_gchandle_get_target. [System/build] Xamarin.Mac's bare/System.dll does not compile with SECURITY_DEP, like the desktop assemblies Move System.IO.Compression and System.IO.Compression.FileSystem from the _parallels directory to the non-parallel ones, hoping that this will fix the issue where Facades that depend on the latter are built only after those are built, currently, we break (see https://wrench.internalx.com/Wrench/WebServices/Download.aspx?workfile_id=9795720) Merge pull request #1843 from info-lvsys/patch-1\n\nAdded sha512 and sha256 ; and defaults to SHA512 Merge pull request #1325 from madrang/CryptoToolsCtorCheck\n\nAdded null check in constructor of BlockProcessor in CryptoTools. Merge pull request #757 from mlintner/master\n\nThese changes fix 14335. When in getcontractinternal various things can ...\r\n\r\nThis patch further does not affect mobile. Merge pull request #2085 from guerrysemones/master\n\nThis is a patch to fix bug 34123. System.Drawing.Printing.PrintingSer… Merge pull request #1218 from AndreyAkinshin/master\n\nSuppression of negative Elapsed in Stopwatch, this is the comment from the Reference Source:\r\n\r\n                    // When measuring small time periods the StopWatch.Elapsed*\r\n                    // properties can return negative values.  This is due to\r\n                    // bugs in the basic input/output system (BIOS) or the hardware\r\n                    // abstraction layer (HAL) on machines with variable-speed CPUs\r\n                    // (e.g. Intel SpeedStep). Merge pull request #1225 from strawd/bug22307\n\nFix for bug 22307 - Intermittent IndexOutOfRangeException on closing connection [mono.data.sqlite] Using sqlite_close_v2 when available\n\nFrom Matthew Leibowitz (mattleibo)\n\nThis is the recommended function for garbage collected languages.\nhttp://sqlite.org/c3ref/close.html\n\nThe sqlite3_close_v2() interface is intended for use with host\nlanguages that are garbage collected, and where the order in which\ndestructors are called is arbitrary.\n\nFalls back to old sqlite3_close if we are on an old system\n\nUseful for ADO.NET where the connection os often closed, but the\ncommands are re-usable\n\nMostly visible on Windows operating systems\n\nThis snippet should fail with a System.IO.IOException using the\ncurrent build of Mono on Windows:\n\n    string filename = \"test_\" + Guid.NewGuid ().ToString (\"N\") + \".db\";\n    SqliteConnection conn = new SqliteConnection (\"Data Source=\" + filename);\n    conn.Open ();\n    SqliteCommand cmd = conn.CreateCommand ();\n    cmd.CommandText = \"PRAGMA legacy_file_format;\";\n    cmd.ExecuteScalar ();\n    // close connection before the command\n    conn.Dispose ();\n    // then close the command\n    cmd.Dispose ();\n    // the locks should be released, and we should be able to delete the database\n    File.Delete (filename); [API] Add a couple of .NET 4.5 methods, from pull request 641, had to apply manually Merge pull request #853 from echampet/onclick\n\n[FIX] correctly handle custom onclick attribute when autopostback = true... Add new test for Bug 15028, it is fixed by our migration to reference source Merge pull request #704 from jgagnon/master\n\nFix for #4938. Merge pull request #463 from strawd/concurrent-requests\n\nHandle multiple concurrent calls to BeginTryReceiveRequest Merge pull request #1971 from angeloc/master\n\neglib: checking locale_charset function availability Merge pull request #2023 from juergenhoetzel/master\n\n[runtime] Fix casting error in InternalCodePage. Obsolete SmtpClient Merge pull request #2020 from tomjepp/master\n\nFix bug #33551 - Use a full FQDN for EHLO and HELO in SmtpClient. Merge pull request #2059 from ermshiperete/Xamarin-33968\n\n[MWF] Fix problem pasting text (Xamarin-33968) Merge pull request #2072 from AdamBurgess/master\n\n[System] Fix SmtpClient.SendMailAsync never completing Merge pull request #2080 from upsilon/fix-point-constructor\n\n[System.Drawing] Fix Point constructor with single int parameter to correctly handle negative locations. [corlib] MulticastDelegate, bring back the HasSingleTarget internal method for public use Disable warnings about globally disabled warnings, show by ReferenceSource code Merge pull request #2035 from joelmartinez/mdoc-memberremoval-fix2\n\n[mdoc] Follow up fix for member and type removal. [Facades] Fix accidental removal of a line [Facades] Fix parallel builds for non-general profiles\n\nJoao reported that the facades build broke with 9022df44211c434c95c5e2d1f4e5f5e3979f3dd0\nas it tried to compile monodroid assemblies and this attempt to compile System.IO.Pipes\nwhich in turn needs a type not presented on Android: SafePipeHandle\n\nThis should fix that [Facades] Use Zoltan's parallel build infrastructure [mono-config] Apply fix from Bernhard Urban Undo the previous patch, as it contained an incorrect +3 in the size computation;    Use my version instead Merge pull request #1937 from lewurm/master\n\nmono: Use the relocated directory for finding support libraries in data/config Coverity: test if this is the way of silencing warnings Attempts to locate the C# and VB compilers based on the location of mscorlib, does not assume they are on the path.   Fixes #31369 Merge pull request #1887 from debugerr/patch-2\n\nNull reference check before calling delegate [Lucene] Replace the large 66M dependency to a 4M dependency with the subset that we use [Version] I am sick of the mono --version showing '((detached/XX)', fixed it [mono-proclib] Compile on non Mach-based Unix systems (see pull request 1819) [corlib/Tests] Added test for bug #30171 Add tests for #3811 Merge pull request #1805 from martincostello/master\n\nFix typos in man content for sn Merge pull request #1793 from rolfbjarne/subminute-dstoffset-fix\n\n[corlib] Tweak the fix for the reference sources' inability to support sub-minute DST offsets. [monop] Band-aid, cope with IKVM's Type.Namespace crashing on generic types\n[monop] Add test suite for monop Update, drop ssapre from the man page Update documentation, add float32 section Merge pull request #1720 from blucz/master\n\nFix NullReferenceException in timer thread [Socket] Add DualMode property and adjust to Mono semantics (continuation to #20048)\n\nThe new socket constructor that only takes a SocketType and a\nProtocolType defaults to InterNetworkV6 (this was done on a previous patch).\n\nIn addition, we explicitly set \"DualMode\" to true, so that on Windows,\nthis gets set explicitly (it does not matter on Unix).\n\nWe surface the DualMode property to allow servers that want to just\nbind to the IPv6 address to do so by creating the socket and then\nchanging DualMode to false.\n\nThis is *not* the same setting that Windows has, but it is the\nsemantics that Mono applications depend on.  So a test has been added\nto ensure that we do not regress.\n\nThis also switches to use SocketOptionName from the ReferenceSources. [Socket] Fix the socket ctor base call, and document the reason;  Fixes #20048 [man/certmgr] Update documentation Merge pull request #1713 from joelmartinez/docs-monodoc-getassembly\n\n[monodoc] Updated how generators load resource streams. [mono.1] Document MONO_THREADPOOL [doc] Format comment so our tools can process this Relicense socket-io.c to MIT Add submodule instructions Man page update Merge pull request #1617 from keneanung/OdbcCommandExceptionOnNoData\n\nAdd NoData as valid return state for Statements with params Merge pull request #1627 from mono/tooltask-fixes\n\n[Microsoft.Build.Utilities] Make properties in ToolTask available in 4.0 xbuild Add documentation information about IRI parsing Merge pull request #977 from jasonleenaylor/bug-18558\n\nFix for Bug 18558 [UnixRegistry] Fix leak (#25559), remove races.\n\nThere was a memory leak caused by not having a lookup mechanism for\nthe RegistryKey.  In addition, the entire code to dispose code was\nnever used (due to the leak), and it was wrong.\n\nIn addition, added locking to the \"values\" field, which currently was\nracy.\n\nNo test cases, the repro is to run the above code for about 5 minutes. 2010-04-16  Miguel de Icaza  <miguel@novell.com>\n\n        * src/gshell.c (g_shell_unquote): Implement this.\n\n\n\nsvn path=/trunk/mono/; revision=155662 Add here too\n\nsvn path=/trunk/mono/; revision=155434 Add mono.pc for those using it as a way to probe for Mono\n\nsvn path=/trunk/mono/; revision=155433 2010-04-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: turn the AC_MSG_ERROR into a AC_MSG_WARN since in\n\tAndrew's configuration this aborts the build:\n\n\t host=i686-pc-linux-gnu != target=i586-suse-linux\n\n\tAnd I no longer remember why I added that error in the first\n\tplace (we need to determine perhaps the arch/OS but it is\n\tdifficult with those strings).\n\nsvn path=/trunk/mono/; revision=155422 2010-04-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* Enumerable.cs: Jumbo patch that inlines code, mainly for the AOT\n\tscenario where we our compiler cant infer the extra layer of\n\tindirection of a lambda function.\n\n\tBut additionally, since we lack support for our JIT to inline\n\tintermediate delegate calls, it should save memory and run\n\tfaster. \n\nsvn path=/trunk/mcs/; revision=155280 Add some code\n\nsvn path=/trunk/mcs/; revision=155026 2010-04-07  Miguel de Icaza  <miguel@novell.com>\n\n\t*  BufferManager.cs: Implement the BufferManager. \n\nsvn path=/trunk/mcs/; revision=154999 2010-04-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* main.c: Prevent a crash with broken assemblies.\n\nsvn path=/trunk/mono/; revision=154872 2010-04-02  Miguel de Icaza  <miguel@novell.com>\n\n        * SafeHandle.cs: Use refcount == -1 to indicate that the handle\n        had been closed.\n\n        The problem here is that we have no records of why the code that\n        threw a ObjectDisposedException inside the do { } while block on\n        DangerousAddRef was added.   It seems it was added in response to\n        Close() methods being called and the need to throw that exception\n        on further calls to ObjectDisposedException.\n\n        Sadly, we have no test suites for that.\n\n\nsvn path=/trunk/mcs/; revision=154741 2010-04-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* JsonValue.cs: We need to use Convert.ToXXXX for numbers as we\n\talways end up reporting the value JsonType.Number regardless of\n\tthe underlying storage (int, long or decimal).   The parser\n\tpicks the best storage suitable for the data, and can end up using\n\t\"ints\" for values that sometimes use longs. \n\n\tThis causes problems when derefercing the data for example, if you\n\thave an int and try to get it out as a long you end up with an\n\tinvalid cast exception.\n\nsvn path=/trunk/mcs/; revision=154613 2010-03-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-semaphore.h: Use Windows semaphores on Windows, patch\n\tcontributed by Vincent Povirk from bugzilla #531767\n\nsvn path=/trunk/mono/; revision=154573 2010-03-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-hash.c (test_prime): Remove warnings\n\nsvn path=/trunk/mono/; revision=154554 2010-03-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* object.c (mono_class_proxy_vtable): Eliminate warning. \n\nsvn path=/trunk/mono/; revision=154553 2010-03-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* marshal.c (emit_marshal_boolean): Eliminate possible\n\tuninitialized local warning. \n\nsvn path=/trunk/mono/; revision=154552 Add tests\n\nsvn path=/trunk/mcs/; revision=154534 2010-03-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* UInt32.cs, Int64.cs, UInt64.cs: cope with the case that the\n\tIFormatProvider is not a NumberFormatInfo, preventing a crash.\n\tThis was already handled by Int32.cs, but these other routines\n\twere never properly updated. \n\n\tFixes #588356\n\n\nsvn path=/trunk/mcs/; revision=154532 2010-03-30  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* moonlight_raw_corlib.dll.sources: Fix Moonlight since these \n\ttypes now reside in mscorlib (not System.Coe) for NET_4_0 and\n\talso for SL4\n\n2010-03-26  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* moonlight_raw_corlib.dll.sources: Add MonoAssembly to ML build\n\tsince it contains parts of the Assembly features (partial class)\n\nsvn path=/trunk/mcs/; revision=154531 First part of bug fix for Joachim's bug\n\nsvn path=/trunk/mono/; revision=154422 2010-03-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* RowEnumerableDataReader.cs: Applied patch from Tony Fish fixing\n\tbug #591397\n\nsvn path=/trunk/mcs/; revision=154290 Patch from Jay R Wren to drop assemblies that are no longer part of Mono 2.8\n\nsvn path=/trunk/mono/; revision=154288 2010-03-24  U-anarquia\\miguel  <miguel@anarquia>\n\n\tMake sure that trunk builds with DISABLE_JIT, an update to the\n\tPlayStation 3 port.\n\t\n\t* mini.c (mini_get_shared_method): this code seems to be necessary\n\tregardless of whether DISABLE_JIT has been defined.\n\n\t(mono_jit_compile_method_inner): it seems that this method is\n\trequired even in full AOT mode, so ifdef out only the pieces that\n\ttry to genrate code (the body of code that applies patches to the\n\tcode).  \n\n\t(mini_method_compile): do not compile when using DISABLE_JIT.\n\n\t* mini-ppc.c (mono_arch_get_allocatable_int_vars)\n\t(mono_arch_output_basic_block, mono-arch_emit_exceptions): Do not\n\tcompile when DISABLE_JIT is set. 2010-03-24  U-anarquia\\miguel  <miguel@anarquia>\n\n\t* reflection.c (mono_reflection_get_custom_attrs_info): Protect\n\tcode that uses System.Reflection.Emit in DISABLE_REFLECTION_EMIT.\n\n\tExpose a few macros that are needed for SR but not SRE to the\n\tworld (previous inside the SRE ifdef)\n\nsvn path=/trunk/mono/; revision=154158 Update license files\n\nsvn path=/trunk/mono/; revision=153993 Add missing copyright notices to Sgen\n\nsvn path=/trunk/mono/; revision=153992 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* Eliminate warnings in a bunch of places.\n\nsvn path=/trunk/mcs/; revision=153952 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebConnection.cs: Drop pre-2.0 and pre-1.1 support, and remove\n\twarnings. \n\nsvn path=/trunk/mcs/; revision=153951 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebConnection.cs: Drop pre-2.0 and pre-1.1 support, and remove\n\twarnings. \n\nsvn path=/trunk/mcs/; revision=153950 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebConnection.cs: Drop pre-2.0 and pre-1.1 support, and remove\n\twarnings. \n\nsvn path=/trunk/mcs/; revision=153949 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* RxInterpreter.cs: Removed warnings.\n\nsvn path=/trunk/mcs/; revision=153948 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* TypeDescriptor.cs: Remove warning.\n\nsvn path=/trunk/mcs/; revision=153947 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebConnection.cs: Drop pre-2.0 and pre-1.1 support, and remove\n\twarnings. \n\nsvn path=/trunk/mcs/; revision=153946 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* Uri.cs: Drop pre-2.0 support\n\nsvn path=/trunk/mcs/; revision=153945 2010-03-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebClient.cs: Drop the pre-2.0 support\n\nsvn path=/trunk/mcs/; revision=153944 Removed a warning;   But this loop here looks risky\n\nsvn path=/trunk/mcs/; revision=153941 2010-03-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* Eliminate warnings in a bunch of places.\n\nsvn path=/trunk/mcs/; revision=153923 2010-03-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* RBTree.cs: Make these serializable, should fix the serialization\n\tacross appdomains of SortedDictionaries\n\nsvn path=/trunk/mcs/; revision=153922 This too\n\nsvn path=/trunk/mcs/; revision=153278 removed this too\n\nsvn path=/trunk/mcs/; revision=153277 Fix this\n\nsvn path=/trunk/mono/; revision=153084 More deprecated code moved out for Mono 2.8\n\nsvn path=/trunk/mcs/; revision=153041 Remove Mono.GetOptions\n\nsvn path=/trunk/mcs/; revision=153040 Forgot the ChangeLog\n\nsvn path=/trunk/mcs/; revision=152959 2010-03-03  Miguel de Icaza  <miguel@novell.com>\n\n        * Decimal.cs: Disable the fast double2decimal code, and go back\n        * to\n        string parsing as there is a rounding/precision bug.\n\n                //\n                // We cant use the double2decimal method\n                // because it incorrectly turns the floating point\n                // value 1.23456789E-25F which should be:\n                //    0.0000000000000000000000001235\n                // into the incorrect:\n                //   0.0000000000000000000000001234\n                //\n                //    The code currently parses the double value 0.6 as\n                //    0.600000000000000\n                //\n                // And we have a patch for that called (trim\n\n\nsvn path=/trunk/mcs/; revision=152956 2010-03-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* decimal.c (mono_double2decimal): Add support for reducing the\n\tscale of a decimal.  It turns the 0.6000000000000 into 0.6 as\n\texpected.\n\nsvn path=/trunk/mono/; revision=152952 Add sgen to the tools build\n\nsvn path=/trunk/mono/; revision=152878 Fix build\n\nsvn path=/trunk/mono/; revision=152877 Droppped more code\n\nsvn path=/trunk/mcs/; revision=152876 Drop Microsoft.Vsa too\n\nsvn path=/trunk/mcs/; revision=152875 Moved more obsolete code\n\nsvn path=/trunk/mcs/; revision=152874 Drop this one too\n\nsvn path=/trunk/mcs/; revision=152873 Update configure.in to include tools/sgen\n\nsvn path=/trunk/mono/; revision=152871 Move to a directory\n\nsvn path=/trunk/mono/; revision=152870 Move tool\n\nsvn path=/trunk/mono/; revision=152869 Make this 2.0\n\nsvn path=/trunk/mcs/; revision=152866 Put monodoc.dll on the 2.0 profile as well for now\n\nsvn path=/trunk/mcs/; revision=152862 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152788 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152784 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152783 Remove prj2make and cilc\n\nsvn path=/trunk/mcs/; revision=152782 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152781 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152780 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152779 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152778 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152777 Moved deprecated library\n\nsvn path=/trunk/mcs/; revision=152776 Remove some deprecated libraries\n\nsvn path=/trunk/mcs/; revision=152775 2010-03-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* Win32Resources.cs: Prevent infinite loops if the resource that\n\twe are reading is invalid.   Fixes the mscorlib part of #327500\n\nsvn path=/trunk/mcs/; revision=152739 2010-03-01  Miguel de Icaza  <miguel@novell.com>\n\n        * WebHeaderCollection.cs: Apply 2 year old patch from Yves Bastide that fixes the keys\n        casing in the collection;   Fixes 325491\n\n\nsvn path=/trunk/mcs/; revision=152734 2010-03-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* More dropping of old NET_1_1 code.\n\nsvn path=/trunk/mcs/; revision=152709 2010-03-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* DateTime.cs (DoParse): patch from Tom Philpot, while using\n\tTryParse if s is null, we should return false, not crash.\n\n\nsvn path=/trunk/mcs/; revision=152708 2010-03-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* Point.cs: Fix #554635, our constructor that takes an int had the\n\tvalues for X and Y swapped out.\n\nsvn path=/trunk/mcs/; revision=152650 2010-02-09  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* net_2_1_raw_corlib.dll.sources: Add Mono.CompilerServices.\n\tSymbolWriter source files directly into mscorlib 2.1\n\n2010-02-02  Jérémie Laval  <jeremie.laval@gmail.com>\n\nsvn path=/trunk/mcs/; revision=152638 2010-02-09  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* net_2_1_raw_corlib.dll.sources: Add Mono.CompilerServices.\n\tSymbolWriter source files directly into mscorlib 2.1\n\nsvn path=/trunk/mcs/; revision=152635 2010-02-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* docs/Makefile: install during the 4.0 build now.\n\nsvn path=/trunk/mcs/; revision=152634 2010-02-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile: Process `docs' now on the 4.0 profile.\n\nsvn path=/trunk/mcs/; revision=152633 2010-02-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* Decimal.cs: Enabling the unmanaged double to decimal and float\n\tto decimal conversions code again as I am unable to find any\n\tregressions in corlib, System.Data, the Silverlight test suite or\n\tRotor's test suite.\n\n\tI am enabling it hoping that we can find the original problem that\n\tlead us to use the slow path.\n\n\n\nsvn path=/trunk/mcs/; revision=152632 Another 4.0 switch fix\n\nsvn path=/trunk/mcs/; revision=152629 Fix the 1.0 dropping\n\nsvn path=/trunk/mcs/; revision=152628 Fix the basic build\n\nsvn path=/trunk/mcs/; revision=152627 Fix the build\n\nsvn path=/trunk/mcs/; revision=152625 2010-02-28  Miguel de Icaza  <miguel@novell.com>\n\n        *Mono.Security.Protocol.Tls/HttpsClientStream.cs,\n        Mono.Security.Protocol.Tls/SslStreamBase.cs,\n        Mono.Security.X509/PKCS12.cs,\n        Mono.Security.X509/X509Certificate.cs,\n        Mono.Security.Cryptography/RSAManaged.cs,\n        Mono.Security.Cryptography/SymmetricTransform.cs,\n        Mono.Security/ASN1Convert.cs: Drop the pre-NET 2.0 support.\n\n\nsvn path=/trunk/mcs/; revision=152622 Default should not be to debug\n\nsvn path=/trunk/mcs/; revision=152621 2010-02-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* OSX509Certificates.cs: Add support to validate X509 certificate\n\tchains using the OSX certificates API.\n\n\n\nsvn path=/trunk/mcs/; revision=152615 Fix crasher\n\nsvn path=/trunk/mcs/; revision=152608 Couple of extra fixes\n\nsvn path=/trunk/mono/; revision=152607 One fix\n\nsvn path=/trunk/mono/; revision=152606 Move most stuff to the 4.0 profile\n\nsvn path=/trunk/mcs/; revision=152605 Install security tools on 4.0\n\nsvn path=/trunk/mcs/; revision=152604 Update\n\nsvn path=/trunk/mcs/; revision=152602 2010-02-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* Make the scripts default to 4.0 now.\n\n2009-05-21  Miguel de Icaza  <miguel@novell.com>\n\nsvn path=/trunk/mono/; revision=152599 Add\n\nsvn path=/trunk/mono/; revision=152377 Update\n\nsvn path=/trunk/mcs/; revision=152116 Add\n\nsvn path=/trunk/mono/; revision=152113 Distribute autogen.sh\n\nsvn path=/trunk/mono/; revision=152099 \t* cs-parser.jay: Bubble completions after \"from x in ?\" and \"from x\n\t... let ?\"\n\n\n\nsvn path=/trunk/mcs/; revision=152092 2010-02-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Do not do the report printer dance unless the user has\n\tset the DescribeTypes feature.\n\nsvn path=/trunk/mcs/; revision=151723 My first documentation contribution to Cecil\n\nsvn path=/trunk/mcs/; revision=151716 Add\n\nsvn path=/trunk/mcs/; revision=151644 2010-02-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* XStreamingElement.cs: Avoid an extra indirect call, by calling\n\tthe target methods directly.\n\t\n\t* XDocument.cs, XElement.cs, XStreamingElement.cs: Fix the\n\tsetting of the Indent flag, since this is an enumeration, testing\n\tagainst SaveOptions.None was incorrect.  Check on the actual flag.\n\n\t* XElement.cs, XDocument.cs, XStreamingElement.cs: Add support for\n\tthe new .NET 4.0 Save methods and the new OmitDuplicateNamespaces\n\tflag to SaveOptions.\n\n\t* XElement.cs, XDocument.cs, XNamespace.cs: Sprinkle\n\tCLSCompliantAttribute to match the compare page.\n\n\t* SaveOptions.cs: New setting for 4.0 OmitDuplicateNamespaces.\n\n\nsvn path=/trunk/mcs/; revision=151627 2010-02-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* XmlWriterSettings.cs: Expose NamespaceHandling in NET 4.0 \n\nsvn path=/trunk/mcs/; revision=151626 2010-02-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* main.c (dis_method_list): Show method implementation flags as\n\twell when calling --method.\n\n\tget.c: Moved some code here from main.c so it could be reused by\n\tdump.c\n\nsvn path=/trunk/mono/; revision=151251 iOS5: CoreData, NSPersistentStore, NSFetchRequest iOS5: CoreData, NSEntityDescription iOS5: AVVideoSettings, and we are done with AVFoundation! iOS5: AVVideoComposition iOS5: AVPlayerItem iOS5: AVPlayer iOS5: new media characteristics iOS5: new errors iOS5: AVCompositionTrack iOS5: new AVComposition iOS5: new AVCaptureSession presets iOS5: AVCaptureConnection changes iOS5: AVCaptureOutput changes iOS5: AVCaptureDevice iOS5: AVAudioSession iOS5: document missing binding iOS5: AVAssetTrack iOS5: AVAssetImageGenerator iOS5: AVAssetImageGenerator iOS5: AVAssetExportSession iOS5: AVAsset, AVMediaSelectionOption, AVMediaSelectionGroup Some AudioToolbox constants Update iOS5: Add new properties to AudioToolbox Use actual decent parameter names, as pointed out by Michael Hutchinson Prevent the common error condition when users call Dispose inside FinishedPlaying Merge pull request #14 from praeclarum/master\n\nAdded CGContext.ShowText overloads that take already-encoded byte[] arguments. Bring better error reporting to AVFoundation, for those doing disposes when they should not be making them Add support for [CheckDisposed] Fix MonoTouch build Add convenience method to create strongly typed version of the arrays Add NSValue.ObjCType Move Fix the signature Add New needs Move CoreImage to the shared directory Optimization: since this is internal, and we access the fields before, we dont need the Null checks here Add GetFloat, add NullAllowed to a list of places Add support for fields of type int and double The new iPhone product needs these Build fix Fix parameter Fix bug #688016 Add NSNumberFormatter Add Create methods to all CALayers.\n\nIn Objective-C static methods are overwritten, make sure we mimic\nthat behavior for the CALayer cases. Fix return value Add runMode:beforeDate: Fix the definition Small style fixes Add new helper method for Kenneth Use initWithCapacity instead of initWithLenght Polish a little bit the NSDecimal support Some small changes Add some NSDecimal methods Use NSStrings for keys Add new file to support the new marshaller update Add missing overload [corevideo] Fix binding by chaining to CVBuffer Bug fix: avoid infinite recursion in operator == methods [corevideo] fix inheritance for CVPixelBuffer [corevideo] fix inheritance for CVPixelBuffer [CoreMedia] CMSampleBuffer can now return the associated CVImageBuffer [coregraphics] provide overloads that take a CGBitmapFlags [avfoundation] make this API more pleasant to use [CoreMedia] A more complete, but not finished CMTime Add new overloads [avfoundation] Add a handful of missing keys Fix by Kenneth This is required to derive classes that derive from a model, for\nexample:\n\n\t[Model]\n\t[BaseType (NSObject)]\n\tinterface Foo {\n\t\t[Abstract, Export (\"foofoo\")]\n\t\tvoid FooFoo ();\n\t}\n\n\t[Model]\n\t[BaseType (typeof (Foo))]\n\tinterface Bar {\n\t}\n\nThis happens in coreplot.cs Add new CGGradient constructor [audiotoolbox] Implement more pieces Strongly type options for NSFileManager Update Revert the patch, it wont work since we use btouch API1.cs APi2.cs Fix my previous fix [bugfix] I believe we regressed this code at some point, because\nwe are not supposed to pass the sources to the first compilation\nstage, only the contract file and any -s: files (core_sources)\n\nShould fix the issue where we want to add some extension files\nwithotu any hacks More doc frameworks more tools to help debug docs Add NSUrlProtocol and NSUrlProtocolClient APIs Maximum license range Add another convenience method for the run loop Add another convenience method for the run loop [coregraphics] add support for transparency layers Updates for MonoTouch v.Next Fix the buidl [coretext] MonoTouch 4.0 updates Actually define the constants Fix accidental commit [Dlfcn] Expose some members of the class to the public [api] expose the fields for specifying the LineCap and LineJoins Fix build [docs] fix the --appledocs feature, better rendering [docs] autogenerated event documentation docfixer: do not crash on missing docs Add new tool to document some of the generated classes [documentation] expose some methods, so it can be used in other tools Another EventArgs->DelegateName update [maccore] Expose IntPtr handle constructors, to be used by bmac/btouch when binding APIs Add --debug\n\nsvn path=/trunk/moon/; revision=81127 Fix\n\nsvn path=/trunk/moon/; revision=81124 Add support for loading assemblies from the given directory\n\nsvn path=/trunk/moon/; revision=80997 Improve\n\nsvn path=/trunk/moon/; revision=80982 Flush\n\nsvn path=/trunk/moon/; revision=80980 More docs\n\nsvn path=/trunk/moon/; revision=80947 A few docs\n\nsvn path=/trunk/moon/; revision=80946 Add check\n\nsvn path=/trunk/moon/; revision=80945 Use API\n\nsvn path=/trunk/moon/; revision=80944 Add new API to workaround my transparent breakage\n\nsvn path=/trunk/moon/; revision=80943 2007-06-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (expose_event_callback): Introduce a new\n\t\"transparent\" field in the Surface.   If set, we clear the\n\tregion with a transparent region.\n\n\n\nsvn path=/trunk/moon/; revision=80942 i2007-06-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Event handlers will work with or without GdkWindows\n\ton the GtkWindows in preparation to support Larry later.\n\n\tPaint the surface with alpha transparency for now, this breaks the\n\tF-Spot embedding but will be fixed later when we can paint at an\n\toffset, wonder if this will affect performance for now.\n\n\tCall gtk_event_box_set_visible_window () with TRUE, so that we\n\thave a window, for now we require this to get the events working\n\tproperly. \n\t\n\t* canvas.cpp: Drop the translate transform on the topmost canvas\n\tas that was breaking all the code that depended on the inverse\n\tmatrix transform to work for doing coordinate mapping based on the\n\tabsolute_xform. \n\n\tInstead we need to draw the cairo context at the given offset\n\tin the repaint routine.  This is left as an excercise for Larry. \n\n\tTests to validate that the mouse input is working:\n\n\t\t* test/demo.exe: enter/leave\n\t\t* surface demo\n\t\t* silverlight airlines\n\t\t* LunarEclipse designer.\n:w\n\n\nsvn path=/trunk/moon/; revision=80932 i2007-06-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* value.cpp (FreeValue): New method that does the actual releasing\n\tof the value.   We do this here so the managed code can release\n\tthings in the same way.\n\n\t(value_free_value): helper method.\n\n\nsvn path=/trunk/moon/; revision=80925 Move the mopen command to the tools directory.\nAdd automake support for svg2xaml.\nAdd man page for svg2xaml\n\n\nsvn path=/trunk/moon/; revision=80913 Add doc infrastructure\n\nsvn path=/trunk/moon/; revision=80902 Add docs\n\nsvn path=/trunk/moon/; revision=80900 More docs, and samples\n\nsvn path=/trunk/moon/; revision=80899 Add installation\n\nsvn path=/trunk/moon/; revision=80892 Add\n\nsvn path=/trunk/moon/; revision=80890 Add docs, monodocer seems broken though\n\nsvn path=/trunk/moon/; revision=80885 Forgot to commit this\n\nsvn path=/trunk/moon/; revision=80883 Update\n\nsvn path=/trunk/moon/; revision=80882 Add\n\nsvn path=/trunk/moon/; revision=80880 Add desklet library\n\nsvn path=/trunk/moon/; revision=80874 in Airlines now you can select dates, which means we can select also\nthe itinerary and we can get the full animation for the plane.\n\n2007-06-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* control.cpp: When handling events, we also need to pass the\n\tevent notification to the control, not only to the \"real_object\"\n\tthat we are proxying for.   This is what cause the calendar to\n\tmalfunction. \n\n\t* canvas.cpp (GetBounds): Do not use 0, 0, 0, 0 for the bounds of\n\tthe canvas, instead use the point at (0,0) and the width, height\n\twith its absolute transformation.\n\n\tOtherwise canvases with children would end up with\n\t(0,0,0,0) and when compounded would extend the bounding box of\n\tcontaining ones to include this region even when not needed.\n\n\n\nsvn path=/trunk/moon/; revision=80850 Fix\n\nsvn path=/trunk/moon/; revision=80830 Fix\n\nsvn path=/trunk/moon/; revision=80827 i2007-06-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* collection.h: Change of course.   The actual public interface\n\timplements IList<T> and ICollection<T> not IList nor ICollection\n\twhich means that Add does not need to return an index, and Remove\n\tmust return whether it actually removed the object.\n\t\n\n\nsvn path=/trunk/moon/; revision=80825 2007-06-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* collection.h (Add): Make this method return the index of the\n\tobject just created, so we can implement int IList.Add(...).\n\n\tRemoved all the empty Add/Remove methods from collections that\n\twere not doing anything interesting with them, the remaining\n\tchunks of old hacks.\n\t\n\t* (SetVal): This method is used to replace a value at a given\n\tindex with another one.   For the C# IList.this [int] indexer.\n\n\nsvn path=/trunk/moon/; revision=80821 A couple of more methods for IList<T>\n\nsvn path=/trunk/moon/; revision=80815 Mad designer skillz\n\nsvn path=/trunk/moon/; revision=80794 Only handle the click if we press on the 'i' button\n\nsvn path=/trunk/moon/; revision=80792 remove more broken code\n\nsvn path=/trunk/moon/; revision=80787 Revert patch 80782, the culprit were broken desklets that were using threads\n\nsvn path=/trunk/moon/; revision=80785 Fixed, do not use threads, do things the Silverlight way.\n\n\nsvn path=/trunk/moon/; revision=80784 2007-06-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (expose_event_callback): Do not swap cairo contexts\n\there as expose event *is* being called from within\n\tShape::getbounds, some cairo call is triggering the main loop to\n\trun and in particular the expose event to be invoked.\n\n\tWe can not swap the s->cairo here, as it would cause Shape to get\n\ta different one later and issue a restore on the wrong context\n\t(and also access memory that is not allocated to it).\n\n\tI have no idea how the code in ::getbounds would trigger the\n\tmainloop again and the expose handler, but its very well confirmed\n\tthat it is happening.\n\n\n\nsvn path=/trunk/moon/; revision=80782 Use doubles\n\nsvn path=/trunk/moon/; revision=80765 Remove dead code + ensure that we always call cairo_restore here (leave properly)\n\nsvn path=/trunk/moon/; revision=80761 Stupid stupid C++, how could this ever compile?   Stinking piece of junk\n\nsvn path=/trunk/moon/; revision=80742 2007-06-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Cope with the fact that we are now windowless and\n\twe will be sharing the parent's window.   Fixes mouse events.\n\n\nsvn path=/trunk/moon/; revision=80739 2007-06-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* collection.cpp (collection_get_value_at, collection_count): Add\n\tnew methods.\n\nsvn path=/trunk/moon/; revision=80738 update man page\n\nsvn path=/trunk/moon/; revision=80724 Renames\n\nsvn path=/trunk/moon/; revision=80722 Do not install the real plugin here ever, its not supposed to, sorry for the confussion\n\nsvn path=/trunk/moon/; revision=80716 Make this relative\n\nsvn path=/trunk/moon/; revision=80685 Add cute config animation\n\nsvn path=/trunk/moon/; revision=80682 Revert, this was not finsihed\n\nsvn path=/trunk/moon/; revision=80667 Add lameclock sample desklet\n\nsvn path=/trunk/moon/; revision=80666 Up\n\nsvn path=/trunk/moon/; revision=80665 Revert 80600 for now, as it seems that the Silverlight docs are incorrect, or the SilverlightAirlines demo is wrong\n\nsvn path=/trunk/moon/; revision=80651 Remove debugging info\n\nsvn path=/trunk/moon/; revision=80650 Man page for mopen, to assist on the Everaldo Gadget idea\n\nsvn path=/trunk/moon/; revision=80638 update todo\n\nsvn path=/trunk/moon/; revision=80634 Another one\n\nsvn path=/trunk/moon/; revision=80633 Forgot the ChangeLog\n\nsvn path=/trunk/moon/; revision=80627 2007-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Since unrealize does not seem to be called when our\n\twidget is destroyed by Mozilla, we need to cleanup on destroy the\n\ttick event.   This takes care of one of the plugin crashers.\n\n\tThere are still others that I have to find out, I added some\n\tdebugging prints for now.\n\n\nsvn path=/trunk/moon/; revision=80603 i2007-06-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin-proxy.cpp: This is the new entry point for the plugin\n\twhich can be loaded and unloaded as many times as desired, and\n\twill keep the real plugin in $pkgdir/libmoonplugin.so loaded as\n\twell as the Mono VM\n\n\tThis prevents the bugs where the code is unloaded, but we still\n\thave a few places where we are triggering screen updates when the\n\tobjects have gone, those must be tracked down.\n\n\nsvn path=/trunk/moon/; revision=80602 Add directory searching\n\nsvn path=/trunk/moon/; revision=80595 Add more comments\n\nsvn path=/trunk/moon/; revision=80593 Something is missing, dont knwo what though to call runtime_init\n\nsvn path=/trunk/moon/; revision=80592 Add a general purpose XAML loader that we can use to launch apps, broken, dont know why\n\nsvn path=/trunk/moon/; revision=80591 Enable debugging\n\nsvn path=/trunk/moon/; revision=80351 Update\n\nsvn path=/trunk/moon/; revision=80288 Add clear\n\nsvn path=/trunk/moon/; revision=80220 Forgot this\n\nsvn path=/trunk/moon/; revision=80216 2007-06-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Collection): Add new Insert method, and update all\n\tthe callers that overwrote it.   We probably need to cleanup\n\teverything that is doing virtual overrides and is a no-op \n\n\nsvn path=/trunk/moon/; revision=80212 i2007-06-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Implement collection iterators.\n\n\n\nsvn path=/trunk/moon/; revision=80207 2007-06-19  Jackson Harper  <jackson@ximian.com>\n\n\t* xaml.cpp\\runtime.h: Add a public function for setting\n\tproperties, from strings.  Basically a copy and paste of my\n\nsvn path=/trunk/moon/; revision=80183 Set the default background to white\n\nsvn path=/trunk/moon/; revision=80176 Revert 80113 it breaks the managed samples with segfaults\n\nsvn path=/trunk/moon/; revision=80172 i2007-06-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Add support for resizing objects.\n\n\n\nsvn path=/trunk/moon/; revision=80170 Add support for resizing the demo\n\nsvn path=/trunk/moon/; revision=80166 2007-06-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* plugin.h: Eliminate the field canvas, as the managed code can\n\treplace the toplevel and we wont be able to track it.   Access the\n\tfield directly from the surface instead.\n\nsvn path=/trunk/moon/; revision=80106 Keep track of the toplevel element\n\nsvn path=/trunk/moon/; revision=80105 2007-06-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: Create appdomains to keep applications separate\n\tand to keep the IntPtr to the plugin.\n\n\tThe handle to the plugin is stored in agclr in the BrowserHost\n\tclass. \n\n\nsvn path=/trunk/moon/; revision=80097 Add\n\nsvn path=/trunk/moon/; revision=80087 2007-06-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (SetValue): This looks painful, now\n\tDependencyObjects are stored inside the hash but they might\n\tcontain a NULL.   This seems bad.\n\t\n\t(Value): Do not delete null dependency objects.\n\n\tRemove this patch, and try demo.exe, enter/leave/enter, this\n\tcrashes now, because the leave sets the fill to \"null\" and the\n\tenter then tries to access it\n:w\n:q\n\nsvn path=/trunk/moon/; revision=80073 2007-06-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (DownloaderEvent): If the Width/Height have not been\n\tset explicitly, provide them from the images (demo works, but it\n\ttakes a while, due to the idle handler being too busy to be\n\tinvoked).\n\n\n\nsvn path=/trunk/moon/; revision=80049 Add a default for KeySpline\n\nsvn path=/trunk/moon/; revision=80041 2007-06-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Canvas::render):  Cope with rounding from floats to\n\tints, add 2, fixes the droppings in the surface.\n\n\tInclude some of my debugging helpers (you sprinkle\n\tdraw_grid in key places to see whats going on, useful to debug the\n\tbounding boxes and visually inspect if things are right.\n\n\t* media.cpp (getbounds): use the framework width/height not the\n\tpixbuf image size, this shrinks the size of the bounding box.\n\t(getxformorigin): Use it here too.\n\n\nsvn path=/trunk/moon/; revision=80039 2007-06-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (getbounds): use the framework width/height not the\n\tpixbuf image size, this shrinks the size of the bounding box.\n\nsvn path=/trunk/moon/; revision=80038 Add\n\nsvn path=/trunk/moon/; revision=79977 Add test\n\nsvn path=/trunk/moon/; revision=79976 oops\n\nsvn path=/trunk/moon/; revision=79965 Forgotten fine, and remove debugging output\n\nsvn path=/trunk/moon/; revision=79962 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* brush.cpp (brush_init): Create a BRUSH property called\n\t\"FrameChange\", it is internal and the sole use of it is so that\n\tupper layers that care about brush changes act on it by updating\n\ttheir elements.\n\n\nsvn path=/trunk/moon/; revision=79961 Thinko, duh\n\nsvn path=/trunk/moon/; revision=79956 fix\n\nsvn path=/trunk/moon/; revision=79955 Same fix as in agclr, do not use auto-marhsalling as that frees the strings\n\nsvn path=/trunk/moon/; revision=79953 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (UIElement::OnSubPropertyChanged): Changes on\n\tbrushes only trigger an invalidate, there is no need to recompute\n\tbounds. \n\n\nsvn path=/trunk/moon/; revision=79952 Another quick test\n\nsvn path=/trunk/moon/; revision=79950 Add gtksilver to the gac, its starting to bite folks\n\nsvn path=/trunk/moon/; revision=79949 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\tThe surface rotate and translate controls should both work, and\n\tthe enter/leave events are now correct.\n\t\n\t* runtime.cpp (UIElement::handle_motion, handle_button): Change\n\tthe semantics to better match Silverlight.   Now these methods\n\tshould check if the mouse is inside their region before calling\n\tthe callback.\n\n\tThis is necessary because children of the canvas (and panel) are\n\twithin the confines of the bounding box, but the canvas can be\n\tsmaller than that.   The canvas is a container whose boundaries\n\tare only used for paiting, children might be outside of these\n\tboundaries.\n\n\tIt is necessary in these cases to pass the events to all the\n\tchildren within the canvas bounding box and for each child to\n\tdetermine if the event was within its range. \n\n\t(inside_object): replaced the default implementation for\n\tFrameworkElements with a more performing version: instead of\n\tmapping the point and using cairo_in_stroke and in_fill operations\n\ton a rectangle with mapped coordinates, we map the coordinates and\n\tcheck against the rectangle.\n\n\t(Canvas::getbounds): if we are the topmost canvas, the boundaries\n\tare those from the Surface, not the ones that include the maximum\n\textent from the children.   Used to do precise mouse enter/leave. \n\n\nsvn path=/trunk/moon/; revision=79941 Some stuff to help me debug the events\n\nsvn path=/trunk/moon/; revision=79939 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\tPropagate changes from children of the transform up to our\n\tcontainers, this is done in several steps:\n\n\t* runtime.cpp (DependencyObject::Attach, Detach): New methods that\n\tare used to attach an object to a container and detach it.   They\n\twere previously inlined inside SetValue.\n\n\t(Collection::Add, Remove): Attach and detach objects when they are\n\tadded/removed. \n\t\n\t* transform.cpp (Transform::OnPropertyChanged): if any class\n\tderived from Transform has one of its properties changed, it\n\thas a visual effect, propage this to the attacchees.\n\n\t(TransformGroup::OnSubPropertyChanged): Escalate here as well,\n\tthis will catch the messages coming from anyone in the collection\n\tto its container. \n\n\t(TransformCollection::OnSubPropertyChanged): Buble the event up\n\there as well.\n\n\nsvn path=/trunk/moon/; revision=79925 remove debug\n\nsvn path=/trunk/moon/; revision=79922 Fix these two\n\nsvn path=/trunk/moon/; revision=79921 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp (p_downloader_send): Some tidbits for the plugin\n\tdownload, not complete.\n\n\nsvn path=/trunk/moon/; revision=79915 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (handle_motion): Change the order in which we send\n\tthe events to the UIElement, we should start at the topmost\n\telement, and have the toplevel canvas be last.\n\n\nsvn path=/trunk/moon/; revision=79914 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (GetValueNoDefault): This is necessary so we can\n\tdistinguish a value that has been explicitly set from one that has\n\tnot.\n\n\nsvn path=/trunk/moon/; revision=79911 Change the SearchFieldCell to Cell/New;   Fix MinValue for NSSlider from Clancey Add a strongly typed version Comment out code that makes us crash Improve sample A couple of NullAlloweds Update sample Fix a crash if one of the accessors is missing Strongly type another method Hook up Patch from James Clancey for the keys Add a few connections (window is the important one, it instantiates the toplevel on startup Add QTRecorder sample Fix the sample Add new overloads Remove unused code Drop repeated code Add support for closing the window Use NSDocument-based StillMotion program, we get load/save for free Use NSDocument-based StillMotion program, we get load/save for free Fix comment Small API touchup Now that we support out parameters in the bindings, expose a number of APIs that were hidden before Now that we support out parameters in the bindings, expose a number of APIs that were hidden before Add an NSDocument sample Fix from Alexander Shulgin that allows nulls in some parameters Add more strongly typed methods Update sample to new API Add helper to QTTrack as well Add some strong type APIs instead of the NSDictionary ways Add some strong type APIs instead of the NSDictionary ways Add some strong type APIs instead of the NSDictionary ways Update sample Keys for QTMovie, hook CIImage properly Add StillMotion sample for Kangaroo Add CoreVideo bindings, extra classes for QTKit Add more constructors Add most of the missing stuff Add support for video capture to QTKit Add new sample from Kenneth Added new sample from Kenneth WebDocumentView is a protcol, not a class Add NSAction overloads to BeginSheet methods Add changes from Alexander for WebKit Add DomNode's event support from Alexander Shulgin Add Simple animation Small style touchups Add animatingviews Removed Move one dir up Strongly type the Modifier Flags Add sample Apply patch from Kenneth kjpou1 <kjpou@pt.lu>\n\nNSRulerView\n\n   add NullAllowed\n\nNSColor\n\n  Added Static to black color so it could be referenced in programs.\n\nNSGraphics\n\tNew APIs Simpler overload Allow nulls in a few methods Add new overload one line contrib Updated documentation Updated documentation Flag the NSStatusItem .ctor as private Add support for creating the NSMenuItems Add support for the PDF Dictionary, Array and Stream gitignores Flush Add enumerators, patch from Alexander Shulgin Add enumerators, patch from Alexander Shulgin Add Alexander's Shulgin alexander.shulgin@yessoftware.com C# 3.0-ify Add the NSAnimatablePropertyContainer methods to NSView and NSWindow;   Add missing NSString keys Add RectangleF extension methods Build from the makefile Add new sample from Kenneth Fix Patches from Kenneth kjpou@pt.lu Add NSDrawer delegate methods, contribution from Kenneth <kjpou@pt.lu> Update enums from Kenneth <kjpou@pt.lu> Use strong enum Use CGImageDestination New helpers from Pavel Update makefile updated sample from Pavel Add new enums from Pavel gitignores Further fixes to the broken merge Fix broken merge Revert Revert assembly name change More work on Security Bind another class for MonoDevelop Use new Security bindings Fix API Update docs Fix build Progress indicator Add more bindings.\nAdd missing constructors.\nStrong type some OpenGL values. API fixification Add Activated event handler for NSControl, which will bring love to NSButton users Add NSOpenPanel and NSSavePanel obsolete methods in 10.6\n\t-> Lets code run on 10.5 systems\n\nAdd NSSavePanel completion-based APIs as well (10.6)\n\nFix casing of URL -> Url Merge branch 'master' of github.com:mono/monomac Propagate the constructor for NSTextField's Add CoreLocation support Merge pull request #977 from jasonleenaylor/bug-18558\n\nFix for Bug 18558 [UnixRegistry] Fix leak (#25559), remove races.\n\nThere was a memory leak caused by not having a lookup mechanism for\nthe RegistryKey.  In addition, the entire code to dispose code was\nnever used (due to the leak), and it was wrong.\n\nIn addition, added locking to the \"values\" field, which currently was\nracy.\n\nNo test cases, the repro is to run the above code for about 5 minutes. Merge pull request #1155 from steffen-kiess/json-string\n\nFix System.Json string handling and make order of JsonObject entries deterministic [System.ServiceModel.Web/WebMessageFormatter] Fix OperationContracts with void returns\n\nWebMessageFormatter crashes when the OperationContracts had a void return type.\n\nFixes #20764, patch from <renee_geoffrion@hotmail.com> [Registry] Revert 826060172f668401a8e69e7ec7fc7e838941c556 until I fix the regression Style consistency with the rest of Mono's code [UnixRegistry] Fix leak (#25559), remove races.\n\nThere was a memory leak caused by not having a lookup mechanism for\nthe RegistryKey.  In addition, the entire code to dispose code was\nnever used (due to the leak), and it was wrong.\n\nIn addition, added locking to the \"values\" field, which currently was\nracy.\n\nNo test cases, the repro is to run the above code for about 5 minutes. [SslClientStream] Prevent crashes when a connection is closed\n\nWhen a socket has been closed as part of the negotiation, the\nSendAlert method would crash when trying to reuse the socket.\n\nAdd try/catch around this to prevent this.\n\nFixes #19334 Merge pull request #1584 from zevane/patch-2\n\nLimit the lock to the writing operation [Serial] Add support for high baud rates to MacOS [serial,signal] Add support for Linux arbitrary baud rates + drop Apple legacy poll support\n\nThis patch brings support for arbitrary baud rates in Linux, from patch:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=8207\n\nWhich has been MIT licensed (see mono-devel-list).\n\nIn addition, while testing the patch, discovered that we are using\nfakepoll.h on MacOS which was there to support Tiger-era broken poll\nimplementations.\n\nThe details about the lack of poll support come from this document\nthat is now only available on web.archive.org:\n\nhttp://web.archive.org/web/20030604064847/http://developer.apple.com/technotes/tn2002/tn2071.html\n\nAnd the original Mono bug that reported the problem in 2008, followed\nby the fixes is reported and discussed here:\n\nhttps://bugzilla.novell.com/show_bug.cgi?id=384227\n\nThe source of the problem, confirmed by an Apple employee at the time\n(form the bug) is that poll sometimes results in returning POLLHUP\nwhen a POLLIN was expected:\n\nhttp://curl.haxx.se/mail/lib-2005-05/0122.html\n\nThis web site tracks the behavior of poll (POLLHUP and POLLIN) across\nPosix implementations when you reach an end of file:\n\nhttp://www.greenend.org.uk/rjk/tech/poll.html Merge pull request #1582 from zevane/patch-1\n\nMake the class thread-safe Bring referencesource messages that were just published by Microsoft Merge pull request #1563 from directhex/emit-nunit-xml-in-unmanaged-tests\n\nGenerate NUnit interpretation of whether \"mono --regressions\" passed Merge pull request #1542 from ninjarobot/UriTemplateMatchException\n\nFix to UriTemplate.Match to properly handle query parameters without a v... [System.ServiceModel] Prevent server crash when client disconnect\n\nThis patch is an updated version of a pull request (377) from Rob\nWilkens to fix #5926 Fix the build [monop] Port to use IKVM.Reflection, add -xi and -xa options to easily lookup Xamarin.Android and Xamarin.iOS types Merge pull request #1552 from mono/ms-decimal\n\nBring the CoreCLR Decimal support to Mono. Make referencesource point to mono/referencesource's mono branch [Decimal] Remove old decimal from the metadata directory Remove old implementation of Decimal support, it served us well Merge branch 'master' into ms-decimal [Decimal] Add test cases from the bugs that this branch fixes [Decimal] Expand test suite with Microsoft's CoreFX Decimal tests [Decimal] Fix another missing cast, makes the entire Mono test suite pass [Decimal] Set the reserved field, fix signed to unsigned cast mistakes from the port, document places where MS does not explicitly set reserved;   Down to 1 failure [Decimal] Fix enumeration values, down to 2 failures Merge pull request #1550 from tpetazzoni/mips-fix\n\nmono-context.h: fix build on MIPS [Decimal] Fix structure definitions, down to 3 failures from Mono test suite [Decimal] Down to six failures in Mono's test suite [Decimal] Fix basic decimal startup issues [Build] Make the code build with old bootstrapped environments [Decimal] Fix the build for unresolved symbols with some C compilers Merge pull request #1548 from akoeplinger/stubs\n\n[bcl] Added a few stubs for missing APIs [Decimal] Completed the methods in decimal-ms.c\n\nThis completes the list of methods in decimal-ms.c that are surfaced\nto the Decimal class.  This change also swaps out the Decimal class\nfrom Mono to the Microsoft implementation.\n\nThis has not been tested yet, beyond the compiler being able to read\ndecimals (it did crash without it).\n\nCoreCLR has two different bits of code for SearchScale, it looks like\none is just old and has not been updated.  Moved to the new one, and\nupdated the code to pass the extra data that is missing from the\nformer one. [decimal] Microsoft's unmanaged code for decimal support\n\nThis is a port of the CoreCLR Decimal support to C and to the Mono\ncoding conventions.  In the process of porting the code, I removed a\nbunch of COM-isms and some Windows-isms that were just workaround with\ncompatibility typedefs and replaced it instead with stdint.h data\ntypes as well as Mono assertions.\n\nThere are still a few methods missing, and the managed library is not\nplugged yet (both constructors likely need to be altered to be managed\nproxies to the init method). Start work to generate dependencies Updated the order file generated by following the instructions in msvc/scripts/README Add more detail [lldb] Document and install the mono.py file for LLDB [FtpWebRequest] Add test for bug #26312, issue was fixed by bringing .NET's implementation [System] ComponentModel, make it build in the MOBILE profile [Mono.Posix] Add overloads to pass ints and pointers [Regex] Disable IL code generation until we figure out 25671 [Mono.Posix] Add support for OSX F_NOCACHE Merge pull request #1495 from akoeplinger/fix-cancelrequestviaproxy\n\n[System.Net.Http] Fix CancelRequestViaProxy() test that intermittently fails on Jenkins [Windows.Forms] DataGridViewTextBoxCell: do not use a shared editing control\n\nThis fixes the case of the System.ObjectDisposedException being thrown\nwhen editing a text cell in a DataGridView control a second time.\n\nThe problem is that the static control would be disposed by the code in\nDataGridView's EditingControlInternal, but this instance was reused over\nand over.\n\nInstead, we now createa  new editing control every time that the TextBoxCell\nis created.\n\nThe investigation for this bug took place here:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=9653\n\nFixes also:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=22297 [System.IO.Compression.FileSystem] Fix infinite loop in ZipFile.Open(string,ZipArchiveMode) [Mono.DataConverter] Make it easier to use in PCL libraries [System.Runtime.Serialization] Further baby steps [System.Runtime.Serialization] Dip toes into using ReferenceSource [Console/TerminfoDriver] Look in the TERMINFO directory if set [System/SR] Brings some strings from .NET Core\n\nUsed the following script to do this:\n\nvar d = XDocument.Load (\"Strings.resx\");\nforeach (var j in d.XPathSelectElements (\"/root/data\")){ var v = j.XPathSelectElement (\"value\"); Console.WriteLine (\"\\tpublic const string {0}=\\\"{1}\\\";\", j.Attribute (\"name\").Value, v.Value); } [Console] Updated to terminfo renderer.\n\nThis brings .NET's parameterized terminfo renderer, various fixes and\nsemantic changes.\n\nThe existing implementation of the Console did not have a proper an\nimplementation of terminfo's parameterized sequences.  Instead of\nthis, a collection of hacks existed to hardcode both light colors and\ncursor position.  These are now gone, since the parameterized strings\ndo contain the correct values for this.\n\nThe search path for terminfo now picks the most modern location for\nterminfo.   With the old paths in place.\n\nThe lookup for terminfo databases only supported the lookup based on\nthe first character of a terminal, so for example, for xterm this was\n$terminfo_dir/x/xterm, but OSX and maybe other systems now store the\nfiles in $terminfo_dir/78/xterm (where 78 is the hex representation of\n'x', the first letter of the terminal name).\n\nThe fallback is still in place for other Unix systems.\n\nWe no longer use the built-in terminfo databases as the first pick,\ninstead we try to load the system terminfo database before we use the\nbuilt-in versions.\n\nWorth figuring out if we want to remove the two built-in ones (Linux\nand xterm) as broken terminfo databases are no longer the norm in Unix\nand just keep the ansi one as a database of last resort.\n\nThis means that the console actually now gets high colors on MacOS,\nnot just Linux.\n\nThis also fixes the issue with consoles with more than 256 colors.  As\nreported in bug 18315. Merge pull request #1430 from akoeplinger/readme\n\nImprove README.md and focus on relevant content [System] Make it build with the MonoTouch profile Drop dead notes/code Merge pull request #1426 from ignacionr/webclient-delay-file-creation\n\nWebclient delay file creation Merge pull request #1398 from jwestfall69/dgv-first_row_index\n\n[MWF] DataGridView: ensure first_row_index will be valid after row removal Merge pull request #1396 from jwestfall69/dgvrc-clear-speedup\n\n[MWF] DataGridViewRowCollection Clear() speed up Remove Mono's previous System.Text.RegularExpressions [System] Bring tests for open bugs on RegularExpressions that have now been fixed Add newline [System] Bring .NET implementation of System.Text.RegularExpressions\n\nThis patch brings .NET's implementation of the RegularExpressions\nstack and brings some of the supporting infrastructure required to\nbuild without resource files.\n\nThe build commands have been updated with two new defines to assist in\nbringing .NET code: MONO (to indicate that the code is being compiled\nas part of Mono) and a more granular DISABLE_CAS_USE that is used to\nmark regions where Code Access Security is being used in the source\ncode, as Mono does not actually ship with a working CAS implementation. Merge pull request #1417 from directhex/fix_msvc_build\n\n[msvc] Add a definition for _WIN32_WINNT to MonoPosixHelper Add referencesource submodule Merge pull request #1415 from ermshiperete/FixTruncatedButton\n\n[MWF] Fix bug that truncates button text Merge pull request #1390 from woodsb02/FreeBSDMacNetworkInterfaces\n\nFreebsd to use Mac NetworkInterface code instead of Linux NetworkInterface code Merge pull request #1394 from kjpou1/master\n\nFix GetUsing to output the using name instead of -> using Mono.CSharp.Na... Merge pull request #1363 from martinjt/AddMembershipPasswordAttribute\n\nAdded the MembershipPasswordAttribute class and associated unit tests Merge pull request #1347 from ermshiperete/ImproveEllipsisHandling\n\n[MWF] Improve ellipsis handling [asp.net] Implement the EventHandlerTaskAsyncHelper and HttpTaskAsyncHandler classes;  Manually bring Pull Request 1365 from Kornel Pal Merge pull request #1371 from martinjt/AddClientDisconnectedToken\n\nAdd ClientDisconnectedToken property to HttpResponseBase and Wrapper as ... Set ReadEntityBodyMode default to Classic to force clients to use the old method\nfor reading the input stream.\n\nAccording to the MSDN docs, if ReadEntityBodyMode returns \"Classic\" the code should use\nthe old method to read the input stream (HttpRequestBase.InputStream) which is fully\nimplemented in mono.\n\nManually applied patch from martinjt [asp.net] Implement the EventHandlerTaskAsyncHelper and HttpTaskAsyncHandler classes;  Manually bring Pull Request 1365 from Kornel Pal Merge pull request #1163 from AerisG222/more_mvc_fixes\n\nAdd missing elements to allow MVC5.2 site to run Merge pull request #960 from ermshiperete/ShowHelp\n\n[MWF] Partially implement Help.ShowHelp Re-apply the patch, there isa  fix for it Revert this patch, as it broke the test suite Merge pull request #1337 from RyanMelenaNoesis/master\n\nAdditional JWT Security Token Support Merge pull request #1368 from martinjt/SuppressFormsAuthRedirect\n\nImplement the SuppressFormsAuthenticationRedirect properties Merge pull request #1348 from ermshiperete/ImproveButtonTextLayout\n\n[MWF] Improve button text layout Merge pull request #1357 from emergent-design/master\n\nInclude /dev/ttyACM in the search for serial port devices Merge pull request #1362 from echampet/dupfix\n\nWebapp stuck with \"Key duplication when adding: httpModules\" Merge pull request #1354 from martinjt/RequestAbort\n\nImplement Request.Abort() Merge pull request #1353 from martinjt/ReadEntityBodyMode\n\nImplement the ReadEntityBodyMode properties Merge pull request #1307 from esdrubal/servicemodelrss\n\nRss20ItemFormatter.ReadFrom now sets Id when guid is PermaLink. Merge pull request #1304 from slluis/mac-proxy-autoconfig\n\n[System.Net] Add support for .pac proxy config scripts on mac [System] Fix most warnings on the System test suite Fix warnings in mscorlib's Test suite + bring a couple more tests + fix thread rename test Merge pull request #1295 from nealef/master\n\nAdd SqlCredential support to SqlClient/Tds Merge pull request #1245 from StephenMcConnel/bug-22483\n\nFix scrolling in SWF.ListView.EnsureVisible(int index) Merge pull request #1287 from akoeplinger/fix-appconfig-performancecounters\n\n[System] Add performanceCounters element to System.Diagnostics app.config configuration section Merge pull request #1290 from directhex/master\n\nPut KeyPairPersistence load into a try{}catch{} block. Merge pull request #1273 from joelmartinez/docs-unified-fix\n\nbugfix for mdoc update with --dropns feature Bring fix for Cecil, includes fix for F#/Fody Merge pull request #1189 from joelmartinez/docs-64bit-squash\n\nMDoc and monodoc.dll changes to support iOS 64Bit API Merge pull request #1192 from LogosBible/regex-fixes-21803\n\nRegex substring fix Fix fallout from WebSocketMessageType change.\n\nThe WebSocketMessageType values were being used to send data over the\nwire.  This is likely the reason why WebSocketMessageType had values\nthat were not compatible with .NET. binding, another method that needs to be public Make these public so we can bind stuff Add support for -lib parameter Add barebones structure [generator] MonoTouch still uses Mono 2.6 [generator] Support out/ref parameters on C# events that we generate from Objective-C delegate classes Improve error message [cleanup] Ensure that we use DelegateName where it was required Fix generator to support DelegateName [nsindexset] Couple of friendly overloads [foundation] new file to holds a bunch of ToString methods [generator] improve error message [generator] fix to support the DelegateName [generator] Introduce DelegateName to stop overloading the meaning of EventArgs\n\nPreviously we used the EventArgs attribute for two purposes, to name the\nEventArgs class created when we pack arguments for events raised by\nour generated C# event wrappers for Objective-C delegates and also to\nname the C# delegate used for signatures when instead of an event, we\nuse a property.\n\nUse a separate attribute for those cases to resolve the confusion [docs] add support for pulling the first phrase as a summary Make NSIndexSet an IEnumerable Remove APIs not available on desktop [maccore] Few documentation fixes for MonoTouch/MonoMac [maccore] Few documentation fixes for MonoTouch/MonoMac [docs] Add docfixer Missign string overload body Add strong typed overloads [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer [monomac, coreanimation] Add support for the overloaded Font property on CATextLayer Add Invert operation [fix] nsobject or subclasses of it return the same [NSArray] Add new overloads [bindings] Allow objects to be used in places where NSObjects are required [NSObject] Add a wrapper function that turns objects into NSObjects Add NSIndexSet from James Clancey oops Keep the old code around, until we release 0.5 Add awesome overload, feedback from Jackson Soptimize Add helper ctor Add helper ctor Fix API Add PDF Context creation APIs Add NSPredicate and NSMetadata support from Kenneth Pouncey Comment out deprecated APIs Give preference to NSString versions of this API Add Add strongly typed API for NSRunLoop Remove duplicated methods, they live in CGGeometry.cs API beautification Add NSError constructors, domain strings and error keys Sequentialificate the struct Add basic support for CoreVideo Add a couple more overloads ContainsKey in NSMutableDictionary seems to have always been wrong ContainsKey in NSMutableDictionary seems to have always been wrong Add NSKeyValueBindingCreation binding from Kenneth J. Pouncey Add the methods that I had removed (by accident?) Add key Add fix to the NSMutableDictionary Add some missing fields Add a couple of helper methods to NSArray Add some useful overloads Add support for private default constructors Fix name Fix Allow building this Add Array, Dictionary and Stream to the PDF support use the AppKit equivalents in NSValue on OSX Add extension methods to RectangelF class Fixes and improvements to the API as part of the audit Update API Helper methods Fix API signature Strong type this API Fix namespace Add enum Support internal fields Add a new constructor for CTFont Add TODO file Add CGImageDestination Avoid doing any work if the class is used, only if we actually call the ToDictionary method Implement most of CGImageSource, fix the previous implementation Allow nulls here Fix signature for InsertNewObjectForEntityForName, it should return an NSObject Add CGFont.CreateFromProvider API make this static CoreText updates from iOS 4.2 Expose ValueData, fix AttrGeneric type, fix MonoTouch support These are static OSX is limited to a single class;  Add/Update/Remove APIs More work on the KeyChain API Merge branch 'master' of github.com:mono/maccore Clean this API, it was just terrible to expose keys nested as keys inside custom classes;   Instead use enums and map internally to the values More work on the Security stack More work on the Security stack More progress on the Security binding API, most queries are there, missing add/update/remove and one query model Fix warnings Add more bindings to Security framework add Add more code for the certificate handling Add key-value coding support to NSObject, and fix the build Add Security framework Fix enum value, add missing fields Merge pull request #1155 from steffen-kiess/json-string\n\nFix System.Json string handling and make order of JsonObject entries deterministic [System.ServiceModel.Web/WebMessageFormatter] Fix OperationContracts with void returns\n\nWebMessageFormatter crashes when the OperationContracts had a void return type.\n\nFixes #20764, patch from <renee_geoffrion@hotmail.com> [Registry] Revert 826060172f668401a8e69e7ec7fc7e838941c556 until I fix the regression Style consistency with the rest of Mono's code [UnixRegistry] Fix leak (#25559), remove races.\n\nThere was a memory leak caused by not having a lookup mechanism for\nthe RegistryKey.  In addition, the entire code to dispose code was\nnever used (due to the leak), and it was wrong.\n\nIn addition, added locking to the \"values\" field, which currently was\nracy.\n\nNo test cases, the repro is to run the above code for about 5 minutes. [SslClientStream] Prevent crashes when a connection is closed\n\nWhen a socket has been closed as part of the negotiation, the\nSendAlert method would crash when trying to reuse the socket.\n\nAdd try/catch around this to prevent this.\n\nFixes #19334 Merge pull request #1584 from zevane/patch-2\n\nLimit the lock to the writing operation [Serial] Add support for high baud rates to MacOS [serial,signal] Add support for Linux arbitrary baud rates + drop Apple legacy poll support\n\nThis patch brings support for arbitrary baud rates in Linux, from patch:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=8207\n\nWhich has been MIT licensed (see mono-devel-list).\n\nIn addition, while testing the patch, discovered that we are using\nfakepoll.h on MacOS which was there to support Tiger-era broken poll\nimplementations.\n\nThe details about the lack of poll support come from this document\nthat is now only available on web.archive.org:\n\nhttp://web.archive.org/web/20030604064847/http://developer.apple.com/technotes/tn2002/tn2071.html\n\nAnd the original Mono bug that reported the problem in 2008, followed\nby the fixes is reported and discussed here:\n\nhttps://bugzilla.novell.com/show_bug.cgi?id=384227\n\nThe source of the problem, confirmed by an Apple employee at the time\n(form the bug) is that poll sometimes results in returning POLLHUP\nwhen a POLLIN was expected:\n\nhttp://curl.haxx.se/mail/lib-2005-05/0122.html\n\nThis web site tracks the behavior of poll (POLLHUP and POLLIN) across\nPosix implementations when you reach an end of file:\n\nhttp://www.greenend.org.uk/rjk/tech/poll.html Merge pull request #1582 from zevane/patch-1\n\nMake the class thread-safe Bring referencesource messages that were just published by Microsoft Merge pull request #1563 from directhex/emit-nunit-xml-in-unmanaged-tests\n\nGenerate NUnit interpretation of whether \"mono --regressions\" passed Merge pull request #1542 from ninjarobot/UriTemplateMatchException\n\nFix to UriTemplate.Match to properly handle query parameters without a v... [System.ServiceModel] Prevent server crash when client disconnect\n\nThis patch is an updated version of a pull request (377) from Rob\nWilkens to fix #5926 Fix the build [monop] Port to use IKVM.Reflection, add -xi and -xa options to easily lookup Xamarin.Android and Xamarin.iOS types Merge pull request #1552 from mono/ms-decimal\n\nBring the CoreCLR Decimal support to Mono. Make referencesource point to mono/referencesource's mono branch [Decimal] Remove old decimal from the metadata directory Remove old implementation of Decimal support, it served us well Merge branch 'master' into ms-decimal [Decimal] Add test cases from the bugs that this branch fixes [Decimal] Expand test suite with Microsoft's CoreFX Decimal tests [Decimal] Fix another missing cast, makes the entire Mono test suite pass [Decimal] Set the reserved field, fix signed to unsigned cast mistakes from the port, document places where MS does not explicitly set reserved;   Down to 1 failure [Decimal] Fix enumeration values, down to 2 failures Merge pull request #1550 from tpetazzoni/mips-fix\n\nmono-context.h: fix build on MIPS [Decimal] Fix structure definitions, down to 3 failures from Mono test suite [Decimal] Down to six failures in Mono's test suite [Decimal] Fix basic decimal startup issues [Build] Make the code build with old bootstrapped environments [Decimal] Fix the build for unresolved symbols with some C compilers Merge pull request #1548 from akoeplinger/stubs\n\n[bcl] Added a few stubs for missing APIs [Decimal] Completed the methods in decimal-ms.c\n\nThis completes the list of methods in decimal-ms.c that are surfaced\nto the Decimal class.  This change also swaps out the Decimal class\nfrom Mono to the Microsoft implementation.\n\nThis has not been tested yet, beyond the compiler being able to read\ndecimals (it did crash without it).\n\nCoreCLR has two different bits of code for SearchScale, it looks like\none is just old and has not been updated.  Moved to the new one, and\nupdated the code to pass the extra data that is missing from the\nformer one. [decimal] Microsoft's unmanaged code for decimal support\n\nThis is a port of the CoreCLR Decimal support to C and to the Mono\ncoding conventions.  In the process of porting the code, I removed a\nbunch of COM-isms and some Windows-isms that were just workaround with\ncompatibility typedefs and replaced it instead with stdint.h data\ntypes as well as Mono assertions.\n\nThere are still a few methods missing, and the managed library is not\nplugged yet (both constructors likely need to be altered to be managed\nproxies to the init method). Start work to generate dependencies Updated the order file generated by following the instructions in msvc/scripts/README Add more detail [lldb] Document and install the mono.py file for LLDB [FtpWebRequest] Add test for bug #26312, issue was fixed by bringing .NET's implementation [System] ComponentModel, make it build in the MOBILE profile [Mono.Posix] Add overloads to pass ints and pointers [Regex] Disable IL code generation until we figure out 25671 [Mono.Posix] Add support for OSX F_NOCACHE Merge pull request #1495 from akoeplinger/fix-cancelrequestviaproxy\n\n[System.Net.Http] Fix CancelRequestViaProxy() test that intermittently fails on Jenkins [Windows.Forms] DataGridViewTextBoxCell: do not use a shared editing control\n\nThis fixes the case of the System.ObjectDisposedException being thrown\nwhen editing a text cell in a DataGridView control a second time.\n\nThe problem is that the static control would be disposed by the code in\nDataGridView's EditingControlInternal, but this instance was reused over\nand over.\n\nInstead, we now createa  new editing control every time that the TextBoxCell\nis created.\n\nThe investigation for this bug took place here:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=9653\n\nFixes also:\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=22297 [System.IO.Compression.FileSystem] Fix infinite loop in ZipFile.Open(string,ZipArchiveMode) [Mono.DataConverter] Make it easier to use in PCL libraries [System.Runtime.Serialization] Further baby steps [System.Runtime.Serialization] Dip toes into using ReferenceSource [Console/TerminfoDriver] Look in the TERMINFO directory if set [System/SR] Brings some strings from .NET Core\n\nUsed the following script to do this:\n\nvar d = XDocument.Load (\"Strings.resx\");\nforeach (var j in d.XPathSelectElements (\"/root/data\")){ var v = j.XPathSelectElement (\"value\"); Console.WriteLine (\"\\tpublic const string {0}=\\\"{1}\\\";\", j.Attribute (\"name\").Value, v.Value); } [Console] Updated to terminfo renderer.\n\nThis brings .NET's parameterized terminfo renderer, various fixes and\nsemantic changes.\n\nThe existing implementation of the Console did not have a proper an\nimplementation of terminfo's parameterized sequences.  Instead of\nthis, a collection of hacks existed to hardcode both light colors and\ncursor position.  These are now gone, since the parameterized strings\ndo contain the correct values for this.\n\nThe search path for terminfo now picks the most modern location for\nterminfo.   With the old paths in place.\n\nThe lookup for terminfo databases only supported the lookup based on\nthe first character of a terminal, so for example, for xterm this was\n$terminfo_dir/x/xterm, but OSX and maybe other systems now store the\nfiles in $terminfo_dir/78/xterm (where 78 is the hex representation of\n'x', the first letter of the terminal name).\n\nThe fallback is still in place for other Unix systems.\n\nWe no longer use the built-in terminfo databases as the first pick,\ninstead we try to load the system terminfo database before we use the\nbuilt-in versions.\n\nWorth figuring out if we want to remove the two built-in ones (Linux\nand xterm) as broken terminfo databases are no longer the norm in Unix\nand just keep the ansi one as a database of last resort.\n\nThis means that the console actually now gets high colors on MacOS,\nnot just Linux.\n\nThis also fixes the issue with consoles with more than 256 colors.  As\nreported in bug 18315. Merge pull request #1430 from akoeplinger/readme\n\nImprove README.md and focus on relevant content [System] Make it build with the MonoTouch profile Drop dead notes/code Merge pull request #1426 from ignacionr/webclient-delay-file-creation\n\nWebclient delay file creation Merge pull request #1398 from jwestfall69/dgv-first_row_index\n\n[MWF] DataGridView: ensure first_row_index will be valid after row removal Merge pull request #1396 from jwestfall69/dgvrc-clear-speedup\n\n[MWF] DataGridViewRowCollection Clear() speed up Remove Mono's previous System.Text.RegularExpressions [System] Bring tests for open bugs on RegularExpressions that have now been fixed Add newline [System] Bring .NET implementation of System.Text.RegularExpressions\n\nThis patch brings .NET's implementation of the RegularExpressions\nstack and brings some of the supporting infrastructure required to\nbuild without resource files.\n\nThe build commands have been updated with two new defines to assist in\nbringing .NET code: MONO (to indicate that the code is being compiled\nas part of Mono) and a more granular DISABLE_CAS_USE that is used to\nmark regions where Code Access Security is being used in the source\ncode, as Mono does not actually ship with a working CAS implementation. Merge pull request #1417 from directhex/fix_msvc_build\n\n[msvc] Add a definition for _WIN32_WINNT to MonoPosixHelper Add referencesource submodule Merge pull request #1415 from ermshiperete/FixTruncatedButton\n\n[MWF] Fix bug that truncates button text Merge pull request #1390 from woodsb02/FreeBSDMacNetworkInterfaces\n\nFreebsd to use Mac NetworkInterface code instead of Linux NetworkInterface code Merge pull request #1394 from kjpou1/master\n\nFix GetUsing to output the using name instead of -> using Mono.CSharp.Na... Merge pull request #1363 from martinjt/AddMembershipPasswordAttribute\n\nAdded the MembershipPasswordAttribute class and associated unit tests Merge pull request #1347 from ermshiperete/ImproveEllipsisHandling\n\n[MWF] Improve ellipsis handling [asp.net] Implement the EventHandlerTaskAsyncHelper and HttpTaskAsyncHandler classes;  Manually bring Pull Request 1365 from Kornel Pal Merge pull request #1371 from martinjt/AddClientDisconnectedToken\n\nAdd ClientDisconnectedToken property to HttpResponseBase and Wrapper as ... Set ReadEntityBodyMode default to Classic to force clients to use the old method\nfor reading the input stream.\n\nAccording to the MSDN docs, if ReadEntityBodyMode returns \"Classic\" the code should use\nthe old method to read the input stream (HttpRequestBase.InputStream) which is fully\nimplemented in mono.\n\nManually applied patch from martinjt [asp.net] Implement the EventHandlerTaskAsyncHelper and HttpTaskAsyncHandler classes;  Manually bring Pull Request 1365 from Kornel Pal Merge pull request #1163 from AerisG222/more_mvc_fixes\n\nAdd missing elements to allow MVC5.2 site to run Merge pull request #960 from ermshiperete/ShowHelp\n\n[MWF] Partially implement Help.ShowHelp Re-apply the patch, there isa  fix for it Revert this patch, as it broke the test suite Merge pull request #1337 from RyanMelenaNoesis/master\n\nAdditional JWT Security Token Support Merge pull request #1368 from martinjt/SuppressFormsAuthRedirect\n\nImplement the SuppressFormsAuthenticationRedirect properties Merge pull request #1348 from ermshiperete/ImproveButtonTextLayout\n\n[MWF] Improve button text layout Merge pull request #1357 from emergent-design/master\n\nInclude /dev/ttyACM in the search for serial port devices Merge pull request #1362 from echampet/dupfix\n\nWebapp stuck with \"Key duplication when adding: httpModules\" Merge pull request #1354 from martinjt/RequestAbort\n\nImplement Request.Abort() Merge pull request #1353 from martinjt/ReadEntityBodyMode\n\nImplement the ReadEntityBodyMode properties Merge pull request #1307 from esdrubal/servicemodelrss\n\nRss20ItemFormatter.ReadFrom now sets Id when guid is PermaLink. Merge pull request #1304 from slluis/mac-proxy-autoconfig\n\n[System.Net] Add support for .pac proxy config scripts on mac [System] Fix most warnings on the System test suite Fix warnings in mscorlib's Test suite + bring a couple more tests + fix thread rename test Merge pull request #1295 from nealef/master\n\nAdd SqlCredential support to SqlClient/Tds Merge pull request #1245 from StephenMcConnel/bug-22483\n\nFix scrolling in SWF.ListView.EnsureVisible(int index) Merge pull request #1287 from akoeplinger/fix-appconfig-performancecounters\n\n[System] Add performanceCounters element to System.Diagnostics app.config configuration section Merge pull request #1290 from directhex/master\n\nPut KeyPairPersistence load into a try{}catch{} block. Merge pull request #1273 from joelmartinez/docs-unified-fix\n\nbugfix for mdoc update with --dropns feature Bring fix for Cecil, includes fix for F#/Fody Merge pull request #1189 from joelmartinez/docs-64bit-squash\n\nMDoc and monodoc.dll changes to support iOS 64Bit API Merge pull request #1192 from LogosBible/regex-fixes-21803\n\nRegex substring fix Fix fallout from WebSocketMessageType change.\n\nThe WebSocketMessageType values were being used to send data over the\nwire.  This is likely the reason why WebSocketMessageType had values\nthat were not compatible with .NET. Merge pull request #1132 from mattleibow/bugfix-20925\n\n[system.data] BUGFIX: fixes issue with expression columns and IsNull: Merge pull request #1142 from edbprx/master\n\nConnectCallback needs to call EndConnect Merge branch 'master' of github.com:mono/monomac Add docs Fix warnings Prepare to add some methods to NSObject in Foundation.cs Copy shared docs Simplify the Makefile by eliminating dups Small cleanups Small changes before the big migration of monoTouch shared code to Maccore Add a few files to the build Contributions from Marce on GitHub, cleaned up MOre patches Add Duane Wandless patches + my cleanup to get some QTKit going Add AudioUnit to the build Add patch from Joe Matt to introduce NSDragDestination Run populate on the docs Add skeleton documentation for MonoMac Fix the paths for a few libraries Add to the build Remove autogenerated code Use CoreAnimation in MonoMac Quick Eye Paniagua spotted this one Add a few overloads Add WebKit\n\nsvn path=/trunk/monomac/; revision=160520 Add COreData\n\nsvn path=/trunk/monomac/; revision=160518 Add\n\nsvn path=/trunk/monomac/; revision=160516 Only register assemblies that reference MonoMac\n\nsvn path=/trunk/monomac/; revision=160511 Build AudioToolbox\n\nsvn path=/trunk/monomac/; revision=160138 2010-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* Sync to the latest version.\n\nsvn path=/trunk/monomac/; revision=160132 2010-07-05  Frank Krueger <fak@kruegersystems.com>\n\n\t* I moved NSAffineTransform to Foundation and added the\n\timportant functions. Previously it was in AppKit and lacked\n\tfunctions to actually manipulate the matrix.\n\n\t* Changed the path to CoreGraphics lib. The previous path did not\n\twork. New path suggested by Geoff Norton.\n\n\t* Changed NSGraphicsContext.GraphicsPort to return CGContext\n\tinstead of IntPtr. This seems to be the correct way to get a\n\tCGContext and it works well.\n\nsvn path=/trunk/monomac/; revision=159905 Update\n\nsvn path=/trunk/monomac/; revision=159862 Add missing method, reported by Koen\n\nsvn path=/trunk/monomac/; revision=159613 2010-06-20  Koen Pijnenburg <kpijnenburg@supportware.nl>\n\n\t* appkit.cs: Apply patches from Koen to add support for the\n\tdelegate and datasources on the NSOutlineView. \n\nsvn path=/trunk/monomac/; revision=159221 Add NSFontManager\n\nsvn path=/trunk/monomac/; revision=159177 Add NSOutlineView\n\nsvn path=/trunk/monomac/; revision=159176 Add some NSGraphics support\n\nsvn path=/trunk/monomac/; revision=158841 Airplane hacking on MonoMac\n\nsvn path=/trunk/monomac/; revision=158601 Add NSComboBox\n\nsvn path=/trunk/monomac/; revision=158442 More code, ignore NSMenuView, it is deprecated\n\nsvn path=/trunk/monomac/; revision=157478 Add NSPathCell and friends\n\nsvn path=/trunk/monomac/; revision=157476 Add new patches from James Clancey\n\nsvn path=/trunk/monomac/; revision=156966 Big batch of updates from James Clancey\n\nsvn path=/trunk/monomac/; revision=156049 Big batch of updates from James Clancey\n\nsvn path=/trunk/monomac/; revision=156048 Fix by reverting to lame NSArrays for NSRanges for now\n\nsvn path=/trunk/monomac/; revision=156026 2010-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* appkit.cs: Contributions from James Clancey:\n\n\t#import <AppKit/NSAnimationContext.h>\t\tDone\n\t#import <AppKit/NSFontPanel.h>\t\t\tDone\n\t#import <AppKit/NSCachedImageRep.h>\t\tDone\n\t#import <AppKit/NSCIImageRep.h>\t\t\tDone\n\t#import <AppKit/NSCustomImageRep.h>\t\tDone\n\t#import <AppKit/NSEPSImageRep.h>\t\tDone\n\nsvn path=/trunk/monomac/; revision=156023 2010-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* Worked to get a bunch of NSArray strongly typed.\n\t\n\t* appkit.cs: Added contributions from James Clancey to the\n\tNSTableView classes.\n\t\n\t* AppKit/Enums.cs: Contribution from James Clancey\n\t<james.clancey@gmail.com>\n\nsvn path=/trunk/monomac/; revision=156022 Fix\n\nsvn path=/trunk/monomac/; revision=155973 Improve\n\nsvn path=/trunk/monomac/; revision=155915 Remove\n\nsvn path=/trunk/monomac/; revision=155781 Add\n\nsvn path=/trunk/monomac/; revision=155779 Up\n\nsvn path=/trunk/monomac/; revision=155760 Add\n\nsvn path=/trunk/monomac/; revision=155757 Add\n\nsvn path=/trunk/monomac/; revision=155748 2010-02-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* console-unix.c: On OSX Control-Y is assigned to\n\tVDSUSP (non-Posix), the\n\tsuspend-program-next-time-it-tries-to-read-input command (this is\n\tdifferent than C-z, which suspends immediately).\n\n\tDo the same thing that bash does and ignore this setting,\n\tmaking our repl/getline support pasting.\n\nsvn path=/trunk/mono/; revision=151247 2010-02-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* getline.cs: Add support for ESC-letter to become Alt-letter.\n\nsvn path=/trunk/mcs/; revision=151083 2010-02-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* namespace.cs (CompletionGetTypesStartingWith): Do not include\n\tprivate types in the completion results.\n\nsvn path=/trunk/mcs/; revision=151082 Ship Mono.Cecil as well\n\nsvn path=/trunk/mcs/; revision=151002 Begin stubs for Mono.Cecil\n\nsvn path=/trunk/mcs/; revision=151001 2010-02-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* getline.cs (NextAvailable): Fix off-by-one error\n\nsvn path=/trunk/mcs/; revision=150975 2010-02-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs (CompileBlock): Also undo if there are problems during\n\tsemantic analysis, fixes various cases where invalid C# code would\n\tbe reported, but the internal changes would not be undone.\n\nsvn path=/trunk/mcs/; revision=150974 Update repl.txt notes\n\nsvn path=/trunk/mcs/; revision=150973 Indent\n\nsvn path=/trunk/mcs/; revision=150972 2010-02-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Take advantage of the Describe feature.\n\nsvn path=/trunk/mcs/; revision=150859 Documentation update\n\nsvn path=/trunk/mcs/; revision=150858 2010-02-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* driver.cs: Change the --fatal flag to allow a number to be\n\tpassed, this ignores the first N fatal errors.   Useful to debug\n\terrors that do not happen on the first hit.\n\n\t* cs-parser.jay (invocation_expression): accept both the\n\tCLOSE_PARENS and COMPLETE_COMPLETION, this allows completions\n\tinside an invocation.\n\n\t* driver.cs: Expose FatalErrors.\n\n\t* eval.cs: Initialize the printer's Fatal property from the\n\tDriver's FatalError flag, this allows csharp --fatal to work\n\tagain. \n\n\tAdd support for calling Describe (typeof (TYPE)) if the expression\n\tentered is a TYPE.\n\nsvn path=/trunk/mcs/; revision=150857 Revert 150495 and 150496 from mini.c\n\nsvn path=/trunk/mono/; revision=150497 2010-01-26  U-anarquia\\miguel  <miguel@anarquia>\n\n\t* mono-dl.c: Removed debugging messages for the embeddable version\n\tof mono-dl.\n\nsvn path=/trunk/mono/; revision=150273 Wrong file to install\n\nsvn path=/trunk/mono/; revision=150260 Install mono-dl.h header\n\nsvn path=/trunk/mono/; revision=150258 Added test case\n\nsvn path=/trunk/mcs/; revision=150201 Some findings\n\nsvn path=/trunk/mono/; revision=150195 Update doc tools\n\nsvn path=/trunk/mono/; revision=150084 Uniform use of the return error from mono_dl\n\nsvn path=/trunk/mono/; revision=150072 Fix\n\nsvn path=/trunk/mono/; revision=150028 2010-01-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* driver.c: Do not abort if LLVM is not supported, print a\n\twarning and add the information to the Mono JIT information.\n\nsvn path=/trunk/mono/; revision=149988 Improve, do not advertise what is not available\n\nsvn path=/trunk/mono/; revision=149953 2010-01-20  Miguel de Icaza  <miguel@novell.com>\n\n       * Dictionary.cs: Always create the keys, fixes compatibility\n       between Mono and .NET.  Patch from John Lenz <jlenz2@math.uiuc.edu>\n\n\nsvn path=/trunk/mcs/; revision=149947 Revert, will remove both linux-gnu, but needs some work\n\nsvn path=/trunk/mono/; revision=149946 Make this shorter\n\nsvn path=/trunk/mono/; revision=149943 remove DOS newlines\n\nsvn path=/trunk/mono/; revision=149932 Make this build on systems with no filesystem or process APIs\n\nsvn path=/trunk/mono/; revision=149931 Do not build the parser if no getopt is there\n\nsvn path=/trunk/mono/; revision=149930 Remove realpath\n\nsvn path=/trunk/mono/; revision=149916 Fix a crasher\n\nsvn path=/trunk/mono/; revision=149822 Fix crash when the quote starts the string to escape\n\nsvn path=/trunk/mcs/; revision=149703 This method needs to be overwritten from the JsonValue class\n\nsvn path=/trunk/mcs/; revision=149702 Remove accidentally added file\n\nsvn path=/trunk/mono/; revision=149678 Revert temporary hack\n\nsvn path=/trunk/mono/; revision=149677 Import proper patch\n\nsvn path=/trunk/mono/; revision=149676 Revert gcconfig.h change\n\nsvn path=/trunk/mono/; revision=149675 2010-01-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* Regex.cs: Re-enable the new regex compiler as the bug seems to\n\tbe gone now.\n\nsvn path=/trunk/mcs/; revision=149403 _GNU_SOURCE is already defined by configure.ac\n\nsvn path=/trunk/mono/; revision=149379 2010-01-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* valgrind.h, memcheck.h: Add guards to prevent the gcc features\n\tfrom being included in non-GCC builds like the Windows build.\n\nsvn path=/trunk/mono/; revision=149374 Update docs\n\nsvn path=/trunk/mono/; revision=149373 Add support for rendering the title\n\nsvn path=/trunk/mcs/; revision=149362 Fix dis and monograph builds when using LLVM\n\nsvn path=/trunk/mono/; revision=149244 Fix\n\nsvn path=/trunk/mono/; revision=149158 Format\n\nsvn path=/trunk/mcs/; revision=148965 Add g_usleep\n\nsvn path=/trunk/mono/; revision=148884 Preserve history\n\nsvn path=/trunk/mcs/; revision=148728 Copy\n\nsvn path=/trunk/mcs/; revision=148727 Remove file\n\nsvn path=/trunk/mcs/; revision=148726 2009-12-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs: Avoid crash, fixes 554898\n\nsvn path=/trunk/mcs/; revision=148599 Fix crasher\n\nsvn path=/trunk/mcs/; revision=148596 i2009-12-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* verify.c (mono_method_verify): The Unused opcodes produce an\n\tInvalidProgramException on .NET\n\n2009-12-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* method-to-ir.c (mono_method_to_ir): CEE_UNUSUED opcodes now\n\traise an invalid program exception.   \n\n\tFor other opcodes that we might not handle use a g_warning and\n\traise the exception.   Beats termination.\n\n\tFixes #561724\n\n\nsvn path=/trunk/mono/; revision=148416 2009-12-14  Miguel de Icaza  <miguel@novell.com>\n\n        * MemoryMappedFile.cs: Make this by default use the native\n        interface (Mono.Unix.Native.Syscall) to map files and only support\n        the FileStream.Handle when the user explicitly uses this API.\n\n        The reason is that currently the code depends on the io-layer\n        keeping parity between our handles and Unix file descriptors, this\n        removes this dependency for most cases. \n\n\nsvn path=/trunk/mcs/; revision=148366 2009-12-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* SafeBuffer.cs: When comparing the end, we only need to compare\n\tsource+size being bigger than last_byte, not bigger or equal,\n\totherwise we can not access the last element.\n\nsvn path=/trunk/mcs/; revision=148365 2009-12-13  Miguel de Icaza  <miguel@novell.com>\n\n        * SafeMemoryMappedViewHandle.cs (ReleaseHandle): implement. \n\n2009-12-13  Miguel de Icaza  <miguel@novell.com>\n\n        * MemoryMappedViewAccessor.cs: Derive from\n        UnmanagedMemoryAccessor, remove explicit IDisposable\ninheritance.\n        (CreatePosix): Call Initialize on the base class to initialize. \n        (Dispose): Kill methods. \n        (Flush): Add.\n        (MapPosix): no need to return out mmap_size, it is always size.\n\n        * MemoryMappedFile.cs: Add FlushPosix.\n\n        * MemoryMappedViewStream.cs: Update API.\n\n\nsvn path=/trunk/mcs/; revision=148361 Assist to build\n\nsvn path=/trunk/mcs/; revision=148360 HtmlString\n\nsvn path=/trunk/mcs/; revision=148330 Update\n\nsvn path=/trunk/mono/; revision=148329 2009-12-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* SmtpClient.cs: Add half-implemented feature, TargetName for the\n\tSPN SMTP system.\n\nsvn path=/trunk/mcs/; revision=148093 2009-12-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* SmtpClient.cs, MailMessage.cs: Add 4.0 APIs.\n\nsvn path=/trunk/mcs/; revision=148092 2009-12-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* Barrier.cs: Implement IDisposable, add a bunch of IDisposable\n\tchecks and some checks from the docs.\n\nsvn path=/trunk/mcs/; revision=148091 2009-12-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* MemoryMappedFile.cs: Updated to the new Beta API, fill in some\n\tblanks, map some new flags, obey some settings, throw some\n\texceptions. \n\nsvn path=/trunk/mcs/; revision=148003 2009-12-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* Enum.cs: Add new .NET 4.0 API.\n\nsvn path=/trunk/mcs/; revision=147901 Update\n\nsvn path=/trunk/mono/; revision=147752 Forward port\n\nsvn path=/trunk/mcs/; revision=147567 Forward port\n\nsvn path=/trunk/mcs/; revision=147566 2009-12-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* processes.c (EnumProcesses): Add support for OSX, patch from Tom\n\tPhilpot <tom.philpot@logos.com>\n\nsvn path=/trunk/mono/; revision=147481 Add new overloads\n\nsvn path=/trunk/mcs/; revision=146707 2009-11-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* Directory.cs: Add EnumerateFiles and EnumerateFileSystemEntries\n\toverloads.    Share code.\n\nsvn path=/trunk/mcs/; revision=146706 svn path=/trunk/mono/; revision=146705 Reduce code duplication\n\nsvn path=/trunk/mcs/; revision=146701 2009-11-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* Assembly.cs: Implement missing method.\n\nsvn path=/trunk/mcs/; revision=146700 2009-11-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* RegistryKey.cs: Implement a GetValueKind and a handful of\n\tmethods. \n\nsvn path=/trunk/mcs/; revision=146699 2009-11-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* Directory.cs: Added new IEnumerable methods to Directory.\n\n\t* MonoIO.cs: Surface a high level FindFirst/FindNext API to\n\timplement the various enumerable APIs.\n\nsvn path=/trunk/mcs/; revision=146698 Avoid code duplication\n\nsvn path=/trunk/mcs/; revision=146697 2009-11-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* Environment (IsUnix): expose this common property, so we avoid\n\tduplicating code. \n\nsvn path=/trunk/mcs/; revision=146696 2009-11-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* file-io.c: Surface a smart FindFirst/FindNext/FindClose API to\n\tthe managed world.\n\n\t* icall-def.h: New entry points.\n\nsvn path=/trunk/mono/; revision=146695 API updates from Moma\n\nsvn path=/trunk/mcs/; revision=146680 Small fixes\n\nsvn path=/trunk/mono/; revision=146006 Up\n\nsvn path=/trunk/mono/; revision=146005 Up\n\nsvn path=/trunk/mono/; revision=146004 Update README and order.xml file\n\nsvn path=/trunk/mono/; revision=146002 Update\n\nsvn path=/trunk/mcs/; revision=146000 Up\n\nsvn path=/trunk/mono/; revision=145999 Make csproj target work again\n\nsvn path=/trunk/mcs/; revision=145998 Small 4fx fixes\n\nsvn path=/trunk/mcs/; revision=145914 Few more 4.0 touchups\n\nsvn path=/trunk/mcs/; revision=145858 2009-11-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* Lazy.cs: Updated API to 4.0 Beta 2\n\nsvn path=/trunk/mcs/; revision=145856 Use Unix style parameters\n\nsvn path=/trunk/mcs/; revision=145696 Add MEF for .NET 4\n\nsvn path=/trunk/mcs/; revision=145695 FixBuild\n\nsvn path=/trunk/mcs/; revision=145693 Update\n\nsvn path=/trunk/mcs/; revision=145692 2009-11-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* Use the ConditionalWeakTable.cs implementation from MEF, it\n\tneeds a little bit of work (see the comment on the file, and the\n\ttest suite that shows the problem).\n\n\tThis code is MS-PL\n\n2009-10-15  Sebastien Pouliot  <sebastien@ximian.com>\n\nsvn path=/trunk/mcs/; revision=145687 Move some classes to new locations\n\nsvn path=/trunk/mcs/; revision=145679 Implement the class methods, currently disabled until 553650 is fixed in mcs\n\n\nsvn path=/trunk/mcs/; revision=145675 More 4.0 work\n\nsvn path=/trunk/mcs/; revision=145674 svn path=/trunk/mcs/; revision=145672 svn path=/trunk/mcs/; revision=145671 2009-11-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* Marshal.cs: Expose copy_*_unamnaged to SafeBuffer.\n\n\t* SafeBuffer.cs: Update SafeBufer implementation\n\nsvn path=/trunk/mcs/; revision=145670 Fix build\n\nsvn path=/trunk/mcs/; revision=145650 Add StringSize overload Fix per Hutch's observation Add support for a few NSAttributedStrings overloads for Hutch Add support for ref/out parameters in delegate classes Add CoreLocation Copyrights Fix warnings Add support for adding NSObject bindings, and add Observables to NSObject Add observer enums Fix code, avoid warnings Fix warning We generate locals that are assigned to, whose sole purpose is to keep a reference alive, disable the warning Make this work with MonoTouch Small changes before the MonoTouch shared code migration to MacCore Fix update Merge more patches Can not really depend on the constructor being called to initialize the zero value Use ints where uints do not make a difference in the public API;   Throw better exceptions for AudioUnit errors (from Joe Matt); Add new keys Update the descriptions to only cover the subtypes available on the platform Do not release buffers that we did not allocate Fix the public API to avoid internal names exposed Add AudioUnit implementation contribyted by AKIHIRO Uehara (u-akihiro@reinforce-lab.com) Fix the API Add copyright notice Add CoreAnimation to MonoMac, shared with MonoTouch Added another shared framework: AddressBook Add quicklook.cs More code\n\nsvn path=/trunk/maccore/; revision=160517 Add contributions from Duane\n\nsvn path=/trunk/maccore/; revision=160515 Add Enums\n\nsvn path=/trunk/maccore/; revision=160514 Add generator patch from Duane Wandless\n\nsvn path=/trunk/maccore/; revision=160513 Fix the build\n\nsvn path=/trunk/maccore/; revision=160204 Apply some of Duane's patches\n\nsvn path=/trunk/maccore/; revision=160201 Backport Geoff's fix\n\nsvn path=/trunk/maccore/; revision=160139 Add AudioToolbox\n\nsvn path=/trunk/maccore/; revision=160137 2010-07-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* SYnc to the latest version.\n\nsvn path=/trunk/maccore/; revision=160131 Fix for bug reported by Duane\n\nsvn path=/trunk/maccore/; revision=160009 Features + fixes\n\nsvn path=/trunk/maccore/; revision=156965 Add new\n\nsvn path=/trunk/maccore/; revision=156025 Fix\n\nsvn path=/trunk/maccore/; revision=155971 Some fixes\n\nsvn path=/trunk/maccore/; revision=155899 Update generator\n\nsvn path=/trunk/maccore/; revision=155892 2007-06-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (Image): use Framework::Width,Height for the image\n\tdimensions instead of the pixbuf width/height, used in extents and\n\trotation computation.\n\n\t* runtime.cpp (Canvas::render): Set the clipping path on the\n\tidentity matrix so we do not miss-clip.\n\n\tRender the canvas from 0, 0, fwidht, fheight, not the expose\n\tarea. \n\n\n\nsvn path=/trunk/moon/; revision=79910 2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Cairo::render): The canvas also needs to set the\n\tmatrix and clear its background. \n\n\t(surface_resize): convenience entry point to resize a surface.\n\tNotice that this will resize the surface, but not the toplevel\n\tcanvas. \n\n\nsvn path=/trunk/moon/; revision=79909 Remove debugging output\n\nsvn path=/trunk/moon/; revision=79902 The Surface sample gets further along, still need to fix Image rendering\n(it is not scaling to the requested size) and still need to figure out\nwhy some transformations are not applied.\n\n2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\tObservation: either it is the surface, or something else is very\n\tslow, but entering the surface is quite slow right now to show the\n\thandles.   Not sure what it could be.\n\t\n\t* runtime.cpp (OnPropertyChanged): We probably should catch the\n\tproperty changes here, and not in the Sub* variant of this thing,\n\tthis will update the canvas properly now.\n\n\t(dump_hierarchy): useful bit to debug what is going wrong. \n\t\n\n\nsvn path=/trunk/moon/; revision=79901 So avformat.h works everywhere\n\nsvn path=/trunk/moon/; revision=79900 i2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Canvas::get_xform_for): Do not apply extra\n\ttransformations to the child other than the absolute_xform.\n\t\n\t(surface_attach): On attach we need to do a full invalidate, so\n\tthe transformations are computed, otherwise it uses the defaults\n\tfor the toplevel (zero), this fixes the atom.xaml issue. \n\n\n\nsvn path=/trunk/moon/; revision=79898 \t* control.cpp (get_xform_for): This is not proxied to the real\n\tobject, this is proxied to the parent.\n\t(control_initialize_from_xaml): Set the parent link here.\n\n\n\nsvn path=/trunk/moon/; revision=79897 Remove debug messages\n\nsvn path=/trunk/moon/; revision=79891 2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* control.cpp (get_xform_for): This is not proxied to the real\n\tobject, this is proxied to the parent.\n\t(control_initialize_from_xaml): Set the parent link here.\n\n\nsvn path=/trunk/moon/; revision=79890 Sample test for Control\n:w\n\n\nsvn path=/trunk/moon/; revision=79888 Fix build\n\nsvn path=/trunk/moon/; revision=79886 Do not duplicate code\n\nsvn path=/trunk/moon/; revision=79884 Remove debugging output\n\nsvn path=/trunk/moon/; revision=79876 Remove debugging output\n\nsvn path=/trunk/moon/; revision=79875 2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* control.cpp: Implement Control.\n\n\nsvn path=/trunk/moon/; revision=79867 ManagedDownloader updated to send a zero as a terminator signal, works in cases where Content-Lenght: unknown\n\nsvn path=/trunk/moon/; revision=79865 2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp: Implement a system to send various notifications\n\tas Chris wants his notifications and managed world wants the\n\tnotifications as well. \n\n\tShould they ahve been separate?   For now I just added a list of\n\tthem.   This code is turning uglier every minute.\n\n\nsvn path=/trunk/moon/; revision=79863 Add helper routine\n\nsvn path=/trunk/moon/; revision=79862 Fix the namespace as spotted by Jackson\n\nsvn path=/trunk/moon/; revision=79859 debug output removed\n\nsvn path=/trunk/moon/; revision=79854 2007-06-16  Miguel de Icaza  <miguel@novell.com>\n\n\tNew mechanism for loading XAML files.\n\n\tSince XAML files can contain references to external assemblies and\n\tthese have to be downloaded using the browser, we have now changed\n\tour previous setup that just called the xaml parser with a setup\n\tthat is able to download dependencies.\n\n\tThe system works by attempting repeatedly to parse the XAML file.\n\tThe XAML parser needs to return an error condition that includes\n\tthe missing dependency.   \n\n\tFor all missing dependencies, we request the file from the\n\tbrowser, and we re-try the parsing until it works (or it fails due\n\tto other problems). \n\t\n\t* moonlight.cs: Instead of exposing a CreateFromXaml method, we\n\tnow expose a Loader object.\n\n\tThe Loader object can keep track of downloaded assembly\n\tdependencies and calls the parser.\n\t\n\t* plugin.cpp (NewStream): Use a primitive state machine\n\t(vm_missing_url == vm_missing_file) to detect when we have just\n\trequested that a file be downloaded.   This probably is too\n\tprimitive. \n\n\t(TryLoad): New method.    \n\t\n\tTries to load the XAML file, the parsing might fail because a\n\trequired dependency is not available, so we need to queue the\n\trequest to fetch the data.\n\n\t(LoadFromXaml): Use vm_xaml_loader_new and TryLoad now.\n\t\n\t* mono.cpp (vm_init): We now use a handful of more methods from\n\tmoonlight.cs \n\n\t(vm_loader_try, vm_insert_mapping): helper functions to call into\n\tthe managed wrapper for XAML file loading.\n\n\n\nsvn path=/trunk/moon/; revision=79841 Add new sample, based on Jackson's test\n\nsvn path=/trunk/moon/; revision=79838 fix\n\nsvn path=/trunk/moon/; revision=79826 Implement another property for Image\n\nsvn path=/trunk/moon/; revision=79825 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (SetSource): Make it so we use the data from a\n\tdownloader that might have already finished.\n\n\n\nsvn path=/trunk/moon/; revision=79820 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\tWe now accumulated data as we go.\n\t\n\t* downloader.cpp (downloader_get_response_text): Return\n\taccumulated data.\n\nsvn path=/trunk/moon/; revision=79814 Make the test stress GetResponseText\n\nsvn path=/trunk/moon/; revision=79813 Update this too\n\nsvn path=/trunk/moon/; revision=79810 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* ManagedDownloader.cs: Fixed so that the download happens in\n\tSend(), it is not supposed to happen during open.\n\nsvn path=/trunk/moon/; revision=79809 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* media.cpp (Image::getxformorigin): Implement getxformorigin, so\n\trotations are correct.\n\n\t(Image::getbounds): Implement getbounds correctly, the coordinates\n\tshould be in device coordinates with the transform applied.\n\n\nsvn path=/trunk/moon/; revision=79805 i2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* Add destructors to classes that are caching DO collections and\n\tkeeping refs to those, thanks to Chris Toshok for the pattern to\n\tuse here. \n\n\nsvn path=/trunk/moon/; revision=79795 On the destructor we must unref explicitly any cached copies that we manually ref on the OnPropertyChanged\n\nsvn path=/trunk/moon/; revision=79794 Same issue, with storyboards, do not unref stuff that is tracked in the DO system\n\nsvn path=/trunk/moon/; revision=79791 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (UIElement): The problem was that:\n\n\t\tThe ~UIElement destructor was setting the collection\n\t\tproperties to NULL in an attempt to unref stuff (these\n\t\tare now automatically unrefed).\n\n\t\tThis caused the hash table destructor to unref the values\n\t\tthat were held in the collection.\n\n\t\tAt a later point, since \"triggers\" was cached and\n\t\tOnPropertyNotify was called, we attempted to unref the\n\t\tvalue, but that cached value pointed to an object that had\n\t\talready been released.\n\n\nsvn path=/trunk/moon/; revision=79789 update demo.cs\n\nsvn path=/trunk/moon/; revision=79788 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* Everywhere: remove duplicated code that got copy/pasted\n\teverywhere for tracking collections and caching values.  \n\n\tThis should help fixing the crashing problem, but I still need to\n\treview the rules for reference counting and keeping a cache of\n\tvariables in instance fields. \n\n\nsvn path=/trunk/moon/; revision=79785 Tiny fix\n\nsvn path=/trunk/moon/; revision=79784 Fix again\n\nsvn path=/trunk/moon/; revision=79775 Add Right-to-Left arabic text\n\nsvn path=/trunk/moon/; revision=79774 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (UIElement, Canvas): send events to the objects as\n\twell.   My original test on orcas was buggy.\n\nsvn path=/trunk/moon/; revision=79766 Add downloader test that uses properties and so\n\nsvn path=/trunk/moon/; revision=79757 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp: Implement DownloadProgress property and event\n\tnotification. \n\n\t* runtime.h (DependencyObject::Is): new method, similar to C# is.\n\n\n\nsvn path=/trunk/moon/; revision=79755 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (surface_repaint): We clear the background here\n\tagain, to allow canvases to have transparent brushes.\n\nsvn path=/trunk/moon/; revision=79751 Realize if realized\n\nsvn path=/trunk/moon/; revision=79741 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n        * runtime.cpp (surface_attach): Only hook up the events when we\n        get a toplevel attached.\n\n\nsvn path=/trunk/moon/; revision=79737 Enable\n\nsvn path=/trunk/moon/; revision=79734 Remove old stale file\n\nsvn path=/trunk/moon/; revision=79733 Fix\n\nsvn path=/trunk/moon/; revision=79721 Update\n\nsvn path=/trunk/moon/; revision=79716 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.h: Drop the C++ API with a C proxy API, switch to a\n\tpure C API as we need this from the managed side anyways.\n\n\nsvn path=/trunk/moon/; revision=79711 Add size reporting to the test\n\nsvn path=/trunk/moon/; revision=79709 i2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.h: Move downloader defs into .h file\n\n\tAdd a notification system for reporting the size of a stream, so\n\twe can do progress indication.\n\n\nsvn path=/trunk/moon/; revision=79708 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* downloader.cpp: Move downloader to its own file.\n\n\n\nsvn path=/trunk/moon/; revision=79707 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* ManagedDownloader.cs: Add support for local files\n\nsvn path=/trunk/moon/; revision=79700 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (~DependencyObject, free_value): unref all the\n\tvalues that are stored in the object on destruction.   With this\n\tanimations can be properly shut down again.\n\n\n\nsvn path=/trunk/moon/; revision=79682 Test enter and leave, with brush changing\n\nsvn path=/trunk/moon/; revision=79679 2007-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Add support for enter/leave events.\n\n\nsvn path=/trunk/moon/; revision=79674 Switch Collections from GSList to GList\n\nsvn path=/trunk/moon/; revision=79671 If surface is null, return\n\nsvn path=/trunk/moon/; revision=79655 Update TODO\n\nsvn path=/trunk/moon/; revision=79643 2007-06-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* brush.cpp (Brush, SolidColorBrush, LinearGradientBrush,\n\tRadialGradientBrush): Notify owners when changes happen in the\n\tBrush.\n\n\tThis makes the demo test-color-animation.xaml work without fps.\n\n\t* runtime.cpp: Make Canvas use the Background property to render\n\tthe background.\n\n\n\nsvn path=/trunk/moon/; revision=79642 2007-06-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Make Canvas use the Background property to render\n\tthe background.\n\n\nsvn path=/trunk/moon/; revision=79640 Implement the managed downloder\n\nsvn path=/trunk/moon/; revision=79633 These are for jeff\n\nsvn path=/trunk/moon/; revision=79599 2007-06-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Canvas): Implement OnChildPropertyChanged so we can\n\tcatch cases of Top/Left being set on a child, this makes changes\n\tto the object after it has been created (adding/removing the\n\tproperty) work. \n\n\n\nsvn path=/trunk/moon/; revision=79584 2007-06-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* Improve the destruction scenario to release the resources that\n\twe have acquired, we are now up to the point of stopping clocks\n\tproperly, but more work is going to be needed in the long term to\n\tproperly track refs and objects.\n\n\tEnsured that all virtual GetObjectType are flagged with virtual.\n\n\t* Makefile.am: Put runtime.cpp at the top, to improve\n\tcompile/test cycle.\n\n\n\nsvn path=/trunk/moon/; revision=79546 reapply this, this time setting the Add/Remove methods to\nvirtual, sorry about that\n\n2007-06-13  Miguel de Icaza  <miguel@novell.com>\n\n        * runtime.h (Collection): Since it seems that everything we have\n        so far are collections of dependency objects, the code is now\n        simplified and will also take refs and remove refs on destruction.\n\n        The only reason to implement the Add/Remove methods is if you must\n        do something as a hook during add/remove\n\n\n\n\nsvn path=/trunk/moon/; revision=79526 Revert, it breaks animations, dont know why\n\nsvn path=/trunk/moon/; revision=79523 i2007-06-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h (Collection): Since it seems that everything we have\n\tso far are collections of dependency objects, the code is now\n\tsimplified and will also take refs and remove refs on destruction.\n\n\tThe only reason to implement the Add/Remove methods is if you must\n\tdo something as a hook during add/remove\n\n\nsvn path=/trunk/moon/; revision=79522 2007-06-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (SetValue): Enable NULLs to be set on Dependency\n\tObjects. \n\t\n\t(OnPropertyChanged): Allow the value to be NULL, cope with that,\n\twe use this to clear all of our objects.\n\n\nsvn path=/trunk/moon/; revision=79519 New demo, if loaded, try to load another animation to exercise the destruction of objects\n\nsvn path=/trunk/moon/; revision=79518 Test\n\nsvn path=/trunk/moon/; revision=79516 More headers\n\nsvn path=/trunk/moon/; revision=79514 Add header\n\nsvn path=/trunk/moon/; revision=79513 Add a name tag\n\nsvn path=/trunk/moon/; revision=79502 Add my new tests\n\nsvn path=/trunk/moon/; revision=79501 Expose FindName to managed code\n\nsvn path=/trunk/moon/; revision=79472 Fix\n\nsvn path=/trunk/moon/; revision=79446 guards for when running standalone\n\nsvn path=/trunk/moon/; revision=79434 2007-06-13  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp: Various new events are now sent.\n\nsvn path=/trunk/moon/; revision=79381 Revert some of the breakage in the header shuffling\n\nsvn path=/trunk/moon/; revision=79377 A little bit of work to translate the cooridnates\n\nsvn path=/trunk/moon/; revision=79375 Update the demo to test the hit testing in a rotated thing\n\nsvn path=/trunk/moon/; revision=79365 More tasks\n\nsvn path=/trunk/moon/; revision=79360 i2007-06-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h (UIElement::inside_object): new routine that should\n\treturn true if the given absolute x, y is inside the given object\n\tor not. \n\n\t(UIElement::handle_motion): new routine that is called when a\n\tmotion event happens, it should determine if it can handle the\n\tgiven event at x, y.\n\n\t(Surface): new callbacks, these are callbacks that will pass the\n\tnotification of the event to managed code. \n\n\t* runtime.cpp (FrameworkElement): provide a default implementation\n\tfor inside object that works for \"squares\" (things with widths and\n\theights) \n\n\tCanvas: need to  \n\n\nsvn path=/trunk/moon/; revision=79358 Test the first event: MouseMove\n\nsvn path=/trunk/moon/; revision=79357 Fix warnings, compile errors, reuse new stuff\n\nsvn path=/trunk/moon/; revision=79351 Fix the SDL detection, and hook up a few things,\nall my events are taken out for now\n\n\nsvn path=/trunk/moon/; revision=79346 forgot this\n\nsvn path=/trunk/moon/; revision=79343 2007-06-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (NotifyParentOfPropertyChange): Stop propagating\n\twhen we have reached someone that handles that property in the way\n\tup. \n\nsvn path=/trunk/moon/; revision=79301 Update\n\nsvn path=/trunk/moon/; revision=79289 Update\n\nsvn path=/trunk/moon/; revision=79288 2007-06-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (DependencyObject::RegisterFull): Allow for\n\tproperties to be flagged as attached, and only propagate the child\n\tnotification to those those that care about it.\n\n2007-06-12  Rolf Bjarne Kvinge  <RKvinge@novell.com>\n\n\t* Implement a mechanism to keep track of parents and notify\n\tparents of changes in attached properties.\n\n\n\nsvn path=/trunk/moon/; revision=79233 As discussed on irc, the dependencyobject wrapper\n\nsvn path=/trunk/moon/; revision=79231 2007-06-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile.am: Delete the ~/.mozilla/plugins/libmoon.so in case it\n\twas around, that was the painful bug.\n\n\t* moon-plugin.cpp (CreateWindow): Do not create a canvas, nor\n\tattach it, let Mono do that. \n\t(StreamAsFile): Request that the VM loads the file, this will\n\tchange to something else later when we use the Silverlight object\n\tembedding API.\n\n\t* moonlight.cs: Implement some bits, it currently only loads the\n\tXAML file, it needs to create a new appdomain.\n\n\nsvn path=/trunk/moon/; revision=79143 Add notes for Everaldo, or anyone else\n\nsvn path=/trunk/moon/; revision=79134 move the mono definition loading here\n\nsvn path=/trunk/moon/; revision=79133 Embed the Mono VM in the Mozilla plugin\n\n2007-06-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* moonlight.cs: the startup code, will contain the helper classes\n\tto create new AppDomains for each instance create.\n\n\t* mono.cpp: New file, embeds the Mono VM.\n\n2007-06-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.ac: Check for mono, prepare cflags and libs to embed\n\tthe Mono VM.\n\n\n\nsvn path=/trunk/moon/; revision=79132 2007-06-10  Miguel de Icaza  <miguel@novell.com>\n\n        * shape.cpp (OnPropertyChanged): Implement this property for most\n        shapes: if the property is set, we need to invalidate and\n        repaint.\n\n        * runtime.h (FullInvalidate): A method to perform a queue to\n        redraw the underlying region, update the bounds and queue an\n        update for the new region.\n\n\n\nsvn path=/trunk/moon/; revision=79127 2007-06-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h (Base): make destructor virtual so that base_unref can\n\tcall delete (Base *) p.   Exposed by the managed code when the\n\tfirst base_unref ran for the first time :-)\n\n\tI sense a leak!\n\n\t* runtime.cpp (surface_attach): invalidate the areas before and\n\tafter, compute the bounds using item_update_bounds, not the\n\tgetbounds method directly.\n\n\n\nsvn path=/trunk/moon/; revision=79123 Merge pull request #1132 from mattleibow/bugfix-20925\n\n[system.data] BUGFIX: fixes issue with expression columns and IsNull: Merge pull request #1142 from edbprx/master\n\nConnectCallback needs to call EndConnect Merge pull request #1148 from steffen-kiess/json\n\nFix several issues in System.Json Merge pull request #1152 from danielrh/hyperlink_package_parse\n\nFixes https://github.com/OfficeDev/Open-XML-SDK/issues/7 by allow absolute urls in relationships Fix enumeration values [WCF] Make BasicHttpBinding.AllowCookies work\n\nThis patch is from Brendan Zagaeski and fixes bug 11307\n\nThe description of the problem was:\n\nIn Mono 2.10.12, the BasicHttpBinding property no longer supports\nEnableHttpCookieContainer because it is Depreciated. The replacement\nis AllowCookies, but this property does not work. Upon inspection of\nthe source source, we find that the HttpCookieContainerBindingElement\nis added in accordance with EnableHttpCookieContainer, but not\nAllowCookies.\n\nThe conditional compile logic at [1] is no longer needed for\nXamarin.iOS or Xamarin.Android. Revert change that introduces a new undocumented environment variable MemoryMappedFile fixes\n\nThis patch includes a few fixes:\n\n\t* CreateNew will actually create a memory map file, the previous logic\n\t  in MemoryMapImpl.Open was wrong, and would fail if the file did not\n\t  exist.   We now cope with this (bug #20052 was caused by this).\n\n \t* Some exceptions were wrong, so this patch updates the\n\t  exceptions being thrown to be the right ones\n\n\t* On Mobile, we inverted the logic to ensure that capacity must be\n\t  bigger or equal than the file size (which is what the API needs to do),\n\t  previously it performed the opposite test.\n\nAdded tests that match the behavior on .NET for this. [build] Address the System.Configuration test problem\n\nThe compiler seems to ignore reference assemblies with a full path when the\n-lib: directive is passed, so things like:\n\n      -lib:FOO -r:BAR/bar.dll\n\nWould resolve bar.dll to FOO/bar.dll, instead of BAR/bar.dll.\n\nThis is a problem with the test suite as it needs to reference the\nfinal build of System.Configuration from $(the_libdir_base) and not\nthe intermediate step.\n\nTo work around this issue, we introduce \"test_remove\" variable that is\na piece of text that will be removed from the TEST_COMPILE variable\nwhen this is evaluated.\n\nThis means that it gets CSCOMPILE and then it removes the bits that we\nare not interested in. [build] the csproj files can now do a full class libraries build [System.Runtime.Remoting] Build if DBEUG Is defined [build] MSBuild setup: Add support for -keyfile and -delaysign, thanks to Marek Safar for the pointer [build] Drop AssemblyInfo from the sources in Mono.Cecil.Mdb [build] Fix Mono.Cecil.Mdb build with xbuild [build] Make Mono.Cecil use an [assmebly:AssemblyKeyFile] to specify keyfile\n\nCurrently the flag is passed on the command line, but this is\nproblematic for us since our xbuild implementation does not seem to support\nthe attribute that generates the /keyfile: argument [build] Fix the reference to ecma.pub [build] Fresh new csproj files based on the updated build system. [build] Fix location of the key file [Managed.Windows.Forms] Disable TRACE code, since it is broken [build] The ecma.pub is one directory above [msvc/scripts] Update order.xml file with Makefile changes, update generator [build] Ensure that staged build directories are set on LOCAL_MCS_FLAGS\n\nThe LOCAL_MCS_FLAGS are passed to the compiler before the standard\ndirectory for the profile.  This is important both for correctness,\nand also assists the solution generator, since we can now precisely\ndetermine which intermediate project must be referenced. [mscorlib] Since .NET 4.5 some of the System.IdentityModel now is in the core, add this class [build] Add new project files based on the new staged build [build] Use LOCAL_MCS_FLAGS to give preference to the intermediate dir in System builds, and do not use temporary files for corlib builds [System] Fix parsing of IPv6 addresses (bug #18574)\n\nFrom Dick Porter:\n\nThe IPv6 address parser misses some syntax errors, and can become confused by\naddresses that at first glance look IPv4 compatible.  The attach patch contains\nthe following fixes:\n\nDon't fail to parse an address if we mistakenly thought it was IPv4 compatible\nor mapped, just treat it as IPv6.\n\nFix IPv4-compatible and mapped address formatting in ToString().\n\nFix parsing of colons - specifically occurrences of ':::'.\n\nMake sure blocks of digits are no longer than 4 characters.\n\nAdd some more parsing tests to Mono's NUnit test suite.\n\nAdd a NUnit test for bogus IPv6 addresses. Update order.xml [build/msbuild] Tool resolves assemblies based on exact match, not random-last [vsbuild] Update Makefiles to not generate the VS metadata for the 'basic' profile [build] Kill OpenSystem.C from the Makefile [build] Revert change in Facades parellism patch, since it works great for builds, but not for other recursive targets (ie: update-csproj, maybe others [build] Kill OpenSystem.C, nobody ever used this [build] Fix the build for NET_4_5 (and maybe other profiles) from the pull request 981 [build] Record extra library builds for our Visual Studio input files\n\nAdded local targets (csproj-local) to all the assemblies that have\nstaged builds to dump their build information for the underlying\ndependencies.\n\nThis information is needed to create the new Visual Studio csproj\nfiles.\n\nThis commit also updates the collected build metadata from running:\n\n     make update-csproj\n     make package-inputs\n\nAs described in msvc/scripts/README [build] System.Configuration: fix signatures.\n\nWe must use the secxml library directory to reference System, not\nbare.\n\nThe bare build does not contain a full signature for some interfaces\n(there is a using XmlNode = object in a few interfaces that\nSystem.Configuration depends on).\n\nSo System.Configuration must reference the System that has been\ncompiled with XML support. [build/Facades] Parallelize the Facades directory build\n\nThe parallelization is done by overriding the default \"all\" target\nand instead of using the serial subdirectory processing that goes\nover the SUBDIR and xx_SUBDIR rules, we turn the list of\nsubdirectories into the name of the target, for example:\n\n     System.Collections.Concurrent\n\nbecomes:\n\n     ../../class/lib/net_4_5/Facades/System.Collections.Concurrent.dll\n\nThen a pattern is added to handle that rule:\n\n     $(target_dir)/%.dll:\n\nThis allows the build to be parallized. Merge pull request #1041 from mono/staged-cyclic-builds\n\nThis patch introduces an infrastructure to stage the builds for the core\r\nassemblies that have cyclic dependencies.   This deals directly with\r\nthe following cycle:\r\n\r\n    System.dll requires:\r\n\tSystem.Configuration.dll\r\n\tMono.Security.dll\r\n\tSystem.Xml.dll\r\n\r\n\tThey all require System.dll to be built\r\n\r\n    System.Xml requires:\r\n\tSystem.dll\r\n\tSystem.Configuration.dll\r\n\r\n    System.Security.dll requires:\r\n\tSystem.dll\r\n\tMono.Security.dll\r\n\tSystem.Xml.dll\r\n\r\nPrinciple\r\n=========\r\n\r\nThe patch works by directing the build infrastructure to place\r\nintermediate build steps on their own directory.  For example the\r\nfirst System.dll build that only takes a dependency in mscorlib.dll is\r\nplaced not under the final directory but on a subdirectory called\r\n\"bare\".\r\n\r\nThe second time that System.dll is built (after Mono.Security and\r\nSystem.Xml have been built) is placed on the \"secxml\" directory.\r\n\r\nThe third time is the final build, and that one ends in the profile\r\ndirectory.\r\n\r\nThe same principle is applied to System.Xml.\r\n\r\nBetter Dependency Tracking\r\n==========================\r\n\r\nTo handle the multiple stages, the new Makefiles for the various\r\nparties involved in this loop are now able to build their\r\ndependencies.  This means that typing \"make\" on System.Security or\r\nSystem.Xml or System will build all of the intermediate steps as\r\nrequired, without needing the toplevel Makefile to perform multiple\r\nbuild shots to incrementally build the result.\r\n\r\nBug fixes\r\n=========\r\n\r\nWe must have regressed at some point the build of System.Xml as we\r\nwere only doing one build of it, one without System.Configuration\r\nsupport.  This patch introduces back the changes to build System.Xml\r\nin two steps.\r\n\r\nThis patch fixes the setup where we end up rebuilding System.dll and\r\noverwriting it two times as the build progresses as a side effect\r\n(this is what required LIBRARY_USE_INTERMEDIATE_FILE).\r\n\r\nDetails\r\n=======\r\n\r\nlibrary.make:\r\n\r\n\tIntroduces a new \"the_libdir_base\" which is the raw directory\r\n\twhere the final output will go.   This points to the same location\r\n\tthat libdir_base previously pointed to.\r\n\r\n\tThe existing libdir_base is modified to contain an optional\r\n\t\"intermediate\" directory, where intermediate builds can be\r\n\tplaced. Merge pull request #1039 from joelmartinez/master\n\n[monodoc] removed erroneous instance of 'FOO' string. Merge pull request #943 from ermshiperete/bug-novell-325669\n\n[MWF] Implement multi-display support on Linux (Fixes #325669) Merge pull request #993 from ancailliau/fix-datacontract-json-serialization\n\n[Fix] DataContractJsonSerializer fails serializing/deserializing collections Merge pull request #925 from ermshiperete/novell-bug-602934\n\n[Printing] Fix for Novell bug #602934: improve values that printer settings return Merge pull request #942 from ermshiperete/MessageBoxBugs\n\n[MWF] Improvements to MessageBox width Merge pull request #948 from ermshiperete/bug-xamarin-2394\n\n[MWF] Fixes related to Height and MinimumHeight in DataGridView Merge pull request #926 from ermshiperete/novell-bug-674098\n\n[MWF] Fix hang if clipboard source application closes down Merge pull request #954 from ermshiperete/bug-xamarin-8907\n\n[MWF] Fix TableLayoutPanel layout bug (#8907) Merge pull request #952 from ermshiperete/bug-xamarin-2912\n\n[MWF] Fix AutoSize behavior of FlowLayoutPanel (#2912) Merge pull request #951 from ermshiperete/bug-xamarin-2462\n\n[MWF] Fix clipping of last line of dropdown (#2462) Merge pull request #950 from ermshiperete/bug-xamarin-2787\n\n[MWF] Release capture when clicking LinkLabel (Fixes #2787) Merge pull request #949 from ermshiperete/bug-novell-463149\n\n[MWF] Fix text position on buttons (#463149) Merge pull request #1038 from ermshiperete/bug-xamarin-19818\n\n[MWF] Don't try to remove non-child control (#19818) Drop mono.web.pc [Mono.Web] Further steps to kill Mono.web, this time the pkg-config files Merge pull request #1034 from joelmartinez/msdoc-import2\n\nSecond pass of Microsoft Documentation import [System.Security.Claims] Add ClaimsPrincipal [System.Security.Claims] Add basic support for Claims Adjust the path for Mono.Security Last of the cycles is gone [System.IO.KeventWatcher] Introduce enums with the KEvent flags and constants\n\nThis merely introduces a more readable version of some of the constants that\nwere hardcoded on the source code.\n\nThere is a suspect value \"20\" that was on the original source code, that\nstands for VNodeLink and VNodeExtend, but perhaps the original author\nmeant to say VNodeRename.   In any case, it seems like we should catch all\nof them (except for Revoke). [build] Untangle the System.Web build, just like System and System.Core [build] Drop most uses of LIBRARY_USE_INTERMEDIATE_FILE, clean debug targets [build] Prevent cyclic targets from being built in parallel\n\nSince we are invoking make recursively to satisfy the dependencies\nfor any of the cyclic components, we need to inform make to not try\nto parallelize any work on any of the cyclic dependencies, otherwise\nmultiple builds will execute building the same binary, and the result\nwill be truncated outputs.\n\nFor example, System's Makefile would launch all the parallel builds for\nthe dependencies:\n\n        $(secxml_libdir)/System.dll             \\\n        $(the_libdir_base)System.Xml.dll        \\\n        $(the_libdir_base)Mono.Security.dll     \\\n        $(bare_libdir)/System.dll\n\nThey could be launched in parallel, and in turn the makefiles on those\ndirectories might try simultaneously to invoke recursively a component\nthat has not been built yet.\n\nSo we use .NOTPARALLEL to flag all the cyclic dependencies on a given\ndirectory to instruct make to not run those in parallel. Drop the extra separator Use LOCAL_MCS_FLAGS to prepend the directories [System.Core] Add explicit cycle dependency tracking to System.Core\n\nThis patch is a continuation of the previous work on System to remove\nthe multi-stage build configuration in Mono's class libraries and avoid\nthe overwriting of assemblies in a multi-stage build setup. [build] Staged setup for building assemblies with cyclic dependencies\n\nThis patch introduces an infrastructure to stage the builds for the core\nassemblies that have cyclic dependencies.   This deals directly with\nthe following cycle:\n\n    System.dll requires:\n\tSystem.Configuration.dll\n\tMono.Security.dll\n\tSystem.Xml.dll\n\n\tThey all require System.dll to be built\n\n    System.Xml requires:\n\tSystem.dll\n\tSystem.Configuration.dll\n\n    System.Security.dll requires:\n\tSystem.dll\n\tMono.Security.dll\n\tSystem.Xml.dll\n\nPrinciple\n=========\n\nThe patch works by directing the build infrastructure to place\nintermediate build steps on their own directory.  For example the\nfirst System.dll build that only takes a dependency in mscorlib.dll is\nplaced not under the final directory but on a subdirectory called\n\"bare\".\n\nThe second time that System.dll is built (after Mono.Security and\nSystem.Xml have been built) is placed on the \"secxml\" directory.\n\nThe third time is the final build, and that one ends in the profile\ndirectory.\n\nThe same principle is applied to System.Xml.\n\nBetter Dependency Tracking\n==========================\n\nTo handle the multiple stages, the new Makefiles for the various\nparties involved in this loop are now able to build their\ndependencies.  This means that typing \"make\" on System.Security or\nSystem.Xml or System will build all of the intermediate steps as\nrequired, without needing the toplevel Makefile to perform multiple\nbuild shots to incrementally build the result.\n\nBug fixes\n=========\n\nWe must have regressed at some point the build of System.Xml as we\nwere only doing one build of it, one without System.Configuration\nsupport.  This patch introduces back the changes to build System.Xml\nin two steps.\n\nThis patch fixes the setup where we end up rebuilding System.dll and\noverwriting it two times as the build progresses as a side effect\n(this is what required LIBRARY_USE_INTERMEDIATE_FILE).\n\nDetails\n=======\n\nlibrary.make:\n\n\tIntroduces a new \"the_libdir_base\" which is the raw directory\n\twhere the final output will go.   This points to the same location\n\tthat libdir_base previously pointed to.\n\n\tThe existing libdir_base is modified to contain an optional\n\t\"intermediate\" directory, where intermediate builds can be\n\tplaced.\n\nOther cycles\n============\n\nThe System.Design assembly was listed as having cycles, but while this\ncycle exists in theory, in practice we have not implemented any of the\ncode that brings the cycle in System.Windows.Forms.Design's\nImageListImageEditor and chances are, we wont any time soon. Merge pull request #1018 from ermshiperete/xamarin-19567\n\n[MWF] Clear currentCell before disposing (fixes #19567) Merge pull request #1010 from davidmoore1/bug-19304\n\nPrevent call to OwnerLostFocusHandler for disposed object [corlib] Remove stale comments System: Fix the previous bulid [System] Fix build warnings Updated HTML reference test output Small touchups to the UI, remove some extra space, use a bold, large font for the text Merge pull request #1009 from joelmartinez/msdoc-import\n\n[docs] monodoc style update for blockquote attribution. genproj: add support for Alias in project references [genproj] For Path.GetFullPath to work, we must use convert Windows paths to Unix paths Merge pull request #1006 from joelmartinez/msdoc-import\n\nImport of Microsoft BCL Documentation [genproj] Steps towards making pre-build scripts cross platform;   Lots more build now Refreshed the CSProj files to use the new output build directory [genproj] Set the output directory to the Mono one, not an intermediary one Update order.xml [genproj] Some hygiene changes to genproj, to be able to even digest this Add System.Xml.Linq to the dotnet.pkg Runtime documentation will now build with srcdir != builddir\n\nThis removes an old and broken patch that did not allow for\nclean builds of Mono.   The old patch was so bad, that instead\nof fixing the actual source of the problem (the ability to build\nthe runtime documentation when the source directory was not the\nsame as the build directory), a hack was added to circumvent\n`make distcheck''s security system and changed the permissions\nat build time for the source directory to become read/write.\n\nThis fixes the problem Update the configuration file for project builds Remove empty space from assembly name Merge pull request #987 from StephenMcConnel/bug-18874\n\nAdjust scrollbar display after layout if autosized children Style on the README file, make it more readable for command line users Remove profanity System/PCL: Implement HttpWebRequest.SupportsCookieContainer, WebRequest.CreateHttp;   Fixes #18378 WebResponse.cs: Implement SupportsHeaders property Further doc updates, and schema fixing Merge pull request #912 from Treer/patch-1\n\n[FIX] mono-xmltool can't write to a file when prettyprinting, and corrupts the input file. Add documentation for CFNetworkHandler Add System.Net.Http documentation [System.Runtime.Serialization] Fix from Brendan Zagaeski for bug #17663 [runtime] some inline api docs Work around DNS problem on the build hosts [style] comment style updated Add test for Bug #15572 from pull request #820 Add tests for bug #15574, pull request 819 Merge pull request #1148 from steffen-kiess/json\n\nFix several issues in System.Json Merge pull request #1152 from danielrh/hyperlink_package_parse\n\nFixes https://github.com/OfficeDev/Open-XML-SDK/issues/7 by allow absolute urls in relationships Fix enumeration values [WCF] Make BasicHttpBinding.AllowCookies work\n\nThis patch is from Brendan Zagaeski and fixes bug 11307\n\nThe description of the problem was:\n\nIn Mono 2.10.12, the BasicHttpBinding property no longer supports\nEnableHttpCookieContainer because it is Depreciated. The replacement\nis AllowCookies, but this property does not work. Upon inspection of\nthe source source, we find that the HttpCookieContainerBindingElement\nis added in accordance with EnableHttpCookieContainer, but not\nAllowCookies.\n\nThe conditional compile logic at [1] is no longer needed for\nXamarin.iOS or Xamarin.Android. Revert change that introduces a new undocumented environment variable MemoryMappedFile fixes\n\nThis patch includes a few fixes:\n\n\t* CreateNew will actually create a memory map file, the previous logic\n\t  in MemoryMapImpl.Open was wrong, and would fail if the file did not\n\t  exist.   We now cope with this (bug #20052 was caused by this).\n\n \t* Some exceptions were wrong, so this patch updates the\n\t  exceptions being thrown to be the right ones\n\n\t* On Mobile, we inverted the logic to ensure that capacity must be\n\t  bigger or equal than the file size (which is what the API needs to do),\n\t  previously it performed the opposite test.\n\nAdded tests that match the behavior on .NET for this. [build] Address the System.Configuration test problem\n\nThe compiler seems to ignore reference assemblies with a full path when the\n-lib: directive is passed, so things like:\n\n      -lib:FOO -r:BAR/bar.dll\n\nWould resolve bar.dll to FOO/bar.dll, instead of BAR/bar.dll.\n\nThis is a problem with the test suite as it needs to reference the\nfinal build of System.Configuration from $(the_libdir_base) and not\nthe intermediate step.\n\nTo work around this issue, we introduce \"test_remove\" variable that is\na piece of text that will be removed from the TEST_COMPILE variable\nwhen this is evaluated.\n\nThis means that it gets CSCOMPILE and then it removes the bits that we\nare not interested in. [build] the csproj files can now do a full class libraries build [System.Runtime.Remoting] Build if DBEUG Is defined [build] MSBuild setup: Add support for -keyfile and -delaysign, thanks to Marek Safar for the pointer [build] Drop AssemblyInfo from the sources in Mono.Cecil.Mdb [build] Fix Mono.Cecil.Mdb build with xbuild [build] Make Mono.Cecil use an [assmebly:AssemblyKeyFile] to specify keyfile\n\nCurrently the flag is passed on the command line, but this is\nproblematic for us since our xbuild implementation does not seem to support\nthe attribute that generates the /keyfile: argument [build] Fix the reference to ecma.pub [build] Fresh new csproj files based on the updated build system. [build] Fix location of the key file [Managed.Windows.Forms] Disable TRACE code, since it is broken [build] The ecma.pub is one directory above [msvc/scripts] Update order.xml file with Makefile changes, update generator [build] Ensure that staged build directories are set on LOCAL_MCS_FLAGS\n\nThe LOCAL_MCS_FLAGS are passed to the compiler before the standard\ndirectory for the profile.  This is important both for correctness,\nand also assists the solution generator, since we can now precisely\ndetermine which intermediate project must be referenced. [mscorlib] Since .NET 4.5 some of the System.IdentityModel now is in the core, add this class [build] Add new project files based on the new staged build [build] Use LOCAL_MCS_FLAGS to give preference to the intermediate dir in System builds, and do not use temporary files for corlib builds [System] Fix parsing of IPv6 addresses (bug #18574)\n\nFrom Dick Porter:\n\nThe IPv6 address parser misses some syntax errors, and can become confused by\naddresses that at first glance look IPv4 compatible.  The attach patch contains\nthe following fixes:\n\nDon't fail to parse an address if we mistakenly thought it was IPv4 compatible\nor mapped, just treat it as IPv6.\n\nFix IPv4-compatible and mapped address formatting in ToString().\n\nFix parsing of colons - specifically occurrences of ':::'.\n\nMake sure blocks of digits are no longer than 4 characters.\n\nAdd some more parsing tests to Mono's NUnit test suite.\n\nAdd a NUnit test for bogus IPv6 addresses. Update order.xml [build/msbuild] Tool resolves assemblies based on exact match, not random-last [vsbuild] Update Makefiles to not generate the VS metadata for the 'basic' profile [build] Kill OpenSystem.C from the Makefile [build] Revert change in Facades parellism patch, since it works great for builds, but not for other recursive targets (ie: update-csproj, maybe others [build] Kill OpenSystem.C, nobody ever used this [build] Fix the build for NET_4_5 (and maybe other profiles) from the pull request 981 [build] Record extra library builds for our Visual Studio input files\n\nAdded local targets (csproj-local) to all the assemblies that have\nstaged builds to dump their build information for the underlying\ndependencies.\n\nThis information is needed to create the new Visual Studio csproj\nfiles.\n\nThis commit also updates the collected build metadata from running:\n\n     make update-csproj\n     make package-inputs\n\nAs described in msvc/scripts/README [build] System.Configuration: fix signatures.\n\nWe must use the secxml library directory to reference System, not\nbare.\n\nThe bare build does not contain a full signature for some interfaces\n(there is a using XmlNode = object in a few interfaces that\nSystem.Configuration depends on).\n\nSo System.Configuration must reference the System that has been\ncompiled with XML support. [build/Facades] Parallelize the Facades directory build\n\nThe parallelization is done by overriding the default \"all\" target\nand instead of using the serial subdirectory processing that goes\nover the SUBDIR and xx_SUBDIR rules, we turn the list of\nsubdirectories into the name of the target, for example:\n\n     System.Collections.Concurrent\n\nbecomes:\n\n     ../../class/lib/net_4_5/Facades/System.Collections.Concurrent.dll\n\nThen a pattern is added to handle that rule:\n\n     $(target_dir)/%.dll:\n\nThis allows the build to be parallized. Merge pull request #1041 from mono/staged-cyclic-builds\n\nThis patch introduces an infrastructure to stage the builds for the core\r\nassemblies that have cyclic dependencies.   This deals directly with\r\nthe following cycle:\r\n\r\n    System.dll requires:\r\n\tSystem.Configuration.dll\r\n\tMono.Security.dll\r\n\tSystem.Xml.dll\r\n\r\n\tThey all require System.dll to be built\r\n\r\n    System.Xml requires:\r\n\tSystem.dll\r\n\tSystem.Configuration.dll\r\n\r\n    System.Security.dll requires:\r\n\tSystem.dll\r\n\tMono.Security.dll\r\n\tSystem.Xml.dll\r\n\r\nPrinciple\r\n=========\r\n\r\nThe patch works by directing the build infrastructure to place\r\nintermediate build steps on their own directory.  For example the\r\nfirst System.dll build that only takes a dependency in mscorlib.dll is\r\nplaced not under the final directory but on a subdirectory called\r\n\"bare\".\r\n\r\nThe second time that System.dll is built (after Mono.Security and\r\nSystem.Xml have been built) is placed on the \"secxml\" directory.\r\n\r\nThe third time is the final build, and that one ends in the profile\r\ndirectory.\r\n\r\nThe same principle is applied to System.Xml.\r\n\r\nBetter Dependency Tracking\r\n==========================\r\n\r\nTo handle the multiple stages, the new Makefiles for the various\r\nparties involved in this loop are now able to build their\r\ndependencies.  This means that typing \"make\" on System.Security or\r\nSystem.Xml or System will build all of the intermediate steps as\r\nrequired, without needing the toplevel Makefile to perform multiple\r\nbuild shots to incrementally build the result.\r\n\r\nBug fixes\r\n=========\r\n\r\nWe must have regressed at some point the build of System.Xml as we\r\nwere only doing one build of it, one without System.Configuration\r\nsupport.  This patch introduces back the changes to build System.Xml\r\nin two steps.\r\n\r\nThis patch fixes the setup where we end up rebuilding System.dll and\r\noverwriting it two times as the build progresses as a side effect\r\n(this is what required LIBRARY_USE_INTERMEDIATE_FILE).\r\n\r\nDetails\r\n=======\r\n\r\nlibrary.make:\r\n\r\n\tIntroduces a new \"the_libdir_base\" which is the raw directory\r\n\twhere the final output will go.   This points to the same location\r\n\tthat libdir_base previously pointed to.\r\n\r\n\tThe existing libdir_base is modified to contain an optional\r\n\t\"intermediate\" directory, where intermediate builds can be\r\n\tplaced. Merge pull request #1039 from joelmartinez/master\n\n[monodoc] removed erroneous instance of 'FOO' string. Merge pull request #943 from ermshiperete/bug-novell-325669\n\n[MWF] Implement multi-display support on Linux (Fixes #325669) Merge pull request #993 from ancailliau/fix-datacontract-json-serialization\n\n[Fix] DataContractJsonSerializer fails serializing/deserializing collections Merge pull request #925 from ermshiperete/novell-bug-602934\n\n[Printing] Fix for Novell bug #602934: improve values that printer settings return Merge pull request #942 from ermshiperete/MessageBoxBugs\n\n[MWF] Improvements to MessageBox width Merge pull request #948 from ermshiperete/bug-xamarin-2394\n\n[MWF] Fixes related to Height and MinimumHeight in DataGridView Merge pull request #926 from ermshiperete/novell-bug-674098\n\n[MWF] Fix hang if clipboard source application closes down Merge pull request #954 from ermshiperete/bug-xamarin-8907\n\n[MWF] Fix TableLayoutPanel layout bug (#8907) Merge pull request #952 from ermshiperete/bug-xamarin-2912\n\n[MWF] Fix AutoSize behavior of FlowLayoutPanel (#2912) Merge pull request #951 from ermshiperete/bug-xamarin-2462\n\n[MWF] Fix clipping of last line of dropdown (#2462) Merge pull request #950 from ermshiperete/bug-xamarin-2787\n\n[MWF] Release capture when clicking LinkLabel (Fixes #2787) Merge pull request #949 from ermshiperete/bug-novell-463149\n\n[MWF] Fix text position on buttons (#463149) Merge pull request #1038 from ermshiperete/bug-xamarin-19818\n\n[MWF] Don't try to remove non-child control (#19818) Drop mono.web.pc [Mono.Web] Further steps to kill Mono.web, this time the pkg-config files Merge pull request #1034 from joelmartinez/msdoc-import2\n\nSecond pass of Microsoft Documentation import [System.Security.Claims] Add ClaimsPrincipal [System.Security.Claims] Add basic support for Claims Adjust the path for Mono.Security Last of the cycles is gone [System.IO.KeventWatcher] Introduce enums with the KEvent flags and constants\n\nThis merely introduces a more readable version of some of the constants that\nwere hardcoded on the source code.\n\nThere is a suspect value \"20\" that was on the original source code, that\nstands for VNodeLink and VNodeExtend, but perhaps the original author\nmeant to say VNodeRename.   In any case, it seems like we should catch all\nof them (except for Revoke). [build] Untangle the System.Web build, just like System and System.Core [build] Drop most uses of LIBRARY_USE_INTERMEDIATE_FILE, clean debug targets [build] Prevent cyclic targets from being built in parallel\n\nSince we are invoking make recursively to satisfy the dependencies\nfor any of the cyclic components, we need to inform make to not try\nto parallelize any work on any of the cyclic dependencies, otherwise\nmultiple builds will execute building the same binary, and the result\nwill be truncated outputs.\n\nFor example, System's Makefile would launch all the parallel builds for\nthe dependencies:\n\n        $(secxml_libdir)/System.dll             \\\n        $(the_libdir_base)System.Xml.dll        \\\n        $(the_libdir_base)Mono.Security.dll     \\\n        $(bare_libdir)/System.dll\n\nThey could be launched in parallel, and in turn the makefiles on those\ndirectories might try simultaneously to invoke recursively a component\nthat has not been built yet.\n\nSo we use .NOTPARALLEL to flag all the cyclic dependencies on a given\ndirectory to instruct make to not run those in parallel. Drop the extra separator Use LOCAL_MCS_FLAGS to prepend the directories [System.Core] Add explicit cycle dependency tracking to System.Core\n\nThis patch is a continuation of the previous work on System to remove\nthe multi-stage build configuration in Mono's class libraries and avoid\nthe overwriting of assemblies in a multi-stage build setup. [build] Staged setup for building assemblies with cyclic dependencies\n\nThis patch introduces an infrastructure to stage the builds for the core\nassemblies that have cyclic dependencies.   This deals directly with\nthe following cycle:\n\n    System.dll requires:\n\tSystem.Configuration.dll\n\tMono.Security.dll\n\tSystem.Xml.dll\n\n\tThey all require System.dll to be built\n\n    System.Xml requires:\n\tSystem.dll\n\tSystem.Configuration.dll\n\n    System.Security.dll requires:\n\tSystem.dll\n\tMono.Security.dll\n\tSystem.Xml.dll\n\nPrinciple\n=========\n\nThe patch works by directing the build infrastructure to place\nintermediate build steps on their own directory.  For example the\nfirst System.dll build that only takes a dependency in mscorlib.dll is\nplaced not under the final directory but on a subdirectory called\n\"bare\".\n\nThe second time that System.dll is built (after Mono.Security and\nSystem.Xml have been built) is placed on the \"secxml\" directory.\n\nThe third time is the final build, and that one ends in the profile\ndirectory.\n\nThe same principle is applied to System.Xml.\n\nBetter Dependency Tracking\n==========================\n\nTo handle the multiple stages, the new Makefiles for the various\nparties involved in this loop are now able to build their\ndependencies.  This means that typing \"make\" on System.Security or\nSystem.Xml or System will build all of the intermediate steps as\nrequired, without needing the toplevel Makefile to perform multiple\nbuild shots to incrementally build the result.\n\nBug fixes\n=========\n\nWe must have regressed at some point the build of System.Xml as we\nwere only doing one build of it, one without System.Configuration\nsupport.  This patch introduces back the changes to build System.Xml\nin two steps.\n\nThis patch fixes the setup where we end up rebuilding System.dll and\noverwriting it two times as the build progresses as a side effect\n(this is what required LIBRARY_USE_INTERMEDIATE_FILE).\n\nDetails\n=======\n\nlibrary.make:\n\n\tIntroduces a new \"the_libdir_base\" which is the raw directory\n\twhere the final output will go.   This points to the same location\n\tthat libdir_base previously pointed to.\n\n\tThe existing libdir_base is modified to contain an optional\n\t\"intermediate\" directory, where intermediate builds can be\n\tplaced.\n\nOther cycles\n============\n\nThe System.Design assembly was listed as having cycles, but while this\ncycle exists in theory, in practice we have not implemented any of the\ncode that brings the cycle in System.Windows.Forms.Design's\nImageListImageEditor and chances are, we wont any time soon. Merge pull request #1018 from ermshiperete/xamarin-19567\n\n[MWF] Clear currentCell before disposing (fixes #19567) Merge pull request #1010 from davidmoore1/bug-19304\n\nPrevent call to OwnerLostFocusHandler for disposed object [corlib] Remove stale comments System: Fix the previous bulid [System] Fix build warnings Updated HTML reference test output Small touchups to the UI, remove some extra space, use a bold, large font for the text Merge pull request #1009 from joelmartinez/msdoc-import\n\n[docs] monodoc style update for blockquote attribution. genproj: add support for Alias in project references [genproj] For Path.GetFullPath to work, we must use convert Windows paths to Unix paths Merge pull request #1006 from joelmartinez/msdoc-import\n\nImport of Microsoft BCL Documentation [genproj] Steps towards making pre-build scripts cross platform;   Lots more build now Refreshed the CSProj files to use the new output build directory [genproj] Set the output directory to the Mono one, not an intermediary one Update order.xml [genproj] Some hygiene changes to genproj, to be able to even digest this Add System.Xml.Linq to the dotnet.pkg Runtime documentation will now build with srcdir != builddir\n\nThis removes an old and broken patch that did not allow for\nclean builds of Mono.   The old patch was so bad, that instead\nof fixing the actual source of the problem (the ability to build\nthe runtime documentation when the source directory was not the\nsame as the build directory), a hack was added to circumvent\n`make distcheck''s security system and changed the permissions\nat build time for the source directory to become read/write.\n\nThis fixes the problem Update the configuration file for project builds Remove empty space from assembly name Merge pull request #987 from StephenMcConnel/bug-18874\n\nAdjust scrollbar display after layout if autosized children Style on the README file, make it more readable for command line users Remove profanity System/PCL: Implement HttpWebRequest.SupportsCookieContainer, WebRequest.CreateHttp;   Fixes #18378 WebResponse.cs: Implement SupportsHeaders property Further doc updates, and schema fixing Merge pull request #912 from Treer/patch-1\n\n[FIX] mono-xmltool can't write to a file when prettyprinting, and corrupts the input file. Add documentation for CFNetworkHandler Add System.Net.Http documentation [System.Runtime.Serialization] Fix from Brendan Zagaeski for bug #17663 [runtime] some inline api docs Work around DNS problem on the build hosts [style] comment style updated Add test for Bug #15572 from pull request #820 Add tests for bug #15574, pull request 819 Add tests for bug #15574, pull request 819 Merge pull request #820 from brendanzagaeski/master\n\nBug 15572. Lookup KnownTypeCollection element types in MSSimpleNamespace 2009-11-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* UnmanagedMemoryStream.cs: Move the CLS attribute to the methods\n\tthat are unsafe.\n\n\t* Path.cs (Combine):e Fix implementation to follow docs (we need\n\tto reset the path if any of the combined paths is rooted), and add a\n\tcouple of overloads;\n\n\t* FileStream.cs (Flush/flushToDisk): Implement.\n\n\t* Stream.cs (CopyTo): Implement.\n\n\n\nsvn path=/trunk/mcs/; revision=145640 No makefile was added for System.Data.Services; Comment out for now\n\nsvn path=/trunk/mcs/; revision=145639 Add  minutes\n\nsvn path=/trunk/mcs/; revision=145638 Jumbo patch for NET_2_0, mscorlib is now clean\n\nsvn path=/trunk/mcs/; revision=145621 More removal of old defines\n\nsvn path=/trunk/mcs/; revision=145612 More removal of old defines\n\nsvn path=/trunk/mcs/; revision=145609 2009-11-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* Add configure check for xbox360\n\nsvn path=/trunk/mono/; revision=145554 MoreDocs\n\nsvn path=/trunk/mono/; revision=145438 Update\n\nsvn path=/trunk/mono/; revision=145437 Update\n\nsvn path=/trunk/mono/; revision=145434 2009-11-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* FileStream.cs: Check the return value of MonoIO.Write and handle\n\tshort-writes as those can happen when a FileStream is used on top\n\tof a pipe on Unix.\n\n\tFixes bug: #531613, this should be backported to 2-4 and 2-6 after\n\tsome testing.\n\nsvn path=/trunk/mcs/; revision=145271 2009-11-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* TermInfoDriver.cs (CheckWindowDimensions) Avoid extra checks, as\n\tthe condition was always checked previously.\n\n\t(WriteSpecialKey): Actually write the tab character.\n\nsvn path=/trunk/mcs/; revision=145264 System.Reflection.Emit's turn to be de-ifdefified\n\nsvn path=/trunk/mcs/; revision=145242 System.Reflection's turn to be de-ifdefified\n\nsvn path=/trunk/mcs/; revision=145241 System.Reflection's turn to be de-ifdefified\n\nsvn path=/trunk/mcs/; revision=145240 More NET_2_0 removal\n\nsvn path=/trunk/mcs/; revision=145236 Jumbo NET_2_0 removal\n\nsvn path=/trunk/mcs/; revision=145235 2009-11-02  Miguel de Icaza  <miguel@novell.com>\n\n        * Jumbo patch to drop support for pre-NET_2_0 code:\n\n        Remove NET_2_0 defines assuming the value is true.\n\n\nsvn path=/trunk/mcs/; revision=145232 2009-11-02  Miguel de Icaza  <miguel@novell.com>\n\n        * Jumbo patch to drop support for pre-NET_2_0 code:\n\n        Remove ONLY_1_1 code\n        Remove NET_1_0 only code\n        Remove NET_2_0 defines assuming the value is true.\n\n\nsvn path=/trunk/mcs/; revision=145230 2009-11-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* More NET_2_0 define removal, assume that it is now always true. \n\n\n\nsvn path=/trunk/mcs/; revision=145213 2009-11-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* Copy some collections from WindowsBase here for 4.0 support.\n\nAdd a handful of methods from 4.0 as well\n\n\nsvn path=/trunk/mcs/; revision=145180 2009-10-31  Miguel de Icaza  <miguel@novell.com>\n\n\t* threads.c: refactor the code that initializes the\n\tthread_start_args into a reusable function and use this in the two\n\tmethods that start up threads.\n\nsvn path=/trunk/mono/; revision=145153 Add new classes\n\nsvn path=/trunk/mcs/; revision=145149 Update namespace\n\nsvn path=/trunk/mcs/; revision=145146 Add BigInteger to System.Numerics from the Microsoft MS-PL'ed DLR\n\n\nsvn path=/trunk/mcs/; revision=145145 oops\n\nsvn path=/trunk/mcs/; revision=144602 2009-10-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* StringBuilder.cs (Text): Add new 4.0 method.\n\nsvn path=/trunk/mcs/; revision=144601 2009-10-22  Miguel de Icaza  <miguel@novell.com>\n\n\t*  String.cs (IsNullOrWhiteSpace, Concat, Join): New 4.0 methods. \n\n\t* IntPtr.cs (Add, Subtract): New 4.0 methods.\n\n\t* Tuple.cs: Updated signature.\n\nsvn path=/trunk/mcs/; revision=144600 2009-10-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* BinaryWriter.cs, BinaryReader.cs: 4.0 signature update.\n\n\t* File.cs (ReadLines, AppendAllLines, WriteAllLines): Add\n\tIEnumerable methods.\n\n\t* Path.cs (Combine): add the params overload. \n\nsvn path=/trunk/mcs/; revision=144597 Fix build\n\nsvn path=/trunk/mcs/; revision=144593 Additionificate System.Numerics\n\nsvn path=/trunk/mcs/; revision=144417 More\n\nsvn path=/trunk/mcs/; revision=144305 Drop more obsolete defines\n\n\nsvn path=/trunk/mcs/; revision=144304 2009-10-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* Jumbo patch to elimiante more dead code now that we have dropped\n\tpre-2.0 profiles.\n\n\nsvn path=/trunk/mcs/; revision=144303 More removal of old profile\n\nsvn path=/trunk/mcs/; revision=144302 2009-10-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* Jumbo patch to drop support for pre-NET_2_0 code:\n\n\tRemove ONLY_1_1 code\n\tRemove NET_1_0 only code\n\tRemove NET_2_0 defines assuming the value is true.\n\n\tImprove one MonoTODO;   Implement one MonoTODO/Niex.\n\n\tRan a textual diff on the resulting assembly to validate that the\n\trestul is the same on NET_2_0\n\n\nsvn path=/trunk/mcs/; revision=144298 Fix for MonoTouch builds\n\nsvn path=/trunk/mcs/; revision=144297 +\t* ServerType.cs: Do not use Activator.CreateInstance, use the call\n+\tdirectly. \n+\n+2009-10-02  Miguel de Icaza  <miguel@novell.com>\n+\n+\t* ServerType.cs: Refactored all of this code to not use\n+\tActivator.CreateInstance. \n\n\nsvn path=/trunk/mcs/; revision=144296 NEver commited this, oops\n\nsvn path=/trunk/mcs/; revision=144295 Update\n\nsvn path=/trunk/mono/; revision=143313 2009-09-30  Miguel de Icaza  <miguel@novell.com>\n\n\t* Call the constructors directly for MonoTouch, instead of using\n\tthe Activator.CreateInstance.\n\n\tI do not see why we need Activator.CreateInstance *at all* in this\n\tcase, we should just kill that. \n\nsvn path=/trunk/mcs/; revision=143109 2009-09-30  Miguel de Icaza  <miguel@novell.com>\n\n\t* ExtensionManager.cs: Initialize the NET_2_0 pieces with\n\tMonoTouch, but do not register any of the System.Configuration\n\tdepending extensions.\n\n\tBuildExtensionImporters, BuildExtensionReflectors: empty methods\n\tfor MOnoTouch.\n\n\t* ServiceDescriptionImporter.cs, WebReference.cs: Remove\n\tcodegeneration features for MonoTouch\n\n2009-09-30  Miguel de Icaza  <miguel@novell.com>\n\n\t* Methods.cs: Empty extensions for MonoTouch for now.\n\n\t* ServerType.cs: On MonoTouch, we do not support HttpGet or\n\tHttpPost variations yet.\n\n\t* SoapExtension.cs: Avoid System.Configuration features.\n\nsvn path=/trunk/mcs/; revision=142956 2009-09-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* HttpUtility.cs: Do not use CAS Attributes when using MonoTouch.\n\n\tRemove unnecesasry using clause.\n\nsvn path=/trunk/mcs/; revision=142952 Remove the use of G_GNUC_PRETTY_FUNCTION with the proper pattern which \nis \"%s....\", __func__\n\nWe probably should remove these anyways\n\nsvn path=/trunk/mono/; revision=142528 This patch replaces the calls to g_strcasecmp with either\nmemcmp, g_ascii_strcasecmp or mono_utf8_strcasecmp since the\nsymbols are becoming deprecated in newer Glibs.\n\nsvn path=/trunk/mono/; revision=142515 First pass at replacing deprecated APIs in Glib 3 with the new names.\n\nPretty sad, hopefully we are moving away from Glib soon\n\n\nsvn path=/trunk/mono/; revision=142513 2009-06-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* gc.c: Raise a NullArgumentException if the object passed is\n\tnull.    \n\nsvn path=/trunk/mono/; revision=142510 2009-09-22  Mike Feldman and Stephen A. Jazdzewski <steve@jazd.com>\n\n\t* XUtil.cs: This patch fixes the '\"False\" is not a valid boolean\n\tvalue' exception in System.Xml.XmlConverter when using output from\n\tSystem.Linq.XUtil.  XUtil incorrectly uses \"False\" and \"True\"\n\tinstead of \"false\" and \"true\" on boolean attributes.\n\nsvn path=/trunk/mcs/; revision=142442 2009-09-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* expression.cs: Do not crash when MemberLookup returns something\n\tthat is not a MemberExpr here.   Report error 582 instead. \n\n\tFixes #499988.\n\n\nsvn path=/trunk/mcs/; revision=142286 Dist this one as well\n\nsvn path=/trunk/mcs/; revision=141467 Add WindowsBase to the build\n\nsvn path=/trunk/mcs/; revision=141433 Copy\n\nsvn path=/trunk/mcs/; revision=141432 Put WindowsBase on mcs/class for System.IO.Packaging\n\n\nsvn path=/trunk/mcs/; revision=141398 2009-09-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* TermInfoDriver.cs: Handle a few more key combinations.\n\nsvn path=/trunk/mcs/; revision=141360 2009-08-11  Jérémie Laval  <jeremie.laval@gmail.com>\n\n\t* corlib.dll.sources: Update with moved files.\n\t* corlib_test.dll.source: Updated with moved files.\n\n2009-07-31  Jérémie Laval  <jeremie.laval@gmail.com>\n\nsvn path=/trunk/mcs/; revision=141190 Update comment\n\nsvn path=/trunk/mono/; revision=141167 Fix build\n\nsvn path=/trunk/mcs/; revision=139934 2009-08-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* ConsoleLogger.cs: Change the format of the error and warnings\n\tstrings to work when invoked inside Emacs by not rendering the\n\tcolumn if available, by using lowercase \"error\"/\"warning\" strings\n\tinstead of camelcased versions and to not have unnecessary padding.\n\n2009-07-31  Ankit Jain  <jankit@novell.com>\n\nsvn path=/trunk/mcs/; revision=139618 Update\n\nsvn path=/trunk/mcs/; revision=139617 2009-08-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* generic.cs: This loop was incorrect, it was increment ii, but\n\tchecking for `i'.  This was a change introduced to fix #327497,\n\tnow we fix #424012.\n\n\nsvn path=/trunk/mcs/; revision=139540 2009-08-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* class.cs: Catch another case for cs0533 error, fixes #324782.\n\n\nsvn path=/trunk/mcs/; revision=139538 2009-08-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* Start the split between PLATFORM_WIN32 and TARGET_WIN32.  \n\n\tPLATFORM_WIN32 should be used to configure the runtime while\n\tbuilding it.   TARGET_WIN32 is used for target execution.\n\n\tThis is used by Mono's AOT cross compiler when running on Windows,\n\tbut targetting a different operating system.    So we have to tell\n\tthose two apart.\n\n\nsvn path=/trunk/mono/; revision=139363 2009-08-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* posix.c (_wapi_stdhandle_create): Split this into a new file to\n\tmore easily support non-Posix platforms.\n\nsvn path=/trunk/mono/; revision=139362 Fix\n\nsvn path=/trunk/mcs/; revision=139308 2009-08-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* Extensions.cs: Add a null guard and return null on failure,\n\tinstead of crashing.\n\nsvn path=/trunk/mcs/; revision=139263 2009-08-02  Miguel de Icaza  <miguel@novell.com>\n\n\t* cs-parser.jay: Flag variables declared on the interactive shell\n\tas used to prevent the 168 warning about local variable not being\n\tused. \n\nsvn path=/trunk/mcs/; revision=139261 2009-08-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* Various changes to support the non-XAP XmlSchema resolution on\n\tthe Moonlight build.    \n\n\tMajor missing feature: WebRequest resolution.\n\nsvn path=/trunk/mcs/; revision=139248 2009-08-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* Various changes to support the non-XAP XmlSchema resolution on\n\tthe Moonlight build.    \n\n\tMajor missing feature: WebRequest resolution.\n\nsvn path=/trunk/mcs/; revision=139246 Do not use Xap loading on MonoTouch profile\n\nsvn path=/trunk/mcs/; revision=139245 Update man page\n\nsvn path=/trunk/mono/; revision=138964 2009-07-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* UTF8Encoding.cs: Small optimization, reuse the static\n\tEncoderFallback and DecoderFallback instead of creating new ones. \n\nsvn path=/trunk/mcs/; revision=138787 2009-07-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* UTF8Encoding.cs: Use Equals to compare the objects as the\n\tfallback objects do not overload operator ==.    The comparison\n\twas previously failing.\n\nsvn path=/trunk/mcs/; revision=138786 2009-07-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* Value types implementing IConvertible.ToType now throw an\n\tArgumentNullException if they are passed a null as the\n\t\"targetType\" argument.\n\n\tThis code can not be put directly in the Convert.ToType method, as\n\tthis method is used by Convert.ToType (object o, TypeCode tc)\n\twhich uses null as a target to throw a different kind of error\n\t(InvalidCastException).\n\n\tFixes a few more bugs in the Silverlight BCL test suite.\n\n\tAdditionally, the parameter type has been renamed.\n\nsvn path=/trunk/mcs/; revision=138730 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* Type.cs: (GetMember) call directly the worker method, instead of\n\tcalling through an intermediary.\n\n\t(GetMember, full): throw if the name is null.\n\nsvn path=/trunk/mcs/; revision=138710 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* ILGenerator.cs: Fix the exception thrown when LocalBuilders are\n\tmixed between ILGenerators.\n\nsvn path=/trunk/mcs/; revision=138709 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c (ves_icall_Type_GetNestedType): Throw an exception when\n\tpassed invalid arguments.   Fixes another crasher in the\n\tSilverlight test suite.\n\nsvn path=/trunk/mono/; revision=138708 Add new test\n\nsvn path=/trunk/mcs/; revision=138707 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* class.c (mono_class_array_element_size): Return 0 for the size\n\tof the class;  This fixes the crasher exposed by :\n\n\ttypeof (void).MakeArrayType ();\n\nsvn path=/trunk/mono/; revision=138706 Revert\n\nsvn path=/trunk/mcs/; revision=138705 Wrong fix;  Revert\n\nsvn path=/trunk/mcs/; revision=138704 2009-06-10  Gert Driesen  <drieseng@users.sourceforge.net>\n\n\t* corlib_test.dll.sources: Added test for InternalVisibleToAttribute.\n\nsvn path=/trunk/mcs/; revision=138703 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c (ves_icall_MonoType_GetEvent): Do not dereference method\n\tif there is no method to dereference.    Put all the code that\n\tdepends on this inside the if (method) block.\n\n\tThis fixes the crasher exposed by Microsoft's Silvelright CLR test\n\tsuite  ./Reflection/Emit/TypeBuilder/TypeBuilderGetEvent.exe\n\n\tWith this change, we pass the test.\n\nsvn path=/trunk/mono/; revision=138702 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* reflection.c (mono_reflection_sighelper_get_signature_local):\n\tOnly dereference the assembly if it has been set.    Fixes a\n\tcrasher exposed by #525328\n\nsvn path=/trunk/mono/; revision=138701 Small fix for trace\n\nsvn path=/trunk/mono/; revision=138700 2009-07-26  Miguel de Icaza  <miguel@novell.com>\n\n\t* Calendar.cs: Do not add internal abstract methods to the\n\tCalendar class, it prevents derived classes from existing. \n\nsvn path=/trunk/mcs/; revision=138695 2009-07-22  Jb Evain  <jbevain@novell.com>\n\n\t* monotouch_System.dll.sources: bring Process in.\n\nsvn path=/trunk/mcs/; revision=138685 Typo fix\n\nsvn path=/trunk/mcs/; revision=138683 Revert patch until Rodrigo comes back on Monday\n\nsvn path=/trunk/mcs/; revision=138681 Fix\n\nsvn path=/trunk/mono/; revision=138677 Update docs\n\nsvn path=/trunk/mono/; revision=138079 fix\n\nsvn path=/trunk/mcs/; revision=137749 Found with Umbraco, this method ignores null pages\n\nsvn path=/trunk/mcs/; revision=137744 Flush\n\nsvn path=/trunk/mcs/; revision=137699 2009-06-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* Timer.cs: Throw ArgumentNullException if the callback is null. \n\nsvn path=/trunk/mcs/; revision=136912 2009-06-10  Gert Driesen  <drieseng@users.sourceforge.net>\n\n\t* corlib_test.dll.sources: Added test for InternalVisibleToAttribute.\n\nsvn path=/trunk/mcs/; revision=136908 2009-06-10  Gert Driesen  <drieseng@users.sourceforge.net>\n\n\t* corlib_test.dll.sources: Added test for InternalVisibleToAttribute.\n\n2009-06-10  Marek Safar  <marek.safar@gmail.com>\n\nsvn path=/trunk/mcs/; revision=136902 2009-06-10  Gert Driesen  <drieseng@users.sourceforge.net>\n\n\t* corlib_test.dll.sources: Added test for InternalVisibleToAttribute.\n\n2009-06-10  Marek Safar  <marek.safar@gmail.com>\n\nsvn path=/trunk/mcs/; revision=136898 2009-06-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* Int32.cs: Fix regression introduced in 2005, we need to throw\n\tArgumentNullException on Parse.\n\nsvn path=/trunk/mcs/; revision=136895 2009-06-10  Gert Driesen  <drieseng@users.sourceforge.net>\n\n\t* corlib_test.dll.sources: Added test for InternalVisibleToAttribute.\n\nsvn path=/trunk/mcs/; revision=136652 Up\n\nsvn path=/trunk/mono/; revision=136248 Add testing framework to go over all the xaml files\n\nsvn path=/trunk/moon/; revision=79122 Add test for other things (line, strokedasharray, double marshalling)\n\nsvn path=/trunk/moon/; revision=79107 2007-06-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp, runtime.h (BasicArray): New base struct for\n\tPointArray and double array, puts the count field at the beginning\n\tand avoids an extra block to be allocated (count and values are\n\tnow on a single contiguous block).\n\n\tIntroduce a refcount for the arrays, so that we can release those\n\tproperly.  Due to the nature of how we copied values before we\n\thad to leak the values, when the leak was plugged, we crashed.  \n\n\tThe refcount is there just because it was easy, we could clone if\n\twe wanted, but also I would like to keep the refcount there to\n\tensure that the array of doubles is aligned on an 8 byte\n\tboundary. \n\n\t(double_array_new, point_array_new): New methods to create the\n\tstructures. \n\n\t(Value): Now free the arrays.\n\n\nsvn path=/trunk/moon/; revision=79106 Exercise color demarshal\n\nsvn path=/trunk/moon/; revision=79092 Test using ints, to check the new convert functioanlity\n\nsvn path=/trunk/moon/; revision=79088 Test for Left/Top\n\nsvn path=/trunk/moon/; revision=79084 Add a handful of extra types\n\nsvn path=/trunk/moon/; revision=79075 Also this one\n\nsvn path=/trunk/moon/; revision=79072 Add\n\nsvn path=/trunk/moon/; revision=79070 Update\n\nsvn path=/trunk/moon/; revision=79069 Everything else is using g_strdup\n\nsvn path=/trunk/moon/; revision=79066 2007-06-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h (value_color_from_argb): Temporary hack until we\n\tfigure out how to marshal Colors properly, we are using the uint32\n\tconstructor, we should figure out if this is what we want, or if\n\twe should go down the route of using doubles (C++ stores thinks as\n\tDoubles our managed API as bytes).\n\nsvn path=/trunk/moon/; revision=79059 Exercise some more of the managed API\n\nsvn path=/trunk/moon/; revision=79058 Casing\n\nsvn path=/trunk/moon/; revision=79054 Fix signature for unrealize.   Sorry about that, now we can reload the plugin in Firefox\n\nsvn path=/trunk/moon/; revision=79053 Keep README up to date\n\nsvn path=/trunk/moon/; revision=79049 Be more paranoid, in particular, catch whether the drawing area is destroyed, and if so, clear our field pointing to it, to avoid a double destroy later\n\nsvn path=/trunk/moon/; revision=79030 Expose pointer signature\n\nsvn path=/trunk/moon/; revision=79019 Updates\n\nsvn path=/trunk/moon/; revision=79015 Cope with changes to the underlying property being different than changing the value\n\nsvn path=/trunk/moon/; revision=79011 i2007-06-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h (UIElement): Remove user_xform_origin as a field, now\n\twe pull this from the DependencyObject as it should be. \n\n\t* runtime.cpp (UIElement::OnSubPropertyChanged): Catch a bunch of\n\tother properties that would trigger an invalidate/bounds\n\trecomputation. \n\n\t(item_init): initialize the other properties that the managed code\n\tneeds. \n\t\n\t* shape.cpp, ffvideo.cpp: updated to use the\n\tRenderTransformOriginProperty in the computation of the center for\n\tthe transformation.\n\n\n\nsvn path=/trunk/moon/; revision=79008 Update README\n\nsvn path=/trunk/moon/; revision=79003 2007-06-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp, runtime.h (Collection): Rework the collection to\n\tuse abstract methods (gulp), \n\n\t(VisualCollection): New collection, derives from Collection, does\n\tthe collection thing.\n\n\t(Panel.OnPropertyChanged): If our children collection is updated,\n\ttake care of it here.\n\n\t(DependencyObject): use free instead of g_free as we are\n\tallocating strings with strdup.\n\t\n\t(Value): drop constructor that specified type, type is not part of\n\tValue.\n\t\n\t* xaml.cpp, shape.cpp: Remove use of the old destructors now that we keep\n\ttrack of types correctly.\n\n\n\nsvn path=/trunk/moon/; revision=78998 My TODO so I dont forget\n\nsvn path=/trunk/moon/; revision=78968 Update\n\nsvn path=/trunk/moon/; revision=78926 2007-06-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Panel): Make children a property of the panel so we\n\tcan access it from the managed world.\n\n\t(Value): Add new constructor that takes a full type, need to\n\tdiscuss this with the team.\n\n\nsvn path=/trunk/moon/; revision=78925 2007-06-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (runtime_init): Add panel_init\n\n\t(panel_init): Register Children property (must still create the\n\tcollections, that will be a new fight).\n\n\nsvn path=/trunk/moon/; revision=78921 Link libmoon with all the proper libraries, so the managed code can load it\n\nsvn path=/trunk/moon/; revision=78918 Add gtk binding\n\nsvn path=/trunk/moon/; revision=78917 Hope that Jackson does not mind this\n\n2007-06-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* xaml.cpp (start_element_handler): For the top element, track the\n\ttype that we loaded, so we can return this to our caller (needed\n\tfor the managed interface).\n\n\t(XamlParserInfo): track also the Value::Kind of the top_element. \n\n\t(xaml_create_from_file, xaml_create_from_str): Both now can\n\toptionally return the type of the toplevel element.\n\n\nsvn path=/trunk/moon/; revision=78916 2007-06-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Value): Switch Value to strdup/free.\n\n\tUse inited to prevent multiple initializations.\n\nsvn path=/trunk/moon/; revision=78913 Commit, completely untested\n\nsvn path=/trunk/moon/; revision=78910 2007-06-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h: Store Value.BOOL in an int32, simplifies my life. \n\nsvn path=/trunk/moon/; revision=78901 update\n\nsvn path=/trunk/moon/; revision=78895 2007-06-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (dependency_object_set_value,\n\tdependency_object_get_value): Add C# callable method calls to\n\tcontrol the properties.\n\n\t(dependency_property_lookup): Add a way of find dependency\n\tproperties.\n\n\nsvn path=/trunk/moon/; revision=78893 Up\n\nsvn path=/trunk/moon/; revision=78873 Some debugging aids for the ScaleY problem which causes\nrepaints to fail due to getboundingbox being busted (it is\nreally ScaleY that is busted)\n\n2007-06-07  Miguel de Icaza  <miguel@novell.com>\n\n        * animation.cpp (get_now): The time computation was wrong, there\n        was an extra \"10\" in there that made all computations go astray\n        and in particular cause the large values for ScaleY, which made\n        getboundingbox ridiculously slow.\n\n        For debugging purposes: ScaleY was being set to\n        131472940552.95215, which came from\n        DoubleAnimation:GetCurrentValue which was computing this value\n        from a busted clock.\n\n\nsvn path=/trunk/moon/; revision=78852 So it seems that using a Cairo xlib surface was reported as slow\nby Rolf on his machine, added a -fps option to start collecting\ndata, I will restore the old gdk-pixbuf based copy code as well\nand see if that helps\n\n\nsvn path=/trunk/moon/; revision=78819 Small change, does it improve perf?\n\nsvn path=/trunk/moon/; revision=78809 2007-06-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h, runtime.cpp: Surface is no longer derived from\n\tCanvas, it now instead hosts a canvas, should avoid having two\n\tnested canvases for loading XAML files.\n\n\tdemo.cpp: update.\n\n\nsvn path=/trunk/moon/; revision=78806 Better?\n\nsvn path=/trunk/moon/; revision=78805 oops\n\nsvn path=/trunk/moon/; revision=78804 2007-06-06  Miguel de Icaza  <miguel@novell.com>\n\n\tCorrect computation of the bounding box for shapes and videos.\n\n\t* shape.cpp: Do not pop the cairo state after draw and then call\n\textents as the computation on extents is done with the current\n\tcairo context, not the cairo context that drew the data before\n\tpopping (this would show up with thick brushes).\n\n\t* runtime.cpp: Add 2 instead of 1, as double to integer rounding\n\tcan take two values (negative and positive).\n\n\t* cutil.cpp: Cut and paste cairo code here, it computes the proper\n\tbounding box from the extents using the current absolute matrix. \n\n\n\nsvn path=/trunk/moon/; revision=78799 2007-06-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h: Move all the types into the Value::Kind enumeration\n\tso that we can have a shared type system.\n\n\n\nsvn path=/trunk/moon/; revision=78789 2007-06-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* demo.cpp (main): Allow loading a XAML file from the command\n\tline, for your testing pleasure.\n\nsvn path=/trunk/moon/; revision=78786 oops\n\nsvn path=/trunk/moon/; revision=78785 2007-06-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* ffvideo.cpp (convert_to_rgb): We no longer need the loop to swap\n\tchannels.\n\n\tMove to cairo to render to the screen the contents\n\tof the buffer.   ffmpeg and cairo do have the same RGBA format, it\n\twas actually the copy from this format to the screen using\n\tgdk_draw_pixbuf that failed: pixbuf expected the data in another\n\tformat and there is no way to configure it.\n\t\n\t* runtime.cpp (surface_clear): use the cairo api as the surface is\n\tno longer living on the client buffer. \n\n\t(surface_destroy): update\n\n\t(create_xlib, realized_callback, unrealized_callback): When the\n\twidget is realized, create a cairo context\n\n\nsvn path=/trunk/moon/; revision=78784 Fix build, remove warning\n\nsvn path=/trunk/moon/; revision=78702 A TODO file, feel free to add to it\n\nsvn path=/trunk/moon/; revision=78701 2007-06-05  Miguel de Icaza  <miguel@novell.com>\n\n\tAdd type checking on SetValue, RegisterProperty to avoid\n\tmistakes. \n\nsvn path=/trunk/moon/; revision=78700 2007-06-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* shape.cpp, ffvideo.cpp, video.cpp: Do not use x, y anymore, we\n\tnow have an absolute affine set for us beforehand.\n\n\t* runtim.cpp: on update_xform call the parent ::get_xform_for to\n\tobtain the base affine transform to use.\n\n\nsvn path=/trunk/moon/; revision=78689 2007-06-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (item_set_transform): This routine was doing nothing\n\tbut doing an invalidate of the region, updating the transform,\n\tupdating the bounding box and re-invalidating the new area.   Move\n\tthat logic elsewhere (it was also ignoring the affine parameter\n\tanyways). \n\n\n\nsvn path=/trunk/moon/; revision=78677 2007-06-05  Miguel de Icaza  <miguel@novell.com>\n\n\tUnify user_xform with the RenderTransform dependency property, now\n\twe always have a static absolute transformation in the UIElement. \n\n\n\nsvn path=/trunk/moon/; revision=78676 2007-06-05  Miguel de Icaza  <miguel@novell.com>\n\n\tImplement the OnPropertySet stuff, builds on Toshok's first pass.\n\n\tNext stage: discuss with Toshok the migration to this awesome\n\tframework from Events ;-)\n\t\n\t* runtime.cpp (SetValue): when adding dependencyobjects track on\n\tthe attached object the ownership.\n\n\tNotify all containers of a property change.\n\n\t* brush.cpp (Brush): Remove AddListener, RemoveListener, we can\n\tuse the property notification system for these.\n\n\t* runtime.h (DependencyObject): Add a \"attached_list\" gslist to\n\tkeep track of all the objects where this particular\n\tDependencyObject has been attached to, to provide OnPropertyChange\n\tnotifications (not hooked up yet).\n\n\t(Value): Introduce DependencyObject constructor.\n\n\nsvn path=/trunk/moon/; revision=78641 update\n\nsvn path=/trunk/moon/; revision=78636 2007-06-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.h: Make the \"Base\" refcounting class the base for\n\tDependencyObject. \n\nsvn path=/trunk/moon/; revision=78604 2007-06-04  Miguel de Icaza  <miguel@novell.com>\n\n\t* ffvideo.cpp: Set audio initialization to zero for now, so we can\n\tcontinue debugging.\n\n\t* runtime.cpp (Canvas): override render, in preparation for using\n\tattached properties.   I get the feeling am going to regret not\n\tkeeping the top/left attached properties somewhere else.\n\n\t(Value): introduce the discriminating union for values as\n\tdiscussed on irc.\n\t\n\t(DependencyObject): use lower case name for properties.\n\tTake Value * instead of void *, this is so we can represent NULL\n\tvalues (is this a good idea Chris, or do we want to have a\n\tValue.Type.NULL enumeration value?\n\n\tUpdate hash table creation to g_free the result on hash table\n\tupdate and removal.\n\n\t(Event): Update indentation to be Linux-like instead of GNU like.\n\n\nsvn path=/trunk/moon/; revision=78603 Simple test, crashes in DependencyObject, that stuff is not ready yet\n\nsvn path=/trunk/moon/; revision=78533 Sample test bed for starting the C# binding\n\nsvn path=/trunk/moon/; revision=78529 2007-06-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* runtime.cpp (Collection, Panel): The beginning of an API to\n\tencapsulate collections that we will expose to the unmanaged\n\tworld.  \n\n\tThis should be the backend for the base collection class in agclr\n\tfor the strongly typed types.   \n\n\tThe idea is to have the MS.Internal.Collection<T> be a proxy that\n\tcontains an IntPtr pointer to the C++ Collection instance and map\n\tthe various add/remove methods to it.\n\n\tThe immediate goal is to be able to do from C#:\n\n\t        Rectangle r = new Rectangle ();\n\t\tr.Brush = new SolidColorBrush (new Color (1, 0, 0));\n\t\tCanvas.Children.Add (r);\n\n\n\nsvn path=/trunk/moon/; revision=78509 Update to my api changes\n\nsvn path=/trunk/moon/; revision=78483 2007-06-02  Miguel de Icaza  <miguel@novell.com>\n\n\tImplement support for the render origin.\n\t\n\t* runtime.cpp (item_invalidate): add one to cope with the rouding\n\tfrom floats to ints (fixes some trailing junk).\n\n\tItem: redo the affine transformation setup to support both the\n\trender_transform_origin property and avoid recomputing all of this\n\ton each repaint request.\n\n\nsvn path=/trunk/moon/; revision=78482 2007-06-02  Miguel de Icaza  <miguel@novell.com>\n\n        * ffvideo.cpp: Changed the code to do the actual video decoding\n        * on\n        the main thread so we can put all the video and audio in the\n        queues before we start rendering.\n\n        Failed attempts at getting audio to work.\n\n        * Everywhere: renamed Item to UIElement to better match the\n        * actual\n        class hierarchy that we will be exposing.\n\n\n\nsvn path=/trunk/moon/; revision=78479 Added ugly hack workaround to change the format of the video\n\nsvn path=/trunk/moon/; revision=78451 Compute the micro_to_pts correctly\n\nsvn path=/trunk/moon/; revision=78436 Initialize\n\nsvn path=/trunk/moon/; revision=78434 More\n\nsvn path=/trunk/moon/; revision=78433 More for Paolo\n\nsvn path=/trunk/moon/; revision=78430 For Paolo\n\nsvn path=/trunk/moon/; revision=78427 2007-06-01  Miguel de Icaza  <miguel@novell.com>\n\n\t* ffvideo.cpp: No longer use CMD_INITED, instead use g_idle_add to\n\tnotify a special function (callback_video_inited).  Makes me\n\twonder if I should do the same for the new-frame call\n\n\tInitialize the cairo surface on the callback_video_inited routine\n\tinstead of doing this on the decoder thread (that was a mistake).\n\n\tThis solves the misterious case of the video that randomly did not\n\tshow up.\n\n\nsvn path=/trunk/moon/; revision=78394 Rename\n\nsvn path=/trunk/moon/; revision=78393 Update thinking\n\nsvn path=/trunk/moon/; revision=78392 More stuff, rectangles paint, but we got a \nsituation with the outline being shown for the\nother videos.\n\nsvn path=/trunk/moon/; revision=78387 More\n\nsvn path=/trunk/moon/; revision=78369 up\n\nsvn path=/trunk/moon/; revision=78367 Some reorg\n\nsvn path=/trunk/moon/; revision=78364 Flush\n\nsvn path=/trunk/moon/; revision=78363 2007-05-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* video.cpp (load_next_frame): reimplement the video play back\n\tlogic so that it will now properly paint the proper frame on the\n\tscreen as needed.\n\n\tAdd logic to skip frames if video is playing back too slowly, and\n\tto resume playback when new frames are ready.\n\n\tCurrently its computing the delay using the n_frame_rate field\n\t(which no sample uses, but I could not find any other way of\n\testimating the frame rate other than this.\n\n\tIt works at least with some sample streams that I have with 30 fps\n\tand 15 fps.\n\n\t* runtime.cpp: Move the GtkDrawingArea widget into the Surface,\n\tand handle exposes in the runtime, not in the demo.   Show the\n\twidget (thats why I was not getting the expose events on the\n\twidget, duh). \n\n\nsvn path=/trunk/moon/; revision=78162 Update\n\nsvn path=/trunk/moon/; revision=78084 Add missing brush.cpp, tiny fixes\n\nsvn path=/trunk/moon/; revision=78082 Fix autogen to cope with modern ways of using libtool\n\nsvn path=/trunk/moon/; revision=78070 Some refactoring\n\nsvn path=/trunk/moon/; revision=77996 move to C++\n\nsvn path=/trunk/moon/; revision=77991 Delete this\n\nsvn path=/trunk/moon/; revision=77984 Updated vtables, we will probably move to C++\n\nsvn path=/trunk/moon/; revision=77981 Update README\n\nsvn path=/trunk/moon/; revision=77980 Moonlight C runtime\n\nsvn path=/trunk/moon/; revision=77979 Add tests for bug #15574, pull request 819 Merge pull request #820 from brendanzagaeski/master\n\nBug 15572. Lookup KnownTypeCollection element types in MSSimpleNamespace Merge pull request #819 from brendanzagaeski/patch-1\n\nBug 15574. XML deserialization recursion: add array type to known_types? Merge pull request #796 from alesliehughes/master\n\nSupport for DispIdAttribute in GetIdsOfNames Merge pull request #778 from cmorris98/master\n\nSqlBulkCopy Implementation Merge pull request #835 from HorstKakuschke/master\n\nFixes Xamarin Bug 16742:  XmlConvert.ToDateTime(string, XmlDateTimeSeria... [mscorlib] Path: fix GetFullPath (/../bin/bash) to return /bin/bash, not bin/bash, fixes 17083 [HttpListener] Only bind to the specified hosts (and support '*' as Any), fixes #17204, #10818 [Uri] Fix the ParserUser feature of UriParseComponents\n\nThe current implementation was wrong, did not bother with pct-encoding\n(despite being listed in the comments) and did not use the actual set\nof characters listed on the spec, instead of using a white-list, it\nhad its own incorrect black-list. #17636: Allow Int32.Parse with/AllowExponents to take negative exponents.  This is a change in behavior from 2009, when we fixed this: Novell#542464, now we match .NET 4.5 [DataAnnotation.Validator] Add support for nullable types, patch from lmarinucci@yahoo.com, fixes #17318 WebRequest: Provide stub ImpersonationLevel\n\nThe old implementation threw an exception requesting that the method be implemented\nin a derived class, but the method is not virtual, so it could have never been\nimplemented.\n\nSince Mono does not support this, at least we keep the token around and avoid\nthrowing. Revert \"Exclude more console code from NET_2_1\"\n\nSince we no longer care about Moonlight, this patch is no longer needed,\nand enables some cute functionality on the iOS REPL.\n\nThis reverts commit ec445c82f7b7cc86ec9e0c2e561e3f28dd4e57e2. Add support for stdout returns [csharp] do not try to read 0 characters for a string [csharp] Make the stream reader iterate until all data has been read Add new --client/--server[=server[:port] support for the shell update copyright Updated documentation Update 2012 changes to sgen license Comment style;   Wrap at 100 Comment style Merge pull request #780 from miniBill/master\n\nFix off-by-one error in ArraySegment Merge pull request #814 from ranma42/fix-monop\n\n[monop] Fix handling of private and filter-obsolete flags when rendering... Merge pull request #802 from alistair/universaltime_at_boundary_end\n\nTimeZone.GetUtcOffset daylight savings improvements Update for coverity List maintainer, for scan.coverity.com Do not justify the text Comment style Merge pull request #795 from mono/readme2\n\n[README] Minor update to content and use markdown formatting. Rename README to README.md Merge pull request #717 from mono/client_websockets_impl\n\nAdd implementation of ClientWebSocket FixBuild This regex was wrong in the first place, and second, it uses CC code from Stackoverflow Remove CodeProject licensed code Add actual source Fix inacurrate reference Wrap the code in MONO_BEGIN/END_DECLS Update message Simplify locale fetching, we have very simple needs Add workaround for DNS garbage return Remove comment, refer to the spec instead Remove text from article Rewrite the header file, based on the internal mono-hash.c contents More inline docs Improve inline docs Add inline api docs mono_patch_info_hash: handle the MONO_PATCH_INFO_OBJC_SELECTOR_REF case Console.iOS: Reset sb.Length in all cases, even for poor man's print Console.iOS: add fallback for the case where monotouch_log is not linked in Add System.DirectoryServices.Protocols to the rpm build to fix the bots FullAOT fallback: Slightly better random Not currently referenced Class libraries: introduce mobile_static profile, for MonoTouch-like static builds, but not limited to iOS (WinStore, Kumpera did the work). [compiler docs]: Update to reflect way to debug the parser Merge pull request #666 from mhutch/cairo-fix-3.0\n\nMono.Cairo improvements Put back the tests, we were trying to track down the regressions Document --break with generic methods Merge pull request #629 from pruiz/syswebrouting-fixes2\n\n[Sys.Web.Routing] Refactor of Route's GetVirtualPath implementation based on System.Web.Http.Routing code in order to fix a few incompatibilities between our implementation and the one at ms.net Merge pull request #644 from knocte/connstrings\n\n [System.Configuration] Remove a misleading MonoTODO in ConnectionStrings Merge pull request #627 from abock/master\n\nSupport Mac OS X for System.Net.NetworkInformation.NetworkChange Merge pull request #615 from nealef/master\n\nFix incompatibility with .NET's serialization of ObservableCollection Merge pull request #620 from knocte/monoservice_playground\n\nLittle improvements to mono-service land. Merge pull request #618 from knocte/aspnet_lru\n\n[WebConfigurationManager] Fix memleak by using a LruCache (BXC#5598) Merge pull request #606 from sesef/master\n\nFix .NET incompatibility in UpDownBase [corlib] Marshal: fine-tune the pointer Read/Write operations.\n\nThis patch reworks the Marshal's Read and Write pointer operations\nto avoid performing a modulo operation to choose the fast path, as\nin some platforms the modulo operation is implemented as a C subroutine.\n\nInstead we use bit operations which always run in constant time.\n\nIt also avoids the IntPtr.XXX method calls, factors out \"unsafe\", only\never performs one IntPtr->pointer conversion, and makes the source\ncode uniform. Add a test for the WebUtility.HtmlEncode bits Progress<T> (ActioN<T>) constructor now also initializes the context Merge pull request #597 from kamalaboulhosn/master\n\nTranslate errno for EHOSTDOWN to WSAEHOSTDOWN Merge pull request #469 from symform/symform-better-drive-type-check\n\nWhen detecting drive type it is possible that a path might be mounted mo... Merge pull request #594 from Adeath56/patch-1\n\nSystem.Web.dll : NullReferenceException on GetItemInternal() after a Session.Abandon() Merge pull request #595 from UCIS/master\n\nFixed handling of modifier keys in KeyEventArgs constructor (bug #6707) Merge pull request #577 from UCIS/patch-2\n\nFix serialization of DateTime struct for MS compatibility Merge pull request #585 from mk8/master\n\nBug 10233 fix proposal for Socket.BeginSendFIle Merge pull request #588 from Daniel15/bug-10872\n\nFix bug #10872 (Expires and Last-Modified headers should use two-digit days) When serializing floats and doubles, use the InvariantCulture, so that floats are always stored in Json format, not the locale-specific format;   As reported on irc Merge pull request #573 from mrieker/master\n\ntasklets.c: update used stack size Merge pull request #554 from deplinenoise/ppc_fixes\n\nPPC build fixes Merge pull request #556 from jack-pappas/ipproto-patch\n\nAdded checks for BSD-compliant protocol constants. Merge pull request #557 from jack-pappas/gacutil-patch\n\nFixed gacutil so assemblies with the \".exe\" extension can be uninstalled. Merge pull request #560 from duboisj/master\n\nAllow cross-compilation on Mac OS X host to Windows target. Merge pull request #561 from akoeplinger/bufferless-fix\n\nSystem.Web: Fixed bugs in HttpRequest.GetBufferlessInputStream() Revert \"[HttpWebRequest] Avoid using the threadpool for synchronous requests\"\n\nThis reverts commit b190db44cbf321391ab0cf946f4501eae76f2eb3.\n\nThe reason is:\n\n\"The HttpWebRequests tests are not enough\"\n\n\"A quick review of the code shows that the code is taking a lock, while\ncalling a function that retries connections (which in turn takes another\nimportant lock --for the socket--) which might casue a stack overflow\nif someone calls SetWriteStream\"\n\n\"This also will make the opereation sync when calling Begin/End\"\n\n\"Finally, this is a patch that improves the use of the threadpool, but\nthe threadpool still will end up exhausted\"\n\nProbably best to just increase the number of threads? Revert \"[WebConnection] Use just one delegate to init the connection\"\n\nThis reverts commit 4367f8c04a4e1507a6df965c84fb229c9ea0f666.\n\nThis is needed before I revert b190db44cbf321391ab0cf946f4501eae76f2eb3\nwhich Gonzalo studied and determine shoudl be removed ServicePoint: Use DateTime.UtcNow internally, which avoids looking up the timezone every minute Remove temporary file System.Web: Implenent 4.0 HttpRequest.GetBufferlessInputStream, implemented blind, without access to the real ASP.NET to verify, but should be correct Merge pull request #475 from pruiz/xamarin-bug-7408\n\nImplemented UrlAuthorizationModule.CheckUrlAccessForPrincipal(...) (fixes xamarin bug #7408) Merge pull request #524 from pruiz/mvc-allowhtml-fix\n\nFixes xamarin-bug #8965: AllowHtmlAttribute ignored throwing exception on POST using ASP.NET mvc3 Merge pull request #546 from QuickJack/master\n\nFixes a problem in Mono's ASP.NET Menu Control Merge pull request #547 from jack-pappas/patch-1\n\nOrganized .gitignore and added new patterns. C# Evaluator, Terse syntax fix.\n\nThe terse syntax added a semicolon automatically, but that also meant\nthat things lik:\n\n\tcsharp> for (int i = 0; i < 10; i++)\n\nWould never get a continuation for partial input, since the semicolon\nwoudl make that a valid block.\n\nFix that by first trying to add a block at the end, if that works, then\nwe know we want to continue, otherwise we insert the semicolon. [mscorlib/mobile] Encoding.Default is always UTF8 in mobile, strip out all the code that brings the encoding system Add Contributing Guidelines Merge pull request #487 from mayerwin/patch-1\n\nUpdate mcs/class/System.Core/System/TimeZoneInfo.cs Merge pull request #496 from nicolas-raoul/unit-test-for-issue2907\n\nUnit test for issue2907 Merge pull request #495 from nicolas-raoul/fix-for-issue2907-with-no-formatting-changes\n\nFix for issue 2907: XML \"choice\" not correctly processed during deserialization Added target Fix #6349: Do not use KQueue on Darwin, as their kernel behaves differently than BSD\n\nIntroduce a new define that determines whether we can use kqueue for the threadpool,\nand keep the old check for kqueue, in case we need to use it in the future for something\nelse.\n\nFrom Gonzalo's notes:\n\nI could not reproduce the problem at all on FreeBSD, but it happened\nimmediately on the Mac. And when it happened, I could never kill the\nprocess (tried kill from outside and another thread with\nEnvironment.Exit() but no luck). This led me to believe that it was an\nOS problem. Both asynchronous operations work fine when they are the\nonly asynchronous operation on the socket (I turned the other into\nsynch). When read and writes are asychronous kqueue() changes the\nevent we are waiting for to be read/write. That is usually not a\nproblem, but in this particular case, it looked like 2 separate\nthreads were trying to do the same thing (one for read and one for\nwrite). I tried a simple spin lock per file-descriptor to no avail. I\nalso tried a fat lock and again no luck. Then I found this:\nhttp://lists.apple.com/archives/darwin-dev/2011/Jun/msg00016.html and\nthen remembered that back in 2006, when I first tried a patch to\nsupport kqueue(), Geoff found a similar problem to this one (yeah,\nwhat the fuck, Steve!). The problem has not surfaced earlier because\nmost people that use sockets know how to do it. Setting up read and\nwrite asynch. calls at the same time is not something that pros do,\nbut...\n\nSolutions?\n\n1. Provide a way to disable kqueue at runtime for cases like this (can\nwe set the MONO_DISABLE_AIO environment variable in an iOS mono\nprogram? Just Environment.SetEnvironmentVariable before the first use\nof sockets/threadpool should work.\n\n2. Disable kqueue by default. The benefits of things like epoll and\nkqueue are negligible, really, unless people are dealing with several\nhundreds of sockets (~500 and above) and the default poll based\nimplementation is ok for most applications (xsp would suffer a lot of\ncontention under load, but xsp uses asynch ops the right way :). Add some defensive exceptions to WebConnectionStream to try to track down #6329 2009-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: Changed the default to not build the 4.0 profile\n\tunless explicitly enabled.\n\nsvn path=/trunk/mono/; revision=136155 2009-06-15  Miguel de Icaza  <miguel@novell.com>\n\n\t* MonoTODOAttribute.cs: Thin diet, no point in having virtual\n\tmethods and overrides that do the same thing.\n\nsvn path=/trunk/mcs/; revision=136139 2009-06-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-config.c: Small change to report the PPC64/ILP32 model.\n\nsvn path=/trunk/mono/; revision=135708 Up\n\nsvn path=/trunk/mono/; revision=134848 Forgot this\n\nsvn path=/trunk/mono/; revision=134653 2009-05-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* Disable mono/docs build if we disabled the mcs build.\n\nsvn path=/trunk/mono/; revision=134651 Report glib in use as well\n\nsvn path=/trunk/mono/; revision=134650 forgot this one\n\nsvn path=/trunk/mono/; revision=134619 Update parameters for PS3\n\nsvn path=/trunk/mono/; revision=134618 2009-05-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* wapi_glob.c: Do not need sys/param.h anymore, we now use the\n\tPOSIX PATH_MAX instead of BSD's MAXPATHLEN\n\n\t* handles.c: Do not pull a reference to sockets if they are\n\tdisabled.\n\n\t* sockets.c: Allow for ports to define their own ioctlsocket. \n\n\t* wthreads.c: Remove obsolete code that I recently introudced (the\n\thook for mono_register_thread_attr.\n\nsvn path=/trunk/mono/; revision=134616 2009-05-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c: Remove warnings.\n\n\t* mono-config.c: Allow for CONFIG_CPU to be set in config.h and\n\tprevent auto-detection based on GCC defines.\n\n\tAdd PS3\n\n\t* metadata-verify.c: Do not include signal.h\n\n\t* generic-sharing.c, marshal.c: Add returns to avoid some warning\n\tmessages.  Not sure why the g_assert_not_reached is not enough to\n\tquiet the compiler.\n\t\n\n\t* appdomain.c: Remove code that is not used when\n\tDISABLE_SHADOW_COPY is set.\n\n\t* image.c: use g_getenv\n\n\nsvn path=/trunk/mono/; revision=134615 2009-05-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* versioninfo.c: One missing signature, fixed.\n\nsvn path=/trunk/mono/; revision=134597 2009-05-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* reflection.c: Remove code that it not used with\n\tDISABLE_REFLECTION_EMIT is defined.\n\nsvn path=/trunk/mono/; revision=134581 Remove more eye sores\n\nsvn path=/trunk/mono/; revision=134506 Fix for BSD\n\nsvn path=/trunk/mono/; revision=134505 2009-05-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* daemon.c: Remove more DEBUG ifdef mess.\n\nsvn path=/trunk/mono/; revision=134504 2009-05-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* shared.c (_wapi_shm_attach): Implemention for DISABLE_SHARED_HANDLES \n\nsvn path=/trunk/mono/; revision=134503 Fix setups where DISABLE_SHARED_HANDLES is set\n\nsvn path=/trunk/mono/; revision=134502 Fix the Mac\n\nsvn path=/trunk/mono/; revision=134500 Move platform specific code to io-layer\n\n2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* socket-io.c\n\t(ves_icall_System_Net_Sockets_Socket_Available_internal): Remove\n\tthe ifdef here and instead put that on io-layer\n\n\nsvn path=/trunk/mono/; revision=134498 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* wapi_glob.c (_wapi_glob): Use PATH_MAX from limits.h instead of\n\tthe BSD name from sys/param.h (MAXPATHLEN)\n\n\tDo not include pwd.h as it is not used.\n\nsvn path=/trunk/mono/; revision=134494 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* aot-runtime.c (mono_aot_init): Use g_getenv to work on systems\n\twithout getenv.\n\nsvn path=/trunk/mono/; revision=134493 Make this build\n\nsvn path=/trunk/mono/; revision=134491 Add another header to check\n\nsvn path=/trunk/mono/; revision=134490 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* thread-private.h: Use indent ifdef style for clarity\n\n\t* sockets-wrappers.h: sys/socket.h conditional\n\n\t* daemon-messages.h: sys/uio.h conditional.\n\n\t* sockets.c: sys/ioctl.h conditional\n\n\t* wthreads.c: work around for platforms with no thread fetching\n\tinformation. \n\n\n\nsvn path=/trunk/mono/; revision=134488 Forgot ChangeLog\n\nsvn path=/trunk/mono/; revision=134487 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* locking.c: Split locking code into a separate file.\n\nsvn path=/trunk/mono/; revision=134486 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* locking.c: Split locking code into a separate file.\n\nsvn path=/trunk/mono/; revision=134485 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* locking.c: Split locking code into a separate file.\n\n\nsvn path=/trunk/mono/; revision=134484 Copy\n\nsvn path=/trunk/mono/; revision=134483 Fix typo\n\nsvn path=/trunk/mono/; revision=134478 2009-05-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* shared.c: Split the code to make DISABLE_SHARED remove all the\n\tcode that does not use the shared handles.   Before it merely\n\tremoved some of it, with this we avoid hacks on platforms that can\n\tnot implement it.\n\n\tSplit the code to reduce the amount of ifdefs.\n\n\tRemove #ifdef DEBUG from the source and use a macro instead.\n\n\nsvn path=/trunk/mono/; revision=134477 Indent preprocessor directives to make it easier to follow\n\nsvn path=/trunk/mono/; revision=134475 2009-05-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* daemon.c: Move the compile check of MONO_SIZEOF_SUNPATH to the\n\tfile that uses it.\n\nsvn path=/trunk/mono/; revision=134359 More header checks\n\nsvn path=/trunk/mono/; revision=134358 Do not include prototypes if sys/select.h is not available\n\nsvn path=/trunk/mono/; revision=134357 2009-05-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* Rename `threads.c' to `wthreads.c' as broken build systems are\n\tnot able to cope with two files with the same name across multiple\n\nsvn path=/trunk/mono/; revision=134356 2009-05-18  Miguel de Icaza  <miguel@novell.com>\n\n       * include/private/gcconfig.h: Add support for Linux on the PS3\n\n\nsvn path=/trunk/mono/; revision=134354 Add\n\nsvn path=/trunk/mcs/; revision=134283 2009-05-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* Apply patch from Alex Shulgin\n\t<alexander.shulgin@yessoftware.com> to support OSX in\n\tNetworkInformation classes.\n\nsvn path=/trunk/mcs/; revision=134277 Add more diagnostics\n\nsvn path=/trunk/mono/; revision=134144 2009-05-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* aot-runtime.c (mono_aot_is_shared_got_patch): Move this routine\n\tthat is used at runtime from the aot-compiler.c, this makes it\n\twork on setups that remove the AOT compiler from the output\n\timage. \n\n\nsvn path=/trunk/mono/; revision=133848 Forgot to make this private\n\nsvn path=/trunk/mono/; revision=133842 2009-05-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-value-hash.c (mono_value_hash_table_insert_replace):\n\tInitialize variable, to quiet the compiler. \n\n\t* mono-proclib.c: Eliminate two warnings.\n\nsvn path=/trunk/mono/; revision=133841 2009-05-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* verify.c, metadata-verifier.c: Add support for disabling the\n\tverifier in some builds.\n\n\t[ Sorry, my previous commit accidentally commited some work in\n\tprogress ]\n\nsvn path=/trunk/mono/; revision=133840 Fix warning\n\nsvn path=/trunk/mono/; revision=133839 Add support to disable the verifier\n\nsvn path=/trunk/mono/; revision=133838 2009-05-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: Instead of reporting the various disabled features\n\tin a loop, where a keyword might fail, report the actual disabled\n\tfeatures in the sections that handle them\n\nsvn path=/trunk/mono/; revision=133837 Do not build the dwarfwriter if JIT/AOT are disabled\n\nsvn path=/trunk/mono/; revision=133835 Document\n\nsvn path=/trunk/mono/; revision=133832 Document and add full_messages\n\nsvn path=/trunk/mono/; revision=133831 2009-05-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* messages.c: Split the scan into common and uncommon messages to\n\tallow the messages that are not produced by Mono to be removed on\n\tembedded scenarios.\n\nsvn path=/trunk/mono/; revision=133830 Add new test\n\nsvn path=/trunk/mono/; revision=133829 2009-05-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* messages.c (message_string): instead of having a gigantic switch\n\ttable, use a sorted structure in memory and do a binary search on\n\tit.\n\n\tThis reduces the runtime size by 49k and the debugging symbols by\n\t400k.\n\n\n\nsvn path=/trunk/mono/; revision=133828 Add a handful of extra DISABLE options to the list\n\nsvn path=/trunk/mono/; revision=133827 Contribution from Pia Eriksson <pe@hallerud.se> that fixes\nthe CopyTo method in various generic containers.\n\nAlso fixes #497720\n\n\nsvn path=/trunk/mcs/; revision=133700 Add this too\n\nsvn path=/trunk/mcs/; revision=133619 2009-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* Contribution from David Uvalle <david.uvalle@gmail.com> that\n\timplements FileInfo.Replace.\n\nsvn path=/trunk/mcs/; revision=133617 2009-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* Contribution from Martin Brenn to fix #498154.\n\nsvn path=/trunk/mcs/; revision=133598 Do not build docs if cross compiling or the mcs build is disabled\n\nsvn path=/trunk/mono/; revision=133592 Fix this too\n\nsvn path=/trunk/mono/; revision=133590 Fix the pkg.m4 nonsense in eglib as well\n\nsvn path=/trunk/mono/; revision=133584 2009-05-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: Reduce configure-time dependencies by using\n\tpkg-config the way it was originally intended to be used, and not\n\twith the incredibly lame and painful inducing pkg.m4 file. \n\n\tI am on a quest to remove this gratuitous dep on pkg.m4 that is\n\tmaking people's lives miserable around the globe, just because\n\tsomeone can not be bothered to learn the shell if construct.\n\nsvn path=/trunk/mono/; revision=133582 Forgot to commit\n\nsvn path=/trunk/mcs/; revision=133511 Fix compiler build, make sure generated solutions include the actual HintPath so VS does not turn lib/basic/System.dll into GAC system.dll, so pass the entire relative path\n\nsvn path=/trunk/mono/; revision=133438 Update to support the compiler buidl\n\nsvn path=/trunk/mono/; revision=133436 Update\n\nsvn path=/trunk/mono/; revision=133435 The support\n\nsvn path=/trunk/mcs/; revision=133397 Support the compiler\n\nsvn path=/trunk/mono/; revision=133396 For MCS, override csproj-local to report the right compiler\n\nsvn path=/trunk/mcs/; revision=133395 Forgot to commit this\n\nsvn path=/trunk/mono/; revision=133391 This now builds System.Xml-basic\n\nsvn path=/trunk/mono/; revision=133390 Try this\n\nsvn path=/trunk/mono/; revision=133378 Buidl jay as well\n\nsvn path=/trunk/mono/; revision=133377 Further tuneups\n\nsvn path=/trunk/mono/; revision=133376 Update\n\nsvn path=/trunk/mono/; revision=133375 fix\n\nsvn path=/trunk/mono/; revision=133374 More generated files\n\nsvn path=/trunk/mono/; revision=133373 Use new define: TARGET_X86 on VS as well\n\nsvn path=/trunk/mono/; revision=133372 Better debug\n\nsvn path=/trunk/mono/; revision=133371 Update\n\nsvn path=/trunk/mono/; revision=133370 Move dead code\n\nsvn path=/trunk/mcs/; revision=133369 Add prebuild commands\n\nsvn path=/trunk/mono/; revision=133364 First two assemblies, will probably autogenerate this later\n\nsvn path=/trunk/mono/; revision=133347 update\n\nsvn path=/trunk/mono/; revision=133346 Fix some paths\n\nsvn path=/trunk/mono/; revision=133345 Up\n\nsvn path=/trunk/mono/; revision=133342 Upgrade to 2008\n\nsvn path=/trunk/mono/; revision=133341 Copy\n\nsvn path=/trunk/mono/; revision=133340 Copy\n\nsvn path=/trunk/mono/; revision=133339 Copy\n\nsvn path=/trunk/mono/; revision=133338 Copy\n\nsvn path=/trunk/mono/; revision=133337 Copy\n\nsvn path=/trunk/mono/; revision=133336 Copy\n\nsvn path=/trunk/mono/; revision=133335 Copy\n\nsvn path=/trunk/mono/; revision=133334 Copy\n\nsvn path=/trunk/mono/; revision=133333 Copy\n\nsvn path=/trunk/mono/; revision=133332 Copy\n\nsvn path=/trunk/mono/; revision=133331 Copy\n\nsvn path=/trunk/mono/; revision=133330 Copy\n\nsvn path=/trunk/mono/; revision=133329 Merge pull request #819 from brendanzagaeski/patch-1\n\nBug 15574. XML deserialization recursion: add array type to known_types? Merge pull request #796 from alesliehughes/master\n\nSupport for DispIdAttribute in GetIdsOfNames Merge pull request #778 from cmorris98/master\n\nSqlBulkCopy Implementation Merge pull request #835 from HorstKakuschke/master\n\nFixes Xamarin Bug 16742:  XmlConvert.ToDateTime(string, XmlDateTimeSeria... [mscorlib] Path: fix GetFullPath (/../bin/bash) to return /bin/bash, not bin/bash, fixes 17083 [HttpListener] Only bind to the specified hosts (and support '*' as Any), fixes #17204, #10818 [Uri] Fix the ParserUser feature of UriParseComponents\n\nThe current implementation was wrong, did not bother with pct-encoding\n(despite being listed in the comments) and did not use the actual set\nof characters listed on the spec, instead of using a white-list, it\nhad its own incorrect black-list. #17636: Allow Int32.Parse with/AllowExponents to take negative exponents.  This is a change in behavior from 2009, when we fixed this: Novell#542464, now we match .NET 4.5 [DataAnnotation.Validator] Add support for nullable types, patch from lmarinucci@yahoo.com, fixes #17318 WebRequest: Provide stub ImpersonationLevel\n\nThe old implementation threw an exception requesting that the method be implemented\nin a derived class, but the method is not virtual, so it could have never been\nimplemented.\n\nSince Mono does not support this, at least we keep the token around and avoid\nthrowing. Revert \"Exclude more console code from NET_2_1\"\n\nSince we no longer care about Moonlight, this patch is no longer needed,\nand enables some cute functionality on the iOS REPL.\n\nThis reverts commit ec445c82f7b7cc86ec9e0c2e561e3f28dd4e57e2. Add support for stdout returns [csharp] do not try to read 0 characters for a string [csharp] Make the stream reader iterate until all data has been read Add new --client/--server[=server[:port] support for the shell update copyright Updated documentation Update 2012 changes to sgen license Comment style;   Wrap at 100 Comment style Merge pull request #780 from miniBill/master\n\nFix off-by-one error in ArraySegment Merge pull request #814 from ranma42/fix-monop\n\n[monop] Fix handling of private and filter-obsolete flags when rendering... Merge pull request #802 from alistair/universaltime_at_boundary_end\n\nTimeZone.GetUtcOffset daylight savings improvements Update for coverity List maintainer, for scan.coverity.com Do not justify the text Comment style Merge pull request #795 from mono/readme2\n\n[README] Minor update to content and use markdown formatting. Rename README to README.md Merge pull request #717 from mono/client_websockets_impl\n\nAdd implementation of ClientWebSocket FixBuild This regex was wrong in the first place, and second, it uses CC code from Stackoverflow Remove CodeProject licensed code Add actual source Fix inacurrate reference Wrap the code in MONO_BEGIN/END_DECLS Update message Simplify locale fetching, we have very simple needs Add workaround for DNS garbage return Remove comment, refer to the spec instead Remove text from article Rewrite the header file, based on the internal mono-hash.c contents More inline docs Improve inline docs Add inline api docs mono_patch_info_hash: handle the MONO_PATCH_INFO_OBJC_SELECTOR_REF case Console.iOS: Reset sb.Length in all cases, even for poor man's print Console.iOS: add fallback for the case where monotouch_log is not linked in Add System.DirectoryServices.Protocols to the rpm build to fix the bots FullAOT fallback: Slightly better random Not currently referenced Class libraries: introduce mobile_static profile, for MonoTouch-like static builds, but not limited to iOS (WinStore, Kumpera did the work). [compiler docs]: Update to reflect way to debug the parser Merge pull request #666 from mhutch/cairo-fix-3.0\n\nMono.Cairo improvements Put back the tests, we were trying to track down the regressions Document --break with generic methods Merge pull request #629 from pruiz/syswebrouting-fixes2\n\n[Sys.Web.Routing] Refactor of Route's GetVirtualPath implementation based on System.Web.Http.Routing code in order to fix a few incompatibilities between our implementation and the one at ms.net Merge pull request #644 from knocte/connstrings\n\n [System.Configuration] Remove a misleading MonoTODO in ConnectionStrings Merge pull request #627 from abock/master\n\nSupport Mac OS X for System.Net.NetworkInformation.NetworkChange Merge pull request #615 from nealef/master\n\nFix incompatibility with .NET's serialization of ObservableCollection Merge pull request #620 from knocte/monoservice_playground\n\nLittle improvements to mono-service land. Merge pull request #618 from knocte/aspnet_lru\n\n[WebConfigurationManager] Fix memleak by using a LruCache (BXC#5598) Merge pull request #606 from sesef/master\n\nFix .NET incompatibility in UpDownBase [corlib] Marshal: fine-tune the pointer Read/Write operations.\n\nThis patch reworks the Marshal's Read and Write pointer operations\nto avoid performing a modulo operation to choose the fast path, as\nin some platforms the modulo operation is implemented as a C subroutine.\n\nInstead we use bit operations which always run in constant time.\n\nIt also avoids the IntPtr.XXX method calls, factors out \"unsafe\", only\never performs one IntPtr->pointer conversion, and makes the source\ncode uniform. Add a test for the WebUtility.HtmlEncode bits Progress<T> (ActioN<T>) constructor now also initializes the context Merge pull request #597 from kamalaboulhosn/master\n\nTranslate errno for EHOSTDOWN to WSAEHOSTDOWN Merge pull request #469 from symform/symform-better-drive-type-check\n\nWhen detecting drive type it is possible that a path might be mounted mo... Merge pull request #594 from Adeath56/patch-1\n\nSystem.Web.dll : NullReferenceException on GetItemInternal() after a Session.Abandon() Merge pull request #595 from UCIS/master\n\nFixed handling of modifier keys in KeyEventArgs constructor (bug #6707) Merge pull request #577 from UCIS/patch-2\n\nFix serialization of DateTime struct for MS compatibility Merge pull request #585 from mk8/master\n\nBug 10233 fix proposal for Socket.BeginSendFIle Merge pull request #588 from Daniel15/bug-10872\n\nFix bug #10872 (Expires and Last-Modified headers should use two-digit days) When serializing floats and doubles, use the InvariantCulture, so that floats are always stored in Json format, not the locale-specific format;   As reported on irc Merge pull request #573 from mrieker/master\n\ntasklets.c: update used stack size Merge pull request #554 from deplinenoise/ppc_fixes\n\nPPC build fixes Merge pull request #556 from jack-pappas/ipproto-patch\n\nAdded checks for BSD-compliant protocol constants. Merge pull request #557 from jack-pappas/gacutil-patch\n\nFixed gacutil so assemblies with the \".exe\" extension can be uninstalled. Merge pull request #560 from duboisj/master\n\nAllow cross-compilation on Mac OS X host to Windows target. Merge pull request #561 from akoeplinger/bufferless-fix\n\nSystem.Web: Fixed bugs in HttpRequest.GetBufferlessInputStream() Revert \"[HttpWebRequest] Avoid using the threadpool for synchronous requests\"\n\nThis reverts commit b190db44cbf321391ab0cf946f4501eae76f2eb3.\n\nThe reason is:\n\n\"The HttpWebRequests tests are not enough\"\n\n\"A quick review of the code shows that the code is taking a lock, while\ncalling a function that retries connections (which in turn takes another\nimportant lock --for the socket--) which might casue a stack overflow\nif someone calls SetWriteStream\"\n\n\"This also will make the opereation sync when calling Begin/End\"\n\n\"Finally, this is a patch that improves the use of the threadpool, but\nthe threadpool still will end up exhausted\"\n\nProbably best to just increase the number of threads? Revert \"[WebConnection] Use just one delegate to init the connection\"\n\nThis reverts commit 4367f8c04a4e1507a6df965c84fb229c9ea0f666.\n\nThis is needed before I revert b190db44cbf321391ab0cf946f4501eae76f2eb3\nwhich Gonzalo studied and determine shoudl be removed ServicePoint: Use DateTime.UtcNow internally, which avoids looking up the timezone every minute Remove temporary file System.Web: Implenent 4.0 HttpRequest.GetBufferlessInputStream, implemented blind, without access to the real ASP.NET to verify, but should be correct Merge pull request #475 from pruiz/xamarin-bug-7408\n\nImplemented UrlAuthorizationModule.CheckUrlAccessForPrincipal(...) (fixes xamarin bug #7408) Merge pull request #524 from pruiz/mvc-allowhtml-fix\n\nFixes xamarin-bug #8965: AllowHtmlAttribute ignored throwing exception on POST using ASP.NET mvc3 Merge pull request #546 from QuickJack/master\n\nFixes a problem in Mono's ASP.NET Menu Control Merge pull request #547 from jack-pappas/patch-1\n\nOrganized .gitignore and added new patterns. C# Evaluator, Terse syntax fix.\n\nThe terse syntax added a semicolon automatically, but that also meant\nthat things lik:\n\n\tcsharp> for (int i = 0; i < 10; i++)\n\nWould never get a continuation for partial input, since the semicolon\nwoudl make that a valid block.\n\nFix that by first trying to add a block at the end, if that works, then\nwe know we want to continue, otherwise we insert the semicolon. [mscorlib/mobile] Encoding.Default is always UTF8 in mobile, strip out all the code that brings the encoding system Add Contributing Guidelines Merge pull request #487 from mayerwin/patch-1\n\nUpdate mcs/class/System.Core/System/TimeZoneInfo.cs Merge pull request #496 from nicolas-raoul/unit-test-for-issue2907\n\nUnit test for issue2907 Merge pull request #495 from nicolas-raoul/fix-for-issue2907-with-no-formatting-changes\n\nFix for issue 2907: XML \"choice\" not correctly processed during deserialization Added target Fix #6349: Do not use KQueue on Darwin, as their kernel behaves differently than BSD\n\nIntroduce a new define that determines whether we can use kqueue for the threadpool,\nand keep the old check for kqueue, in case we need to use it in the future for something\nelse.\n\nFrom Gonzalo's notes:\n\nI could not reproduce the problem at all on FreeBSD, but it happened\nimmediately on the Mac. And when it happened, I could never kill the\nprocess (tried kill from outside and another thread with\nEnvironment.Exit() but no luck). This led me to believe that it was an\nOS problem. Both asynchronous operations work fine when they are the\nonly asynchronous operation on the socket (I turned the other into\nsynch). When read and writes are asychronous kqueue() changes the\nevent we are waiting for to be read/write. That is usually not a\nproblem, but in this particular case, it looked like 2 separate\nthreads were trying to do the same thing (one for read and one for\nwrite). I tried a simple spin lock per file-descriptor to no avail. I\nalso tried a fat lock and again no luck. Then I found this:\nhttp://lists.apple.com/archives/darwin-dev/2011/Jun/msg00016.html and\nthen remembered that back in 2006, when I first tried a patch to\nsupport kqueue(), Geoff found a similar problem to this one (yeah,\nwhat the fuck, Steve!). The problem has not surfaced earlier because\nmost people that use sockets know how to do it. Setting up read and\nwrite asynch. calls at the same time is not something that pros do,\nbut...\n\nSolutions?\n\n1. Provide a way to disable kqueue at runtime for cases like this (can\nwe set the MONO_DISABLE_AIO environment variable in an iOS mono\nprogram? Just Environment.SetEnvironmentVariable before the first use\nof sockets/threadpool should work.\n\n2. Disable kqueue by default. The benefits of things like epoll and\nkqueue are negligible, really, unless people are dealing with several\nhundreds of sockets (~500 and above) and the default poll based\nimplementation is ok for most applications (xsp would suffer a lot of\ncontention under load, but xsp uses asynch ops the right way :). Add some defensive exceptions to WebConnectionStream to try to track down #6329 Add some defensive exceptions to WebConnectionStream to try to track down #6329 mobile/System.dll: Add BindingList<T> Add some defensive exceptions to WebConnectionStream to try to track down #6329 mobile/System.dll: Add BindingList<T> NetworkStream: Bring ReceiveTimeout, SendTimeout, Close to MOBILE profile Bring Parallel LINQ to the Mobile profile Merge pull request #446 from UCIS/master\n\nPatch for bug #6718 - incorrect release of XPCOM object causing segmention fault Merge pull request #428 from paszczi/master\n\nFix ArgumentOutOfRangeException in HttpListenerManager.TryDequeueRequest when timeout is less than 0 Revert 4e5e52a29818b5342ec3b9f0b51c74970765c071, which was pull request 242, which was novell bugzilla #689533\n\nThis patch miscompiled attributes like this:\n\n                [EditorBrowsable (EditorBrowsableState.Advanced)]\n                [Export (\"init\")]\n                public  CAKeyFrameAnimation () : base (NSObjectFlag.Empty)\n                {\n                        if (IsDirectBinding) {\n                                Handle = MonoMac.ObjCRuntime.Messaging.IntPtr_objc_msgSend (this.Handle, Selector.Init);\n                        } else {\n                                Handle = MonoMac.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper (this.SuperHandle, Selector.Init);\n                        }\n                }\n\nIn particular the [Export (\"init\")] method to be compiled like this:\n\n    // method line 6274\n    .method public hidebysig specialname rtspecialname\n           instance default void '.ctor' ()  cil managed\n    {\n        .custom instance void class [System]System.ComponentModel.EditorBrowsableAttribute::'.ctor'(valuetype [System]System.ComponentModel.EditorBrowsableState) =  (01 00 02 00 00 00 00 00 ) // ........\n\n        .custom instance void class MonoMac.CoreGraphics.CGImage::'.ctor'(int32, int32, int32, int32, int32, class MonoMac.CoreGraphics.CGColorSpace, valuetype MonoMac.CoreGraphics.CGImageAlphaInfo, class MonoMac.CoreGraphics.CGDataProvider, float32[], bool, valuetype MonoMac.CoreGraphics.CGColorRenderingIntent) =  (01 00 04 69 6E 69 74 00 00 ) // ...init..\n\nNotice the \"CGImage\" attribtue instead of the ExportAttribute Merge pull request #414 from sesef/datagrid\n\nFix #3125 Merge pull request #422 from ianbattersby/bz6389-InvalidSwitch\n\nFix for bz6389 - Absolute paths to project files cause error: 'MSBUILD00... Render obsolete attributes on members Merge pull request #303 from ermshiperete/5278\n\nXamarin-5278: Fix Binder.SelectMethod when passed argument is COM object Merge pull request #309 from i59/patch-1\n\nBuild Configuration: Don't build libmono to Release_SGen in x64 Release ... Merge pull request #335 from robwilkens/DataGridBugs1\n\nThis fixes several bugs in Winforms DataGrid Revert previous patch, see discussion on https://github.com/mono/mono/pull/337 Merge pull request #337 from robwilkens/IdleThreadsFixes\n\nFix:Idle event handler was called on every thread rather than thread ass... Merge pull request #350 from robwilkens/bug1089\n\nBug 1089 Fix: Fix proc/mod name match by also starting at last / in proc... Make ERROR_OPERATION_ABORTED a common message mono_lookup_pinvoke_call: prevent leak by keeping a global MonoDl handle for the internal module.\n\nFrom now on, we will keep a global handle for lookups performed against the \"__Internal\"\nlibrary name.   This will prevent multiple P/Invoke calls from calling mono_dl_open with\nfilename == NULL for each call.\n\nSince Mono never calls mono_dl_close on P/Invoke lookups, this should not pose a problem. Remove more old compile defines Merge pull request #323 from crazyjncsu/master\n\nFixed execution of parallel PageAsyncTasks Merge pull request #388 from strawd/master\n\nFixes for compatibility with ASP.NET Web API Self-hosting Revert the fix for #5747 from 8b5f71ef60146590193298cc870bf72e14b47950, it broke XSP monitoring of the file system Use Ordinal string comparison here. Merge pull request #334 from robwilkens/bug5747\n\nBug 5747 (MacOSX)Fix: KeventWatcher didn't return subdir names in filenames Apply patch from Steven Boswell (ulatekh@yahoo.com) to fix #5591 Remove ToUpperInvariant in the 4.5 version of MEF to fix #5740 Merge pull request #332 from robwilkens/Bug2663-fix\n\nBug 2663: Regular Expression Bug Fixes [corlib/tests] disable the acos test on MacOS, since MacOS acos is broken [class libraries] drop NET_1_0 definitions [class libraries] drop ONLY_1_1 Copyright notices [System] Removal of the NET_2_0 in the source code\n\nModulo the GUID in the assembly and the GUID embedded in some\nfield initializers that use the assembly GUID for their name, the\nassemblies are idential before and after the patch. Removal of NET_1_1 defines and some NET_2_0;   Both defines are true these days in Mono, no versions prior to 2.0 are supported Removal of NET_1_1 defines and some NET_2_0;   Both defines are true these days in Mono, no versions prior to 2.0 are supported [net_1_0] Finally all of NET_1_0 is gone from the source files Fix the comment so our doctools can pick it up Merge pull request #306 from robwilkens/master\n\nBug # 2234 - This fixes bug as reported, but not sure if wise. - Ignores exception under specific condition Merge pull request #308 from viniciusjarina/fix242\n\nFix242 [System.Configuration] Fix System.Configuration to cope with XmlReaders which might not be ConfigXmlTextReaders, fixes test suite [System.Configuration] Disable broken test [build] attempt to fix the Microsoft.Build.Engine tests Merge pull request #304 from crazyjncsu/master\n\nDisabling WCF log activity when logging is disabled by configuration Merge pull request #305 from robwilkens/master\n\nThis fixes bug # 853 in ximarin bugzilla. Merge pull request #302 from konrad-kruczynski/fast_double_to_from_int64\n\nDouble <-> Int64 conversion is much faster now.\r\n\r\nInstead of using GetBytes and converting bytes to long, which involves allocation and deallocation of small temporary array, the simple cpu register load is in fact done now. This results in a much faster operation.\r\n\r\nWith this sample program:\r\n\r\nvar stopwatch = Stopwatch.StartNew();\r\nvar sum = 0L;\r\nfor(var i = 0; i < 100000000; i++)\r\n{\r\n    sum += BitConverter.DoubleToInt64Bits(99.9);\r\n}\r\nstopwatch.Stop();\r\nConsole.WriteLine(stopwatch.Elapsed);\r\nmy results are:\r\n\r\n00:00:00.6614282 with my patch;\r\n00:00:19.8135516 without my patch and Boehm GC;\r\n00:00:10.2296766 without my patch and SGEN GC.\r\nI'm doing a lot of this operations in my serialization framework, so it is quite essential to be fast ;) The performance improvement is due to no-allocation nature of the patch vs the old code, which allocated a temporary array (difference between Boehm and SGEN is explained the same way). Merge pull request #271 from pruiz/xamarin-bug-4108\n\nFix for Xamarin's bug #4108 (BrowserCaps compatibility problem with MS.NET) Merge pull request #283 from robwilkens/master\n\nBug #4786- fix: Mono.Data.Tds.Protocol.TdsConnectionPool.GetConnection() needs to have result set to null before looping back with goto Merge pull request #289 from alaendle/master\n\nForce disposal of Sqlite commands with using-statements in order to better isolate the unit tests. Merge pull request #298 from ermshiperete/4921\n\nXamarin-4921: Fix Listbox.SelectedItem after adding sorted item Merge pull request #297 from ermshiperete/4959\n\nXamarin-4959: Fix copy of clipboard data after app exits Merge pull request #296 from ermshiperete/5116\n\nXamarin-5116: Fix pasting of text with upper-ASCII chars Fix from Stephen McConnel for bug 5010 Merge pull request #293 from viniciusjarina/fix3258\n\nFix3258 AOT not supported on Windows, warn the user Add these to MOBILE as well When running in MonoTouch, compare against a reference image, instead of generating the reference image Add inline api docs for mono_dll_insert Bump version Some small changes to assist Coregraphics System.Drawing remove this internal getter, from https://github.com/jbevain/cecil/commit/e9f7b3bf39567cb7268e3e7490ab0c253b990606#commitcomment-1230204 Small touch up in the DrawingTest Bring jbevain/cecil's commit 7d9999c60bd538a19a84f1211064ef104f07ee82, Fix writing of delay-signed assemblies Bring jbevain/cecil's commit fb8dcbabcfbb611faeb47f1db53d54022ead2551, style fixes Bring jbevain/cecil's commit 4ef434e294031c985cc98a81004d254e6ecb269a, Do not write a reloc section for pe64 assemblies Bring jbevain/cecil's commit a2c944bd45b81443fd61cfd27d98ff551fa6938c, Add enum value and properties for Windows Runtime.. Bring jbevain/cecil's commit 4b68f887b9a6a0a2b5ae268545f8d2d8ae3abe0d, Add support for reading the new target platforms in C# 5: ARM and AnyCPU32BitPreferred. Bring jbevain/cecil's commit dfb8329f5ac41f7eaffaef00d3de8b75f4308c87, Fix ComputeStackDelta() for calli instruction. Bring jbevain/cecil's commit 1d446c76e9a706b9e8d3950760fe30dd09d1efed, Expose the debug header Bring jbevain/cecil's commit cf83e6fdbe0f6b676521ba641174a3085af60d0b, Expose ModuleDefinition.SymbolReader Bring jbevain/cecil's commit 5d43150aed836ce3fee9fb26f33d0673a29d8697, Avoid creating unecessary instances Bring jbevain/cecil's commit a43bc63f8e7668cbdba2dea44dd8465f73781cfb, Fix handling of explicit this call convention. Bring jbevain/cecil's commit 19ba9cd4664f135963b52abd633485e2bec8da4a, Fail earlier when trying to process primitive types Bring jbevain/cecil's commit 58c287883107819f9c73c336a940a5383e97f5a2, improve last test Bring jbevain/cecil's commit 854a5c473a236dcda5d107d0939fcc6b9f4b351b, Fix TypeDefinition.IsPrimitive for Object Bring jbevain/cecil's commit df324526cff399a1a16d9fc62311463d13438981, Make TypeDefinition.IsPrimitive and .MetadataType match the behavior …. Bring jbevain/cecil's commit 5e1d16e8d15973d10ade78b9f784b6bec7ee1bad, Properly write pe32+ binaries. Fixes bug #86. Bring jbevain/cecil's commit 435974a4994e06b5065ea77057de899dd53729bb, Reduce the number of resize required to read most method bodies Bring jbevain/cecil's commit 1f6385763d04e69441e464c5d20e9b70cd8fa4fc, Custom attributes with a null blob are allowed now Fix the build, introduce back the set method Bring jbevain/cecil's commit d934d35c94eb5d9c82ef825613108d84fbff068a, Fix issue with CustomAttributeSignature. Bring jbevain/cecil's commit 74a697171cfc784ea856527730c1ffd1abb8ba2c, Use ordinal comparer for string keyed dictionaries Bring jbevain/cecil's commit e9f7b3bf39567cb7268e3e7490ab0c253b990606, Fix MethodReturnType.Parameter.Method Bring jbevain/cecil's commit 5490b9bc05bd2efa8ed0e18f1c2da10e8e75f56b, Fix ThisParameter for static methods, and for instance methods of value types, Cecil #82 Bring jbevain/cecil's commit 4b4568d274560cb7334e0e2a08d12bd67effb610, fsharp enum Bring jbevain/cecil's commit abbedab2d7b215ee94c5eab894d86d010d105de6, style fix Bring jbevain/cecil's commit 96c93706ee1de0d70098db35515cdf94654fcf04, Fix the method field of the special this parameter Bring jbevain/cecil's commit 5c88b826aeb02cccda0d779514d5986c8b0c987c, some pinvokes methods have no map Bring jbevain/cecil's commit 1fe347b3f985d0a5f92f0b3127f3f5194c87a284 [warnign fix] Make my_charset const Bring this test to the new NUnit syntax Fix the build, add PDComparer to the Makefile Add some changes to work on MonoTouch Split the for loop in different states to produce a complete For loop node in the AST, to support MonoDevelop, fixed #3578 Update version Merge pull request #216 from ilkerde/master\n\nBetter CS1529 Compliance for CSharp Code Generator Update Silence compiler warnings for methods that are P/Invoked: provide prototypes Update email address for licensing Mono in LICENSE file Merge pull request #205 from m3rlinez/master\n\nSystem.Configuration: Matched `configSource` behavior with MS.NET SqlBulkCopy.WriteToServer: Check array length before accessing first element;   Patch from damoxc/github.com (write_serial): fix the variable holding the return value of write(2) which is a ssize_t, not a size_t.   This fixed a problem where we would not exit the loop, as negative values would never be set, fix from GitHub.com's konrad-kruczynski Copy\n\nsvn path=/trunk/mono/; revision=133328 Copy\n\nsvn path=/trunk/mono/; revision=133327 Copy\n\nsvn path=/trunk/mono/; revision=133326 Copy\n\nsvn path=/trunk/mono/; revision=133325 Copy\n\nsvn path=/trunk/mono/; revision=133324 Copy\n\nsvn path=/trunk/mono/; revision=133323 Copy\n\nsvn path=/trunk/mono/; revision=133322 Copy\n\nsvn path=/trunk/mono/; revision=133321 Copy\n\nsvn path=/trunk/mono/; revision=133320 Copy\n\nsvn path=/trunk/mono/; revision=133319 Copy\n\nsvn path=/trunk/mono/; revision=133318 Copy\n\nsvn path=/trunk/mono/; revision=133317 Copy\n\nsvn path=/trunk/mono/; revision=133316 Copy\n\nsvn path=/trunk/mono/; revision=133315 Copy\n\nsvn path=/trunk/mono/; revision=133314 Copy\n\nsvn path=/trunk/mono/; revision=133313 Copy\n\nsvn path=/trunk/mono/; revision=133312 Copy\n\nsvn path=/trunk/mono/; revision=133311 Copy\n\nsvn path=/trunk/mono/; revision=133310 Remove *.input files, put everything in a single XML file\n\n\nsvn path=/trunk/mono/; revision=133305 Remove .input files\n\nsvn path=/trunk/mono/; revision=133304 Try this\n\nsvn path=/trunk/mono/; revision=133250 Add support for reference aliases\n\nsvn path=/trunk/mono/; revision=133247 More progress\n\nsvn path=/trunk/mono/; revision=133244 Move the scripts to a new location\n\n\nsvn path=/trunk/mono/; revision=133229 Move the scripts to a new location\n\n\nsvn path=/trunk/mcs/; revision=133229 Add input files\n\nsvn path=/trunk/mono/; revision=133226 Change the model used\n\nsvn path=/trunk/mcs/; revision=133224 Update csproj tool\n\nsvn path=/trunk/mcs/; revision=133223 Mistake, /debug:full is the same as /debug\n\nsvn path=/trunk/mcs/; revision=133217 Actually, /debug:XX is handled in /debug:, ignore the configuration here\n\nsvn path=/trunk/mcs/; revision=133214 More flags for compatibility\n\nsvn path=/trunk/mcs/; revision=133213 Doc update\n\nsvn path=/trunk/mono/; revision=133153 Hook to allow the caller to requested a call to csproj-local\n\nsvn path=/trunk/mcs/; revision=133098 Add helper\n\nsvn path=/trunk/mono/; revision=133097 Update\n\nsvn path=/trunk/mono/; revision=133096 prop\n\nsvn path=/trunk/mcs/; revision=132902 Fox\n\nsvn path=/trunk/mcs/; revision=132901 Add targets\n\nsvn path=/trunk/mcs/; revision=132899 Add proxy scripts\n\nsvn path=/trunk/mono/; revision=132898 csproj generator\n\nsvn path=/trunk/mcs/; revision=132897 Update\n\nsvn path=/trunk/mcs/; revision=132867 Update\n\nsvn path=/trunk/mono/; revision=132866 Add more compat flags\n\nsvn path=/trunk/mcs/; revision=132864 Update: +EXPR was never supported, just EXPR\n\nsvn path=/trunk/mono/; revision=132848 svn path=/trunk/mcs/; revision=132797 Only include the headers if available\n\nsvn path=/trunk/mono/; revision=132795 Add comment after much debate\n\nsvn path=/trunk/mcs/; revision=132672 2009-04-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* TermInfoDriver.cs: Use the new StreamReader.DataAvailable to\n\tload all the data that was added into the `stdin' stream when we\n\tdid the `Read'.\n\n2009-04-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* StreamReader.cs (DataAvailable): New internal function to work\n\taround the fact that StreamReaders are now blocking on Peek(), and\n\tthat our own Console.TermInfoDriver used Peek() as a way of\n\tprobing if there was data on a stream before to avoid blocking. o\n\n\nsvn path=/trunk/mcs/; revision=132670 Apply Gonzalo's patch to fix TermInfoDriver after his StreamReader changes\n\nsvn path=/trunk/mcs/; revision=132667 Reapply\n\nsvn path=/trunk/mcs/; revision=132666 2009-04-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* complete.cs: No idea how gonzalo got a null in the list, but\n\tavoid crashing.\n\nsvn path=/trunk/mcs/; revision=132641 Revert 132601, 132602 as it made the csharp console stop working\n\nsvn path=/trunk/mcs/; revision=132638 Without this I am unable to install\n\nsvn path=/trunk/mono/; revision=132637 Update this\n\nsvn path=/trunk/mcs/; revision=132627 Reapply this patch, but keep in mind, it does introduce\na new shift/reduce conflict which is bothering me:\n\n625: shift/reduce conflict (shift 452, reduce 890) on COMPLETE_COMPLETION\nstate 625\n\tmember_initializer : non_assignment_expression . opt_COMPLETE_COMPLETION  (452)\n\topt_COMPLETE_COMPLETION : .  (890)\n\n\tCOMPLETE_COMPLETION  shift 452\n\tCLOSE_BRACE  reduce 890\n\tCOMMA  reduce 890\n\n\topt_COMPLETE_COMPLETION  goto 807\n\n2009-04-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* complete.cs (CompletionElementInitializer): New completion class\n\tto support completing inside a C# 3 element initializer, so this\n\tallows completion for Silverlight situations where it is very\n\tcommon to do:\n\n\tnew TextBlock () { Fo<TAB>\n\n\t(CompletionSimpleName): Expose the prefix that was\n\tpassed to the simple name.\n\n\t* cs-parser.jay (object_or_collection_initializer): Add support\n\tfor element_initializers.\n\n\t* expression.cs (CollectionOrObjectInitializers.DoResolve):\n\tspecial case completion expressions as this method aggressively\n\tcollects data before it operates, and errors were being thrown\n\tearlier than we were able to complete.\n\n\n\nsvn path=/trunk/mcs/; revision=132626 Remove debugging ToString, it did not compile with mcs anyways\n\nsvn path=/trunk/mcs/; revision=132598 Add tutorial for adding more completion types and added new completion\ntypes:\n\n2009-04-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* complete.cs (CompletionElementInitializer): New completion class\n\tto support completing inside a C# 3 element initializer, so this\n\tallows completion for Silverlight situations where it is very\n\tcommon to do:\n\n\tnew TextBlock () { Fo<TAB>\n\n\t(CompletionSimpleName): Expose the prefix that was\n\tpassed to the simple name.\n\n\t* cs-parser.jay (object_or_collection_initializer): Add support\n\tfor element_initializers.\n\n\t* expression.cs (CollectionOrObjectInitializers.DoResolve):\n\tspecial case completion expressions as this method aggressively\n\tcollects data before it operates, and errors were being thrown\n\tearlier than we were able to complete.\n\n\nsvn path=/trunk/mcs/; revision=132592 Add man page\n\nsvn path=/trunk/mono/; revision=132512 2009-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Make getcompletions silent and enable debugging output\n\tif the -v option is passed.\n\nsvn path=/trunk/mcs/; revision=132431 2009-04-23  Miguel de Icaza  <miguel@novell.com>\n\n\t* namespace.cs (NamespaceEntry.CompletionGetTypesStartingWith):\n\tConsider looking up the namespace that matches the prefix being\n\tused. \n\n\tThis is part of the support for allowing completions like:\n\t`System.Co<TAB>' to complete to System.Console.\n\n\t* complete.cs (CompletionSimpleName.AppendResults): Make this\n\troutine reusable.\n\n\n\nsvn path=/trunk/mcs/; revision=132430 Add missing headers\n\nsvn path=/trunk/mono/; revision=132428 merge\n\nsvn path=/trunk/mono/; revision=132427 2009-04-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* aot-runtime.c (make_writable): Use mono_mprotect to simplify\n\tsome porting work.\n\nsvn path=/trunk/mono/; revision=132425 Portificate to the SLN setup\n\nsvn path=/trunk/mono/; revision=132424 2009-04-22  Miguel de Icaza  <miguel@novell.com>\n\n        * Makefile.am: Split the console support in platform specific\n        code and put together a framework for making this easy in the future so\n        that we can start splitting code instead of having a mess of PLATFORM_WIN32\n\n\nsvn path=/trunk/mono/; revision=132422 Add\n\nsvn path=/trunk/mono/; revision=132420 Add\n\nsvn path=/trunk/mono/; revision=132419 Sort the files\n\nsvn path=/trunk/mono/; revision=132418 Do not need signal.h here\n\nsvn path=/trunk/mono/; revision=132416 Do not need signal.h here\n\nsvn path=/trunk/mono/; revision=132415 Do not need signal.h here\n\nsvn path=/trunk/mono/; revision=132414 Update\n\nsvn path=/trunk/mono/; revision=132413 Up\n\nsvn path=/trunk/mono/; revision=132404 Move two other documents to the Wiki\n\nsvn path=/trunk/mono/; revision=132386 2009-04-16  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* corlib.dll.sources: Add System.IO.IsolatedStorage/\n\tMoonIsolatedStorage.cs to the build\n\n2009-02-07  Zoltan Varga  <vargaz@gmail.com>\n\n\t* Makefile: Add Test/resources/Fergie.GED to EXTRA_DIST.\n\n2009-01-30  Atsushi Enomoto  <atsushi@ximian.com>\n\nsvn path=/trunk/mcs/; revision=132223 Fix man page\n\nsvn path=/trunk/mono/; revision=132205 2009-04-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* Enum.cs (MonoEnumInfo): Compare bytes, shorts, ints and longs as\n\tunsigned values as specified and to fix 371559, from the bug:\n\n\t\tSo the actual difference is that MSFT's Enum.GetValues\n\t\torders the members as unsigned even when the underlying\n\t\ttype is int.  See the following.  Perhaps that's what's\n\t\tbeing implied by \"binary values\" in that Enum.GetValues\n\t\tMSDN quote above.\n\n\nsvn path=/trunk/mcs/; revision=132113 2009-04-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* Process.cs: Do not crash if GetProcesses_internal returns null\n\tThis happens on operating systems where we have not implemented\n\nsvn path=/trunk/mcs/; revision=132110 2009-04-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* complete.cs: Include namespace resolution in simple names as\n\twell as global types and types in the using scope in the\n\tresolution. \n\n\t* namespace.cs: Supporting infrastrcture to provide completions\n\tbased on the current using scope. \n\n\n\nsvn path=/trunk/mcs/; revision=132065 \tInitial support to provide code completion facilities to consumers\n\tof the evaluator API.\n\t\n\t* cs-tokenizer.cs (CompleteOnEOF): this new property is used to\n\tsupport the completion engine.   When we reach the end of the\n\tinput stream instead of returning EOF, when this flag is true the\n\ttokenizer instead produces:\n\n\t\tOne GENERATE_COMPLETION token: this token then must be\n\t\thandled in the grammar at every point where the user\n\t\twould likely request a completion.\n\n\t\tAs many COMPLETE_COMPLETION tokens as necessary.   These\n\t\ttokens are generated to assist the parser in unwinding and\n\t\tproducing a valid parse tree.    \n\n\tThe parser rules do not have to be perfect, the parser needs to be\n\taugmented with judicious use of GENERATE_COMPLETION tokens to\n\timprove the areas where we can provide completion and the parser\n\tneeds to add support for COMPLETE_COMPLETION tokens in productions\n\tto make them work.\n\n\tIt is common to not have enough support for COMPLETE_COMPLETION\n\tunder certain rules and that even if we generated the\n\tGENERATE_COMPLETION token that the resulting tree will be invalid\n\tdue to the missing rules that support COMPLETE_COMPLETION.\n\n\tThe final EOF token is produced by having the parser notify the\n\ttokenizer when it reaches the root production that the next token\n\tshould be EOF.\n\n\t* support.cs (CompletionResult): New Exception.   This exception\n\tis thrown to return the completion results when one of the special\n\tcompletion expressions is reached.\n\n\tThis exception is thrown by the completing ExpressionStatements\n\tclasses that live in complete.cs\n\n\t* complete.cs (CompletingExpression): a new base class for\n\tcompleting expressions.   This derives from the\n\tExpressionStatement class and not from Expression as it allows\n\tcompletion to happen not only where expressions are expected in\n\tthe grammar, but also where statements are expected.\n\n\t(CompletionSimpleName): A new class used to provide completions\n\tfor SimpleNames.     This currently only resolves to local\n\tvariables from the evaluator context (GetVars call).\n\n\t(CompletionMemberAccess): Implements support for completing member\n\taccess patterns. \n\n\t* cs-parser.jay: Add support for completion in a few places. \n\n\t* eval.cs (GetCompletions): New public API for the evaluator that\n\treturns a list of possible completions given the input.   The\n\treturn value is an array of completions \n\n\t* anonymous.cs (Compatible): If the exception thrown from the\n\tresolved expression is a CompletionResult exception let that one\n\tthrough instead of printing a diagnostic error in the try/catch. \n\nsvn path=/trunk/mcs/; revision=132052 2009-04-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* Makefile: Make this build using csharplib instead of referencing\n\tthe gmcs.exe that was just built.\n\n\nsvn path=/trunk/mcs/; revision=132051 2009-03-22  Miguel de Icaza  <miguel@novell.com>\n\n\tInitial support to provide code completion facilities to consumers\n\tof the evaluator API.\n\t\n\t* cs-tokenizer.cs (CompleteOnEOF): this new property is used to\n\tsupport the completion engine.   When we reach the end of the\n\tinput stream instead of returning EOF, when this flag is true the\n\ttokenizer instead produces:\n\n\t\tOne GENERATE_COMPLETION token: this token then must be\n\t\thandled in the grammar at every point where the user\n\t\twould likely request a completion.\n\n\t\tAs many COMPLETE_COMPLETION tokens as necessary.   These\n\t\ttokens are generated to assist the parser in unwinding and\n\t\tproducing a valid parse tree.    \n\n\tThe parser rules do not have to be perfect, the parser needs to be\n\taugmented with judicious use of GENERATE_COMPLETION tokens to\n\timprove the areas where we can provide completion and the parser\n\tneeds to add support for COMPLETE_COMPLETION tokens in productions\n\tto make them work.\n\n\tIt is common to not have enough support for COMPLETE_COMPLETION\n\tunder certain rules and that even if we generated the\n\tGENERATE_COMPLETION token that the resulting tree will be invalid\n\tdue to the missing rules that support COMPLETE_COMPLETION.\n\n\tThe final EOF token is produced by having the parser notify the\n\ttokenizer when it reaches the root production that the next token\n\tshould be EOF.\n\n\t* support.cs (CompletionResult): New Exception.   This exception\n\tis thrown to return the completion results when one of the special\n\tcompletion expressions is reached.\n\n\tThis exception is thrown by the completing ExpressionStatements\n\tclasses that live in complete.cs\n\n\t* complete.cs (CompletingExpression): a new base class for\n\tcompleting expressions.   This derives from the\n\tExpressionStatement class and not from Expression as it allows\n\tcompletion to happen not only where expressions are expected in\n\tthe grammar, but also where statements are expected.\n\n\t(CompletionSimpleName): A new class used to provide completions\n\tfor SimpleNames.     This currently only resolves to local\n\tvariables from the evaluator context (GetVars call).\n\n\t(CompletionMemberAccess): Implements support for completing member\n\taccess patterns. \n\n\t* cs-parser.jay: Add support for completion in a few places. \n\n\t* eval.cs (GetCompletions): New public API for the evaluator that\n\treturns a list of possible completions given the input.   The\n\treturn value is an array of completions \n\n\t* anonymous.cs (Compatible): If the exception thrown from the\n\tresolved expression is a CompletionResult exception let that one\n\tthrough instead of printing a diagnostic error in the try/catch. \n\t\n\n\nsvn path=/trunk/mcs/; revision=132033 Improve documentation\n\nsvn path=/trunk/mcs/; revision=132032 Update man pages\n\nsvn path=/trunk/mono/; revision=132018 2009-04-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs: Support executing files that were specified in the\n\tcommand line. \n\n2009-04-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Introduce an entry point that allows for initialization\n\tto return a list of the files passed on the command line.\n\n\n\nsvn path=/trunk/mcs/; revision=132017 2009-04-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* tasklets.c: Return exceptions in the out argument.\n\nsvn path=/trunk/mono/; revision=131267 2009-04-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* Mono.Tasklets/Mono.Tasklets/Continuation.cs: Implement\n\tIDisposable.\n\nsvn path=/trunk/mcs/; revision=131266 Add to the build\n\nsvn path=/trunk/mcs/; revision=131262 2009-04-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gpath.c: Avoid situations where we add the separator if one\n\tof the elements is the separator.\n\nsvn path=/trunk/mono/; revision=131083 2009-04-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-filemap.c: Move mono_file_unmap for the not-mmap case to\n\tthe mono-filemap.c file so it can be plugged in platform-specific\n\tcode as well. \n\nsvn path=/trunk/mono/; revision=131031 Add guards\n\nsvn path=/trunk/mcs/; revision=130816 2009-03-22  Miguel de Icaza  <miguel@novell.com>\n\n\t* driver.cs (Main): Use Environment.Exit to quit quickly and\n\tprevent the compiler from doing the usual wait for helper thread\n\tto terminate.  \n\n\tThis is to prevent a slowdown that was reported by Gonzalo on\n\tASP.NET \n\nsvn path=/trunk/mcs/; revision=129990 2009-03-14  Miguel de Icaza  <miguel@novell.com>\n\n\t* Convert.cs (ToType): Control whether this internal function will\n\tcall an IConvertible.ToType method or not.  \n\n\tClasses and structs implementing IConvertible in mscorlib (the\n\tonly callers that can access Convert.ToType) must pass false to\n\tavoid a infinite recursion problem and callers from the public\n\tConvert API must call it with true.\n\n\tThis fixes the regression reported in #485377 that was introduced\n\tby the fix for #481687.\n\n\t* Int16.cs, UInt64.cs, Double.cs, Enum.cs, SByte.cs, UInt16.cs,\n\tByte.cs, Decimal.cs, Int32.cs, String.cs, Int64.cs, Char.cs,\n\tBoolean.cs, Single.cs, UInt32.cs: Update the call sites.\n\n\n\nsvn path=/trunk/mcs/; revision=129367 Try to improve the logging profiler documentation\n\nsvn path=/trunk/mono/; revision=129337 Add Copyright notices\n\nsvn path=/trunk/mono/; revision=129316 Clarify\n\nsvn path=/trunk/mono/; revision=128995 2009-02-24  Sebastien Pouliot  <sebastien@ximian.com>\n\n\t* SafeHandle.cs: Add default ctor in 2.1 profile (needed to compile\n\nsvn path=/trunk/mcs/; revision=128810 2009-03-06  Miguel de Icaza  <miguel@novell.com>\n\n\t* Convert.cs: Apply patch from Tom Hindle that uses\n\tIConvertible.ToType if there are no other possible conversions\n\tdefined. \n\n\tFixes: #481687\n\nsvn path=/trunk/mcs/; revision=128807 Update docs\n\nsvn path=/trunk/mcs/; revision=128805 NetworkStream: Bring ReceiveTimeout, SendTimeout, Close to MOBILE profile Bring Parallel LINQ to the Mobile profile Merge pull request #446 from UCIS/master\n\nPatch for bug #6718 - incorrect release of XPCOM object causing segmention fault Merge pull request #428 from paszczi/master\n\nFix ArgumentOutOfRangeException in HttpListenerManager.TryDequeueRequest when timeout is less than 0 Revert 4e5e52a29818b5342ec3b9f0b51c74970765c071, which was pull request 242, which was novell bugzilla #689533\n\nThis patch miscompiled attributes like this:\n\n                [EditorBrowsable (EditorBrowsableState.Advanced)]\n                [Export (\"init\")]\n                public  CAKeyFrameAnimation () : base (NSObjectFlag.Empty)\n                {\n                        if (IsDirectBinding) {\n                                Handle = MonoMac.ObjCRuntime.Messaging.IntPtr_objc_msgSend (this.Handle, Selector.Init);\n                        } else {\n                                Handle = MonoMac.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper (this.SuperHandle, Selector.Init);\n                        }\n                }\n\nIn particular the [Export (\"init\")] method to be compiled like this:\n\n    // method line 6274\n    .method public hidebysig specialname rtspecialname\n           instance default void '.ctor' ()  cil managed\n    {\n        .custom instance void class [System]System.ComponentModel.EditorBrowsableAttribute::'.ctor'(valuetype [System]System.ComponentModel.EditorBrowsableState) =  (01 00 02 00 00 00 00 00 ) // ........\n\n        .custom instance void class MonoMac.CoreGraphics.CGImage::'.ctor'(int32, int32, int32, int32, int32, class MonoMac.CoreGraphics.CGColorSpace, valuetype MonoMac.CoreGraphics.CGImageAlphaInfo, class MonoMac.CoreGraphics.CGDataProvider, float32[], bool, valuetype MonoMac.CoreGraphics.CGColorRenderingIntent) =  (01 00 04 69 6E 69 74 00 00 ) // ...init..\n\nNotice the \"CGImage\" attribtue instead of the ExportAttribute Merge pull request #414 from sesef/datagrid\n\nFix #3125 Merge pull request #422 from ianbattersby/bz6389-InvalidSwitch\n\nFix for bz6389 - Absolute paths to project files cause error: 'MSBUILD00... Render obsolete attributes on members Merge pull request #303 from ermshiperete/5278\n\nXamarin-5278: Fix Binder.SelectMethod when passed argument is COM object Merge pull request #309 from i59/patch-1\n\nBuild Configuration: Don't build libmono to Release_SGen in x64 Release ... Merge pull request #335 from robwilkens/DataGridBugs1\n\nThis fixes several bugs in Winforms DataGrid Revert previous patch, see discussion on https://github.com/mono/mono/pull/337 Merge pull request #337 from robwilkens/IdleThreadsFixes\n\nFix:Idle event handler was called on every thread rather than thread ass... Merge pull request #350 from robwilkens/bug1089\n\nBug 1089 Fix: Fix proc/mod name match by also starting at last / in proc... Make ERROR_OPERATION_ABORTED a common message mono_lookup_pinvoke_call: prevent leak by keeping a global MonoDl handle for the internal module.\n\nFrom now on, we will keep a global handle for lookups performed against the \"__Internal\"\nlibrary name.   This will prevent multiple P/Invoke calls from calling mono_dl_open with\nfilename == NULL for each call.\n\nSince Mono never calls mono_dl_close on P/Invoke lookups, this should not pose a problem. Remove more old compile defines Merge pull request #323 from crazyjncsu/master\n\nFixed execution of parallel PageAsyncTasks Merge pull request #388 from strawd/master\n\nFixes for compatibility with ASP.NET Web API Self-hosting Revert the fix for #5747 from 8b5f71ef60146590193298cc870bf72e14b47950, it broke XSP monitoring of the file system Use Ordinal string comparison here. Merge pull request #334 from robwilkens/bug5747\n\nBug 5747 (MacOSX)Fix: KeventWatcher didn't return subdir names in filenames Apply patch from Steven Boswell (ulatekh@yahoo.com) to fix #5591 Remove ToUpperInvariant in the 4.5 version of MEF to fix #5740 Merge pull request #332 from robwilkens/Bug2663-fix\n\nBug 2663: Regular Expression Bug Fixes [corlib/tests] disable the acos test on MacOS, since MacOS acos is broken [class libraries] drop NET_1_0 definitions [class libraries] drop ONLY_1_1 Copyright notices [System] Removal of the NET_2_0 in the source code\n\nModulo the GUID in the assembly and the GUID embedded in some\nfield initializers that use the assembly GUID for their name, the\nassemblies are idential before and after the patch. Removal of NET_1_1 defines and some NET_2_0;   Both defines are true these days in Mono, no versions prior to 2.0 are supported Removal of NET_1_1 defines and some NET_2_0;   Both defines are true these days in Mono, no versions prior to 2.0 are supported [net_1_0] Finally all of NET_1_0 is gone from the source files Fix the comment so our doctools can pick it up Merge pull request #306 from robwilkens/master\n\nBug # 2234 - This fixes bug as reported, but not sure if wise. - Ignores exception under specific condition Merge pull request #308 from viniciusjarina/fix242\n\nFix242 [System.Configuration] Fix System.Configuration to cope with XmlReaders which might not be ConfigXmlTextReaders, fixes test suite [System.Configuration] Disable broken test [build] attempt to fix the Microsoft.Build.Engine tests Merge pull request #304 from crazyjncsu/master\n\nDisabling WCF log activity when logging is disabled by configuration Merge pull request #305 from robwilkens/master\n\nThis fixes bug # 853 in ximarin bugzilla. Merge pull request #302 from konrad-kruczynski/fast_double_to_from_int64\n\nDouble <-> Int64 conversion is much faster now.\r\n\r\nInstead of using GetBytes and converting bytes to long, which involves allocation and deallocation of small temporary array, the simple cpu register load is in fact done now. This results in a much faster operation.\r\n\r\nWith this sample program:\r\n\r\nvar stopwatch = Stopwatch.StartNew();\r\nvar sum = 0L;\r\nfor(var i = 0; i < 100000000; i++)\r\n{\r\n    sum += BitConverter.DoubleToInt64Bits(99.9);\r\n}\r\nstopwatch.Stop();\r\nConsole.WriteLine(stopwatch.Elapsed);\r\nmy results are:\r\n\r\n00:00:00.6614282 with my patch;\r\n00:00:19.8135516 without my patch and Boehm GC;\r\n00:00:10.2296766 without my patch and SGEN GC.\r\nI'm doing a lot of this operations in my serialization framework, so it is quite essential to be fast ;) The performance improvement is due to no-allocation nature of the patch vs the old code, which allocated a temporary array (difference between Boehm and SGEN is explained the same way). Merge pull request #271 from pruiz/xamarin-bug-4108\n\nFix for Xamarin's bug #4108 (BrowserCaps compatibility problem with MS.NET) Merge pull request #283 from robwilkens/master\n\nBug #4786- fix: Mono.Data.Tds.Protocol.TdsConnectionPool.GetConnection() needs to have result set to null before looping back with goto Merge pull request #289 from alaendle/master\n\nForce disposal of Sqlite commands with using-statements in order to better isolate the unit tests. Merge pull request #298 from ermshiperete/4921\n\nXamarin-4921: Fix Listbox.SelectedItem after adding sorted item Merge pull request #297 from ermshiperete/4959\n\nXamarin-4959: Fix copy of clipboard data after app exits Merge pull request #296 from ermshiperete/5116\n\nXamarin-5116: Fix pasting of text with upper-ASCII chars Fix from Stephen McConnel for bug 5010 Merge pull request #293 from viniciusjarina/fix3258\n\nFix3258 AOT not supported on Windows, warn the user Add these to MOBILE as well When running in MonoTouch, compare against a reference image, instead of generating the reference image Add inline api docs for mono_dll_insert Bump version Some small changes to assist Coregraphics System.Drawing remove this internal getter, from https://github.com/jbevain/cecil/commit/e9f7b3bf39567cb7268e3e7490ab0c253b990606#commitcomment-1230204 Small touch up in the DrawingTest Bring jbevain/cecil's commit 7d9999c60bd538a19a84f1211064ef104f07ee82, Fix writing of delay-signed assemblies Bring jbevain/cecil's commit fb8dcbabcfbb611faeb47f1db53d54022ead2551, style fixes Bring jbevain/cecil's commit 4ef434e294031c985cc98a81004d254e6ecb269a, Do not write a reloc section for pe64 assemblies Bring jbevain/cecil's commit a2c944bd45b81443fd61cfd27d98ff551fa6938c, Add enum value and properties for Windows Runtime.. Bring jbevain/cecil's commit 4b68f887b9a6a0a2b5ae268545f8d2d8ae3abe0d, Add support for reading the new target platforms in C# 5: ARM and AnyCPU32BitPreferred. Bring jbevain/cecil's commit dfb8329f5ac41f7eaffaef00d3de8b75f4308c87, Fix ComputeStackDelta() for calli instruction. Bring jbevain/cecil's commit 1d446c76e9a706b9e8d3950760fe30dd09d1efed, Expose the debug header Bring jbevain/cecil's commit cf83e6fdbe0f6b676521ba641174a3085af60d0b, Expose ModuleDefinition.SymbolReader Bring jbevain/cecil's commit 5d43150aed836ce3fee9fb26f33d0673a29d8697, Avoid creating unecessary instances Bring jbevain/cecil's commit a43bc63f8e7668cbdba2dea44dd8465f73781cfb, Fix handling of explicit this call convention. Bring jbevain/cecil's commit 19ba9cd4664f135963b52abd633485e2bec8da4a, Fail earlier when trying to process primitive types Bring jbevain/cecil's commit 58c287883107819f9c73c336a940a5383e97f5a2, improve last test Bring jbevain/cecil's commit 854a5c473a236dcda5d107d0939fcc6b9f4b351b, Fix TypeDefinition.IsPrimitive for Object Bring jbevain/cecil's commit df324526cff399a1a16d9fc62311463d13438981, Make TypeDefinition.IsPrimitive and .MetadataType match the behavior …. Bring jbevain/cecil's commit 5e1d16e8d15973d10ade78b9f784b6bec7ee1bad, Properly write pe32+ binaries. Fixes bug #86. Bring jbevain/cecil's commit 435974a4994e06b5065ea77057de899dd53729bb, Reduce the number of resize required to read most method bodies Bring jbevain/cecil's commit 1f6385763d04e69441e464c5d20e9b70cd8fa4fc, Custom attributes with a null blob are allowed now Fix the build, introduce back the set method Bring jbevain/cecil's commit d934d35c94eb5d9c82ef825613108d84fbff068a, Fix issue with CustomAttributeSignature. Bring jbevain/cecil's commit 74a697171cfc784ea856527730c1ffd1abb8ba2c, Use ordinal comparer for string keyed dictionaries Bring jbevain/cecil's commit e9f7b3bf39567cb7268e3e7490ab0c253b990606, Fix MethodReturnType.Parameter.Method Bring jbevain/cecil's commit 5490b9bc05bd2efa8ed0e18f1c2da10e8e75f56b, Fix ThisParameter for static methods, and for instance methods of value types, Cecil #82 Bring jbevain/cecil's commit 4b4568d274560cb7334e0e2a08d12bd67effb610, fsharp enum Bring jbevain/cecil's commit abbedab2d7b215ee94c5eab894d86d010d105de6, style fix Bring jbevain/cecil's commit 96c93706ee1de0d70098db35515cdf94654fcf04, Fix the method field of the special this parameter Bring jbevain/cecil's commit 5c88b826aeb02cccda0d779514d5986c8b0c987c, some pinvokes methods have no map Bring jbevain/cecil's commit 1fe347b3f985d0a5f92f0b3127f3f5194c87a284 [warnign fix] Make my_charset const Bring this test to the new NUnit syntax Fix the build, add PDComparer to the Makefile Add some changes to work on MonoTouch Split the for loop in different states to produce a complete For loop node in the AST, to support MonoDevelop, fixed #3578 Update version Merge pull request #216 from ilkerde/master\n\nBetter CS1529 Compliance for CSharp Code Generator Update Silence compiler warnings for methods that are P/Invoked: provide prototypes Update email address for licensing Mono in LICENSE file Merge pull request #205 from m3rlinez/master\n\nSystem.Configuration: Matched `configSource` behavior with MS.NET SqlBulkCopy.WriteToServer: Check array length before accessing first element;   Patch from damoxc/github.com (write_serial): fix the variable holding the return value of write(2) which is a ssize_t, not a size_t.   This fixed a problem where we would not exit the loop, as negative values would never be set, fix from GitHub.com's konrad-kruczynski IntPtr: Add the various operator overload features for arithmetic to mobile Update some copyrights Allow doc tool to process this\n\nsvn path=/trunk/mono/; revision=128607 Update docs as usual\n\nsvn path=/trunk/mono/; revision=128124 Add support for platforms without rewinddir\n\nsvn path=/trunk/mono/; revision=128052 Add debugging back\n\nsvn path=/trunk/mcs/; revision=127540 2009-02-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* domain.c (app_config_parse): Remove another use of stat that is\n\tnot necessary as g_file_get_contents already does the presence\n\tcheck. \n\nsvn path=/trunk/mono/; revision=126879 2009-02-12  Miguel de Icaza  <miguel@novell.com>\n\n\tMore Paolo patches from the Wii port:\n\t\n\t* security.c: Remove ves_icall_System_Environment_get_UserName\n\tfrom here.\n\n\t* icall.c: And put ves_icall_System_Environment_get_UserName\n\there. \n\n\t* appdomain.c (mono_set_private_bin_path_from_config): Remove\n\tredundant call to stat that was only used to test for the file\n\texistence.   Patch from Paolo.\n\n\t* gc.c (run_finalize): If COM is disabled, do not link in\n\tmono_marshal_free_ccw.\n\n\t* generic-sharing.c: Use alloca.h here as well.\n\n\n\nsvn path=/trunk/mono/; revision=126789 2009-02-12  Miguel de Icaza  <miguel@novell.com>\n\n\t* generic-sharing.c: Use alloca.h here as well.\n\nsvn path=/trunk/mono/; revision=126784 2009-02-06  U-QUACK\\miguel  <miguel@quack>\n\n\t* icall-defs.h: Include also the Encrypt/Decrypt string methods as\n\tthey live in security.c\n\n\t* debug-mono-symfile.c (mono_debug_open_mono_symbols): Integrated\n\tanother bit from Paolo's code.\n\nsvn path=/trunk/mono/; revision=126110 Alloca\n\nsvn path=/trunk/mono/; revision=126103 2009-02-06  Miguel De Icaza  <miguel@novell.com>\n\n\t* Disable parallel marking on OSX as it hangs during collections\n\tin the bootstrap stage of Mono.\n\n\tAs we find more platforms that hang, we should disable it there as\n\twell. \n\nsvn path=/trunk/mono/; revision=126002 Add a new macro\n\nsvn path=/trunk/mono/; revision=125952 2009-02-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gstr.c: Add g_strnfill\n\n\t* src/glib.h: Add g_list_previous\n\nsvn path=/trunk/mono/; revision=125934 Fix make distcheck\n\nsvn path=/trunk/mono/; revision=125928 2009-02-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* WebConnectionStream.cs: Prevent a nullref here.   This might\n\thave to be backported to 2.2 and 2.4\n\nsvn path=/trunk/mcs/; revision=125823 Add test for bug 471580\n\nsvn path=/trunk/mcs/; revision=125822 2009-02-05  Miguel De Icaza  <miguel@novell.com>\n\n\t* threadpool.c (socket_io_add_poll): Remove the BSD6 define and\n\treplace with plain BSD per the comments on the bug MONO77637.\n\n2009-02-05  Miguel De Icaza  <miguel@novell.com>\n\n\t* sockets.c (_wapi_setsockopt): SO_REUSEPORT is needed also on\n\tMacOS X.  Fixes bug #471292\n\n\n\nsvn path=/trunk/mono/; revision=125821 Fix build regression\n\nsvn path=/trunk/mono/; revision=125810 This seems like dead code for now\n\nsvn path=/trunk/mono/; revision=125764 On platforms without SIGUSR1, return -1\n\nsvn path=/trunk/mono/; revision=125762 2009-02-04  Miguel de Icaza  <miguel@novell.com>\n\n\tMore patches from Paolo's work, refactored to be integrated into\n\ttrunk:\n\t\n\t* icall-def.h: Remove internal calls for sockets when\n\tDISABLE_SOCKET is defined, file system writing features when the\n\tOS only support reading and not writing data and Policy support if\n\tthe Policy is disabled.\n\t\n\t* image.c (do_mono_image_open): Apply Paolo's patches for using\n\tmono_file_map_ APIs here.\n\n\t* assembly.c: Add support for platforms to avoid prefix\n\tauto-detection. \n\n\n\nsvn path=/trunk/mono/; revision=125757 This is internal\n\nsvn path=/trunk/mcs/; revision=125748 Fix windows build\n\nsvn path=/trunk/mono/; revision=125690 update copyright notices\n\nsvn path=/trunk/mono/; revision=125626 Style police\n\nsvn path=/trunk/mono/; revision=125623 2009-02-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-dl.c: Add support for registering in-proc addresses as\n\tlibraries that can be P/Invoked.   Used in operating systems that\n\tlack a dynamic linker. \n\nsvn path=/trunk/mono/; revision=125622 2009-02-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in (PLATFORM_NO_SYMLINKS): New define that replaces\n\tPLATFORM_WIN32.\n\nsvn path=/trunk/mono/; revision=125621 Ifdef\n\nsvn path=/trunk/mono/; revision=125597 Change prototype\n\nsvn path=/trunk/mono/; revision=125579 2009-02-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-filemap.c: Integrate Paolo's mono-filemap code here, split\n\tsome code from mono-mmap. into this file to ease porting.\n\nsvn path=/trunk/mono/; revision=125578 Build fix\n\nsvn path=/trunk/mono/; revision=125577 Use a feature test instead of a platform test\n\nsvn path=/trunk/mono/; revision=125576 Add new feature\n\nsvn path=/trunk/mono/; revision=125575 2009-02-03  Miguel de Icaza  <miguel@novell.com>\n\n\t* appdomain.c: Add support for DISABLE_SOCKETS and DISABLE_SHADOW_COPY\n\nsvn path=/trunk/mono/; revision=125572 2009-02-02  Miguel de Icaza  <miguel@novell.com>\n\n\tFrom Paolo's work, refactored, cleared up:\n\t\n\t* threadpool.c, icall.c: ifdef code that requires a working socket\n\tstack.\n\n\t* metadata.c (mono_metadata_field_info): Do not attempt to return\n\ta value from a function declared as void.\n\n\t* console-io.c: Use MONO_NULL_TTYDRIVER to remove the tty driver\n\tfrom the console stack.\n\n\t* assembly.c: use strrchr instead of rindex.\n\n\t* class.c, object.c, marshal.c, icall.c, reflection.c: include\n\talloca.h on systems that have it.\n\n\t* environment.c: Avoid code that uses stuff from\n\tHAVE_SYS_UTSNAME_H\n\t\n\t* appdomain.c: Include sys/time.h.\n\n\t* console-io.c: include sys/ioctl.h if it is available.\n\n\n\nsvn path=/trunk/mono/; revision=125449 Add OpenBSD support\n\nsvn path=/trunk/mono/; revision=125218 Build fixes for OpenBSD\n\nsvn path=/trunk/mono/; revision=125217 Add support for OpenBSD\n\nsvn path=/trunk/mono/; revision=125216 Indent all continuation lines\n\nsvn path=/trunk/mono/; revision=125186 2009-01-30  Miguel de Icaza  <miguel@novell.com>\n\n\tQuestion: if we are storing gint32's inside the \"*native_offset\",\n\tshould we change the signature to \"gint32 *native_offset\" to\n\tensure that we do not have type definition problems?\n\t\n\t* mini-exceptions.c (ves_icall_get_frame_info): Cast the gint32 to\n\tan int * as this is what the other function expects, causes\n\tproblems with Freescale's compiler that defined int32_t to be a\n\tlong and makes int incompatible \n\nsvn path=/trunk/mono/; revision=125175 2009-01-30  Miguel de Icaza  <miguel@novell.com>\n\n\t* Rename generic-sharing.c to mini-generic-sharing.c to avoid the\n\tfilename conflict with bjam.\n\nsvn path=/trunk/mono/; revision=125174 2009-01-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* ssa.c: handle another alloca.h\n\n\t* mini-exceptions.c (mono_handle_native_sigsegv): Do not use\n\tPLATFORM_WIN32 for detecting if we have sigaction.   Instead use\n\tMONO_ARCH_USE_SIGACTION. \n\nsvn path=/trunk/mono/; revision=125037 2009-01-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* aot-runtime.c, mini-exceptions.c: Replace platform define with\n\tcapability defines.\n\nsvn path=/trunk/mono/; revision=125035 Need config.h to check for HAVE_ALLOCA_H\n\nsvn path=/trunk/mono/; revision=125034 2009-01-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* method-to-ir.c (mono_method_to_ir): Type cast fix on some platforms.\n\n\t* mini-ppc.h (MONO_ARCH_USE_SIGACTION): Do not define this for all\n\tPPC targets as sigaction does not exist on all platforms, define\n\tthis on a per-platform basis.\n\n\tInstead of erroring out if the platform is not defined, include\n\tmini-ppc-os.h, and expect that the OS specific setting provides\n\tthe required information.   \n\nsvn path=/trunk/mono/; revision=125033 Tiny fixio\n\nsvn path=/trunk/mono/; revision=125032 2009-01-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* configure.in: Add a couple of new AM conditionals for POSIX and\n\tDARWIN, these are used to conditionally include some files in\n\tmono/mini. \n\nsvn path=/trunk/mono/; revision=124974 2009-01-29  Miguel de Icaza  <miguel@novell.com>\n\n\t* mini-darwin.c, mini-windows.c, mini-posix.c: Commit the first\n\tpart of the changes to split the code in mini into operating\n\tsystem specific files.\n\n\tThis patch was done by copying mini.c to the respective files to\n\tpreserve SVN history.\n\nsvn path=/trunk/mono/; revision=124973 Copy\n\nsvn path=/trunk/mono/; revision=124972 Copy\n\nsvn path=/trunk/mono/; revision=124971 Copy\n\nsvn path=/trunk/mono/; revision=124970 Update\n\nsvn path=/trunk/mono/; revision=124848 2009-01-16  Miguel de Icaza  <miguel@novell.com>\n\n\t* sockets.c (WSASend): Fix memory leak, and optimize for the case\n\twith 1 segment. \n\n\tThis should really use writev or sendmsg to use the kernel\n\tscatter/gather facility instead of emulating it by copying buffers.\n\nsvn path=/trunk/mono/; revision=124732 Fix another regression, stop breaking the Solaris buidls\n\nsvn path=/trunk/mono/; revision=122990 Add convenience hook\n\nsvn path=/trunk/mono/; revision=122977 Add\n\nsvn path=/trunk/mono/; revision=122976 Add\n\nsvn path=/trunk/mono/; revision=122975 2009-01-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* Add support for `strict' in .method declaration\n\nsvn path=/trunk/mcs/; revision=122973 Add ECMA 2.0 Strict flag for MethodAttributes\n\nsvn path=/trunk/mcs/; revision=122972 \tIncorporate a few patches from Paolo, slightly modified:\n\t\n2009-01-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* handles.c (_wapi_handle_check_share): On non-Linux systems, do\n\tnot even compile in the code that scans for /proc/fd, and go\n\tdirectly to the fallback function.\n\nsvn path=/trunk/mono/; revision=122969 \tIncorporate a few patches from Paolo:\n\t\n2009-01-09  Paolo Molaro (lupus@ximian.com)\n\n\t* handles.c: Do not include some header files in platforms that\n\tlack it.\n\nsvn path=/trunk/mono/; revision=122963 2009-01-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* messages.c: Eliminate a warning.\n\nsvn path=/trunk/mono/; revision=122962 \tIncorporate a few patches from Paolo:\n\t\n2009-01-09  Paolo Molaro (lupus@ximian.com)\n\n\t* error.c: On some platforms that do not define these variables,\n\tdo not use them.\n\n\t* security.c, io-private.h: Only include some headers if they\n\texist on the system\n\nsvn path=/trunk/mono/; revision=122961 2009-01-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* sockets.c, sockets.h: do not import on this header files that\n\tare only consumed internally in sockets.c.\n\nsvn path=/trunk/mono/; revision=122960 2008-11-15  Jonathan Pryor  <jpryor@novell.com>\n\n\t* Documentation/en/**: Flush; changes due to mdoc-update \n\t  Reflection->Cecil migration.  Changes include:\n\t  - Alphabetical ordering of custom attributes (these used to be in\n\nsvn path=/trunk/mcs/; revision=122861 Add checks for the headers\n\nsvn path=/trunk/mono/; revision=122849 move dtrace-prelink.sh out of the top dir\n\nsvn path=/trunk/mono/; revision=122843 Add new checks\n\nsvn path=/trunk/mono/; revision=122842 2009-01-08  Miguel de Icaza  <miguel@novell.com>\n\n\t* appdomain.c: Initialize the mono_strtod_mutex here, thanks to\n\tRobert Jordan for pointing this out.\n\nsvn path=/trunk/mono/; revision=122825 2008-12-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-dl.c (mono_dl_open): Do not crash if the platform does not\n\tsupport dlopen.\n\nsvn path=/trunk/mono/; revision=122824 Fix the mutext name\n\nsvn path=/trunk/mono/; revision=122736 2009-01-07  Miguel de Icaza  <miguel@novell.com>\n\n        * src/gfile-posix.c: Move g_get_current_dir, as it is a\n        POSIX-esque feature, and some other systems do not have current\n        directories. \n\n        * src/glib.h (G_LOCK_DEFINE, G_LOCK_DEFINE_STATIC): \n\n        Embedded support from Paolo's work on quack.\n        \n        * configure.ac: check for strtok_r, langinfo.h and iconv.h\n        \n        * src/gpath.c (strtok_r): Add a strtok_r implementation if it is\n        not available on the target system.\n\n\nsvn path=/trunk/mono/; revision=122735 2009-01-07  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c: Wrap calls to mono_strtod in CriticalSection\n\tinvocations when using eglib, to work around #464316.\n\nsvn path=/trunk/mono/; revision=122734 A bug fix for 459450\n\n2008-12-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* ProcessTest.cs: Created a test case from bug 459450.\n\n2008-12-25   Leszek Ciesielski <skolima@gmail.com>\n\n\t* System.Diagnostics/Process.cs: Raise the\n\tProcess.OutputDataReceived and Process.ErrorDataReceived with null\n\targuments at the end.   This is the documented behavior:\n\n\thttp://msdn.microsoft.com/en-us/library/system.diagnostics.datareceivedeventargs.data.aspx\n\n\tAnd CruiseControl.NET depended on this.   Bug #459450.\n\t\n\t* Microsoft.CSharp/CSharpCodeCompiler.cs: Fix the code, as it\n\tdepened on the previous broken behavior.\n\n\n\nsvn path=/trunk/mcs/; revision=122125 Backport\n\nsvn path=/branches/mono-2-2/mcs/; revision=121935 2008-10-04  Robert Jordan  <robertj@gmx.net>\n\n\t* ServerIdentity.cs (DisposeServerObject):\n\tNotify TrackingServices about server's disconnection.\n\nsvn path=/trunk/mcs/; revision=121934 Backport to 2.2\n\nsvn path=/branches/mono-2-2/mcs/; revision=121933 Apply patch for 436775 from Jeroen Asselman + test case\n\nsvn path=/trunk/mcs/; revision=121932 Some API updates\n\nsvn path=/trunk/mcs/; revision=121931 Add a handful of 3.5 methods\n\nsvn path=/trunk/mcs/; revision=121919 Add\n\nsvn path=/trunk/mcs/; revision=121918 2008-12-20  Miguel de Icaza  <miguel@novell.com>\n\n\t* FileStream.cs: Found while debugging webcompare, we should add\n\tObsoletes to the FileStream constructors that take IntPtrs.\n\nsvn path=/trunk/mcs/; revision=121916 Backport 2008-12-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c (ves_icall_System_Environment_get_Platform): For\n\tcompatibility reasons for existing client code we will keep\n\treturning 4 for a while.   \n\n\tFor how long will depend on the documentation being updated, and\n\tfor us to give client code a chance to be updated.\n\n\tThis reverts the original decison on #433108 since we did not\n\tcatch roughly 33 instances of the broken code in our own source\n\tcode base, we did not catch failures on the buildbots, and QA did\n\tnot bring this as a problem.\n\n\tOnly today I found some customer's code breaking due to our own\n\tclass libraries not being fully updated and tracked it down to\n\tthis change.  I am reverting it because if we could not even get\n\tour story straight in our own code base, how can we hope that our\n\tend user code be fixed?\n\n\tAs of this morning, our Wiki page that documents how to detect\n\tUnix had not been fixed.    \n\nsvn path=/branches/mono-2-2/mono/; revision=121716 2008-12-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* icall.c (ves_icall_System_Environment_get_Platform): For\n\tcompatibility reasons for existing client code we will keep\n\treturning 4 for a while.   \n\n\tFor how long will depend on the documentation being updated, and\n\tfor us to give client code a chance to be updated.\n\n\tThis reverts the original decison on #433108 since we did not\n\tcatch roughly 33 instances of the broken code in our own source\n\tcode base, we did not catch failures on the buildbots, and QA did\n\tnot bring this as a problem.\n\n\tOnly today I found some customer's code breaking due to our own\n\tclass libraries not being fully updated and tracked it down to\n\tthis change.  I am reverting it because if we could not even get\n\tour story straight in our own code base, how can we hope that our\n\tend user code be fixed?\n\n\tAs of this morning, our Wiki page that documents how to detect\n\tUnix had not been fixed.    \n\nsvn path=/trunk/mono/; revision=121714 Multiple files:\n\nDeals with the extension to Environment.OSVersion.Platform that might return a new\nvalue MacOSX (6) on .NET\n \n\nsvn path=/trunk/mcs/; revision=121711 Some doc work\n\nsvn path=/trunk/mono/; revision=120933 Update\n\nsvn path=/trunk/mono/; revision=120932 Backport ReaderWriterLockSlim for MEF\n\nsvn path=/branches/mono-2-2/mcs/; revision=120768 Indentation\n\nsvn path=/trunk/mono/; revision=120653 backport the fix for erase/delete for OSX\n\nsvn path=/branches/mono-2-2/mcs/; revision=120539 Add initial implementation of ReaderWriterLockSlim, it is missing support for recursive locks, and support for flagging errors\n\nsvn path=/trunk/mcs/; revision=120435 2008-11-25  Atsushi Enomoto  <atsushi@ximian.com>\n\n\t* Makefile : update old nunit options that break upgrade to 2.4.\n\n2008-11-03 Gonzalo Paniagua Javier <gonzalo@novell.com>\n\nsvn path=/trunk/mcs/; revision=120282 2008-11-28  Miguel De Icaza  <miguel@novell.com>\n\n\t* TermInfoDriver.cs: Also register a mapping to make verase be the\n\tbackspace key.  Funny thing: verase was fetched from the termios,\n\tbut it was *never* actually used in this file.\n\n\tVSUSP and VINTR are likewise ignored.   Must ponder this.\n\n\tThis makes the backspace key in MacOS work on interactive\n\tapplications.\n\nsvn path=/trunk/mcs/; revision=120261 Add DataConverter tests\n\nsvn path=/trunk/mcs/; revision=119422 2008-11-17  Chris Howie  <cdhowie@gmail.com>\n\n\t* DataConverter.cs: Fix alignment for strings when the\n\tnatural-alignment parameter is used '!'.   \n\n\tDisables CLS errors when not compiling with the CLS flag.\n\t\n\tFixes #445867\n\nsvn path=/trunk/mcs/; revision=119122 Typo\n\nsvn path=/trunk/mcs/; revision=118722 Try to fix Solaris\n\nsvn path=/trunk/mono/; revision=118426 more docs\n\nsvn path=/trunk/mcs/; revision=118357 Fix\n\nsvn path=/trunk/mcs/; revision=118356 more docs\n\nsvn path=/trunk/mcs/; revision=118355 more docs\n\nsvn path=/trunk/mcs/; revision=118354 IntPtr: Add the various operator overload features for arithmetic to mobile Update some copyrights Merge pull request #248 from pcc/toolstrip-flow\n\nFix several bugs relating to ToolStrips with Flow layout Revert the change to syslog message formatting, as JonP's code already does escaping in managed code, see: https://github.com/mono/mono/commit/f49164bf7658855390b2c19574b170f8728a99ff#commitcomment-1044747 Remove footer, since not all docs rendered are by Mono Revert \"Remove footer, since not all docs rendered are by Mono\"\n\nThis reverts commit 6cd93dd2e8021db7e0f94e32477d019655cab381. Remove footer, since not all docs rendered are by Mono Add ends-with function to our XPath processor mono: work around an Xcode 4.3/llvm bug with __alignof__ that reported 64-bit values on 32-bit mode to be 64-bit aligned, whicih is not the case [corlib-tests] If MONO_IOMAP=all, special case the IsPathRooted tests to cope with its semantics Fix the previous patch [registry] fix for #3632 Update documentation to include Mono.CSharp and Mono.Data.Sqlite Document the iOS5 specific connection string features Add the inline docs into the documentation using: mdoc update -i doc.xml -o Documentation/en ../../class/lib/net_4_5/Mono.Data.Sqlite.dll Add stubs for Mono.Data.Sqlite Add iOS FileProtection attributes to the Connection String Use 1518 and be more precise [mcs] The parser can now track in FULL_AST mode dangling attributes at the end of a namespace, fixes #3377 [mcs] The parser can now track in FULL_AST mode dangling attributes at the end of a type definition, fixes #3377 Document new setting Sort the options Fix typo Fix the debug-parser target Update the compiler docs Updated API docs Disable debugging parser on the default compiler build mcs/parser: make it so that an incomplete statement without a semicolon\ncontinue parsing as if there was a brace as the next token in the stream.\n\nThis allows the following sample to report only the missing semicolon\nas error 1525:\n\nusing System;\nclass Program\n{\n   public static void Main ()\n   {\n       TestMethod (delegate (object sender, EventArgs args) {\n\n       })\n   }\n}\n\nInstead of reporting both 1525 and later on a second 1525 for the\nend-of-file token mcs/error recovery: handle errors caused by closing braces after a statement expression manually.\n\nThis allows the statement to be added after the error has been reported, this helps\nMonoDevelop code completion. Fix my last commit Prevent race conditions for this cached variable, by using a temporary variable, fixes #2952 Implements TimeZoneInfo.Local for Windows\nFixes #2791, contributed by Jonathan Shore <jonathan.shore@gmail.com> Apply patch from Tom Hindle to fix ##2893 and add a test case.\n\nThe serializer interpreted was broken, but the compiled version was fine,\nrunning MONO_XMLSERIALIZER_THS=0 allowed this to run Merge pull request #213 from linquize/linquize-master\n\nCopy file should preserve modified time and access time Apply fix for 2839 from Michael Mudge Remove debugging statement Remove the limit on the buffer size, the spec actually calls for supporting messages of up to 0xffffffff bytes in size Add [Exports] from MonoTouch/MonoMac to the documentation index update copyrights XmlSerializer: Add support to serialize nullable types when the XmlElement has explicity set the DataType\n\nThe existing code had a special code path for handling nullables that\nignored the DataType component.\n\nThis patch splits the nullable test away, allows the specified XmlDataType\nto be probed and then performs the standard type lookup mechanism.\n\nThis allows this:\n\n        [XmlElement (\"MyNullableTime\", DataType=\"time\", IsNullable=true)]\n        DateTime? myTime;\n\nTo be serialized as a \"time\" instead of a \"datetime\".\n\nFixes bug #329 Allow trailing commas on Json objects Fix history navigation csharp: make the prettypring work with poor IEnumerable implementors Fix move-forward-word by also considering symbols as punctuations (before we could not move-forward 'a>b') update copyright Fix x #2191\nFrom Federico Di Gregorio <fog@initd.org>, allow leading sign Include System.IO.MemoryMappedFiles in the MOBILE profile Extend JsonSerializerReader to support nullables and parse a wider range of Date formats, fixes x#163 Updated with Xamarin copyrights Updated with Xamarin copyrights Updated with Xamarin copyrights Updated with Xamarin copyrights Fix the Stderr StreamWriter\n\nThis fixes the initialization of the Stderr property when used in a Console\n(no redirected output) to use the CStreamWriter class instead of the\nUnexpectionalStreamWriter class.\n\nThe CStreamWriter class already ignores IOException problems, just like the\nUnexpectionalStreamWriter class, so there is no need to wrap this twice.\n\nBefore this fix, interleaved writes to stdout and stderr would keep the\nCursor properties out of sync, as the Stderr output would go directly to the\nconsole, skipping our internal state tracking.\n\nThe following sample used to print 0:\n\nConsole.CursorTop = 0;\nConsole.Error.WriteLine (\"Boo!\");\nConsole.WriteLine (Console.CursorTop)\n\nNow it prints 1. Add locking around the ServiceModel.Logger, fixes a race reported on the mono-devel list Update two days worth of copyrights, many more missing Remove the exit code so that we can get a little bit further on MacOS X Patch from Mario Kosmiskas for Bug 1460: add support for Path.GetFileName to work with MONO_IOMAP Fix from github.com/sehe for passing the command line arguments to the OnStart method Make this build on the MOBILE profile Fix for 1461: Microsoft's generated deserializer call CollapseWhitespace extensively Apply patch from Mario Kosmiskaso fix bug 1210: Correctly propagate the Operation Context on async calls\n\nThe OperationContext is a [ThreadStatic] variable therefore when a REST call is\nmade asynchronously the worker thread will not see a context set and will not\nexpose any data through the context.\n\nA possible solution (which I implemented in the attached patch) is for\nClientRealProxy to set the context in the channel prior to executing the call\n(either sync or async). The ClientRuntimeChannel needs to then properly set and\nreset the context in the worker thread.\n\nBecause WCF operations marked [OperationContract(AsyncPattern = true)] using\nIAsyncResult only generate an outgoing call on End<OperationName> the\nClientRuntimeChannel.EndProcess must not reset the context as it's currently\ndoing. The context can only be reset after calling EndInvoke because the\nrequest will be only generated at this point. Apply patch from Mario Kosmiskaso fix bug 1209: Patch to correctly expose WebOperationContext.IncomingResponse\n\nThere was apparently no point in the call flow when the reponse message was set\nin the context, resulting in WebOperationContext.IncomingResponse always being\nnull.\n\nAfter patching WebMessageFormatter to set the response in the context (if\navailable) the value of WebOperationContext.IncomingResponse was still null. A\nbit more investigation showed that IncomingWebResponseContext would construct a\nHttpResponseMessageProperty encapsulating the OperationContext at the time the\nrequest was made but before the response was received and cache that object.\nThat caused the HttpResponseMessageProperty to always have a null value for the\nresponse. The second part of the patch changes this behavior and always creates\na new HttpResponseMessageProperty on GET. Apply patch from Mario Kosmiskaso fix bug 1207: Throw the correct exception when a REST request returns a 404\n\n.NET throws a EndpointNotFoundException encapsulating a WebException when a\nREST request returns a 404.\n\nThe attached patch tests for a 404 and throws the same exception chain thrown\nby .NET. Apply patch from Mario Kosmiskaso fix bug 1207: Check reference before copying values from Headers\n\nOutgoingWebRequestContext throws a NullReferenceException when making a REST\ncall. The exception is thrown because there are no Headers in the context.\n\nAttached patch simply tests for null before copying values from Headers. Apply patch from Mario Kosmiskaso fix bug 1205: Check reference before copying values from Headers\n\nOutgoingWebRequestContext throws a NullReferenceException when making a REST\ncall. The exception is thrown because there are no Headers in the context.\n\nAttached patch simply tests for null before copying values from Headers. Apply patch from Mario Kosmiskaso fix bug 1204: Add certificate to the HttpWebRequest if configured\n\nSystem.ServiceModel.Channels.HttpRequestChannel never added the configured\ncertificate to the HttpWebRequest which prevented client side authentication.\n\nThe attached patch does exactly that if a certificate has been configured. Fix bug 1203, relaxes the test for the protocol to allow https endpoints Add Terse syntax to C#, making the last semicolon optional Add the fallback to MonoDoc Avoid loading the same documentation file twice Fix the build, resolve the ambiguity Fix my profiler loader.\n\nThis is what happens when you test on a pre-configured environment that\nalready worked fine.    This depended on a function that was never called\nso we ended up probing for paths on NULL (repeating the same process twice)\ninstead of loading the profiler from the installation directory. Update copyrights Update copyrights Various fixes to the Expression parser, the fixes include:\n\n\t* Fixes to the SUBSTRING and TRIM function to allow\n\t  a wider range of functions to be passed as\n\t  parameters.   This fixes xamarin #665\n\n\t* Fix to the Parser.jay grammar to eliminate the\n\t  reduce/reduce conflicts.\n\n\t* Dropping the string concatenation code and instead\n\t  use the existing arithmetic addition operator which\n\t  also fixes the concatenation operation in the presence\n\t  of null values\n\n\t* Adds the null literal\n\nWith the associated test cases. Fallback: load profiler from the Mono default path.  This in particular allows users to run mono --profiler=log foo.exe without having to set anuy environment variables Remove the old PFX Scheduler from the build More updates update copyrights Ship System.Json for 2.0 and 4.0 as well.\n\nJust because the .NET framework does not ship System.Json with their\ncore profiles does not mean we should not distribuet them.\n\nBring the joy of System.Json from Silverlight to the desktop\n\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n#\tmodified:   ../Makefile\n#\tmodified:   Makefile\n#\tmodified:   System.Json.dll.sources\n#\n# Untracked files:\n#   (use \"git add <file>...\" to include in what will be committed)\n#\n#\t../../../eglib/src/gpath.c.orig\n#\tSystem.Json/.JsonValue.cs.swp\n#\tsources\n#\t../System/System.Net/#WebRequest.cs#\n#\t../../tools/monodoc/Resources/mono-ecma.css.orig\n#\t../../../mono.h\n#\t../../../mono/metadata/y\n#\t../../../mono/mini/.aot-compiler.c.swp\n#\t../../../mono/utils/mono-dtrace.h\n#\t../../../monotouch-enterprise.ashx\n#\t../../../web/ Merge pull request #129 from grumpydev/CryptoFixo\n\nFix for out of bounds exception in Rfc2898DeriveBytes Merge pull request #138 from eisnerd/bug-winforms-datagridview-resize-490247\n\n[winforms] DataGridView row height resize handles added for bug #490247 Merge pull request #147 from flutos/master\n\nrevert performance patch for TdsComm.cs file\r\n\r\nthis is in reference to bug \r\nhttps://bugzilla.novell.com/show_bug.cgi?id=609109\r\nI was working with Veerapuram to isolate this problem and he was making some progress but this is a complated patch and he is not onto other things right now so given that I was hoping to get the patch that was causing these problems to get reverted from. the offending patch is\r\nhttps://github.com/mono/mono/commit/124c0ce55f13ca67cf8f7641a9bb3b034ac7dd5e\r\nThis patch reverts the offending patch for the file but leave all the subsequent patches for the file in tact. Once Veerapuram has a chance to get back to it we can look at getting this performance patch fixed and reapplied . Since its just a performance patch it shouldnt effect any current functionality.\r\n\r\nrevert change from https://github.com/flutos/mono/commit/124c0ce55f13ca67cf8f7641a9bb3b034ac7dd5e#mcs/class/Mono.Data.Tds/Mono.Data.Tds.Protocol since it makes the sqlserver calls unstable Merge pull request #141 from LogosBible/surrogtate\n\n[480178] Fix handling of surrogate characters. Add a list of historic Mono branches, before we delete them from the server Merge pull request #93 from konrad-kruczynski/dispatcher_timer_fix\n\n[Fix] Fix for bug #677265 with DispatcherTimer. Merge pull request #136 from spencerhakim/master\n\nFixed SKEL_DIRECTORY definition in Release build of jay2010.vcxproj Merge pull request #139 from HorstKakuschke/master\n\nFix for Xamarin Bug 42: Exception 'TypeConverter cannot convert from System.String' when specifying soapExtensionReflectorTypes Fix invocation to syslog Fix build Update copyrights Merge pull request #102 from konrad-kruczynski/fix_bug_635971\n\n[Fix] #635971 Fixed throwing exception in case of using zero timeout. Now Add C launcher for Mono-shipped binaries Merge pull request #95 from XTZGZoReX/master.\n\nFix spelling in Consts.cs.in Merge pull request #90 from nulltoken/patch-1.\n\n[XBuild) Make RemoveDir task able to recursively delete the content of a directory Update SGen sources to SGen license Do not go beyond our string boundaries Restore the functionality to the REPL that allowed us to pass\nfiles to be parsed on the command line as if they were typed on the\nstandard input Prevent crash on scripts that do not contain the #! line Revert broken patch 34f18b68 that caused random bugs in assembly loading, but could crash the runtime as well Merge pull request #248 from pcc/toolstrip-flow\n\nFix several bugs relating to ToolStrips with Flow layout Revert the change to syslog message formatting, as JonP's code already does escaping in managed code, see: https://github.com/mono/mono/commit/f49164bf7658855390b2c19574b170f8728a99ff#commitcomment-1044747 Remove footer, since not all docs rendered are by Mono Revert \"Remove footer, since not all docs rendered are by Mono\"\n\nThis reverts commit 6cd93dd2e8021db7e0f94e32477d019655cab381. Remove footer, since not all docs rendered are by Mono Add ends-with function to our XPath processor mono: work around an Xcode 4.3/llvm bug with __alignof__ that reported 64-bit values on 32-bit mode to be 64-bit aligned, whicih is not the case [corlib-tests] If MONO_IOMAP=all, special case the IsPathRooted tests to cope with its semantics Fix the previous patch [registry] fix for #3632 Update documentation to include Mono.CSharp and Mono.Data.Sqlite Document the iOS5 specific connection string features Add the inline docs into the documentation using: mdoc update -i doc.xml -o Documentation/en ../../class/lib/net_4_5/Mono.Data.Sqlite.dll Add stubs for Mono.Data.Sqlite Add iOS FileProtection attributes to the Connection String Use 1518 and be more precise [mcs] The parser can now track in FULL_AST mode dangling attributes at the end of a namespace, fixes #3377 [mcs] The parser can now track in FULL_AST mode dangling attributes at the end of a type definition, fixes #3377 Document new setting Sort the options Fix typo Fix the debug-parser target Update the compiler docs Updated API docs Disable debugging parser on the default compiler build mcs/parser: make it so that an incomplete statement without a semicolon\ncontinue parsing as if there was a brace as the next token in the stream.\n\nThis allows the following sample to report only the missing semicolon\nas error 1525:\n\nusing System;\nclass Program\n{\n   public static void Main ()\n   {\n       TestMethod (delegate (object sender, EventArgs args) {\n\n       })\n   }\n}\n\nInstead of reporting both 1525 and later on a second 1525 for the\nend-of-file token mcs/error recovery: handle errors caused by closing braces after a statement expression manually.\n\nThis allows the statement to be added after the error has been reported, this helps\nMonoDevelop code completion. Fix my last commit Prevent race conditions for this cached variable, by using a temporary variable, fixes #2952 Implements TimeZoneInfo.Local for Windows\nFixes #2791, contributed by Jonathan Shore <jonathan.shore@gmail.com> Apply patch from Tom Hindle to fix ##2893 and add a test case.\n\nThe serializer interpreted was broken, but the compiled version was fine,\nrunning MONO_XMLSERIALIZER_THS=0 allowed this to run Merge pull request #213 from linquize/linquize-master\n\nCopy file should preserve modified time and access time Apply fix for 2839 from Michael Mudge Remove debugging statement Remove the limit on the buffer size, the spec actually calls for supporting messages of up to 0xffffffff bytes in size Add [Exports] from MonoTouch/MonoMac to the documentation index update copyrights XmlSerializer: Add support to serialize nullable types when the XmlElement has explicity set the DataType\n\nThe existing code had a special code path for handling nullables that\nignored the DataType component.\n\nThis patch splits the nullable test away, allows the specified XmlDataType\nto be probed and then performs the standard type lookup mechanism.\n\nThis allows this:\n\n        [XmlElement (\"MyNullableTime\", DataType=\"time\", IsNullable=true)]\n        DateTime? myTime;\n\nTo be serialized as a \"time\" instead of a \"datetime\".\n\nFixes bug #329 Allow trailing commas on Json objects Fix history navigation csharp: make the prettypring work with poor IEnumerable implementors Fix move-forward-word by also considering symbols as punctuations (before we could not move-forward 'a>b') update copyright Fix x #2191\nFrom Federico Di Gregorio <fog@initd.org>, allow leading sign Include System.IO.MemoryMappedFiles in the MOBILE profile Extend JsonSerializerReader to support nullables and parse a wider range of Date formats, fixes x#163 Updated with Xamarin copyrights Updated with Xamarin copyrights Updated with Xamarin copyrights Updated with Xamarin copyrights Fix the Stderr StreamWriter\n\nThis fixes the initialization of the Stderr property when used in a Console\n(no redirected output) to use the CStreamWriter class instead of the\nUnexpectionalStreamWriter class.\n\nThe CStreamWriter class already ignores IOException problems, just like the\nUnexpectionalStreamWriter class, so there is no need to wrap this twice.\n\nBefore this fix, interleaved writes to stdout and stderr would keep the\nCursor properties out of sync, as the Stderr output would go directly to the\nconsole, skipping our internal state tracking.\n\nThe following sample used to print 0:\n\nConsole.CursorTop = 0;\nConsole.Error.WriteLine (\"Boo!\");\nConsole.WriteLine (Console.CursorTop)\n\nNow it prints 1. Add locking around the ServiceModel.Logger, fixes a race reported on the mono-devel list Update two days worth of copyrights, many more missing Remove the exit code so that we can get a little bit further on MacOS X Patch from Mario Kosmiskas for Bug 1460: add support for Path.GetFileName to work with MONO_IOMAP Fix from github.com/sehe for passing the command line arguments to the OnStart method Make this build on the MOBILE profile Fix for 1461: Microsoft's generated deserializer call CollapseWhitespace extensively Apply patch from Mario Kosmiskaso fix bug 1210: Correctly propagate the Operation Context on async calls\n\nThe OperationContext is a [ThreadStatic] variable therefore when a REST call is\nmade asynchronously the worker thread will not see a context set and will not\nexpose any data through the context.\n\nA possible solution (which I implemented in the attached patch) is for\nClientRealProxy to set the context in the channel prior to executing the call\n(either sync or async). The ClientRuntimeChannel needs to then properly set and\nreset the context in the worker thread.\n\nBecause WCF operations marked [OperationContract(AsyncPattern = true)] using\nIAsyncResult only generate an outgoing call on End<OperationName> the\nClientRuntimeChannel.EndProcess must not reset the context as it's currently\ndoing. The context can only be reset after calling EndInvoke because the\nrequest will be only generated at this point. Apply patch from Mario Kosmiskaso fix bug 1209: Patch to correctly expose WebOperationContext.IncomingResponse\n\nThere was apparently no point in the call flow when the reponse message was set\nin the context, resulting in WebOperationContext.IncomingResponse always being\nnull.\n\nAfter patching WebMessageFormatter to set the response in the context (if\navailable) the value of WebOperationContext.IncomingResponse was still null. A\nbit more investigation showed that IncomingWebResponseContext would construct a\nHttpResponseMessageProperty encapsulating the OperationContext at the time the\nrequest was made but before the response was received and cache that object.\nThat caused the HttpResponseMessageProperty to always have a null value for the\nresponse. The second part of the patch changes this behavior and always creates\na new HttpResponseMessageProperty on GET. Apply patch from Mario Kosmiskaso fix bug 1207: Throw the correct exception when a REST request returns a 404\n\n.NET throws a EndpointNotFoundException encapsulating a WebException when a\nREST request returns a 404.\n\nThe attached patch tests for a 404 and throws the same exception chain thrown\nby .NET. Apply patch from Mario Kosmiskaso fix bug 1207: Check reference before copying values from Headers\n\nOutgoingWebRequestContext throws a NullReferenceException when making a REST\ncall. The exception is thrown because there are no Headers in the context.\n\nAttached patch simply tests for null before copying values from Headers. Apply patch from Mario Kosmiskaso fix bug 1205: Check reference before copying values from Headers\n\nOutgoingWebRequestContext throws a NullReferenceException when making a REST\ncall. The exception is thrown because there are no Headers in the context.\n\nAttached patch simply tests for null before copying values from Headers. Apply patch from Mario Kosmiskaso fix bug 1204: Add certificate to the HttpWebRequest if configured\n\nSystem.ServiceModel.Channels.HttpRequestChannel never added the configured\ncertificate to the HttpWebRequest which prevented client side authentication.\n\nThe attached patch does exactly that if a certificate has been configured. Fix bug 1203, relaxes the test for the protocol to allow https endpoints Add Terse syntax to C#, making the last semicolon optional Add the fallback to MonoDoc Avoid loading the same documentation file twice Fix the build, resolve the ambiguity Fix my profiler loader.\n\nThis is what happens when you test on a pre-configured environment that\nalready worked fine.    This depended on a function that was never called\nso we ended up probing for paths on NULL (repeating the same process twice)\ninstead of loading the profiler from the installation directory. Update copyrights Update copyrights Various fixes to the Expression parser, the fixes include:\n\n\t* Fixes to the SUBSTRING and TRIM function to allow\n\t  a wider range of functions to be passed as\n\t  parameters.   This fixes xamarin #665\n\n\t* Fix to the Parser.jay grammar to eliminate the\n\t  reduce/reduce conflicts.\n\n\t* Dropping the string concatenation code and instead\n\t  use the existing arithmetic addition operator which\n\t  also fixes the concatenation operation in the presence\n\t  of null values\n\n\t* Adds the null literal\n\nWith the associated test cases. Fallback: load profiler from the Mono default path.  This in particular allows users to run mono --profiler=log foo.exe without having to set anuy environment variables Remove the old PFX Scheduler from the build More updates update copyrights Ship System.Json for 2.0 and 4.0 as well.\n\nJust because the .NET framework does not ship System.Json with their\ncore profiles does not mean we should not distribuet them.\n\nBring the joy of System.Json from Silverlight to the desktop\n\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n#\tmodified:   ../Makefile\n#\tmodified:   Makefile\n#\tmodified:   System.Json.dll.sources\n#\n# Untracked files:\n#   (use \"git add <file>...\" to include in what will be committed)\n#\n#\t../../../eglib/src/gpath.c.orig\n#\tSystem.Json/.JsonValue.cs.swp\n#\tsources\n#\t../System/System.Net/#WebRequest.cs#\n#\t../../tools/monodoc/Resources/mono-ecma.css.orig\n#\t../../../mono.h\n#\t../../../mono/metadata/y\n#\t../../../mono/mini/.aot-compiler.c.swp\n#\t../../../mono/utils/mono-dtrace.h\n#\t../../../monotouch-enterprise.ashx\n#\t../../../web/ Merge pull request #129 from grumpydev/CryptoFixo\n\nFix for out of bounds exception in Rfc2898DeriveBytes Merge pull request #138 from eisnerd/bug-winforms-datagridview-resize-490247\n\n[winforms] DataGridView row height resize handles added for bug #490247 Merge pull request #147 from flutos/master\n\nrevert performance patch for TdsComm.cs file\r\n\r\nthis is in reference to bug \r\nhttps://bugzilla.novell.com/show_bug.cgi?id=609109\r\nI was working with Veerapuram to isolate this problem and he was making some progress but this is a complated patch and he is not onto other things right now so given that I was hoping to get the patch that was causing these problems to get reverted from. the offending patch is\r\nhttps://github.com/mono/mono/commit/124c0ce55f13ca67cf8f7641a9bb3b034ac7dd5e\r\nThis patch reverts the offending patch for the file but leave all the subsequent patches for the file in tact. Once Veerapuram has a chance to get back to it we can look at getting this performance patch fixed and reapplied . Since its just a performance patch it shouldnt effect any current functionality.\r\n\r\nrevert change from https://github.com/flutos/mono/commit/124c0ce55f13ca67cf8f7641a9bb3b034ac7dd5e#mcs/class/Mono.Data.Tds/Mono.Data.Tds.Protocol since it makes the sqlserver calls unstable Merge pull request #141 from LogosBible/surrogtate\n\n[480178] Fix handling of surrogate characters. Add a list of historic Mono branches, before we delete them from the server Merge pull request #93 from konrad-kruczynski/dispatcher_timer_fix\n\n[Fix] Fix for bug #677265 with DispatcherTimer. Merge pull request #136 from spencerhakim/master\n\nFixed SKEL_DIRECTORY definition in Release build of jay2010.vcxproj Merge pull request #139 from HorstKakuschke/master\n\nFix for Xamarin Bug 42: Exception 'TypeConverter cannot convert from System.String' when specifying soapExtensionReflectorTypes Fix invocation to syslog Fix build Update copyrights Merge pull request #102 from konrad-kruczynski/fix_bug_635971\n\n[Fix] #635971 Fixed throwing exception in case of using zero timeout. Now Add C launcher for Mono-shipped binaries Merge pull request #95 from XTZGZoReX/master.\n\nFix spelling in Consts.cs.in Merge pull request #90 from nulltoken/patch-1.\n\n[XBuild) Make RemoveDir task able to recursively delete the content of a directory Update SGen sources to SGen license Do not go beyond our string boundaries Restore the functionality to the REPL that allowed us to pass\nfiles to be parsed on the command line as if they were typed on the\nstandard input Prevent crash on scripts that do not contain the #! line Revert broken patch 34f18b68 that caused random bugs in assembly loading, but could crash the runtime as well Add test to prevent future problems, this fixes the random MacOSX crashes with assembly loading, but likely everywhere else as well Console encoding fix for bug 678357\n\nMove the stream setup into a separate method and recreate the\nstreams whenever the input or output streams change. more docs\n\nsvn path=/trunk/mcs/; revision=118353 Add CSharpLib docs\n\nsvn path=/trunk/mcs/; revision=118343 Add documentation for the evaluator\n\nsvn path=/trunk/mcs/; revision=118341 Add more docs\n\nsvn path=/trunk/mcs/; revision=118305 move back to olive\n\n\nsvn path=/trunk/mcs/; revision=118141 Take WindowsBase out\n\nsvn path=/trunk/mcs/; revision=118140 Update docs\n\nsvn path=/trunk/mono/; revision=118123 Update this as well\n\nsvn path=/trunk/mcs/; revision=118119 Revert Npgsql to 1.0, because in 2.0 NpgsqlConnection.ServerVersion change its type\n\nsvn path=/trunk/mcs/; revision=118114 Fixificate the build\n\nsvn path=/trunk/mcs/; revision=118078 2008-11-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* codegen.cs (InitDynamic): also setup Assembly.Name like we do in\n\tInit, otherwise we would crash later on when checking for friend\n\tassemblies. \n\nsvn path=/trunk/mcs/; revision=118077 Revert the revert\n\nsvn path=/trunk/mcs/; revision=118074 2008-11-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Do not hide errors from invalid calls to LoadAssembly.\n\tOtherwise we never get any meaningful information as to what\n\tfailed. \n\nsvn path=/trunk/mcs/; revision=118067 2008-11-05  Miguel de Icaza  <miguel@novell.com>\n\n\t* namespace.cs: Turns out that it was a really bad idea to hide\n\tthe errors for namespaces not found here in eval mode.    \n\n\t* eval.cs: When we process using clauses, only enter those into\n\tthe list of valid using clauses after they have been validated.   \n\n\tThe above change gives the proper semantics: it does not\n\tsenselessly report the same errors with broken using statements by\n\tnever storing them in the first place when they are invalid.\n\nsvn path=/trunk/mcs/; revision=118001 Fix this too\n\nsvn path=/trunk/mcs/; revision=117809 Update\n\nsvn path=/trunk/mcs/; revision=117808 Add WindowsBase\n\nsvn path=/trunk/mcs/; revision=117807 2008-02-09  Jonathan Pryor  <jonpryor@vt.edu>\n\n\t* Mono.Posix_test.dll.sources: Add Mono.Unix/UnixSignalTest.cs.\n\n2008-01-28  Jonathan Pryor  <jpryor@novell.com>\n\nsvn path=/trunk/mcs/; revision=117802 Updated: Mono.Simd API is in flux\n\nsvn path=/trunk/mcs/; revision=117769 Flush\n\nsvn path=/trunk/mcs/; revision=117722 op_Explicit for everyone\n\nsvn path=/trunk/mcs/; revision=117721 A bunch more docs\n\nsvn path=/trunk/mcs/; revision=117720 Another batch, some operations + lots of parameters\n\nsvn path=/trunk/mcs/; revision=117719 Add mono-lineeditor\n\nsvn path=/trunk/mono/; revision=117715 Install the correct file\n\nsvn path=/trunk/mcs/; revision=117714 Install source code snippets in the same location\n\nsvn path=/trunk/mcs/; revision=117712 More docs\n\nsvn path=/trunk/mcs/; revision=117707 Native EOL\n\nsvn path=/trunk/mcs/; revision=117706 Equals\n\nsvn path=/trunk/mcs/; revision=117705 Fix\n\nsvn path=/trunk/mcs/; revision=117691 basic summaries\n\nsvn path=/trunk/mcs/; revision=117690 Initial SIMD documentation\n\nsvn path=/trunk/mcs/; revision=117688 Revert\n\nsvn path=/trunk/mcs/; revision=117681 Allow more than one\n\nsvn path=/trunk/mcs/; revision=117680 Update with a newer Mono.Simd\n\nsvn path=/trunk/mcs/; revision=117679 Update docs\n\nsvn path=/trunk/mono/; revision=117633 Add ordering\n\nsvn path=/trunk/mcs/; revision=117632 Quit when requested\n\nsvn path=/trunk/mcs/; revision=117631 Add Describe method\n\nsvn path=/trunk/mcs/; revision=117068 Expose a bit more\n\nsvn path=/trunk/mcs/; revision=117067 Make Monop's code reusable\n\nsvn path=/trunk/mcs/; revision=117066 2008-10-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* atomic.h: Add CodeWarrior macros from Unity3D.\n\nsvn path=/trunk/mono/; revision=116166 2008-10-17  Miguel de Icaza  <miguel@novell.com>\n\n\t* Allow types to be defined on the eglib-config.h file, that could\n\tbe a platform specific generated type file.\n\n\t* gtimer.c: split functionality in platforms.\n\nsvn path=/trunk/mono/; revision=116164 Update\n\nsvn path=/trunk/mono/; revision=115685 Reformat\n\nsvn path=/trunk/mono/; revision=115590 2008-10-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* locales.c (string_invariant_compare_char): Optimization: do not\n\tcall g_unichar_type unless we actually need the information.\n\nsvn path=/trunk/mono/; revision=115508 2008-10-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/glib.h: Move g_strdup here, to consolidate all allocations\n\tin this header, will help for merging the allocation work later. \n\nsvn path=/trunk/mono/; revision=115507 2008-10-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gpattern.c (compile_pattern): From Unity, use -1 in the enum\n\tfor MatchType.\n\nsvn path=/trunk/mono/; revision=115506 2008-10-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gpath.c: Split this one as well.\n\nsvn path=/trunk/mono/; revision=115505 2008-10-11  Miguel de Icaza  <miguel@novell.com>\n\n\t* src/gmodule-win32.c, src/gmisc-unix.c, src/gmisc-win32.c,\n\tsrc/gmodule-unix.c: split functionality in platforms.\n\t\n\t* src/goutput.c (g_logv): On some platforms, before we abort we\n\twant to flush the stdout/stderr.\n\nsvn path=/trunk/mono/; revision=115504 2008-10-10  Miguel de Icaza  <miguel@novell.com>\n\n\t* Split functionality that is operating system specific into\n\t-win32.c, -unix.c and -posix.c \n\n\t* Use g_malloc everywhere, and g_free, so that these can be easily\n\toverwritten consistently.\n\n\nsvn path=/trunk/mono/; revision=115497 2008-10-09  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: rename \"<interactive>\" to \"{interactive}\", to work\n\taround a requirement in the compiler that this be a valid\n\tfilename, and in Windows it is not (433886).\n\nsvn path=/trunk/mcs/; revision=115360 Sort the options in enable-minimal, and add simd\n\nsvn path=/trunk/mono/; revision=114800 Remove text that was copy pasted from MSBuild\n\nsvn path=/trunk/mcs/; revision=114506 Nothing to see here\n\nsvn path=/trunk/mcs/; revision=114426 Nothing to see here\n\nsvn path=/trunk/mcs/; revision=114425 Use new quit system\n\nsvn path=/trunk/mcs/; revision=114354 2008-09-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs (InteractiveBase): The quit command now just sets a\n\tflag, instead of calling Environment.Exit(), it is milder on\n\tembedded hosts. \n\n\nsvn path=/trunk/mcs/; revision=114353 2008-09-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs (PrettyPrint): Add support for displaying characters\n\tproperly. \n\nsvn path=/trunk/mcs/; revision=114341 2008-09-28  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: CompiledMethod is now in Mono.CSharp, not nested inside\n\tthe Evaluator, it was inconvenient to use.\n\nsvn path=/trunk/mcs/; revision=114316 Expose Report's stream\n\nsvn path=/trunk/mcs/; revision=114315 Bug fixed -> re-enable\n\nsvn path=/trunk/mono/; revision=114314 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* Turn off MONO_GENERIC_SHARING=all and go back to corlib as it\n\tcrashes MonoDevelop: #430455.\n\nsvn path=/trunk/mono/; revision=114308 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* getline.cs: Add support for autocompletion.\n\t\n\n\nsvn path=/trunk/mcs/; revision=114305 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs (RunRepl): Catch exceptions, and send those as errors\n\tback to the client.\n\nsvn path=/trunk/mcs/; revision=114304 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* Abdicate: renamed csharplib.dll into Mono.CSharp.dll\n\nsvn path=/trunk/mcs/; revision=114301 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs: Rename AttachedCSharpShell to ClientCSharpShell.\n\n\tMake most of the CSharpShell code into instance code, so that we\n\tcan override the behavior on ClientCSharpShell and reuse most of\n\tthe logic there.\n\n\tCSharpShell now has a virtual `Evaluate' that is used to implement\n\tthe evaluator. \n\n\tImplemented a new more robust protocol for sending the information\n\tback and forth.\n\n\tNow the results are show on the client, and come prettyprinted.\n\n\nsvn path=/trunk/mcs/; revision=114300 update tuner file to the expanded C# compiler API\n\nsvn path=/trunk/mcs/; revision=114269 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs (Evaluator): Introduce Compile method, to allow compiled\n\tcode to be invoked without having to reparse.\n\nsvn path=/trunk/mcs/; revision=114268 Fix the test setup, Run was using the wrong test\n\nsvn path=/trunk/mcs/; revision=114267 Update tests\n\nsvn path=/trunk/mcs/; revision=114266 Update tests\n\nsvn path=/trunk/mcs/; revision=114265 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* ecore.cs: The recent changes to FieldExpr broke this as well.\n\tFixes LINQ queries in the interactive shell.\n\nsvn path=/trunk/mcs/; revision=114264 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* Multiple files: indentation fixing for the Mono coding\n\tguidelines for the switch statement.\n\nsvn path=/trunk/mcs/; revision=114263 Indentation\n\nsvn path=/trunk/mcs/; revision=114262 2008-09-27  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Make the Evaluator API thread safe.\n\nsvn path=/trunk/mcs/; revision=114261 up\n\nsvn path=/trunk/mcs/; revision=114158 2008-09-25  Luis Ortiz  <lortiz@interactivesupercomputing.com>\n\n\t* configure.in: Big arrays are only supported on 64 bit systems. \n\n\tFixes #430022\n\nsvn path=/trunk/mono/; revision=114157 2008-09-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs (LoadAssembly, ReferenceAssembly): Call\n\tRootNamespace.ComputeNamespaces to update the internal list of\n\tnamespaces, this is no longer done for us.\n\n\t(InteractiveBase): Use the Evaluator APIs instead of calling into\n\tDriver directly\n\n\nsvn path=/trunk/mcs/; revision=114156 2008-09-25  Miguel de Icaza  <miguel@novell.com>\n\n\t* repl.cs: On errors, return null.\n\nsvn path=/trunk/mcs/; revision=114123 2008-09-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* ecore.cs (FieldExpr): Only initialize eclass when we return a\n\tfully constructed FieldExpr, fixes the regression introduced in\n\tthe last commit.\n\nsvn path=/trunk/mcs/; revision=114051 update\n\nsvn path=/trunk/mono/; revision=114044 Revert\n\nsvn path=/trunk/mcs/; revision=114043 2008-09-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval-test.cs: Add an evaluation test, to test the basic\n\tprimitives of the expression evaluator.\n\nsvn path=/trunk/mcs/; revision=114034 2008-09-24  Miguel de Icaza  <miguel@novell.com>\n\n\t* ecore.cs, expression.cs: Plug back the eclass initialization as\n\totherwise it regresses `csharp'. \n\nsvn path=/trunk/mcs/; revision=114032 Format for api docs\n\nsvn path=/trunk/mono/; revision=114011 Document attach, various other cleanups\n\nsvn path=/trunk/mono/; revision=114010 Thanks Geoff\\!\n\nsvn path=/trunk/mono/; revision=113758 2008-09-21  Miguel de Icaza  <miguel@novell.com>\n\n\t* csharplib/Makefile: Add a setup to build GMCS as a GAC assembly\n\tcalled `csharplib' with only the public classes that we want\n\texposed: Mono.CSharp.Evaluator, Mono.CSharp.InteractiveBase and\n\tMono.CSharp.InteractiveBase+Simple\n\n\nsvn path=/trunk/mcs/; revision=113671 2008-09-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* WaitHandle.cs (WaitOne): Add new 3.5 SP1 overload.\n\nsvn path=/trunk/mcs/; revision=113582 Add\n\nsvn path=/trunk/mono/; revision=113579 Support older Automakes, as reported by Mark, having forward slashes on the list of SUBDIRS fails with old versions\n\nsvn path=/trunk/mono/; revision=113578 Up\n\nsvn path=/trunk/mono/; revision=113577 Up\n\nsvn path=/trunk/mono/; revision=113576 Get a few more in\n\nsvn path=/trunk/mono/; revision=113556 Friendly localizable string\n\nsvn path=/trunk/mcs/; revision=113555 Changed from bits to wordsize, as suggested by Paolo\n\nsvn path=/trunk/mono/; revision=113553 2008-09-19  Miguel de Icaza  <miguel@novell.com>\n\n\t* mono-config.c (dllmap_start): Add support for the bits keyword\n\ton dllentry and dllmap to easily detect 32 vs 64 bit systems.\n\n\nsvn path=/trunk/mono/; revision=113551 Added debug information, after staring at console for a while\n\nsvn path=/trunk/mcs/; revision=113390 2008-09-18  Miguel de Icaza  <miguel@novell.com>\n\n\t* eval.cs: Remove warning, keep reference to driver around.\n\n\t* Hide fields that do not need to be public.\n\nsvn path=/trunk/mcs/; revision=113388 Add test to prevent future problems, this fixes the random MacOSX crashes with assembly loading, but likely everywhere else as well Console encoding fix for bug 678357\n\nMove the stream setup into a separate method and recreate the\nstreams whenever the input or output streams change. Make this OSX specific instead Allow generated files here Check in these autogenerated files, since they keep breaking the concurrent make builds OSX, Win32: Implements support for DriveInfo\n\nThis implements support for DriveInfo for OSX and Windows.\n\nOn OSX we use statfs system call that provides the filesystem\ntype information that we need.   On Linux, we continue to fallback\nto mtab parsing Add OSX support to the io-layer: supports getting a list of mounted file systems, and OSX-specific file system types Add Environment.IsMacOS for handling OSX specific bits in corlib Fix build More NET_2_0 define removal Style changes as I edit this file Re-enable the Decimal(double) constructor that uses our direct transformation\nfrom a double into a decimal.\n\nThis is too good to be true.   The only change was to set the rounding bit in the\ncall to rescale the results.\n\nThis should fix bug #584736, and hopefully does not regress anythign else.   The\ndecimal test suite in corlib passes. [System.Json] Fix loader.\n\nThe current loader failed with some Json strings due to the implementation\nof the BufferedStreamReader.   Removed that implementation completely,\nand instead depend on the StreamReader to do the actual BOM detection.\n\nThis removes the JavaScriptObjectDeserializer.cs file Make print take an object Fix build [TerminfoDriver] be more tolerant to failures, and fallback gracefully, instead of aborting Do not throw exceptions, instead return a sensible value, fixes 656468 Bug fix, on EOF, return null from ReadLine Add default implementations to ReadLine() and ReadToEnd() to TextReader, fixes 655934 Avoid warnings, should fix OpenSUSE builds [594642] System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces fix for MacOS X Remove [670974] Use the underlying BaseStream to read bytes instead of trying to peek a character.\n\nPeeking a character as it turns out is a really bad idea as it involves the encoder\nto pull characters.   If the PeekChar happens to read a byte that is part of a\nUTF8 string that needs more characters to process we would end up with the reported\ncrash.\n\nAtsushi Enomoto tracked this down, and the fix is to use the binaryreader.BaseStream\nto directly call into ReadByte and Read without ever probing with PeekChar ().   It\nis not really possible to use BinaryReader.ReadByte since this one can throw on\nend-of-buffer conditions instead of returning -1 Do not build in parallel Add solution files Various updates Pass warnings Visual Studio build support: updated the scripts that generate csproj files.\n\nWith the new C# compiler, the build complexity is vastly reduced, the new setup\nis able to produce many of the csproj files.\n\nThe next step is to generate a couple of solutions:\n\n\t* BootstrapSolution: to build the basic assemblies used to\n\t  build the rest of Mono from a set of basic assemblies.\n\n\t  This should be run to prepare a tree.\n\n\t* 2.0 solution: builds the various 2.0 libraries and executables\n\n\t* 4.0 solution: builds the various 4.0 libraries and executables\n\nInstallation: where should the resulting assemblies go once they are built?\n\nWhere should the assemblies go after the build is complete?\n\nHow do we turn a build into an redistributable package? Update the csproj generator targets [fix] changing Form.Enabled sometimes can change the list of OpenForms, fixes 671098 [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 665233] ToolStrip Menus Keeping Keyboard Capture after hovering over SubMenu Do not throw if we get a RunAndCollect Style Add new test Fix Enum.HasValue, previous version crashed with negative values Update docs Add prototype to .h file [csharp] Change the signature for print [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase\n\nAdd a better way of dealing with -e, without adding hacks to the core that wont work\nin the future [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase [repl] Add support for -e EXPRESSION to the csharp command Document csharp #! support [getline] Fix history search in the cmdline editor [Mono.CSharp] Fix bug where overwriting variables cleared the wrong value\n\nThis fixes #641910 [csharp] repl using statement fix + support for --fatal\n\nFixes #638585 which kept reporting the same error on the using statements over and over\nAdded support for the --fatal flag to the REPL Do not build the Socket passing on Mobile systems [sockets] Implement DuplicateAndClose and Socket (SocketInformation) constructor for in-process socket passing (AppDomains) [eglib] Another bug fix for g_shell_parse\n\nWe do not create a new string after a quotation, unless the next\ncharacter after a closing quote is a space.   This allows parsing\nthe string:\n\t\"foo\",\"bar\"\n\nAs:\n\tfoo,bar\n\nThis fixes #655896\n\n1# Explicit paths specified without -i nor -o; assuming --only paths... [eglib] Add more tests for the g_shell_parse [mscorlib/getfolderpath] Special-case MacOS X.\n\nThe following changes were done to specially support OSX:\n* MyMusic on OSX is ~/Music\n* MyPictures on OSX is ~/Pictures\n* Fonts on OSX is ~/Library/Fonts\n* Favorites on OSX is ~/Library/Favorites\n* ProgramFiles on OSX is /Applications\n* InternetCache on OSX is ~/Library/Caches\n\nThe documentation has been updated accordingly. [mscorlib] New Path.Combine methods are exposed internally on pre 4.0 profiles\n\nThis allows our mscorlib code to be cleaner [mscorlib/getfolderpath] Remove MonoTODO [GetFolderPath] Handful of .NET 4 changes\n\n* Actually use the SpecialFolderPathOptions where we need them\n  -> Create is acknowledged\n  -> DoNotVerify is ignored, as Mono historically did not throw an\n     exception on missing directories.\n* Rename InternalGetFolderPath to UnixGetFolderPath as this is what it is.\n* Fix existing references to the code\n* Fix indentation in routine that was never properly formatted (ReadXdgUserDir) [mscorlib] inside mscorlib Platform's value will be correct for OSX, but userland still gets Unix.\n\nThis change allows mscorlib to get the real PlatformID, to split code between\nOSX and general Unix.   We continue to expose the value 4 (Unix) to usercode\nas changing this might break user applications. [monodoc] Use points instead of relative-sizing, so that we render the same on web browsers and on WebKit Revert accidental patch [monodoc] Update the stylesheets to use Jonathan Pobst's UI design.\n\nThis is a temporary measure, as we only use 1/10th of Jonathan's\nicons and style, but will do while we get Kipunji deployed.\n\nThe major benefit is that the native Linux and MacOS Monodoc\nclients when using Gecko or WebKit can render something that is not\nhideous. [monodoc] Header no longer needed, we now keep it on the top [monodoc] Fix the root display once and for all: web does not do editing Update README Update instructions Undo adding of README2 test file [winforms] undo accidental removal of a line [winforms] revert patch, it regresses the test suite: https://github.com/mono/mono/commit/8334fe3a56c978ffe7f8cb199536f9b3234afdbe Update COPYING file with MS-PL and Apache2 texts Add README2 [winforms] Pass 4 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms Pass 1 of removing NET_2_0 from winforms [winforms] Style, braces [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] style, and NET_2_0 dropped [winforms] Prepare for Gnome 3, by not depending on libgnomeui Update docs Add part3 of the Google GCI 2010 contributions Documentation for Mono.Cairo contributed by knairda from Google GCI 2010 Awesome doc contributions from Adrian Kummerlaender Awesome doc contributions from Adrian Kummerlaender Remove experimental from the name Remove mentions of Logging and Heap Shot profilers from man page Expose some of our internals to the Mono.Winforms assembly Fix broken patch Allow this file to expose its types as public if needed Document server option to --debugger-agent Retval is not a reserved keyword, fixes 643345 Fix EqualityComparer for strings.\n\nIt turns out that Strings need to explicitly use a version that does\nimplement EqualityComparer<string> since string is an IEquatable.\n\nDo this, and to avoid the reflection mess, cast to object, then cast\nto the real type Optimize EqualityComparer for strings\n\nThis shortcut prevents the reflection system to kick into action\nfor compiler generated string switch statements. Improve the Uri parsing speed\n\nThis affects MonoTouch startup as our dictionaries are a little bit\nslow to be created now that we use Dictionary<> hashes for switch\nstatements.\n\nSome timings:\n\nUsing a simple block of if's is twice as slow as the compiler generated\nswitch statement.   But using this tuned code is faster than the\ncompiler generated code, with a million loops on x86-64:\n\nWith \"http\": .10 vs .51 (first check)\nwith \"https\": .16 vs .51 (second check)\nwith \"foo\": .22 vs .31 (never found)\nwith \"mailto\": .12 vs .51  (last check) Reuse the same delegate for checking if the runtime is shutting down.\n\nInstead of creating a new delegate every time that WaitAny is invoked,\nreuse the same delegate.   We also keep a permanent reference to prevent\nthis delegate being collected.\n\nThsi should fix 592981 Revert Make the thread-id field be of the proper size on 64 bit machines.\n\nThis error was found by Gonzalo when he was looking at another problem\nwhen thread IDs overflowed ints.\n\nCurrently we use gpointers in the io-layer for the threadid, but we were\nonly exposing the value as an int32.   The good news is that the code is\nnot really used right now, but could cause problems in the future as we\nextend Process. Do not install sample header, add to EXTRA_DIST [Embedded] Add new fallback API to allow hooking up to the P/Invoke lookup system\n\nThis patch allows a developer to register a fallback for P/Invoke when\nembedding Mono.   Typically this is done when you statically link all of your\nlibraries in some embedded systems and you need to dynamically resolve symbol\nnames.\n\nThere is a *sample* API included (but not compiled into Mono itself) called\nmono-embed.c that shows a layman use of the API.   A full implementation would\nmandate sorted tables, and would use a bsearch or a hashtable instead of having\nlinear searches. [Fix] Correct fix for the g_shell_parse_argv bug\n\nSimplifies the code a little bit by eliminating the in_quote variable,\nbut also fixes the rules to follow the requirements from the\n\"Shell Command Language\" specification on the Unix03 site:\n\nhttp://opengroup.org/onlinepubs/007908775/xcu/chap2.html#tag_001_002\n\nIn particular, the interpretation of the backslash inside double quotes\nis limited to a handful of characters.   Notice that this differs from\nthe glib implementation which is not correct either. Make this OSX specific instead Allow generated files here Check in these autogenerated files, since they keep breaking the concurrent make builds OSX, Win32: Implements support for DriveInfo\n\nThis implements support for DriveInfo for OSX and Windows.\n\nOn OSX we use statfs system call that provides the filesystem\ntype information that we need.   On Linux, we continue to fallback\nto mtab parsing Add OSX support to the io-layer: supports getting a list of mounted file systems, and OSX-specific file system types Add Environment.IsMacOS for handling OSX specific bits in corlib Fix build More NET_2_0 define removal Style changes as I edit this file Re-enable the Decimal(double) constructor that uses our direct transformation\nfrom a double into a decimal.\n\nThis is too good to be true.   The only change was to set the rounding bit in the\ncall to rescale the results.\n\nThis should fix bug #584736, and hopefully does not regress anythign else.   The\ndecimal test suite in corlib passes. [System.Json] Fix loader.\n\nThe current loader failed with some Json strings due to the implementation\nof the BufferedStreamReader.   Removed that implementation completely,\nand instead depend on the StreamReader to do the actual BOM detection.\n\nThis removes the JavaScriptObjectDeserializer.cs file Make print take an object Fix build [TerminfoDriver] be more tolerant to failures, and fallback gracefully, instead of aborting Do not throw exceptions, instead return a sensible value, fixes 656468 Bug fix, on EOF, return null from ReadLine Add default implementations to ReadLine() and ReadToEnd() to TextReader, fixes 655934 Avoid warnings, should fix OpenSUSE builds [594642] System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces fix for MacOS X Remove [670974] Use the underlying BaseStream to read bytes instead of trying to peek a character.\n\nPeeking a character as it turns out is a really bad idea as it involves the encoder\nto pull characters.   If the PeekChar happens to read a byte that is part of a\nUTF8 string that needs more characters to process we would end up with the reported\ncrash.\n\nAtsushi Enomoto tracked this down, and the fix is to use the binaryreader.BaseStream\nto directly call into ReadByte and Read without ever probing with PeekChar ().   It\nis not really possible to use BinaryReader.ReadByte since this one can throw on\nend-of-buffer conditions instead of returning -1 Do not build in parallel Add solution files Various updates Pass warnings Visual Studio build support: updated the scripts that generate csproj files.\n\nWith the new C# compiler, the build complexity is vastly reduced, the new setup\nis able to produce many of the csproj files.\n\nThe next step is to generate a couple of solutions:\n\n\t* BootstrapSolution: to build the basic assemblies used to\n\t  build the rest of Mono from a set of basic assemblies.\n\n\t  This should be run to prepare a tree.\n\n\t* 2.0 solution: builds the various 2.0 libraries and executables\n\n\t* 4.0 solution: builds the various 4.0 libraries and executables\n\nInstallation: where should the resulting assemblies go once they are built?\n\nWhere should the assemblies go after the build is complete?\n\nHow do we turn a build into an redistributable package? Update the csproj generator targets [fix] changing Form.Enabled sometimes can change the list of OpenForms, fixes 671098 [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 664695] Calling Dispose on ToolStrip emit events. Doesn't on .NET [bugfix: 665233] ToolStrip Menus Keeping Keyboard Capture after hovering over SubMenu Do not throw if we get a RunAndCollect Style Add new test Fix Enum.HasValue, previous version crashed with negative values Update docs Add prototype to .h file [csharp] Change the signature for print [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase\n\nAdd a better way of dealing with -e, without adding hacks to the core that wont work\nin the future [repl] Fix running specified scripts from command line, allow #! syntax, add print command\n\nWe were calling the Reset () method after we had initialized the driver\nwith the new command line arguments, clearing the list of files to execute\nbefore we executed them.\n\nAdded support for #! in the csharp repl, and added the print() command to\nthe InteractiveBase [repl] Add support for -e EXPRESSION to the csharp command Document csharp #! support [getline] Fix history search in the cmdline editor [Mono.CSharp] Fix bug where overwriting variables cleared the wrong value\n\nThis fixes #641910 [csharp] repl using statement fix + support for --fatal\n\nFixes #638585 which kept reporting the same error on the using statements over and over\nAdded support for the --fatal flag to the REPL Do not build the Socket passing on Mobile systems [sockets] Implement DuplicateAndClose and Socket (SocketInformation) constructor for in-process socket passing (AppDomains) [eglib] Another bug fix for g_shell_parse\n\nWe do not create a new string after a quotation, unless the next\ncharacter after a closing quote is a space.   This allows parsing\nthe string:\n\t\"foo\",\"bar\"\n\nAs:\n\tfoo,bar\n\nThis fixes #655896\n\n1# Explicit paths specified without -i nor -o; assuming --only paths... [eglib] Add more tests for the g_shell_parse [mscorlib/getfolderpath] Special-case MacOS X.\n\nThe following changes were done to specially support OSX:\n* MyMusic on OSX is ~/Music\n* MyPictures on OSX is ~/Pictures\n* Fonts on OSX is ~/Library/Fonts\n* Favorites on OSX is ~/Library/Favorites\n* ProgramFiles on OSX is /Applications\n* InternetCache on OSX is ~/Library/Caches\n\nThe documentation has been updated accordingly. [mscorlib] New Path.Combine methods are exposed internally on pre 4.0 profiles\n\nThis allows our mscorlib code to be cleaner [mscorlib/getfolderpath] Remove MonoTODO [GetFolderPath] Handful of .NET 4 changes\n\n* Actually use the SpecialFolderPathOptions where we need them\n  -> Create is acknowledged\n  -> DoNotVerify is ignored, as Mono historically did not throw an\n     exception on missing directories.\n* Rename InternalGetFolderPath to UnixGetFolderPath as this is what it is.\n* Fix existing references to the code\n* Fix indentation in routine that was never properly formatted (ReadXdgUserDir) [mscorlib] inside mscorlib Platform's value will be correct for OSX, but userland still gets Unix.\n\nThis change allows mscorlib to get the real PlatformID, to split code between\nOSX and general Unix.   We continue to expose the value 4 (Unix) to usercode\nas changing this might break user applications. [monodoc] Use points instead of relative-sizing, so that we render the same on web browsers and on WebKit Revert accidental patch [monodoc] Update the stylesheets to use Jonathan Pobst's UI design.\n\nThis is a temporary measure, as we only use 1/10th of Jonathan's\nicons and style, but will do while we get Kipunji deployed.\n\nThe major benefit is that the native Linux and MacOS Monodoc\nclients when using Gecko or WebKit can render something that is not\nhideous. [monodoc] Header no longer needed, we now keep it on the top [monodoc] Fix the root display once and for all: web does not do editing Update README Update instructions Undo adding of README2 test file [winforms] undo accidental removal of a line [winforms] revert patch, it regresses the test suite: https://github.com/mono/mono/commit/8334fe3a56c978ffe7f8cb199536f9b3234afdbe Update COPYING file with MS-PL and Apache2 texts Add README2 [winforms] Pass 4 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 3 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms [winforms] Pass 2 of removing NET_2_0 from winforms Pass 1 of removing NET_2_0 from winforms [winforms] Style, braces [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] Use conditional attributes, not ifdefs to insert conditional code [winforms] style, and NET_2_0 dropped [winforms] Prepare for Gnome 3, by not depending on libgnomeui Update docs Add part3 of the Google GCI 2010 contributions Documentation for Mono.Cairo contributed by knairda from Google GCI 2010 Awesome doc contributions from Adrian Kummerlaender Awesome doc contributions from Adrian Kummerlaender Remove experimental from the name Remove mentions of Logging and Heap Shot profilers from man page Expose some of our internals to the Mono.Winforms assembly Fix broken patch Allow this file to expose its types as public if needed Document server option to --debugger-agent Retval is not a reserved keyword, fixes 643345 Fix EqualityComparer for strings.\n\nIt turns out that Strings need to explicitly use a version that does\nimplement EqualityComparer<string> since string is an IEquatable.\n\nDo this, and to avoid the reflection mess, cast to object, then cast\nto the real type Optimize EqualityComparer for strings\n\nThis shortcut prevents the reflection system to kick into action\nfor compiler generated string switch statements. Improve the Uri parsing speed\n\nThis affects MonoTouch startup as our dictionaries are a little bit\nslow to be created now that we use Dictionary<> hashes for switch\nstatements.\n\nSome timings:\n\nUsing a simple block of if's is twice as slow as the compiler generated\nswitch statement.   But using this tuned code is faster than the\ncompiler generated code, with a million loops on x86-64:\n\nWith \"http\": .10 vs .51 (first check)\nwith \"https\": .16 vs .51 (second check)\nwith \"foo\": .22 vs .31 (never found)\nwith \"mailto\": .12 vs .51  (last check) Reuse the same delegate for checking if the runtime is shutting down.\n\nInstead of creating a new delegate every time that WaitAny is invoked,\nreuse the same delegate.   We also keep a permanent reference to prevent\nthis delegate being collected.\n\nThsi should fix 592981 Revert Make the thread-id field be of the proper size on 64 bit machines.\n\nThis error was found by Gonzalo when he was looking at another problem\nwhen thread IDs overflowed ints.\n\nCurrently we use gpointers in the io-layer for the threadid, but we were\nonly exposing the value as an int32.   The good news is that the code is\nnot really used right now, but could cause problems in the future as we\nextend Process. Do not install sample header, add to EXTRA_DIST [Embedded] Add new fallback API to allow hooking up to the P/Invoke lookup system\n\nThis patch allows a developer to register a fallback for P/Invoke when\nembedding Mono.   Typically this is done when you statically link all of your\nlibraries in some embedded systems and you need to dynamically resolve symbol\nnames.\n\nThere is a *sample* API included (but not compiled into Mono itself) called\nmono-embed.c that shows a layman use of the API.   A full implementation would\nmandate sorted tables, and would use a bsearch or a hashtable instead of having\nlinear searches. [Fix] Correct fix for the g_shell_parse_argv bug\n\nSimplifies the code a little bit by eliminating the in_quote variable,\nbut also fixes the rules to follow the requirements from the\n\"Shell Command Language\" specification on the Unix03 site:\n\nhttp://opengroup.org/onlinepubs/007908775/xcu/chap2.html#tag_001_002\n\nIn particular, the interpretation of the backslash inside double quotes\nis limited to a handful of characters.   Notice that this differs from\nthe glib implementation which is not correct either. [Fix] Allow escape characters inside quoted text, and do not let nested quote reset the quoting state\n\nThis should fix #637680 Add profile docs ",
      "nbWordsMessagePerCommit": "14.2"
    },
    "stats": {
      "C#": {
        "language": "C#",
        "nbCommit": 4886,
        "nbWordsMessage": 69862,
        "nbWordsMessagePerCommit": "14.3"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      },
      "C": {
        "language": "C",
        "nbCommit": 1,
        "nbWordsMessage": 5,
        "nbWordsMessagePerCommit": "5.0"
      },
      "F#": {
        "language": "F#",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      }
    }
  },
  "edri": {
    "user": "edri",
    "statsGlobal": {
      "nbCommits": 957,
      "nbWordsMessage": 5103,
      "messages": "Initial commit Correct a bug. Update home page. Merge branch 'master' of https://github.com/beedle-/AdventureTrip Update presentation. Add the presentation. Update documentations. Merge branch 'master' of https://github.com/beedle-/AdventureTrip Update documentation. Resolve bugs and write documentation. Add icons in trips list. Merge branch 'master' of https://github.com/beedle-/AdventureTrip Resolve bugs. Manage admins rights. Correct a participants bug. Migration. Merge branch 'master' of https://github.com/beedle-/AdventureTrip Add transport compatibility in the 'Show' page. Costs management is now fully implemented. Add costs calculation when adding/editing a trip. Participants' management is now more user-friendly. Update 'show' page's GUI. Update 'show' page's GUI. Users can now only see public trips or trips to which they belong. Resolve a bug occuring when no users or stops were selected when creating/editing a trip. Resolved a bug, which occured with looped routes. Editing a trip is now successfully working with routes and users. The stop management is now successfully working when creating a new trip and when accessing the update page. Merge branch 'master' of https://github.com/beedle-/AdventureTrip Minor modifications on the DB and update the add/edit trip pages. Add tabs system on trip's edition. Add map features. Add gitignore. Update GUI. Update home page and layout. Update home page. Update home page's GUI. Add home scrolling and update title. Update home page. Update \"transports\" field in \"transports\" table. Minor updates. Add trip management. Add .gitignore Add a default database config's model. Update README. Ignore database config file. Update Updated.java Create a conflict. Minor updates and LaTeX report Minor updates. Minor updates. Minor updates. Minor updates. Correction of bugs and modification of the documentation. Correction of bugs. Implementation of the files' importation. Implementation of the file's importation process. Implementation of the file's importation process. Implementation of the files' importation (not finished yet). Writing of the documentation and correction of minor bugs. Implementation of the static mode and generation of the backup files for the streaming's results. Cleaning of the project. Reading and validation of user's parameters in the static mode and retrieval of static Tweets. Reading and validation of the user's inputs for the static mode. Reading and validation of the user's inputs for the static mode. Implementation of the streamings' charts and handling of exceptions. Implementation of the streamings' graphs. Resolution of bugs and improvement of the GUI. Display of streaming information (number of received Tweets, speed, etc.). Selection of countries on the map with the drop-down menu, immplementation of two streaming processes at the same time, and filtering of Tweets by language. Reading and validation of user's inputs for the streaming process and grouping of Tweets on the map. Merge branch 'master' of https://github.com/edri/GeoTwit Implementation of the streaming process in GeoTwit with web sockets and writing of the related documentation. Update README.md Modification of the documentation. Update README.md Update README.md Update README.md Update README.md Integration of maps' drawing functionnalities and modification of the documentation. Modification of the documentation and addition of unique IDs in cache objects. Implementation of sessions in GeoTwit and protection of pages (the user must be authenticated). Add the second half's GANTT planning and a temporary document containing content for the final report. Merge branch 'master' of https://github.com/edri/GeoTwit Correct typos. Update README.md Update README.md Finalize documentation and generate PDFs files. Update documentation. Update documentation. Add Euro2016's analysis in the documentation and finish it. Merge branch 'master' of https://github.com/edri/GeoTwit Update documentation. Update README.md Merge branch 'master' of https://github.com/edri/GeoTwit Update documentation. Update README.md Update README.md Update README.md Update README.md Update documentation. Add the english specifications. Translation of the analysis part of the documentation and writing of the progress report's structure. Development of the search-page's basic GUI. Update index page, add Twitter4J library to the project and implement the Twitter's connection. Update documentation Update home page. Update documentation. Update mockup, create the application's basics and update documentation. Translate logbook. Translate logbook. Translate logbook Translate logbook Update new test-app's text. Remove an useless picture. Update mockups and documentation, and add a new test-application, which allows the user to draw polygons around countries when he double-clicks on them. Update mockup and update doc's analysis part. Add GUI mockup and update test-apps' rendering. Merge branch 'master' of https://github.com/edri/GeoTwit Correct some minor bugs and update leafletAndTwitter applications. Update README.md Add two new test-applications, which allows a JavaScript client to receive Tweets from a Java server and display them on a map + Update doc. Update Leaflet application and documentation, and add data in the Twitter4J test-app. Add Leaflet tests and documentation. Merge branch 'master' of https://github.com/edri/GeoTwit Update Twitter4J test-application and update documentation. Update README.md Add a test-application and documentation about the Twitter4J library used with the Twitter's Streaming API. Update planning. Update analysis. Update analysis. Update analysis. Update documentation. Add Twitter API's analysis and project's hours + update planning and specifications. Update planning. Create repository and add planning and specifications' first documentation. Merge branch 'master' of https://github.com/edri/GENial Musique facultative. Merge branch 'master' of https://github.com/edri/GENial Score du Slurpeur. Merge branch 'master' of https://github.com/edri/GENial Fermeture du Slurpeur. Mise à jour du client. Merge branch 'master' of https://github.com/edri/GENial Test. Ajout des musiques. Merge branch 'master' of https://github.com/edri/GENial Mise à jour des mini-jeux. Merge branch 'master' of https://github.com/edri/GENial Mise à jour des mini-jeux. Intégration du mini-jeu Slurpeur au client. Màj de la présentation et intégration du mini-jeu Slurpeur au client. Ajout de la présentation et mise à jour de la documentation. Mise à jour de la documentation. Merge branch 'master' of https://github.com/edri/GENial Mise à jour de la documentation. Modification des mini-jeux. Merge branch 'master' of https://github.com/edri/GENial Modification des mini-jeux. Merge branch 'master' of https://github.com/edri/GENial Ajout du mini-jeu Challenger. Résolution de conflits. Lancement des mini-jeux. Merge branch 'master' of https://github.com/edri/GENial Merge branch 'master' of https://github.com/edri/GENial Ajout du mini-jeu LetterHero. Ajout du mini-jeu LetterHero. Mise à jour de LetterHero. Mise à jour de LetterHero. Modification de la musique. Ajout de bruitages au mini-jeu LetterHero. Déplacement de la position d'une image dans le mini-jeu LeterHero. Mise à jour du mini-jeu LetterHero. Finalisation du mini-jeu LetterHero. Finalisation du mini-jeu LetterHero. Mise à jour du mini-jeu LetterHero. Mise à jour de la documentation. Merge branch 'master' of https://github.com/edri/GENial Ajout du mini-jeu LetterHero. Rename WINNER.java to Winner.java Rename START.java to Start.java Rename ROLL.java to Roll.java Rename REGISTER.java to Register.java Rename REFUSE.java to Refuse.java Rename REFRESH.java to Refresh.java Rename QUIT.java to Quit.java Rename MVT.java to Mvt.java Rename JOIN.java to Join.java Rename DISCONNECT.java to Disconnect.java Rename DICE.java to Dice.java Rename CREATE.java to Create.java Rename BEGIN.java to Begin.java Rename AUTH.java to Auth.java Rename ACCEPT.java to Accept.java Update README.md Update README.md Update README.md FInished app. Init project. First commit. Rename a file. Update presentation. Update presentation. Update presentation. Update final presentation. Update final presentation. Add final presentation. Update doc + resolve a bug. Update doc. Update documentation. Merge branch 'master' of https://github.com/edri/EasyGoing Update documentation. Update doc. Update doc. Update documentation and tutorial. Update documentation. Update minor mail rendering. Update minor mail rendering. Finalize documentation and update some renderings. Merge branch 'master' of https://github.com/edri/EasyGoing Update documentation. Update reports. Resolve bugs. Resolve an email bug. Minimize background image's size so there is no ugly loading. Update home page's title. Send emails when user have been added/removed in a project. Update registration page and send email when user changed his account. Update registration page and send email when user changed his account. Rendering. Rendering. Rendering. Update events servers address and send new mails. Correct tutorial text. Resolve a specialization's bug and put some dynamic paths. Merge branch 'master' of https://github.com/edri/EasyGoing Resolve a specialization's bug and put some dynamic paths. Update SQL script. Rendering tutorial. Rendering subtasks. Rendering subtasks. Rendering project's page. Refactoring edit account page. Rendering. Merge branch 'master' of https://github.com/edri/EasyGoing Add png images and correct too-long title and description's bugs. Help page's rendering. Resolve conflicts. Update pages rendering + Resolve e-mail sending bug (not tested yet). Finished home page. Finished home page. Finished home page. Resolve a login bug. Update home page's rendering. Update home page's rendering. Merge branch 'master' of https://github.com/edri/EasyGoing Add blue-eyes Raphaël. Resolve an issue when the server's PHP version is < 5.5. Add Karim's documentation. Resolve 'TODO' parts. Resolve 'TODO' parts. Merge branch 'master' of https://github.com/edri/EasyGoing Update documentation. Merge branch 'master' of https://github.com/edri/EasyGoing Add management documentation. Update documentation. Update documentation. Update about page. Update about page. Update about page. Update about page. Update about page. Update about page. Merge branch 'master' of https://github.com/edri/EasyGoing Securing the events servers so unauthorized users cannot access a project or task. Resolve a bug. Merge branch 'master' of https://github.com/edri/EasyGoing Task's movign event is now a HTTP request instead of a websocket for security issues + update doc. Task's movign event is now a HTTP request instead of a websocket for security issues + update doc. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Correct PHP errors. Merge branch 'master' of https://github.com/edri/EasyGoing Add mandatory fields. Merge branch 'master' of https://github.com/edri/EasyGoing Put datepicker in right place. Rendering. Add my doc. Merge branch 'master' of https://github.com/edri/EasyGoing Fix a PHP error. Merge branch 'master' of https://github.com/edri/EasyGoing Add some perfectionist details. Merge branch 'master' of https://github.com/edri/EasyGoing Add some perfectionist details. Merge branch 'master' of https://github.com/edri/EasyGoing Vertical alignement of dashboard's elements. Solve conflicts. Update README.md Update README.md Update README.md Update README.md Add participations data in stats page. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Add poll's stats page (not finished yet). Update README.md Fix a signin bug. Fix signup bug. Sign in form is now sending and receiving auth sockets. Sign in form is now sending and receiving auth sockets. Update signin socket reception. Sign In form is working. Sign Up in progression. Corrects @BinaryBrain's 'Sign In' and 'Sign Up' lapse. Add socket test class. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Add old Angular2 version in package.json to avoid a dependency issue. Corrects @BinaryBrain's bad Linux distro bugs. Add currently working section Add routing on 'Create a poll' button. Update views. Update views. Add Angular2 motivations 7 Add Angular2 motivations Add Angular2 motivations Add Angular2 motivations Update a mistake. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Resolves @BinaryBrain's lies. Resolve the Sacha's lies. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Correct mispelling. Show polls in pollsList view. Add PollsList view (not finished yet). Add PollsList view (not finished yet). Update documentation and add the Action view. Update Sign Up view. Update Sign Up view. Update Sign Up view. Correct a bug and update the documentation. Add the Sign Up view and update the documentation. Add the Sign Up view and update the documentation. Add the Sign Up view and update the documentation. Restructuring some files. Update README.md. Adding the sign in page ; still no link with the database. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Add the 'signin' component. Add 'create/access a poll' views. Change action page's layout. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Adding the select/create polls action page. Création de la page de sélection d'action. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Add evaluation and update readme. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Update REST API tests. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Create some REST API tests. Ajout de données de test ; fonctionnel. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Correction d'un bug. Le scénario de test n'est pas encore fonctionnel. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Ajout d'un scénario de test avec l'api-copilot. Merge branch 'master' of https://github.com/edri/Teaching-HEIGVD-TWEB-2015-Project Màj de la page d'accueil. Ajout des stats. Update GUI. Home and Policy pages are now compatible with smartphones ; Swiper page is not finished yet. Merge branch 'master' of https://github.com/edri/Swipe.Me Update CSS. Update documentation's pictures. Add tutorial + Resolve minor bugs + CSS. Change \"setTimeout\" function to Angular's \"timeout\" one + Correct minor note's bugs. The dislike logo is now empty by default. Last push request failed. I got an unexpected error in the last commit so I'm commiting again to be sure... Website's design is now fully responsive and Smartphone's navigation is \"acceptable\". Add \"Install & Run\" chapter. Swiper page's design is now fully responsive. Update responsive design (not finished yet). Resolve a concurrent issue. Update Less. Add Less. Merge branch 'master' of https://github.com/edri/Swipe.Me Add some responsive design (not finished yet) and correct minor bugs. Update README.md Update README.md Minor documentation's updates Resolve a small bug. Merge branch 'master' of https://github.com/edri/Swipe.Me An information message is now displaying when there is no more picture to show. Update README.md Add project's context. Merge branch 'master' of https://git.heroku.com/swipe-me Add PROD variables. Add some responsive design. Resolve some bugs on Chrome. Merge branch 'master' of https://git.heroku.com/swipe-me Add PROD variables. Correct documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update documentation. Update font-family. Update font-family. Update font-family + correct spelling mistakes + CSS. Disconnect user when the session expired. CSS The picture's note is now enlarging when the user moves the cursor over it + Pictures now have a link. Refactoring. Users can now dislike pictures. Merge branch 'master' of https://git.heroku.com/swipe-me Add PROD variables. Users can now like pictures. Merge branch 'master' of https://git.heroku.com/swipe-me Add PROD variables. Resolve bugs. Merge branch 'master' of https://git.heroku.com/swipe-me Add PROD variables. Refactoring + 3 images are now got from Instagram. Change PROD variables. It is now possible to get hashtag's stat and first picture when the user entered ONE hashtag. Change PROD variables. It is now possible to make a hashtag request to the Instagram API, but still need an authorization to properly work. Change PROD variables. Implement login and logout with session. Add bower and postinstall script directives. Add bower and postinstall script directives. Update CSS. Add policy page. Create the application's first design and init git repository. Màj de la présentation. Màj de la présentation. Màj de la présentation. Màj de la présentation. Mise à jour de la présentation. Modification de la présentation. Ajout de la présentation finale. Ajout de la présentation finale. Mise à jour du readme.txt Mise à jour du readme.txt Ajout des exécutables. caca Ajout des derniers exécutables. Ajout d'une icône. Ajout des exécutables. Ajout des exécutables. Ajout des exécutables. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction d'un bug. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout des icônes + màj de la doc. Ajout des fichiers dans le rendu final. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout de commentaires. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout de commentaires. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout de commentaires. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction d'un bug d'édition de salle. Correction de bugs. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction de bugs. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction du bug d'édition. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Modifications mineures. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout de la planification réelle. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Ajout du journal de bord. Mise à jour de la documentation sur le module Chat. Mise à jour de la documentation sur le module Chat. Mise à jour de la documentation sur le module Chat. Correction de détails. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Activation/Désactivation de la vue Chat lorsque l'utilisateur accède au module Room. Le nom d'utilisateur ne doit pas déjà exister à l'inscription. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Gestion de la connexion avec le serveur perdue. Correction d'un bug de suppression de salle. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Suppression de la requête lorsque l'admin ajoute l'utilisateur depuis l'édition. Gestion de la connexion au serveur. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Gestion de la connexion au serveur. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Mise à jour de la documentation. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Gestion des erreurs de connexion. Ajout de documentation. Création de la fenêtre d'à-propos. Mise à jour de la vue d'inscription. Mise à jour de la vue d'inscription. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Mise à jour de la vue de connexion. Rafraîchissement de la salle dans la vue Chat, lorsqu'elle est éditée. Rafraîchissement de la salle dans la vue Chat, lorsqu'elle est éditée. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction de bugs + màj des messages édités dans le model (pas encore implémenté côté vue). Merge branch 'master' of https://github.com/edri/ProjetChat2015 Gestion des notifications/demandes d'adhésion ; un bug fait planter le programme lorsqu'une demande est acceptée. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction de bugs et refraîchissement dynamique de la fenêtre de gestion de demandes d'adhésion. Correction d'une erreur de compilation sur Windows. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Mise à jour de la vue de demandes d'adhésions. Résolution de conflits. Affichage de la fenêtre de notifications. Ouverture de la fenêtre d'adhésion. Correction de conflits. Correction de bugs dans le module Chat. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction de bugs. Résolution d'un conflit. Tout à fait. Résolution d'un bug. (Dé)Chiffrement des messages + récupération des clés des salles privées (Dé)Chiffrement des messages + récupération des clés des salles privées Ajout du module Cryptor au projet. Ajout du module Cryptor au projet. Merge branch 'master' of https://github.com/edri/ProjetChat2015 Correction de bugs mineurs. Structuration. Structuration. Structuration. Structuration. Structuration. Structuration. Ajout du lab01. Finalisation de l'implémentation des sockets. Ajout des librairies. Ajout de packages. Création du projet. Add presentation. gMerge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Add presentation. Update README.md Update README.md Update README.md Update README.md Update Phase 3.md Update README.md Update README.md Update README.md Update README.md Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Update README.md Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Add doc images. Update README.md Update README.md Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Add documentation's images. Update README.md Update README.md Check file's extensions. Add min/max event's properties values. Delete badge's logo when the action is canceled. Rule's logo uploading is successfully working. Resolve minor bugs. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Adapt demo to the recent changes. Update README.md Rule's edition and removal are working. Resolve a bug happening on Chromium. Add 'pseudo-dynamic' rest api server's address. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Rule adding is working and rule editing is in progress. Resolve some rendering bugs. Rules adding is working ; still need to upload logos. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Update rules adding action. Add Spongebob animations... Add Spongebob animations... Update demo. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Add rules managment page (not finished yet). Add rules page. Update README.md Add explosion animation. Add a level-up animation. Resolve bugs. Résolution d'un bug. Màj de la procédure de déploiement de la démo. Màj de la procédure de déploiement de la démo. Finalisation de la démo. Changement du comportement du chargement des événements. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Gestion du leaderboard et de l'affichage des niveaux. Quelques clous ont été retirés lors du commit précédant, faisant ainsi s'écrouler la charpente de notre site. Rajout de ceux-ci. Quelques clous ont été retirés lors du commit précédant, faisant ainsi s'écrouler la charpente de notre site. Rajout de ceux-ci. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Quelques clous ont été retirés lors du commit précédant, faisant ainsi s'écrouler la charpente de notre site. Rajout de ceux-ci. Gestion des événements. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Récupération des badges et des règles. Update REST.md Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Chargement des données de l'utilisateur sélectionné. Ajout de dépendances Bower. Récupération des utilisateurs depuis Gary. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Màj du rendu de la démo. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Finalisation de la démo. Restructuration du design de la démo. Création de la page de démo (données statiques pour le moment). Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Création de la page de démo (données statiques pour le moment). Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Ajout de la démo Angular. Page d'accueil. Page d'accueil. Finalisation de la page d'accueil. Fusion des pages d'ajout/édition d'app + correction de bugs. Fusion des pages d'ajout/édition d'app + correction de bugs. Fusion des deux headers. Fusion des deux headers. Fusion des deux headers. Les boutons de navigations sont désormais bien sélectionnés selon la page dans laquelle on se situe 👍 Réalisation d'une requête AJAX depuis appslist pour pouvoir éditer dynamiquement le status d'une applivation. Réalisation d'une requête AJAX depuis appslist pour pouvoir éditer dynamiquement le status d'une applivation. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Réalisation d'une requête AJAX depuis appslist pour pouvoir éditer dynamiquement le status d'une applivation. Ajout de commentaires. Ajout de commentaires. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Ajout de commentaires. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Ajout de commentaires. Modification du design. Réalisation du système de pagination des applications. Réalisation du système de pagination des applications. Add presentation. Merge branch 'master' of https://github.com/joke1196/jobs Users can now add jobs. The job application is now working. I also moved the default images' upload folder. Change URL's content when performing Ajax requests. Merge branch 'master' of https://github.com/joke1196/jobs Update the add and details pages' header so he acts like a form. Add a picture. Update details page. Update details page. Merge branch 'master' of https://github.com/joke1196/jobs Implemented hover events on jobs. Add links on the jobs. Add a date-picker. Merge branch 'master' of https://github.com/joke1196/jobs Resolution of bugs in the home page and improvement of the GUI. Home page is now doing research with Ajax. Update and finalize the documentation. Update and finalize the documentation. Merge branch 'master' of https://github.com/joke1196/jobs Add documentation. Boom, whole new sexy project! <3 Remove all files in order to recreate a new proper one. Update database script. Resolve a conflict. Update GUI. Add jobs displaying and add animations on the home page. Resolve conflicts. Update jobs searching. Merge branch 'master' of https://github.com/joke1196/jobs Update home page. Merge branch 'master' of https://github.com/joke1196/jobs Create homepage and add front-end features (less, bootstrap, ...). Add routes. Creation of the project. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Réalisation du système de pagination des applications. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Page des utilisateurs d'une application. Ajout d'IDs. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Logout. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Mise en commun du login et du reste. Mise en commun du login et du reste. Mise en commun du login et du reste. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Modifications mineures. Ajout et édition d'applications. Résolution d'un conflit. Implémentation de l'ajout d'applications. Mise à jour du design. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Modification de design de l'application. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Edition de la page appslist. Edition de la page registration. Edition de la page registration. Changement de la page login. Finalisation des vues en rapport avec la partie de gestion des applications. Ajout d'un constructeur vide dans App. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Mises à jour selon les modifications de Benoist. Ajout des statuts sur les applications. Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project Finalisation de la page 'Your apps' Finalisation de la page 'Your apps' Merge branch 'master' of https://github.com/jurporan/Teaching-HEIGVD-AMT-2015-Project AppsManager en cours de développement. Page appslist, qui ne fonctionne pas. Bonjour. Création du projet. Add Bootstrap-Switch and js.cookie librairies. Update task creation's event and show member's specializations on dashboard. Add 'assign task' event. Create 'unassigned task' event. There is now an event when a manager kicked a member out of a project and the concerned member is redirected. Add rights and specializations in events, update SQL script and show manager in green in the dashboard. Refactoring + Layout. Add tooltips on specializations fields. Merge branch 'master' of https://github.com/edri/EasyGoing When an user creates a project, he can add his own specializations. Add new icons + CSS. Merge branch 'master' of https://github.com/edri/EasyGoing A task's edition is not written if nothing changed. Merge branch 'master' of https://github.com/edri/EasyGoing Dynamic event when an user edited a project. Add an event when a project is edited and update layout's header. Merge branch 'master' of https://github.com/edri/EasyGoing Refactoring. Merge branch 'master' of https://github.com/edri/EasyGoing Only project's admins can edit it. Update default project's icon. Merge branch 'master' of https://github.com/edri/EasyGoing You can now edit a project. Up new user's picture's size. Project's edition + Add new icons + Up saved project's logo size. Merge branch 'master' of https://github.com/edri/EasyGoing Resolve a tuto bug. Still some conflicts... Add cookie field. Merge branch 'master' of https://github.com/edri/EasyGoing Resolve an ultimate data conflits. Resolve a conflict. Resolve a conflict. Add a wonderful success message when an user successfully registered. Merge branch 'master' of https://github.com/edri/EasyGoing Refactoring. Merge branch 'master' of https://github.com/edri/EasyGoing Simulate a scroll on the main content when the cursor is out of it. Merge branch 'master' of https://github.com/edri/EasyGoing Update layout design: footer is fixed and header is dynamically hidden when scrolling. Update layout design: footer is fixed and header is dynamically hidden when scrolling. Fix news feed's rendering issue. Merge branch 'master' of https://github.com/edri/EasyGoing Fix a bug in the event's details panel. Update event's rendering. Merge branch 'master' of https://github.com/edri/EasyGoing Update event's details rendering. Add the tutorial information in the session + update CSS. Merge branch 'master' of https://github.com/edri/EasyGoing Refactoring. Merge branch 'master' of https://github.com/edri/EasyGoing Update event's details CSS. Add the possibility to have event's details. Add the possibility to have event's details. Add a details field in the events table. Add help page. Resolve a conflict. Merge branch 'master' of https://github.com/edri/EasyGoing Add a 'SYSTEM' user, which is used when automatic task's events (like edition) are posted. Update registration and project's adding pages. Update registration and project's adding pages. Update registration and project's adding pages. Update registration and project's adding pages. Resolve unresolved conflicts, which made the application crash. Automatically update task's data in task page when it has been edited. Redirect all user that are in a task page when this task has been deleted. Merge branch 'master' of https://github.com/edri/EasyGoing Redirect all user that are in a task page when this task has been deleted. Events refactoring. Add username in dashboard and update default user's picture. Add an event when an user deleted a task. Merge branch 'master' of https://github.com/edri/EasyGoing Implement task's news feed (available in task's details page). Make the news feed more attractive <3 Make the news feed more attractive <3 Update task details page's news feed + Refactoring. Update task details page's news feed + Refactoring. Merge branch 'master' of https://github.com/edri/EasyGoing Update task rendering and SQL script to view the task-event writter. Resolve a conflict. Refactoring. Update README.md Implement a new way to manage events (it is now possible to have events related to tasks - still not implemented in the front-end part). Redirect user if he try to edit/access an non-existent task. Update task details page and add new events' icons. Merge branch 'master' of https://github.com/edri/EasyGoing Add a new field in the eventTypes table. Refactoring. Merge branch 'master' of https://github.com/edri/EasyGoing Refactoring. Update README.md Update README.md Add a task's details page and refactor some code. Dynamic refresh of the project's dashboard when an event is received. Rename HTTP and websocket servers' folder. Ignore node libraries. Add HTTP requests in PHP so new events (e.g. task creation) are added dynamically in the historical pane. Remove an useless folder. When an user moves a task, it is dynamically added into the historic + Add some test data in the SQL script. Add some events. Resolve a bug with websockets. Add some events in the application and update database test values. Update CSS. Update CSS. Update CSS. Resolve some conflicts. Load project's events and change some CSS. Merge branch 'master' of https://github.com/edri/EasyGoing Add events images and update database script. Update default data. Merge branch 'master' of https://github.com/edri/EasyGoing Change CSS and use session variables in projects controller. Resolve conflicts and put some dynamic project's IDs. Change socket's server implementation: from PHP server to Node.js server. Websockets are properly working. Update WayToGo. Merge branch 'master' of https://github.com/edri/EasyGoing Update WayToGo. Update socket factory. Init websockets. Init websockets. Init websockets. Init websockets. Merge branch 'master' of https://github.com/edri/EasyGoing Add websocket test class. Merge branch 'master' of https://github.com/edri/EasyGoing Add websocket test class. Add websocket test class. Merge branch 'master' of https://github.com/edri/EasyGoing Add websocket test class. Update composer files and add React library. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout de la table d'historique. Ajout de la table d'historique. Ajout de la table d'historique. Merge branch 'master' of https://github.com/edri/EasyGoing Màj du JDB. Merge branch 'master' of https://github.com/edri/EasyGoing Chargement Ajax des détails d'un projet. Merge branch 'master' of https://github.com/edri/EasyGoing Màj du script de DB. Màj du JDB + Création de projets + Recherche de projets. Màj du JDB + Création de projets + Recherche de projets. Merge branch 'master' of https://github.com/edri/EasyGoing Màj de la présentation intermédiaire + Ajout de la classe Utilities. Ajout de l'utilisation des session + légères corrections. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout de l'utilisation des session + légères corrections. Résolution d'un conflit. Résolution de conflits. Merge branch 'master' of https://github.com/edri/EasyGoing Màj de la présentation. Résolution de conflits. Résolution de conflits. Résolution de conflits. Màj de la présentation. Modification du titre. Modification du titre. Modification du titre. Merge branch 'master' of https://github.com/edri/EasyGoing Renforcement des charpentes + Présentation intermédiaire. Delete thibaud.gif Merge branch 'master' of https://github.com/edri/EasyGoing Renforcement des charpentes + Présentation intermédiaire. Modification de l'image par défaut des projets. Màj du JDB et de la planif' réelle. Résolution d'un conflit. Légères modifications de l'interface. Merge branch 'master' of https://github.com/edri/EasyGoing Pose de bois dans les charpentes du site. Correction d'un bug. Correction d'un bug. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout de projets. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout de projets. Ajout de projets. Merge branch 'master' of https://github.com/edri/EasyGoing Mise à jour de la page qui liste les projets. Création de la page de sélection de projet + Animations. Création de la page de sélection de projet + Animations. Création de la page de sélection de projet + Animations. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout du contrôleur Projects. Ajout du contrôleur Projects + Màj du journal de bord. Ajout du contrôleur Projects. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout du contrôleur Projects. Merge branch 'master' of https://github.com/edri/EasyGoing Création du contrôleur About + Création du modèle Project. Merge branch 'master' of https://github.com/edri/EasyGoing Modification de la doc sur les modèles. Merge branch 'master' of https://github.com/edri/EasyGoing Modification de la doc sur les modèles. Ajout d'une implémentation avec la DB (fonctionnel). Ajout d'une implémentation avec la DB (fonctionnel). Ajout d'une implémentation avec la DB (fonctionnel). Merge branch 'master' of https://github.com/edri/EasyGoing Ajout d'une implémentation avec la DB (encore non-fonctionnel). Doc communication avec la DB. Màj du journal de bord. Module User par défaut. Merge branch 'master' of https://github.com/edri/EasyGoing Ajout du contrôleur User comme contrôleur par défaut. Màj de la maquette. Layout. Merge branch 'master' of https://github.com/edri/EasyGoing Module utilisateur. Modification du script de la DB. Réalisation d'un layout de base. Merge branch 'master' of https://github.com/edri/EasyGoing Réalisation d'un layout de base. Réalisation du schéma UML. Réalisation du schéma UML. Màj de la doc. Restructuration du projet. Restructuration du projet. Màj des fichiers README. Màj du JDB et ajout de la planification réelle. Ajout de commentaires et de la rubrique 'helps'. Ajout du projet vide. Restructuration du projet. Restructuration du projet. Merge branch 'master' of https://github.com/edri/PDG2015 Mise à jour du cahier des charges. Ajout de la première ébauche du cahier des charges. Merge branch 'master' of https://github.com/edri/PDG2015 Suppression de fichiers temporaires. Mise à jour du JDB. Mise à jour de la planification. Merge branch 'master' of https://github.com/edri/PDG2015 Mise à jour de la planification. Màj de la planification. Ajout du journal de bord et de la fiche de projet. Réalisation d'une ébauche de la planification. Rélisation d'une ébauche de la planification. Création du repo. Initial commit ",
      "nbWordsMessagePerCommit": "5.3"
    },
    "stats": {
      "HTML": {
        "language": "HTML",
        "nbCommit": 8,
        "nbWordsMessage": 11,
        "nbWordsMessagePerCommit": "1.4"
      },
      "Ruby": {
        "language": "Ruby",
        "nbCommit": 45,
        "nbWordsMessage": 229,
        "nbWordsMessagePerCommit": "5.1"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 197,
        "nbWordsMessage": 1005,
        "nbWordsMessagePerCommit": "5.1"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 163,
        "nbWordsMessage": 928,
        "nbWordsMessagePerCommit": "5.7"
      },
      "C": {
        "language": "C",
        "nbCommit": 6,
        "nbWordsMessage": 12,
        "nbWordsMessagePerCommit": "2.0"
      },
      "PHP": {
        "language": "PHP",
        "nbCommit": 338,
        "nbWordsMessage": 1827,
        "nbWordsMessagePerCommit": "5.4"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 72,
        "nbWordsMessage": 375,
        "nbWordsMessagePerCommit": "5.2"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 93,
        "nbWordsMessage": 528,
        "nbWordsMessagePerCommit": "5.7"
      },
      "Scala": {
        "language": "Scala",
        "nbCommit": 35,
        "nbWordsMessage": 188,
        "nbWordsMessagePerCommit": "5.4"
      }
    }
  },
  "the-glu": {
    "user": "the-glu",
    "statsGlobal": {
      "nbCommits": 63,
      "nbWordsMessage": 254,
      "messages": "Fix doc Dont request policies when the token dosent have access to them Code import There is no SanitizedTextField in forms ^^ Missing import Remove debugging print Merge pull request #4 from llann/master\n\nAdd badges Pip fixes Merge branch 'master' of github.com:the-glu/django-tequilla Version 2. Rewriten with requests, setup.py, general cleaning, user updating Fix multiples names Merge pull request #1 from llann/name_correction\n\nName correction to => Tequila Fixes Fix doc Improve doc Import form old version Lastest version Update dotfiles Add cpp<->hpp Better cursor Add true color by default Added quick-scope Add ctrlp and vim-devicons Neovim alias Wrong file for some options Correct ditry function ZSH Config Completions fixes Error with HTML files Vim files Added conkyrc_fixe Conky Symlink scripts Remove dot Added .screenrc Initial commit Update CMakeLists.txt Update Dockerfile Install correct debian package Missing npm install Missing restart for real-time service Update Dockerfile Update Dockerfile Update Dockerfile Use -e :D Fix useless warning in addTextureMesh\n\nIf only one texture is used, display a warning about the GPU allowing only one texture is useless :) Allow to increase the number of dialogs to backup Ugly hack to increase download timeout to fix #3 Fix #4 (Missing yaml dep) Fix #5 (Missing `by_ids` folder) Fix #2 Dont crash if no printname Update README More robustness Make script more robust and add warning Messages with no date are not a reason to stop First version Initial commit Fix typo in error for extrinsic parameters Allow to search users Typo in dockerio doc (#34244) Improve documentation and fix whitelines Automatic groups/teams ",
      "nbWordsMessagePerCommit": "4.0"
    },
    "stats": {
      "Python": {
        "language": "Python",
        "nbCommit": 33,
        "nbWordsMessage": 147,
        "nbWordsMessagePerCommit": "4.5"
      },
      "Arduino": {
        "language": "Arduino",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      },
      "Shell": {
        "language": "Shell",
        "nbCommit": 22,
        "nbWordsMessage": 54,
        "nbWordsMessagePerCommit": "2.5"
      },
      "C": {
        "language": "C",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 1,
        "nbWordsMessage": 5,
        "nbWordsMessagePerCommit": "5.0"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 2,
        "nbWordsMessage": 30,
        "nbWordsMessagePerCommit": "15.0"
      },
      "Ruby": {
        "language": "Ruby",
        "nbCommit": 1,
        "nbWordsMessage": 9,
        "nbWordsMessagePerCommit": "9.0"
      }
    }
  },
  "BinaryBrain": {
    "user": "BinaryBrain",
    "statsGlobal": {
      "nbCommits": 1584,
      "nbWordsMessage": 5367,
      "messages": "Add main file Initial commit Moar data CSV to UTF-8 Add script to put opendata Merge pull request #1 from Flagoul/master\n\nFixing a bug when 0 batonnets Update README.md Fix FF issue Fix FF issue Add Lora font Add demo link Improve demo Fix typo Add CSS lib Add interactive button to the demo Add safety if called multiple times Update readme Move demo in a dedicated folder Add min version init Initial commit Add comments Fix typo Fix typo and add graph section Reduce background size Update README.md Update README.md Update README.md Add error message when you do not have any fans... (I am sorry) Add style and font Fix bad CSS Add links style Add graph using random colors Add style Add background Add error handler and remove the user from fans list Fix typo Fix comment in JSON Add content in README.md Simple working site ES6 is not that well supported :( Merge branch 'gh-pages' of github.com:BinaryBrain/BestFan into gh-pages Add user to URL Update README.md Change data display List and count users that stars your repos Initial commit no more smiley Freeroom!! make me a sandwich Replacing Claris by Cleverbot and vice and versa Handling HTML entities removing html stop spamming cleverbot Cleverbot hear everything console logger calling a method is better than show its code Adding prices on PF ça va Salut: caps the 1st letter disable scripts Correction du Jeu Jeu Remove Lost because she loops I lost the game Salut Claris! whoami We all love XKCD Better Doc Polyfood is awesome get ratio Setting ratio command ratio: 0.3 Claris answer with a 10% ratio removing Pugs Adding Cleverbot. Removing ship it .gitignore Skype4Py Better script run script Adding Hubot Initial commit README is md 1.0 version init Add install instructions Add packed extension init Initial commit Add button style Display labs data on click Add Point Fix style Add geolocated points Add Location buttons and divs Date default value Add Dates Add Geoloc package Update collections, add Opinions Locations Data collection meteor init Initial commit Better logs Fix loop Fix #1 and add date Fix login part Update README Add gitignore Add simple README Init Full report link typo² typo :smile: Update README.md gname => name Style fix click row bug Fix buttons Fix Insertion and Deletion glitch on server fix clicable rows fix buttons Insertion and Deletion Insert data appears correctly technical infos Client side UI Doc. Server side. Insert form Fix fullscreen tabs Fullscreen mode Delete works Update README.md Update README.md Update README.md Update Screenshot in README.md Update README.md Changing titles fix search bug Update README.md screenshots Removing ID_ columns in output typo escaping Oracle chars Fix button output display sanitize SQL in JS SQL requets on buttons Add all requests Case insensitive search clic by row on data Fix concurrency issues liek a boss Fullscreen mode Ajax loader and Tabs typo Add JSON Response Search by table typo Client-side DB Structure LIKE and UTF-8 support sending JSON Handling DB connection errors sending a basic search request to the server Custom search instead of Custom SQL Request Client handle correct json response. Database <-> Java connection JSON response test Fix SQL types create queries file Using GET. Working web server. Comments Handeling index.html Handleing 404 It works sending source code getting filename from URL Worker is responding Printing server port Basic Java HTTP Server Fix debug console Debug console Create buttons. Style. Init client view and libs User-friendly folder Ignore data folder Instructions Initial commit Port from my WinJS app Initial commit Removing zeros (it was aweful) Using sin instead of Math.sin splitting into many files. Trying to make it work everywhere. Better Readme Releasing my work: \"Fly. You're free now.\" Initial commit Update README.md Checksum comments comments useless TODO removed File not found Clean Date and linux-like-permission less debug prints File size new permissions Set attr getting full long name chunks Check flags typo long file names NO_FILEname debugging attempt to read dir fat_boot in vfat_info isFAT32 Add counter to pie chart legend Add type pie chart Start graph to zero Fix timezone bug Add legends Add website to readme Add Lausanne GPS coord in api instructions Add API Instructions Basic API Chart, change collection schema, style, stuff Add style, bugfix Bugfix Add login and all types of FF Add DB, basic form and home page Add useful packages Init meteor app Initial commit Update README.md TAB duplicate things No more TODO removing useless methods (just calling super) Fixing wrong order comment at end of line Tabs => Spaces Comments and order Replacing TABS with SPACES. (Dumbest thing I ever heard) Duplicate strings Cheater! Checkstly Update timeSpentHW5.txt\n\nYou were close ;) Removing old files treating and returning SQLite questions Trees everywhere Tree of question IDs instead of QuizQuestions Structure of the Tree :evergreen_tree: and TagStorage :file_folder: Time spent :clock3: Search Question: query() next and from Adding query() and on(..) to the SearchQuery class. Refactoring a name Sorry for the remaining syserr Using AuditErrors and fixing @Elieva's code Adding auditErrors for EditQuestionActivity @philemonf CHECKSTYLE PLZ Fixing #3 (QuizzQuestion audit), please test your code @philemonf Removing and correcting some old TODO and FIXME Typo. Shame on you, Andy!! auditSubmitButton Repairing Philemonf errors. removing audit calls Audit Button autitButton method (not implemented) Readability Checkstyle checkstyle removing unused EventScheduler Checkstyle, guys... Checkstyle Update timeSpentHW3.txt Moar tests Refactoring SharedPref to store User Session EditQuestion has a sessionID in header Auth is terminated and workin Clearing fields, writing error Correction Auth and handling some (every?) errors Progress Dialog while login Preventing people from spamming the login button Authentication work but doesn't handle errors Typo in a URL Auth still not working but almost. Double Android Manifest is weird Auth doesn't handle errors Removing old boolean. Handle JérémyBreakEvents Exceptions. Events. Events everywhere. Event example is not a test. Modern Event System Base for Tequila Sacha's time Sacha's one Adding managers in the README Create README.md Dance Level finished 2-1 Poro's Rush New Backlayer Update level2.txt Wallpaper Overworld Level 2-3 tiles finished. Can be improved. Level 2-3 not finished new overworld Rocket! :rocket: Rocket Hitbox and R on lvl2 Rocket Asset Rocket Base and Metal Tile impl CRAAAAAAAAAAAW CRAAAAAAAAAAAAAW Tiles and Overworld tiles Tuto fixed The Birds Working version Raven Crash Work and working modern level Modern stuff raven's collision Raven modern assets Include string coding conventions fix level3 ignoring obj folder Moar joke in README Update README.md Update README.md Update README.md Update README.md Update README.md woosh fix bad const name wooshes new Bonus Colors title img sorry guys PORO *O* bonus FPS drops lower Fullscreen const Death Music for Dead people death music comming from a low quality speaker renaming castle main tile Fix a music glitch and move DLL remuting Fix footsteps Fix Mapper.js Animations are correct bugfi sounds and refactor Behehehehe Footsteps are back SPIIIIIKES remove mapper info Make Spikes more visible Muting sounds and mute by default check if a point is outside of a view Press 'M' to mute names and consts Centering camera at the begining of a level Updating CBP. Bad guys @Gerardufoin Cause the music makes me feel alright! Ignoring saves Correcting rapidJSON Moving .exe to the main folder and .dll to libs folder. Multiple screenshots with F12 Fixing Mapper destroying unused sounds Fixing encoding Closing streams. Multiple entities walking in the grass make some noise little rework on elodie.png Correcting Elodie Sprite Position New clothes Zoom issue Setting gameView in constructors of displayable moar const Adding warning when tile not found Immersion bar value in const.h Sorry for the Fullscreen Boundaries are almost working. Sound manager handleing random sounds Add a `= 0` for @Flagoul Press A to play a sound, SoundManager working. Zoom level = 2 Mazda - Zoom Zoom Sky class Texture Manager working deleting TitleMenu SEGFAULT adding Texture Manager to the project Reorganizing sprites, Texture Optimization Texture Environement Beginning of LevelEnv and gravity scaling Tweets are laggy on iOS, so I let text tweets on mobile. Fixing tweets width on mobile Adding link to the project. Little fix. Pop Over works on every type of screen. Correcting broken code Cleaning, refractoring, preparing. Centering tweets. Adding code for graph in the folder but it only work on IE (ActiveX). Aweful redirection to avoid deadlinks. Tweets are always beautiful, now. Animations are disable on mobile. Sexyzing Pop-up. resizing pop-ups, adding Tweets Trying to load tweets Logo... at least... pop-OVER. Images Pop-ups are working so great. Styling the popover What a nice frontend. Pop-ups are missing, but they are coming. Correcting Frederic's messy code. (noob) Adding files for the popup. Adding a basic Map by Google. Basic frontend in Bootstrap Music merge was dead music Bigger Skybox crash conditions faster missile Moar ignores captures Stylish missile is no more physical. formating again Folamour is flying missile Sky!!! beautiful conflict resolved missile cameras DO work Oculus recalibration typo Update README.md bridge little modif bridge Wall1 Base Model todo move forward Fix Oculus better oculus loading Oculus Working terrain0 js basic terrain Oculus Support cube model Correct indent less cubes... include Oculus Effect terrain Do a barrel roll! Oculus Three Effect decrease mouse speed Oculus Status Oculus Handler! Add Oculus Bridge Add three.js init client Oculus Bridge Initial commit change default port dynamic behaviour and arguments renaming files Initial commit Fix stuff but not all Fix orders Add Journal Output Fix deliver Add Journal load Add ids Change item representation Fix stuff Add giveOrder Add dist and travel to Drone Fix and test Journal Finish Journal Object Finish Warehouse class Init Warehouse Finish Drone class Add Drone Create README.md Dummy game list ignoring those damn Thumbs.db Draft: iframe communication stahp spamming the console ping Refactoring, EventDispatcher, Actors renaming login by email, login-success returns person Better Auth, removed me on server, cannot chat with yourself Refactoring Client Timezone should work better, now. Chats are working again. Revert \"unify login\"\n\nThis reverts commit c8353939f3957184888dc4751a569734b2e02744. unify login dummy login comm Sessions, Better Users Chat fully linked to the DB. Messages are store in the DB Moar Relations More Models Lot of stuff, lot of hacks. Comm, DB, Slick, chat, etc. Update README fix websocket data recieved websocket problem with multiple requests People are loaded with websockets still working on WebSockets Sending a dummy people list Working WebSockets Play serves the client move client view drafts doc Angular dummy chat Play Server AngularJS and basis of a chat Update README.md Create README.md output in file refactoring reading files word by word regroup stuff Separating hypotheses Unsorted set for CloseWords CloseWords typo in gitignore typo in gitignore mv old stuff init labo 5 old stuff Questions 1, 2, 3, 4 finies Answers 1 and 2. Clear shortestPath Dijsktra works from any sources RoadDiGraphWrapper.h 1st compiling version :) work in progress... Find Cycle Woops add consts in SymbolGraph GraphUsingAdjacencyLists from Labo 2 Util from Labo 2 unzip Labo3 initial commit gitignore Optimizing ex3 ex 3 - final ex2 almost working Moar ignores (bin, obj, C::B) thanks zip for creating useless folders unzip no more accent init Labo2 init Initial commit remove MacOS shit JUnit Labo01 done Gen Labo 01 - beggining Initial commit Update README.md Update README.md Create README.md final Splitting into multiple files. Formatting Normalize ouputs work from Simon init 05 15 MD 1st final version merging fail merging files rename bis rename Update README.md Labo 4 init Final tables table test Moar Markdown! typo result of 16 corrections markdown Markdown init requet and question 25 done 23 done request 22 done request 21 request 18 done clean up requets 14-17 requests 10-13 Lab 02 - files SQL create PDF final Corrections 6 should be finished imporving 6 imporving 6 Begining of 6 Exercice 5 Modification 3 UML 3 Render 7.3 kind of done (matrix is 2x2) 7.1 done Create dataset Ignore pyc Add list all file change path Add python files Add sound files Initial commit Create README.md progress bar works Initial commit extract zips init labo2 Code Labo1 Initial commit Needed files for generated Rmd. Update New environement. Rmd is powerful. Exercice 2 in progress Merge branch 'master' of github.com:BinaryBrain/R Data :floppy_disk: Create README.md initial commit :octocat: new PDF Update rapport.md Update rapport.md init labo 08 Rapport PDF final Corrections Schéma et Rapport Old stuff new Lecon constructor, static horaire Lecon constructor formatting split classes into files TODOs skeleton of Groupe.java and Lecon.java Consigne rapport and Formating Update rapport.md Headers Update rapport.md Create rapport.md Welcome to the matrix packaging v1.0 typo Operations (Or, And, Xor) init operations Lab 05 PDF Final Int created. Ex 2 done. init Lab 04 Initial commit Labo 02 done Add Labo02 Lab01 Initial commit transparent png printing stack trace EER-Diagram correct encoding Js comments style JS votes Votes polish admin Scala comments move api ref Typo update ref Charts! And menus API fix remove null value in admin Polishing Style Better nutriments display Nutriments working, Admin Working, Everything's good sql refactoring Basic admin view and routes Nutriments, Types order, day shift fix, style, refactoring Nutriments API safe menus download Correct foreign keys updating database Better look on Android Cleanup remove heading, open automatically today's menu Accordion Correct dynamic MIME type Cascade everywhere Add menus only once Nutriments Table, refactor DB, Improved Client, Downloading and Inserting Menus Menu case Calling MenuDownloader Ajaxing the menus Get menus by range Basic menu view Play responds PhoneGap pages Display menus by date ignore Thubms.db Android init and Angular remove println working menus API (/api/menus) API Reference Slick DB Init Index, Add deps, init DB Cahier des charges -> README Cahier des charges -> README typo init play Menus Initial commit More presets init better paths Note and Boldness typo Readme: context of the project Volume works only on mac typo changing an image reducing an img size readme update images Readme cleaning final Working version Finished on iPad remove sox for OSX sending HTTP requests Working UI refactoring Initial commit Remove file removal Add manifest name in AssetGroup Allow to change the bitrate lower the bitrate Update libs fix axis Faces are now display correctly! Up is now up. Supporting more files variations Pushing the old work Initial commit better scores Merge pull request #1 from Protectator/master\n\nUpdating score calculation Update README.md Update README.md first version Initial commit Try again? Game is harder jquery is local. Game Over is cute Plateforms are working Clean Game Over many things Adding helper Adding Lauretta sprite Game over function Score Solving a bug with controller, adding M for muting, adding music Intergrating images, adding Camera little mistake Correcting loading Adding folders and music Adding a Camera following Lauretta. initial commit Initial commit White Balance Bind Buttons Fix red/green pins Add control with pi-blaster Add communication between client and server Add ColorPicker ignore node packages Fix JSON API Change API again Improve README style api Initial commit Initial commit Initial commit Removing a dev tile Update README.md Update README.md Removing old stuff Adding progress indicator. Minor change. Adding Flight mode on the Readme README corrections README corrections Adding the flight mode, README improvement. Adding a sleep to prevent Google's anti-spam messages. Modifing README New README Adding montage command for the final image The script can download tiles. initial commit New design for the fnu Fight Style Better Dialog Dialog methods (taken from deprecated Console) Facebook on Firefox! Better doc Facebook.getNamesFromID() is working with arrays Arrows New Style Facebook getNameFromID Remove doublon removing an old console.log Team is now dynamic New and better initialization. Cleaning console.log FB Not a friend handling removing that so slow fade Teams demo Must use callbacks Adding team and history files Adding indexedFriends EnemyChoice is now dynamic Adding a welcome message Facebook.js inits and works Facebook and Dialog better CSS class fix adding a class to views Adding views install-server script Changing port to avoid collision Readme stuff Initial commit fix folder exists bug init Delete rts_express_live.pdf Delete remarques.md Update README.md Rename rapport.md to README.md Add Xcode bugfix Add Manuel, metadata file specs Cahier des charges Add perfs pics Corrections, validations, etc. Add a word lol Add specs Add date and ref Relecture Typo Style, Screenshots, UML, etc. Add Fonctionnement and Améliorations Fix spelling and add app Add Video Intro Conclusion, Problèmes, ... much work Fix filename Add TODOs, improve intro, remove cahier des charges rapport intermédiaire Add référence more text init omg kgsh sdfjn2 trainers fuck corr lol saf moar clear console.log sdélkfm attack buttons adding a drawAttackDialog(a1, a2, a3, a4, cb) oupa anti-plantage border on the canvas sdkjghb type things and stufs Unbinding buttons new buttons Get Friends from FB dat fkin typo dat fb iz workin dat fb 4 dat fb 3 dat fb 2 dat fb Testing a JS FB Auth Menu mistake Hiding Console Handling New Fight fu Synchro Typo Init is now in Controller debuging Dat alert oops Draw Dialog and Draw Button userid Woops Bettr functions Moar functions deleting facebook useless test adding facebook test page HERE IS DA FILE Adding the socket.io lib network.js improved Improving Com Basic client com Adding some more com events Adding some specs for the com between the server and the client. Creating the network file Adding the website link New name Initial commit Update README.md Create README.md concurrency test assignment 1 init Handle relation in XML Fix building glitch Add computing percentage Handle relations, every buildings, and much more! README: OSM JSON format raw OSM XML data Use official OSM API Fix buildings Update README.md Fix buildings height Buildings! Stick worlds to the floor Update README.md Ignore bin and obj Fix interpolation. Cervin is working! ignore bin and obj remove old generated maps Max: 256 Yargs! all elevation is a key again Manhattan, guys small modifications building nodes using new OSM json elevation.json Bilinear Interpolation creative mode map Update README.md elevation removed. Update README.md\n\nelevation-flat Without BOM Flat elevation map Elevation maps Final elevation json without interpolation Meters from [0,0] to [1000,1000] Normalized maps clear map Get key elevations fix osm-data strings get elevation tests minecraft flat map ignore node modules Initial commit report Final Version Persistance Add Data Handling. Working Version. Working Layers and Windows. Menu code Dual screen, highlighting Init Initial commit Fix #7 Fix a typo in the example code Program 2 running! Mutex protection. Lower Speed. Program 1 works. kinda working Map and Troncons init and first thread Update CDN and jQuery fix freeroom error no more facebook button testing for strange data update from FTP Every 15min Correcting Flagoul URL Correcting tooltip position Adding Flagoul as dev Correction des prix étudiants Adding info messages Adding Google Analytics Dat line... adding a clearing system Forgetting a line Correcting info and info:hover Adding highlighting Modals everywhere Handling Hour Facebook integration completed. adding .php for sec reason. Beginning of a Facebook integration Hide 'menu du soir' Just cleaning folders. The file is already in /js init first commit Add simple README Show username instead of email Fix spinner Prod mode Update UML Add spinner when downloading songs Change Favorite to be like others Download songs only once Using username Add view to list user playlists Add clarity on friends Adding friends is now possible. Add link to origin url in playlist Discover is better UPDATE SCHEMA, Add friend model and controller, Add friends show view Dammit Firefox... Fix the fix Fix strange bug in Chrome where the audio is still playable without the tag. Add play/pause with spacebar Fix style again Fix style Player design Remove useless stuff Add favorite system Put title in the layout Replace My Playlists to Playlists index, style Replace My Playlists to Playlists index, style Add player Add song is working Merge Add Song and New Song views Fix song download My playlists shows only yours Remove user_id field in new Playlist Fix name conflict Fix models Add auth system Add auth gems Add discover as root Add style and view init Rails server Replace README by report Fix git merge bug Add UML to report Add UML Add features and improve iterations Add Description and iteration draft Init report.md initial commit Allow offline mode and fix timestamp Handle Shooting fail error Timelapse interface, bug fixes Add timelapse feature Add picture link typo Add README Add Movie mode, automatic shoot mode detection and toogle Broadcast liveview, fix 0 client liveview crash, disable/enable buttons Add liveview Take picture and focus features Create LICENSE Update README.md Update README.md Better page creation and destruction. better tagging final sounds Musics PNG and fade button color adding folders Scrollbars and pause sounds audio delete old divs History and scrollbar first working version init Initial commit update cv Add photos hide cursor Add Gallery close button and navigation. It works! init gallery Fix URL on home page Improve home link Change slightly terrain x position Add refresh and home links Fix promise file Add promise lib for IE users and fix typo ES6 => ES5 ES6 => ES5 Add viewport remove span text Moar style Add gradient on nav New Background style Fix camera pos Remove camera traveling typo Fix webGL not rendering Sacha Bron disapear Make camera rotate instead of terrain Fix typo Add Kudelski Experience Fix terrain and stop rotation fix menu Change loading order Add router Add photo and more style Add animation on page load New font and glitch Bugfix Add Programs and Web pages New font with all glyphs cv update Add cv Fix Title style Add Brownie and clean-up a bit Awesome background (Yes, I love Flume) More style Animate terrain on page loaded Add program example and block style exception Move files, Add github-readme, Add script handling in main.js Remove span on whitespace texts Add black backgrounds on text. With a tricky functions that adds spans for it. Add whoami content Add Contact page, socicon, style and more glitches Add glitches, menu style and dummy pages Clean up Add nav links listeners Add terrain file Refactor: Add Terrain class Add change height animation Hills and name Move from handlebars to Vue.js init Update README.md Adding 'punch-' before every variables to adoid collision. little change Error in the Readme Resizing the readme image. Little fail. typo Adding a screenshot to the Readme. typo Adding \"Example\" section to the Readme Simplifing the call. Using mixin to style a punch. Using mixin to style a punch. Updating README Updating README Updating README Pushing my work. Initial commit LAST Choke-o-lat commenting in progress. GUI improvements we can disable 3D. Oublié de commit avant de changer d'ordi... GUI is drawing planes Events in the GUI. GUI is totally correct, now. Adding routing stuff Plane excessive speed corrected. 8765 The GUI change with your resolution. (limit: 1500, 950). Adapting 2-3 things in 3D-view. Planes should be correctly rooted now. They can go straight/circle/land/destruct (not NONE). Cleaning asset. Adding Routing algo. Adding the Gripen, adding routes file and route parser. GUI should be OK, now. reforgering GUI removing useless stuff GUI Panels are working. RÉPONDS QUAND JE T'APPELLE. Tweets are totally working. Twitter Class is deprecated. Using TweetSender with Twitter4J now. 3D GUI is now in a JFrame. Gui Aircraft's trace is working. Aircrafts have a path, and are automaticly oriented. Improve GUI 3D: The cam rotate at the first person point of view now. small modifs 3D: Separating control manager from the Radar View. Adding 3D View, Aircrafts, World, Cam, etc. Trying to add an OpenGL View File Transfert almost complete (hash algo is missing). Merge branch 'master' of github.com:EvoDev/SAT Creating a Twitter implementation. Ajout de \"toString\" I'm a teapot Les Messages ont une méthode toString() Merge branch 'master' of github.com:FredericJacobs/SAT\n\nConflicts:\n\tsrc/sat/radio/message/MessageFile.java Refonte des SegmentableFiles Avancée sur DataFile Merge branch 'master' of github.com:FredericJacobs/SAT Refonte de Radio\nPlus d'enum sur les messages Merge branch 'master' of github.com:FredericJacobs/SAT\n\nConflicts:\n\tsrc/sat/radio/Radio.java modifs mineures Création de la structure pour les Messages. Merge branch 'master' of github.com:FredericJacobs/SAT Création des Classes Message, Radio et Encoder. Creation des classes pour le RSA.\nDébut d'implémentation. README more clear Add js readme Clean js and scope it Unzipping folders Lab done Adding an 'Ajax loader wheel' on teams little improvements Adding images for dev purpose Adding a login screen Adding a cancel button on the Team frame. Adding a Notification system. Totally working ;) Dynimism Adding a Team Making Frame. improving main view New design, new ideas, new cleaning, new refactoring. Disabling invite button on client-side Groups are updated on client-side too. Groups are working perfectly. We just need to handle disconnection, and it's done. Interface don't show yourself. Server-side invites should work fu Using Rooms for Groups. Better Test Interface Better MD Better MD Player list auto-refreshing Interface shows a list of players when connected. cleaning the kitchen Show alert to the client when errors happend. Big work with Socket.io. Nicknames are now checked. Modification des Specs et du readme. Ajout d'une favicon et de petites modifications. Ajout d'un fichier de test de socket. Avancée avec Socket.io Ajout d'un fichier de spec du protocol de communication serveur-client Node server basic working setup. Preparing for the node server Adding verbose. Little improvements. Adding the main structure and a lot of useful functions. Creating engine . Adding maps demo for Flagoul initial commit Initial commit Every tests are OK Utils works File Numbering Filter Works UpperCaseWriter works DFS works Author's email ignoring more files (Idea, tmp, Java) Apache conf is no longer updated everytime Heartbeats update the Apache conf bugfix Heartbeat Handler Hearbeat script for backend Update README.md Create README.md little corrections fix triple Adding correct triple Let's drink Merge branch 'master' of larasrv05.epfl.ch:cc2013-group05 little improvement on Primes removing old Primes.tool Merge branch 'master' of larasrv05.epfl.ch:cc2013-group05 Correcting last commit showing primes Primes.tool Fixed and Moved Merge branch 'master' of larasrv05.epfl.ch:cc2013-group05 Primes.tool init Initial commit Send error as Json, fix style Update dependencies Create README.md twetter-getter keep running on error Tweet-Getter can now be installed globally Rename tweet-getter app Doc and stuff Delete test.js Change filter behavior to AND from OR. Twitter options geoloc is working properly First prototype of the getter: tweets from Lausanne Twitter lib added docs done wake queue Barber omg it works work in progress pulling test Merge branch 'fb-lab02-tests' fix tests V1 tests and V2 init fix url Remove useless buggy footer Add answers with much Angular2 professionalism Fix all\nBASE_URL Add redirection Add more working stuff Add controler to participate Add Participate Interface. No controller behind it. Fix lame TS errors Fix polllists buttons Fix poll creation Add createPoll socketio handler on the server Fix indent refresh page like a goret on login/logout Logout button works Redirect after Signup Fix Jade Warning Delete old router Add Angular2 router.Change Angular2 template location so Express can compile Jade and send it to Angular2. Fix default gulp Add Gulp and gulpfile for Typescript compilation Add Angular2 API is done. API Doc is done. APIDoc pretty much done more apidoc GET Poll doc PUT is working Add GET, POST, DELETE polls and participants Create and update polls Get all polls Move models to models folder, Create API route Re-add api specs Update api.md Add HTTP status for GET Polls Add GET Polls Add POST, PUT, DELETE for Questions in the API Add Status Fix typo Add GET Questions API Init API.md Add container-fluid Update README.md fix colors again Fix color cycle fix color shift in legends Cycle through colors Optimize fonts more predefined colors Remove dummy dataset Add simple basic spinner when loading data. Could be improved. Adding stuff to dataset Charts handle every colors Change moods colors Add more colors Add dummy legends Remove topic and fix form size Improve form style Add tabs for forms Fix design and add ribbon Fix less callback with a hack Change Paragraph Font Add Modality Fix case Change palette, add Number of word per sentence Update README.md Update README.md Update README.md Improve Style and Add App Name Add lengends on the triangle Add function to add a pin Add info box on hovering pins Add Triangle and Pins in pure CSS3 Create View and Index Make badges bigger Move name in img title Add reactivity for a better demo Add another level for a better demo It works Add god level Fix level bar Add next level management Fix reputation for real, now. Fix get reputations remove useless todo Create a new AMT endUser Change minor style Add Dashboard Add Sign In Style SignIn with GitHub is working Fix typo Fix button Basic GitHub auth to get a token Add iron router and http Update README.md Update report.md Add conclusion Add Demo description Update README.md Update README.md Update README.md Add home-fail screenshot file Add demo screenshot files Add Screenshot files Add UML to report Add UML Add Location on Levels in API doc Add POST example in API doc Add event API doc Add reputation API doc Update Badges and Levels API Doc Init gamification app Add level deletion Add Basic Event interface Fix null values Add level deletion Add Badge deletion Add definition and placeholder for ApiKey input Add level manager Add ability to change api key Add possibility to add badges from the demo Refresh Badges is Working! Fix names fix a bug when trying to get an app by its ApiKey Create README.md Fix errors in a drastic way. Sorry. api-key is now apiKey Add constructors in BadgeDTO. Change to ApiKey from String Remove default headers Add Levels Add Menu Demo Work in progress Add Test Badges Add Meteor Methods to call the API Fix errors Add GET badges request from the meteor server Fix API Add Home, Add New badge feature Add Basic Admin Mockup Init demo meteor app :rocket: Clean API-doc Add API doc for Badges Remove useless default headers Fix lookup bug on Linux. Avoid using java:global Add link highlighting Activate Enable Button Scripts Enable button is dynamic Remove Mock DB Add Apps Manager and Data Store Update .gitignore Revert \"Revert \"bla\"\"\n\nThis reverts commit 6c8e868ccf7ea75fce12be93109c251b0f5b79dd. Revert \"bla\"\n\nThis reverts commit 42d5798c57a90ca22898992305b5471c1b68248d. Add Account Edition View Simplify data access on views Add Dummy values from the controller on Home Add List Users View Add App Details view Change Homepage Make Dashboard Menu an Include Add Static Register New App Add more link to the dashboard Complete static Dashboard Add dashboard menu Fix registration method Fix cancel button on registration Link to the registration page Complete Registration View Add Basic Servlets Add views Ingore Idea Files Fix markdown Update README.md, resolve #1 Update README.md Checksum comments comments useless TODO removed File not found Clean Date and linux-like-permission less debug prints File size new permissions Set attr getting full long name chunks Check flags typo long file names NO_FILEname debugging attempt to read dir fat_boot in vfat_info isFAT32 minor, stop printing the level Gravity :earth_africa: :rocket: :moon: another test level 3 hours later, exactly the same result. Camera is following Elodie with some nice boundaries haaaaaaaaaaaands changing camera center in levels EntitieVector is now EntityMap :dancer: Patching a memory leak :non-potable_water: Correcting the doc :pencil: Correcting the doc :pencil: Map's margins are no longer required. :triangular_ruler: Optimizing Mapper.js :fast_forward: Removing useless cond in TileSet :space_invader: Correcting a sprite and finishing allsprite.txt Mapper.js updated Tiles. It works. :tractor: Mapper.js :hatched_chick: Mapper.js :hatching_chick: Little improvement on Elodie Improving readability Commenting Entities->Entity and showing Elo in Levels Top-left and top-right New tile format and test map. setSide improvement Beautifying Tiles and Printing the level move has nothing to do here adding env Printing levels, like a boss Emptying toDraw. Sorry for the lag ;) Adding GameView GameView has a Drawable vector to draw. Refactoring, GameView, Level Little stuff Adding dev texture to tiles Refactoring Turning Warnings into Errors. removing toCharArray MapParser is now known as Mapper. Implementing Game Removing ultra verbose Awesome Graphism and Overworld. deprecaded FIXME Modifing TileSprite Constructor Adding a namespace to TileType woops Little refactor of the printer Correcting Parser Adding MAP_NULL in the parser Changing the title name C++11 Flag Champagne!Map Parsing is working! Game, Map Parsing, Get String from files cbp. Again... Removing doc and Example of RapidJson Improving Map Parsing Correcting a warning And saving project... Map parser and printer, Entities, Level, etc. Sprite Classes, test level, Begining of Map Parser Game file Updating Title Ignoring .db linking Animated Sprites Libs *.a linking for Debug and Release in CBP ignoring CB Layout SFML, CBP, Windows stuff Update README.md Update README.md Initial commit ",
      "nbWordsMessagePerCommit": "3.4"
    },
    "stats": {
      "HTML": {
        "language": "HTML",
        "nbCommit": 4,
        "nbWordsMessage": 11,
        "nbWordsMessagePerCommit": "2.8"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 699,
        "nbWordsMessage": 2343,
        "nbWordsMessagePerCommit": "3.4"
      },
      "Python": {
        "language": "Python",
        "nbCommit": 71,
        "nbWordsMessage": 249,
        "nbWordsMessagePerCommit": "3.5"
      },
      "Arduino": {
        "language": "Arduino",
        "nbCommit": 4,
        "nbWordsMessage": 9,
        "nbWordsMessagePerCommit": "2.3"
      },
      "CartoCSS": {
        "language": "CartoCSS",
        "nbCommit": 14,
        "nbWordsMessage": 39,
        "nbWordsMessagePerCommit": "2.8"
      },
      "C": {
        "language": "C",
        "nbCommit": 62,
        "nbWordsMessage": 136,
        "nbWordsMessagePerCommit": "2.2"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 313,
        "nbWordsMessage": 1139,
        "nbWordsMessagePerCommit": "3.6"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 223,
        "nbWordsMessage": 749,
        "nbWordsMessagePerCommit": "3.4"
      },
      "Scala": {
        "language": "Scala",
        "nbCommit": 37,
        "nbWordsMessage": 138,
        "nbWordsMessagePerCommit": "3.7"
      },
      "Jupyter Notebook": {
        "language": "Jupyter Notebook",
        "nbCommit": 10,
        "nbWordsMessage": 28,
        "nbWordsMessagePerCommit": "2.8"
      },
      "R": {
        "language": "R",
        "nbCommit": 8,
        "nbWordsMessage": 27,
        "nbWordsMessagePerCommit": "3.4"
      },
      "Shell": {
        "language": "Shell",
        "nbCommit": 16,
        "nbWordsMessage": 58,
        "nbWordsMessagePerCommit": "3.6"
      },
      "Ruby": {
        "language": "Ruby",
        "nbCommit": 47,
        "nbWordsMessage": 196,
        "nbWordsMessagePerCommit": "4.2"
      },
      "XML": {
        "language": "XML",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      },
      "ApacheConf": {
        "language": "ApacheConf",
        "nbCommit": 5,
        "nbWordsMessage": 19,
        "nbWordsMessagePerCommit": "3.8"
      }
    }
  },
  "BasileChatillon": {
    "user": "BasileChatillon",
    "statsGlobal": {
      "nbCommits": 74,
      "nbWordsMessage": 575,
      "messages": "can now generate and the redirection is good Création des nouveaux servlets format and fix import all api functions working, need now to implement them in web le bouton delete fonctionne Merge des methode Rest en une methode DogRessource sur le /dog fix modification used to debug doc tentative de création de l'URI pour suppirmer non fontionel résolution de bug, test de html pour itérer sur des list de manière différente affichage avec les pages dans l'url fonctionne. création d'un nouveau dog via API et suppression d'un dog fontionne projet Create README.md Initial commit refonte de IInstrument de class en interface. Adaptation de Trumpet et Flute en conséquent Implementation of Application according to specification evreything is working fine cration of the diffrent files and folders, the instrument part is working with node, should be working with docker update gitignore add more comments, fix some indentations add my name in the authour, some doc for FileNumberingFilterWriter filter test working. implementation of the different transformer done. CompleteFileTransformer not working yet, because FileNumberingFilterWriter is not fully implemented yet test working for UpperCaseFilter, need to work on FileNumbering was already working, but i could not see it cause of the missing implementations of the other files fix the DFS so it finnaly works all utils test working Add the missing line in fetchAndStoreQuotes. Do not work, don't know why Fix the creation of the folder and the files in Application. not working don't know why suppose to fix the authorMail adresse. Not working, do not konw why Merge branch 'master' of https://github.com/BasileChatillon/Teaching-HEIGVD-RES-2017-Labo-02 add some docs fix merge error fix des quelques beugs Merge branch 'fb-lab02-v2-tests' into implv2 finalistaon, reste encore a voir quelques méthodes d'accès pour la cohérence des noms Implementation of v2 tests (#120)\n\n* creation of file RouletteV2BasileChatillonTest\r\n\r\n* add some new method to test the version, the port, the method listStudent and the method clearDataStore\r\n\r\n* Ajout du git de mon colègue pour les @TestAuthor. fix de la commande Bye, ajout de la réponse de la commande Load command bye and list should be ok change v1 --> v2 transfo de v1 --> v2. ajout des deux nouvelles commandes. copie du v1. --> à adapter en v2. Merge branch 'fb-lab02-v2-contrib' into implv2 Ajout du git de mon colègue pour les @TestAuthor. Merge remote-tracking branch 'remotes/upstream/fb-lab02-v2-tests' into fb-lab02-v2-contrib declaration add some new method to test the version, the port, the method listStudent and the method clearDataStore creation of file RouletteV2BasileChatillonTest fix Header close enough test application new working add some original spam messages Merge branch 'master' of github.com:Rhod3/Mail_Spammer add README.md, need to be completed code style Merge branch 'master' into pdg19_dictionary add the generated directory and files add the header in our file Merge branch 'master' into pdg19_dictionary alignment of the code spelling Translation of the documentation from French to English fix travis? fix blank Line, removed empty tests and changed sql settings Merge branch 'master' into pdg19_dictionary Merge branch 'master' into pdg19_dictionary Merge pull request #1 from Farenjihn/PDG-1\n\nPDG-1 fix indentation Merge branch 'pdg19_dictionary' of https://github.com/Farenjihn/pdg-heig into pdg19_dictionary Adding the utf-8 in the build, removing some unused import Implementing listStringNormalizer. Made Tests for listStringNormalizer, stringNormalizer, allArrangement. Need to test the perforamnce of TST and to fix test for filterRealWord cération de la structure de testes Merge branch 'pdg19_dictionary' of https://github.com/Farenjihn/pdg-heig into pdg19_dictionary ajout  des méthodes pour équilibrer les arbres. Création d'une fonction pour rechercher tous les mots à partir d'un set de lettres. test basic fait dans le main ",
      "nbWordsMessagePerCommit": "7.8"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 71,
        "nbWordsMessage": 550,
        "nbWordsMessagePerCommit": "7.7"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 3,
        "nbWordsMessage": 25,
        "nbWordsMessagePerCommit": "8.3"
      }
    }
  },
  "LuanaMartelli": {
    "user": "LuanaMartelli",
    "statsGlobal": {
      "nbCommits": 77,
      "nbWordsMessage": 368,
      "messages": "Added some nice stuff Added some nice stuff Added otter pics Added some extra desing Added some extra desing Added bootstrap for web app Added bootstrap for web app Fixed problem. Must see how to call async function outside files Added tests API Added tests API Update .gitignore Update .gitignore removed file Added some modificiation Initial commit Initial commit Merge branch 'smartcity' commit for master PDF : delete comment Merge remote-tracking branch 'origin/smartcity' into smartcity correction d'un warning + erreur typo correction typo dans pdf Petit bug corrigé v2 Petit bug corrigé Suppression de certains warining v2 Merge remote-tracking branch 'origin/smartcity' into smartcity Suppression de certains warining Ajout Javadoc partie PDF Added data to manifestation on the 2nd of May. Fixed PDF bug Good PDF for work on the 2nd of May PDF connected to graphic interface. Put some data in database Merge branch 'smartcity' of https://github.com/galahad1/projetHeig into smartcity Conflit with iml Add PDF stuff, access to dataBase, not connected to graphic interface Merge remote-tracking branch 'origin/smartcity' into smartcity Fixed issue : unproper graphic size Ajout répartition des heures Précisions pour la génération de PDF Modif' du README / cahier des charges, suite Modif' du README Test1 Commit labo 00 Labo 01\nFInal commit\nCleaned code Labo 01\nLittle changes in Application Labo 01\n3 files modified\nAll test are green\nComments FIsrt commit of Lab01\n6/8 files changed\n4 tests are failing beuh >________< Changed some files First push, added all files Add somes changes Add somes changes Still no comments Pass tests with maven 191 tests pass\nNo comments yet 191 tests pass\nNo comments yet Implementation of client part 2\nNot over, still working on Implementation of client part 2\nNot over, still working on Implementation of client part 2\nNot over, still working on Implementation of tests for Roulette v2 (#110)\n\n* Add tests for roulette v2\r\n\r\n* Add ignore on tests Merge branch 'master' into fb-lab02-implementation Add ignore on tests Add tests for roulette v2 Implementation of roulette V1 Add somes changes, sanity checks Implementation of V1Client\nAll tests passe\nAdd doc 1st implementation of V1\nPasses all tests Add readme Removed doc Add doc rapport Add main Add class StreamDecoratorController\n3/3 tests passes Modify README Changed how groups are made Add modif' Add modif' Add all files for lab smtp\nAdd README ",
      "nbWordsMessagePerCommit": "4.8"
    },
    "stats": {
      "CSS": {
        "language": "CSS",
        "nbCommit": 16,
        "nbWordsMessage": 59,
        "nbWordsMessagePerCommit": "3.7"
      },
      "SQLPL": {
        "language": "SQLPL",
        "nbCommit": 25,
        "nbWordsMessage": 138,
        "nbWordsMessagePerCommit": "5.5"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 29,
        "nbWordsMessage": 154,
        "nbWordsMessagePerCommit": "5.3"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 4,
        "nbWordsMessage": 10,
        "nbWordsMessagePerCommit": "2.5"
      }
    }
  },
  "Moufblu": {
    "user": "Moufblu",
    "statsGlobal": {
      "nbCommits": 3,
      "nbWordsMessage": 12,
      "messages": "demandes utilisateur\n\ndemandeSerie + demandeEpisode Initial commit Implementation of Application.java according to specifications ",
      "nbWordsMessagePerCommit": "4.0"
    },
    "stats": {
      "C++": {
        "language": "C++",
        "nbCommit": 1,
        "nbWordsMessage": 4,
        "nbWordsMessagePerCommit": "4.0"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 2,
        "nbWordsMessage": 8,
        "nbWordsMessagePerCommit": "4.0"
      }
    }
  },
  "gcmalloc": {
    "user": "gcmalloc",
    "statsGlobal": {
      "nbCommits": 626,
      "nbWordsMessage": 3288,
      "messages": "adding a readme for the stats cleanup adding sentence calculator Merge pull request #2 from AblionGE/stats\n\nStats count uniq ngram adding a get the top ngram script specify any ngram size histogram for a specified tuple Merge pull request #1 from AblionGE/n_gram\n\nN gram small typo adding configuration for the job Merge branch 'master' into n_gram set run.sh to be executable correction on the run script remove the classes after compilation and generation of the jar file support for ngram and some cleaning adding make and run script imlementation in python, very naive one adding Ngram mapper and reducer shorter wpa_supplicant corrected a few things I really don't like sudo at all update for the test, need to be root to run the scripts also patch the regex to be case insensitive correcting a strange catch using setuptool for the installation adding python3 compatibility removing unused import cleaner css removing the blue subtitle correcting dead link adding bootloader capabilities adding dependencies in the setup.py fixes on the exepect fixing ronmon fixing the regex for config mode removing debug log adding tests and fixes linked to an off by one error in the number of prompts update status after skipping the wizard add support for configuration wizard make ciscotator a real package adding serial support small correction for the receiving fonction handling the ssh channel a bit more abstraction fixing readme little readme initial commit fix an unicode issue when writing csv more python version more pedantic travis updating travis travis is good putting echo into a variable File path separator tend to change following the course of history, and the will of the user Extension separator can change too fixing some fix for fixing the test and the clean adding a cd variable to handle custom written shell String should be parametrized Fix for haiku os Alignement is important fixing wrong class name take the testpool for latency analysis from the testpool fixing typos Merge remote-tracking branch 'upstream/master' fixing sigchld Correcting a bash-sh issue correcting the readme\n\nTypo in the readme adding a way to ensure that a daemon is stopped correcting upstart_ensure to ensure that the service is not restared adding images Removing binary file adding a readme multiple fixes following the talk last correction adding the biography push it for multiple sections initial commit remove the network post install file\n\nthe file 55netcfg-copy-config  is run after the kickstart of the server is done. It will overwrite the configuration set by cobbler. test automation changing the template file extension changing the template file extension making the script compatible with python3 little correction on the readme adding a proper bash-completion generation adding the script hook cleaning binaries getting version from git or failing removing the zip option, this can be done with python setup.py bdist --format=zip moving to setup.py correction on the test making the metacafe test pass adding second vimeo url skipping vimeo for the moment adding xnxx test adding collegehumor test adding stanford open class courses adding test for vimeo, xvideo and soundcloud correcting travis changing test from md5 to filesize, the file changed between download cleaning the test that doesn't work with the api for the moment some assertion on the file downloaded removing testing video correcting test to be compatible with python2.6 StringIO used by nosetests do not merge with the way youtube-dl handle sys.stdout and sys.stderr correction on the test adding travis support correcting the makefile according to the new one removing extended globbing for the find utility adding xvideo adding facebook test adding photobucket test adding metacafe test adding dailymotion test some changes to keep the same standard removing unused global modifier correcting the makefile changing test video correction on the test for the utils.py adding clean rule in the makefile adding download test with md5 check adding TestCase class and corresponding test correction on the sanitize title method, change in title resulting adding test rule in the Makefile Merge pull request #3 from gcmalloc/Phenitei-master\n\npython3 update adding python2-3 compatibility updating the README accordingly adding support for evening menu adding a regex to search trough restaurant Merge pull request #1 from maugier/master\n\nsetup.py, refactoring adding liscence removing python porn readme commit initial commit ssl for rpm Changing the import and fallback order for json\n\nThe json import order module imported the now obsolete django simplejson\nparser before the parser bundled with the standard python library. The\nnew import schema is:\n    1) json from the standard library\n    2) simplejson\n    3) simplejson from django, now osolete correcting typo on cuisine Update README.md adding readme add the ssh config bootstrap fabric ensure mongo is running adding parallel adding extensions improvement in the fab and slide initial commit adding support for debian adding debian support Merge pull request #6 from antoinealb/master\n\nAdd support for system keychain Merge pull request #5 from antoinealb/master\n\nMinor improvements Merge pull request #4 from smarter/master\n\nFix for current Moodle + fix for setup.py bumping version adding logging adding a proper argument_parser correction on the option for the two argument version Take into account the case where the student is not registered to the course anymore change in module name renaming module to stop conflicting with menu a better README adding python3 compatibility checking remote timestamp before upgrade bump version changing the user interface, removing the password on the cli as it is bad practice a little fix for an IA course Correcting the usage ending sentence is better adding video support a without href, again updating version changing version correction when the url has parameters Merge branch 'master' of github.com:gcmalloc/epfl-moodle sometime a tag doesn't have a href Merge pull request #1 from antoinealb/master\n\nBetter usability correction on the url for the readme beautifulsoup4 dependencies updating version and setup.py formatting into functions correction on the readme cleaning around adding new function in the readme cleaning the repo adding usage better output on password adding logo adding empty password handling adding empty password handling correction on pdf redirection more output correction on empty pdf bug better readme adding a initialisation menu and configuration file unicode goodness removing useless method adding a download all function adding gitignore removing pyc proper packaging adding downloading document list of course and list of documents per course example for the library adding test initial commit yeah, thread pool to do the scan don't regenerate the ip range every time bug correction and logging saner library for mysql general cleaning and comments adding adding a global config file better readme moving README first complete version little time correction correcting table keys cleaning a bit working app return the right dict changing url to the one of the webapp better sql syntax better app adding static directory moving client files into the server directory adding scanner file, some test too Merge branch 'master' of ssh://git.fixme.ch:1337/ftp-scanner\nlittle merge new scanner version static to template adding empty main.html adding a barebone service app first scanner is now done, simply print the json for now Merge branch 'master' of ssh://git.fixme.ch:1337/ftp-scanner first try for the scanner adding database schema adding empty readme be more lazy removing dependencies also don't manage dependencies if epel was not setup by this module adding a parameter to manage epel repository removing pip cache for the docker build adding doc on how to use this module fixing path for certificate template generation fixing a english based orthograph to a US based one fixing variable parameter checks missing comma adding support for state adding gitignore adding camptocamp requirement adding properties for epfl certificates initial commit don't test the haswait and hasCheck if iptables version uses flock adding octet unit Correct typos fixing test Add python and vim usually ignored file in gitignore one environment variable per line Merge remote-tracking branch 'atoulme/master'\n\n* atoulme/master:\n  Be aware of blue_anime color\n  Make changes to the exporter to expose build health Merge remote-tracking branch 'dotanga/filter_jobs'\n\n* dotanga/filter_jobs:\n  update the readme.md\n  add the filter from file list feature\n  add some debug data and check only for jenkins 2 Merge remote-tracking branch 'mumutu/master'\n\n* mumutu/master:\n  using newest client\n  add domain Merge remote-tracking branch 'delgod/master'\n\n* delgod/master:\n  add metric for current job state Merge remote-tracking branch 'fhemberger/feature/disable-tls-verification'\n\n* fhemberger/feature/disable-tls-verification:\n  Allow disabling of TLS cert verification Merge remote-tracking branch 'dmt/master'\n\n* dmt/master:\n  add build agent info to metrics Merge remote-tracking branch 'mst-ableton/add_flake8_check'\n\n* mst-ableton/add_flake8_check:\n  Add flake8 check to Travis builds.\n  Remove trailing whitespace. removing unused variable\n\nremoving unused variables adding lldp grain initial commit parse the server response correcting doc, adding some doc for the initialisation mandatory README adding license initial commit adding beerware \tnew file:   chiffres/90.wav\n\tnew file:   src/GUI/AudioReader.java\n\tmodified:   src/GUI/CommandCheckPanel.java\n\tmodified:   src/GUI/CommandPanel.java\n\tmodified:   src/GUI/CommandTirePanel.java\n\tnew file:   src/GUI/ErrorWindow.java\n\tnew file:   src/GUI/GenCommandPanel.java\n\tmodified:   src/GUI/LotoWindow.java\n\tmodified:   src/GUI/NumberBoard.java\n\tmodified:   src/GUI/NumbersSubPanel.java\n\tnew file:   src/GUI/WindowMenuBar.java\n\tmodified:   src/Main.java\n\tnew file:   src/MainControler.java\n\tnew file:   src/jeu/Jeu.java\n\tnew file:   src/listener/MainListener.java\n\tnew file:   src/main/Main.java\n\tdeleted:    hs_err_pid10356.log\n\tmodified:   src/GUI/CommandCheckPanel.java\n\tdeleted:    src/GUI/CommandListener.java\n\tmodified:   src/GUI/CommandPanel.java\n\tmodified:   src/GUI/CommandTirePanel.java\n\tdeleted:    src/GUI/Menu.java\n\tdeleted:    src/Jeu.java\n\tdeleted:    src/Main.java\n\tdeleted:    src/MainControler.java\n\tmodified:   src/main/Main.java Initial commit, three java files, a simple README, not much. Yay git! initial commit adding a discogs file to be used from discogs adding simple discogs search correcting gitignore little sorting makes searching faster correction on discid checksum for cddb adding the cddb checksum on directory adding length and bitrate adding comments, merging a cddb hash calculation cleaning a bit by removing a useless method adding cluster recognition correcting typo adding a wait if musicbrainz cannot handle our request anymore, commenting a bit more removing useless class, adding debug messages adding filecluster for path information detection adding filecluster for path information detection correcting request, getitem return the first match only updating gitignore sound signature detection is now done sound signature detection is now done pep8 for musicfile musicsorter is pep8 cleaning files gmusicbrainz addon move is corrected counting the file is now working Proper capitalization: little clean Proper capitalization is working cleaning some code and working copy little thing in musicbrainz adding skeleton of classes adding a class to handle the musicBrainz search adding gitignore correcting adding a better way to handle multiple format and multiple librairies to handle the tags removing space changing the source, adding url for documentation purpose checking style and correcting it, according to pep8 adding comment adding comment Adding comments Adding comments merging two local branches little changes in music_sorter adding flag, cleaning MusicWalker improving Params class refractoring a bit adding stuff going to 4 spaces as default indentation correcting identation adding a readme keep on putting the conditions into place creating thread and adding methods and one class to handle music directories the first one setting the default required group fix for dependencies on new gitlab versions upgrading omniauth dependency\nallow the programmer to specify a group that would have access to the application\nbumping omniauth version correcting README First commit fail on errors adding travis hook correcting again the grammar nazi fixing grammar in a grammar bot adding insult typo correcting a typo also fix the express tag support for structured facts Allow changes of the git remote in the warranty repo\n\nAs the git repository used to fetch the warranty script is down,\nthis changes permit the user to change the repository to another one. only the data directory need to be checked the directories can also be either undef or empty string correcting the validate function fixing unquoted string replacing the relative import by absolute one adding doc adding validation function typo small fixes for the omniauth auth adding support for support email adding support for omniauth Changing facts to core_facsts adding dns zone tests adding test adding the allow query parameter default parameter for server option test fixes expliciti check fix function name the real parameter should be nil and not undef in spec test undef is not a number nor a string, test that before applying the checks adding stats test changing the is_ip check typo adding doc adding support for statistic in bind fixing the boolean operator another test approach for the undef adding little note in the readme for the check name policy changing the default to not write anything and let bind decide what the default is correcting rspec test check for the allow recursion string fixing param name correcting function name correcting test little fix on the way the content of a file is tested adding check for allow query adding a check for recursion adding check for the check name policy adding test for check name policy checking better check names adding @ for the template variable access adding input validation fix fixing template adding allow_query correction on the allow recursion disable check name, to allow people with _ in their entry to be happy little fix on variable name allow recursion a bit of documentation with an example better sentence no forward policy fix fixing the erb template empty forwarder correcting the except correcting the test adding more test correcting the test accordingly to the new options fixing the forwarders accordingly adding a policy setting for the forwarder change the variable name accordingly in the template tab to space adding test for the forward option validate the allow forwarder option correction on the forwarder name correction on the forwarder name correcting a typo Adding the stdlib dependency\n\nThis module was already used trough the array_validate in zone.pp.\nIt is now explicitely declared in the Modulefile. adding a allow forward option to a zone typo reverse url set the default version and provide a sane default adding bukkit plugin support correcting the dependencies refresh in case of new version small correction small correction adding eula typo also open the firewall port changing subscribe rule removing dependency from java minecraft service should be included by default changing user and group to minecraft adding service and download adding logstash output absolute path for su adding the query_resource function in the README overwrite rdo priority fixing a checking error little rollback allow to disable the installation of the smokeping package to be handled outside this module a more generic parameter acceptation for the probes replace package installation by the ensure_packages in the stdlib correcting ceph url fixing each adding a generic option in a hash form adding subprocess group kill options aesthetic correction and small typos adding a salt minion key fact renaming module name The directory for the mp3 request was missformed, that is fixed now many update as the classes are created first commit adding support for hash in the size function little correction renaming of the app cleaner pop method adding Var tuple late README is late lot of correction in the stack poping order first prototype. bug with ifz correcting the parser by adding the comment, cleaning a bit too parser and some basic memory adding setup.py adding guard for the import of cPickle, adding the fallback to Pickle fixing markdown for image adding readme adding history adding install setup adding first rcon adding base rcon adding a setup.py better python packaging correcting a this into self Merge remote-tracking branch 'gh/master' removing empty line adding test for syntax on travis fixing exception handling removing ipython as a dependency, cleaning on the side Uniforming the extension of the yaml files. adding missing url for kube-tools and kube-client in the kubernetes howto replacing the obsolete repository don't create an empty buffer correcting the temporary file name adding documentation for the json stats collector correcting the test adding a json serializer for the stats Merge pull request #2 from gcmalloc/readme\n\nReadme Merge pull request #1 from gcmalloc/readme\n\nReadme correcting indentation\n\nMore descriptive README\n\nUpdated README correcting indentation adding template adding template for reveal js Update README.md a bit better styling adding margin for the slide link and file grey pins as listing adding listing slides putting navbar in the layout better templating adding configuration handling no more border removing footer more cleaner argument passing setting the test remove the tempory directory simplyfying again the page removing double files many improvement on the test contains is replaced by in removing circular dependency adding my own stylesheet reverse japanese \" slides directory don't fail if the repository is updated only ignore readme adding help no more japanese test the new build directory path should only be taken from the parameter background task new dependencies{ removing japanese ensure that the directory is there more log when an issue occur payload is the container jsonify the response removing empty navigation bars renaming the appplication new compiled slide directory getting the good broker removing debug mode correcting directory name adding supervisor correction on the task adding test command adding a deploy script redis worker data format minimal set of feature fixing the setup.py to install the submodule too adding note on ssh v1 ignore the terraform command if no state exists adding installer small fixes readme cleanup micro readme fixing remote initial commit cleaner condition os.path to replace raw string concatenation Initial commit Initial commit Merge pull request #1 from gcmalloc/master\n\ntravis update more python version more pedantic travis updating travis travis is good putting echo into a variable File path separator tend to change following the course of history, and the will of the user Extension separator can change too fixing some fix for fixing the test and the clean adding a cd variable to handle custom written shell String should be parametrized Fix for haiku os Alignement is important replacing dhcpcd and sshd startup script by collectd correcting arch linux template test automation changing the template file extension making the script compatible with python3 little correction on the readme adding a proper bash-completion generation adding the script hook cleaning binaries getting version from git or failing removing the zip option, this can be done with python setup.py bdist --format=zip moving to setup.py correction on the test making the metacafe test pass adding second vimeo url skipping vimeo for the moment adding xnxx test adding collegehumor test adding stanford open class courses adding test for vimeo, xvideo and soundcloud correcting travis changing test from md5 to filesize, the file changed between download cleaning the test that doesn't work with the api for the moment some assertion on the file downloaded removing testing video correcting test to be compatible with python2.6 StringIO used by nosetests do not merge with the way youtube-dl handle sys.stdout and sys.stderr correction on the test adding travis support correcting the makefile according to the new one removing extended globbing for the find utility adding xvideo adding facebook test adding photobucket test adding metacafe test adding dailymotion test some changes to keep the same standard removing unused global modifier correcting the makefile changing test video correction on the test for the utils.py adding clean rule in the makefile adding download test with md5 check adding TestCase class and corresponding test correction on the sanitize title method, change in title resulting adding test rule in the Makefile the end I HOPE IT S THE LAST ONE Merge branch 'master' of github.com:paulpell/trafficHandling\n\nConflicts:\n\tcheck.md5 adding something in md5 hash adding a nice script to handle the md5 hash and remove the md5 we don't need adding a nice script to handle the md5 hash and remove the md5 we don't need last commit Merge branch 'master' of github.com:paulpell/trafficHandling Merge branch 'master' of github.com:paulpell/trafficHandling adding a way to check the md5 hash changing the run.sh, it will build the file automatically if the build dir didn't exist change name, add space Merge branch 'master' of github.com:paulpell/trafficHandling change name, add spaces change in the way we handle the signals some correction, syntax and comments adding import in TrafficLight.java a little one many change in name, added a class to handle everything nicely ugly fix ",
      "nbWordsMessagePerCommit": "5.3"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 41,
        "nbWordsMessage": 335,
        "nbWordsMessagePerCommit": "8.2"
      },
      "Python": {
        "language": "Python",
        "nbCommit": 337,
        "nbWordsMessage": 1750,
        "nbWordsMessagePerCommit": "5.2"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 56,
        "nbWordsMessage": 206,
        "nbWordsMessagePerCommit": "3.7"
      },
      "Shell": {
        "language": "Shell",
        "nbCommit": 8,
        "nbWordsMessage": 30,
        "nbWordsMessagePerCommit": "3.8"
      },
      "C#": {
        "language": "C#",
        "nbCommit": 1,
        "nbWordsMessage": 6,
        "nbWordsMessagePerCommit": "6.0"
      },
      "Ruby": {
        "language": "Ruby",
        "nbCommit": 77,
        "nbWordsMessage": 417,
        "nbWordsMessagePerCommit": "5.4"
      },
      "Puppet": {
        "language": "Puppet",
        "nbCommit": 47,
        "nbWordsMessage": 245,
        "nbWordsMessagePerCommit": "5.2"
      },
      "Go": {
        "language": "Go",
        "nbCommit": 3,
        "nbWordsMessage": 29,
        "nbWordsMessagePerCommit": "9.7"
      },
      "PureScript": {
        "language": "PureScript",
        "nbCommit": 1,
        "nbWordsMessage": 3,
        "nbWordsMessagePerCommit": "3.0"
      },
      "C": {
        "language": "C",
        "nbCommit": 4,
        "nbWordsMessage": 21,
        "nbWordsMessagePerCommit": "5.3"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 1,
        "nbWordsMessage": 6,
        "nbWordsMessagePerCommit": "6.0"
      },
      "Vim script": {
        "language": "Vim script",
        "nbCommit": 1,
        "nbWordsMessage": 5,
        "nbWordsMessagePerCommit": "5.0"
      }
    }
  },
  "remij1": {
    "user": "remij1",
    "statsGlobal": {
      "nbCommits": 274,
      "nbWordsMessage": 1169,
      "messages": "Master may works Merge branch 'master' of https://github.com/Ardgevald/PRR2017 Merge branch 'master' of https://github.com/Ardgevald/PRR2016 minor change Sending sync and follow_up Merge branch 'master' of https://github.com/Ardgevald/PRR2017 Début de réalisation Server side qui ne fonctionne pas du tout init server MAJ getNextLine + ALL test passed FileNumbering : allTestsPassed DFS : all tests passed (application test too) DFS : tri par path Application : Tests 4/5 Modification de décorateur Uppercase Test passed Test DFS et Utils passed Ajout d'entête de fichier Petite modif de commentaire Changement de nom du programme + petite mise en page 2ème activité Merge branch 'master' of https://github.com/remij1/SYM_Labo1 Question 4 (retour) done Question 2 (icon) ok relativeLayout Back ok 1ère partie fonctionne, reste questions Avancement de la deuxième activité, quitte sur l'émulateur Merge branch 'master' of https://github.com/remij1/SYM_Labo1 Début de la deuxième activité Ajout de l'activité ValidLogin ajout de password et test ok Commit initial avec template Modification de l'implémentation de RouletteServer Labo2 - All tests passed Résolution d'implémentation Ajout des tests PR - Fb_lab02_v2_contrib (remij1/aurelielevy) (#88)\n\n* Init testV2\r\n\r\n* RouletteV2Test\r\n\r\n* MAJ Tests Je crois que tout est fait, à vérifier ;) client à tester Ajout des Commande Load et Bye, implémentation serveur DONE Merge branch 'fb-lab02-v2-contrib' MAJ Tests Merge branch 'fb-lab02-v2-tests' of https://github.com/SoftEng-HEIGVD/Teaching-HEIGVD-RES-2017-Labo-02 into fb-lab02-v2-contrib La beauté du code RouletteV2Test Init testV2 Test passed avec l'image c'est mieux Avancement du readme, il doit sans doute manquer des choses problème de meatball transformée en cabinet réglé Ajout du déployement docker et plus de donnée pré-générée Liste de fourniture par ordre décroissant afin de voir ce qu'on vient d'ajouter Problème de header résolu Modif titre fenêtre petite modif header Utilisation des includes pour header et footer Redirection depuis servlet pour édition Color en énum /generate plutôt que /generator Edit fonctionnel Merge branch 'fb-delete' Auto-complétion fonctionne sauf pour checked Merge branch 'fb-insert' into fb-edit Merge branch 'fb-insert' Servlet meuble à la racine Merge branch 'fb-pages' Problème page précédente réglée Insertion fonctionnelle Merge branch 'servlet' Génération fonctionnelle, mais fait planté si 2000000 d'insertion Pagination OK Affichage de la grille dans fourniture Petite modif generator Merge branch 'servlet' config mysql et wildfly lancés via docker-compose (pas le war) Ajout de close() dans FunrinutresManager pour fermer la connexion Lien avec BDD ok, mais pas d'auto-configuration wildfly Merge branch 'servlet' of https://github.com/remij1/AMT_Project01 into servlet Affichage d'une fourniture ok continuation MVC Generation de nom automatique Merge branch 'servlet' of https://github.com/remij1/AMT_Project01 into servlet Merge branch 'servlet' into fb-static-template bootstrap template Initial commit modif package.json quelques MAJ An array as a response (TCP) IP problems... JSON over UDP done, is it really what we have to do ? Starting musician report v3 new version Report Sticky-session working It's now working ;-) It has to be debbuged ENV variables for containers IPs working oublis du fichier javascript adding from sources AJAX handling (LaboHTTP, 4 done) Minimum of computers returned changed to 0 modified static index.html (adding navbar, otherwise it dosn't work Update image, install VIM Images for apache rp, IP hardcoded (labo HTTP, 3c done) Docker image with Node running dynamicaly (returning HackedComputers) Docker express OK (2a) A part done Theme Merge branch 'master' of https://github.com/remij1/Teaching-HEIGVD-RES-2017-Labo-SMTP Encoding problems solved MAH class diagram updated MD with classDiagramm MAJ md Merge branch 'master' of https://github.com/remij1/Teaching-HEIGVD-RES-2017-Labo-SMTP Modification Code + ajout JAR exécutable + test linux Suppression de la classe Group Wouuuuuhouu ca avance :P Ajout du mock utilisé PLein de truc CompanyName in SMTPCLient constructor SMTP CLient à revoir mais fonctionnel new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 MAJ build pipeline updatge readme Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 MAJ readme new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 Update readme new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json MAJ du readme Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 MAJ subproject new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 build pipeline new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json suppression du readme inutile new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json new version of repo.json changement de couleur MAJ agent new version of repo.json new version of repo.json new version of repo.json Affichage via repo.js Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 Petite modif sous-readme Merge branch 'master' of https://github.com/remij1/TWEB_Labo1_Node MAJ build Ajout de variable d'environnement pour heroku script start ajouté au package modif main du package.json MAJ ajout couleur MAJ agent Agent pour visuel ok MAJ agent pour design de type tree Petite modif agent Push sur github des données du repos regardé OK Récupération du nombre de commit par auteur Petite modifications de fichier Déplacement agent Create README.md new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 MAJ agent new version of repo.json new version of repo.json new version of repo.json new version of repo.json MAJ Agent new version of repo.json new version of repo.json new version of repo.json eslint réglé Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 launch config new version of repo.json new version of repo.json Merge branch 'master' of https://github.com/remij1/TWEB_Labo1 Modification Labo Node new version of repo Delete my-data-file.json new version of repo new version of repo new version of repo new version of repo in repo.js new version of repo new version of repo new version of repo new version of repo new version of the file new version of the file récup commit par auteur Modif Node Déplacement agent template static page Création d'index.html et du dossier docs Ajout du repo de Node en tant que submodule ",
      "nbWordsMessagePerCommit": "4.3"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 99,
        "nbWordsMessage": 460,
        "nbWordsMessagePerCommit": "4.6"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 158,
        "nbWordsMessage": 629,
        "nbWordsMessagePerCommit": "4.0"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 17,
        "nbWordsMessage": 80,
        "nbWordsMessagePerCommit": "4.7"
      }
    }
  },
  "Bykow": {
    "user": "Bykow",
    "statsGlobal": {
      "nbCommits": 423,
      "nbWordsMessage": 1933,
      "messages": "Saved the fucking WORLD UML Few comments in exemple for presentation Works on readme.md Dernière correction du dossier task1 dans la task5. error correction Scripts misc  Works. Fuck you ontoine v2 Merge remote-tracking branch 'origin/v2-impl' into v2-impl Fuck you ontoine RouletteProtocolV2 server impl  Works lel Fuck you Ontoine ??? Roulette V1 Impl functionnal ...booooring Derp Comments fixed readme Readme still tweaking for heroku heroku tweaking misc it works bitches rename output output maahh hum Fuck that finished ? misc UI SHUTTHEFUCKUP almost one day it will work ..... Merge branch 'master' of https://github.com/Bykow/dotfile Init Initial commit new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file Port fixing Merge branch 'master' of https://github.com/Bykow/wroong Bootstrap base fixed? init commit Done Recommited without .idea ... All tests green Update .gitignore Update .gitignore  Done Work done Couldn't download Maven yet, did the code without testing... so far new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file fixed readme Merge branch 'master' of https://github.com/Bykow/aliens_client readme?? new version of the file new version of the file Merge branch 'master' of https://github.com/Bykow/aliens_client readme new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file new version of the file Merge branch 'master' of https://github.com/Bykow/aliens_client Removed settings button new version of the file new version of the file new version of the file new version of the file new version of the file Changed title changed title Added bio misc Cleaned and centered c'est joli test Changed template docs folder cleaned init ",
      "nbWordsMessagePerCommit": "4.6"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 21,
        "nbWordsMessage": 70,
        "nbWordsMessagePerCommit": "3.3"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 3,
        "nbWordsMessage": 11,
        "nbWordsMessagePerCommit": "3.7"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 15,
        "nbWordsMessage": 24,
        "nbWordsMessagePerCommit": "1.6"
      },
      "C++": {
        "language": "C++",
        "nbCommit": 4,
        "nbWordsMessage": 5,
        "nbWordsMessagePerCommit": "1.3"
      },
      "Shell": {
        "language": "Shell",
        "nbCommit": 6,
        "nbWordsMessage": 15,
        "nbWordsMessagePerCommit": "2.5"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 5,
        "nbWordsMessage": 12,
        "nbWordsMessagePerCommit": "2.4"
      }
    }
  },
  "wasadigi": {
    "user": "wasadigi",
    "statsGlobal": {
      "nbCommits": 376,
      "nbWordsMessage": 1935,
      "messages": "Publish first version Initial commit Restore h2 driver in standalone.xml First version Initial commit Fixed a number of bugs and typos. Validation complete. Let's give a bit more time for the containers to start, before we do the check Add npm install in Dockerfile Validation procedure, with bash script and Docker image Fix other tables Fix 1st table Fix 1st table Instructions and directory layout Initial commit Initial commit Version used for RES 2016 Update .gitignore Template for 15.10 can now be built locally and on atlas Remove old test Working Atlas configuration for ubuntu 15.04, but not for ubuntu 15.10 template.ubuntu.15.10.json is working, but still using ubuntu 12.04 Initial commit Merge coolFeature Adding a cool page in the cool branch. adding a file called bidon Merge branch 'master' of https://github.com/wasadigi/javaee-template Modifying code2 Merge pull request #2 from wasadigi/quickfeature\n\nQuickfeature Merge master into quickfeature Modifying code2 Modifying code2 Modifying code Adding project files Adding project files Initial commit Initial commit Create book.json Create styles/ebook.css Create styles/website.css Registration application. Hint added. Initial commit Initial commit update readme by bob mod readme by bob Update by Alice, after rebase skip Conflicting edit by Bob Add comment in Bob2.java Adding a comment in Alice2 Merge branch 'master' of github.com:wasadigi/MyGitSandbox Adding Bob2.java Merge branch 'master' of github.com:wasadigi/MyGitSandbox Adding Alice2.java Merge branch 'master' of github.com:wasadigi/MyGitSandbox\n\nConflicts:\n\tMyGitSandboxProject/src/main/java/ch/heigvd/res/mygitsandboxproject/MyApplication.java Bob takes ownership of MyApplication.java (this will raise an issue...) Alice takes ownership of MyApplication.java Merge branch 'master' of github.com:wasadigi/MyGitSandbox Alice's first contribution to the project Bob's first contribution to the project Creating empty project structure Initial commit Replace then() with done(), so that error callback is not swalled by revwalk walker Fixing sub-module issue Getting rid of sub-git folder First documented version Initial commit Initial commit Update README.md Initial commit Merge pull request #4 from SoftEng-HEIGVD/master\n\nCleaning up test files... Update test Merge pull request #3 from SoftEng-HEIGVD/master\n\nMerge pull request #1 from wasadigi/master Merge pull request #1 from wasadigi/master\n\nRemoving first test file. Merge pull request #2 from SoftEng-HEIGVD/master\n\nRemoving test files. Accepted. Merge pull request #1 from SoftEng-HEIGVD/master\n\nadding test file Initial commit Addling slides for day 2 (persistence) Adding domain model description Adding slides for day 1 Initial commit Delete last year's slides Commit slides 10 changes Typo in title slide Adding slides for Spring Framework Adding JMS slides Update tx slides Update project guidelines Adding slides for concurrency in practice update slide 04 Adding guidelines for phase 2, session 1 Adding slides for lecture 5 (transactions) and test 1 review Adding slides for week 4: REST Add slides for lecture 3 (Data Access Tier) Adding note to resource pooling with Java EE and Glassfish Adding slides 02 Adding slides for week 1 Removing last year's material Initial commit Adding evaluation grid Add missing content for phase 2 Update project description Fixed path to image reorganized specs files First draft of specifications Initial commit adding LDAP slides adding java ee 7 version of MonSysBackEnd adding slides for HTTP infrastructure Addling instructions for lab 1 Adding slides for course 1 (HTTP protocol) Adding slides for web services Adding slides for LDAP Fixing problem with previous upload (trac...) Adding application packages and README file Adding lab 2 Adding first batch of files Initial commit Adding note on naming for test class Merge pull request #1 from AlphaHydrae/v1-fix\n\nSwitched default roulette protocol version to v1 Adding note to add @TestAuthor annotations Update instructions Lab 02 Initial commit Merging bug fixes from teacher into my branch Fixing 2 bugs, one in code and one in tests Fixing the bug introduced by the teacher Fixing bugs in application code and unit tests getting rid of test-results.json add test-results.json to .gitignore Fixing bugs in application and unit tests reintroduce encoding bug, so that I can give instructions to students Restore production of test-results.json Broken application used as a starting point... all tests are RED :-( Adding workspace to .gitignore Adding instructions for lab 01 Adding diagrams Initial commit Still some 01 refs to fix, moving to 00 Fix lab numbering issue: move 01 to 00 Cosmetic change Adding pull request instructions Updating instructions and adding diagrams Update instructions and add diagrams Fix logo urls Changing logos Adding logos Update diagram Update instructions and add diagrams iFLUX should not cause tests to fail if there is no Internet connection. Downgrading to java 7 in maven pom.xml Updating instructions Initial commit Merge branch 'master' into fb-orchestra New feature spec: let's play music together Implementation of first specs Update .gitignore Update instructions Update diagrams with new repo name (2016) Update diagrams with new repo name (2016) First version of diagrams First version of instructions Update .gitignore and LICENSE Add listeners to create a json file to store test results. Updated code to replace schoolpulse with probedock (on trial) Initial commit Adding slides 07 Adding slides HTTP protocol Adding slides for UDP, Node.js and Docker Add SMTP slides Add slides for TCP Add Java IO slides Adding slides for week 1, introduction Upadate README.md for 2017 Cleanup for 2017 Slides infra http Adding slides HTTP Adding lecture notes for HTTP and LDAP Fix typo in Docker example (UDP) Adding Docker slides Adding UDP slides Adding slides for SMTP Revert git test - ignore Quick git test - ignore Adding slides for TCP Adding examples Adding lecture notes 02 - TCP programming Adding content for Java IOs: slides and examples Temp. remove lecture notes - order and content might change this year Adding slides for first week: 00-Introduction Adding guidelines for first lab Nettoyage de printemps. Welcome to RES 2016 wrapping up 2015... wrapping up 2015... Adding LDAP slides Removing old numbered lecture notes Fixing image link Adding lecture notes for LDAP Adding hint for lab Removing legacy lecture notes Adding lecture notes for Web Infrasturcture Merge branch 'master' of github.com:wasadigi/Teaching-HEIGVD-RES Adding slides about Web Infrastructure Merge pull request #8 from Zoruk/master\n\nTypo and dead link Merge pull request #7 from BinaryBrain/patch-2\n\nUpdate 02-Lecture2-TCPProgramming.md Merge pull request #6 from BinaryBrain/patch-1\n\nUpdate 02-Lecture2-TCPProgramming.md Adding slides 04bis, step-by-step development of HTTP client library Adding HTTP slides Remove legacy 06 Adding HTTP lecture Adding slides 03 (UDP / Docker) Adding lecture 3 Update slides 02 Adding survey (vagrant) Adding slides 02 (TCP) Adding lecture 02 Update slides for Java IO Adding encoding example Buffered IO example (moved to maven) Adding example for File IO and Filters Adding slides for lectures 00 and 01 Adding lecture 01 (Java IO) Merge pull request #5 from AlphaHydrae/typo\n\nFixed a typo in the instructions for lab 00. Update README.md Temp version of lab 00 instructions Updating the README.md with the 2015 edition info It's spring. Let's do the yearly cleanup and start fresh. Update README.md Update README.md Fixed wrong project name in the instructions. Update 00-Introduction.md Update 00-Introduction.md Update 00-Introduction.md Initial commit Complete requirements with minimal implementation Update .gitignore Update instructions Update diagrams with new repo name (2016) Update diagrams with new repo name (2016) First version of diagrams First version of instructions Update .gitignore and LICENSE Add listeners to create a json file to store test results. Updated code to replace schoolpulse with probedock (on trial) Initial commit Initial commit update slides Adding lecture 2 keynote Adding lecture 2 pdf Adding slides 3 Material for week 1 Initial commit cleanup for new semester Adding slides 06 Adding slides for lecture 5, AngularJS Upate slides 004 with Mongoose examples Fix typo Merge branch 'master' of github.com:wasadigi/Teaching-HEIGVD-TWEB Adding slides 04: Mongo, Promises, async. Oktober Merge pull request #2 from AlphaHydrae/master\n\nApi copilot slides. Add slides for lecture 3 (REST) Remove temp slides folder Add slides for lecture 2 (node.js, express.js, yeoman) Commit new draft of lecture 2 slides Fix typo Slides for lecture 01 Getting rid of last year's content commit last year's leftovers Update README.md Initial commit Adding slides for web services Adding slides for LDAP Adding HTTP slides (infra) Adding slides and lab for HTTP remove old ICommand removed old ICommand Adding logic to UDP demo project and slides Adding UDP example Adding slides for concurrency Adding slides for lecture 3 (Socket API - TCP) Adding slides for Buffered IOs Adding one slide with the invocation chain (decorator pattern) Adding slides for Lecture 1 Initial commit Fixing bug, unit test should get green Version ready for students Initial commit Guidelines Initial commit First commit, with instructions and supporting files Initial commit Upgrade to Jenkins 2 and Blue Ocean Fix sh step in Jenkinsfile, variable passed to API Test container was wrong Fix procedure to check if Spring Boot app has been fully started: use the /health endpoint Update Jenkinsfile to wait for full start of clock micro-service, then execution of API tests by launching a Docker container Adding API tests written with supertest. Probe Dock not activated yet. Update Jenkinsfile to invoke 'mvn sonar:sonar' at commit stage; sonar URL configured in Jenkins job parameter Modified CD topology to start a SonarQube server next to the Jenkins server Resolve port conflict in runtime-topoloy. Replace single build parameter with 2 parameters, 1 for each microservice Update Jenkinsfile to build beers micro-service and to create a test env. with Docker Compose Created a docker image for beers micro-services. Created a topology for clock+beers microservices Beers micro-service implemented, with REST endpoint for CRUD operations and 1 finder Merge branch 'fb-jenkins-with-docker-compose' Add step to build clock microservice and image Update Jenkinsfile and add setup.groovy, so that we can install maven+node in Jenkins (setup.groovy) and get the sources of our microservices via git Adding a Docker Compose file to define a topology for our CD pipeline server Merge branch 'master' into fb-springboot Adding a Jenkinsfile that does nothing in 4 stages Adding a Docker image for our customized Jenkins. IMPORTANT: it fetches Jenkinsfile from https://github.com/wasadigi/Teaching-MSE-SEA-2016-MicroServices.git Added a Dockerfile and bash scripts to build and run the clock micro-service in a Docker container Code is complete: RESTful endpoint returns time in JSON and management endpoints are enabled Adding directories for content to be added in the future Initial commit Adding slides for JMS adding link to Teams for POC Project adding slides 6 removing test file test Committing forgotten files... Adding 2 samples projects for Spring Adding link to REST Documentation page in wiki Adding link to REST Documentation page in wiki Adding first version the Fruits API Blueprint (WIP) Adding slides for Lectures 3 and 4 Adding persistence with JPA. Adding support for PUT and DELETE methods in the REST API. Adding slides for lecture 2. Initial commit of the Skeleton project Adding links to wiki Adding references Adding references. Adding references Adding references. Adding slides for lecture 1. Removing old slides Adding slides about JMS and transactions Adding slides on persistence Adding slides on Spring New slides for REST API design Adding slides for lecture 2 (Web Services) Adding slides for week 1 Initial commit Update feature1.txt Update index.html, again Update index.html Merge branch 'master' of github.com:wasadigi/tempTest Initial commit Add /cool endpoint Adding slides Lecture 8, software evolution Adding slides 07 Adding slides - agile testing Adding slides, lecture 05 Adding slides for lecture 04 Adding slides for lecture 3 Adding slides, lecture 2 Slides for lecture 1, intro Cleanup before 2016 Merge branch 'master' of github.com:wasadigi/Teaching-MSE-SoftwareEngineeringAndArchitecture Cleanup before 2016 Adding presentations about testing mocks Adding Lecture 5 - OO Reengineering Adding slides on software evolution Adding BDD slides Adding slides for lecture 02 Fixing course description First slides and course intro Cleanup for the new semester Updating slides on software evolution, to include reengineering slides Adding slides on software evolution Adding Sacha Labourey's slides. Adding BDD slides Slides for Lecture 6 Adding slides for the Octo workshop Adding slides for Lecture 3 and 4. testing again Testing. Adding slides for lecture 1. Initial commit ",
      "nbWordsMessagePerCommit": "5.1"
    },
    "stats": {
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 41,
        "nbWordsMessage": 362,
        "nbWordsMessagePerCommit": "8.8"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 109,
        "nbWordsMessage": 560,
        "nbWordsMessagePerCommit": "5.1"
      },
      "Shell": {
        "language": "Shell",
        "nbCommit": 8,
        "nbWordsMessage": 49,
        "nbWordsMessagePerCommit": "6.1"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 4,
        "nbWordsMessage": 8,
        "nbWordsMessagePerCommit": "2.0"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 5,
        "nbWordsMessage": 15,
        "nbWordsMessagePerCommit": "3.0"
      }
    }
  },
  "lognaume": {
    "user": "lognaume",
    "statsGlobal": {
      "nbCommits": 359,
      "nbWordsMessage": 1378,
      "messages": "Question 8 Gitignore Quickfix wrong package name refractoring Merge pull request #5 from Farenjihn/fb-14-gui\n\nBasic GUI Clean imports Package fixes Codestyle Merge branch 'master' into fb-14-gui Gitignore Add TestFX dependencies to gradle Merge branch 'fb-14-gui' of github.com:Farenjihn/pdg-heig into fb-14-gui Login form with mock actions Gradle with JavaFX API documentation template Merge branch 'master' of github.com:Farenjihn/pdg-heig Update README.md Get last release each startup Update & Delete Pagination working Moved in package & gradle dependencies Merge branch 'master' of github.com:lognaume/amt-project Create new kebabShop from UI Merge branch 'master' of github.com:lognaume/amt-project App loading data from MySQL Added PHPMyAdmin Basic shops list with local datastore First app showing static Kebab shop Merge branch 'master' of github.com:lognaume/amt-project HTML -> JSP Test tags Typo... Separate script and before_deploy Before deploy script Merge branch 'master' of github.com:lognaume/amt-project Skip cleanup Looking for the good file path Merge branch 'master' of github.com:lognaume/amt-project Changed repo name Execute travis on travis branch Travis Travis Travis Travis Travis Travis Test travis Gradle Merge branch 'master' of github.com:lognaume/amt-project Initial web app project Initial commit Jouer moins vite Bon JAR Factorise UML Marges et JAR Maxime est dans le rapport Rapport Fix compteur temps J'avais tout cassé Merge branch 'master' of github.com:gluthier/mcr-projet UML Merge branch 'master' of github.com:gluthier/mcr-projet Texte recommencer Jar Un peu de nettoyage Merge branch 'master' of github.com:gluthier/mcr-projet Gradle build Merge pull request #3 from gluthier/guillaume\n\nGuillaume Merge remote-tracking branch 'origin/commentBranch' into guillaume Merge remote-tracking branch 'origin/master' into guillaume Nettoyage Vitesse du jeu parametrable Je fais de la merde avec les fichiers de l'IDE Revert \".idea par erreur\"\n\nThis reverts commit 0465ee1b4588b2954ab777b7e235b35b637d3984. .idea par erreur Meilleure gestion déplacement .. Slower Merge pull request #2 from gluthier/guillaume\n\nVisiteur Merge remote-tracking branch 'origin/master' into guillaume Better use visitor Cleanup Merge pull request #1 from gluthier/guillaume\n\nAdaptation JavaFX Merge branch 'guillaume' of github.com:gluthier/mcr-projet into guillaume Fade out obstacles Use JavaFX only Game speed can be changed Typo in package name Added Visitor.xml Merge branch 'master' of github.com:gluthier/mcr-projet Documents folder + presentation added Merge branch 'master' of github.com:gluthier/mcr-projet pres ODP Report done Report done Merge Report in progress Gitignore Cleanup Modified startup script to inject ENV variables in PHP template and dynamically configure apache Loading locations using ajax Modified docker images to install vim Docker image for apache reverse proxy. WARNING: IP HARDCODED Return list of locations gitignore Added express-image Docker image static HTML with apache+php working and validated Initial commit Admin.jar Merge branch 'master' of github.com:gluthier/GEN-projet Section 7 Jar Merge branch 'master' of github.com:gluthier/GEN-projet Fixe source path Merge pull request #49 from gluthier/jar_packaging\n\nJar packaging Merge Merge remote-tracking branch 'origin/master' into jar_packaging Merge remote-tracking branch 'origin/master' into jar_packaging Everything is packageable Jar packaging of client Merge pull request #47 from gluthier/client_game\n\nClient game Quick ugly fix Revert \"Fix protocole\"\n\nThis reverts commit 9b857140dea523aad69c937725cd4eec29051257. Fix protocole Multiplayer working Merge remote-tracking branch 'origin/server-party-implementation' into client_game Fix Merge remote-tracking branch 'origin/server-party-implementation' into client_game Check roles client side Client update from server Merge pull request #46 from gluthier/lobby\n\nUgly lobby done Lobby working bis Lobby working Fix game creation SOUT on protocol Missing \\n in protocol New game should appear in lobby Quickfix Create new party First working Lobby Merge pull request #44 from gluthier/39-tcp-client\n\nLogin OK Login working ! Added good JUnit version in protocol Merge branch 'server-improvement' into 39-tcp-client Corrections SYNTAXIQUES Merge remote-tracking branch 'origin/server-improvement' into 39-tcp-client Protocol testing in progress, few fixes done TCP Client test and better integration of the various controllers TCP client done Tests in progress ClientController done TCP Client done Merge branch 'master' into 39-tcp-client Client in progress TCP Client in progress Merge remote-tracking branch 'origin/master' into 39-tcp-client Merge remote-tracking branch 'origin/Server' into 39-tcp-client External GameController & grid Merge remote-tracking branch 'origin/master' into 19-obstacle-interaction new MainApp gitignore IntelliJ Fixed collision between groups Merge pull request #21 from gluthier/19-obstacle-interaction\n\nCollision OK Clean import Merge branch '19-obstacle-interaction' of github.com:gluthier/GEN-projet into 19-obstacle-interaction Collision OK fixes #19 Collision OK Funny looser text Merge branch 'skier' of github.com:gluthier/GEN-projet into skier Fixed collisionWithEdge() Merge pull request #17 from gluthier/issue-8-dynamic-sprite\n\nIssue 8 dynamic sprite done Comments Moved images sources to lighten the jar JavaFX Tests done, still exceptions JavaFX tests Working, TODO: Tests, comments Merge branch 'issue-8-dynamic-sprite' of github.com:gluthier/GEN-projet into issue-8-dynamic-sprite Cleanup Refractor Moving to Grid class instead of GridPane Refractoring in progress First working half dynamically game scene Load dynamically background image (for pane) Merge pull request #13 from gluthier/issue-8-dynamic-sprite\n\nIssue 8 dynamic sprite Wrong logo URL Merge branch 'master' of github.com:gluthier/GEN-projet Javafxpackager has be renamed Javapackager Improve resolution On rentre dans le placard Merge branch 'master' of github.com:gluthier/GEN-projet Rapport API Merge branch 'master' of github.com:gluthier/GEN-projet Rapport API Merge branch 'master' of github.com:gluthier/GEN-projet RM pdf Merge branch 'maxime' Merge branch 'master' of github.com:gluthier/GEN-projet Revert \"Merge branch 'master' of github.com:gluthier/GEN-projet\"\n\nThis reverts commit 19e89f3505cebf55e66193e3c3ae1bd4dfcfaeb7, reversing\nchanges made to 25d2a795f52603656e8b0ccd4ae0cd36aee62ba0. Merge branch 'master' of github.com:gluthier/GEN-projet Rapport Diagramme activité Alignement Merge branch 'master' of github.com:gluthier/GEN-projet DB section done, beginning of comm protocol Merge branch 'master' of github.com:gluthier/GEN-projet DB schéma Espacement Rendu Merge branch 'master' of github.com:lognaume/projet-semestre4 Inclusion cahier charges Merge branch 'master' of github.com:lognaume/projet-semestre4 Correction Merge branch 'master' of github.com:lognaume/projet-semestre4 modification Merge branch 'master' of github.com:lognaume/projet-semestre4 Correction Correction orthographiques Merge Merge branch 'master' of github.com:lognaume/projet-semestre4 Liste des figures Merge branch 'master' of github.com:lognaume/projet-semestre4 Mise en page Merge branch 'master' of github.com:lognaume/projet-semestre4 mise en page Merge branch 'master' of github.com:lognaume/projet-semestre4 Gantt final Merge branch 'master' of github.com:lognaume/projet-semestre4 Fix typo Fix history Merge branch 'master' of github.com:lognaume/projet-semestre4 Journal de travail Guillaume Merge branch 'master' of github.com:lognaume/projet-semestre4 Description technique Guillaume + modification annexes Export quickfix Merge pull request #140 from lognaume/fb-22-visualhistory\n\nFb 22 visualhistory Take symetry in account Fixes #22 Merge remote-tracking branch 'origin/master' into fb-22-visualhistory Cleanup & comments Visual history working Merge remote-tracking branch 'origin/master' into fb-22-visualhistory Merge remote-tracking branch 'origin/master' into fb-22-visualhistory Visual history in progress En cours Beginning Merge pull request #106 from lognaume/fb-13-history\n\nFb 13 history Merge remote-tracking branch 'origin/master' into fb-13-history Applied to all tools Merge remote-tracking branch 'origin/master' into fb-13-history Comment Merge remote-tracking branch 'origin/master' into fb-13-history History working Merge remote-tracking branch 'origin/master' into fb-13-history First working version for brush Merge remote-tracking branch 'origin/master' into fb-13-history First version Merge pull request #53 from lognaume/fb-26-copy-past\n\nFb 26 copy past Merge remote-tracking branch 'origin/master' into fb-26-copy-past AbstractTool Merge branch 'fb-26-copy-past' of github.com:lognaume/projet-semestre4 into fb-26-copy-past Merge remote-tracking branch 'origin/master' into fb-26-copy-past Copy/past OK fixes #26 Merge remote-tracking branch 'origin/master' into fb-26-copy-past rm idea file Cleanup Copy / past done. Fixes #26 Selection copy / past done Copy / past working with selection Copy / past from selection almost done Copy / past working with layers. Best exception management needed Merge remote-tracking branch 'origin/master' into fb-26-copy-past First implementation Merge remote-tracking branch 'origin/master' into fb-7-gestion-couleurs Merge branch 'master' into fb-7-gestion-couleurs Ignore IntelliJ files Revert \"Save color as Hue Saturation Brightness\"\n\nThis reverts commit d58146359297147ea029a41881d3f7433189bc41. Remove IDE config file.. Save color as Hue Saturation Brightness Merge remote-tracking branch 'origin/master' into fb-7-gestion-couleurs First version of popup oups Fixed Merge pull request #31 from lognaume/fb-3-interface\n\nFb 3 interface Comments First working interface with dynamic buttons Merge branch 'master' into fb-3-interface Create buttons dynamically Merge branch 'master' of github.com:lognaume/projet-semestre4 Added the project meister Typo bro Ajout GridPane Commit bidon Test Travis Empty project with Hello World example from Maven Organisation Répart Planning GANTT Merge branch 'master' of github.com:lognaume/projet-semestre2 Merge branch 'master' of github.com:lognaume/projet-semestre2 Merge branch 'master' of github.com:lognaume/projet-semestre2 Merge branch 'master' of github.com:lognaume/projet-semestre2 Merge branch 'cahier_charges' Mockups arrangement Mockups Création documents base Update README.md Implementation of IInstrument, Trumpet and Flute according to specification Transformers done DFS done Application done UpperCase filter done & passing tests File numbering done & passing test getNextLine done & passing tests Labo done Best error management Comments All tests passing V2 working except 1 test Merge remote-tracking branch 'upstream/fb-lab02-v2-tests' into fb-lab02-v2-impl Fb lab02 v2 contrib (#159)\n\n* Implementation V1\r\n\r\n* Added 2 tests\r\n\r\n* Tests for protocol V2\r\n\r\n* Revert \"Added 2 tests\"\r\n\r\nThis reverts commit 243fa30cdd3e2f6a80f1144d72ab038b2701378a.\r\n\r\n* Revert \"Implementation V1\"\r\n\r\nThis reverts commit 4c557752291df3bdd3255726f66b11b93e2ad28d. Merge branch 'master' into fb-lab02-v2-impl Revert \"Implementation V1\"\n\nThis reverts commit 4c557752291df3bdd3255726f66b11b93e2ad28d. Revert \"Added 2 tests\"\n\nThis reverts commit 243fa30cdd3e2f6a80f1144d72ab038b2701378a. Tests for protocol V2 Use static commands Merge remote-tracking branch 'upstream/fb-lab02-v2-tests' into fb-lab02-v2-contrib Added 2 tests Implementation V1 Readme Update config Implementation Leprechaun Comment New test passing Merge remote-tracking branch 'upstream/master' First test passed Planning example Initial commit Merge branch 'master' of github.com:gluthier/GEN-projet Application bidon Gitignore Gitignore Gitignore Rapport Gitignore Merge branch 'master' of github.com:gluthier/GEN-projet gitignore Fonctionnement général terminé Modifications selon retour Miguel Rapport Rapport gitignore Merge branch 'master' of github.com:gluthier/GEN-projet Rapport Gitignore Rename ",
      "nbWordsMessagePerCommit": "3.8"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 343,
        "nbWordsMessage": 1315,
        "nbWordsMessagePerCommit": "3.8"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 15,
        "nbWordsMessage": 61,
        "nbWordsMessagePerCommit": "4.1"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 1,
        "nbWordsMessage": 2,
        "nbWordsMessagePerCommit": "2.0"
      }
    }
  },
  "Bertral": {
    "user": "Bertral",
    "statsGlobal": {
      "nbCommits": 155,
      "nbWordsMessage": 519,
      "messages": "tours infinis arret d'urgence documenté fonctionnel, à documenter, revoir l'arrêt d'urgence (il ne semble pas mettre fin aux threads) seemsgood classe locothread ajoutée bite trajectoire ne plante plus au démarrage gigitnore update init Delete .gitignore Initial commit minor correction in readme Update README.md\n\ndownload link Update README.md Update README.md jar files added project and output files v1 Initial commit Create README.md Create LICENSE mispelling Merge branch 'master' of https://github.com/Bertral/CoR executable ajouté rapport recompilé uml fix Merge branch 'master' of https://github.com/Bertral/CoR présentation + fix uml executable ajouté rapport v1 terminée, ajout du constructeur privé pour la classe colorUtils début rapport cleaning file structure constructeurs ajoutés à l'uml uml terminé début d'uml commenté 50% commenté + refactor ajout d'assets manquants début de commentage et refactoring du spawner terminé, à commenter Refactor terminé, TODO : prisme (nouvelle entité) + doc + fix hitboxes bleh Merge remote-tracking branch 'origin/master' bleh dernière version de CoRe faisant rebondir les tirs modif specs Merge branch 'master' of https://github.com/Bertral/CoR uml clarification du main sprite manquant ajouté pause (SPACEBAR), restart (R), explosions ! version alpha fonctionnelle sprites ajoutés pushé opti des étoiles joueur et mouvement, étoiles en background idée 2 approuvée par l'assistant interface ajoutée Exemple pour la présentation intermédiaire ajouté init Update .gitignore Initial commit Update README.md readme readme done Initial commit trumpet implemented nettoyage et commentaires tous les tests passent uppercase implémenté utils implémenté DFS passe les tests validated ! presque merge impl v2 V1+V2 passent les tests Merge branch 'fb-lab02-v2-tests' of https://github.com/SoftEng-HEIGVD/Teaching-HEIGVD-RES-2017-Labo-02 into v2-impl\n\n# Conflicts:\n#\t.gitignore tests unitaires ajoutés pour le groupe Friant et Stalder (#86)\n\n* Roulette V1 Impl functionnal\r\n\r\n* ???\r\n\r\n* tests unitaires ajoutés\r\n\r\n* Changes, import of the right version protocol... rollback partiel v1 port 2613, ordre de messages de loadstudents dwpoejfowaihgeéiaw Delete QuizRouletteServer-test.iml Delete QuizRouletteServer-code.iml Delete QuizRouletteServer-build.iml added ByeCommandResponse added LoadCommandResponse correction protocole listStudents clientv2 impl Delete RouletteV2GaussianBlursTest.java Delete RouletteV2JulienBrechetTest.java Merge branch 'fb-lab02-v2-tests' of https://github.com/SoftEng-HEIGVD/Teaching-HEIGVD-RES-2017-Labo-02 commenté it just works fonctonnelle, plus qu'à faire le check qui empêche d'entrer une durée supérieure à la taille de la vidéo ui vide terminée bleeeh 2 boutons init Merge branch 'master' of https://github.com/Bertral/Teaching-HEIGVD-RES-2017-Labo-HTTPInfra terminé correction mineure finito Merge branch 'master' of https://github.com/Bertral/Teaching-HEIGVD-RES-2017-Labo-HTTPInfra task4 terminée rapport task 4 task3 report task 2 rapport task1 ajout report.md task3 terminée détail rapport task2 task1 done rendu fuckshitfuckingshittycunt gitignore fix Initial commit refonte pagination/tri/filtre pour optimiser (et adhérer au exigences du prof) correction titre des pages README écrit, plus qu'à rendre commenté, terminé génération, ajout et affichage fonctionnels connexion db fonctionnelle dans docker ! wildfly console toujours inaccessible dans docker fuck you configsuccess.jsp TODO retiré réussi à récupérer un int nottoyage, création des pages de base scripts not found fixed nouveau template, plus qu'à faire tout le reste test journal journal antoine import inutilisé retiré fixed warnings de maven optimisation mineure génération d'anagrammes terminée recherche dans le dico fonctionnelle recherche dans le dico fonctionnelle TST commenté, champs \"Authors : Antoine Friant\" retirés TST implémenté, junit installé Merge remote-tracking branch 'origin/master' modules créés project init Merge branch 'master' of https://github.com/c-meier/HEIG-2017-PDG-WORDOFF init de la liste des outils à utiliser ajout du chat et du système de monaie à la plannif plannif initiale Directives typo Create README.md ",
      "nbWordsMessagePerCommit": "3.3"
    },
    "stats": {
      "C++": {
        "language": "C++",
        "nbCommit": 20,
        "nbWordsMessage": 66,
        "nbWordsMessagePerCommit": "3.3"
      },
      "Java": {
        "language": "Java",
        "nbCommit": 98,
        "nbWordsMessage": 341,
        "nbWordsMessagePerCommit": "3.5"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 7,
        "nbWordsMessage": 11,
        "nbWordsMessagePerCommit": "1.6"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 15,
        "nbWordsMessage": 34,
        "nbWordsMessagePerCommit": "2.3"
      },
      "HTML": {
        "language": "HTML",
        "nbCommit": 15,
        "nbWordsMessage": 67,
        "nbWordsMessagePerCommit": "4.5"
      }
    }
  },
  "Rhod3": {
    "user": "Rhod3",
    "statsGlobal": {
      "nbCommits": 307,
      "nbWordsMessage": 1187,
      "messages": "feur small corrections added modified by Merge branch 'master' of github.com:BasileChatillon/Teaching-HEIGVD-RES-2017-Labo-02 deleted useless import comments all tests for V1 implementation test comment Small corrections and delete useless functions Proper link to access ressources Handle new location of dictionary file New proper location for dictionary file Merge branch 'pdg19_dictionary' of https://github.com/Farenjihn/pdg-heig into pdg19_dictionary Added a way to handle different dictionary language. Also added standart File.separator for the path Simple function to permutate a string Dictionary class implemented, we can check if a word is in the dictionary. Basic Ternary Search Tree implementation Added files containing letters frequency and concrete list of allowed words README clarification correction update Update README-md correction of method for the ranodm generation of groups update modified sender and receiver handling in mail body Merge branch 'master' of github.com:Rhod3/Mail_Spammer working spammer+ Create README.md added group creator, working reading email adresses from file added spam handler added group handler added example data initial commit, mail sender working Merge branch 'master' of github.com:Rhod3/Mail_Spammer gitignore Initial commit more cleaning cleaning pep8 find_games now handles multiple red cartridges find_game now handles stream video input initial file pep8 more tests initial commit Initial commit, basic Android Studio project final commit passing test check.log finally working update correction in the js structure Dockerfiles prototype of auditor.js first prototype for musician.js app More detailed comments File separator + delete some comments more doc doc UpperCase filter ok transformers tests ok application pass tests correction in the DFS explorer Utils pass tests FileNumbering passing tests UpperCaseFilterWriter DFSFileExplorer final commit, not everything is working tests pass created eRemoverStreamProcessor report final update rapport done Traefik ok first try to configure traefik update rapport demo ready report part 1 and 2a personal content ok update report Modified startup script to include ip adress of static and dynamic site as ENV variables correction of apache2-foregrounf to respect the new config methodology Merge branch 'fb-ajax-jquery' into fb-dynamic-configuration step 4 operationnal config-template.php draft step 5b, created required file, not tested yet report for step 4, not functionnal yet Step3c, image apache-reverse-proxy done. WARNING: IP HARDCODED doc step 3b fin du rapport step 2 update rapport exemple students exemple génération de students aléatoire express app example end of video 2b: simple node app demo added report added free css template config Dockerfile Docs Heroku tweak Heroku tweak console.log Heroku tweak ReadMe Cleared debug output Simple ReadMe created Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics-Server Create README.md Added Procfile to fix a bug in Heroku Heroku tweak Fixed some socket hang up bug Heroku prep Eslint small fix Fixed bug in test wip Heroku tweaking Code cleaning Agent can now update file. Commit page now works with pagination Correctly handle pagination for repos fetching Corrected data format Data calculation completed Cleaning Complete data creation Simple data creation Work In Progress, data calculation for all commits Function now handles repo languages Function to get all commits from one user (and test for this function Deleted github-creds Update .gitignore Agent implemented, can now fetch all repos from a user Cleaning node_modules Added gitignore Async with callback(2): simple client.js implementation, passing test Wrote simple client.js test Added mocha, chai and dirty-chai to dev dependencies Initial nodejs structure Initial commit Changed formulation Typo Update README.md Update data.json Update data.json Docs and report Cleaning debug Cleaning and debug More debuging Debug js script Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Some small modifications to be eslint friendly Updated Data 2017-10-22 15:00:51 Updated Data 2017-10-22 14:23:31 Updated Data 2017-10-22 14:21:06 Updated Data 2017-10-22 14:00:47 Updated Data 2017-10-22 12:42:54 Docs + report Updated Data 2017-10-21 14:00:37 Update data.json Updated Data 2017-10-21 13:30:43 UI Improvments Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics UI Fixes Update data.json Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics UI fix Updated Data 2017-10-21 12:47:23 Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Small UI fixes Updated Data 2017-10-21 12:30:16 Updated Data 2017-10-21 12:23:11 Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Changed ignored word for the word cloud Updated Data 2017-10-21 12:11:13 Update data.json Updated Data 2017-10-21 11:57:10 Updated Data 2017-10-21 11:57:05 Updated Data 2017-10-21 11:52:44 Updated Data 2017-10-21 11:31:01 Updated Data 2017-10-21 11:17:10 Updated Data 2017-10-21 10:47:53 Updated Data 2017-10-21 10:20:47 Updated Data 2017-10-21 10:08:41 Updated Data 2017-10-21 09:57:51 Updated Data 2017-10-21 09:43:32 Updated Data 2017-10-21 09:23:16 Updated Data 2017-10-21 09:10:08 Updated Data 2017-10-21 08:27:53 Updated Data 2017-10-21 08:14:53 Updated Data 2017-10-21 07:47:01 Updated Data 2017-10-21 07:34:47 Updated Data 2017-10-21 07:23:39 Updated Data 2017-10-21 07:07:45 Updated Data 2017-10-21 06:44:32 Updated Data 2017-10-21 06:17:35 Updated Data 2017-10-21 05:52:05 Updated Data 2017-10-21 05:26:10 Updated Data 2017-10-21 05:12:02 Updated Data 2017-10-21 04:57:55 Updated Data 2017-10-21 04:31:50 Updated Data 2017-10-21 04:15:47 Updated Data 2017-10-21 04:02:24 Updated Data 2017-10-21 03:48:14 Updated Data 2017-10-21 03:33:20 Updated Data 2017-10-21 03:21:12 Updated Data 2017-10-21 03:05:16 Updated Data 2017-10-21 02:48:59 Updated Data 2017-10-21 02:37:15 Updated Data 2017-10-21 02:23:54 Updated Data 2017-10-21 02:12:50 Updated Data 2017-10-21 01:43:46 Updated Data 2017-10-21 01:27:36 Updated Data 2017-10-21 01:13:35 Updated Data 2017-10-21 00:57:36 Updated Data 2017-10-21 00:50:13 Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Fix Updated Data 2017-10-21 00:40:20 Updated Data 2017-10-21 00:40:10 Merge branches 'master' and 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Fixes word cloud Updated Data 2017-10-21 00:21:26 Updated Data 2017-10-21 00:07:08 Updated Data 2017-10-20 23:48:08 Updated Data 2017-10-20 23:35:01 Updated Data 2017-10-20 23:11:48 Updated Data 2017-10-20 22:57:50 Updated Data 2017-10-20 22:35:42 Updated Data 2017-10-20 22:13:26 Updated Data 2017-10-20 21:59:38 Updated Data 2017-10-20 21:48:14 Updated Data 2017-10-20 21:29:03 Updated Data 2017-10-20 21:05:26 Updated Data 2017-10-20 20:49:01 Updated Data 2017-10-20 20:30:43 Updated Data 2017-10-20 20:13:07 Updated Data 2017-10-20 19:55:46 Updated Data 2017-10-20 19:40:32 Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics First try for word cloud Updated Data 2017-10-20 19:17:56 Updated Data 2017-10-20 19:17:42 Updated Data 2017-10-20 19:05:24 Small fixes v2 Small fixes Merge branch 'master' of github.com:Rhod3/TWEB2017-Github-Analytics Try to only display message stats Updated Data 2017-10-20 18:37:22 Updated Data 2017-10-20 18:12:05 readme Updated Data 2017-10-20 17:57:10 Updated Data 2017-10-20 17:44:55 Updated Data 2017-10-20 17:34:43 Updated Data 2017-10-20 16:06:51 Update data.json Update data.json Updated Data 2017-10-20 08:04:06 Updated Data 2017-10-20 02:35:17 Updated Data 2017-10-19 20:49:47 Updated Data 2017-10-19 17:51:04 Updated Data 2017-10-19 16:25:21 Updated Data 2017-10-19 15:36:53 Updated Data 2017-10-19 15:30:31 Updated Data 2017-10-19 15:12:27 Updated Data 2017-10-19 15:00:24 Updated Data 2017-10-19 14:42:28 Updated Data 2017-10-19 13:36:13 Updated Data 2017-10-19 13:24:35 Updated Data 2017-10-19 12:59:16 Update data.json Update data.json Updated Data 2017-10-19 11:43:40 Updated Data 2017-10-18 15:48:27 Chart should now scale from 0 all the times Fixed bug that displayed old data into chart Updated Data 2017-10-17 17:53:20 Re-added wasadigi Updated Data 2017-10-17 17:37:52 Added user wasadigi to be processed by the crawler Updated Data 2017-10-17 17:33:43 Test with filled data User select and chart WIP14 Onchange function for the select Select should correctly be filled User select and chart WIP13 User select and chart WIP12 User select and chart WIP11 User select and chart WIP10 User select and chart WIP10 User select and chart WIP9 User select and chart WIP8 User select and chart WIP7 User select and chart WIP6 User select and chart WIP5 User select WIP4 User select WIP3 User select v2 Added select creation Visualisation v5 Visualisation v4 Visualisation v3 Visualisation v2 Data visualisation test little cleaning Fix docs Preparation for github.io Preparation for data visualisation Customised template Initial bootstrap template Added simple ReadMe ",
      "nbWordsMessagePerCommit": "3.9"
    },
    "stats": {
      "Java": {
        "language": "Java",
        "nbCommit": 53,
        "nbWordsMessage": 219,
        "nbWordsMessagePerCommit": "4.1"
      },
      "Python": {
        "language": "Python",
        "nbCommit": 9,
        "nbWordsMessage": 23,
        "nbWordsMessagePerCommit": "2.6"
      },
      "JavaScript": {
        "language": "JavaScript",
        "nbCommit": 218,
        "nbWordsMessage": 826,
        "nbWordsMessagePerCommit": "3.8"
      },
      "CSS": {
        "language": "CSS",
        "nbCommit": 26,
        "nbWordsMessage": 118,
        "nbWordsMessagePerCommit": "4.5"
      }
    }
  }
}